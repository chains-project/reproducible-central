public class com.novell.ldapchai.provider.ApacheLdapProviderImpl extends com.novell.ldapchai.provider.AbstractProvider implements com.novell.ldapchai.provider.ChaiProviderImplementor
{
private static final com.novell.ldapchai.util.internal.ChaiLogger LOGGER;
private java.lang.String currentLdapUrl;
private org.apache.directory.ldap.client.api.LdapConnection connection;
void <init>()
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: void <init>()>();
return;
}
public java.lang.Object getConnectionObject() throws java.lang.Exception
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
return null;
}
public java.lang.String getCurrentConnectionURL()
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
return null;
}
public java.lang.String toString()
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 = specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: java.lang.String toString()>();
return v1;
}
public void close()
{
org.apache.directory.ldap.client.api.LdapConnection v1;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.io.IOException v2;
java.util.function.Supplier v4;
com.novell.ldapchai.util.internal.ChaiLogger v3;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: void close()>();
label1:
v1 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
interfaceinvoke v1.<org.apache.directory.ldap.client.api.LdapConnection: void close()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
v3 = <com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v4 = staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl$lambda_close_0__108: java.util.function.Supplier bootstrap$(java.io.IOException)>(v2);
virtualinvoke v3.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v4);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()
{
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 = specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: com.novell.ldapchai.provider.ChaiConfiguration getChaiConfiguration()>();
return v1;
}
public com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState getConnectionState()
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState v1;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 = specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: com.novell.ldapchai.provider.ChaiProviderImplementor$ConnectionState getConnectionState()>();
return v1;
}
public void init(com.novell.ldapchai.provider.ChaiConfiguration, com.novell.ldapchai.provider.ChaiProviderFactory) throws com.novell.ldapchai.exception.ChaiUnavailableException
{
javax.net.ssl.X509TrustManager[] v20, v21;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.net.URI v6;
boolean v11, v14, v32;
java.lang.Exception v17, v22, v36;
org.apache.directory.ldap.client.api.LdapConnectionConfig v7;
java.util.List v3;
org.apache.directory.ldap.client.api.LdapNetworkConnection v25;
com.novell.ldapchai.exception.ChaiUnavailableException v33, v35, v38;
com.novell.ldapchai.util.internal.ChaiLogger v18, v23;
java.lang.Throwable v30;
com.novell.ldapchai.provider.AbstractProvider$PromiscuousTrustManager v15;
java.util.function.Supplier v19, v24;
com.novell.ldapchai.provider.ChaiProviderFactory v2;
int v9;
java.lang.String v10, v13, v27, v29, v31, v37, v5, v8;
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ChaiSetting v12, v26, v28;
com.novell.ldapchai.exception.ChaiError v34, v39;
javax.net.ssl.TrustManager[] v16;
java.lang.Object v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
v2 := @parameter1: com.novell.ldapchai.provider.ChaiProviderFactory;
v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.ChaiConfiguration chaiConfig> = v1;
specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: void init(com.novell.ldapchai.provider.ChaiConfiguration,com.novell.ldapchai.provider.ChaiProviderFactory)>(v1, v2);
v3 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.List bindURLsAsList()>();
v4 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(0);
v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.lang.String currentLdapUrl> = v4;
v5 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.lang.String currentLdapUrl>;
v6 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v5);
v7 = new org.apache.directory.ldap.client.api.LdapConnectionConfig;
specialinvoke v7.<org.apache.directory.ldap.client.api.LdapConnectionConfig: void <init>()>();
v8 = virtualinvoke v6.<java.net.URI: java.lang.String getHost()>();
virtualinvoke v7.<org.apache.directory.ldap.client.api.LdapConnectionConfig: void setLdapHost(java.lang.String)>(v8);
v9 = virtualinvoke v6.<java.net.URI: int getPort()>();
virtualinvoke v7.<org.apache.directory.ldap.client.api.LdapConnectionConfig: void setLdapPort(int)>(v9);
v10 = virtualinvoke v6.<java.net.URI: java.lang.String getScheme()>();
v11 = virtualinvoke v10.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("ldaps");
if v11 == 0 goto label08;
virtualinvoke v7.<org.apache.directory.ldap.client.api.LdapConnectionConfig: void setUseSsl(boolean)>(1);
v12 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting PROMISCUOUS_SSL>;
v13 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v12);
v14 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(v13);
if v14 == 0 goto label04;
label01:
v15 = new com.novell.ldapchai.provider.AbstractProvider$PromiscuousTrustManager;
specialinvoke v15.<com.novell.ldapchai.provider.AbstractProvider$PromiscuousTrustManager: void <init>()>();
v16 = newarray (javax.net.ssl.TrustManager)[1];
v16[0] = v15;
virtualinvoke v7.<org.apache.directory.ldap.client.api.LdapConnectionConfig: void setTrustManagers(javax.net.ssl.TrustManager[])>(v16);
label02:
goto label08;
label03:
v17 := @caughtexception;
v18 = <com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v19 = staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl$lambda_init_1__110: java.util.function.Supplier bootstrap$(java.lang.Exception)>(v17);
virtualinvoke v18.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v19);
goto label08;
label04:
v20 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] getTrustManager()>();
if v20 == null goto label08;
label05:
v21 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] getTrustManager()>();
virtualinvoke v7.<org.apache.directory.ldap.client.api.LdapConnectionConfig: void setTrustManagers(javax.net.ssl.TrustManager[])>(v21);
label06:
goto label08;
label07:
v22 := @caughtexception;
v23 = <com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER>;
v24 = staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl$lambda_init_2__109: java.util.function.Supplier bootstrap$(java.lang.Exception)>(v22);
virtualinvoke v23.<com.novell.ldapchai.util.internal.ChaiLogger: void error(java.util.function.Supplier)>(v24);
label08:
v25 = new org.apache.directory.ldap.client.api.LdapNetworkConnection;
specialinvoke v25.<org.apache.directory.ldap.client.api.LdapNetworkConnection: void <init>(org.apache.directory.ldap.client.api.LdapConnectionConfig)>(v7);
interfaceinvoke v25.<org.apache.directory.ldap.client.api.LdapConnection: boolean connect()>();
v26 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_PASSWORD>;
v27 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v26);
v28 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_DN>;
v29 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.lang.String getSetting(com.novell.ldapchai.provider.ChaiSetting)>(v28);
interfaceinvoke v25.<org.apache.directory.ldap.client.api.LdapConnection: void bind(java.lang.String,java.lang.String)>(v29, v27);
label09:
goto label13;
label10:
v30 := @caughtexception;
v31 = virtualinvoke v30.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v32 = virtualinvoke v31.<java.lang.String: boolean contains(java.lang.CharSequence)>("Cannot connect on the server");
if v32 == 0 goto label11;
v33 = new com.novell.ldapchai.exception.ChaiUnavailableException;
v34 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError COMMUNICATION>;
specialinvoke v33.<com.novell.ldapchai.exception.ChaiUnavailableException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.Throwable)>(v31, v34, 0, 0, v30);
throw v33;
label11:
v35 = staticinvoke <com.novell.ldapchai.exception.ChaiUnavailableException: com.novell.ldapchai.exception.ChaiUnavailableException forErrorMessage(java.lang.String,java.lang.Throwable)>(v31, v30);
throw v35;
label12:
v36 := @caughtexception;
virtualinvoke v36.<java.lang.Exception: void printStackTrace()>();
v37 = virtualinvoke v36.<java.lang.Exception: java.lang.String getMessage()>();
v38 = new com.novell.ldapchai.exception.ChaiUnavailableException;
v39 = <com.novell.ldapchai.exception.ChaiError: com.novell.ldapchai.exception.ChaiError UNKNOWN>;
specialinvoke v38.<com.novell.ldapchai.exception.ChaiUnavailableException: void <init>(java.lang.String,com.novell.ldapchai.exception.ChaiError,boolean,boolean,java.lang.Throwable)>(v37, v39, 0, 0, v36);
throw v38;
label13:
v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection> = v25;
return;
catch java.lang.Exception from label01 to label02 with label03;
catch java.lang.Exception from label05 to label06 with label07;
catch org.apache.directory.api.ldap.model.exception.LdapException from label08 to label09 with label10;
catch java.lang.Exception from label08 to label09 with label12;
}
protected void activityPreCheck()
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: void activityPreCheck()>();
return;
}
public boolean errorIsRetryable(java.lang.Exception)
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.Exception v1;
boolean v2;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.Exception;
v2 = specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: boolean errorIsRetryable(java.lang.Exception)>(v1);
return v2;
}
protected void preCheckExtendedOperation(javax.naming.ldap.ExtendedRequest) throws com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
javax.naming.ldap.ExtendedRequest v1;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: javax.naming.ldap.ExtendedRequest;
specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: void preCheckExtendedOperation(javax.naming.ldap.ExtendedRequest)>(v1);
return;
}
protected void cacheExtendedOperationException(javax.naming.ldap.ExtendedRequest, java.lang.Exception) throws com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
javax.naming.ldap.ExtendedRequest v1;
java.lang.Exception v2;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: javax.naming.ldap.ExtendedRequest;
v2 := @parameter1: java.lang.Exception;
specialinvoke v0.<com.novell.ldapchai.provider.AbstractProvider: void cacheExtendedOperationException(javax.naming.ldap.ExtendedRequest,java.lang.Exception)>(v1, v2);
return;
}
public boolean compareStringAttribute(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v7;
org.apache.directory.ldap.client.api.LdapConnection v5;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v2, v3, v8;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v4;
com.novell.ldapchai.exception.ChaiOperationException v9;
boolean v6;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v4 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v4.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: boolean compareStringAttribute(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
label1:
v5 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v6 = interfaceinvoke v5.<org.apache.directory.ldap.client.api.LdapConnection: boolean compare(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = virtualinvoke v7.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v9 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v8, v7);
throw v9;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label2 with label3;
}
public void createEntry(java.lang.String, java.lang.String, java.util.Map) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.util.Map v3;
java.util.Set v5;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Map;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v4 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v4.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void createEntry(java.lang.String,java.lang.String,java.util.Map)>(v1, v2, v3);
v5 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v2);
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void createEntry(java.lang.String,java.util.Set,java.util.Map)>(v1, v5, v3);
return;
}
public void createEntry(java.lang.String, java.util.Set, java.util.Map) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v20;
org.apache.directory.ldap.client.api.LdapConnection v18;
org.apache.directory.api.ldap.model.entry.DefaultEntry v6;
java.lang.String[] v10, v17;
java.util.Map v3;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v21;
com.novell.ldapchai.exception.ChaiOperationException v22;
boolean v13, v8;
java.util.Iterator v12, v7;
java.util.Set v11, v2;
org.apache.directory.api.ldap.model.message.AddResponse v19;
org.apache.directory.api.ldap.model.message.AddRequestImpl v5;
java.lang.Object v14, v15, v16, v9;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: java.util.Map;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v4 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v4.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void createEntry(java.lang.String,java.util.Set,java.util.Map)>(v1, v2, v3);
label1:
v5 = new org.apache.directory.api.ldap.model.message.AddRequestImpl;
specialinvoke v5.<org.apache.directory.api.ldap.model.message.AddRequestImpl: void <init>()>();
v6 = new org.apache.directory.api.ldap.model.entry.DefaultEntry;
specialinvoke v6.<org.apache.directory.api.ldap.model.entry.DefaultEntry: void <init>()>();
interfaceinvoke v6.<org.apache.directory.api.ldap.model.entry.Entry: void setDn(java.lang.String)>(v1);
v7 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = newarray (java.lang.String)[1];
v10[0] = v9;
interfaceinvoke v6.<org.apache.directory.api.ldap.model.entry.Entry: org.apache.directory.api.ldap.model.entry.Entry add(java.lang.String,java.lang.String[])>("objectClass", v10);
goto label2;
label3:
v11 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v12 = interfaceinvoke v11.<java.util.Set: java.util.Iterator iterator()>();
label4:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label5;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v16 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
v17 = newarray (java.lang.String)[1];
v17[0] = v16;
interfaceinvoke v6.<org.apache.directory.api.ldap.model.entry.Entry: org.apache.directory.api.ldap.model.entry.Entry add(java.lang.String,java.lang.String[])>(v15, v17);
goto label4;
label5:
v18 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v19 = interfaceinvoke v18.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.AddResponse add(org.apache.directory.api.ldap.model.message.AddRequest)>(v5);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v19);
label6:
goto label8;
label7:
v20 := @caughtexception;
v21 = virtualinvoke v20.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v22 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v21, v20);
throw v22;
label8:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label6 with label7;
}
public void renameEntry(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v12;
org.apache.directory.ldap.client.api.LdapConnection v10;
org.apache.directory.api.ldap.model.name.Dn v5, v8;
java.lang.String[] v6, v9;
org.apache.directory.api.ldap.model.message.ModifyDnResponse v11;
org.apache.directory.api.ldap.model.name.Rdn v7;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v13, v2, v3;
com.novell.ldapchai.exception.ChaiOperationException v14;
org.apache.directory.api.ldap.model.message.ModifyDnRequestImpl v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
label1:
v4 = new org.apache.directory.api.ldap.model.message.ModifyDnRequestImpl;
specialinvoke v4.<org.apache.directory.api.ldap.model.message.ModifyDnRequestImpl: void <init>()>();
v5 = new org.apache.directory.api.ldap.model.name.Dn;
v6 = newarray (java.lang.String)[1];
v6[0] = v1;
specialinvoke v5.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v6);
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.ModifyDnRequest: org.apache.directory.api.ldap.model.message.ModifyDnRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v5);
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.ModifyDnRequest: org.apache.directory.api.ldap.model.message.ModifyDnRequest setDeleteOldRdn(boolean)>(1);
v7 = new org.apache.directory.api.ldap.model.name.Rdn;
specialinvoke v7.<org.apache.directory.api.ldap.model.name.Rdn: void <init>(java.lang.String)>(v2);
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.ModifyDnRequest: org.apache.directory.api.ldap.model.message.ModifyDnRequest setNewRdn(org.apache.directory.api.ldap.model.name.Rdn)>(v7);
v8 = new org.apache.directory.api.ldap.model.name.Dn;
v9 = newarray (java.lang.String)[1];
v9[0] = v3;
specialinvoke v8.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v9);
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.ModifyDnRequest: org.apache.directory.api.ldap.model.message.ModifyDnRequest setNewSuperior(org.apache.directory.api.ldap.model.name.Dn)>(v8);
v10 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v11 = interfaceinvoke v10.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyDnResponse modifyDn(org.apache.directory.api.ldap.model.message.ModifyDnRequest)>(v4);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v11);
label2:
goto label4;
label3:
v12 := @caughtexception;
v13 = virtualinvoke v12.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v14 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v13, v12);
throw v14;
label4:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label2 with label3;
}
public void deleteEntry(java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v8;
org.apache.directory.ldap.client.api.LdapConnection v6;
org.apache.directory.api.ldap.model.message.DeleteRequestImpl v3;
org.apache.directory.api.ldap.model.name.Dn v4;
java.lang.String[] v5;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v9;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v2;
org.apache.directory.api.ldap.model.message.DeleteResponse v7;
com.novell.ldapchai.exception.ChaiOperationException v10;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v2 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v2.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void deleteEntry(java.lang.String)>(v1);
label1:
v3 = new org.apache.directory.api.ldap.model.message.DeleteRequestImpl;
specialinvoke v3.<org.apache.directory.api.ldap.model.message.DeleteRequestImpl: void <init>()>();
v4 = new org.apache.directory.api.ldap.model.name.Dn;
v5 = newarray (java.lang.String)[1];
v5[0] = v1;
specialinvoke v4.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v5);
interfaceinvoke v3.<org.apache.directory.api.ldap.model.message.DeleteRequest: org.apache.directory.api.ldap.model.message.DeleteRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v4);
v6 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v7 = interfaceinvoke v6.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.DeleteResponse delete(org.apache.directory.api.ldap.model.message.DeleteRequest)>(v3);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v7);
label2:
goto label4;
label3:
v8 := @caughtexception;
v9 = virtualinvoke v8.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v10 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v9, v8);
throw v10;
label4:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label2 with label3;
}
public void deleteStringAttributeValue(java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v16;
org.apache.directory.ldap.client.api.LdapConnection v14;
org.apache.directory.api.ldap.model.entry.ModificationOperation v11, v9;
org.apache.directory.api.ldap.model.entry.DefaultModification v10, v8;
java.lang.String[] v13, v7;
org.apache.directory.api.ldap.model.entry.DefaultAttribute v12;
org.apache.directory.api.ldap.model.message.ModifyResponse v15;
org.apache.directory.api.ldap.model.message.ModifyRequestImpl v5;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v17, v2, v3;
com.novell.ldapchai.exception.ChaiOperationException v18;
org.apache.directory.api.ldap.model.name.Dn v6;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v4 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v4.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void deleteStringAttributeValue(java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3);
label1:
v5 = new org.apache.directory.api.ldap.model.message.ModifyRequestImpl;
specialinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequestImpl: void <init>()>();
v6 = new org.apache.directory.api.ldap.model.name.Dn;
v7 = newarray (java.lang.String)[1];
v7[0] = v1;
specialinvoke v6.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v7);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v6);
if v3 != null goto label2;
v8 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
v9 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REMOVE_ATTRIBUTE>;
specialinvoke v8.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>(org.apache.directory.api.ldap.model.entry.ModificationOperation,java.lang.String)>(v9, v2);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v8);
goto label3;
label2:
v10 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v10.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
v11 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REMOVE_ATTRIBUTE>;
interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v11);
v12 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
v13 = newarray (java.lang.String)[1];
v13[0] = v3;
specialinvoke v12.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,java.lang.String[])>(v2, v13);
interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v12);
label3:
v14 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v15 = interfaceinvoke v14.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyResponse modify(org.apache.directory.api.ldap.model.message.ModifyRequest)>(v5);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v15);
label4:
goto label6;
label5:
v16 := @caughtexception;
v17 = virtualinvoke v16.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v18 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v17, v16);
throw v18;
label6:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label4 with label5;
}
public javax.naming.ldap.ExtendedResponse extendedOperation(javax.naming.ldap.ExtendedRequest) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v6;
org.apache.directory.ldap.client.api.LdapConnection v3;
javax.naming.ldap.ExtendedRequest v1;
com.novell.ldapchai.provider.ApacheLdapProviderImpl$2 v5;
org.apache.directory.api.ldap.model.message.ExtendedResponse v4;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v7;
com.novell.ldapchai.provider.ApacheLdapProviderImpl$1 v2;
com.novell.ldapchai.exception.ChaiOperationException v8;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: javax.naming.ldap.ExtendedRequest;
v2 = new com.novell.ldapchai.provider.ApacheLdapProviderImpl$1;
specialinvoke v2.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$1: void <init>(com.novell.ldapchai.provider.ApacheLdapProviderImpl,javax.naming.ldap.ExtendedRequest)>(v0, v1);
label1:
v3 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v4 = interfaceinvoke v3.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ExtendedResponse extended(org.apache.directory.api.ldap.model.message.ExtendedRequest)>(v2);
v5 = new com.novell.ldapchai.provider.ApacheLdapProviderImpl$2;
specialinvoke v5.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$2: void <init>(com.novell.ldapchai.provider.ApacheLdapProviderImpl,org.apache.directory.api.ldap.model.message.ExtendedResponse)>(v0, v4);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = virtualinvoke v6.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v8 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v7, v6);
throw v8;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label2 with label3;
}
public com.novell.ldapchai.provider.ProviderStatistics getProviderStatistics()
{
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
return null;
}
public byte[][] readMultiByteAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
byte[] v10;
byte[][] v6;
java.util.List v4;
int v5, v7, v8;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.Object v9;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v3;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v3.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.lang.String readStringAttribute(java.lang.String,java.lang.String)>(v1, v2);
v4 = specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.util.List readMultiAttribute(java.lang.String,java.lang.String)>(v1, v2);
if v4 != null goto label1;
return null;
label1:
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = newarray (byte[])[v5];
v7 = 0;
label2:
v8 = interfaceinvoke v4.<java.util.List: int size()>();
if v7 >= v8 goto label3;
v9 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(v7);
v10 = virtualinvoke v9.<org.apache.directory.api.ldap.model.entry.Value: byte[] getBytes()>();
v6[v7] = v10;
v7 = v7 + 1;
goto label2;
label3:
return v6;
}
public java.util.Set readMultiStringAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.util.Iterator v7;
java.util.Set v11, v5;
java.util.List v4;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.Object v9;
java.lang.String v1, v10, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v3;
java.util.LinkedHashSet v6;
boolean v8;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v3.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.lang.String readStringAttribute(java.lang.String,java.lang.String)>(v1, v2);
v4 = specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.util.List readMultiAttribute(java.lang.String,java.lang.String)>(v1, v2);
if v4 != null goto label1;
v5 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v5;
label1:
v6 = new java.util.LinkedHashSet;
specialinvoke v6.<java.util.LinkedHashSet: void <init>()>();
v7 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v9.<org.apache.directory.api.ldap.model.entry.Value: java.lang.String getString()>();
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v10);
goto label2;
label3:
v11 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v6);
return v11;
}
private java.util.List readMultiAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.Throwable v15;
org.apache.directory.ldap.client.api.LdapConnection v3;
java.lang.String[] v5;
java.util.ArrayList v9;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v16, v2;
org.apache.directory.api.ldap.model.message.SearchScope v4;
com.novell.ldapchai.exception.ChaiOperationException v17;
boolean v12;
java.util.Iterator v11, v7;
java.util.List v14;
org.apache.directory.api.ldap.model.cursor.EntryCursor v6;
org.apache.directory.api.ldap.model.entry.Attribute v10;
java.lang.Object v13, v8;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
label1:
v3 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v4 = <org.apache.directory.api.ldap.model.message.SearchScope: org.apache.directory.api.ldap.model.message.SearchScope OBJECT>;
v5 = newarray (java.lang.String)[1];
v5[0] = v2;
v6 = interfaceinvoke v3.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.cursor.EntryCursor search(java.lang.String,java.lang.String,org.apache.directory.api.ldap.model.message.SearchScope,java.lang.String[])>(v1, "(objectClass=*)", v4, v5);
v7 = interfaceinvoke v6.<org.apache.directory.api.ldap.model.cursor.EntryCursor: java.util.Iterator iterator()>();
v8 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v9 = new java.util.ArrayList;
specialinvoke v9.<java.util.ArrayList: void <init>()>();
v10 = interfaceinvoke v8.<org.apache.directory.api.ldap.model.entry.Entry: org.apache.directory.api.ldap.model.entry.Attribute get(java.lang.String)>(v2);
if v10 != null goto label3;
label2:
return null;
label3:
v11 = interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Attribute: java.util.Iterator iterator()>();
label4:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label5;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
if v13 == null goto label4;
interfaceinvoke v9.<java.util.List: boolean add(java.lang.Object)>(v13);
goto label4;
label5:
v14 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v9);
label6:
return v14;
label7:
v15 := @caughtexception;
v16 = virtualinvoke v15.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v17 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v16, v15);
throw v17;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label2 with label7;
catch org.apache.directory.api.ldap.model.exception.LdapException from label3 to label6 with label7;
}
public java.lang.String readStringAttribute(java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v12;
org.apache.directory.ldap.client.api.LdapConnection v4;
java.util.Iterator v8;
java.lang.String[] v6;
org.apache.directory.api.ldap.model.cursor.EntryCursor v7;
org.apache.directory.api.ldap.model.entry.Attribute v10;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.Object v9;
java.lang.String v1, v11, v13, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v3;
org.apache.directory.api.ldap.model.message.SearchScope v5;
com.novell.ldapchai.exception.ChaiOperationException v14;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v3.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.lang.String readStringAttribute(java.lang.String,java.lang.String)>(v1, v2);
label1:
v4 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v5 = <org.apache.directory.api.ldap.model.message.SearchScope: org.apache.directory.api.ldap.model.message.SearchScope OBJECT>;
v6 = newarray (java.lang.String)[1];
v6[0] = v2;
v7 = interfaceinvoke v4.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.cursor.EntryCursor search(java.lang.String,java.lang.String,org.apache.directory.api.ldap.model.message.SearchScope,java.lang.String[])>(v1, "(objectClass=*)", v5, v6);
v8 = interfaceinvoke v7.<org.apache.directory.api.ldap.model.cursor.EntryCursor: java.util.Iterator iterator()>();
v9 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<org.apache.directory.api.ldap.model.entry.Entry: org.apache.directory.api.ldap.model.entry.Attribute get(java.lang.String)>(v2);
if v10 != null goto label2;
v11 = null;
goto label3;
label2:
v11 = interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Attribute: java.lang.String getString()>();
label3:
return v11;
label4:
v12 := @caughtexception;
v13 = virtualinvoke v12.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v14 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v13, v12);
throw v14;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label3 with label4;
}
public java.util.Map readStringAttributes(java.lang.String, java.util.Set) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v18;
org.apache.directory.ldap.client.api.LdapConnection v4;
java.lang.Object[] v7;
java.lang.String[] v6;
java.util.LinkedHashMap v12;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v16, v17, v19;
org.apache.directory.api.ldap.model.message.SearchScope v5;
com.novell.ldapchai.exception.ChaiOperationException v20;
boolean v14;
java.util.Iterator v13, v9;
java.util.Collection v11;
java.util.Set v2;
org.apache.directory.api.ldap.model.cursor.EntryCursor v8;
java.lang.Object v10, v15;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v3;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v3.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.util.Map readStringAttributes(java.lang.String,java.util.Set)>(v1, v2);
label1:
v4 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v5 = <org.apache.directory.api.ldap.model.message.SearchScope: org.apache.directory.api.ldap.model.message.SearchScope OBJECT>;
v6 = newarray (java.lang.String)[0];
v7 = interfaceinvoke v2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v6);
v8 = interfaceinvoke v4.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.cursor.EntryCursor search(java.lang.String,java.lang.String,org.apache.directory.api.ldap.model.message.SearchScope,java.lang.String[])>(v1, "(objectClass=*)", v5, v7);
v9 = interfaceinvoke v8.<org.apache.directory.api.ldap.model.cursor.EntryCursor: java.util.Iterator iterator()>();
v10 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Entry: java.util.Collection getAttributes()>();
v12 = new java.util.LinkedHashMap;
specialinvoke v12.<java.util.LinkedHashMap: void <init>()>();
v13 = interfaceinvoke v11.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label3;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = interfaceinvoke v15.<org.apache.directory.api.ldap.model.entry.Attribute: java.lang.String getId()>();
v17 = interfaceinvoke v15.<org.apache.directory.api.ldap.model.entry.Attribute: java.lang.String getString()>();
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v17);
goto label2;
label3:
return v12;
label4:
v18 := @caughtexception;
v19 = virtualinvoke v18.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v20 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v19, v18);
throw v20;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label3 with label4;
}
public void replaceStringAttribute(java.lang.String, java.lang.String, java.lang.String, java.lang.String) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
org.apache.directory.api.ldap.model.entry.Value v6, v7;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v2, v3, v4;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v5;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v5.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void replaceStringAttribute(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v1, v2, v3, v4);
v6 = new org.apache.directory.api.ldap.model.entry.Value;
specialinvoke v6.<org.apache.directory.api.ldap.model.entry.Value: void <init>(java.lang.String)>(v3);
v7 = new org.apache.directory.api.ldap.model.entry.Value;
specialinvoke v7.<org.apache.directory.api.ldap.model.entry.Value: void <init>(java.lang.String)>(v4);
specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void replaceAttributeImpl(java.lang.String,java.lang.String,org.apache.directory.api.ldap.model.entry.Value,org.apache.directory.api.ldap.model.entry.Value)>(v1, v2, v6, v7);
return;
}
private void replaceAttributeImpl(java.lang.String, java.lang.String, org.apache.directory.api.ldap.model.entry.Value, org.apache.directory.api.ldap.model.entry.Value) throws com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.Throwable v18;
org.apache.directory.ldap.client.api.LdapConnection v16;
org.apache.directory.api.ldap.model.entry.ModificationOperation v13, v9;
org.apache.directory.api.ldap.model.entry.DefaultModification v12, v8;
java.lang.String[] v7;
org.apache.directory.api.ldap.model.entry.DefaultAttribute v10, v14;
org.apache.directory.api.ldap.model.message.ModifyResponse v17;
org.apache.directory.api.ldap.model.message.ModifyRequestImpl v5;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v19, v2;
com.novell.ldapchai.exception.ChaiOperationException v20;
org.apache.directory.api.ldap.model.entry.Value v3, v4;
org.apache.directory.api.ldap.model.name.Dn v6;
org.apache.directory.api.ldap.model.entry.Value[] v11, v15;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.apache.directory.api.ldap.model.entry.Value;
v4 := @parameter3: org.apache.directory.api.ldap.model.entry.Value;
label1:
v5 = new org.apache.directory.api.ldap.model.message.ModifyRequestImpl;
specialinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequestImpl: void <init>()>();
v6 = new org.apache.directory.api.ldap.model.name.Dn;
v7 = newarray (java.lang.String)[1];
v7[0] = v1;
specialinvoke v6.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v7);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v6);
v8 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v8.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
v9 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REMOVE_ATTRIBUTE>;
interfaceinvoke v8.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v9);
v10 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
v11 = newarray (org.apache.directory.api.ldap.model.entry.Value)[1];
v11[0] = v3;
specialinvoke v10.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,org.apache.directory.api.ldap.model.entry.Value[])>(v2, v11);
interfaceinvoke v8.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v10);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v8);
v12 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v12.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
v13 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation ADD_ATTRIBUTE>;
interfaceinvoke v12.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v13);
v14 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
v15 = newarray (org.apache.directory.api.ldap.model.entry.Value)[1];
v15[0] = v4;
specialinvoke v14.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,org.apache.directory.api.ldap.model.entry.Value[])>(v2, v15);
interfaceinvoke v12.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v14);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v12);
v16 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v17 = interfaceinvoke v16.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyResponse modify(org.apache.directory.api.ldap.model.message.ModifyRequest)>(v5);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v17);
label2:
goto label4;
label3:
v18 := @caughtexception;
v19 = virtualinvoke v18.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v20 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v19, v18);
throw v20;
label4:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label2 with label3;
}
public java.util.Map search(java.lang.String, com.novell.ldapchai.util.SearchHelper) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.util.SearchHelper v2;
java.util.LinkedHashMap v12, v5;
java.util.Map v21, v22, v4;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1;
boolean v15, v8;
java.util.Iterator v14, v19, v7;
java.util.Set v13, v6;
java.lang.Object v10, v11, v16, v17, v18, v20, v9;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v3;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v3.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.util.Map search(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v1, v2);
v4 = specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.util.Map searchImpl(java.lang.String,com.novell.ldapchai.util.SearchHelper,boolean)>(v1, v2, 0);
v5 = new java.util.LinkedHashMap;
specialinvoke v5.<java.util.LinkedHashMap: void <init>()>();
v6 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label4;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
v11 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
v12 = new java.util.LinkedHashMap;
specialinvoke v12.<java.util.LinkedHashMap: void <init>()>();
v13 = interfaceinvoke v11.<java.util.Map: java.util.Set entrySet()>();
v14 = interfaceinvoke v13.<java.util.Set: java.util.Iterator iterator()>();
label2:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label3;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getKey()>();
v18 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getValue()>();
v19 = interfaceinvoke v18.<java.util.List: java.util.Iterator iterator()>();
v20 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v17, v20);
goto label2;
label3:
v21 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v12);
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v21);
goto label1;
label4:
v22 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v5);
return v22;
}
public java.util.Map search(java.lang.String, java.lang.String, java.util.Set, com.novell.ldapchai.provider.SearchScope) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.util.SearchHelper v6;
java.util.Set v3;
java.util.Map v7;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v5;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: com.novell.ldapchai.provider.SearchScope;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v5.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.util.Map search(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v1, v2, v3, v4);
v6 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v6.<com.novell.ldapchai.util.SearchHelper: void <init>()>();
virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: void setFilter(java.lang.String)>(v2);
virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: void setAttributes(java.util.Collection)>(v3);
virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: void setSearchScope(com.novell.ldapchai.provider.SearchScope)>(v4);
v7 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.util.Map search(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v1, v6);
return v7;
}
public java.util.Map searchMultiValues(java.lang.String, com.novell.ldapchai.util.SearchHelper) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
com.novell.ldapchai.util.SearchHelper v2;
java.util.Map v4;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v3;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v3 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v3.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.util.Map searchMultiValues(java.lang.String,com.novell.ldapchai.util.SearchHelper)>(v1, v2);
v4 = specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.util.Map searchImpl(java.lang.String,com.novell.ldapchai.util.SearchHelper,boolean)>(v1, v2, 1);
return v4;
}
public java.util.Map searchMultiValues(java.lang.String, java.lang.String, java.util.Set, com.novell.ldapchai.provider.SearchScope) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
com.novell.ldapchai.util.SearchHelper v6;
java.util.Set v3;
java.util.Map v7;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v5;
com.novell.ldapchai.provider.SearchScope v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: com.novell.ldapchai.provider.SearchScope;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v5.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: java.util.Map searchMultiValues(java.lang.String,java.lang.String,java.util.Set,com.novell.ldapchai.provider.SearchScope)>(v1, v2, v3, v4);
v6 = new com.novell.ldapchai.util.SearchHelper;
specialinvoke v6.<com.novell.ldapchai.util.SearchHelper: void <init>()>();
virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: void setFilter(java.lang.String)>(v2);
virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: void setAttributes(java.util.Collection)>(v3);
virtualinvoke v6.<com.novell.ldapchai.util.SearchHelper: void setSearchScope(com.novell.ldapchai.provider.SearchScope)>(v4);
v7 = specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: java.util.Map searchImpl(java.lang.String,com.novell.ldapchai.util.SearchHelper,boolean)>(v1, v6, 1);
return v7;
}
private java.util.Map searchImpl(java.lang.String, com.novell.ldapchai.util.SearchHelper, boolean) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.util.Map v33, v34;
org.apache.directory.api.ldap.model.message.SearchRequestImpl v4;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
boolean v15, v21, v26, v3;
org.apache.directory.api.ldap.model.name.Dn v17, v5;
java.util.List v32;
com.novell.ldapchai.provider.SearchScope v8;
java.lang.Throwable v35;
org.apache.directory.ldap.client.api.LdapConnection v12;
com.novell.ldapchai.util.SearchHelper v2;
java.lang.String[] v6;
java.util.HashMap v19;
java.util.ArrayList v24;
java.util.LinkedHashMap v14;
int v10, v11;
java.lang.String v1, v18, v23, v28, v31, v36, v7;
org.apache.directory.api.ldap.model.entry.Entry v16;
org.apache.directory.api.ldap.model.message.SearchScope v9;
com.novell.ldapchai.exception.ChaiOperationException v37;
java.util.Iterator v20, v25, v29;
org.apache.directory.api.ldap.model.cursor.SearchCursor v13;
java.lang.Object v22, v27, v30;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.novell.ldapchai.util.SearchHelper;
v3 := @parameter2: boolean;
label01:
v4 = new org.apache.directory.api.ldap.model.message.SearchRequestImpl;
specialinvoke v4.<org.apache.directory.api.ldap.model.message.SearchRequestImpl: void <init>()>();
v5 = new org.apache.directory.api.ldap.model.name.Dn;
v6 = newarray (java.lang.String)[1];
v6[0] = v1;
specialinvoke v5.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v6);
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.SearchRequest: org.apache.directory.api.ldap.model.message.SearchRequest setBase(org.apache.directory.api.ldap.model.name.Dn)>(v5);
v7 = virtualinvoke v2.<com.novell.ldapchai.util.SearchHelper: java.lang.String getFilter()>();
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.SearchRequest: org.apache.directory.api.ldap.model.message.SearchRequest setFilter(java.lang.String)>(v7);
v8 = virtualinvoke v2.<com.novell.ldapchai.util.SearchHelper: com.novell.ldapchai.provider.SearchScope getSearchScope()>();
v9 = staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.api.ldap.model.message.SearchScope figureSearchScope(com.novell.ldapchai.provider.SearchScope)>(v8);
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.SearchRequest: org.apache.directory.api.ldap.model.message.SearchRequest setScope(org.apache.directory.api.ldap.model.message.SearchScope)>(v9);
v10 = virtualinvoke v2.<com.novell.ldapchai.util.SearchHelper: int getMaxResults()>();
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.SearchRequest: org.apache.directory.api.ldap.model.message.SearchRequest setSizeLimit(long)>(v10);
v11 = virtualinvoke v2.<com.novell.ldapchai.util.SearchHelper: int getTimeLimit()>();
interfaceinvoke v4.<org.apache.directory.api.ldap.model.message.SearchRequest: org.apache.directory.api.ldap.model.message.SearchRequest setTimeLimit(int)>(v11);
v12 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v13 = interfaceinvoke v12.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.cursor.SearchCursor search(org.apache.directory.api.ldap.model.message.SearchRequest)>(v4);
v14 = new java.util.LinkedHashMap;
specialinvoke v14.<java.util.LinkedHashMap: void <init>()>();
label02:
v15 = interfaceinvoke v13.<org.apache.directory.api.ldap.model.cursor.SearchCursor: boolean next()>();
if v15 == 0 goto label08;
v16 = interfaceinvoke v13.<org.apache.directory.api.ldap.model.cursor.SearchCursor: org.apache.directory.api.ldap.model.entry.Entry getEntry()>();
v17 = interfaceinvoke v16.<org.apache.directory.api.ldap.model.entry.Entry: org.apache.directory.api.ldap.model.name.Dn getDn()>();
v18 = virtualinvoke v17.<org.apache.directory.api.ldap.model.name.Dn: java.lang.String getName()>();
v19 = new java.util.HashMap;
specialinvoke v19.<java.util.HashMap: void <init>()>();
v20 = interfaceinvoke v16.<org.apache.directory.api.ldap.model.entry.Entry: java.util.Iterator iterator()>();
label03:
v21 = interfaceinvoke v20.<java.util.Iterator: boolean hasNext()>();
if v21 == 0 goto label07;
v22 = interfaceinvoke v20.<java.util.Iterator: java.lang.Object next()>();
v23 = interfaceinvoke v22.<org.apache.directory.api.ldap.model.entry.Attribute: java.lang.String getId()>();
v24 = new java.util.ArrayList;
specialinvoke v24.<java.util.ArrayList: void <init>()>();
if v3 == 0 goto label05;
v25 = interfaceinvoke v22.<org.apache.directory.api.ldap.model.entry.Attribute: java.util.Iterator iterator()>();
label04:
v26 = interfaceinvoke v25.<java.util.Iterator: boolean hasNext()>();
if v26 == 0 goto label06;
v27 = interfaceinvoke v25.<java.util.Iterator: java.lang.Object next()>();
v28 = virtualinvoke v27.<org.apache.directory.api.ldap.model.entry.Value: java.lang.String getString()>();
interfaceinvoke v24.<java.util.List: boolean add(java.lang.Object)>(v28);
goto label04;
label05:
v29 = interfaceinvoke v22.<org.apache.directory.api.ldap.model.entry.Attribute: java.util.Iterator iterator()>();
v30 = interfaceinvoke v29.<java.util.Iterator: java.lang.Object next()>();
v31 = virtualinvoke v30.<org.apache.directory.api.ldap.model.entry.Value: java.lang.String getString()>();
interfaceinvoke v24.<java.util.List: boolean add(java.lang.Object)>(v31);
label06:
v32 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v24);
interfaceinvoke v19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v23, v32);
goto label03;
label07:
v33 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v19);
interfaceinvoke v14.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v18, v33);
goto label02;
label08:
v34 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v14);
label09:
return v34;
label10:
v35 := @caughtexception;
v36 = virtualinvoke v35.<java.lang.Exception: java.lang.String getMessage()>();
v37 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v36, v35);
throw v37;
catch org.apache.directory.api.ldap.model.cursor.CursorException from label01 to label09 with label10;
catch org.apache.directory.api.ldap.model.exception.LdapException from label01 to label09 with label10;
}
public void writeBinaryAttribute(java.lang.String, java.lang.String, byte[][], boolean) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.Throwable v14;
org.apache.directory.ldap.client.api.LdapConnection v12;
org.apache.directory.api.ldap.model.entry.ModificationOperation v10;
org.apache.directory.api.ldap.model.entry.DefaultModification v9;
java.lang.String[] v8;
org.apache.directory.api.ldap.model.entry.DefaultAttribute v11;
org.apache.directory.api.ldap.model.message.ModifyResponse v13;
org.apache.directory.api.ldap.model.message.ModifyRequestImpl v6;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v15, v2;
com.novell.ldapchai.exception.ChaiOperationException v16;
boolean v4;
org.apache.directory.api.ldap.model.name.Dn v7;
byte[][] v3;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v5;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[][];
v4 := @parameter3: boolean;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v5.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void writeBinaryAttribute(java.lang.String,java.lang.String,byte[][],boolean)>(v1, v2, v3, v4);
label1:
v6 = new org.apache.directory.api.ldap.model.message.ModifyRequestImpl;
specialinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequestImpl: void <init>()>();
v7 = new org.apache.directory.api.ldap.model.name.Dn;
v8 = newarray (java.lang.String)[1];
v8[0] = v1;
specialinvoke v7.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v8);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v7);
v9 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v9.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
if v4 == 0 goto label2;
v10 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REPLACE_ATTRIBUTE>;
goto label3;
label2:
v10 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation ADD_ATTRIBUTE>;
label3:
interfaceinvoke v9.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v10);
v11 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
specialinvoke v11.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,byte[][])>(v2, v3);
interfaceinvoke v9.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v11);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v9);
v12 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v13 = interfaceinvoke v12.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyResponse modify(org.apache.directory.api.ldap.model.message.ModifyRequest)>(v6);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v13);
label4:
goto label6;
label5:
v14 := @caughtexception;
v15 = virtualinvoke v14.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v16 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v15, v14);
throw v16;
label6:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label4 with label5;
}
public void writeBinaryAttribute(java.lang.String, java.lang.String, byte[][], boolean, com.novell.ldapchai.ChaiRequestControl[]) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
java.lang.Throwable v15;
org.apache.directory.ldap.client.api.LdapConnection v13;
org.apache.directory.api.ldap.model.entry.ModificationOperation v11;
org.apache.directory.api.ldap.model.entry.DefaultModification v10;
java.lang.String[] v8;
org.apache.directory.api.ldap.model.entry.DefaultAttribute v12;
org.apache.directory.api.ldap.model.message.ModifyResponse v14;
org.apache.directory.api.ldap.model.message.ModifyRequestImpl v6;
com.novell.ldapchai.ChaiRequestControl[] v5;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v16, v2;
org.apache.directory.api.ldap.model.message.Control[] v9;
com.novell.ldapchai.exception.ChaiOperationException v17;
boolean v4;
org.apache.directory.api.ldap.model.name.Dn v7;
byte[][] v3;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[][];
v4 := @parameter3: boolean;
v5 := @parameter4: com.novell.ldapchai.ChaiRequestControl[];
label1:
v6 = new org.apache.directory.api.ldap.model.message.ModifyRequestImpl;
specialinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequestImpl: void <init>()>();
v7 = new org.apache.directory.api.ldap.model.name.Dn;
v8 = newarray (java.lang.String)[1];
v8[0] = v1;
specialinvoke v7.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v8);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v7);
v9 = staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.api.ldap.model.message.Control[] figureControls(com.novell.ldapchai.ChaiRequestControl[])>(v5);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addAllControls(org.apache.directory.api.ldap.model.message.Control[])>(v9);
v10 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v10.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
if v4 == 0 goto label2;
v11 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REPLACE_ATTRIBUTE>;
goto label3;
label2:
v11 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation ADD_ATTRIBUTE>;
label3:
interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v11);
v12 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
specialinvoke v12.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,byte[][])>(v2, v3);
interfaceinvoke v10.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v12);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v10);
v13 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v14 = interfaceinvoke v13.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyResponse modify(org.apache.directory.api.ldap.model.message.ModifyRequest)>(v6);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v14);
label4:
goto label6;
label5:
v15 := @caughtexception;
v16 = virtualinvoke v15.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v17 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v16, v15);
throw v17;
label6:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label4 with label5;
}
public void writeStringAttribute(java.lang.String, java.lang.String, java.util.Set, boolean) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v16;
org.apache.directory.ldap.client.api.LdapConnection v14;
java.lang.Object[] v13;
org.apache.directory.api.ldap.model.entry.ModificationOperation v10;
org.apache.directory.api.ldap.model.entry.DefaultModification v9;
java.lang.String[] v12, v8;
org.apache.directory.api.ldap.model.entry.DefaultAttribute v11;
org.apache.directory.api.ldap.model.message.ModifyResponse v15;
org.apache.directory.api.ldap.model.message.ModifyRequestImpl v6;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v17, v2;
com.novell.ldapchai.exception.ChaiOperationException v18;
boolean v4;
org.apache.directory.api.ldap.model.name.Dn v7;
java.util.Set v3;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v5;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: boolean;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v5.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void writeStringAttribute(java.lang.String,java.lang.String,java.util.Set,boolean)>(v1, v2, v3, v4);
label1:
v6 = new org.apache.directory.api.ldap.model.message.ModifyRequestImpl;
specialinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequestImpl: void <init>()>();
v7 = new org.apache.directory.api.ldap.model.name.Dn;
v8 = newarray (java.lang.String)[1];
v8[0] = v1;
specialinvoke v7.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v8);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v7);
v9 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v9.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
if v4 == 0 goto label2;
v10 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REPLACE_ATTRIBUTE>;
goto label3;
label2:
v10 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation ADD_ATTRIBUTE>;
label3:
interfaceinvoke v9.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v10);
v11 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
v12 = newarray (java.lang.String)[0];
v13 = interfaceinvoke v3.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v12);
specialinvoke v11.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,java.lang.String[])>(v2, v13);
interfaceinvoke v9.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v11);
interfaceinvoke v6.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v9);
v14 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v15 = interfaceinvoke v14.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyResponse modify(org.apache.directory.api.ldap.model.message.ModifyRequest)>(v6);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v15);
label4:
goto label6;
label5:
v16 := @caughtexception;
v17 = virtualinvoke v16.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v18 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v17, v16);
throw v18;
label6:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label4 with label5;
}
public void writeStringAttributes(java.lang.String, java.util.Map, boolean) throws com.novell.ldapchai.exception.ChaiOperationException, com.novell.ldapchai.exception.ChaiUnavailableException, java.lang.IllegalStateException
{
java.lang.Throwable v20;
org.apache.directory.ldap.client.api.LdapConnection v18;
org.apache.directory.api.ldap.model.entry.ModificationOperation v15;
org.apache.directory.api.ldap.model.entry.DefaultModification v14;
java.lang.String[] v17, v7;
org.apache.directory.api.ldap.model.entry.DefaultAttribute v16;
org.apache.directory.api.ldap.model.message.ModifyResponse v19;
org.apache.directory.api.ldap.model.message.ModifyRequestImpl v5;
java.util.Map v2;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v21;
com.novell.ldapchai.exception.ChaiOperationException v22;
boolean v10, v3;
java.util.Iterator v9;
org.apache.directory.api.ldap.model.name.Dn v6;
java.util.Set v8;
java.lang.Object v11, v12, v13;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: boolean;
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v4 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v4.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void writeStringAttributes(java.lang.String,java.util.Map,boolean)>(v1, v2, v3);
label1:
v5 = new org.apache.directory.api.ldap.model.message.ModifyRequestImpl;
specialinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequestImpl: void <init>()>();
v6 = new org.apache.directory.api.ldap.model.name.Dn;
v7 = newarray (java.lang.String)[1];
v7[0] = v1;
specialinvoke v6.<org.apache.directory.api.ldap.model.name.Dn: void <init>(java.lang.String[])>(v7);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest setName(org.apache.directory.api.ldap.model.name.Dn)>(v6);
v8 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v9 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
label2:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label5;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getKey()>();
v13 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
v14 = new org.apache.directory.api.ldap.model.entry.DefaultModification;
specialinvoke v14.<org.apache.directory.api.ldap.model.entry.DefaultModification: void <init>()>();
if v3 == 0 goto label3;
v15 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation REPLACE_ATTRIBUTE>;
goto label4;
label3:
v15 = <org.apache.directory.api.ldap.model.entry.ModificationOperation: org.apache.directory.api.ldap.model.entry.ModificationOperation ADD_ATTRIBUTE>;
label4:
interfaceinvoke v14.<org.apache.directory.api.ldap.model.entry.Modification: void setOperation(org.apache.directory.api.ldap.model.entry.ModificationOperation)>(v15);
v16 = new org.apache.directory.api.ldap.model.entry.DefaultAttribute;
v17 = newarray (java.lang.String)[1];
v17[0] = v13;
specialinvoke v16.<org.apache.directory.api.ldap.model.entry.DefaultAttribute: void <init>(java.lang.String,java.lang.String[])>(v12, v17);
interfaceinvoke v14.<org.apache.directory.api.ldap.model.entry.Modification: void setAttribute(org.apache.directory.api.ldap.model.entry.Attribute)>(v16);
interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.ModifyRequest: org.apache.directory.api.ldap.model.message.ModifyRequest addModification(org.apache.directory.api.ldap.model.entry.Modification)>(v14);
goto label2;
label5:
v18 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v19 = interfaceinvoke v18.<org.apache.directory.ldap.client.api.LdapConnection: org.apache.directory.api.ldap.model.message.ModifyResponse modify(org.apache.directory.api.ldap.model.message.ModifyRequest)>(v5);
staticinvoke <com.novell.ldapchai.provider.ApacheLdapProviderImpl: void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse)>(v19);
label6:
goto label8;
label7:
v20 := @caughtexception;
v21 = virtualinvoke v20.<org.apache.directory.api.ldap.model.exception.LdapException: java.lang.String getMessage()>();
v22 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String,java.lang.Throwable)>(v21, v20);
throw v22;
label8:
return;
catch org.apache.directory.api.ldap.model.exception.LdapException from label1 to label6 with label7;
}
public void replaceBinaryAttribute(java.lang.String, java.lang.String, byte[], byte[]) throws com.novell.ldapchai.exception.ChaiUnavailableException, com.novell.ldapchai.exception.ChaiOperationException
{
byte[] v3, v4;
org.apache.directory.api.ldap.model.entry.Value v6, v7;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
java.lang.String v1, v2;
com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator v5;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: byte[];
v4 := @parameter3: byte[];
virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void activityPreCheck()>();
v5 = virtualinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator getInputValidator()>();
virtualinvoke v5.<com.novell.ldapchai.provider.AbstractProvider$ChaiProviderInputValidator: void replaceBinaryAttribute(java.lang.String,java.lang.String,byte[],byte[])>(v1, v2, v3, v4);
v6 = new org.apache.directory.api.ldap.model.entry.Value;
specialinvoke v6.<org.apache.directory.api.ldap.model.entry.Value: void <init>(byte[])>(v3);
v7 = new org.apache.directory.api.ldap.model.entry.Value;
specialinvoke v7.<org.apache.directory.api.ldap.model.entry.Value: void <init>(byte[])>(v4);
specialinvoke v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: void replaceAttributeImpl(java.lang.String,java.lang.String,org.apache.directory.api.ldap.model.entry.Value,org.apache.directory.api.ldap.model.entry.Value)>(v1, v2, v6, v7);
return;
}
public boolean isConnected()
{
org.apache.directory.ldap.client.api.LdapConnection v1, v2;
com.novell.ldapchai.provider.ApacheLdapProviderImpl v0;
boolean v3, v4;
v0 := @this: com.novell.ldapchai.provider.ApacheLdapProviderImpl;
v1 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
if v1 == null goto label1;
v2 = v0.<com.novell.ldapchai.provider.ApacheLdapProviderImpl: org.apache.directory.ldap.client.api.LdapConnection connection>;
v3 = interfaceinvoke v2.<org.apache.directory.ldap.client.api.LdapConnection: boolean isConnected()>();
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
private static void processResponse(org.apache.directory.api.ldap.model.message.ResultResponse) throws com.novell.ldapchai.exception.ChaiOperationException
{
org.apache.directory.api.ldap.model.message.ResultResponse v0;
org.apache.directory.api.ldap.model.message.LdapResult v1, v5;
java.lang.String v6;
com.novell.ldapchai.exception.ChaiOperationException v7;
org.apache.directory.api.ldap.model.message.ResultCodeEnum v2, v3;
boolean v4;
v0 := @parameter0: org.apache.directory.api.ldap.model.message.ResultResponse;
v1 = interfaceinvoke v0.<org.apache.directory.api.ldap.model.message.ResultResponse: org.apache.directory.api.ldap.model.message.LdapResult getLdapResult()>();
v2 = interfaceinvoke v1.<org.apache.directory.api.ldap.model.message.LdapResult: org.apache.directory.api.ldap.model.message.ResultCodeEnum getResultCode()>();
v3 = <org.apache.directory.api.ldap.model.message.ResultCodeEnum: org.apache.directory.api.ldap.model.message.ResultCodeEnum SUCCESS>;
if v2 != v3 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
if v4 != 0 goto label3;
v5 = interfaceinvoke v0.<org.apache.directory.api.ldap.model.message.ResultResponse: org.apache.directory.api.ldap.model.message.LdapResult getLdapResult()>();
v6 = interfaceinvoke v5.<org.apache.directory.api.ldap.model.message.LdapResult: java.lang.String getDiagnosticMessage()>();
v7 = staticinvoke <com.novell.ldapchai.exception.ChaiOperationException: com.novell.ldapchai.exception.ChaiOperationException forErrorMessage(java.lang.String)>(v6);
throw v7;
label3:
return;
}
private static org.apache.directory.api.ldap.model.message.SearchScope figureSearchScope(com.novell.ldapchai.provider.SearchScope)
{
java.lang.IllegalArgumentException v7;
int[] v1;
int v2, v3;
org.apache.directory.api.ldap.model.message.SearchScope v4, v5, v6;
com.novell.ldapchai.provider.SearchScope v0;
v0 := @parameter0: com.novell.ldapchai.provider.SearchScope;
v1 = <com.novell.ldapchai.provider.ApacheLdapProviderImpl$4: int[] $SwitchMap$com$novell$ldapchai$provider$SearchScope>;
v2 = virtualinvoke v0.<com.novell.ldapchai.provider.SearchScope: int ordinal()>();
v3 = v1[v2];
tableswitch(v3)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
v4 = <org.apache.directory.api.ldap.model.message.SearchScope: org.apache.directory.api.ldap.model.message.SearchScope OBJECT>;
return v4;
label2:
v5 = <org.apache.directory.api.ldap.model.message.SearchScope: org.apache.directory.api.ldap.model.message.SearchScope ONELEVEL>;
return v5;
label3:
v6 = <org.apache.directory.api.ldap.model.message.SearchScope: org.apache.directory.api.ldap.model.message.SearchScope SUBTREE>;
return v6;
label4:
v7 = new java.lang.IllegalArgumentException;
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("unknown SearchScope type");
throw v7;
}
private static org.apache.directory.api.ldap.model.message.Control[] figureControls(com.novell.ldapchai.ChaiRequestControl[])
{
java.lang.Object[] v7;
com.novell.ldapchai.ChaiRequestControl v4;
java.util.ArrayList v1;
com.novell.ldapchai.provider.ApacheLdapProviderImpl$3 v5;
int v2, v3;
com.novell.ldapchai.ChaiRequestControl[] v0;
org.apache.directory.api.ldap.model.message.Control[] v6;
v0 := @parameter0: com.novell.ldapchai.ChaiRequestControl[];
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = lengthof v0;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v0[v3];
v5 = new com.novell.ldapchai.provider.ApacheLdapProviderImpl$3;
specialinvoke v5.<com.novell.ldapchai.provider.ApacheLdapProviderImpl$3: void <init>(com.novell.ldapchai.ChaiRequestControl)>(v4);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
v3 = v3 + 1;
goto label1;
label2:
v6 = newarray (org.apache.directory.api.ldap.model.message.Control)[0];
v7 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v6);
return v7;
}
static void <clinit>()
{
com.novell.ldapchai.util.internal.ChaiLogger v0;
v0 = staticinvoke <com.novell.ldapchai.util.internal.ChaiLogger: com.novell.ldapchai.util.internal.ChaiLogger getLogger(java.lang.Class)>(class "Lcom/novell/ldapchai/provider/ApacheLdapProviderImpl;");
<com.novell.ldapchai.provider.ApacheLdapProviderImpl: com.novell.ldapchai.util.internal.ChaiLogger LOGGER> = v0;
return;
}
}