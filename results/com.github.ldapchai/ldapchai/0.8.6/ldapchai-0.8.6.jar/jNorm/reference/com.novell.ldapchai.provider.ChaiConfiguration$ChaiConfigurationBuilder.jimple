public class com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder extends java.lang.Object
{
private java.io.Serializable implementationConfiguration;
private java.util.Map settings;
private javax.net.ssl.X509TrustManager[] trustManager;
private void <init>()
{
java.util.LinkedHashMap v1;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
java.util.Map v2;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.io.Serializable implementationConfiguration> = null;
v1 = new java.util.LinkedHashMap;
v2 = <com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map DEFAULT_SETTINGS>;
specialinvoke v1.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v2);
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.util.Map settings> = v1;
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: javax.net.ssl.X509TrustManager[] trustManager> = null;
return;
}
private void <init>(java.lang.String, java.lang.String, java.lang.String)
{
java.util.List v4;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
java.lang.String v1, v2, v3;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
specialinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: void <init>(java.util.List,java.lang.String,java.lang.String)>(v4, v2, v3);
return;
}
private void <init>(java.util.List, java.lang.String, java.lang.String)
{
java.util.Iterator v9;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
com.novell.ldapchai.provider.ChaiSetting v12, v6, v7;
java.util.LinkedHashMap v4;
java.util.List v1;
java.util.Map v5;
java.lang.Object v11;
java.lang.StringBuilder v8;
java.lang.String v13, v2, v3;
boolean v10;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: java.util.List;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.io.Serializable implementationConfiguration> = null;
v4 = new java.util.LinkedHashMap;
v5 = <com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map DEFAULT_SETTINGS>;
specialinvoke v4.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v5);
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.util.Map settings> = v4;
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: javax.net.ssl.X509TrustManager[] trustManager> = null;
v6 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_PASSWORD>;
virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v6, v3);
v7 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_DN>;
virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v7, v2);
v8 = new java.lang.StringBuilder;
specialinvoke v8.<java.lang.StringBuilder: void <init>()>();
v9 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
goto label1;
label2:
v12 = <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting BIND_URLS>;
v13 = virtualinvoke v8.<java.lang.StringBuilder: java.lang.String toString()>();
virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v12, v13);
return;
}
public void <init>(com.novell.ldapchai.provider.ChaiConfiguration)
{
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
java.io.Serializable v7;
java.util.LinkedHashMap v2, v4;
java.util.Map v3, v5;
javax.net.ssl.X509TrustManager[] v6;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiConfiguration;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.io.Serializable implementationConfiguration> = null;
v2 = new java.util.LinkedHashMap;
v3 = <com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map DEFAULT_SETTINGS>;
specialinvoke v2.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v3);
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.util.Map settings> = v2;
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: javax.net.ssl.X509TrustManager[] trustManager> = null;
v4 = new java.util.LinkedHashMap;
v5 = v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.util.Map settings>;
specialinvoke v4.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v5);
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.util.Map settings> = v4;
v6 = v1.<com.novell.ldapchai.provider.ChaiConfiguration: javax.net.ssl.X509TrustManager[] trustManager>;
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: javax.net.ssl.X509TrustManager[] trustManager> = v6;
v7 = v1.<com.novell.ldapchai.provider.ChaiConfiguration: java.io.Serializable implementationConfiguration>;
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.io.Serializable implementationConfiguration> = v7;
return;
}
public com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setImplementationConfiguration(java.io.Serializable)
{
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
java.io.Serializable v1;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: java.io.Serializable;
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.io.Serializable implementationConfiguration> = v1;
return v0;
}
public com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setTrustManager(javax.net.ssl.X509TrustManager[])
{
java.lang.Object[] v3;
int v2;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
javax.net.ssl.X509TrustManager[] v1;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: javax.net.ssl.X509TrustManager[];
if v1 == null goto label1;
v2 = lengthof v1;
v3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v1, v2);
label1:
v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: javax.net.ssl.X509TrustManager[] trustManager> = v3;
return v0;
}
public com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSettings(java.util.Properties)
{
java.util.Properties v1;
java.util.Iterator v3;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
java.util.Set v2;
com.novell.ldapchai.provider.ChaiSetting v7;
java.lang.Object v5, v6, v8;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: java.util.Properties;
v2 = virtualinvoke v1.<java.util.Properties: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = staticinvoke <com.novell.ldapchai.provider.ChaiSetting: com.novell.ldapchai.provider.ChaiSetting forKey(java.lang.String)>(v6);
if v7 == null goto label1;
v8 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v7, v8);
goto label1;
label2:
return v0;
}
public com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSettings(java.util.Map)
{
java.util.Iterator v3;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
java.util.Set v2;
java.util.Map v1;
java.lang.Object v5, v6, v7;
boolean v4;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting,java.lang.String)>(v6, v7);
goto label1;
label2:
return v0;
}
public com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder setSetting(com.novell.ldapchai.provider.ChaiSetting, java.lang.String)
{
java.util.Map v3;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
com.novell.ldapchai.provider.ChaiSetting v1;
java.lang.String v2, v4, v5;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 := @parameter0: com.novell.ldapchai.provider.ChaiSetting;
v2 := @parameter1: java.lang.String;
virtualinvoke v1.<com.novell.ldapchai.provider.ChaiSetting: void validateValue(java.lang.String)>(v2);
v3 = v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.util.Map settings>;
v4 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getKey()>();
if v2 != null goto label1;
v5 = virtualinvoke v1.<com.novell.ldapchai.provider.ChaiSetting: java.lang.String getDefaultValue()>();
goto label2;
label1:
v5 = v2;
label2:
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v5);
return v0;
}
public com.novell.ldapchai.provider.ChaiConfiguration build()
{
java.util.Map v3;
com.novell.ldapchai.provider.ChaiConfiguration v1;
com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder v0;
javax.net.ssl.X509TrustManager[] v4;
java.io.Serializable v2;
v0 := @this: com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder;
v1 = new com.novell.ldapchai.provider.ChaiConfiguration;
v2 = v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.io.Serializable implementationConfiguration>;
v3 = v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: java.util.Map settings>;
v4 = v0.<com.novell.ldapchai.provider.ChaiConfiguration$ChaiConfigurationBuilder: javax.net.ssl.X509TrustManager[] trustManager>;
specialinvoke v1.<com.novell.ldapchai.provider.ChaiConfiguration: void <init>(java.io.Serializable,java.util.Map,javax.net.ssl.X509TrustManager[])>(v2, v3, v4);
return v1;
}
}