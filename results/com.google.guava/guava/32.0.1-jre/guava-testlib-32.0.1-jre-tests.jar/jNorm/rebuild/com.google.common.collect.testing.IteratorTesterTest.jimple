public class com.google.common.collect.testing.IteratorTesterTest extends junit.framework.TestCase
{
private static final int STEPS;
public void <init>()
{
com.google.common.collect.testing.IteratorTesterTest v0;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
specialinvoke v0.<junit.framework.TestCase: void <init>()>();
return;
}
public void testCanCatchDifferentLengthOfIteration()
{
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5, v6;
java.util.ArrayList v7;
com.google.common.collect.testing.IteratorTesterTest$1 v1;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v8;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$1;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[3];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
v3[2] = v6;
v7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v8 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$1: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 4, v2, v7, v8);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v1);
return;
}
public void testCanCatchDifferentContents()
{
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5, v6;
java.util.ArrayList v7;
com.google.common.collect.testing.IteratorTesterTest$2 v1;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v8;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$2;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[3];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
v3[2] = v6;
v7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v8 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$2: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 3, v2, v7, v8);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v1);
return;
}
public void testCanCatchDifferentRemoveBehaviour()
{
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5;
java.util.ArrayList v6;
com.google.common.collect.testing.IteratorTesterTest$3 v1;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v7;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$3;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[2];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v7 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$3: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 3, v2, v6, v7);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v1);
return;
}
public void testUnknownOrder()
{
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5;
java.util.ArrayList v6;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v7;
com.google.common.collect.testing.IteratorTesterTest$4 v1;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$4;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[2];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v7 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder UNKNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$4: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 3, v2, v6, v7);
virtualinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$4: void test()>();
return;
}
public void testUnknownOrderUnrecognizedElement()
{
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5, v6;
java.util.ArrayList v7;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v8;
com.google.common.collect.testing.IteratorTesterTest$5 v1;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$5;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[3];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(50);
v3[2] = v6;
v7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v8 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder UNKNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$5: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 3, v2, v7, v8);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v1);
return;
}
public void testCanCatchSunJavaBug6529795InTargetIterator()
{
java.lang.Throwable v8;
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5;
java.util.ArrayList v6;
com.google.common.collect.testing.IteratorTesterTest$6 v1;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v7;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
label1:
v1 = new com.google.common.collect.testing.IteratorTesterTest$6;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[2];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v7 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$6: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 4, v2, v6, v7);
virtualinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$6: void test()>();
label2:
goto label4;
label3:
v8 := @caughtexception;
return;
label4:
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void fail(java.lang.String)>("Should have caught jdk6 bug in target iterator");
return;
catch junit.framework.AssertionFailedError from label1 to label2 with label3;
}
public void testVerifyGetsCalled()
{
com.google.common.collect.testing.IteratorTesterTest$TesterThatCountsCalls v1;
int v2, v3, v4;
com.google.common.collect.testing.IteratorTesterTest v0;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$TesterThatCountsCalls;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$TesterThatCountsCalls: void <init>()>();
virtualinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$TesterThatCountsCalls: void test()>();
v2 = v1.<com.google.common.collect.testing.IteratorTesterTest$TesterThatCountsCalls: int numCallsToVerify>;
v3 = v1.<com.google.common.collect.testing.IteratorTesterTest$TesterThatCountsCalls: int numCallsToNewTargetIterator>;
v4 = v3 * 3;
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertEquals(java.lang.String,int,int)>("Should have verified once per stimulus executed", v2, v4);
return;
}
public void testVerifyCanThrowAssertionThatFailsTest()
{
java.lang.Throwable v10, v11, v9;
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
java.lang.Integer v4, v5, v6;
java.util.ArrayList v7;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v8;
com.google.common.collect.testing.IteratorTesterTest$7 v1;
java.lang.String v12;
java.lang.Integer[] v3;
boolean v13;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$7;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[3];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(2);
v3[1] = v5;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(3);
v3[2] = v6;
v7 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v8 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$7: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 1, v2, v7, v8);
v9 = null;
label1:
virtualinvoke v1.<com.google.common.collect.testing.IteratorTester: void test()>();
label2:
goto label4;
label3:
v10 := @caughtexception;
v9 = v10;
label4:
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertNotNull(java.lang.String,java.lang.Object)>("verify() should be able to cause test failure", v9);
v11 = virtualinvoke v9.<junit.framework.AssertionFailedError: java.lang.Throwable getCause()>();
v12 = virtualinvoke v11.<java.lang.Throwable: java.lang.String getMessage()>();
v13 = virtualinvoke v12.<java.lang.String: boolean contains(java.lang.CharSequence)>("Important info about why verify failed");
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertTrue(java.lang.String,boolean)>("AssertionFailedError should have info about why test failed", v13);
return;
catch junit.framework.AssertionFailedError from label1 to label2 with label3;
}
public void testMissingException()
{
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v4;
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v3;
com.google.common.collect.testing.IteratorTesterTest$8 v2;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();
v2 = new com.google.common.collect.testing.IteratorTesterTest$8;
v3 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v4 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v2.<com.google.common.collect.testing.IteratorTesterTest$8: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 1, v3, v1, v4);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v2);
return;
}
public void testUnexpectedException()
{
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v6;
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v2;
com.google.common.collect.testing.IteratorTesterTest$9 v1;
java.lang.Integer v4;
java.lang.Integer[] v3;
java.util.ArrayList v5;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = new com.google.common.collect.testing.IteratorTesterTest$9;
v2 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v3 = newarray (java.lang.Integer)[1];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v3[0] = v4;
v5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v6 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v1.<com.google.common.collect.testing.IteratorTesterTest$9: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 1, v2, v5, v6);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v1);
return;
}
public void testSimilarException()
{
com.google.common.collect.testing.IteratorTesterTest$10 v2;
java.util.List v1;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v4;
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v3;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v2 = new com.google.common.collect.testing.IteratorTesterTest$10;
v3 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v4 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v2.<com.google.common.collect.testing.IteratorTesterTest$10: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 1, v3, v1, v4);
virtualinvoke v2.<com.google.common.collect.testing.IteratorTester: void test()>();
return;
}
public void testMismatchedException()
{
java.util.List v1;
com.google.common.collect.testing.AbstractIteratorTester$KnownOrder v4;
com.google.common.collect.testing.IteratorTesterTest v0;
java.util.Set v3;
com.google.common.collect.testing.IteratorTesterTest$11 v2;
v0 := @this: com.google.common.collect.testing.IteratorTesterTest;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v2 = new com.google.common.collect.testing.IteratorTesterTest$11;
v3 = <com.google.common.collect.testing.IteratorFeature: java.util.Set MODIFIABLE>;
v4 = <com.google.common.collect.testing.AbstractIteratorTester$KnownOrder: com.google.common.collect.testing.AbstractIteratorTester$KnownOrder KNOWN_ORDER>;
specialinvoke v2.<com.google.common.collect.testing.IteratorTesterTest$11: void <init>(com.google.common.collect.testing.IteratorTesterTest,int,java.lang.Iterable,java.lang.Iterable,com.google.common.collect.testing.AbstractIteratorTester$KnownOrder)>(v0, 1, v3, v1, v4);
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void assertFailure(com.google.common.collect.testing.IteratorTester)>(v2);
return;
}
private static void assertFailure(com.google.common.collect.testing.IteratorTester)
{
com.google.common.collect.testing.IteratorTester v0;
java.lang.Throwable v1;
v0 := @parameter0: com.google.common.collect.testing.IteratorTester;
label1:
virtualinvoke v0.<com.google.common.collect.testing.IteratorTester: void test()>();
label2:
goto label4;
label3:
v1 := @caughtexception;
return;
label4:
staticinvoke <com.google.common.collect.testing.IteratorTesterTest: void fail()>();
return;
catch junit.framework.AssertionFailedError from label1 to label2 with label3;
}
}