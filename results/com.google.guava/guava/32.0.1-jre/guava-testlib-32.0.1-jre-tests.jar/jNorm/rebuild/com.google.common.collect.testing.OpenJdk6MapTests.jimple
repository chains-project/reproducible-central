public class com.google.common.collect.testing.OpenJdk6MapTests extends com.google.common.collect.testing.TestsForMapsInJavaUtil
{
public void <init>()
{
com.google.common.collect.testing.OpenJdk6MapTests v0;
v0 := @this: com.google.common.collect.testing.OpenJdk6MapTests;
specialinvoke v0.<com.google.common.collect.testing.TestsForMapsInJavaUtil: void <init>()>();
return;
}
public static junit.framework.Test suite()
{
junit.framework.Test v1;
com.google.common.collect.testing.OpenJdk6MapTests v0;
v0 = new com.google.common.collect.testing.OpenJdk6MapTests;
specialinvoke v0.<com.google.common.collect.testing.OpenJdk6MapTests: void <init>()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.OpenJdk6MapTests: junit.framework.Test allTests()>();
return v1;
}
protected java.util.Collection suppressForTreeMapNatural()
{
com.google.common.collect.testing.OpenJdk6MapTests v0;
java.lang.reflect.Method[] v1;
java.util.List v8;
java.lang.reflect.Method v2, v3, v4, v5, v6, v7;
v0 := @this: com.google.common.collect.testing.OpenJdk6MapTests;
v1 = newarray (java.lang.reflect.Method)[6];
v2 = staticinvoke <com.google.common.collect.testing.testers.MapPutTester: java.lang.reflect.Method getPutNullKeyUnsupportedMethod()>();
v1[0] = v2;
v3 = staticinvoke <com.google.common.collect.testing.testers.MapPutAllTester: java.lang.reflect.Method getPutAllNullKeyUnsupportedMethod()>();
v1[1] = v3;
v4 = staticinvoke <com.google.common.collect.testing.testers.MapCreationTester: java.lang.reflect.Method getCreateWithNullKeyUnsupportedMethod()>();
v1[2] = v4;
v5 = staticinvoke <com.google.common.collect.testing.testers.CollectionCreationTester: java.lang.reflect.Method getCreateWithNullUnsupportedMethod()>();
v1[3] = v5;
v6 = staticinvoke <com.google.common.collect.testing.testers.MapEntrySetTester: java.lang.reflect.Method getContainsEntryWithIncomparableKeyMethod()>();
v1[4] = v6;
v7 = staticinvoke <com.google.common.collect.testing.testers.MapEntrySetTester: java.lang.reflect.Method getContainsEntryWithIncomparableValueMethod()>();
v1[5] = v7;
v8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v8;
}
protected java.util.Collection suppressForConcurrentHashMap()
{
java.util.List v5;
com.google.common.collect.testing.OpenJdk6MapTests v0;
java.lang.reflect.Method v2, v3, v4;
java.lang.reflect.Method[] v1;
v0 := @this: com.google.common.collect.testing.OpenJdk6MapTests;
v1 = newarray (java.lang.reflect.Method)[3];
v2 = staticinvoke <com.google.common.collect.testing.testers.CollectionAddTester: java.lang.reflect.Method getAddUnsupportedNotPresentMethod()>();
v1[0] = v2;
v3 = staticinvoke <com.google.common.collect.testing.testers.CollectionAddAllTester: java.lang.reflect.Method getAddAllUnsupportedNonePresentMethod()>();
v1[1] = v3;
v4 = staticinvoke <com.google.common.collect.testing.testers.CollectionAddAllTester: java.lang.reflect.Method getAddAllUnsupportedSomePresentMethod()>();
v1[2] = v4;
v5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v5;
}
protected java.util.Collection suppressForConcurrentSkipListMap()
{
com.google.common.collect.testing.OpenJdk6MapTests v0;
java.util.Collection v2;
java.lang.reflect.Method v3, v4;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.OpenJdk6MapTests;
v1 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();
v2 = specialinvoke v0.<com.google.common.collect.testing.TestsForMapsInJavaUtil: java.util.Collection suppressForConcurrentSkipListMap()>();
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v2);
v3 = staticinvoke <com.google.common.collect.testing.testers.MapEntrySetTester: java.lang.reflect.Method getContainsEntryWithIncomparableKeyMethod()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v3);
v4 = staticinvoke <com.google.common.collect.testing.testers.MapEntrySetTester: java.lang.reflect.Method getContainsEntryWithIncomparableValueMethod()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v4);
return v1;
}
protected java.util.Collection suppressForHashtable()
{
java.util.List v3;
com.google.common.collect.testing.OpenJdk6MapTests v0;
java.lang.reflect.Method v2;
java.lang.reflect.Method[] v1;
v0 := @this: com.google.common.collect.testing.OpenJdk6MapTests;
v1 = newarray (java.lang.reflect.Method)[1];
v2 = staticinvoke <com.google.common.collect.testing.testers.MapMergeTester: java.lang.reflect.Method getMergeNullValueMethod()>();
v1[0] = v2;
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v3;
}
}