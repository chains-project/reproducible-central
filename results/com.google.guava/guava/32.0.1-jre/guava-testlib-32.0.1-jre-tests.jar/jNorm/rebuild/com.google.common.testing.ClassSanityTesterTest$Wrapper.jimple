abstract class com.google.common.testing.ClassSanityTesterTest$Wrapper extends java.lang.Object
{
private final java.lang.Object wrapped;
void <init>(java.lang.Object)
{
java.lang.Object v1, v2;
com.google.common.testing.ClassSanityTesterTest$Wrapper v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$Wrapper;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <com.google.common.base.Preconditions: java.lang.Object checkNotNull(java.lang.Object)>(v1);
v0.<com.google.common.testing.ClassSanityTesterTest$Wrapper: java.lang.Object wrapped> = v2;
return;
}
public boolean equals(java.lang.Object)
{
com.google.common.testing.ClassSanityTesterTest$Wrapper v0;
java.lang.Class v2;
java.lang.Object v1, v4, v5;
boolean v3, v6;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$Wrapper;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: boolean isInstance(java.lang.Object)>(v1);
if v3 == 0 goto label1;
v4 = v0.<com.google.common.testing.ClassSanityTesterTest$Wrapper: java.lang.Object wrapped>;
v5 = v1.<com.google.common.testing.ClassSanityTesterTest$Wrapper: java.lang.Object wrapped>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
label1:
return 0;
}
public int hashCode()
{
int v2;
java.lang.Object v1;
com.google.common.testing.ClassSanityTesterTest$Wrapper v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$Wrapper;
v1 = v0.<com.google.common.testing.ClassSanityTesterTest$Wrapper: java.lang.Object wrapped>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public java.lang.String toString()
{
java.lang.Object v1;
java.lang.String v2;
com.google.common.testing.ClassSanityTesterTest$Wrapper v0;
v0 := @this: com.google.common.testing.ClassSanityTesterTest$Wrapper;
v1 = v0.<com.google.common.testing.ClassSanityTesterTest$Wrapper: java.lang.Object wrapped>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
}