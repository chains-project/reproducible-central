final enum class com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum extends java.lang.Enum
{
public static final enum com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum CONSTANT1;
public static final enum com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum CONSTANT2;
private static final com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] $VALUES;
public static com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] values()
{
java.lang.Object v1;
com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] v0;
v0 = <com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/google/common/testing/FreshValueGeneratorTest$TwoConstantEnum;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum v0;
int v2;
java.lang.String v1;
v0 := @this: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] $values()
{
com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum v1, v2;
com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] v0;
v0 = newarray (com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum)[2];
v1 = <com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum CONSTANT1>;
v0[0] = v1;
v2 = <com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum CONSTANT2>;
v0[1] = v2;
return v0;
}
static void <clinit>()
{
com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum v0, v1;
com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] v2;
v0 = new com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum;
specialinvoke v0.<com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: void <init>(java.lang.String,int)>("CONSTANT1", 0);
<com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum CONSTANT1> = v0;
v1 = new com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum;
specialinvoke v1.<com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: void <init>(java.lang.String,int)>("CONSTANT2", 1);
<com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum CONSTANT2> = v1;
v2 = staticinvoke <com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] $values()>();
<com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum: com.google.common.testing.FreshValueGeneratorTest$TwoConstantEnum[] $VALUES> = v2;
return;
}
}