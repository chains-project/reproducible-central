class com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker extends com.google.common.testing.NullPointerTesterTest$DefaultValueChecker
{
private void <init>()
{
com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker v0;
v0 := @this: com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker;
specialinvoke v0.<com.google.common.testing.NullPointerTesterTest$DefaultValueChecker: void <init>()>();
return;
}
public void checkArray(com.google.common.testing.NullPointerTesterTest$EmptyEnum, java.lang.String)
{
com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker v0;
java.lang.Object[] v3;
com.google.common.testing.NullPointerTesterTest$EmptyEnum v1;
java.lang.String v2;
v0 := @this: com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker;
v1 := @parameter0: com.google.common.testing.NullPointerTesterTest$EmptyEnum;
v2 := @parameter1: java.lang.String;
v3 = newarray (java.lang.Object)[2];
v3[0] = v1;
v3[1] = v2;
virtualinvoke v0.<com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker: void calledWith(java.lang.Object[])>(v3);
return;
}
void check()
{
com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker v0;
java.lang.Throwable v1;
v0 := @this: com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker;
label1:
virtualinvoke v0.<com.google.common.testing.NullPointerTesterTest$EmptyEnumDefaultValueChecker: com.google.common.testing.NullPointerTesterTest$DefaultValueChecker runTester()>();
label2:
goto label4;
label3:
v1 := @caughtexception;
return;
label4:
staticinvoke <junit.framework.TestCase: void fail(java.lang.String)>("Should have failed because enum has no constant");
return;
catch junit.framework.AssertionFailedError from label1 to label2 with label3;
}
}