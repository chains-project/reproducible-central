class com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub extends java.lang.Object implements com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub
{
private final com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub delegate;
void <init>(com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub)
{
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub v0;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub v1;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub;
v1 := @parameter0: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub delegate> = v1;
return;
}
public java.lang.String getId()
{
java.lang.String v2;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub v0;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub v1;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub;
v1 = v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub delegate>;
v2 = interfaceinvoke v1.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub: java.lang.String getId()>();
return v2;
}
public java.lang.String toString()
{
java.lang.String v2;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub v0;
com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub v1;
v0 := @this: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub;
v1 = v0.<com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$ForwardingSub: com.google.common.testing.anotherpackage.ForwardingWrapperTesterTest$Sub delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
}