class com.google.common.collect.testing.MapTestSuiteBuilderTests$3 extends java.lang.Object implements java.lang.Runnable
{
final java.util.concurrent.atomic.AtomicBoolean val$setUpRan;
void <init>(java.util.concurrent.atomic.AtomicBoolean)
{
java.util.concurrent.atomic.AtomicBoolean v1;
com.google.common.collect.testing.MapTestSuiteBuilderTests$3 v0;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$3;
v1 := @parameter0: java.util.concurrent.atomic.AtomicBoolean;
v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$3: java.util.concurrent.atomic.AtomicBoolean val$setUpRan> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.util.concurrent.atomic.AtomicBoolean v1;
com.google.common.collect.testing.MapTestSuiteBuilderTests$3 v0;
boolean v2;
v0 := @this: com.google.common.collect.testing.MapTestSuiteBuilderTests$3;
v1 = v0.<com.google.common.collect.testing.MapTestSuiteBuilderTests$3: java.util.concurrent.atomic.AtomicBoolean val$setUpRan>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: boolean getAndSet(boolean)>(1);
staticinvoke <junit.framework.TestCase: void assertFalse(java.lang.String,boolean)>("previous tearDown should have run before setUp", v2);
return;
}
}