public class com.google.common.collect.testing.features.FeatureEnumTest extends junit.framework.TestCase
{
public void <init>()
{
com.google.common.collect.testing.features.FeatureEnumTest v0;
v0 := @this: com.google.common.collect.testing.features.FeatureEnumTest;
specialinvoke v0.<junit.framework.TestCase: void <init>()>();
return;
}
private static void assertGoodTesterAnnotation(java.lang.Class)
{
java.lang.NoSuchMethodException v20;
java.lang.reflect.Method v18;
boolean v26;
java.lang.'annotation'.Annotation v13, v3, v4;
java.lang.Object[] v1, v11, v21, v24, v27, v5, v7;
java.lang.String[] v14;
int v15, v16;
java.lang.String v12, v17, v2, v22, v25, v29, v6, v8;
java.lang.Class[] v19;
java.lang.Class v0, v23, v28, v30, v31;
java.lang.'annotation'.RetentionPolicy v10, v9;
v0 := @parameter0: java.lang.Class;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s must be annotated with @TesterAnnotation.", v1);
v3 = virtualinvoke v0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lcom/google/common/collect/testing/features/TesterAnnotation;");
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertNotNull(java.lang.String,java.lang.Object)>(v2, v3);
v4 = virtualinvoke v0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljava/lang/annotation/Retention;");
v5 = newarray (java.lang.Object)[1];
v5[0] = v0;
v6 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s must have a @Retention annotation.", v5);
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertNotNull(java.lang.String,java.lang.Object)>(v6, v4);
v7 = newarray (java.lang.Object)[1];
v7[0] = v0;
v8 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s must have RUNTIME RetentionPolicy.", v7);
v9 = <java.lang.'annotation'.RetentionPolicy: java.lang.'annotation'.RetentionPolicy RUNTIME>;
v10 = interfaceinvoke v4.<java.lang.'annotation'.Retention: java.lang.'annotation'.RetentionPolicy value()>();
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertEquals(java.lang.String,java.lang.Object,java.lang.Object)>(v8, v9, v10);
v11 = newarray (java.lang.Object)[1];
v11[0] = v0;
v12 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s must be inherited.", v11);
v13 = virtualinvoke v0.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Ljava/lang/annotation/Inherited;");
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertNotNull(java.lang.String,java.lang.Object)>(v12, v13);
v14 = newarray (java.lang.String)[2];
v14[0] = "value";
v14[1] = "absent";
v15 = lengthof v14;
v16 = 0;
label1:
if v16 >= v15 goto label6;
v17 = v14[v16];
v18 = null;
label2:
v19 = newarray (java.lang.Class)[0];
v18 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>(v17, v19);
label3:
goto label5;
label4:
v20 := @caughtexception;
v21 = newarray (java.lang.Object)[2];
v21[0] = v0;
v21[1] = v17;
v22 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s must have a property named \'%s\'.", v21);
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void fail(java.lang.String)>(v22);
label5:
v23 = virtualinvoke v18.<java.lang.reflect.Method: java.lang.Class getReturnType()>();
v24 = newarray (java.lang.Object)[2];
v24[0] = v0;
v24[1] = v17;
v25 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s.%s() must return an array.", v24);
v26 = virtualinvoke v23.<java.lang.Class: boolean isArray()>();
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertTrue(java.lang.String,boolean)>(v25, v26);
v27 = newarray (java.lang.Object)[3];
v27[0] = v0;
v27[1] = v17;
v28 = virtualinvoke v0.<java.lang.Class: java.lang.Class getDeclaringClass()>();
v27[2] = v28;
v29 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s.%s() must return an array of %s.", v27);
v30 = virtualinvoke v0.<java.lang.Class: java.lang.Class getDeclaringClass()>();
v31 = virtualinvoke v23.<java.lang.Class: java.lang.Class getComponentType()>();
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertSame(java.lang.String,java.lang.Object,java.lang.Object)>(v29, v30, v31);
v16 = v16 + 1;
goto label1;
label6:
return;
catch java.lang.NoSuchMethodException from label2 to label3 with label4;
}
public static void assertGoodFeatureEnum(java.lang.Class)
{
java.lang.Object[] v11, v9;
java.lang.Class[] v1;
int v2, v3;
java.lang.Class v0, v4, v8;
java.lang.String v10, v12, v5;
boolean v6, v7;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: java.lang.Class[] getDeclaredClasses()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label5;
v4 = v1[v3];
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getSimpleName()>();
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("Require");
if v6 == 0 goto label4;
v7 = virtualinvoke v4.<java.lang.Class: boolean isAnnotation()>();
if v7 == 0 goto label2;
v8 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.Class asAnnotation(java.lang.Class)>(v4);
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertGoodTesterAnnotation(java.lang.Class)>(v8);
goto label3;
label2:
v9 = newarray (java.lang.Object)[1];
v9[0] = v0;
v10 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("Feature enum %s contains a class named \'Require\' but it is not an annotation.", v9);
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void fail(java.lang.String)>(v10);
label3:
return;
label4:
v3 = v3 + 1;
goto label1;
label5:
v11 = newarray (java.lang.Object)[1];
v11[0] = v0;
v12 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("Feature enum %s should contain an annotation named \'Require\'.", v11);
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void fail(java.lang.String)>(v12);
return;
}
private static java.lang.Class asAnnotation(java.lang.Class)
{
java.lang.Object[] v3;
java.lang.Class v0;
java.lang.String v4;
java.lang.IllegalArgumentException v2;
boolean v1;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isAnnotation()>();
if v1 == 0 goto label1;
return v0;
label1:
v2 = new java.lang.IllegalArgumentException;
v3 = newarray (java.lang.Object)[1];
v3[0] = v0;
v4 = staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: java.lang.String rootLocaleFormat(java.lang.String,java.lang.Object[])>("%s is not an annotation.", v3);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v2;
}
public void testFeatureEnums() throws java.lang.Exception
{
com.google.common.collect.testing.features.FeatureEnumTest v0;
v0 := @this: com.google.common.collect.testing.features.FeatureEnumTest;
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertGoodFeatureEnum(java.lang.Class)>(class "Lcom/google/common/collect/testing/features/CollectionFeature;");
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertGoodFeatureEnum(java.lang.Class)>(class "Lcom/google/common/collect/testing/features/ListFeature;");
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertGoodFeatureEnum(java.lang.Class)>(class "Lcom/google/common/collect/testing/features/SetFeature;");
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertGoodFeatureEnum(java.lang.Class)>(class "Lcom/google/common/collect/testing/features/CollectionSize;");
staticinvoke <com.google.common.collect.testing.features.FeatureEnumTest: void assertGoodFeatureEnum(java.lang.Class)>(class "Lcom/google/common/collect/testing/features/MapFeature;");
return;
}
private static transient java.lang.String rootLocaleFormat(java.lang.String, java.lang.Object[])
{
java.lang.Object[] v1;
java.util.Locale v2;
java.lang.String v0, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
v2 = <java.util.Locale: java.util.Locale ROOT>;
v3 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v0, v1);
return v3;
}
}