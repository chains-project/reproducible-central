public abstract class com.google.common.collect.testing.AbstractCollectionTester extends com.google.common.collect.testing.AbstractContainerTester
{
protected java.util.Collection collection;
public void <init>()
{
com.google.common.collect.testing.AbstractCollectionTester v0;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractContainerTester: void <init>()>();
return;
}
protected java.util.Collection actualContents()
{
com.google.common.collect.testing.AbstractCollectionTester v0;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
v1 = v0.<com.google.common.collect.testing.AbstractCollectionTester: java.util.Collection collection>;
return v1;
}
protected java.util.Collection resetContainer(java.util.Collection)
{
com.google.common.collect.testing.AbstractCollectionTester v0;
java.util.Collection v1, v3;
java.lang.Object v2;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
v1 := @parameter0: java.util.Collection;
v2 = specialinvoke v0.<com.google.common.collect.testing.AbstractContainerTester: java.lang.Object resetContainer(java.lang.Object)>(v1);
v0.<com.google.common.collect.testing.AbstractCollectionTester: java.util.Collection collection> = v2;
v3 = v0.<com.google.common.collect.testing.AbstractCollectionTester: java.util.Collection collection>;
return v3;
}
protected void resetCollection()
{
com.google.common.collect.testing.AbstractCollectionTester v0;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: java.lang.Object resetContainer()>();
return;
}
protected java.lang.Object[] createArrayWithNullElement()
{
int v2;
com.google.common.collect.testing.AbstractCollectionTester v0;
java.lang.Object[] v1;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: int getNullLocation()>();
v1[v2] = null;
return v1;
}
protected void initCollectionWithNullElement()
{
com.google.common.collect.testing.AbstractCollectionTester v0;
java.lang.Object[] v1;
java.lang.Object v2, v3;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: java.lang.Object[] createArrayWithNullElement()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: java.lang.Object getSubjectGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v1);
virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: java.util.Collection resetContainer(java.util.Collection)>(v3);
return;
}
protected void expectNullMissingWhenNullUnsupported(java.lang.String)
{
com.google.common.collect.testing.AbstractCollectionTester v0;
java.util.Collection v2;
java.lang.String v1;
java.lang.NullPointerException v4;
boolean v3;
v0 := @this: com.google.common.collect.testing.AbstractCollectionTester;
v1 := @parameter0: java.lang.String;
label1:
v2 = virtualinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: java.util.Collection actualContents()>();
v3 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.AbstractCollectionTester: void assertFalse(java.lang.String,boolean)>(v1, v3);
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
}