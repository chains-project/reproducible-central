class com.google.common.collect.testing.AbstractIteratorTester$11 extends com.google.common.collect.testing.AbstractIteratorTester$Stimulus
{
final com.google.common.collect.testing.AbstractIteratorTester this$0;
void <init>(com.google.common.collect.testing.AbstractIteratorTester, java.lang.String)
{
com.google.common.collect.testing.AbstractIteratorTester v1;
java.lang.String v2;
com.google.common.collect.testing.AbstractIteratorTester$11 v0;
v0 := @this: com.google.common.collect.testing.AbstractIteratorTester$11;
v1 := @parameter0: com.google.common.collect.testing.AbstractIteratorTester;
v2 := @parameter1: java.lang.String;
v0.<com.google.common.collect.testing.AbstractIteratorTester$11: com.google.common.collect.testing.AbstractIteratorTester this$0> = v1;
specialinvoke v0.<com.google.common.collect.testing.AbstractIteratorTester$Stimulus: void <init>(java.lang.String)>(v2);
return;
}
void executeAndCompare(java.util.ListIterator, java.util.ListIterator)
{
java.util.ListIterator v1, v2;
int v3, v4;
com.google.common.collect.testing.AbstractIteratorTester$11 v0;
v0 := @this: com.google.common.collect.testing.AbstractIteratorTester$11;
v1 := @parameter0: java.util.ListIterator;
v2 := @parameter1: java.util.ListIterator;
v3 = interfaceinvoke v1.<java.util.ListIterator: int previousIndex()>();
v4 = interfaceinvoke v2.<java.util.ListIterator: int previousIndex()>();
staticinvoke <junit.framework.Assert: void assertEquals(int,int)>(v3, v4);
return;
}
}