class com.google.common.collect.testing.Helpers$4 extends java.lang.Object implements java.util.Map$Entry
{
final java.lang.Object val$key;
final java.lang.Object val$value;
void <init>(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
com.google.common.collect.testing.Helpers$4 v0;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object val$key> = v1;
v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object val$value> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object getKey()
{
java.lang.Object v1;
com.google.common.collect.testing.Helpers$4 v0;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 = v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object val$key>;
return v1;
}
public java.lang.Object getValue()
{
java.lang.Object v1;
com.google.common.collect.testing.Helpers$4 v0;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 = v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object val$value>;
return v1;
}
public java.lang.Object setValue(java.lang.Object)
{
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
com.google.common.collect.testing.Helpers$4 v0;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean equals(java.lang.Object)
{
com.google.common.collect.testing.Helpers$4 v0;
java.lang.Object v1, v3, v4, v5, v7, v8;
boolean v10, v2, v6, v9;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.util.Map$Entry;
if v2 == 0 goto label3;
v3 = v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object val$value>;
interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object setValue(java.lang.Object)>(v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object getKey()>();
v5 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = staticinvoke <com.google.common.collect.testing.Helpers: boolean equal(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 == 0 goto label1;
v7 = virtualinvoke v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object getValue()>();
v8 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
v9 = staticinvoke <com.google.common.collect.testing.Helpers: boolean equal(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 == 0 goto label1;
v10 = 1;
goto label2;
label1:
v10 = 0;
label2:
return v10;
label3:
return 0;
}
public int hashCode()
{
int v3, v4, v5;
java.lang.Object v1, v2;
com.google.common.collect.testing.Helpers$4 v0;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 = virtualinvoke v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object getKey()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object getValue()>();
if v1 != null goto label1;
v3 = 0;
goto label2;
label1:
v3 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
label2:
if v2 != null goto label3;
v4 = 0;
goto label4;
label3:
v4 = virtualinvoke v2.<java.lang.Object: int hashCode()>();
label4:
v5 = v3 ^ v4;
return v5;
}
public java.lang.String toString()
{
java.lang.Object v1, v2;
com.google.common.collect.testing.Helpers$4 v0;
java.lang.String v3;
v0 := @this: com.google.common.collect.testing.Helpers$4;
v1 = virtualinvoke v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object getKey()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.Helpers$4: java.lang.Object getValue()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.Object)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001=\u0001");
return v3;
}
}