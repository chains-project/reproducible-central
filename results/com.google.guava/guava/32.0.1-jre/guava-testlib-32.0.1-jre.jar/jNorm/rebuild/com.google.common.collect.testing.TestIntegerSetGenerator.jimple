public abstract class com.google.common.collect.testing.TestIntegerSetGenerator extends java.lang.Object implements com.google.common.collect.testing.TestSetGenerator
{
public void <init>()
{
com.google.common.collect.testing.TestIntegerSetGenerator v0;
v0 := @this: com.google.common.collect.testing.TestIntegerSetGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public com.google.common.collect.testing.SampleElements samples()
{
com.google.common.collect.testing.SampleElements$Ints v1;
com.google.common.collect.testing.TestIntegerSetGenerator v0;
v0 := @this: com.google.common.collect.testing.TestIntegerSetGenerator;
v1 = new com.google.common.collect.testing.SampleElements$Ints;
specialinvoke v1.<com.google.common.collect.testing.SampleElements$Ints: void <init>()>();
return v1;
}
public transient java.util.Set create(java.lang.Object[])
{
java.lang.Object[] v1;
java.util.Set v9;
com.google.common.collect.testing.TestIntegerSetGenerator v0;
int v2, v4, v5, v6, v8;
java.lang.Object v7;
java.lang.Integer[] v3;
v0 := @this: com.google.common.collect.testing.TestIntegerSetGenerator;
v1 := @parameter0: java.lang.Object[];
v2 = lengthof v1;
v3 = newarray (java.lang.Integer)[v2];
v4 = 0;
v5 = lengthof v1;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v1[v6];
v8 = v4;
v4 = v4 + 1;
v3[v8] = v7;
v6 = v6 + 1;
goto label1;
label2:
v9 = virtualinvoke v0.<com.google.common.collect.testing.TestIntegerSetGenerator: java.util.Set create(java.lang.Integer[])>(v3);
return v9;
}
protected abstract java.util.Set create(java.lang.Integer[]);
public java.lang.Integer[] createArray(int)
{
int v1;
java.lang.Integer[] v2;
com.google.common.collect.testing.TestIntegerSetGenerator v0;
v0 := @this: com.google.common.collect.testing.TestIntegerSetGenerator;
v1 := @parameter0: int;
v2 = newarray (java.lang.Integer)[v1];
return v2;
}
public java.util.List order(java.util.List)
{
java.util.List v1;
com.google.common.collect.testing.TestIntegerSetGenerator v0;
v0 := @this: com.google.common.collect.testing.TestIntegerSetGenerator;
v1 := @parameter0: java.util.List;
return v1;
}
}