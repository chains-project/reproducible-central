class com.google.common.collect.testing.TestsForListsInJavaUtil$10$1 extends java.util.AbstractSequentialList
{
final java.util.List val$list;
final com.google.common.collect.testing.TestsForListsInJavaUtil$10 this$1;
void <init>(com.google.common.collect.testing.TestsForListsInJavaUtil$10, java.util.List)
{
java.util.List v2;
com.google.common.collect.testing.TestsForListsInJavaUtil$10 v1;
com.google.common.collect.testing.TestsForListsInJavaUtil$10$1 v0;
v0 := @this: com.google.common.collect.testing.TestsForListsInJavaUtil$10$1;
v1 := @parameter0: com.google.common.collect.testing.TestsForListsInJavaUtil$10;
v2 := @parameter1: java.util.List;
v0.<com.google.common.collect.testing.TestsForListsInJavaUtil$10$1: com.google.common.collect.testing.TestsForListsInJavaUtil$10 this$1> = v1;
v0.<com.google.common.collect.testing.TestsForListsInJavaUtil$10$1: java.util.List val$list> = v2;
specialinvoke v0.<java.util.AbstractSequentialList: void <init>()>();
return;
}
public int size()
{
int v2;
java.util.List v1;
com.google.common.collect.testing.TestsForListsInJavaUtil$10$1 v0;
v0 := @this: com.google.common.collect.testing.TestsForListsInJavaUtil$10$1;
v1 = v0.<com.google.common.collect.testing.TestsForListsInJavaUtil$10$1: java.util.List val$list>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public java.util.ListIterator listIterator(int)
{
java.util.List v2;
java.util.ListIterator v3;
int v1;
com.google.common.collect.testing.TestsForListsInJavaUtil$10$1 v0;
v0 := @this: com.google.common.collect.testing.TestsForListsInJavaUtil$10$1;
v1 := @parameter0: int;
v2 = v0.<com.google.common.collect.testing.TestsForListsInJavaUtil$10$1: java.util.List val$list>;
v3 = interfaceinvoke v2.<java.util.List: java.util.ListIterator listIterator(int)>(v1);
return v3;
}
}