public class com.google.common.collect.testing.google.AbstractListMultimapTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.AbstractListMultimapTester v0;
v0 := @this: com.google.common.collect.testing.google.AbstractListMultimapTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
protected transient void assertGet(java.lang.Object, java.lang.Object[])
{
java.util.List v3;
java.lang.Object[] v2;
com.google.common.collect.testing.google.AbstractListMultimapTester v0;
java.lang.Object v1;
v0 := @this: com.google.common.collect.testing.google.AbstractListMultimapTester;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: void assertGet(java.lang.Object,java.util.Collection)>(v1, v3);
return;
}
protected void assertGet(java.lang.Object, java.util.Collection)
{
java.util.Map v12, v7;
boolean v10, v19, v21, v23, v26, v28, v31, v5;
java.util.Collection v2;
java.util.Set v25;
com.google.common.collect.testing.google.AbstractListMultimapTester v0;
java.util.List v16, v4;
com.google.common.collect.Multiset v30;
com.google.common.collect.Multimap v11, v15, v20, v24, v29, v3, v6, v9;
int v14, v17, v18, v22, v27;
java.lang.Object v1, v13, v8;
v0 := @this: com.google.common.collect.testing.google.AbstractListMultimapTester;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.Collection;
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v4 = interfaceinvoke v3.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualInOrder(java.lang.Iterable,java.lang.Iterable)>(v2, v4);
v5 = interfaceinvoke v2.<java.util.Collection: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v7 = interfaceinvoke v6.<com.google.common.collect.ListMultimap: java.util.Map asMap()>();
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualInOrder(java.lang.Iterable,java.lang.Iterable)>(v2, v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.ListMultimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.AbstractListMultimapTester: void assertFalse(boolean)>(v10);
goto label2;
label1:
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.ListMultimap: java.util.Map asMap()>();
v13 = interfaceinvoke v12.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractListMultimapTester: void assertNull(java.lang.Object)>(v13);
label2:
v14 = interfaceinvoke v2.<java.util.Collection: int size()>();
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v16 = interfaceinvoke v15.<com.google.common.collect.ListMultimap: java.util.List get(java.lang.Object)>(v1);
v17 = interfaceinvoke v16.<java.util.List: int size()>();
staticinvoke <com.google.common.collect.testing.google.AbstractListMultimapTester: void assertEquals(int,int)>(v14, v17);
v18 = interfaceinvoke v2.<java.util.Collection: int size()>();
if v18 <= 0 goto label3;
v19 = 1;
goto label4;
label3:
v19 = 0;
label4:
v20 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v21 = interfaceinvoke v20.<com.google.common.collect.ListMultimap: boolean containsKey(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractListMultimapTester: void assertEquals(boolean,boolean)>(v19, v21);
v22 = interfaceinvoke v2.<java.util.Collection: int size()>();
if v22 <= 0 goto label5;
v23 = 1;
goto label6;
label5:
v23 = 0;
label6:
v24 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v25 = interfaceinvoke v24.<com.google.common.collect.ListMultimap: java.util.Set keySet()>();
v26 = interfaceinvoke v25.<java.util.Set: boolean contains(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractListMultimapTester: void assertEquals(boolean,boolean)>(v23, v26);
v27 = interfaceinvoke v2.<java.util.Collection: int size()>();
if v27 <= 0 goto label7;
v28 = 1;
goto label8;
label7:
v28 = 0;
label8:
v29 = virtualinvoke v0.<com.google.common.collect.testing.google.AbstractListMultimapTester: com.google.common.collect.Multimap multimap()>();
v30 = interfaceinvoke v29.<com.google.common.collect.ListMultimap: com.google.common.collect.Multiset keys()>();
v31 = interfaceinvoke v30.<com.google.common.collect.Multiset: boolean contains(java.lang.Object)>(v1);
staticinvoke <com.google.common.collect.testing.google.AbstractListMultimapTester: void assertEquals(boolean,boolean)>(v28, v31);
return;
}
}