public class com.google.common.collect.testing.google.BiMapClearTester extends com.google.common.collect.testing.google.AbstractBiMapTester
{
public void <init>()
{
com.google.common.collect.testing.google.BiMapClearTester v0;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractBiMapTester: void <init>()>();
return;
}
public void testClearClearsInverse()
{
com.google.common.collect.BiMap v1, v2, v3, v4;
com.google.common.collect.testing.google.BiMapClearTester v0;
boolean v5, v6;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
interfaceinvoke v3.<com.google.common.collect.BiMap: void clear()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v5);
v6 = interfaceinvoke v2.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v6);
return;
}
public void testKeySetClearClearsInverse()
{
com.google.common.collect.BiMap v1, v2, v3, v5;
java.util.Set v4;
com.google.common.collect.testing.google.BiMapClearTester v0;
boolean v6, v7;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v4 = interfaceinvoke v3.<com.google.common.collect.BiMap: java.util.Set keySet()>();
interfaceinvoke v4.<java.util.Set: void clear()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v6);
v7 = interfaceinvoke v2.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v7);
return;
}
public void testValuesClearClearsInverse()
{
com.google.common.collect.BiMap v1, v2, v3, v5;
java.util.Set v4;
com.google.common.collect.testing.google.BiMapClearTester v0;
boolean v6, v7;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v4 = interfaceinvoke v3.<com.google.common.collect.BiMap: java.util.Set values()>();
interfaceinvoke v4.<java.util.Set: void clear()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v6);
v7 = interfaceinvoke v2.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v7);
return;
}
public void testClearInverseClears()
{
com.google.common.collect.BiMap v1, v2, v3;
com.google.common.collect.testing.google.BiMapClearTester v0;
boolean v4, v5;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
interfaceinvoke v2.<com.google.common.collect.BiMap: void clear()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v4 = interfaceinvoke v3.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v4);
v5 = interfaceinvoke v2.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v5);
return;
}
public void testClearInverseKeySetClears()
{
com.google.common.collect.BiMap v1, v2, v4;
com.google.common.collect.testing.google.BiMapClearTester v0;
java.util.Set v3;
boolean v5, v6;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v3 = interfaceinvoke v2.<com.google.common.collect.BiMap: java.util.Set keySet()>();
interfaceinvoke v3.<java.util.Set: void clear()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v5);
v6 = interfaceinvoke v2.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v6);
return;
}
public void testClearInverseValuesClears()
{
com.google.common.collect.BiMap v1, v2, v4;
com.google.common.collect.testing.google.BiMapClearTester v0;
java.util.Set v3;
boolean v5, v6;
v0 := @this: com.google.common.collect.testing.google.BiMapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v3 = interfaceinvoke v2.<com.google.common.collect.BiMap: java.util.Set values()>();
interfaceinvoke v3.<java.util.Set: void clear()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapClearTester: com.google.common.collect.BiMap getMap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v5);
v6 = interfaceinvoke v2.<com.google.common.collect.BiMap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.BiMapClearTester: void assertTrue(boolean)>(v6);
return;
}
}