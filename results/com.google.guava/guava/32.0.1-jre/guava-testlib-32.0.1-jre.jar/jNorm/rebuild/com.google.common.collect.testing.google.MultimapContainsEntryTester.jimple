public class com.google.common.collect.testing.google.MultimapContainsEntryTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testContainsEntryYes()
{
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
java.lang.Object v2, v3;
com.google.common.collect.Multimap v1;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: java.lang.Object v0()>();
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void assertTrue(boolean)>(v4);
return;
}
public void testContainsEntryNo()
{
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
java.lang.Object v2, v3;
com.google.common.collect.Multimap v1;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: java.lang.Object k3()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: java.lang.Object v3()>();
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void assertFalse(boolean)>(v4);
return;
}
public void testContainsEntryAgreesWithGet()
{
java.util.Iterator v2, v6;
com.google.common.collect.testing.SampleElements v1, v5;
java.util.Collection v10;
com.google.common.collect.Multimap v12, v9;
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
java.lang.Object v4, v8;
boolean v11, v13, v3, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.testing.SampleElements sampleKeys()>();
v2 = virtualinvoke v1.<com.google.common.collect.testing.SampleElements: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label3;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.testing.SampleElements sampleValues()>();
v6 = virtualinvoke v5.<com.google.common.collect.testing.SampleElements: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label1;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v4);
v11 = interfaceinvoke v10.<java.util.Collection: boolean contains(java.lang.Object)>(v8);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v4, v8);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void assertEquals(boolean,boolean)>(v11, v13);
goto label2;
label3:
return;
}
public void testContainsEntryNullYes()
{
com.google.common.collect.Multimap v1;
boolean v2;
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: void initMultimapWithNullKeyAndValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void assertTrue(boolean)>(v2);
return;
}
public void testContainsEntryNullNo()
{
com.google.common.collect.Multimap v1;
boolean v2;
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(null, null);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void assertFalse(boolean)>(v2);
return;
}
public void testContainsEntryNullDisallowedBecauseKeyQueriesDisallowed()
{
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: java.lang.Object v3()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(null, v2);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testContainsEntryNullDisallowedBecauseValueQueriesDisallowed()
{
com.google.common.collect.testing.google.MultimapContainsEntryTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.google.MultimapContainsEntryTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapContainsEntryTester: java.lang.Object k3()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v2, null);
staticinvoke <com.google.common.collect.testing.google.MultimapContainsEntryTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
}