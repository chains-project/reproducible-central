public class com.google.common.collect.testing.google.MultimapEqualsTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapEqualsTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testEqualsTrue()
{
java.lang.Object[] v2, v6;
java.util.Collection v5;
com.google.common.collect.testing.google.MultimapEqualsTester v0;
com.google.common.collect.Multimap v3;
com.google.common.testing.EqualsTester v1, v8;
java.lang.Object v4, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
v1 = new com.google.common.testing.EqualsTester;
specialinvoke v1.<com.google.common.testing.EqualsTester: void <init>()>();
v2 = newarray (java.lang.Object)[2];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v2[0] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object getSubjectGenerator()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.util.Collection getSampleElements()>();
v6 = interfaceinvoke v5.<java.util.Collection: java.lang.Object[] toArray()>();
v7 = interfaceinvoke v4.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v6);
v2[1] = v7;
v8 = virtualinvoke v1.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v2);
virtualinvoke v8.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testEqualsFalse()
{
java.util.Map$Entry v5;
java.lang.Object[] v10, v12, v7;
java.util.Collection v2;
com.google.common.collect.testing.google.MultimapEqualsTester v0;
com.google.common.collect.Multimap v8;
com.google.common.testing.EqualsTester v14, v6, v9;
java.util.ArrayList v1;
java.lang.Object v11, v13, v3, v4;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.util.Collection getSampleElements()>();
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object k0()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object v3()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, v4);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
v6 = new com.google.common.testing.EqualsTester;
specialinvoke v6.<com.google.common.testing.EqualsTester: void <init>()>();
v7 = newarray (java.lang.Object)[1];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v7[0] = v8;
v9 = virtualinvoke v6.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v7);
v10 = newarray (java.lang.Object)[1];
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object getSubjectGenerator()>();
v12 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray()>();
v13 = interfaceinvoke v11.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v12);
v10[0] = v13;
v14 = virtualinvoke v9.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v10);
virtualinvoke v14.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testEqualsMultimapWithNullKey()
{
java.lang.Object[] v4, v6;
com.google.common.collect.testing.google.MultimapEqualsTester v0;
com.google.common.collect.Multimap v1, v2;
com.google.common.testing.EqualsTester v10, v3, v5;
java.lang.Object v7, v9;
java.util.Map$Entry[] v8;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: void initMultimapWithNullKey()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v3 = new com.google.common.testing.EqualsTester;
specialinvoke v3.<com.google.common.testing.EqualsTester: void <init>()>();
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = virtualinvoke v3.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v4);
v6 = newarray (java.lang.Object)[2];
v6[0] = v2;
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object getSubjectGenerator()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.util.Map$Entry[] createArrayWithNullKey()>();
v9 = interfaceinvoke v7.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v8);
v6[1] = v9;
v10 = virtualinvoke v5.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v6);
virtualinvoke v10.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testEqualsMultimapWithNullValue()
{
java.lang.Object[] v4, v6;
com.google.common.collect.testing.google.MultimapEqualsTester v0;
com.google.common.collect.Multimap v1, v2;
com.google.common.testing.EqualsTester v10, v3, v5;
java.lang.Object v7, v9;
java.util.Map$Entry[] v8;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: void initMultimapWithNullValue()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v3 = new com.google.common.testing.EqualsTester;
specialinvoke v3.<com.google.common.testing.EqualsTester: void <init>()>();
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = virtualinvoke v3.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v4);
v6 = newarray (java.lang.Object)[2];
v6[0] = v2;
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object getSubjectGenerator()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.util.Map$Entry[] createArrayWithNullValue()>();
v9 = interfaceinvoke v7.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v8);
v6[1] = v9;
v10 = virtualinvoke v5.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v6);
virtualinvoke v10.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testNotEqualsEmpty()
{
java.lang.Object[] v2, v5, v7;
com.google.common.collect.testing.google.MultimapEqualsTester v0;
com.google.common.collect.Multimap v3;
com.google.common.testing.EqualsTester v1, v4, v9;
java.lang.Object v6, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
v1 = new com.google.common.testing.EqualsTester;
specialinvoke v1.<com.google.common.testing.EqualsTester: void <init>()>();
v2 = newarray (java.lang.Object)[1];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v2[0] = v3;
v4 = virtualinvoke v1.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v2);
v5 = newarray (java.lang.Object)[1];
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: java.lang.Object getSubjectGenerator()>();
v7 = newarray (java.lang.Object)[0];
v8 = interfaceinvoke v6.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v7);
v5[0] = v8;
v9 = virtualinvoke v4.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v5);
virtualinvoke v9.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testHashCodeMatchesAsMap()
{
java.util.Map v2;
int v3, v5;
com.google.common.collect.testing.google.MultimapEqualsTester v0;
com.google.common.collect.Multimap v1, v4;
v0 := @this: com.google.common.collect.testing.google.MultimapEqualsTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v3 = interfaceinvoke v2.<java.util.Map: int hashCode()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEqualsTester: com.google.common.collect.Multimap multimap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.Multimap: int hashCode()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEqualsTester: void assertEquals(int,int)>(v3, v5);
return;
}
}