public class com.google.common.collect.testing.google.MultimapKeySetTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapKeySetTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapKeySetTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testKeySet()
{
java.util.Iterator v2;
java.util.Collection v1;
java.util.Set v6;
com.google.common.collect.Multimap v5;
com.google.common.collect.testing.google.MultimapKeySetTester v0;
java.lang.Object v4, v7;
boolean v3, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapKeySetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.util.Collection getSampleElements()>();
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v7 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Set: boolean contains(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapKeySetTester: void assertTrue(boolean)>(v8);
goto label1;
label2:
return;
}
public void testKeySetContainsNullKeyPresent()
{
java.util.Set v2;
com.google.common.collect.testing.google.MultimapKeySetTester v0;
com.google.common.collect.Multimap v1;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapKeySetTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: void initMultimapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapKeySetTester: void assertTrue(boolean)>(v3);
return;
}
public void testKeySetContainsNullKeyAbsent()
{
java.util.Set v2;
com.google.common.collect.testing.google.MultimapKeySetTester v0;
com.google.common.collect.Multimap v1;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapKeySetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapKeySetTester: void assertFalse(boolean)>(v3);
return;
}
public void testKeySetRemovePropagatesToMultimap()
{
java.lang.Object[] v15;
com.google.common.collect.Multimap v1, v12, v6;
int v10, v11, v13, v4;
boolean v5, v9;
java.util.Collection v3;
java.util.Set v7;
com.google.common.collect.testing.google.MultimapKeySetTester v0;
java.lang.Object v14, v2, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapKeySetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = interfaceinvoke v3.<java.util.Collection: int size()>();
if v4 <= 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v7 = interfaceinvoke v6.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.lang.Object k0()>();
v9 = interfaceinvoke v7.<java.util.Set: boolean remove(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultimapKeySetTester: void assertEquals(boolean,boolean)>(v5, v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: int getNumElements()>();
v11 = v10 - v4;
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapKeySetTester: void assertEquals(int,int)>(v11, v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.lang.Object k0()>();
v15 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: void assertGet(java.lang.Object,java.lang.Object[])>(v14, v15);
return;
}
public void testKeySetIteratorRemove()
{
java.lang.Object[] v17;
com.google.common.collect.Multimap v1, v14, v5;
int v12, v13, v15, v4;
boolean v11, v8;
java.util.Iterator v7;
java.util.Collection v3;
java.util.Set v6;
com.google.common.collect.testing.google.MultimapKeySetTester v0;
java.lang.Object v10, v16, v2, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapKeySetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = interfaceinvoke v3.<java.util.Collection: int size()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v7 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label2;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.lang.Object k0()>();
v11 = virtualinvoke v9.<java.lang.Object: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label1;
interfaceinvoke v7.<java.util.Iterator: void remove()>();
goto label1;
label2:
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: int getNumElements()>();
v13 = v12 - v4;
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapKeySetTester: void assertEquals(int,int)>(v13, v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: java.lang.Object k0()>();
v17 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapKeySetTester: void assertGet(java.lang.Object,java.lang.Object[])>(v16, v17);
return;
}
}