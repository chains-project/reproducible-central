public class com.google.common.collect.testing.google.MultimapPutIterableTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testPutAllNonEmptyIterableOnPresentKey()
{
com.google.common.collect.testing.google.MultimapPutIterableTester$1 v3;
java.lang.Object[] v6;
com.google.common.collect.Multimap v1;
java.lang.Object v2, v5, v7, v8, v9;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v3 = new com.google.common.collect.testing.google.MultimapPutIterableTester$1;
specialinvoke v3.<com.google.common.collect.testing.google.MultimapPutIterableTester$1: void <init>(com.google.common.collect.testing.google.MultimapPutIterableTester)>(v0);
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v4);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v6 = newarray (java.lang.Object)[3];
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v0()>();
v6[0] = v7;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v6[1] = v8;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v6[2] = v9;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(v5, v6);
return;
}
public void testPutAllNonEmptyCollectionOnPresentKey()
{
java.lang.Object[] v3, v9;
com.google.common.collect.Multimap v1;
java.util.ArrayList v6;
java.lang.Object v10, v11, v12, v2, v4, v5, v8;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v7;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v3[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v3[1] = v5;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v7 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v6);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v7);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v9 = newarray (java.lang.Object)[3];
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v0()>();
v9[0] = v10;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v9[1] = v11;
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v9[2] = v12;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(v8, v9);
return;
}
public void testPutAllNonEmptyIterableOnAbsentKey()
{
com.google.common.collect.testing.google.MultimapPutIterableTester$2 v3;
java.lang.Object[] v6;
com.google.common.collect.Multimap v1;
java.lang.Object v2, v5, v7, v8;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v3 = new com.google.common.collect.testing.google.MultimapPutIterableTester$2;
specialinvoke v3.<com.google.common.collect.testing.google.MultimapPutIterableTester$2: void <init>(com.google.common.collect.testing.google.MultimapPutIterableTester)>(v0);
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v4);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v6 = newarray (java.lang.Object)[2];
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v6[0] = v7;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v6[1] = v8;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(v5, v6);
return;
}
public void testPutAllNonEmptyCollectionOnAbsentKey()
{
java.lang.Object[] v3, v9;
com.google.common.collect.Multimap v1;
java.util.ArrayList v6;
java.lang.Object v10, v11, v2, v4, v5, v8;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v7;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v3[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v3[1] = v5;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v7 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v6);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v7);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v9 = newarray (java.lang.Object)[2];
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v9[0] = v10;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v9[1] = v11;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(v8, v9);
return;
}
public void testPutAllNullValueOnPresentKey_supported()
{
java.lang.Object[] v3, v8;
com.google.common.collect.Multimap v1;
java.util.ArrayList v5;
java.lang.Object v10, v2, v4, v7, v9;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v3[0] = v4;
v3[1] = null;
v5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v6 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v5);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v8 = newarray (java.lang.Object)[3];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v0()>();
v8[0] = v9;
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v8[1] = v10;
v8[2] = null;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(v7, v8);
return;
}
public void testPutAllNullValueOnAbsentKey_supported()
{
java.lang.Object[] v3, v8;
com.google.common.collect.Multimap v1;
java.util.ArrayList v5;
java.lang.Object v2, v4, v7, v9;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v3 = newarray (java.lang.Object)[2];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v3[0] = v4;
v3[1] = null;
v5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
v6 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v5);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v8 = newarray (java.lang.Object)[2];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v8[0] = v9;
v8[1] = null;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(v7, v8);
return;
}
public void testPutAllNullValueSingle_unsupported()
{
java.lang.Object[] v3;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
java.util.ArrayList v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k1()>();
v3 = newarray (java.lang.Object)[1];
v3[0] = null;
v4 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v3);
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v4);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void expectUnchanged()>();
return;
}
public void testPutAllNullValueNullLast_unsupported()
{
java.lang.Object[] v16, v4;
com.google.common.collect.Multimap v14, v2, v21, v8;
java.lang.NullPointerException v7;
java.util.ArrayList v12, v13, v18, v19, v6;
int v1, v11, v15, v20, v22;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
java.util.Collection v10;
java.lang.Object v17, v3, v5, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: int getNumElements()>();
label1:
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v4 = newarray (java.lang.Object)[2];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v4[0] = v5;
v4[1] = null;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v4);
interfaceinvoke v2.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v3, v6);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void fail()>();
label2:
goto label4;
label3:
v7 := @caughtexception;
label4:
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v10 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v9);
v11 = interfaceinvoke v10.<java.util.Collection: int size()>();
if v11 != 0 goto label5;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void expectUnchanged()>();
v12 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();
v13 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v10);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(java.lang.Object,java.lang.Object)>(v12, v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(int,int)>(v1, v15);
goto label6;
label5:
v16 = newarray (java.lang.Object)[1];
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v16[0] = v17;
v18 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v16);
v19 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v10);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(java.lang.Object,java.lang.Object)>(v18, v19);
v20 = v1 + 1;
v21 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v22 = interfaceinvoke v21.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(int,int)>(v20, v22);
label6:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testPutAllNullValueNullFirst_unsupported()
{
java.lang.Object[] v4;
java.util.Collection v11;
com.google.common.collect.Multimap v13, v2, v9;
java.lang.NullPointerException v7;
java.util.ArrayList v12, v6, v8;
int v1, v14;
java.lang.Object v10, v3, v5;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: int getNumElements()>();
label1:
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v4 = newarray (java.lang.Object)[2];
v4[0] = null;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v4[1] = v5;
v6 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v4);
interfaceinvoke v2.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v3, v6);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void fail()>();
label2:
goto label4;
label3:
v7 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void expectUnchanged()>();
v8 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v11 = interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v10);
v12 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Iterable)>(v11);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(java.lang.Object,java.lang.Object)>(v8, v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(int,int)>(v1, v14);
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testPutAllOnPresentNullKey()
{
java.lang.Object[] v2, v7;
com.google.common.collect.Multimap v1;
java.util.ArrayList v5;
java.lang.Object v3, v4, v8, v9;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v6;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = newarray (java.lang.Object)[2];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v2[0] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v2[1] = v4;
v5 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v2);
v6 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(null, v5);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v6);
v7 = newarray (java.lang.Object)[2];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v7[0] = v8;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v7[1] = v9;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void assertGet(java.lang.Object,java.lang.Object[])>(null, v7);
return;
}
public void testPutAllNullForbidden()
{
java.util.List v3;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
java.lang.NullPointerException v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v2);
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(null, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v4 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testPutAllEmptyCollectionOnAbsentKey()
{
java.util.List v3;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertFalse(boolean)>(v4);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void expectUnchanged()>();
return;
}
public void testPutAllEmptyIterableOnAbsentKey()
{
com.google.common.collect.testing.google.MultimapPutIterableTester$3 v1;
java.lang.Object v3;
com.google.common.collect.Multimap v2;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = new com.google.common.collect.testing.google.MultimapPutIterableTester$3;
specialinvoke v1.<com.google.common.collect.testing.google.MultimapPutIterableTester$3: void <init>(com.google.common.collect.testing.google.MultimapPutIterableTester)>(v0);
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
v4 = interfaceinvoke v2.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v3, v1);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertFalse(boolean)>(v4);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void expectUnchanged()>();
return;
}
public void testPutAllEmptyIterableOnPresentKey()
{
java.util.List v3;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v2, v3);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: void expectUnchanged()>();
return;
}
public void testPutAllOnlyCallsIteratorOnce()
{
com.google.common.collect.testing.google.MultimapPutIterableTester$4 v1;
java.lang.Object v3;
com.google.common.collect.Multimap v2;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = new com.google.common.collect.testing.google.MultimapPutIterableTester$4;
specialinvoke v1.<com.google.common.collect.testing.google.MultimapPutIterableTester$4: void <init>(com.google.common.collect.testing.google.MultimapPutIterableTester)>(v0);
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k3()>();
interfaceinvoke v2.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v3, v1);
return;
}
public void testPutAllPropagatesToGet()
{
java.lang.Object[] v14, v7;
com.google.common.collect.Multimap v1, v5;
java.util.ArrayList v10;
int v12, v13, v4;
com.google.common.collect.testing.google.MultimapPutIterableTester v0;
boolean v11;
java.util.Collection v3;
java.lang.Object v15, v16, v2, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapPutIterableTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v2);
v4 = interfaceinvoke v3.<java.util.Collection: int size()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: com.google.common.collect.Multimap multimap()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object k0()>();
v7 = newarray (java.lang.Object)[2];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v7[0] = v8;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v7[1] = v9;
v10 = staticinvoke <com.google.common.collect.Lists: java.util.ArrayList newArrayList(java.lang.Object[])>(v7);
v11 = interfaceinvoke v5.<com.google.common.collect.Multimap: boolean putAll(java.lang.Object,java.lang.Iterable)>(v6, v10);
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertTrue(boolean)>(v11);
v12 = v4 + 2;
v13 = interfaceinvoke v3.<java.util.Collection: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapPutIterableTester: void assertEquals(int,int)>(v12, v13);
v14 = newarray (java.lang.Object)[2];
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v3()>();
v14[0] = v15;
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapPutIterableTester: java.lang.Object v4()>();
v14[1] = v16;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContainsAllOf(java.lang.Iterable,java.lang.Object[])>(v3, v14);
return;
}
}