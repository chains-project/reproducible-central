public class com.google.common.collect.testing.google.MultisetContainsTester extends com.google.common.collect.testing.google.AbstractMultisetTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultisetContainsTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetContainsTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultisetTester: void <init>()>();
return;
}
public void testContainsAllMultisetIgnoresFrequency()
{
java.lang.Object[] v3;
com.google.common.collect.Multiset v1;
com.google.common.collect.testing.google.MultisetContainsTester v0;
java.lang.Object v2, v4, v5, v6, v7;
boolean v8;
v0 := @this: com.google.common.collect.testing.google.MultisetContainsTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: com.google.common.collect.Multiset getMultiset()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object getSubjectGenerator()>();
v3 = newarray (java.lang.Object)[3];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object e0()>();
v3[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object e0()>();
v3[1] = v5;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object e0()>();
v3[2] = v6;
v7 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v3);
v8 = interfaceinvoke v1.<com.google.common.collect.Multiset: boolean containsAll(java.util.Collection)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultisetContainsTester: void assertTrue(boolean)>(v8);
return;
}
public void testContainsAllListIgnoresFrequency()
{
java.lang.Object[] v2;
com.google.common.collect.Multiset v1;
com.google.common.collect.testing.google.MultisetContainsTester v0;
java.util.List v6;
java.lang.Object v3, v4, v5;
boolean v7;
v0 := @this: com.google.common.collect.testing.google.MultisetContainsTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: com.google.common.collect.Multiset getMultiset()>();
v2 = newarray (java.lang.Object)[3];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object e0()>();
v2[0] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object e0()>();
v2[1] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetContainsTester: java.lang.Object e0()>();
v2[2] = v5;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v7 = interfaceinvoke v1.<com.google.common.collect.Multiset: boolean containsAll(java.util.Collection)>(v6);
staticinvoke <com.google.common.collect.testing.google.MultisetContainsTester: void assertTrue(boolean)>(v7);
return;
}
}