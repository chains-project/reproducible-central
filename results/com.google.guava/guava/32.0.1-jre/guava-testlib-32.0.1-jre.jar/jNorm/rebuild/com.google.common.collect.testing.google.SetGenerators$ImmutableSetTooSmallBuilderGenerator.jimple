public class com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooSmallBuilderGenerator extends com.google.common.collect.testing.TestStringSetGenerator
{
public void <init>()
{
com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooSmallBuilderGenerator v0;
v0 := @this: com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooSmallBuilderGenerator;
specialinvoke v0.<com.google.common.collect.testing.TestStringSetGenerator: void <init>()>();
return;
}
protected java.util.Set create(java.lang.String[])
{
com.google.common.collect.ImmutableSet v10;
com.google.common.collect.ImmutableSet$Builder v6;
java.lang.String[] v1;
java.util.HashSet v2;
com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooSmallBuilderGenerator v0;
int v3, v4, v5, v7, v8;
java.lang.String v9;
v0 := @this: com.google.common.collect.testing.google.SetGenerators$ImmutableSetTooSmallBuilderGenerator;
v1 := @parameter0: java.lang.String[];
v2 = staticinvoke <com.google.common.collect.Sets: java.util.HashSet newHashSet(java.lang.Object[])>(v1);
v3 = virtualinvoke v2.<java.util.HashSet: int size()>();
v4 = v3 - 1;
v5 = staticinvoke <java.lang.Math: int max(int,int)>(0, v4);
v6 = staticinvoke <com.google.common.collect.ImmutableSet: com.google.common.collect.ImmutableSet$Builder builderWithExpectedSize(int)>(v5);
v7 = lengthof v1;
v8 = 0;
label1:
if v8 >= v7 goto label2;
v9 = v1[v8];
virtualinvoke v6.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet$Builder add(java.lang.Object)>(v9);
v8 = v8 + 1;
goto label1;
label2:
v10 = virtualinvoke v6.<com.google.common.collect.ImmutableSet$Builder: com.google.common.collect.ImmutableSet build()>();
return v10;
}
}