public class com.google.common.collect.testing.testers.CollectionToStringTester extends com.google.common.collect.testing.AbstractCollectionTester
{
public void <init>()
{
com.google.common.collect.testing.testers.CollectionToStringTester v0;
v0 := @this: com.google.common.collect.testing.testers.CollectionToStringTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: void <init>()>();
return;
}
public void testToString_minimal()
{
com.google.common.collect.testing.testers.CollectionToStringTester v0;
java.lang.String v2;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.testers.CollectionToStringTester;
v1 = v0.<com.google.common.collect.testing.testers.CollectionToStringTester: java.util.Collection collection>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.testers.CollectionToStringTester: void assertNotNull(java.lang.String,java.lang.Object)>("toString() should not return null", v2);
return;
}
public void testToString_size0()
{
com.google.common.collect.testing.testers.CollectionToStringTester v0;
java.lang.String v2;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.testers.CollectionToStringTester;
v1 = v0.<com.google.common.collect.testing.testers.CollectionToStringTester: java.util.Collection collection>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.testers.CollectionToStringTester: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("emptyCollection.toString should return []", "[]", v2);
return;
}
public void testToString_size1()
{
com.google.common.collect.testing.testers.CollectionToStringTester v0;
java.util.Collection v3;
java.lang.Object v1;
java.lang.String v2, v4;
v0 := @this: com.google.common.collect.testing.testers.CollectionToStringTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.CollectionToStringTester: java.lang.Object e0()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[\u0001]");
v3 = v0.<com.google.common.collect.testing.testers.CollectionToStringTester: java.util.Collection collection>;
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.testers.CollectionToStringTester: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("size1Collection.toString should return [{element}]", v2, v4);
return;
}
public void testToString_sizeSeveral()
{
com.google.common.collect.testing.testers.CollectionToStringTester v0;
java.util.List v1, v2;
java.util.Collection v4;
java.lang.String v3, v5;
v0 := @this: com.google.common.collect.testing.testers.CollectionToStringTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.CollectionToStringTester: java.util.List getOrderedElements()>();
v2 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v1);
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
v4 = v0.<com.google.common.collect.testing.testers.CollectionToStringTester: java.util.Collection collection>;
v5 = virtualinvoke v4.<java.lang.Object: java.lang.String toString()>();
staticinvoke <com.google.common.collect.testing.testers.CollectionToStringTester: void assertEquals(java.lang.String,java.lang.String,java.lang.String)>("collection.toString() incorrect", v3, v5);
return;
}
public void testToString_null()
{
com.google.common.collect.testing.testers.CollectionToStringTester v0;
v0 := @this: com.google.common.collect.testing.testers.CollectionToStringTester;
virtualinvoke v0.<com.google.common.collect.testing.testers.CollectionToStringTester: void initCollectionWithNullElement()>();
virtualinvoke v0.<com.google.common.collect.testing.testers.CollectionToStringTester: void testToString_minimal()>();
return;
}
}