public class com.google.common.collect.testing.testers.ListRemoveAllTester extends com.google.common.collect.testing.testers.AbstractListTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListRemoveAllTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListRemoveAllTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: void <init>()>();
return;
}
public void testRemoveAll_duplicate()
{
java.lang.Object[] v3, v7;
com.google.common.collect.testing.testers.ListRemoveAllTester v0;
java.util.List v10, v6;
java.lang.Object v2, v4, v5;
com.google.common.collect.testing.MinimalCollection v8;
com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate v1;
boolean v11, v9;
v0 := @this: com.google.common.collect.testing.testers.ListRemoveAllTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveAllTester: com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate createArrayWithDuplicateElement()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveAllTester: java.lang.Object getSubjectGenerator()>();
v3 = v1.<com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate: java.lang.Object[] elements>;
v4 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v3);
v0.<com.google.common.collect.testing.testers.ListRemoveAllTester: java.util.Collection collection> = v4;
v5 = v1.<com.google.common.collect.testing.AbstractContainerTester$ArrayWithDuplicate: java.lang.Object duplicate>;
v6 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveAllTester: java.util.List getList()>();
v7 = newarray (java.lang.Object)[1];
v7[0] = v5;
v8 = staticinvoke <com.google.common.collect.testing.MinimalCollection: com.google.common.collect.testing.MinimalCollection of(java.lang.Object[])>(v7);
v9 = interfaceinvoke v6.<java.util.List: boolean removeAll(java.util.Collection)>(v8);
staticinvoke <com.google.common.collect.testing.testers.ListRemoveAllTester: void assertTrue(java.lang.String,boolean)>("removeAll(intersectingCollection) should return true", v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListRemoveAllTester: java.util.List getList()>();
v11 = interfaceinvoke v10.<java.util.List: boolean contains(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.testers.ListRemoveAllTester: void assertFalse(java.lang.String,boolean)>("after removeAll(e), a collection should not contain e even if it initially contained e more than once.", v11);
return;
}
}