final class com.google.common.testing.ClusterException extends java.lang.RuntimeException
{
final java.util.Collection exceptions;
private void <init>(java.util.Collection)
{
com.google.common.testing.ClusterException v0;
java.util.Iterator v4;
java.util.Collection v1, v7;
java.util.ArrayList v6;
int v2;
java.lang.Object v5;
java.lang.String v3;
v0 := @this: com.google.common.testing.ClusterException;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: int size()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 exceptions were thrown. The first exception is listed as a cause.");
v4 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
v5 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v0.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v3, v5);
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>(java.util.Collection)>(v1);
v7 = staticinvoke <java.util.Collections: java.util.Collection unmodifiableCollection(java.util.Collection)>(v6);
v0.<com.google.common.testing.ClusterException: java.util.Collection exceptions> = v7;
return;
}
static transient java.lang.RuntimeException create(java.lang.Throwable[])
{
java.util.List v2;
java.lang.Throwable[] v0;
java.lang.RuntimeException v3;
java.util.ArrayList v1;
v0 := @parameter0: java.lang.Throwable[];
v1 = new java.util.ArrayList;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v3 = staticinvoke <com.google.common.testing.ClusterException: java.lang.RuntimeException create(java.util.Collection)>(v1);
return v3;
}
static java.lang.RuntimeException create(java.util.Collection)
{
java.lang.Throwable v9;
com.google.common.testing.ClusterException v8;
java.util.Iterator v4;
java.util.Collection v0;
java.lang.RuntimeException v7;
java.lang.IllegalArgumentException v2;
int v1, v3;
java.lang.Object v5;
boolean v6;
v0 := @parameter0: java.util.Collection;
v1 = interfaceinvoke v0.<java.util.Collection: int size()>();
if v1 != 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t create an ExceptionCollection with no exceptions");
throw v2;
label1:
v3 = interfaceinvoke v0.<java.util.Collection: int size()>();
if v3 != 1 goto label3;
v4 = interfaceinvoke v0.<java.util.Collection: java.util.Iterator iterator()>();
v5 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v6 = v5 instanceof java.lang.RuntimeException;
if v6 == 0 goto label2;
return v9;
label2:
v7 = new java.lang.RuntimeException;
specialinvoke v7.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v5);
return v7;
label3:
v8 = new com.google.common.testing.ClusterException;
specialinvoke v8.<com.google.common.testing.ClusterException: void <init>(java.util.Collection)>(v0);
return v8;
}
}