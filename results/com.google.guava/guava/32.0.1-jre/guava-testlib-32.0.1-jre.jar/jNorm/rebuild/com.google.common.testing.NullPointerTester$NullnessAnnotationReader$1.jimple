enum class com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1 extends com.google.common.testing.NullPointerTester$NullnessAnnotationReader
{
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1 v0;
v0 := @this: com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<com.google.common.testing.NullPointerTester$NullnessAnnotationReader: void <init>(java.lang.String,int)>(v1, v2);
return;
}
boolean isNullable(com.google.common.reflect.Invokable)
{
java.lang.reflect.AnnotatedType v4;
java.lang.'annotation'.Annotation[] v5;
com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1 v0;
com.google.common.testing.NullPointerTester$NullnessAnnotationReader v2;
com.google.common.reflect.Invokable v1;
boolean v3, v6, v7;
v0 := @this: com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1;
v1 := @parameter0: com.google.common.reflect.Invokable;
v2 = <com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1: com.google.common.testing.NullPointerTester$NullnessAnnotationReader FROM_DECLARATION_ANNOTATIONS_ONLY>;
v3 = virtualinvoke v2.<com.google.common.testing.NullPointerTester$NullnessAnnotationReader: boolean isNullable(com.google.common.reflect.Invokable)>(v1);
if v3 != 0 goto label1;
v4 = virtualinvoke v1.<com.google.common.reflect.Invokable: java.lang.reflect.AnnotatedType getAnnotatedReturnType()>();
v5 = interfaceinvoke v4.<java.lang.reflect.AnnotatedType: java.lang.'annotation'.Annotation[] getAnnotations()>();
v6 = staticinvoke <com.google.common.testing.NullPointerTester: boolean containsNullable(java.lang.'annotation'.Annotation[])>(v5);
if v6 == 0 goto label2;
label1:
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
return v7;
}
boolean isNullable(com.google.common.reflect.Parameter)
{
com.google.common.reflect.Parameter v1;
java.lang.reflect.AnnotatedType v4, v7;
java.lang.'annotation'.Annotation[] v5;
com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1 v0;
com.google.common.testing.NullPointerTester$NullnessAnnotationReader v2;
java.lang.reflect.Type v8;
boolean v10, v3, v6, v9;
v0 := @this: com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1;
v1 := @parameter0: com.google.common.reflect.Parameter;
v2 = <com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1: com.google.common.testing.NullPointerTester$NullnessAnnotationReader FROM_DECLARATION_ANNOTATIONS_ONLY>;
v3 = virtualinvoke v2.<com.google.common.testing.NullPointerTester$NullnessAnnotationReader: boolean isNullable(com.google.common.reflect.Parameter)>(v1);
if v3 != 0 goto label1;
v4 = virtualinvoke v1.<com.google.common.reflect.Parameter: java.lang.reflect.AnnotatedType getAnnotatedType()>();
v5 = interfaceinvoke v4.<java.lang.reflect.AnnotatedType: java.lang.'annotation'.Annotation[] getAnnotations()>();
v6 = staticinvoke <com.google.common.testing.NullPointerTester: boolean containsNullable(java.lang.'annotation'.Annotation[])>(v5);
if v6 != 0 goto label1;
v7 = virtualinvoke v1.<com.google.common.reflect.Parameter: java.lang.reflect.AnnotatedType getAnnotatedType()>();
v8 = interfaceinvoke v7.<java.lang.reflect.AnnotatedType: java.lang.reflect.Type getType()>();
v9 = virtualinvoke v0.<com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1: boolean isNullableTypeVariable(java.lang.reflect.Type)>(v8);
if v9 == 0 goto label2;
label1:
v10 = 1;
goto label3;
label2:
v10 = 0;
label3:
return v10;
}
boolean isNullableTypeVariable(java.lang.reflect.Type)
{
java.lang.reflect.AnnotatedType v6;
java.lang.'annotation'.Annotation[] v7;
com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1 v0;
java.lang.reflect.Type v1, v9;
int v4, v5;
java.lang.reflect.AnnotatedType[] v3;
boolean v10, v2, v8;
v0 := @this: com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1;
v1 := @parameter0: java.lang.reflect.Type;
v2 = v1 instanceof java.lang.reflect.TypeVariable;
if v2 != 0 goto label1;
return 0;
label1:
v3 = interfaceinvoke v1.<java.lang.reflect.TypeVariable: java.lang.reflect.AnnotatedType[] getAnnotatedBounds()>();
v4 = lengthof v3;
v5 = 0;
label2:
if v5 >= v4 goto label5;
v6 = v3[v5];
v7 = interfaceinvoke v6.<java.lang.reflect.AnnotatedType: java.lang.'annotation'.Annotation[] getAnnotations()>();
v8 = staticinvoke <com.google.common.testing.NullPointerTester: boolean containsNullable(java.lang.'annotation'.Annotation[])>(v7);
if v8 != 0 goto label3;
v9 = interfaceinvoke v6.<java.lang.reflect.AnnotatedType: java.lang.reflect.Type getType()>();
v10 = virtualinvoke v0.<com.google.common.testing.NullPointerTester$NullnessAnnotationReader$1: boolean isNullableTypeVariable(java.lang.reflect.Type)>(v9);
if v10 == 0 goto label4;
label3:
return 1;
label4:
v5 = v5 + 1;
goto label2;
label5:
return 0;
}
}