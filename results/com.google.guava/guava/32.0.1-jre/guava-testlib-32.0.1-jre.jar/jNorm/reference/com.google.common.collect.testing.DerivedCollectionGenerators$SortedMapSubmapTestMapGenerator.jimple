public class com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator extends com.google.common.collect.testing.DerivedCollectionGenerators$ForwardingTestMapGenerator implements com.google.common.collect.testing.TestSortedMapGenerator
{
final com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to';
final com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from';
final java.lang.Object firstInclusive;
final java.lang.Object lastInclusive;
private final java.util.Comparator entryComparator;
public void <init>(com.google.common.collect.testing.TestSortedMapGenerator, com.google.common.collect.testing.DerivedCollectionGenerators$Bound, com.google.common.collect.testing.DerivedCollectionGenerators$Bound)
{
java.lang.Object[] v4;
com.google.common.collect.testing.SampleElements v8;
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
com.google.common.collect.testing.TestSortedMapGenerator v1;
int v19, v20;
java.util.Map$Entry[] v9;
java.util.List v15;
com.google.common.collect.testing.DerivedCollectionGenerators$Bound v2, v3;
java.lang.Object v10, v11, v12, v13, v14, v17, v18, v21, v22;
java.util.Comparator v16, v6, v7;
java.util.SortedMap v5;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 := @parameter0: com.google.common.collect.testing.TestSortedMapGenerator;
v2 := @parameter1: com.google.common.collect.testing.DerivedCollectionGenerators$Bound;
v3 := @parameter2: com.google.common.collect.testing.DerivedCollectionGenerators$Bound;
specialinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$ForwardingTestMapGenerator: void <init>(com.google.common.collect.testing.TestMapGenerator)>(v1);
v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to'> = v2;
v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from'> = v3;
v4 = newarray (java.lang.Object)[0];
v5 = interfaceinvoke v1.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.SortedMap create(java.lang.Object[])>(v4);
v6 = interfaceinvoke v5.<java.util.SortedMap: java.util.Comparator comparator()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Comparator entryComparator(java.util.Comparator)>(v6);
v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.util.Comparator entryComparator> = v7;
v8 = interfaceinvoke v1.<com.google.common.collect.testing.TestSortedMapGenerator: com.google.common.collect.testing.SampleElements samples()>();
v9 = newarray (java.util.Map$Entry)[5];
v10 = virtualinvoke v8.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v9[0] = v10;
v11 = virtualinvoke v8.<com.google.common.collect.testing.SampleElements: java.lang.Object e1()>();
v9[1] = v11;
v12 = virtualinvoke v8.<com.google.common.collect.testing.SampleElements: java.lang.Object e2()>();
v9[2] = v12;
v13 = virtualinvoke v8.<com.google.common.collect.testing.SampleElements: java.lang.Object e3()>();
v9[3] = v13;
v14 = virtualinvoke v8.<com.google.common.collect.testing.SampleElements: java.lang.Object e4()>();
v9[4] = v14;
v15 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v9);
v16 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.util.Comparator entryComparator>;
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(v15, v16);
v17 = interfaceinvoke v15.<java.util.List: java.lang.Object get(int)>(0);
v18 = interfaceinvoke v17.<java.util.Map$Entry: java.lang.Object getKey()>();
v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.lang.Object firstInclusive> = v18;
v19 = interfaceinvoke v15.<java.util.List: int size()>();
v20 = v19 - 1;
v21 = interfaceinvoke v15.<java.util.List: java.lang.Object get(int)>(v20);
v22 = interfaceinvoke v21.<java.util.Map$Entry: java.lang.Object getKey()>();
v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.lang.Object lastInclusive> = v22;
return;
}
public transient java.util.SortedMap create(java.lang.Object[])
{
java.lang.Object[] v1, v26;
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
java.util.ArrayList v2, v21;
com.google.common.collect.testing.TestSortedMapGenerator v11, v13, v17, v19, v3, v6;
int v22, v23;
java.util.Map$Entry v12, v14, v18, v20, v4, v7;
com.google.common.collect.testing.TestMapGenerator v25;
com.google.common.collect.testing.DerivedCollectionGenerators$Bound v10, v15, v16, v9;
java.lang.Object v24, v27, v5, v8;
java.util.SortedMap v28;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 := @parameter0: java.lang.Object[];
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.Map$Entry belowSamplesGreater()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()>();
v7 = interfaceinvoke v6.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.Map$Entry aboveSamplesLesser()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from'>;
v10 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound NO_BOUND>;
if v9 == v10 goto label1;
v11 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()>();
v12 = interfaceinvoke v11.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.Map$Entry belowSamplesLesser()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()>();
v14 = interfaceinvoke v13.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.Map$Entry belowSamplesGreater()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v14);
label1:
v15 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to'>;
v16 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound NO_BOUND>;
if v15 == v16 goto label2;
v17 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()>();
v18 = interfaceinvoke v17.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.Map$Entry aboveSamplesLesser()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v18);
v19 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()>();
v20 = interfaceinvoke v19.<com.google.common.collect.testing.TestSortedMapGenerator: java.util.Map$Entry aboveSamplesGreater()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v20);
label2:
v21 = new java.util.ArrayList;
specialinvoke v21.<java.util.ArrayList: void <init>()>();
interfaceinvoke v21.<java.util.List: boolean addAll(java.util.Collection)>(v2);
v22 = lengthof v1;
v23 = 0;
label3:
if v23 >= v22 goto label4;
v24 = v1[v23];
interfaceinvoke v21.<java.util.List: boolean add(java.lang.Object)>(v24);
v23 = v23 + 1;
goto label3;
label4:
v25 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestMapGenerator delegate>;
v26 = interfaceinvoke v21.<java.util.List: java.lang.Object[] toArray()>();
v27 = interfaceinvoke v25.<com.google.common.collect.testing.TestMapGenerator: java.lang.Object create(java.lang.Object[])>(v26);
v28 = virtualinvoke v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.util.SortedMap createSubMap(java.util.SortedMap,java.lang.Object,java.lang.Object)>(v27, v5, v8);
return v28;
}
java.util.SortedMap createSubMap(java.util.SortedMap, java.lang.Object, java.lang.Object)
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
java.lang.IllegalArgumentException v21;
com.google.common.collect.testing.DerivedCollectionGenerators$Bound v10, v11, v12, v15, v16, v17, v18, v4, v5, v6, v7, v9;
java.lang.Object v13, v19, v2, v3;
java.util.SortedMap v1, v14, v20, v8;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 := @parameter0: java.util.SortedMap;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from'>;
v5 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound NO_BOUND>;
if v4 != v5 goto label1;
v6 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to'>;
v7 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound EXCLUSIVE>;
if v6 != v7 goto label1;
v8 = interfaceinvoke v1.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(v3);
return v8;
label1:
v9 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from'>;
v10 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound INCLUSIVE>;
if v9 != v10 goto label2;
v11 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to'>;
v12 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound NO_BOUND>;
if v11 != v12 goto label2;
v13 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.lang.Object firstInclusive>;
v14 = interfaceinvoke v1.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(v13);
return v14;
label2:
v15 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from'>;
v16 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound INCLUSIVE>;
if v15 != v16 goto label3;
v17 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to'>;
v18 = <com.google.common.collect.testing.DerivedCollectionGenerators$Bound: com.google.common.collect.testing.DerivedCollectionGenerators$Bound EXCLUSIVE>;
if v17 != v18 goto label3;
v19 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: java.lang.Object firstInclusive>;
v20 = interfaceinvoke v1.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(v19, v3);
return v20;
label3:
v21 = new java.lang.IllegalArgumentException;
specialinvoke v21.<java.lang.IllegalArgumentException: void <init>()>();
throw v21;
}
public final com.google.common.collect.testing.DerivedCollectionGenerators$Bound getTo()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
com.google.common.collect.testing.DerivedCollectionGenerators$Bound v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'to'>;
return v1;
}
public final com.google.common.collect.testing.DerivedCollectionGenerators$Bound getFrom()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
com.google.common.collect.testing.DerivedCollectionGenerators$Bound v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.DerivedCollectionGenerators$Bound 'from'>;
return v1;
}
public final com.google.common.collect.testing.TestSortedMapGenerator getInnerGenerator()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
com.google.common.collect.testing.TestMapGenerator v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = v0.<com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator: com.google.common.collect.testing.TestMapGenerator delegate>;
return v1;
}
public java.util.Map$Entry belowSamplesLesser()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Map$Entry belowSamplesGreater()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Map$Entry aboveSamplesLesser()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.Map$Entry aboveSamplesGreater()
{
com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: com.google.common.collect.testing.DerivedCollectionGenerators$SortedMapSubmapTestMapGenerator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
}