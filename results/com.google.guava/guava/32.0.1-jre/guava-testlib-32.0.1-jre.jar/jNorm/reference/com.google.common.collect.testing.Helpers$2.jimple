class com.google.common.collect.testing.Helpers$2 extends java.lang.Object implements java.util.Iterator
{
java.util.Iterator iterator;
final java.lang.Iterable val$iterable;
void <init>(java.lang.Iterable)
{
java.util.Iterator v3;
com.google.common.collect.testing.Helpers$2 v0;
java.util.Set v2;
java.lang.Iterable v1;
v0 := @this: com.google.common.collect.testing.Helpers$2;
v1 := @parameter0: java.lang.Iterable;
v0.<com.google.common.collect.testing.Helpers$2: java.lang.Iterable val$iterable> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
v0.<com.google.common.collect.testing.Helpers$2: java.util.Iterator iterator> = v3;
return;
}
public boolean hasNext()
{
com.google.common.collect.testing.Helpers$2 v0;
v0 := @this: com.google.common.collect.testing.Helpers$2;
return 1;
}
public java.lang.Object next()
{
java.util.Iterator v1, v4, v5;
com.google.common.collect.testing.Helpers$2 v0;
java.lang.Object v6;
java.lang.Iterable v3;
boolean v2;
v0 := @this: com.google.common.collect.testing.Helpers$2;
v1 = v0.<com.google.common.collect.testing.Helpers$2: java.util.Iterator iterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 != 0 goto label1;
v3 = v0.<com.google.common.collect.testing.Helpers$2: java.lang.Iterable val$iterable>;
v4 = interfaceinvoke v3.<java.lang.Iterable: java.util.Iterator iterator()>();
v0.<com.google.common.collect.testing.Helpers$2: java.util.Iterator iterator> = v4;
label1:
v5 = v0.<com.google.common.collect.testing.Helpers$2: java.util.Iterator iterator>;
v6 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
return v6;
}
public void remove()
{
java.lang.UnsupportedOperationException v1;
com.google.common.collect.testing.Helpers$2 v0;
v0 := @this: com.google.common.collect.testing.Helpers$2;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
}