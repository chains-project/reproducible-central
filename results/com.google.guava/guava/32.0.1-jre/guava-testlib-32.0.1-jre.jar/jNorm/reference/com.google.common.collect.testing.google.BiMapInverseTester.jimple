public class com.google.common.collect.testing.google.BiMapInverseTester extends com.google.common.collect.testing.google.AbstractBiMapTester
{
public void <init>()
{
com.google.common.collect.testing.google.BiMapInverseTester v0;
v0 := @this: com.google.common.collect.testing.google.BiMapInverseTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractBiMapTester: void <init>()>();
return;
}
public void testInverseSame()
{
com.google.common.collect.testing.google.BiMapInverseTester v0;
com.google.common.collect.BiMap v1, v2, v3, v4;
v0 := @this: com.google.common.collect.testing.google.BiMapInverseTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapInverseTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapInverseTester: com.google.common.collect.BiMap getMap()>();
v3 = interfaceinvoke v2.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v4 = interfaceinvoke v3.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
staticinvoke <com.google.common.collect.testing.google.BiMapInverseTester: void assertSame(java.lang.Object,java.lang.Object)>(v1, v4);
return;
}
public void testInverseSerialization()
{
com.google.common.collect.testing.google.BiMapInverseTester v0;
com.google.common.collect.BiMap v10, v11, v12, v13, v2, v4, v5, v6, v7, v8, v9;
java.lang.Object v3;
com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair v1;
v0 := @this: com.google.common.collect.testing.google.BiMapInverseTester;
v1 = new com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair;
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapInverseTester: com.google.common.collect.BiMap getMap()>();
specialinvoke v1.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: void <init>(com.google.common.collect.BiMap)>(v2);
v3 = staticinvoke <com.google.common.testing.SerializableTester: java.lang.Object reserialize(java.lang.Object)>(v1);
v4 = v1.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap forward>;
v5 = v3.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap forward>;
staticinvoke <com.google.common.collect.testing.google.BiMapInverseTester: void assertEquals(java.lang.Object,java.lang.Object)>(v4, v5);
v6 = v1.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap backward>;
v7 = v3.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap backward>;
staticinvoke <com.google.common.collect.testing.google.BiMapInverseTester: void assertEquals(java.lang.Object,java.lang.Object)>(v6, v7);
v8 = v3.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap backward>;
v9 = v3.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap forward>;
v10 = interfaceinvoke v9.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
staticinvoke <com.google.common.collect.testing.google.BiMapInverseTester: void assertSame(java.lang.Object,java.lang.Object)>(v8, v10);
v11 = v3.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap forward>;
v12 = v3.<com.google.common.collect.testing.google.BiMapInverseTester$BiMapPair: com.google.common.collect.BiMap backward>;
v13 = interfaceinvoke v12.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
staticinvoke <com.google.common.collect.testing.google.BiMapInverseTester: void assertSame(java.lang.Object,java.lang.Object)>(v11, v13);
return;
}
public static java.util.List getInverseSameAfterSerializingMethods()
{
java.util.List v1;
java.lang.reflect.Method v0;
v0 = staticinvoke <com.google.common.collect.testing.google.BiMapInverseTester: java.lang.reflect.Method getMethod(java.lang.String)>("testInverseSerialization");
v1 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v0);
return v1;
}
private static java.lang.reflect.Method getMethod(java.lang.String)
{
java.lang.String v0;
java.lang.reflect.Method v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.google.common.collect.testing.Helpers: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/testing/google/BiMapInverseTester;", v0);
return v1;
}
}