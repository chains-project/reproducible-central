public class com.google.common.collect.testing.google.BiMapPutTester extends com.google.common.collect.testing.google.AbstractBiMapTester
{
public void <init>()
{
com.google.common.collect.testing.google.BiMapPutTester v0;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractBiMapTester: void <init>()>();
return;
}
public void testPutWithSameValueFails()
{
com.google.common.collect.BiMap v1, v4;
com.google.common.collect.testing.google.BiMapPutTester v0;
java.lang.IllegalArgumentException v7;
java.lang.Object v2, v3, v5, v6, v9;
java.util.Map$Entry[] v8;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
label1:
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
interfaceinvoke v4.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v6);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void fail(java.lang.String)>("Expected IllegalArgumentException");
label2:
goto label4;
label3:
v7 := @caughtexception;
label4:
v8 = newarray (java.util.Map$Entry)[1];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object e0()>();
v8[0] = v9;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectAdded(java.lang.Object[])>(v8);
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public void testPutPresentKeyDifferentValue()
{
com.google.common.collect.BiMap v1, v4;
java.util.Map$Entry v10;
com.google.common.collect.testing.google.BiMapPutTester v0;
java.lang.Object v2, v3, v5, v6, v8, v9;
java.util.Map$Entry[] v7;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
interfaceinvoke v4.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v6);
v7 = newarray (java.util.Map$Entry)[1];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v9);
v7[0] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectContents(java.lang.Object[])>(v7);
return;
}
public void putDistinctKeysDistinctValues()
{
com.google.common.collect.BiMap v1, v4;
com.google.common.collect.testing.google.BiMapPutTester v0;
java.lang.Object v2, v3, v5, v6, v8, v9;
java.util.Map$Entry[] v7;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
interfaceinvoke v4.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v6);
v7 = newarray (java.util.Map$Entry)[2];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object e0()>();
v7[0] = v8;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object e1()>();
v7[1] = v9;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectAdded(java.lang.Object[])>(v7);
return;
}
public void testForcePutKeyPresent()
{
com.google.common.collect.testing.google.BiMapPutTester v0;
int v16;
java.util.Map$Entry[] v4;
boolean v10, v19;
com.google.common.collect.BiMap v1, v11, v12, v15, v17, v8;
java.util.Map$Entry v7;
java.lang.Object v13, v14, v18, v2, v3, v5, v6, v9;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = newarray (java.util.Map$Entry)[1];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v4[0] = v7;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectContents(java.lang.Object[])>(v4);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
v10 = interfaceinvoke v8.<com.google.common.collect.BiMap: boolean containsValue(java.lang.Object)>(v9);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertFalse(boolean)>(v10);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
v14 = interfaceinvoke v12.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(v13);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertNull(java.lang.Object)>(v14);
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v16 = interfaceinvoke v15.<com.google.common.collect.BiMap: int size()>();
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(int,int)>(1, v16);
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v19 = interfaceinvoke v17.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(v18);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertTrue(boolean)>(v19);
return;
}
public void testForcePutValuePresent()
{
com.google.common.collect.testing.google.BiMapPutTester v0;
int v14;
java.util.Map$Entry[] v4;
boolean v17;
com.google.common.collect.BiMap v1, v10, v13, v15, v9;
java.util.Map$Entry v7;
java.lang.Object v11, v12, v16, v2, v3, v5, v6, v8;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = newarray (java.util.Map$Entry)[1];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v4[0] = v7;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectContents(java.lang.Object[])>(v4);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
v12 = interfaceinvoke v10.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(v11);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(java.lang.Object,java.lang.Object)>(v8, v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.BiMap: int size()>();
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(int,int)>(1, v14);
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v17 = interfaceinvoke v15.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(v16);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertFalse(boolean)>(v17);
return;
}
public void testForcePutKeyAndValuePresent()
{
com.google.common.collect.testing.google.BiMapPutTester v0;
int v12;
java.util.Map$Entry[] v4;
boolean v15, v18;
com.google.common.collect.BiMap v1, v11, v13, v16;
java.util.Map$Entry v10, v7;
java.lang.Object v14, v17, v2, v3, v5, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = newarray (java.util.Map$Entry)[2];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v4[0] = v7;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k2()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v2()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v9);
v4[1] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectContents(java.lang.Object[])>(v4);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.BiMap: int size()>();
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(int,int)>(2, v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v15 = interfaceinvoke v13.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(v14);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertFalse(boolean)>(v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
v18 = interfaceinvoke v16.<com.google.common.collect.BiMap: boolean containsValue(java.lang.Object)>(v17);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertFalse(boolean)>(v18);
return;
}
public void testForcePutNullKeyPresent()
{
com.google.common.collect.testing.google.BiMapPutTester v0;
int v24;
java.util.Map$Entry[] v3;
boolean v11, v15, v8;
com.google.common.collect.BiMap v1, v12, v13, v16, v17, v21, v23, v6, v9;
java.util.Map$Entry v5;
java.lang.Object v10, v14, v18, v19, v2, v20, v22, v4, v7;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void initMapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)>(null, v2);
v3 = newarray (java.util.Map$Entry)[1];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(null, v4);
v3[0] = v5;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectContents(java.lang.Object[])>(v3);
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
v8 = interfaceinvoke v6.<com.google.common.collect.BiMap: boolean containsValue(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertFalse(boolean)>(v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v11 = interfaceinvoke v9.<com.google.common.collect.BiMap: boolean containsValue(java.lang.Object)>(v10);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertTrue(boolean)>(v11);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v15 = interfaceinvoke v13.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(v14);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertTrue(boolean)>(v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v17 = interfaceinvoke v16.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v19 = interfaceinvoke v17.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(v18);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertNull(java.lang.Object)>(v19);
v20 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v21 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v22 = interfaceinvoke v21.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(java.lang.Object,java.lang.Object)>(v20, v22);
v23 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v24 = interfaceinvoke v23.<com.google.common.collect.BiMap: int size()>();
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(int,int)>(1, v24);
return;
}
public void testForcePutNullValuePresent()
{
com.google.common.collect.testing.google.BiMapPutTester v0;
int v23;
java.util.Map$Entry[] v3;
boolean v11, v14, v8;
com.google.common.collect.BiMap v1, v12, v13, v15, v19, v20, v22, v6, v9;
java.util.Map$Entry v5;
java.lang.Object v10, v16, v17, v18, v2, v21, v4, v7;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void initMapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object forcePut(java.lang.Object,java.lang.Object)>(v2, null);
v3 = newarray (java.util.Map$Entry)[1];
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v4, null);
v3[0] = v5;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectContents(java.lang.Object[])>(v3);
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v8 = interfaceinvoke v6.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertFalse(boolean)>(v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v11 = interfaceinvoke v9.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(v10);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertTrue(boolean)>(v11);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v14 = interfaceinvoke v13.<com.google.common.collect.BiMap: boolean containsKey(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertTrue(boolean)>(v14);
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v17 = interfaceinvoke v15.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(v16);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertNull(java.lang.Object)>(v17);
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v20 = interfaceinvoke v19.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v21 = interfaceinvoke v20.<com.google.common.collect.BiMap: java.lang.Object get(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(java.lang.Object,java.lang.Object)>(v18, v21);
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v23 = interfaceinvoke v22.<com.google.common.collect.BiMap: int size()>();
staticinvoke <com.google.common.collect.testing.google.BiMapPutTester: void assertEquals(int,int)>(1, v23);
return;
}
public void testInversePut()
{
com.google.common.collect.BiMap v1, v4, v5;
com.google.common.collect.testing.google.BiMapPutTester v0;
java.lang.Object v10, v2, v3, v6, v7, v9;
java.util.Map$Entry[] v8;
v0 := @this: com.google.common.collect.testing.google.BiMapPutTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v0()>();
interfaceinvoke v1.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: com.google.common.collect.BiMap getMap()>();
v5 = interfaceinvoke v4.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object v1()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object k1()>();
interfaceinvoke v5.<com.google.common.collect.BiMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v7);
v8 = newarray (java.util.Map$Entry)[2];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object e0()>();
v8[0] = v9;
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: java.lang.Object e1()>();
v8[1] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.BiMapPutTester: void expectAdded(java.lang.Object[])>(v8);
return;
}
}