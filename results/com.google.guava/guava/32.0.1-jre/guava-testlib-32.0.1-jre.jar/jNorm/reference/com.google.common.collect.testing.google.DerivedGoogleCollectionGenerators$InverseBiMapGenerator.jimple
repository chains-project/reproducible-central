public class com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator extends java.lang.Object implements com.google.common.collect.testing.google.TestBiMapGenerator, com.google.common.collect.testing.DerivedGenerator
{
private final com.google.common.collect.testing.OneSizeTestContainerGenerator generator;
public void <init>(com.google.common.collect.testing.OneSizeTestContainerGenerator)
{
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: com.google.common.collect.testing.OneSizeTestContainerGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator generator> = v1;
return;
}
public com.google.common.collect.testing.SampleElements samples()
{
java.util.Map$Entry v11, v13, v5, v7, v9;
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
com.google.common.collect.testing.SampleElements v2, v3;
java.lang.Object v10, v12, v4, v6, v8;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 = v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator generator>;
v2 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.SampleElements samples()>();
v3 = new com.google.common.collect.testing.SampleElements;
v4 = virtualinvoke v2.<com.google.common.collect.testing.SampleElements: java.lang.Object e0()>();
v5 = specialinvoke v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: java.util.Map$Entry reverse(java.util.Map$Entry)>(v4);
v6 = virtualinvoke v2.<com.google.common.collect.testing.SampleElements: java.lang.Object e1()>();
v7 = specialinvoke v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: java.util.Map$Entry reverse(java.util.Map$Entry)>(v6);
v8 = virtualinvoke v2.<com.google.common.collect.testing.SampleElements: java.lang.Object e2()>();
v9 = specialinvoke v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: java.util.Map$Entry reverse(java.util.Map$Entry)>(v8);
v10 = virtualinvoke v2.<com.google.common.collect.testing.SampleElements: java.lang.Object e3()>();
v11 = specialinvoke v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: java.util.Map$Entry reverse(java.util.Map$Entry)>(v10);
v12 = virtualinvoke v2.<com.google.common.collect.testing.SampleElements: java.lang.Object e4()>();
v13 = specialinvoke v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: java.util.Map$Entry reverse(java.util.Map$Entry)>(v12);
specialinvoke v3.<com.google.common.collect.testing.SampleElements: void <init>(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v5, v7, v9, v11, v13);
return v3;
}
private java.util.Map$Entry reverse(java.util.Map$Entry)
{
java.util.Map$Entry v1, v4;
java.lang.Object v2, v3;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: java.util.Map$Entry;
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getValue()>();
v3 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
return v4;
}
public transient com.google.common.collect.BiMap create(java.lang.Object[])
{
com.google.common.collect.BiMap v10;
java.util.Map$Entry v7;
java.lang.Object[] v1;
com.google.common.collect.testing.OneSizeTestContainerGenerator v8;
int v2, v4, v5;
java.lang.Object v6, v9;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
java.util.Map$Entry[] v3;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: java.lang.Object[];
v2 = lengthof v1;
v3 = newarray (java.util.Map$Entry)[v2];
v4 = 0;
label1:
v5 = lengthof v1;
if v4 >= v5 goto label2;
v6 = v1[v4];
v7 = specialinvoke v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: java.util.Map$Entry reverse(java.util.Map$Entry)>(v6);
v3[v4] = v7;
v4 = v4 + 1;
goto label1;
label2:
v8 = v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator generator>;
v9 = interfaceinvoke v8.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v3);
v10 = interfaceinvoke v9.<com.google.common.collect.BiMap: com.google.common.collect.BiMap inverse()>();
return v10;
}
public java.util.Map$Entry[] createArray(int)
{
int v1;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
java.util.Map$Entry[] v2;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.util.Map$Entry)[v1];
return v2;
}
public java.lang.Iterable order(java.util.List)
{
java.util.List v1;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: java.util.List;
return v1;
}
public java.lang.Object[] createKeyArray(int)
{
int v1;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
java.lang.Object[] v2;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.lang.Object)[v1];
return v2;
}
public java.lang.Object[] createValueArray(int)
{
int v1;
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
java.lang.Object[] v2;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 := @parameter0: int;
v2 = newarray (java.lang.Object)[v1];
return v2;
}
public com.google.common.collect.testing.TestSubjectGenerator getInnerGenerator()
{
com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator v0;
com.google.common.collect.testing.OneSizeTestContainerGenerator v1;
v0 := @this: com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator;
v1 = v0.<com.google.common.collect.testing.google.DerivedGoogleCollectionGenerators$InverseBiMapGenerator: com.google.common.collect.testing.OneSizeTestContainerGenerator generator>;
return v1;
}
}