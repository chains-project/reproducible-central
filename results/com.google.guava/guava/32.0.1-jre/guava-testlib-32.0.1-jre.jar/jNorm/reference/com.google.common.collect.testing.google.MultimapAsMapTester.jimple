public class com.google.common.collect.testing.google.MultimapAsMapTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapAsMapTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testAsMapGet()
{
com.google.common.collect.testing.google.MultimapAsMapTester v0;
com.google.common.collect.testing.SampleElements v1;
com.google.common.collect.Multimap v13;
java.util.ArrayList v5;
java.util.Map v14;
boolean v11, v16, v3, v8;
java.util.Iterator v2, v7;
java.util.Collection v6;
java.lang.Object v10, v12, v15, v4, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.testing.SampleElements sampleKeys()>();
v2 = virtualinvoke v1.<com.google.common.collect.testing.SampleElements: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label5;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.util.Collection getSampleElements()>();
v7 = interfaceinvoke v6.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
v11 = virtualinvoke v10.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
if v11 == 0 goto label2;
v12 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v12);
goto label2;
label3:
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v15 = interfaceinvoke v14.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
v16 = interfaceinvoke v5.<java.util.List: boolean isEmpty()>();
if v16 == 0 goto label4;
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertNull(java.lang.Object)>(v15);
goto label1;
label4:
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v5, v15);
goto label1;
label5:
return;
}
public void testAsMapGetNullKeyPresent()
{
java.lang.Object[] v4;
com.google.common.collect.testing.google.MultimapAsMapTester v0;
java.util.Map v2;
java.lang.Object v3, v5;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: void initMultimapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);
v4 = newarray (java.lang.Object)[1];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object getValueForNullKey()>();
v4[0] = v5;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v3, v4);
return;
}
public void testAsMapGetNullKeyAbsent()
{
com.google.common.collect.testing.google.MultimapAsMapTester v0;
java.util.Map v2;
java.lang.Object v3;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertNull(java.lang.Object)>(v3);
return;
}
public void testAsMapGetNullKeyUnsupported()
{
com.google.common.collect.testing.google.MultimapAsMapTester v0;
java.util.Map v2;
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(null);
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testAsMapRemove()
{
java.lang.Object[] v5, v8;
com.google.common.collect.testing.google.MultimapAsMapTester v0;
com.google.common.collect.Multimap v1, v11;
java.util.Map v2;
int v10, v12, v9;
java.lang.Object v3, v4, v6, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v4 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v3);
v5 = newarray (java.lang.Object)[1];
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v5[0] = v6;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsInOrder(java.lang.Iterable,java.lang.Object[])>(v4, v5);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v8 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: void assertGet(java.lang.Object,java.lang.Object[])>(v7, v8);
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: int getNumElements()>();
v10 = v9 - 1;
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v12 = interfaceinvoke v11.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertEquals(int,int)>(v10, v12);
return;
}
public void testAsMapEntrySetReflectsPutSameKey()
{
java.lang.Object[] v13, v20;
com.google.common.collect.testing.google.MultimapAsMapTester v0;
com.google.common.collect.Multimap v16, v8;
java.util.Map v9;
java.util.Map$Entry[] v1;
boolean v19;
java.util.Map$Entry v4, v7;
java.util.Set v10;
java.lang.Object v11, v12, v14, v15, v17, v18, v2, v21, v22, v23, v3, v5, v6;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = newarray (java.util.Map$Entry)[2];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v3()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.util.Set entrySet()>();
v11 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>(v10);
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
v13 = newarray (java.lang.Object)[2];
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v13[0] = v14;
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v3()>();
v13[1] = v15;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v12, v13);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v4()>();
v19 = interfaceinvoke v16.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v17, v18);
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertTrue(boolean)>(v19);
v20 = newarray (java.lang.Object)[3];
v21 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v20[0] = v21;
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v3()>();
v20[1] = v22;
v23 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v4()>();
v20[2] = v23;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsAnyOrder(java.lang.Iterable,java.lang.Object[])>(v12, v20);
return;
}
public void testAsMapEntrySetReflectsPutDifferentKey()
{
com.google.common.collect.testing.google.MultimapAsMapTester v0;
com.google.common.collect.Multimap v11, v8;
java.util.Map v9;
int v15;
java.util.Map$Entry[] v1;
boolean v14;
java.util.Map$Entry v4, v7;
java.util.Set v10;
java.lang.Object v12, v13, v2, v3, v5, v6;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = newarray (java.util.Map$Entry)[2];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v3()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.util.Set entrySet()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k1()>();
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v4()>();
v14 = interfaceinvoke v11.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v12, v13);
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertTrue(boolean)>(v14);
v15 = interfaceinvoke v10.<java.util.Set: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertEquals(int,int)>(2, v15);
return;
}
public void testAsMapEntrySetRemovePropagatesToMultimap()
{
java.lang.Object[] v21;
com.google.common.collect.testing.google.MultimapAsMapTester v0;
com.google.common.collect.Multimap v12, v17, v19, v8;
java.util.Map v9;
int v18;
java.util.Map$Entry[] v1;
boolean v15, v16;
java.util.Map$Entry v4, v7;
java.util.Set v10, v20;
java.lang.Object v11, v13, v14, v2, v22, v3, v5, v6;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = newarray (java.util.Map$Entry)[2];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v3()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.util.Set entrySet()>();
v11 = staticinvoke <com.google.common.collect.Iterables: java.lang.Object getOnlyElement(java.lang.Iterable)>(v10);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k1()>();
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v4()>();
v15 = interfaceinvoke v12.<com.google.common.collect.Multimap: boolean put(java.lang.Object,java.lang.Object)>(v13, v14);
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertTrue(boolean)>(v15);
v16 = interfaceinvoke v10.<java.util.Set: boolean remove(java.lang.Object)>(v11);
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertTrue(boolean)>(v16);
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v18 = interfaceinvoke v17.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertEquals(int,int)>(1, v18);
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v20 = interfaceinvoke v19.<com.google.common.collect.Multimap: java.util.Set keySet()>();
v21 = newarray (java.lang.Object)[1];
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k1()>();
v21[0] = v22;
staticinvoke <com.google.common.collect.testing.Helpers: void assertContentsInOrder(java.lang.Iterable,java.lang.Object[])>(v20, v21);
return;
}
public void testAsMapEntrySetIteratorRemovePropagatesToMultimap()
{
java.util.Map$Entry v4, v7;
java.util.Iterator v11;
com.google.common.collect.testing.google.MultimapAsMapTester v0;
java.util.Set v10;
com.google.common.collect.Multimap v12, v8;
java.util.Map v9;
java.lang.Object v2, v3, v5, v6;
java.util.Map$Entry[] v1;
boolean v13;
v0 := @this: com.google.common.collect.testing.google.MultimapAsMapTester;
v1 = newarray (java.util.Map$Entry)[2];
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v2, v3);
v1[0] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object k0()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: java.lang.Object v3()>();
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, v6);
v1[1] = v7;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap resetContainer(java.util.Map$Entry[])>(v1);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v10 = interfaceinvoke v9.<java.util.Map: java.util.Set entrySet()>();
v11 = interfaceinvoke v10.<java.util.Set: java.util.Iterator iterator()>();
interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v11.<java.util.Iterator: void remove()>();
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapAsMapTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapAsMapTester: void assertTrue(boolean)>(v13);
return;
}
}