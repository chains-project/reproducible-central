public class com.google.common.collect.testing.google.MultimapClearTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapClearTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testClearUnsupported()
{
java.lang.UnsupportedOperationException v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapClearTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: void clear()>();
staticinvoke <com.google.common.collect.testing.google.MultimapClearTester: void fail(java.lang.String)>("Expected UnsupportedOperationException");
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.UnsupportedOperationException from label1 to label2 with label3;
}
private void assertCleared()
{
java.lang.Object[] v22, v6;
com.google.common.collect.Multiset v15;
com.google.common.collect.testing.SampleElements v18;
com.google.common.collect.Multimap v1, v10, v12, v14, v16, v3, v4, v8;
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Map v11;
int v2;
boolean v20;
java.util.Iterator v19;
java.util.Collection v17, v9;
java.util.Set v13;
java.lang.Object v21, v5, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapClearTester: void assertEquals(int,int)>(0, v2);
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
staticinvoke <com.google.common.collect.testing.google.GoogleHelpers: void assertEmpty(com.google.common.collect.Multimap)>(v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: java.lang.Object getSubjectGenerator()>();
v6 = newarray (java.lang.Object)[0];
v7 = interfaceinvoke v5.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v6);
staticinvoke <com.google.common.collect.testing.google.MultimapClearTester: void assertEquals(java.lang.Object,java.lang.Object)>(v4, v7);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: java.util.Collection entries()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v11 = interfaceinvoke v10.<com.google.common.collect.Multimap: java.util.Map asMap()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.util.Map)>(v11);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v13 = interfaceinvoke v12.<com.google.common.collect.Multimap: java.util.Set keySet()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: com.google.common.collect.Multiset keys()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v17 = interfaceinvoke v16.<com.google.common.collect.Multimap: java.util.Collection values()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v17);
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.testing.SampleElements sampleKeys()>();
v19 = virtualinvoke v18.<com.google.common.collect.testing.SampleElements: java.util.Iterator iterator()>();
label1:
v20 = interfaceinvoke v19.<java.util.Iterator: boolean hasNext()>();
if v20 == 0 goto label2;
v21 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
v22 = newarray (java.lang.Object)[0];
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertGet(java.lang.Object,java.lang.Object[])>(v21, v22);
goto label1;
label2:
return;
}
public void testClear()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapClearTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: void clear()>();
specialinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertCleared()>();
return;
}
public void testClearThroughEntries()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Collection v2;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
interfaceinvoke v2.<java.util.Collection: void clear()>();
specialinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertCleared()>();
return;
}
public void testClearThroughAsMap()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Map v2;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
interfaceinvoke v2.<java.util.Map: void clear()>();
specialinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertCleared()>();
return;
}
public void testClearThroughKeySet()
{
java.util.Set v2;
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapClearTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Set keySet()>();
interfaceinvoke v2.<java.util.Set: void clear()>();
specialinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertCleared()>();
return;
}
public void testClearThroughKeys()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.Multiset v2;
com.google.common.collect.testing.google.MultimapClearTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: com.google.common.collect.Multiset keys()>();
interfaceinvoke v2.<com.google.common.collect.Multiset: void clear()>();
specialinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertCleared()>();
return;
}
public void testClearThroughValues()
{
com.google.common.collect.Multimap v1;
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Collection v2;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection values()>();
interfaceinvoke v2.<java.util.Collection: void clear()>();
specialinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: void assertCleared()>();
return;
}
public void testClearPropagatesToGet()
{
java.util.Iterator v2;
com.google.common.collect.testing.SampleElements v1;
java.util.Collection v6;
com.google.common.collect.Multimap v5, v7;
com.google.common.collect.testing.google.MultimapClearTester v0;
java.lang.Object v4;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.testing.SampleElements sampleKeys()>();
v2 = virtualinvoke v1.<com.google.common.collect.testing.SampleElements: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: java.lang.Object resetContainer()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v4);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v7.<com.google.common.collect.Multimap: void clear()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v6);
goto label1;
label2:
return;
}
public void testClearPropagatesToAsMapGet()
{
java.util.Iterator v2;
com.google.common.collect.testing.SampleElements v1;
com.google.common.collect.Multimap v5, v8;
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Map v6;
java.lang.Object v4, v7;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.testing.SampleElements sampleKeys()>();
v2 = virtualinvoke v1.<com.google.common.collect.testing.SampleElements: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: java.lang.Object resetContainer()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v7 = interfaceinvoke v6.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
if v7 == null goto label1;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v8.<com.google.common.collect.Multimap: void clear()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v7);
goto label1;
label2:
return;
}
public void testClearPropagatesToAsMap()
{
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Map v2;
com.google.common.collect.Multimap v1, v3;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v3.<com.google.common.collect.Multimap: void clear()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.util.Map)>(v2);
return;
}
public void testClearPropagatesToEntries()
{
com.google.common.collect.testing.google.MultimapClearTester v0;
java.util.Collection v2;
com.google.common.collect.Multimap v1, v3;
v0 := @this: com.google.common.collect.testing.google.MultimapClearTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapClearTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v3.<com.google.common.collect.Multimap: void clear()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v2);
return;
}
}