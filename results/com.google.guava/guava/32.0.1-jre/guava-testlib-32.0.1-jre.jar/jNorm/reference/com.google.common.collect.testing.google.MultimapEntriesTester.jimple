public class com.google.common.collect.testing.google.MultimapEntriesTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapEntriesTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testEntries()
{
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.util.Collection v1, v3;
com.google.common.collect.Multimap v2;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.util.Collection getSampleElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multimap: java.util.Collection entries()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v1, v3);
return;
}
public void testContainsEntryWithNullKeyPresent()
{
java.util.Map$Entry v4;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.util.Collection v2;
java.lang.Object v3;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: void initMultimapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object getValueForNullKey()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(null, v3);
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v2, v4);
return;
}
public void testContainsEntryWithNullKeyAbsent()
{
java.util.Map$Entry v4;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.util.Collection v2;
java.lang.Object v3;
com.google.common.collect.Multimap v1;
boolean v5;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(null, v3);
v5 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v4);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertFalse(boolean)>(v5);
return;
}
public void testContainsEntryWithNullValuePresent()
{
java.util.Map$Entry v4;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.util.Collection v2;
java.lang.Object v3;
com.google.common.collect.Multimap v1;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: void initMultimapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object getKeyForNullValue()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, null);
staticinvoke <com.google.common.collect.testing.Helpers: void assertContains(java.lang.Iterable,java.lang.Object)>(v2, v4);
return;
}
public void testContainsEntryWithNullValueAbsent()
{
java.util.Map$Entry v4;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.util.Collection v2;
java.lang.Object v3;
com.google.common.collect.Multimap v1;
boolean v5;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v4 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, null);
v5 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v4);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertFalse(boolean)>(v5);
return;
}
public void testRemovePropagatesToMultimap()
{
com.google.common.collect.Multimap v1, v13, v15;
int v11, v12, v14;
java.util.Map$Entry[] v7;
boolean v18, v6;
java.util.Map$Entry v10, v5;
java.util.Collection v2;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.lang.Object v16, v17, v3, v4, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, v4);
v6 = interfaceinvoke v2.<java.util.Collection: boolean remove(java.lang.Object)>(v5);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertTrue(boolean)>(v6);
v7 = newarray (java.util.Map$Entry)[1];
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v8, v9);
v7[0] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: void expectMissing(java.lang.Object[])>(v7);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: int getNumElements()>();
v12 = v11 - 1;
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(int,int)>(v12, v14);
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v18 = interfaceinvoke v15.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v16, v17);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertFalse(boolean)>(v18);
return;
}
public void testRemoveAllPropagatesToMultimap()
{
com.google.common.collect.Multimap v1, v14, v16;
int v12, v13, v15;
java.util.Map$Entry[] v8;
boolean v19, v7;
java.util.Map$Entry v11, v5;
java.util.Collection v2;
java.util.Set v6;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.lang.Object v10, v17, v18, v3, v4, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, v4);
v6 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v5);
v7 = interfaceinvoke v2.<java.util.Collection: boolean removeAll(java.util.Collection)>(v6);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertTrue(boolean)>(v7);
v8 = newarray (java.util.Map$Entry)[1];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v11 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v9, v10);
v8[0] = v11;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: void expectMissing(java.lang.Object[])>(v8);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: int getNumElements()>();
v13 = v12 - 1;
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(int,int)>(v13, v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v19 = interfaceinvoke v16.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v17, v18);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertFalse(boolean)>(v19);
return;
}
public void testRetainAllPropagatesToMultimap()
{
java.lang.Object[] v8;
com.google.common.collect.Multimap v1, v13, v14, v16;
int v15;
boolean v19;
java.util.Map$Entry v11, v5;
java.util.Collection v2;
java.util.Set v6;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.lang.Object v10, v12, v17, v18, v3, v4, v7, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v5 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v3, v4);
v6 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v5);
interfaceinvoke v2.<java.util.Collection: boolean retainAll(java.util.Collection)>(v6);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object getSubjectGenerator()>();
v8 = newarray (java.lang.Object)[1];
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v11 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v9, v10);
v8[0] = v11;
v12 = interfaceinvoke v7.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v8);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(java.lang.Object,java.lang.Object)>(v12, v13);
v14 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v15 = interfaceinvoke v14.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(int,int)>(1, v15);
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v17 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v18 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v19 = interfaceinvoke v16.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v17, v18);
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertTrue(boolean)>(v19);
return;
}
public void testIteratorRemovePropagatesToMultimap()
{
java.util.Map$Entry v6;
java.util.Iterator v3;
java.util.Collection v2;
com.google.common.collect.Multimap v1, v8;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.lang.Object v4, v5, v7;
boolean v9;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object k0()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: java.lang.Object v0()>();
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v4, v5);
v7 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(java.lang.Object,java.lang.Object)>(v6, v7);
interfaceinvoke v3.<java.util.Iterator: void remove()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v9 = interfaceinvoke v8.<com.google.common.collect.Multimap: boolean isEmpty()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertTrue(boolean)>(v9);
return;
}
public void testEntriesRemainValidAfterRemove()
{
java.util.Iterator v3;
java.util.Collection v2;
com.google.common.collect.Multimap v1, v7;
com.google.common.collect.testing.google.MultimapEntriesTester v0;
java.lang.Object v4, v5, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultimapEntriesTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
v4 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapEntriesTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v7.<com.google.common.collect.Multimap: java.util.Collection removeAll(java.lang.Object)>(v5);
v8 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(java.lang.Object,java.lang.Object)>(v5, v8);
v9 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
staticinvoke <com.google.common.collect.testing.google.MultimapEntriesTester: void assertEquals(java.lang.Object,java.lang.Object)>(v6, v9);
return;
}
}