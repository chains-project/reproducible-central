public class com.google.common.collect.testing.google.MultimapForEachTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapForEachTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapForEachTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testForEach()
{
com.google.common.collect.testing.google.MultimapForEachTester v0;
java.util.Collection v4, v6;
java.util.function.BiConsumer v3;
com.google.common.collect.Multimap v2, v5;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.google.MultimapForEachTester;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapForEachTester: com.google.common.collect.Multimap multimap()>();
v3 = staticinvoke <com.google.common.collect.testing.google.MultimapForEachTester$lambda_testForEach_0__17: java.util.function.BiConsumer bootstrap$(java.util.List)>(v1);
interfaceinvoke v2.<com.google.common.collect.Multimap: void forEach(java.util.function.BiConsumer)>(v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapForEachTester: java.util.Collection getSampleElements()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapForEachTester: com.google.common.collect.Multimap multimap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Collection entries()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v4, v6);
return;
}
public void testForEachOrder()
{
com.google.common.collect.testing.google.MultimapForEachTester v0;
java.util.Collection v4, v6;
java.util.function.BiConsumer v3;
com.google.common.collect.Multimap v2, v5;
java.util.ArrayList v1;
v0 := @this: com.google.common.collect.testing.google.MultimapForEachTester;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapForEachTester: com.google.common.collect.Multimap multimap()>();
v3 = staticinvoke <com.google.common.collect.testing.google.MultimapForEachTester$lambda_testForEachOrder_1__18: java.util.function.BiConsumer bootstrap$(java.util.List)>(v1);
interfaceinvoke v2.<com.google.common.collect.Multimap: void forEach(java.util.function.BiConsumer)>(v3);
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapForEachTester: java.util.Collection getSampleElements()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapForEachTester: com.google.common.collect.Multimap multimap()>();
v6 = interfaceinvoke v5.<com.google.common.collect.Multimap: java.util.Collection entries()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v4, v6);
return;
}
}