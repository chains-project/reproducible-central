public class com.google.common.collect.testing.google.MultimapRemoveEntryTester extends com.google.common.collect.testing.google.AbstractMultimapTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultimapTester: void <init>()>();
return;
}
public void testRemoveAbsent()
{
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.lang.Object v2, v3;
com.google.common.collect.Multimap v1;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object v1()>();
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertFalse(boolean)>(v4);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectUnchanged()>();
return;
}
public void testRemovePresent()
{
com.google.common.collect.Multimap v1, v13, v5;
com.google.common.collect.ImmutableList v16;
int v11, v12, v14;
java.util.Map$Entry[] v9;
boolean v4, v8;
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.lang.Object v10, v15, v2, v3, v6, v7;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object k0()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object v0()>();
v4 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v2, v3);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertTrue(boolean)>(v4);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object k0()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object v0()>();
v8 = interfaceinvoke v5.<com.google.common.collect.Multimap: boolean containsEntry(java.lang.Object,java.lang.Object)>(v6, v7);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertFalse(boolean)>(v8);
v9 = newarray (java.util.Map$Entry)[1];
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object e0()>();
v9[0] = v10;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectMissing(java.lang.Object[])>(v9);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: int getNumElements()>();
v12 = v11 - 1;
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multimap: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertEquals(int,int)>(v12, v14);
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object k0()>();
v16 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertGet(java.lang.Object,java.util.Collection)>(v15, v16);
return;
}
public void testRemoveNullKeyPresent()
{
java.util.Map$Entry v6;
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
com.google.common.collect.Multimap v1;
com.google.common.collect.ImmutableList v8;
java.lang.Object v2, v5, v7;
java.util.Map$Entry[] v4;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void initMultimapWithNullKey()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object getValueForNullKey()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(null, v2);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertTrue(boolean)>(v3);
v4 = newarray (java.util.Map$Entry)[1];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object getValueForNullKey()>();
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(null, v5);
v4[0] = v6;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectMissing(java.lang.Object[])>(v4);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object getKeyForNullValue()>();
v8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertGet(java.lang.Object,java.util.Collection)>(v7, v8);
return;
}
public void testRemoveNullValuePresent()
{
java.util.Map$Entry v6;
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
com.google.common.collect.Multimap v1;
com.google.common.collect.ImmutableList v8;
java.lang.Object v2, v5, v7;
java.util.Map$Entry[] v4;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void initMultimapWithNullValue()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object getKeyForNullValue()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v2, null);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertTrue(boolean)>(v3);
v4 = newarray (java.util.Map$Entry)[1];
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object getKeyForNullValue()>();
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Map$Entry mapEntry(java.lang.Object,java.lang.Object)>(v5, null);
v4[0] = v6;
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectMissing(java.lang.Object[])>(v4);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object getKeyForNullValue()>();
v8 = staticinvoke <com.google.common.collect.ImmutableList: com.google.common.collect.ImmutableList of()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertGet(java.lang.Object,java.util.Collection)>(v7, v8);
return;
}
public void testRemoveNullKeyAbsent()
{
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object v0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(null, v2);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertFalse(boolean)>(v3);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectUnchanged()>();
return;
}
public void testRemoveNullValueAbsent()
{
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
boolean v3;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object k0()>();
v3 = interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v2, null);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertFalse(boolean)>(v3);
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectUnchanged()>();
return;
}
public void testRemoveNullValueForbidden()
{
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object k0()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v2, null);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectUnchanged()>();
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testRemoveNullKeyForbidden()
{
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.lang.Object v2;
com.google.common.collect.Multimap v1;
java.lang.NullPointerException v3;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
label1:
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object v0()>();
interfaceinvoke v1.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(null, v2);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void fail(java.lang.String)>("Expected NullPointerException");
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: void expectUnchanged()>();
return;
catch java.lang.NullPointerException from label1 to label2 with label3;
}
public void testRemovePropagatesToGet()
{
com.google.common.collect.Multimap v1, v12, v15, v9;
boolean v13, v14, v16, v5;
java.util.Iterator v4;
java.util.Collection v10, v2;
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.util.List v11, v3;
java.lang.Object v6, v7, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object resetContainer()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Collection get(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertNotNull(java.lang.Object)>(v10);
v11 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v10);
v12 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v12.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v7, v8);
interfaceinvoke v11.<java.util.Collection: boolean remove(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v11, v10);
v13 = interfaceinvoke v11.<java.util.Collection: boolean isEmpty()>();
if v13 != 0 goto label2;
v14 = 1;
goto label3;
label2:
v14 = 0;
label3:
v15 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v16 = interfaceinvoke v15.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertEquals(boolean,boolean)>(v14, v16);
goto label1;
label4:
return;
}
public void testRemovePropagatesToAsMap()
{
com.google.common.collect.Multimap v1, v13, v16, v9;
java.util.Map v10;
boolean v14, v15, v17, v5;
java.util.Iterator v4;
java.util.Collection v2;
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.util.List v12, v3;
java.lang.Object v11, v6, v7, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object resetContainer()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v11 = interfaceinvoke v10.<java.util.Map: java.lang.Object get(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertNotNull(java.lang.Object)>(v11);
v12 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v11);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v13.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v7, v8);
interfaceinvoke v12.<java.util.Collection: boolean remove(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v12, v11);
v14 = interfaceinvoke v12.<java.util.Collection: boolean isEmpty()>();
if v14 != 0 goto label2;
v15 = 1;
goto label3;
label2:
v15 = 0;
label3:
v16 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v17 = interfaceinvoke v16.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertEquals(boolean,boolean)>(v15, v17);
goto label1;
label4:
return;
}
public void testRemovePropagatesToAsMapEntrySet()
{
com.google.common.collect.Multimap v1, v19, v22, v9;
java.util.Map v10;
boolean v13, v16, v20, v21, v23, v5;
java.util.Iterator v12, v4;
java.util.Collection v2;
com.google.common.collect.testing.google.MultimapRemoveEntryTester v0;
java.util.Set v11;
java.util.List v18, v3;
java.lang.Object v14, v15, v17, v6, v7, v8;
v0 := @this: com.google.common.collect.testing.google.MultimapRemoveEntryTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multimap: java.util.Collection entries()>();
v3 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v2);
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label6;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: java.lang.Object resetContainer()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v10 = interfaceinvoke v9.<com.google.common.collect.Multimap: java.util.Map asMap()>();
v11 = interfaceinvoke v10.<java.util.Map: java.util.Set entrySet()>();
v12 = interfaceinvoke v11.<java.util.Set: java.util.Iterator iterator()>();
label2:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label3;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v16 = virtualinvoke v7.<java.lang.Object: boolean equals(java.lang.Object)>(v15);
if v16 == 0 goto label2;
v17 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
label3:
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertNotNull(java.lang.Object)>(v17);
v18 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v17);
v19 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
interfaceinvoke v19.<com.google.common.collect.Multimap: boolean remove(java.lang.Object,java.lang.Object)>(v7, v8);
interfaceinvoke v18.<java.util.Collection: boolean remove(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v18, v17);
v20 = interfaceinvoke v18.<java.util.Collection: boolean isEmpty()>();
if v20 != 0 goto label4;
v21 = 1;
goto label5;
label4:
v21 = 0;
label5:
v22 = virtualinvoke v0.<com.google.common.collect.testing.google.MultimapRemoveEntryTester: com.google.common.collect.Multimap multimap()>();
v23 = interfaceinvoke v22.<com.google.common.collect.Multimap: boolean containsKey(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultimapRemoveEntryTester: void assertEquals(boolean,boolean)>(v21, v23);
goto label1;
label6:
return;
}
}