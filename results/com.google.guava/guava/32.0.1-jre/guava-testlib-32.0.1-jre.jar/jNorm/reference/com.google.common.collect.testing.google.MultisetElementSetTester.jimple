public class com.google.common.collect.testing.google.MultisetElementSetTester extends com.google.common.collect.testing.google.AbstractMultisetTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultisetTester: void <init>()>();
return;
}
public void testElementSetReflectsAddAbsent()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
com.google.common.collect.Multiset v1, v5;
java.util.Set v2;
java.lang.Object v3, v6, v7;
boolean v4, v8;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e3()>();
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertFalse(boolean)>(v4);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e3()>();
interfaceinvoke v5.<com.google.common.collect.Multiset: int add(java.lang.Object,int)>(v6, 4);
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e3()>();
v8 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v7);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertTrue(boolean)>(v8);
return;
}
public void testElementSetReflectsRemove()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
com.google.common.collect.Multiset v1, v5;
java.util.Set v2, v7;
java.lang.Object v3, v6, v8;
boolean v4, v9;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertTrue(boolean)>(v4);
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v7 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v6);
interfaceinvoke v5.<com.google.common.collect.Multiset: boolean removeAll(java.util.Collection)>(v7);
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v9 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertFalse(boolean)>(v9);
return;
}
public void testElementSetRemovePropagatesToMultiset()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
com.google.common.collect.Multiset v1, v10, v13, v4;
java.util.Set v2;
int v14, v3, v6, v7;
java.lang.Object v11, v5, v8;
boolean v12, v9;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: int getNumElements()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v6 = interfaceinvoke v4.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v5);
v7 = v3 - v6;
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v9 = interfaceinvoke v2.<java.util.Set: boolean remove(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertTrue(boolean)>(v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v12 = interfaceinvoke v10.<com.google.common.collect.Multiset: boolean contains(java.lang.Object)>(v11);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertFalse(boolean)>(v12);
v13 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v14 = interfaceinvoke v13.<com.google.common.collect.Multiset: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertEquals(int,int)>(v7, v14);
return;
}
public void testElementSetRemoveDuplicatePropagatesToMultiset()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
com.google.common.collect.Multiset v10, v11, v2, v6;
java.util.Set v7;
int v1, v12, v4, v5;
java.lang.Object v3, v8;
boolean v9;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: void initThreeCopies()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: int getNumElements()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v4 = interfaceinvoke v2.<com.google.common.collect.Multiset: int count(java.lang.Object)>(v3);
v5 = v1 - v4;
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v7 = interfaceinvoke v6.<com.google.common.collect.Multiset: java.util.Set elementSet()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e0()>();
v9 = interfaceinvoke v7.<java.util.Set: boolean remove(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertTrue(boolean)>(v9);
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v10);
v11 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v12 = interfaceinvoke v11.<com.google.common.collect.Multiset: int size()>();
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertEquals(int,int)>(v5, v12);
return;
}
public void testElementSetRemoveAbsent()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
com.google.common.collect.Multiset v1;
java.util.Set v2;
java.lang.Object v3;
boolean v4;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: java.lang.Object e3()>();
v4 = interfaceinvoke v2.<java.util.Set: boolean remove(java.lang.Object)>(v3);
staticinvoke <com.google.common.collect.testing.google.MultisetElementSetTester: void assertFalse(boolean)>(v4);
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: void expectUnchanged()>();
return;
}
public void testElementSetClear()
{
com.google.common.collect.testing.google.MultisetElementSetTester v0;
com.google.common.collect.Multiset v1, v3;
java.util.Set v2;
v0 := @this: com.google.common.collect.testing.google.MultisetElementSetTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multiset: java.util.Set elementSet()>();
interfaceinvoke v2.<java.util.Set: void clear()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetElementSetTester: com.google.common.collect.Multiset getMultiset()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEmpty(java.lang.Iterable)>(v3);
return;
}
public static java.util.List getElementSetDuplicateInitializingMethods()
{
java.util.List v2;
java.lang.reflect.Method v1;
java.lang.reflect.Method[] v0;
v0 = newarray (java.lang.reflect.Method)[1];
v1 = staticinvoke <com.google.common.collect.testing.Helpers: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/testing/google/MultisetElementSetTester;", "testElementSetRemoveDuplicatePropagatesToMultiset");
v0[0] = v1;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
return v2;
}
}