public class com.google.common.collect.testing.google.MultisetEqualsTester extends com.google.common.collect.testing.google.AbstractMultisetTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultisetEqualsTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetEqualsTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultisetTester: void <init>()>();
return;
}
public void testEqualsSameContents()
{
java.lang.Object[] v2, v6;
com.google.common.collect.Multiset v3;
com.google.common.collect.testing.google.MultisetEqualsTester v0;
java.util.Collection v5;
com.google.common.testing.EqualsTester v1, v8;
java.lang.Object v4, v7;
v0 := @this: com.google.common.collect.testing.google.MultisetEqualsTester;
v1 = new com.google.common.testing.EqualsTester;
specialinvoke v1.<com.google.common.testing.EqualsTester: void <init>()>();
v2 = newarray (java.lang.Object)[2];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: com.google.common.collect.Multiset getMultiset()>();
v2[0] = v3;
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.lang.Object getSubjectGenerator()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.util.Collection getSampleElements()>();
v6 = interfaceinvoke v5.<java.util.Collection: java.lang.Object[] toArray()>();
v7 = interfaceinvoke v4.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v6);
v2[1] = v7;
v8 = virtualinvoke v1.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v2);
virtualinvoke v8.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testNotEqualsEmpty()
{
java.lang.Object[] v2, v5, v7;
com.google.common.collect.Multiset v3;
com.google.common.collect.testing.google.MultisetEqualsTester v0;
com.google.common.testing.EqualsTester v1, v4, v9;
java.lang.Object v6, v8;
v0 := @this: com.google.common.collect.testing.google.MultisetEqualsTester;
v1 = new com.google.common.testing.EqualsTester;
specialinvoke v1.<com.google.common.testing.EqualsTester: void <init>()>();
v2 = newarray (java.lang.Object)[1];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: com.google.common.collect.Multiset getMultiset()>();
v2[0] = v3;
v4 = virtualinvoke v1.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v2);
v5 = newarray (java.lang.Object)[1];
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.lang.Object getSubjectGenerator()>();
v7 = newarray (java.lang.Object)[0];
v8 = interfaceinvoke v6.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v7);
v5[0] = v8;
v9 = virtualinvoke v4.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v5);
virtualinvoke v9.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
public void testHashCodeMatchesEntrySet()
{
com.google.common.collect.Multiset v1, v4;
com.google.common.collect.testing.google.MultisetEqualsTester v0;
int v3, v5;
java.util.Set v2;
v0 := @this: com.google.common.collect.testing.google.MultisetEqualsTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: com.google.common.collect.Multiset getMultiset()>();
v2 = interfaceinvoke v1.<com.google.common.collect.Multiset: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: int hashCode()>();
v4 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: com.google.common.collect.Multiset getMultiset()>();
v5 = interfaceinvoke v4.<com.google.common.collect.Multiset: int hashCode()>();
staticinvoke <com.google.common.collect.testing.google.MultisetEqualsTester: void assertEquals(int,int)>(v3, v5);
return;
}
public void testEqualsMultisetWithNullValue()
{
java.lang.Object[] v10, v2, v5, v7;
com.google.common.collect.Multiset v3;
com.google.common.collect.testing.google.MultisetEqualsTester v0;
com.google.common.testing.EqualsTester v1, v12, v4;
java.lang.Object v11, v6, v8, v9;
v0 := @this: com.google.common.collect.testing.google.MultisetEqualsTester;
v1 = new com.google.common.testing.EqualsTester;
specialinvoke v1.<com.google.common.testing.EqualsTester: void <init>()>();
v2 = newarray (java.lang.Object)[1];
v3 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: com.google.common.collect.Multiset getMultiset()>();
v2[0] = v3;
v4 = virtualinvoke v1.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v2);
v5 = newarray (java.lang.Object)[2];
v6 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.lang.Object getSubjectGenerator()>();
v7 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.lang.Object[] createArrayWithNullElement()>();
v8 = interfaceinvoke v6.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v7);
v5[0] = v8;
v9 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.lang.Object getSubjectGenerator()>();
v10 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetEqualsTester: java.lang.Object[] createArrayWithNullElement()>();
v11 = interfaceinvoke v9.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v10);
v5[1] = v11;
v12 = virtualinvoke v4.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester addEqualityGroup(java.lang.Object[])>(v5);
virtualinvoke v12.<com.google.common.testing.EqualsTester: com.google.common.testing.EqualsTester testEquals()>();
return;
}
}