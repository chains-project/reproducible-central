public class com.google.common.collect.testing.google.MultisetForEachEntryTester extends com.google.common.collect.testing.google.AbstractMultisetTester
{
public void <init>()
{
com.google.common.collect.testing.google.MultisetForEachEntryTester v0;
v0 := @this: com.google.common.collect.testing.google.MultisetForEachEntryTester;
specialinvoke v0.<com.google.common.collect.testing.google.AbstractMultisetTester: void <init>()>();
return;
}
public void testForEachEntry()
{
com.google.common.collect.Multiset v2, v5;
java.util.Set v3;
java.util.function.ObjIntConsumer v6;
com.google.common.collect.testing.google.MultisetForEachEntryTester v0;
java.util.ArrayList v1, v4;
v0 := @this: com.google.common.collect.testing.google.MultisetForEachEntryTester;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: com.google.common.collect.Multiset getMultiset()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multiset: java.util.Set entrySet()>();
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v3);
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: com.google.common.collect.Multiset getMultiset()>();
v6 = staticinvoke <com.google.common.collect.testing.google.MultisetForEachEntryTester$lambda_testForEachEntry_0__19: java.util.function.ObjIntConsumer bootstrap$(java.util.List)>(v4);
interfaceinvoke v5.<com.google.common.collect.Multiset: void forEachEntry(java.util.function.ObjIntConsumer)>(v6);
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualIgnoringOrder(java.lang.Iterable,java.lang.Iterable)>(v1, v4);
return;
}
public void testForEachEntryOrdered()
{
com.google.common.collect.Multiset v2, v5;
java.util.Set v3;
java.util.function.ObjIntConsumer v6;
com.google.common.collect.testing.google.MultisetForEachEntryTester v0;
java.util.ArrayList v1, v4;
v0 := @this: com.google.common.collect.testing.google.MultisetForEachEntryTester;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: com.google.common.collect.Multiset getMultiset()>();
v3 = interfaceinvoke v2.<com.google.common.collect.Multiset: java.util.Set entrySet()>();
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v3);
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: com.google.common.collect.Multiset getMultiset()>();
v6 = staticinvoke <com.google.common.collect.testing.google.MultisetForEachEntryTester$lambda_testForEachEntryOrdered_1__20: java.util.function.ObjIntConsumer bootstrap$(java.util.List)>(v4);
interfaceinvoke v5.<com.google.common.collect.Multiset: void forEachEntry(java.util.function.ObjIntConsumer)>(v6);
staticinvoke <com.google.common.collect.testing.google.MultisetForEachEntryTester: void assertEquals(java.lang.Object,java.lang.Object)>(v1, v4);
return;
}
public void testForEachEntryDuplicates()
{
java.util.List v3;
com.google.common.collect.Multiset v5;
java.lang.Object v1;
java.util.function.ObjIntConsumer v6;
com.google.common.collect.Multiset$Entry v2;
com.google.common.collect.testing.google.MultisetForEachEntryTester v0;
java.util.ArrayList v4;
v0 := @this: com.google.common.collect.testing.google.MultisetForEachEntryTester;
virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: void initThreeCopies()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: java.lang.Object e0()>();
v2 = staticinvoke <com.google.common.collect.Multisets: com.google.common.collect.Multiset$Entry immutableEntry(java.lang.Object,int)>(v1, 3);
v3 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v2);
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = virtualinvoke v0.<com.google.common.collect.testing.google.MultisetForEachEntryTester: com.google.common.collect.Multiset getMultiset()>();
v6 = staticinvoke <com.google.common.collect.testing.google.MultisetForEachEntryTester$lambda_testForEachEntryDuplicates_2__21: java.util.function.ObjIntConsumer bootstrap$(java.util.List)>(v4);
interfaceinvoke v5.<com.google.common.collect.Multiset: void forEachEntry(java.util.function.ObjIntConsumer)>(v6);
staticinvoke <com.google.common.collect.testing.google.MultisetForEachEntryTester: void assertEquals(java.lang.Object,java.lang.Object)>(v3, v4);
return;
}
public static java.util.List getForEachEntryDuplicateInitializingMethods()
{
java.util.List v2;
java.lang.reflect.Method v1;
java.lang.reflect.Method[] v0;
v0 = newarray (java.lang.reflect.Method)[1];
v1 = staticinvoke <com.google.common.collect.testing.Helpers: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/testing/google/MultisetForEachEntryTester;", "testForEachEntryDuplicates");
v0[0] = v1;
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
return v2;
}
}