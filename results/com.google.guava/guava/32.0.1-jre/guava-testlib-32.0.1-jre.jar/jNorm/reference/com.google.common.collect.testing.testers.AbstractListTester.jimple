public class com.google.common.collect.testing.testers.AbstractListTester extends com.google.common.collect.testing.AbstractCollectionTester
{
public void <init>()
{
com.google.common.collect.testing.testers.AbstractListTester v0;
v0 := @this: com.google.common.collect.testing.testers.AbstractListTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractCollectionTester: void <init>()>();
return;
}
protected final java.util.List getList()
{
com.google.common.collect.testing.testers.AbstractListTester v0;
java.util.Collection v1;
v0 := @this: com.google.common.collect.testing.testers.AbstractListTester;
v1 = v0.<com.google.common.collect.testing.testers.AbstractListTester: java.util.Collection collection>;
return v1;
}
protected void expectContents(java.util.Collection)
{
int v4, v5, v8, v9;
java.lang.String v14, v15, v6, v7;
boolean v13;
java.util.Collection v1;
java.util.List v11, v2, v3;
com.google.common.collect.testing.testers.AbstractListTester v0;
java.lang.Object v10, v12;
v0 := @this: com.google.common.collect.testing.testers.AbstractListTester;
v1 := @parameter0: java.util.Collection;
v2 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v1);
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: java.util.List getList()>();
v4 = interfaceinvoke v3.<java.util.List: int size()>();
v5 = interfaceinvoke v2.<java.util.List: int size()>();
if v4 == v5 goto label1;
v6 = specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: java.lang.String reportContext(java.util.List)>(v2);
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("size mismatch: \u0001");
staticinvoke <com.google.common.collect.testing.testers.AbstractListTester: void fail(java.lang.String)>(v7);
label1:
v8 = 0;
label2:
v9 = interfaceinvoke v2.<java.util.List: int size()>();
if v8 >= v9 goto label5;
v10 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v8);
v11 = virtualinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: java.util.List getList()>();
v12 = interfaceinvoke v11.<java.util.List: java.lang.Object get(int)>(v8);
if v10 == v12 goto label4;
if v10 == null goto label3;
v13 = virtualinvoke v10.<java.lang.Object: boolean equals(java.lang.Object)>(v12);
if v13 != 0 goto label4;
label3:
v14 = specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: java.lang.String reportContext(java.util.List)>(v2);
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String)>(v8, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("mismatch at index \u0001: \u0001");
staticinvoke <com.google.common.collect.testing.testers.AbstractListTester: void fail(java.lang.String)>(v15);
label4:
v8 = v8 + 1;
goto label2;
label5:
return;
}
private java.lang.String reportContext(java.util.List)
{
java.util.List v1;
java.lang.Object[] v2;
com.google.common.collect.testing.testers.AbstractListTester v0;
java.util.Collection v3;
java.lang.String v4;
v0 := @this: com.google.common.collect.testing.testers.AbstractListTester;
v1 := @parameter0: java.util.List;
v2 = newarray (java.lang.Object)[2];
v2[0] = v1;
v3 = v0.<com.google.common.collect.testing.testers.AbstractListTester: java.util.Collection collection>;
v2[1] = v3;
v4 = staticinvoke <com.google.common.collect.testing.testers.Platform: java.lang.String format(java.lang.String,java.lang.Object[])>("expected collection %s; actual collection %s", v2);
return v4;
}
}