public class com.google.common.collect.testing.testers.ListHashCodeTester extends com.google.common.collect.testing.testers.AbstractListTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListHashCodeTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListHashCodeTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListTester: void <init>()>();
return;
}
public void testHashCode()
{
java.util.Iterator v3;
com.google.common.collect.testing.testers.ListHashCodeTester v0;
java.util.List v2, v8;
int v1, v6, v7, v9;
java.lang.Object v5;
boolean v4;
v0 := @this: com.google.common.collect.testing.testers.ListHashCodeTester;
v1 = 1;
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListHashCodeTester: java.util.List getOrderedElements()>();
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label4;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = 31 * v1;
if v5 != null goto label2;
v7 = 0;
goto label3;
label2:
v7 = virtualinvoke v5.<java.lang.Object: int hashCode()>();
label3:
v1 = v6 + v7;
goto label1;
label4:
v8 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListHashCodeTester: java.util.List getList()>();
v9 = interfaceinvoke v8.<java.util.List: int hashCode()>();
staticinvoke <com.google.common.collect.testing.testers.ListHashCodeTester: void assertEquals(java.lang.String,int,int)>("A List\'s hashCode() should be computed from those of its elements.", v1, v9);
return;
}
public static java.lang.reflect.Method getHashCodeMethod()
{
java.lang.reflect.Method v0;
v0 = staticinvoke <com.google.common.collect.testing.Helpers: java.lang.reflect.Method getMethod(java.lang.Class,java.lang.String)>(class "Lcom/google/common/collect/testing/testers/ListHashCodeTester;", "testHashCode");
return v0;
}
}