public class com.google.common.collect.testing.testers.ListIndexOfTester extends com.google.common.collect.testing.testers.AbstractListIndexOfTester
{
public void <init>()
{
com.google.common.collect.testing.testers.ListIndexOfTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListIndexOfTester;
specialinvoke v0.<com.google.common.collect.testing.testers.AbstractListIndexOfTester: void <init>()>();
return;
}
protected int find(java.lang.Object)
{
java.util.List v2;
com.google.common.collect.testing.testers.ListIndexOfTester v0;
int v3;
java.lang.Object v1;
v0 := @this: com.google.common.collect.testing.testers.ListIndexOfTester;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.util.List getList()>();
v3 = interfaceinvoke v2.<java.util.List: int indexOf(java.lang.Object)>(v1);
return v3;
}
protected java.lang.String getMethodName()
{
com.google.common.collect.testing.testers.ListIndexOfTester v0;
v0 := @this: com.google.common.collect.testing.testers.ListIndexOfTester;
return "indexOf";
}
public void testIndexOf_duplicate()
{
java.lang.Object[] v1;
com.google.common.collect.testing.testers.ListIndexOfTester v0;
java.util.List v7;
int v2, v3, v9;
java.lang.Object v4, v5, v6, v8;
v0 := @this: com.google.common.collect.testing.testers.ListIndexOfTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.lang.Object[] createSamplesArray()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: int getNumElements()>();
v3 = v2 / 2;
v4 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.lang.Object e0()>();
v1[v3] = v4;
v5 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.lang.Object getSubjectGenerator()>();
v6 = interfaceinvoke v5.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.lang.Object create(java.lang.Object[])>(v1);
v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.util.Collection collection> = v6;
v7 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.util.List getList()>();
v8 = virtualinvoke v0.<com.google.common.collect.testing.testers.ListIndexOfTester: java.lang.Object e0()>();
v9 = interfaceinvoke v7.<java.util.List: int indexOf(java.lang.Object)>(v8);
staticinvoke <com.google.common.collect.testing.testers.ListIndexOfTester: void assertEquals(java.lang.String,int,int)>("indexOf(duplicate) should return index of first occurrence", 0, v9);
return;
}
}