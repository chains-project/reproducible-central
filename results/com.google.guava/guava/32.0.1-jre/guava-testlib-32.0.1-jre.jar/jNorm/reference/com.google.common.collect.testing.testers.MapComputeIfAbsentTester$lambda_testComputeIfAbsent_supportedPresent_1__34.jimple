public final class com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34 extends java.lang.Object implements java.util.function.Function
{
public static java.util.function.Function bootstrap$()
{
com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34 v0;
v0 = new com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34;
specialinvoke v0.<com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34: void <init>()>();
return v0;
}
public void <init>()
{
com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34 v0;
v0 := @this: com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object apply(java.lang.Object)
{
java.lang.Object v1, v2;
com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34 v0;
v0 := @this: com.google.common.collect.testing.testers.MapComputeIfAbsentTester$lambda_testComputeIfAbsent_supportedPresent_1__34;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <com.google.common.collect.testing.testers.MapComputeIfAbsentTester: java.lang.Object lambda$testComputeIfAbsent_supportedPresent$1(java.lang.Object)>(v1);
return v2;
}
}