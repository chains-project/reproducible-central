public class com.google.common.collect.testing.testers.SortedMapNavigationTester extends com.google.common.collect.testing.AbstractMapTester
{
private java.util.SortedMap navigableMap;
private java.util.Map$Entry a;
private java.util.Map$Entry c;
public void <init>()
{
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractMapTester: void <init>()>();
return;
}
public void setUp() throws java.lang.Exception
{
java.util.Collection v6;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
com.google.common.collect.testing.features.CollectionSize v4;
java.util.List v7;
java.util.Map v1;
int v11, v13, v5;
java.lang.Object v12, v14, v2, v3;
java.util.Comparator v10, v9;
java.util.SortedMap v8;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
specialinvoke v0.<com.google.common.collect.testing.AbstractMapTester: void setUp()>();
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map getMap()>();
v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap> = v1;
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v3 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v4 = interfaceinvoke v3.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.features.CollectionSize getCollectionSize()>();
v5 = virtualinvoke v4.<com.google.common.collect.testing.features.CollectionSize: int getNumElements()>();
v6 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.util.Collection getSampleElements(int)>(v5);
v7 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v6);
v8 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v9 = interfaceinvoke v8.<java.util.SortedMap: java.util.Comparator comparator()>();
v10 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Comparator entryComparator(java.util.Comparator)>(v9);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(v7, v10);
v11 = interfaceinvoke v7.<java.util.List: int size()>();
if v11 < 1 goto label1;
v12 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(0);
v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a> = v12;
v13 = interfaceinvoke v7.<java.util.List: int size()>();
if v13 < 3 goto label1;
v14 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(2);
v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry c> = v14;
label1:
return;
}
public void testEmptyMapFirst()
{
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.util.NoSuchElementException v2;
java.util.SortedMap v1;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
label1:
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
interfaceinvoke v1.<java.util.SortedMap: java.lang.Object firstKey()>();
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void fail()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.util.NoSuchElementException from label1 to label2 with label3;
}
public void testEmptyMapLast()
{
java.lang.Object v2;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.util.NoSuchElementException v3;
java.util.SortedMap v1;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
label1:
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v2 = interfaceinvoke v1.<java.util.SortedMap: java.lang.Object lastKey()>();
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertNull(java.lang.Object)>(v2);
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void fail()>();
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.util.NoSuchElementException from label1 to label2 with label3;
}
public void testSingletonMapFirst()
{
java.util.Map$Entry v1;
java.lang.Object v2, v4;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.util.SortedMap v3;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
v3 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v4 = interfaceinvoke v3.<java.util.SortedMap: java.lang.Object firstKey()>();
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertEquals(java.lang.Object,java.lang.Object)>(v2, v4);
return;
}
public void testSingletonMapLast()
{
java.util.Map$Entry v1;
java.lang.Object v2, v4;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.util.SortedMap v3;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
v3 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v4 = interfaceinvoke v3.<java.util.SortedMap: java.lang.Object lastKey()>();
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertEquals(java.lang.Object,java.lang.Object)>(v2, v4);
return;
}
public void testFirst()
{
java.util.Map$Entry v1;
java.lang.Object v2, v4;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.util.SortedMap v3;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
v3 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v4 = interfaceinvoke v3.<java.util.SortedMap: java.lang.Object firstKey()>();
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertEquals(java.lang.Object,java.lang.Object)>(v2, v4);
return;
}
public void testLast()
{
java.util.Map$Entry v1;
java.lang.Object v2, v4;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.util.SortedMap v3;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry c>;
v2 = interfaceinvoke v1.<java.util.Map$Entry: java.lang.Object getKey()>();
v3 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v4 = interfaceinvoke v3.<java.util.SortedMap: java.lang.Object lastKey()>();
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertEquals(java.lang.Object,java.lang.Object)>(v2, v4);
return;
}
public void testHeadMapExclusive()
{
java.util.Map$Entry v2, v5;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.lang.Object v3, v6;
java.util.SortedMap v1, v4;
boolean v7;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v2 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v3 = interfaceinvoke v2.<java.util.Map$Entry: java.lang.Object getKey()>();
v4 = interfaceinvoke v1.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(v3);
v5 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v4.<java.util.SortedMap: boolean containsKey(java.lang.Object)>(v6);
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertFalse(boolean)>(v7);
return;
}
public void testTailMapInclusive()
{
java.util.Map$Entry v2, v5;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.lang.Object v3, v6;
java.util.SortedMap v1, v4;
boolean v7;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v2 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v3 = interfaceinvoke v2.<java.util.Map$Entry: java.lang.Object getKey()>();
v4 = interfaceinvoke v1.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(v3);
v5 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v4.<java.util.SortedMap: boolean containsKey(java.lang.Object)>(v6);
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertTrue(boolean)>(v7);
return;
}
public void testHeadMap()
{
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
int v10, v11, v4;
java.util.Collection v5;
java.util.Set v17;
com.google.common.collect.testing.features.CollectionSize v3;
java.util.List v12, v6;
java.lang.Object v1, v14, v15, v2;
java.util.Comparator v8, v9;
java.util.SortedMap v13, v16, v7;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.features.CollectionSize getCollectionSize()>();
v4 = virtualinvoke v3.<com.google.common.collect.testing.features.CollectionSize: int getNumElements()>();
v5 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.util.Collection getSampleElements(int)>(v4);
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v5);
v7 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v8 = interfaceinvoke v7.<java.util.SortedMap: java.util.Comparator comparator()>();
v9 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Comparator entryComparator(java.util.Comparator)>(v8);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(v6, v9);
v10 = 0;
label1:
v11 = interfaceinvoke v6.<java.util.List: int size()>();
if v10 >= v11 goto label2;
v12 = interfaceinvoke v6.<java.util.List: java.util.List subList(int,int)>(0, v10);
v13 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v14 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v10);
v15 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
v16 = interfaceinvoke v13.<java.util.SortedMap: java.util.SortedMap headMap(java.lang.Object)>(v15);
v17 = interfaceinvoke v16.<java.util.SortedMap: java.util.Set entrySet()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualInOrder(java.lang.Iterable,java.lang.Iterable)>(v12, v17);
v10 = v10 + 1;
goto label1;
label2:
return;
}
public void testTailMap()
{
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
int v10, v11, v12, v4;
java.util.Collection v5;
java.util.Set v18;
com.google.common.collect.testing.features.CollectionSize v3;
java.util.List v13, v6;
java.lang.Object v1, v15, v16, v2;
java.util.Comparator v8, v9;
java.util.SortedMap v14, v17, v7;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.features.CollectionSize getCollectionSize()>();
v4 = virtualinvoke v3.<com.google.common.collect.testing.features.CollectionSize: int getNumElements()>();
v5 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.util.Collection getSampleElements(int)>(v4);
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v5);
v7 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v8 = interfaceinvoke v7.<java.util.SortedMap: java.util.Comparator comparator()>();
v9 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Comparator entryComparator(java.util.Comparator)>(v8);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(v6, v9);
v10 = 0;
label1:
v11 = interfaceinvoke v6.<java.util.List: int size()>();
if v10 >= v11 goto label2;
v12 = interfaceinvoke v6.<java.util.List: int size()>();
v13 = interfaceinvoke v6.<java.util.List: java.util.List subList(int,int)>(v10, v12);
v14 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v15 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v10);
v16 = interfaceinvoke v15.<java.util.Map$Entry: java.lang.Object getKey()>();
v17 = interfaceinvoke v14.<java.util.SortedMap: java.util.SortedMap tailMap(java.lang.Object)>(v16);
v18 = interfaceinvoke v17.<java.util.SortedMap: java.util.Set entrySet()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualInOrder(java.lang.Iterable,java.lang.Iterable)>(v13, v18);
v10 = v10 + 1;
goto label1;
label2:
return;
}
public void testSubMap()
{
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
int v10, v11, v12, v13, v4;
java.util.Collection v5;
java.util.Set v21;
com.google.common.collect.testing.features.CollectionSize v3;
java.util.List v14, v6;
java.lang.Object v1, v16, v17, v18, v19, v2;
java.util.Comparator v8, v9;
java.util.SortedMap v15, v20, v7;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v2 = virtualinvoke v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.lang.Object getSubjectGenerator()>();
v3 = interfaceinvoke v2.<com.google.common.collect.testing.OneSizeTestContainerGenerator: com.google.common.collect.testing.features.CollectionSize getCollectionSize()>();
v4 = virtualinvoke v3.<com.google.common.collect.testing.features.CollectionSize: int getNumElements()>();
v5 = interfaceinvoke v1.<com.google.common.collect.testing.OneSizeTestContainerGenerator: java.util.Collection getSampleElements(int)>(v4);
v6 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.List copyToList(java.lang.Iterable)>(v5);
v7 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v8 = interfaceinvoke v7.<java.util.SortedMap: java.util.Comparator comparator()>();
v9 = staticinvoke <com.google.common.collect.testing.Helpers: java.util.Comparator entryComparator(java.util.Comparator)>(v8);
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(v6, v9);
v10 = 0;
label1:
v11 = interfaceinvoke v6.<java.util.List: int size()>();
if v10 >= v11 goto label4;
v12 = v10 + 1;
label2:
v13 = interfaceinvoke v6.<java.util.List: int size()>();
if v12 >= v13 goto label3;
v14 = interfaceinvoke v6.<java.util.List: java.util.List subList(int,int)>(v10, v12);
v15 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v16 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v10);
v17 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getKey()>();
v18 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v12);
v19 = interfaceinvoke v18.<java.util.Map$Entry: java.lang.Object getKey()>();
v20 = interfaceinvoke v15.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(v17, v19);
v21 = interfaceinvoke v20.<java.util.SortedMap: java.util.Set entrySet()>();
staticinvoke <com.google.common.collect.testing.Helpers: void assertEqualInOrder(java.lang.Iterable,java.lang.Iterable)>(v14, v21);
v12 = v12 + 1;
goto label2;
label3:
v10 = v10 + 1;
goto label1;
label4:
return;
}
public void testSubMapIllegal()
{
java.util.Map$Entry v2, v4;
java.lang.Object v3, v5;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
java.lang.IllegalArgumentException v6;
java.util.SortedMap v1;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
label1:
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v2 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry c>;
v3 = interfaceinvoke v2.<java.util.Map$Entry: java.lang.Object getKey()>();
v4 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.Map$Entry a>;
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke v1.<java.util.SortedMap: java.util.SortedMap subMap(java.lang.Object,java.lang.Object)>(v3, v5);
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void fail(java.lang.String)>("Expected IllegalArgumentException");
label2:
goto label4;
label3:
v6 := @caughtexception;
label4:
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public void testOrderedByComparator()
{
java.util.Iterator v6;
java.util.Set v5;
com.google.common.collect.testing.testers.SortedMapNavigationTester v0;
com.google.common.collect.testing.testers.SortedMapNavigationTester$1 v3;
int v12;
java.lang.Object v10, v11, v7, v9;
java.util.Comparator v2;
java.util.SortedMap v1, v4;
boolean v13, v8;
v0 := @this: com.google.common.collect.testing.testers.SortedMapNavigationTester;
v1 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v2 = interfaceinvoke v1.<java.util.SortedMap: java.util.Comparator comparator()>();
if v2 != null goto label1;
v3 = new com.google.common.collect.testing.testers.SortedMapNavigationTester$1;
specialinvoke v3.<com.google.common.collect.testing.testers.SortedMapNavigationTester$1: void <init>(com.google.common.collect.testing.testers.SortedMapNavigationTester)>(v0);
v2 = v3;
label1:
v4 = v0.<com.google.common.collect.testing.testers.SortedMapNavigationTester: java.util.SortedMap navigableMap>;
v5 = interfaceinvoke v4.<java.util.SortedMap: java.util.Set entrySet()>();
v6 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
v7 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
label2:
v8 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label5;
v9 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v11 = interfaceinvoke v9.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = interfaceinvoke v2.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v10, v11);
if v12 >= 0 goto label3;
v13 = 1;
goto label4;
label3:
v13 = 0;
label4:
staticinvoke <com.google.common.collect.testing.testers.SortedMapNavigationTester: void assertTrue(boolean)>(v13);
v7 = v9;
goto label2;
label5:
return;
}
}