class META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand extends java.lang.Object
{
private static final long LONG_MASK;
private static final java.lang.invoke.VarHandle readIntBE;
private final int numInts;
private final byte[] x;
private int firstNonZeroInt;
public void <init>(long)
{
byte[] v12;
META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand v0;
long v1, v6, v7;
java.lang.IllegalArgumentException v4;
byte v2, v3;
int v10, v11, v13, v8, v9;
java.lang.String v5;
v0 := @this: META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand;
v1 := @parameter0: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = v1 cmp 2147483647L;
if v3 < 0 goto label2;
label1:
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("numBits=\u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label2:
v6 = v1 + 63L;
v7 = v6 >>> 6;
v8 = v7 + 1;
v9 = v8 << 1;
v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int numInts> = v9;
v10 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int numInts>;
v11 = v10 << 2;
v12 = newarray (byte)[v11];
v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: byte[] x> = v12;
v13 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int numInts>;
v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int firstNonZeroInt> = v13;
return;
}
public void add(int)
{
META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand v0;
long v2, v7, v8;
byte v5;
int v1, v10, v11, v3, v4, v6, v9;
v0 := @this: META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand;
v1 := @parameter0: int;
if v1 != 0 goto label1;
return;
label1:
v2 = v1 & 4294967295L;
v3 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int numInts>;
v4 = v3 - 1;
label2:
v5 = v2 cmp 0L;
if v5 == 0 goto label3;
v6 = specialinvoke v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int x(int)>(v4);
v7 = v6 & 4294967295L;
v8 = v7 + v2;
specialinvoke v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: void x(int,int)>(v4, v8);
v2 = v8 >>> 32;
v4 = v4 - 1;
goto label2;
label3:
v9 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int firstNonZeroInt>;
v10 = v4 + 1;
v11 = staticinvoke <java.lang.Math: int min(int,int)>(v9, v10);
v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int firstNonZeroInt> = v11;
return;
}
public void fma(int, int)
{
META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand v0;
long v10, v12, v3, v8, v9;
byte v11;
int v1, v2, v4, v5, v6, v7;
v0 := @this: META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v1 & 4294967295L;
v4 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int numInts>;
v5 = v4 - 1;
label1:
v6 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int firstNonZeroInt>;
if v5 < v6 goto label2;
v7 = specialinvoke v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int x(int)>(v5);
v8 = v7 & 4294967295L;
v9 = v3 * v8;
v10 = v9 + v2;
specialinvoke v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: void x(int,int)>(v5, v10);
v2 = v10 >>> 32;
v5 = v5 - 1;
goto label1;
label2:
v11 = v2 cmp 0L;
if v11 == 0 goto label3;
specialinvoke v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: void x(int,int)>(v5, v12);
v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: int firstNonZeroInt> = v5;
label3:
return;
}
public java.math.BigInteger toBigInteger()
{
byte[] v2;
META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand v0;
java.math.BigInteger v1;
v0 := @this: META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand;
v1 = new java.math.BigInteger;
v2 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: byte[] x>;
specialinvoke v1.<java.math.BigInteger: void <init>(byte[])>(v2);
return v1;
}
private void x(int, int)
{
byte[] v4;
java.lang.invoke.VarHandle v3;
META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand v0;
int v1, v2, v5;
v0 := @this: META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = <com.fasterxml.jackson.core.io.doubleparser.BigSignificand: java.lang.invoke.VarHandle readIntBE>;
v4 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: byte[] x>;
v5 = v1 << 2;
virtualinvoke v3.<java.lang.invoke.VarHandle: void set(byte[],int,int)>(v4, v5, v2);
return;
}
private int x(int)
{
byte[] v3;
java.lang.invoke.VarHandle v2;
META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand v0;
int v1, v4, v5;
v0 := @this: META-INF.versions.11.com.fasterxml.jackson.core.io.doubleparser.BigSignificand;
v1 := @parameter0: int;
v2 = <com.fasterxml.jackson.core.io.doubleparser.BigSignificand: java.lang.invoke.VarHandle readIntBE>;
v3 = v0.<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: byte[] x>;
v4 = v1 << 2;
v5 = virtualinvoke v2.<java.lang.invoke.VarHandle: int get(byte[],int)>(v3, v4);
return v5;
}
static void <clinit>()
{
java.lang.invoke.VarHandle v1;
java.nio.ByteOrder v0;
v0 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;
v1 = staticinvoke <java.lang.invoke.MethodHandles: java.lang.invoke.VarHandle byteArrayViewVarHandle(java.lang.Class,java.nio.ByteOrder)>(class "[I", v0);
<com.fasterxml.jackson.core.io.doubleparser.BigSignificand: java.lang.invoke.VarHandle readIntBE> = v1;
return;
}
}