public class META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector extends java.lang.Object implements org.kohsuke.github.connector.GitHubConnector
{
private final java.net.http.HttpClient client;
public void <init>()
{
java.net.http.HttpClient$Builder v1, v3;
java.net.http.HttpClient$Redirect v2;
java.net.http.HttpClient v4;
META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector v0;
v0 := @this: META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector;
v1 = staticinvoke <java.net.http.HttpClient: java.net.http.HttpClient$Builder newBuilder()>();
v2 = <java.net.http.HttpClient$Redirect: java.net.http.HttpClient$Redirect NORMAL>;
v3 = interfaceinvoke v1.<java.net.http.HttpClient$Builder: java.net.http.HttpClient$Builder followRedirects(java.net.http.HttpClient$Redirect)>(v2);
v4 = interfaceinvoke v3.<java.net.http.HttpClient$Builder: java.net.http.HttpClient build()>();
specialinvoke v0.<org.kohsuke.github.extras.HttpClientGitHubConnector: void <init>(java.net.http.HttpClient)>(v4);
return;
}
public void <init>(java.net.http.HttpClient)
{
java.net.http.HttpClient v1;
META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector v0;
v0 := @this: META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector;
v1 := @parameter0: java.net.http.HttpClient;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.extras.HttpClientGitHubConnector: java.net.http.HttpClient client> = v1;
return;
}
public org.kohsuke.github.connector.GitHubConnectorResponse send(org.kohsuke.github.connector.GitHubConnectorRequest) throws java.io.IOException
{
java.lang.Throwable v28;
byte[] v18;
java.net.http.HttpResponse$BodyHandler v22;
org.kohsuke.github.connector.GitHubConnectorRequest v1;
java.net.URL v3;
java.net.URISyntaxException v5;
java.io.InterruptedIOException v26;
java.net.http.HttpRequest v20;
java.util.Map v7;
java.net.http.HttpClient v21;
java.lang.String v14, v19, v27;
java.net.URI v4;
boolean v10, v16;
java.net.http.HttpResponse v23;
org.kohsuke.github.extras.HttpClientGitHubConnector$HttpClientGitHubConnectorResponse v24;
java.util.Iterator v9;
java.util.Set v8;
java.io.IOException v6;
java.net.http.HttpRequest$BodyPublisher v15;
java.net.http.HttpRequest$Builder v2;
java.lang.InterruptedException v25;
java.lang.Object v11, v12, v13;
META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector v0;
java.io.InputStream v17;
v0 := @this: META-INF.versions.11.org.kohsuke.github.extras.HttpClientGitHubConnector;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorRequest;
v2 = staticinvoke <java.net.http.HttpRequest: java.net.http.HttpRequest$Builder newBuilder()>();
label01:
v3 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.net.URL url()>();
v4 = virtualinvoke v3.<java.net.URL: java.net.URI toURI()>();
interfaceinvoke v2.<java.net.http.HttpRequest$Builder: java.net.http.HttpRequest$Builder uri(java.net.URI)>(v4);
label02:
goto label04;
label03:
v5 := @caughtexception;
v6 = new java.io.IOException;
specialinvoke v6.<java.io.IOException: void <init>(java.lang.String,java.lang.Throwable)>("Invalid URL", v5);
throw v6;
label04:
v7 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.util.Map allHeaders()>();
v8 = interfaceinvoke v7.<java.util.Map: java.util.Set entrySet()>();
v9 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
label05:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label06;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
if v12 == null goto label05;
v13 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getKey()>();
v14 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", v12);
interfaceinvoke v2.<java.net.http.HttpRequest$Builder: java.net.http.HttpRequest$Builder header(java.lang.String,java.lang.String)>(v13, v14);
goto label05;
label06:
v15 = staticinvoke <java.net.http.HttpRequest$BodyPublishers: java.net.http.HttpRequest$BodyPublisher noBody()>();
v16 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: boolean hasBody()>();
if v16 == 0 goto label07;
v17 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.io.InputStream body()>();
v18 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(v17);
v15 = staticinvoke <java.net.http.HttpRequest$BodyPublishers: java.net.http.HttpRequest$BodyPublisher ofByteArray(byte[])>(v18);
label07:
v19 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.lang.String method()>();
interfaceinvoke v2.<java.net.http.HttpRequest$Builder: java.net.http.HttpRequest$Builder method(java.lang.String,java.net.http.HttpRequest$BodyPublisher)>(v19, v15);
v20 = interfaceinvoke v2.<java.net.http.HttpRequest$Builder: java.net.http.HttpRequest build()>();
label08:
v21 = v0.<org.kohsuke.github.extras.HttpClientGitHubConnector: java.net.http.HttpClient client>;
v22 = staticinvoke <java.net.http.HttpResponse$BodyHandlers: java.net.http.HttpResponse$BodyHandler ofInputStream()>();
v23 = virtualinvoke v21.<java.net.http.HttpClient: java.net.http.HttpResponse send(java.net.http.HttpRequest,java.net.http.HttpResponse$BodyHandler)>(v20, v22);
v24 = new org.kohsuke.github.extras.HttpClientGitHubConnector$HttpClientGitHubConnectorResponse;
specialinvoke v24.<org.kohsuke.github.extras.HttpClientGitHubConnector$HttpClientGitHubConnectorResponse: void <init>(org.kohsuke.github.connector.GitHubConnectorRequest,java.net.http.HttpResponse)>(v1, v23);
label09:
return v24;
label10:
v25 := @caughtexception;
v26 = new java.io.InterruptedIOException;
v27 = virtualinvoke v25.<java.lang.InterruptedException: java.lang.String getMessage()>();
specialinvoke v26.<java.io.InterruptedIOException: void <init>(java.lang.String)>(v27);
v28 = virtualinvoke v26.<java.io.InterruptedIOException: java.lang.Throwable initCause(java.lang.Throwable)>(v25);
throw v28;
catch java.net.URISyntaxException from label01 to label02 with label03;
catch java.lang.InterruptedException from label08 to label09 with label10;
}
}