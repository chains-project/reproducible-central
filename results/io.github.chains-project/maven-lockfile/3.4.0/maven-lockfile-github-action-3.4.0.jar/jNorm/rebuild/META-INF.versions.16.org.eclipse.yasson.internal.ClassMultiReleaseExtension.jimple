public class META-INF.versions.16.org.eclipse.yasson.internal.ClassMultiReleaseExtension extends java.lang.Object
{
private void <init>()
{
java.lang.IllegalStateException v1;
META-INF.versions.16.org.eclipse.yasson.internal.ClassMultiReleaseExtension v0;
v0 := @this: META-INF.versions.16.org.eclipse.yasson.internal.ClassMultiReleaseExtension;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("This class cannot be instantiated");
throw v1;
}
static boolean shouldTransformToPropertyName(java.lang.reflect.Method)
{
java.lang.Class v1;
java.lang.reflect.Method v0;
boolean v2, v3;
v0 := @parameter0: java.lang.reflect.Method;
v1 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v2 = virtualinvoke v1.<java.lang.Class: boolean isRecord()>();
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
static boolean isSpecialAccessorMethod(java.lang.reflect.Method, java.util.Map)
{
java.util.Map v1;
int v4;
java.lang.Class v2, v5, v6;
java.lang.String v8;
java.lang.reflect.Method v0;
boolean v10, v3, v7, v9;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
v3 = staticinvoke <org.eclipse.yasson.internal.ClassMultiReleaseExtension: boolean isRecord(java.lang.Class)>(v2);
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<java.lang.reflect.Method: int getParameterCount()>();
if v4 != 0 goto label1;
v5 = <java.lang.Void: java.lang.Class TYPE>;
v6 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.Class getReturnType()>();
v7 = virtualinvoke v5.<java.lang.Object: boolean equals(java.lang.Object)>(v6);
if v7 != 0 goto label1;
v8 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.String getName()>();
v9 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>(v8);
if v9 == 0 goto label1;
v10 = 1;
goto label2;
label1:
v10 = 0;
label2:
return v10;
}
static org.eclipse.yasson.internal.model.JsonbCreator findCreator(java.lang.Class, java.lang.reflect.Constructor[], org.eclipse.yasson.internal.AnnotationIntrospector, jakarta.json.bind.config.PropertyNamingStrategy)
{
java.lang.reflect.Constructor v6;
java.lang.reflect.Constructor[] v1;
org.eclipse.yasson.internal.model.JsonbCreator v7;
int v5;
java.lang.Class v0;
jakarta.json.bind.config.PropertyNamingStrategy v3;
org.eclipse.yasson.internal.AnnotationIntrospector v2;
boolean v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.reflect.Constructor[];
v2 := @parameter2: org.eclipse.yasson.internal.AnnotationIntrospector;
v3 := @parameter3: jakarta.json.bind.config.PropertyNamingStrategy;
v4 = virtualinvoke v0.<java.lang.Class: boolean isRecord()>();
if v4 == 0 goto label1;
v5 = lengthof v1;
if v5 != 1 goto label1;
v6 = v1[0];
v7 = virtualinvoke v2.<org.eclipse.yasson.internal.AnnotationIntrospector: org.eclipse.yasson.internal.model.JsonbCreator createJsonbCreator(java.lang.reflect.Executable,org.eclipse.yasson.internal.model.JsonbCreator,java.lang.Class,jakarta.json.bind.config.PropertyNamingStrategy)>(v6, null, v0, v3);
return v7;
label1:
return null;
}
public static boolean isRecord(java.lang.Class)
{
java.lang.Class v0;
boolean v1;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isRecord()>();
return v1;
}
public static java.util.Optional exceptionToThrow(java.lang.Class)
{
java.lang.Object[] v6;
org.eclipse.yasson.internal.properties.MessageKeys v5;
java.lang.reflect.Constructor[] v2;
int v3;
jakarta.json.bind.JsonbException v4;
java.util.Optional v8, v9;
java.lang.Class v0;
java.lang.String v7;
boolean v1;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isRecord()>();
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor[] getDeclaredConstructors()>();
v3 = lengthof v2;
if v3 <= 1 goto label1;
v4 = new jakarta.json.bind.JsonbException;
v5 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys RECORD_MULTIPLE_CONSTRUCTORS>;
v6 = newarray (java.lang.Object)[1];
v6[0] = v0;
v7 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v5, v6);
specialinvoke v4.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v7);
v8 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v4);
return v8;
label1:
v9 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v9;
}
}