public class com.aayushatharva.brotli4j.common.BrotliCommon extends java.lang.Object
{
public static final int RFC_DICTIONARY_SIZE;
private static final byte[] RFC_DICTIONARY_MD5;
private static final byte[] RFC_DICTIONARY_SHA_1;
private static final byte[] RFC_DICTIONARY_SHA_256;
private static boolean isDictionaryDataSet;
private static final java.lang.Object mutex;
public void <init>()
{
com.aayushatharva.brotli4j.common.BrotliCommon v0;
v0 := @this: com.aayushatharva.brotli4j.common.BrotliCommon;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static boolean checkDictionaryDataMd5(byte[])
{
byte[] v0, v1;
boolean v2;
v0 := @parameter0: byte[];
v1 = <com.aayushatharva.brotli4j.common.BrotliCommon: byte[] RFC_DICTIONARY_MD5>;
v2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(v1, v0);
return v2;
}
public static boolean checkDictionaryDataSha1(byte[])
{
byte[] v0, v1;
boolean v2;
v0 := @parameter0: byte[];
v1 = <com.aayushatharva.brotli4j.common.BrotliCommon: byte[] RFC_DICTIONARY_SHA_1>;
v2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(v1, v0);
return v2;
}
public static boolean checkDictionaryDataSha256(byte[])
{
byte[] v0, v1;
boolean v2;
v0 := @parameter0: byte[];
v1 = <com.aayushatharva.brotli4j.common.BrotliCommon: byte[] RFC_DICTIONARY_SHA_256>;
v2 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(v1, v0);
return v2;
}
public static java.nio.ByteBuffer makeNative(byte[])
{
int v1;
byte[] v0;
java.nio.ByteBuffer v2;
v0 := @parameter0: byte[];
v1 = lengthof v0;
v2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(v1);
virtualinvoke v2.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[])>(v0);
return v2;
}
public static void setDictionaryData(byte[])
{
java.lang.Throwable v6;
byte[] v0;
int v1;
java.lang.Object v3;
java.lang.IllegalArgumentException v2;
java.nio.ByteBuffer v5;
boolean v4;
v0 := @parameter0: byte[];
v1 = lengthof v0;
if v1 == 122784 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid dictionary size");
throw v2;
label1:
v3 = <com.aayushatharva.brotli4j.common.BrotliCommon: java.lang.Object mutex>;
entermonitor v3;
label2:
v4 = <com.aayushatharva.brotli4j.common.BrotliCommon: boolean isDictionaryDataSet>;
if v4 == 0 goto label4;
exitmonitor v3;
label3:
return;
label4:
v5 = staticinvoke <com.aayushatharva.brotli4j.common.BrotliCommon: java.nio.ByteBuffer makeNative(byte[])>(v0);
staticinvoke <com.aayushatharva.brotli4j.common.BrotliCommon: void setDictionaryData(java.nio.ByteBuffer)>(v5);
exitmonitor v3;
label5:
goto label7;
label6:
v6 := @caughtexception;
exitmonitor v3;
throw v6;
label7:
return;
catch java.lang.Throwable from label2 to label3 with label6;
catch java.lang.Throwable from label4 to label5 with label6;
}
public static void setDictionaryData(java.io.InputStream) throws java.io.IOException
{
java.lang.Throwable v13;
byte[] v4;
java.lang.IllegalArgumentException v10, v8;
java.nio.ByteBuffer v3;
int v11, v5, v6, v7, v9;
java.lang.Object v1;
java.lang.String v12;
boolean v2;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = <com.aayushatharva.brotli4j.common.BrotliCommon: java.lang.Object mutex>;
entermonitor v1;
label01:
v2 = <com.aayushatharva.brotli4j.common.BrotliCommon: boolean isDictionaryDataSet>;
if v2 == 0 goto label03;
exitmonitor v1;
label02:
return;
label03:
v3 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(122784);
v4 = newarray (byte)[4096];
label04:
v5 = virtualinvoke v0.<java.io.InputStream: int read(byte[])>(v4);
v6 = (int) -1;
if v5 == v6 goto label06;
v7 = virtualinvoke v3.<java.nio.ByteBuffer: int remaining()>();
if v7 >= v5 goto label05;
v8 = new java.lang.IllegalArgumentException;
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid dictionary size");
throw v8;
label05:
virtualinvoke v3.<java.nio.ByteBuffer: java.nio.ByteBuffer put(byte[],int,int)>(v4, 0, v5);
goto label04;
label06:
v9 = virtualinvoke v3.<java.nio.ByteBuffer: int remaining()>();
if v9 == 0 goto label07;
v10 = new java.lang.IllegalArgumentException;
v11 = virtualinvoke v3.<java.nio.ByteBuffer: int remaining()>();
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid dictionary size \u0001");
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v10;
label07:
staticinvoke <com.aayushatharva.brotli4j.common.BrotliCommon: void setDictionaryData(java.nio.ByteBuffer)>(v3);
exitmonitor v1;
label08:
goto label10;
label09:
v13 := @caughtexception;
exitmonitor v1;
throw v13;
label10:
return;
catch java.lang.Throwable from label01 to label02 with label09;
catch java.lang.Throwable from label03 to label08 with label09;
}
public static void setDictionaryData(java.nio.ByteBuffer)
{
java.lang.Throwable v9;
java.lang.RuntimeException v8;
java.lang.IllegalArgumentException v2, v4;
java.nio.ByteBuffer v0;
int v3;
java.lang.Object v5;
boolean v1, v6, v7;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = virtualinvoke v0.<java.nio.ByteBuffer: boolean isDirect()>();
if v1 != 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("direct byte buffer is expected");
throw v2;
label1:
v3 = virtualinvoke v0.<java.nio.ByteBuffer: int capacity()>();
if v3 == 122784 goto label2;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid dictionary size");
throw v4;
label2:
v5 = <com.aayushatharva.brotli4j.common.BrotliCommon: java.lang.Object mutex>;
entermonitor v5;
label3:
v6 = <com.aayushatharva.brotli4j.common.BrotliCommon: boolean isDictionaryDataSet>;
if v6 == 0 goto label5;
exitmonitor v5;
label4:
return;
label5:
v7 = staticinvoke <com.aayushatharva.brotli4j.common.CommonJNI: boolean nativeSetDictionaryData(java.nio.ByteBuffer)>(v0);
if v7 != 0 goto label6;
v8 = new java.lang.RuntimeException;
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.String)>("setting dictionary failed");
throw v8;
label6:
<com.aayushatharva.brotli4j.common.BrotliCommon: boolean isDictionaryDataSet> = 1;
exitmonitor v5;
label7:
goto label9;
label8:
v9 := @caughtexception;
exitmonitor v5;
throw v9;
label9:
return;
catch java.lang.Throwable from label3 to label4 with label8;
catch java.lang.Throwable from label5 to label7 with label8;
}
static void <clinit>()
{
byte[] v0, v1, v2;
java.lang.Object v3;
v0 = newarray (byte)[16];
v0[0] = -106;
v0[1] = -50;
v0[2] = -51;
v0[3] = 46;
v0[4] = -25;
v0[5] = -90;
v0[6] = 102;
v0[7] = -43;
v0[8] = -86;
v0[9] = 54;
v0[10] = 39;
v0[11] = -41;
v0[12] = 71;
v0[13] = 53;
v0[14] = -77;
v0[15] = 42;
<com.aayushatharva.brotli4j.common.BrotliCommon: byte[] RFC_DICTIONARY_MD5> = v0;
v1 = newarray (byte)[20];
v1[0] = 114;
v1[1] = -76;
v1[2] = 16;
v1[3] = 81;
v1[4] = -53;
v1[5] = 97;
v1[6] = -87;
v1[7] = 40;
v1[8] = 27;
v1[9] = -93;
v1[10] = -60;
v1[11] = 65;
v1[12] = 76;
v1[13] = 40;
v1[14] = -99;
v1[15] = -91;
v1[16] = 13;
v1[17] = -102;
v1[18] = 118;
v1[19] = 64;
<com.aayushatharva.brotli4j.common.BrotliCommon: byte[] RFC_DICTIONARY_SHA_1> = v1;
v2 = newarray (byte)[32];
v2[0] = 32;
v2[1] = -28;
v2[2] = 46;
v2[3] = -79;
v2[4] = -75;
v2[5] = 17;
v2[6] = -62;
v2[7] = 24;
v2[8] = 6;
v2[9] = -44;
v2[10] = -46;
v2[11] = 39;
v2[12] = -48;
v2[13] = 126;
v2[14] = 93;
v2[15] = -48;
v2[16] = 104;
v2[17] = 119;
v2[18] = -40;
v2[19] = -50;
v2[20] = 123;
v2[21] = 58;
v2[22] = -127;
v2[23] = 127;
v2[24] = 55;
v2[25] = -113;
v2[26] = 49;
v2[27] = 54;
v2[28] = 83;
v2[29] = -13;
v2[30] = 92;
v2[31] = 112;
<com.aayushatharva.brotli4j.common.BrotliCommon: byte[] RFC_DICTIONARY_SHA_256> = v2;
v3 = new java.lang.Object;
specialinvoke v3.<java.lang.Object: void <init>()>();
<com.aayushatharva.brotli4j.common.BrotliCommon: java.lang.Object mutex> = v3;
return;
}
}