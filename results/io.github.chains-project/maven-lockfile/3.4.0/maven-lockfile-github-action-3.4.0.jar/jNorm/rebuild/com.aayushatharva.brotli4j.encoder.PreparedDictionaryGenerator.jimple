public class com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator extends java.lang.Object
{
private static final int MAGIC;
private static final long HASH_MULTIPLIER;
private void <init>()
{
com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator v0;
v0 := @this: com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.aayushatharva.brotli4j.encoder.PreparedDictionary generate(java.nio.ByteBuffer)
{
com.aayushatharva.brotli4j.encoder.PreparedDictionary v1;
java.nio.ByteBuffer v0;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = staticinvoke <com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator: com.aayushatharva.brotli4j.encoder.PreparedDictionary generate(java.nio.ByteBuffer,int,int,int,int)>(v0, 17, 3, 40, 5);
return v1;
}
public static com.aayushatharva.brotli4j.encoder.PreparedDictionary generate(java.nio.ByteBuffer, int, int, int, int)
{
byte v23, v32;
java.nio.ByteOrder v64;
long v15, v21, v24, v26, v27, v30, v33, v34, v35, v36, v37;
short v38, v85;
com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator$PreparedDictionaryImpl v97;
java.nio.ByteBuffer v0, v62, v63, v65, v68, v71, v74, v77;
int[] v19, v20, v43, v44;
boolean v47;
short[] v18;
int v1, v10, v11, v12, v13, v14, v16, v2, v22, v25, v28, v29, v3, v31, v39, v4, v40, v41, v42, v45, v46, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v66, v67, v69, v7, v70, v72, v73, v75, v76, v78, v79, v80, v81, v82, v83, v84, v86, v87, v88, v89, v9, v90, v91, v92, v93, v94, v95, v96;
java.lang.IllegalArgumentException v17, v5, v6, v8;
v0 := @parameter0: java.nio.ByteBuffer;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 := @parameter4: int;
virtualinvoke v0.<java.nio.Buffer: java.nio.Buffer clear()>();
if v4 <= 12 goto label01;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("blockBits is too big");
throw v5;
label01:
if v1 < 24 goto label02;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("bucketBits is too big");
throw v6;
label02:
v7 = v1 - v2;
if v7 < 16 goto label03;
v8 = new java.lang.IllegalArgumentException;
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("slotBits is too small");
throw v8;
label03:
v9 = 1 << v4;
v10 = 1 << v1;
v11 = 1 << v2;
v12 = v11 - 1;
v13 = 64 - v1;
v14 = 64 - v3;
v15 = -1L >>> v14;
v16 = virtualinvoke v0.<java.nio.ByteBuffer: int capacity()>();
if v16 >= 8 goto label04;
v17 = new java.lang.IllegalArgumentException;
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("src is too short");
throw v17;
label04:
v18 = newarray (short)[v10];
v19 = newarray (int)[v10];
v20 = newarray (int)[v16];
v21 = 0L;
v22 = 0;
label05:
if v22 >= 7 goto label06;
v23 = virtualinvoke v0.<java.nio.ByteBuffer: byte get(int)>(v22);
v24 = v23 & 255L;
v25 = 8 * v22;
v26 = v24 << v25;
v21 = v21 | v26;
v22 = v22 + 1;
goto label05;
label06:
v27 = v21 << 8;
v28 = 0;
label07:
v29 = v28 + 7;
if v29 >= v16 goto label11;
v30 = v27 >>> 8;
v31 = v28 + 7;
v32 = virtualinvoke v0.<java.nio.ByteBuffer: byte get(int)>(v31);
v33 = v32 & 255L;
v34 = v33 << 56;
v27 = v30 | v34;
v35 = v27 & v15;
v36 = v35 * 2297779722762296275L;
v37 = v36 >>> v13;
v38 = v18[v37];
v39 = v28;
if v38 != 0 goto label08;
v40 = (int) -1;
v41 = v40;
goto label09;
label08:
v41 = v19[v37];
label09:
v20[v39] = v41;
v19[v37] = v28;
v42 = v38 + 1;
if v42 <= v9 goto label10;
v42 = v9;
label10:
v18[v37] = v42;
v28 = v28 + 1;
goto label07;
label11:
v43 = newarray (int)[v11];
v44 = newarray (int)[v11];
v45 = 0;
v46 = 0;
label12:
if v46 >= v11 goto label20;
v43[v46] = v9;
label13:
v47 = 0;
v48 = v43[v46];
v49 = 0;
v50 = v46;
label14:
if v50 >= v10 goto label17;
v51 = v18[v50];
v52 = (int) 65535;
if v49 < v52 goto label15;
v47 = 1;
goto label17;
label15:
if v51 <= v48 goto label16;
v51 = v48;
label16:
v49 = v49 + v51;
v50 = v50 + v11;
goto label14;
label17:
if v47 != 0 goto label18;
v44[v46] = v49;
v45 = v45 + v49;
goto label19;
label18:
v53 = v43[v46];
v54 = v53 - 1;
v43[v46] = v54;
goto label13;
label19:
v46 = v46 + 1;
goto label12;
label20:
v55 = v11 * 4;
v56 = v10 * 2;
v57 = v45 * 4;
v58 = 24 + v55;
v59 = v58 + v56;
v60 = v59 + v57;
v61 = v60 + v16;
v62 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(v61);
v63 = virtualinvoke v62.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();
v64 = staticinvoke <java.nio.ByteOrder: java.nio.ByteOrder nativeOrder()>();
virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer order(java.nio.ByteOrder)>(v64);
v65 = virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer asIntBuffer()>();
v66 = virtualinvoke v63.<java.nio.ByteBuffer: int position()>();
v67 = v66 + 24;
virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(v67);
v68 = virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer asIntBuffer()>();
v69 = virtualinvoke v63.<java.nio.ByteBuffer: int position()>();
v70 = v69 + v55;
virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(v70);
v71 = virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer asShortBuffer()>();
v72 = virtualinvoke v63.<java.nio.ByteBuffer: int position()>();
v73 = v72 + v56;
virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(v73);
v74 = virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer asIntBuffer()>();
v75 = virtualinvoke v63.<java.nio.ByteBuffer: int position()>();
v76 = v75 + v57;
virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(v76);
v77 = virtualinvoke v63.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();
virtualinvoke v65.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(0, -558043680);
virtualinvoke v65.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(1, v45);
virtualinvoke v65.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(2, v16);
virtualinvoke v65.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(3, v3);
virtualinvoke v65.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(4, v1);
virtualinvoke v65.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(5, v2);
v78 = 0;
v79 = 0;
label21:
if v79 >= v11 goto label22;
virtualinvoke v68.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(v79, v78);
v80 = v44[v79];
v78 = v78 + v80;
v44[v79] = 0;
v79 = v79 + 1;
goto label21;
label22:
v81 = 0;
label23:
if v81 >= v10 goto label29;
v82 = v81 & v12;
v83 = v18[v81];
v84 = v43[v82];
if v83 <= v84 goto label24;
v83 = v43[v82];
label24:
if v83 != 0 goto label25;
v85 = (short) -1;
virtualinvoke v71.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,short)>(v81, v85);
goto label28;
label25:
v86 = v44[v82];
virtualinvoke v71.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,short)>(v81, v86);
v87 = virtualinvoke v68.<java.nio.IntBuffer: int get(int)>(v82);
v88 = v86 + v87;
v89 = v44[v82];
v90 = v89 + v83;
v44[v82] = v90;
v91 = v19[v81];
v92 = 0;
label26:
if v92 >= v83 goto label27;
v93 = v88;
v88 = v88 + 1;
virtualinvoke v74.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(v93, v91);
v91 = v20[v91];
v92 = v92 + 1;
goto label26;
label27:
v94 = v88 - 1;
v95 = virtualinvoke v74.<java.nio.IntBuffer: int get(int)>(v94);
v96 = v95 | -2147483648;
virtualinvoke v74.<java.nio.ByteBuffer: java.nio.ByteBuffer put(int,int)>(v94, v96);
label28:
v81 = v81 + 1;
goto label23;
label29:
virtualinvoke v77.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(v0);
v97 = new com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator$PreparedDictionaryImpl;
specialinvoke v97.<com.aayushatharva.brotli4j.encoder.PreparedDictionaryGenerator$PreparedDictionaryImpl: void <init>(java.nio.ByteBuffer)>(v62);
return v97;
}
}