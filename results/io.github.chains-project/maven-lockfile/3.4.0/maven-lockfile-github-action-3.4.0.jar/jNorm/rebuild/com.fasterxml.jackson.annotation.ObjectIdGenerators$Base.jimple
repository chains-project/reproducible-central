abstract class com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base extends com.fasterxml.jackson.'annotation'.ObjectIdGenerator
{
protected final java.lang.Class _scope;
protected void <init>(java.lang.Class)
{
com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator: void <init>()>();
v0.<com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base: java.lang.Class _scope> = v1;
return;
}
public final java.lang.Class getScope()
{
com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base;
v1 = v0.<com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base: java.lang.Class _scope>;
return v1;
}
public boolean canUseFor(com.fasterxml.jackson.'annotation'.ObjectIdGenerator)
{
com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base v0;
java.lang.Class v2, v3, v4, v5;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.ObjectIdGenerator;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v2 != v3 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator: java.lang.Class getScope()>();
v5 = v0.<com.fasterxml.jackson.'annotation'.ObjectIdGenerators$Base: java.lang.Class _scope>;
if v4 != v5 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public abstract java.lang.Object generateId(java.lang.Object);
}