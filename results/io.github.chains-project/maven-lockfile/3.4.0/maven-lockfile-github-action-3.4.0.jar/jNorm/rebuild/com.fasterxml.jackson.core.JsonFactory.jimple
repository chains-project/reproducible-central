public class com.fasterxml.jackson.core.JsonFactory extends com.fasterxml.jackson.core.TokenStreamFactory implements com.fasterxml.jackson.core.Versioned, java.io.Serializable
{
private static final long serialVersionUID;
public static final java.lang.String FORMAT_NAME_JSON;
protected static final int DEFAULT_FACTORY_FEATURE_FLAGS;
protected static final int DEFAULT_PARSER_FEATURE_FLAGS;
protected static final int DEFAULT_GENERATOR_FEATURE_FLAGS;
public static final com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR;
public static final char DEFAULT_QUOTE_CHAR;
protected final transient com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols;
protected final transient com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer;
protected int _factoryFeatures;
protected int _parserFeatures;
protected int _generatorFeatures;
protected com.fasterxml.jackson.core.ObjectCodec _objectCodec;
protected com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes;
protected com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints;
protected com.fasterxml.jackson.core.io.InputDecorator _inputDecorator;
protected com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator;
protected com.fasterxml.jackson.core.SerializableString _rootValueSeparator;
protected int _maximumNonEscapedChar;
protected final char _quoteChar;
public void <init>()
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = null;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>(v1);
return;
}
public void <init>(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v2;
com.fasterxml.jackson.core.SerializableString v7;
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.StreamReadConstraints v8;
com.fasterxml.jackson.core.JsonFactory v0;
int v4, v5, v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();
v2 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = v2;
v3 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = v3;
v4 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v4;
v5 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v5;
v6 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v6;
v7 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v7;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v1;
v0.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = 34;
v8 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v8;
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v4;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v3;
com.fasterxml.jackson.core.SerializableString v17, v8;
com.fasterxml.jackson.core.io.CharacterEscapes v16;
com.fasterxml.jackson.core.ObjectCodec v2;
com.fasterxml.jackson.core.StreamReadConstraints v14, v15;
int v10, v11, v18, v5, v6, v7, v9;
char v19;
com.fasterxml.jackson.core.JsonFactory v0, v1;
com.fasterxml.jackson.core.io.InputDecorator v12;
com.fasterxml.jackson.core.io.OutputDecorator v13;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory;
v2 := @parameter1: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();
v3 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = v3;
v4 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = v4;
v5 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v5;
v6 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v6;
v7 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v7;
v8 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v8;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v2;
v9 = v1.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v9;
v10 = v1.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v10;
v11 = v1.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v11;
v12 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = v12;
v13 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = v13;
v14 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
if v14 != null goto label1;
v15 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
goto label2;
label1:
v15 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
label2:
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v15;
v16 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = v16;
v17 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v17;
v18 = v1.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar> = v18;
v19 = v1.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar>;
v0.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = v19;
return;
}
public void <init>(com.fasterxml.jackson.core.JsonFactoryBuilder)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v2;
com.fasterxml.jackson.core.SerializableString v16, v7;
com.fasterxml.jackson.core.io.CharacterEscapes v15;
com.fasterxml.jackson.core.JsonFactoryBuilder v1;
com.fasterxml.jackson.core.StreamReadConstraints v13, v14;
int v10, v17, v4, v5, v6, v8, v9;
char v18;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v11;
com.fasterxml.jackson.core.io.OutputDecorator v12;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactoryBuilder;
specialinvoke v0.<com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();
v2 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = v2;
v3 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = v3;
v4 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v4;
v5 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v5;
v6 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v6;
v7 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v7;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = null;
v8 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _factoryFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v8;
v9 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _streamReadFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v9;
v10 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _streamWriteFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v10;
v11 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = v11;
v12 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = v12;
v13 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
if v13 != null goto label1;
v14 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
goto label2;
label1:
v14 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
label2:
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v14;
v15 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = v15;
v16 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v16;
v17 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _maximumNonEscapedChar>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar> = v17;
v18 = v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: char _quoteChar>;
v0.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = v18;
return;
}
protected void <init>(com.fasterxml.jackson.core.TSFBuilder, boolean)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v4;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v3;
com.fasterxml.jackson.core.SerializableString v8;
com.fasterxml.jackson.core.StreamReadConstraints v14, v15;
com.fasterxml.jackson.core.TSFBuilder v1;
int v10, v11, v5, v6, v7, v9;
boolean v2;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v12;
com.fasterxml.jackson.core.io.OutputDecorator v13;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.TSFBuilder;
v2 := @parameter1: boolean;
specialinvoke v0.<com.fasterxml.jackson.core.TokenStreamFactory: void <init>()>();
v3 = staticinvoke <com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols> = v3;
v4 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()>();
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer> = v4;
v5 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v5;
v6 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v6;
v7 = <com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v7;
v8 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v8;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = null;
v9 = v1.<com.fasterxml.jackson.core.TSFBuilder: int _factoryFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v9;
v10 = v1.<com.fasterxml.jackson.core.TSFBuilder: int _streamReadFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v10;
v11 = v1.<com.fasterxml.jackson.core.TSFBuilder: int _streamWriteFeatures>;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v11;
v12 = v1.<com.fasterxml.jackson.core.TSFBuilder: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = v12;
v13 = v1.<com.fasterxml.jackson.core.TSFBuilder: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = v13;
v14 = v1.<com.fasterxml.jackson.core.TSFBuilder: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
if v14 != null goto label1;
v15 = staticinvoke <com.fasterxml.jackson.core.StreamReadConstraints: com.fasterxml.jackson.core.StreamReadConstraints defaults()>();
goto label2;
label1:
v15 = v1.<com.fasterxml.jackson.core.TSFBuilder: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
label2:
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v15;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = null;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = null;
v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar> = 0;
v0.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar> = 34;
return;
}
public com.fasterxml.jackson.core.TSFBuilder rebuild()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("Factory implementation for format (%s) MUST override `rebuild()` method");
v1 = new com.fasterxml.jackson.core.JsonFactoryBuilder;
specialinvoke v1.<com.fasterxml.jackson.core.JsonFactoryBuilder: void <init>(com.fasterxml.jackson.core.JsonFactory)>(v0);
return v1;
}
public static com.fasterxml.jackson.core.TSFBuilder builder()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
v0 = new com.fasterxml.jackson.core.JsonFactoryBuilder;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void <init>()>();
return v0;
}
public com.fasterxml.jackson.core.JsonFactory copy()
{
com.fasterxml.jackson.core.JsonFactory v0, v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _checkInvalidCopy(java.lang.Class)>(class "Lcom/fasterxml/jackson/core/JsonFactory;");
v1 = new com.fasterxml.jackson.core.JsonFactory;
specialinvoke v1.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec)>(v0, null);
return v1;
}
protected void _checkInvalidCopy(java.lang.Class)
{
java.lang.IllegalStateException v3;
com.fasterxml.jackson.core.Version v6;
com.fasterxml.jackson.core.JsonFactory v0;
java.lang.Class v1, v2, v4;
java.lang.String v5, v7;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v1 goto label1;
v3 = new java.lang.IllegalStateException;
v4 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.Version version()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,com.fasterxml.jackson.core.Version)>(v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed copy(): \u0001 (version: \u0001) does not override copy(); it has to");
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v3;
label1:
return;
}
protected java.lang.Object readResolve()
{
com.fasterxml.jackson.core.ObjectCodec v2;
com.fasterxml.jackson.core.JsonFactory v0, v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = new com.fasterxml.jackson.core.JsonFactory;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
specialinvoke v1.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec)>(v0, v2);
return v1;
}
public boolean requiresPropertyOrdering()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return 0;
}
public boolean canHandleBinaryNatively()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return 0;
}
public boolean canUseCharArrays()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return 1;
}
public boolean canParseAsync()
{
com.fasterxml.jackson.core.JsonFactory v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: boolean _isJSONFactory()>();
return v1;
}
public java.lang.Class getFormatReadFeatureType()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return null;
}
public java.lang.Class getFormatWriteFeatureType()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return null;
}
public boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.FormatSchema v1;
java.lang.String v2, v3;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.FormatSchema;
if v1 != null goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
if v2 == null goto label2;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.core.FormatSchema: java.lang.String getSchemaType()>();
v4 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v3);
if v4 == 0 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public java.lang.String getFormatName()
{
java.lang.Class v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v1 != class "Lcom/fasterxml/jackson/core/JsonFactory;" goto label1;
return "JSON";
label1:
return null;
}
public com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
java.lang.Class v2;
com.fasterxml.jackson.core.format.InputAccessor v1;
com.fasterxml.jackson.core.format.MatchStrength v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v2 != class "Lcom/fasterxml/jackson/core/JsonFactory;" goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)>(v1);
return v3;
label1:
return null;
}
public boolean requiresCustomCodec()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return 0;
}
protected com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.format.InputAccessor v1;
com.fasterxml.jackson.core.format.MatchStrength v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v2 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.format.MatchStrength hasJSONFormat(com.fasterxml.jackson.core.format.InputAccessor)>(v1);
return v2;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.Version v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = <com.fasterxml.jackson.core.json.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public final com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonFactory$Feature, boolean)
{
com.fasterxml.jackson.core.JsonFactory v0, v3;
com.fasterxml.jackson.core.JsonFactory$Feature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory$Feature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonFactory$Feature)>(v1);
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonFactory$Feature)>(v1);
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonFactory$Feature)
{
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3, v4;
com.fasterxml.jackson.core.JsonFactory$Feature v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonFactory$Feature)
{
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3, v4, v5, v6;
com.fasterxml.jackson.core.JsonFactory$Feature v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures> = v6;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)
{
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3, v4;
com.fasterxml.jackson.core.JsonFactory$Feature v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonFactory$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public final int getParserFeatures()
{
int v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
return v1;
}
public final int getGeneratorFeatures()
{
int v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
return v1;
}
public int getFormatParserFeatures()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return 0;
}
public int getFormatGeneratorFeatures()
{
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
return 0;
}
public com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.StreamReadConstraints v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
return v1;
}
public com.fasterxml.jackson.core.JsonFactory setStreamReadConstraints(com.fasterxml.jackson.core.StreamReadConstraints)
{
java.lang.Object v2;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.StreamReadConstraints v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.StreamReadConstraints;
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints> = v2;
return v0;
}
public final com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)
{
com.fasterxml.jackson.core.JsonParser$Feature v1;
com.fasterxml.jackson.core.JsonFactory v0, v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature)>(v1);
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature)>(v1);
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature)
{
com.fasterxml.jackson.core.JsonParser$Feature v1;
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature)
{
com.fasterxml.jackson.core.JsonParser$Feature v1;
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures> = v6;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)
{
com.fasterxml.jackson.core.JsonParser$Feature v1;
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3, v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public final boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
{
com.fasterxml.jackson.core.JsonParser$Feature v3;
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v4, v5;
com.fasterxml.jackson.core.StreamReadFeature v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.StreamReadFeature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonParser$Feature: int getMask()>();
v5 = v2 & v4;
if v5 == 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public com.fasterxml.jackson.core.io.InputDecorator getInputDecorator()
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
return v1;
}
public com.fasterxml.jackson.core.JsonFactory setInputDecorator(com.fasterxml.jackson.core.io.InputDecorator)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.io.InputDecorator;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator> = v1;
return v0;
}
public final com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)
{
com.fasterxml.jackson.core.JsonFactory v0, v3;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v1);
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v1);
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures> = v6;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
int v2, v3, v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public final boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v3;
int v2, v4, v5;
com.fasterxml.jackson.core.StreamWriteFeature v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.StreamWriteFeature;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator$Feature: int getMask()>();
v5 = v2 & v4;
if v5 == 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes()
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
return v1;
}
public com.fasterxml.jackson.core.JsonFactory setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.io.CharacterEscapes;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = v1;
return v0;
}
public com.fasterxml.jackson.core.io.OutputDecorator getOutputDecorator()
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.OutputDecorator v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
return v1;
}
public com.fasterxml.jackson.core.JsonFactory setOutputDecorator(com.fasterxml.jackson.core.io.OutputDecorator)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.OutputDecorator v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.io.OutputDecorator;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonFactory setRootValueSeparator(java.lang.String)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.SerializedString v2;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = new com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v2.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(v1);
label2:
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v2;
return v0;
}
public java.lang.String getRootValueSeparator()
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.SerializableString v1, v3;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v2 = interfaceinvoke v3.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
label2:
return v2;
}
public com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec> = v1;
return v0;
}
public com.fasterxml.jackson.core.ObjectCodec getCodec()
{
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.core.JsonFactory v0;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
return v1;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.core.io.IOContext v3;
java.io.File v1;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v4, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _fileInputStream(java.io.File)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v5, v3);
return v6;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v6;
java.net.URL v1;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v4, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.net.URL;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _optimizedStreamFromURL(java.net.URL)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v5, v3);
return v6;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v1, v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.InputStream;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.core.io.IOContext v3;
java.io.Reader v1, v4;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Reader;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v10, v8;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v4, v5;
com.fasterxml.jackson.core.io.IOContext v3;
int v6, v9;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v7;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: byte[];
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 1);
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v6 = lengthof v1;
v7 = virtualinvoke v5.<com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(v3, v1, 0, v6);
if v7 == null goto label1;
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v7, v3);
return v8;
label1:
v9 = lengthof v1;
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)>(v1, 0, v9, v3);
return v10;
}
public com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v10, v9;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v6, v7;
com.fasterxml.jackson.core.io.IOContext v5;
int v2, v3;
com.fasterxml.jackson.core.io.ContentReference v4;
java.io.InputStream v8;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _checkRangeBoundsForByteArray(byte[],int,int)>(v1, v2, v3);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object,int,int)>(v1, v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v4, 1);
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v6 == null goto label1;
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(v5, v1, v2, v3);
if v8 == null goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v8, v5);
return v9;
label1:
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)>(v1, v2, v3, v5);
return v10;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonParser v11, v7;
com.fasterxml.jackson.core.JsonFactory v0;
java.io.StringReader v6;
com.fasterxml.jackson.core.io.InputDecorator v3;
com.fasterxml.jackson.core.io.IOContext v9;
int v2, v4;
char[] v10;
java.lang.String v1;
boolean v5;
com.fasterxml.jackson.core.io.ContentReference v8;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v3 != null goto label1;
v4 = (int) 32768;
if v2 > v4 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: boolean canUseCharArrays()>();
if v5 != 0 goto label2;
label1:
v6 = new java.io.StringReader;
specialinvoke v6.<java.io.StringReader: void <init>(java.lang.String)>(v1);
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v6);
return v7;
label2:
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v8, 1);
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.io.IOContext: char[] allocTokenBuffer(int)>(v2);
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(0, v2, v10, 0);
v11 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)>(v10, 0, v2, v9, 1);
return v11;
}
public com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v3;
int v2;
char[] v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: char[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(char[],int,int)>(v1, 0, v2);
return v3;
}
public com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v6, v9;
java.io.CharArrayReader v5;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v4;
com.fasterxml.jackson.core.io.IOContext v8;
int v2, v3;
char[] v1;
com.fasterxml.jackson.core.io.ContentReference v7;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _checkRangeBoundsForCharArray(char[],int,int)>(v1, v2, v3);
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v4 == null goto label1;
v5 = new java.io.CharArrayReader;
specialinvoke v5.<java.io.CharArrayReader: void <init>(char[],int,int)>(v1, v2, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v5);
return v6;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object,int,int)>(v1, v2, v3);
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v7, 1);
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(char[],int,int,com.fasterxml.jackson.core.io.IOContext,boolean)>(v1, v2, v3, v8, 0);
return v9;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.core.io.IOContext v3;
java.io.DataInput v1, v4;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.DataInput;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.DataInput _decorate(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v2, v4;
com.fasterxml.jackson.core.io.IOContext v1;
int v3, v6;
com.fasterxml.jackson.core.json.async.NonBlockingJsonParser v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("Non-blocking source not (yet?) supported for this format (%s)");
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object)>(null);
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>(v3);
v5 = new com.fasterxml.jackson.core.json.async.NonBlockingJsonParser;
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
specialinvoke v5.<com.fasterxml.jackson.core.json.async.NonBlockingJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)>(v1, v6, v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createNonBlockingByteBufferParser() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v2, v4;
com.fasterxml.jackson.core.io.IOContext v1;
int v3, v6;
com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("Non-blocking source not (yet?) supported for this format (%s)");
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object)>(null);
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>(v3);
v5 = new com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser;
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
specialinvoke v5.<com.fasterxml.jackson.core.json.async.NonBlockingByteBufferJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)>(v1, v6, v4);
return v5;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v1, v6;
com.fasterxml.jackson.core.JsonGenerator v10, v7;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2, v5;
com.fasterxml.jackson.core.io.IOContext v4;
java.io.Writer v8, v9;
com.fasterxml.jackson.core.io.ContentReference v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v3, 0);
virtualinvoke v4.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(v2);
v5 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v2 != v5 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v1, v4);
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v6, v4);
return v7;
label1:
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v1, v2, v4);
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v8, v4);
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v9, v4);
return v10;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.JsonGenerator v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonGenerator v5;
com.fasterxml.jackson.core.io.IOContext v3;
java.io.Writer v1, v4;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Writer;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v3, v7;
com.fasterxml.jackson.core.JsonGenerator v11, v8;
java.io.File v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2, v6;
com.fasterxml.jackson.core.io.IOContext v5;
java.io.Writer v10, v9;
com.fasterxml.jackson.core.io.ContentReference v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.File;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _fileOutputStream(java.io.File)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v4, 1);
virtualinvoke v5.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(v2);
v6 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v2 != v6 goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v3, v5);
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v7, v5);
return v8;
label1:
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v3, v2, v5);
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v9, v5);
v11 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v10, v5);
return v11;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v3;
java.io.DataOutput v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.JsonGenerator v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v3, v2);
return v4;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException
{
java.io.OutputStream v2;
java.io.DataOutput v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v3;
com.fasterxml.jackson.core.JsonGenerator v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.DataOutput;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.io.OutputStream _createDataOutputWrapper(java.io.DataOutput)>(v1);
v3 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v2, v3);
return v4;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.File) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v2;
java.io.File v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(java.net.URL) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v2;
java.net.URL v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.net.URL;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.InputStream) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v2;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.InputStream;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(java.io.Reader) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
java.io.Reader v1;
com.fasterxml.jackson.core.JsonParser v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Reader;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(byte[]) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
byte[] v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: byte[];
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[])>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
byte[] v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonParser v4;
int v2, v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v1, v2, v3);
return v4;
}
public com.fasterxml.jackson.core.JsonParser createJsonParser(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonParseException
{
com.fasterxml.jackson.core.JsonFactory v0;
java.lang.String v1;
com.fasterxml.jackson.core.JsonParser v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.JsonGenerator v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.Writer) throws java.io.IOException
{
java.io.Writer v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonGenerator v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Writer;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonGenerator createJsonGenerator(java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.JsonGenerator v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v1, v2);
return v3;
}
protected com.fasterxml.jackson.core.JsonParser _createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v6;
com.fasterxml.jackson.core.JsonParser v9;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v7;
com.fasterxml.jackson.core.ObjectCodec v5;
java.lang.Exception v10;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
int v4, v8;
boolean v11;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
label1:
v3 = new com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
specialinvoke v3.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)>(v2, v1);
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v5 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;
v8 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v9 = virtualinvoke v3.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int)>(v4, v5, v6, v7, v8);
label2:
return v9;
label3:
v10 := @caughtexception;
virtualinvoke v2.<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();
throw v10;
catch java.io.IOException from label1 to label2 with label3;
catch java.lang.RuntimeException from label1 to label2 with label3;
}
protected com.fasterxml.jackson.core.JsonParser _createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.json.ReaderBasedJsonParser v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v6, v8;
com.fasterxml.jackson.core.ObjectCodec v5;
java.io.Reader v1;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
int v4, v7;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = new com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v5 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v8 = virtualinvoke v6.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>(v7);
specialinvoke v3.<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)>(v2, v4, v1, v5, v8);
return v3;
}
protected com.fasterxml.jackson.core.JsonParser _createParser(char[], int, int, com.fasterxml.jackson.core.io.IOContext, boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.json.ReaderBasedJsonParser v6;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v11, v9;
com.fasterxml.jackson.core.ObjectCodec v8;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v4;
int v10, v12, v2, v3, v7;
char[] v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.io.IOContext;
v5 := @parameter4: boolean;
v6 = new com.fasterxml.jackson.core.json.ReaderBasedJsonParser;
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v8 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v9 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;
v10 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v11 = virtualinvoke v9.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer makeChild(int)>(v10);
v12 = v2 + v3;
specialinvoke v6.<com.fasterxml.jackson.core.json.ReaderBasedJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.Reader,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,char[],int,int,boolean)>(v4, v7, null, v8, v11, v1, v2, v12, v5);
return v6;
}
protected com.fasterxml.jackson.core.JsonParser _createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v8;
com.fasterxml.jackson.core.JsonParser v11;
com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper v5;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v9;
com.fasterxml.jackson.core.ObjectCodec v7;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v4;
int v10, v2, v3, v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.io.IOContext;
v5 = new com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper;
specialinvoke v5.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: void <init>(com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(v4, v1, v2, v3);
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v8 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;
v9 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer _rootCharSymbols>;
v10 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v11 = virtualinvoke v5.<com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: com.fasterxml.jackson.core.JsonParser constructParser(int,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer,int)>(v6, v7, v8, v9, v10);
return v11;
}
protected com.fasterxml.jackson.core.JsonParser _createParser(java.io.DataInput, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v4, v6;
com.fasterxml.jackson.core.ObjectCodec v9;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
int v3, v5, v8;
java.io.DataInput v1;
com.fasterxml.jackson.core.json.UTF8DataInputJsonParser v7;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.DataInput;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void _requireJSONFactory(java.lang.String)>("InputData source not (yet?) supported for this format (%s)");
v3 = staticinvoke <com.fasterxml.jackson.core.json.ByteSourceJsonBootstrapper: int skipUTF8BOM(java.io.DataInput)>(v1);
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _byteSymbolCanonicalizer>;
v5 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)>(v5);
v7 = new com.fasterxml.jackson.core.json.UTF8DataInputJsonParser;
v8 = v0.<com.fasterxml.jackson.core.JsonFactory: int _parserFeatures>;
v9 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
specialinvoke v7.<com.fasterxml.jackson.core.json.UTF8DataInputJsonParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,java.io.DataInput,com.fasterxml.jackson.core.ObjectCodec,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int)>(v2, v8, v1, v9, v6, v3);
return v7;
}
protected com.fasterxml.jackson.core.JsonGenerator _createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v3;
com.fasterxml.jackson.core.SerializableString v11, v12;
com.fasterxml.jackson.core.io.CharacterEscapes v10, v9;
char v6;
com.fasterxml.jackson.core.ObjectCodec v5;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
int v4, v7, v8;
java.io.Writer v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Writer;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = new com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v5 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar>;
specialinvoke v3.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,char)>(v2, v4, v5, v1, v6);
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;
if v7 <= 0 goto label1;
v8 = v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(v8);
label1:
v9 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
if v9 == null goto label2;
v10 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)>(v10);
label2:
v11 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v12 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
if v11 == v12 goto label3;
virtualinvoke v3.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)>(v11);
label3:
return v3;
}
protected com.fasterxml.jackson.core.JsonGenerator _createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.SerializableString v11, v12;
com.fasterxml.jackson.core.io.CharacterEscapes v10, v9;
com.fasterxml.jackson.core.json.UTF8JsonGenerator v3;
char v6;
com.fasterxml.jackson.core.ObjectCodec v5;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
int v4, v7, v8;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = new com.fasterxml.jackson.core.json.UTF8JsonGenerator;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: int _generatorFeatures>;
v5 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v6 = v0.<com.fasterxml.jackson.core.JsonFactory: char _quoteChar>;
specialinvoke v3.<com.fasterxml.jackson.core.json.UTF8JsonGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.OutputStream,char)>(v2, v4, v5, v1, v6);
v7 = v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;
if v7 <= 0 goto label1;
v8 = v0.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.UTF8JsonGenerator: com.fasterxml.jackson.core.JsonGenerator setHighestNonEscapedChar(int)>(v8);
label1:
v9 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
if v9 == null goto label2;
v10 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
virtualinvoke v3.<com.fasterxml.jackson.core.json.UTF8JsonGenerator: com.fasterxml.jackson.core.JsonGenerator setCharacterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)>(v10);
label2:
v11 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v12 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
if v11 == v12 goto label3;
virtualinvoke v3.<com.fasterxml.jackson.core.json.UTF8JsonGenerator: com.fasterxml.jackson.core.JsonGenerator setRootValueSeparator(com.fasterxml.jackson.core.SerializableString)>(v11);
label3:
return v3;
}
protected java.io.Writer _createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.io.UTF8Writer v5;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.JsonEncoding v2, v4;
com.fasterxml.jackson.core.io.IOContext v3;
java.io.OutputStreamWriter v6;
java.lang.String v7;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 := @parameter2: com.fasterxml.jackson.core.io.IOContext;
v4 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v2 != v4 goto label1;
v5 = new com.fasterxml.jackson.core.io.UTF8Writer;
specialinvoke v5.<com.fasterxml.jackson.core.io.UTF8Writer: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(v3, v1);
return v5;
label1:
v6 = new java.io.OutputStreamWriter;
v7 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();
specialinvoke v6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(v1, v7);
return v6;
}
protected final java.io.InputStream _decorate(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v3, v4;
com.fasterxml.jackson.core.io.IOContext v2;
java.io.InputStream v1, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream)>(v2, v1);
if v5 == null goto label1;
return v5;
label1:
return v1;
}
protected final java.io.Reader _decorate(java.io.Reader, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v3, v4;
com.fasterxml.jackson.core.io.IOContext v2;
java.io.Reader v1, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.io.InputDecorator: java.io.Reader decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Reader)>(v2, v1);
if v5 == null goto label1;
return v5;
label1:
return v1;
}
protected final java.io.DataInput _decorate(java.io.DataInput, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.InputDecorator v3, v4;
com.fasterxml.jackson.core.io.IOContext v2;
java.io.DataInput v1, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.DataInput;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.io.InputDecorator: java.io.DataInput decorate(com.fasterxml.jackson.core.io.IOContext,java.io.DataInput)>(v2, v1);
if v5 == null goto label1;
return v5;
label1:
return v1;
}
protected final java.io.OutputStream _decorate(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
java.io.OutputStream v1, v5;
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
com.fasterxml.jackson.core.io.OutputDecorator v3, v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.io.OutputDecorator: java.io.OutputStream decorate(com.fasterxml.jackson.core.io.IOContext,java.io.OutputStream)>(v2, v1);
if v5 == null goto label1;
return v5;
label1:
return v1;
}
protected final java.io.Writer _decorate(java.io.Writer, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
java.io.Writer v1, v5;
com.fasterxml.jackson.core.io.OutputDecorator v3, v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.io.Writer;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.OutputDecorator _outputDecorator>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.io.OutputDecorator: java.io.Writer decorate(com.fasterxml.jackson.core.io.IOContext,java.io.Writer)>(v2, v1);
if v5 == null goto label1;
return v5;
label1:
return v1;
}
public com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()
{
com.fasterxml.jackson.core.JsonFactory v0;
int v2;
com.fasterxml.jackson.core.JsonFactory$Feature v1;
com.fasterxml.jackson.core.util.BufferRecycler v4, v5;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature USE_THREAD_LOCAL_FOR_BUFFER_RECYCLING>;
v2 = v0.<com.fasterxml.jackson.core.JsonFactory: int _factoryFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v2);
if v3 == 0 goto label1;
v4 = staticinvoke <com.fasterxml.jackson.core.util.BufferRecyclers: com.fasterxml.jackson.core.util.BufferRecycler getBufferRecycler()>();
return v4;
label1:
v5 = new com.fasterxml.jackson.core.util.BufferRecycler;
specialinvoke v5.<com.fasterxml.jackson.core.util.BufferRecycler: void <init>()>();
return v5;
}
protected com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference, boolean)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.core.StreamReadConstraints v4;
com.fasterxml.jackson.core.util.BufferRecycler v5;
boolean v2;
com.fasterxml.jackson.core.io.ContentReference v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: com.fasterxml.jackson.core.io.ContentReference;
v2 := @parameter1: boolean;
if v1 != null goto label1;
v1 = staticinvoke <com.fasterxml.jackson.core.io.ContentReference: com.fasterxml.jackson.core.io.ContentReference 'unknown'()>();
label1:
v3 = new com.fasterxml.jackson.core.io.IOContext;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();
specialinvoke v3.<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean)>(v4, v5, v1, v2);
return v3;
}
protected com.fasterxml.jackson.core.io.IOContext _createContext(java.lang.Object, boolean)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v3;
java.lang.Object v1;
com.fasterxml.jackson.core.StreamReadConstraints v4;
com.fasterxml.jackson.core.util.BufferRecycler v5;
boolean v2;
com.fasterxml.jackson.core.io.ContentReference v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = new com.fasterxml.jackson.core.io.IOContext;
v4 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
specialinvoke v3.<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean)>(v4, v5, v6, v2);
return v3;
}
protected com.fasterxml.jackson.core.io.IOContext _createNonBlockingContext(java.lang.Object)
{
com.fasterxml.jackson.core.JsonFactory v0;
com.fasterxml.jackson.core.io.IOContext v2;
java.lang.Object v1;
com.fasterxml.jackson.core.StreamReadConstraints v3;
com.fasterxml.jackson.core.util.BufferRecycler v4;
com.fasterxml.jackson.core.io.ContentReference v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.Object;
v2 = new com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.StreamReadConstraints _streamReadConstraints>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
specialinvoke v2.<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.StreamReadConstraints,com.fasterxml.jackson.core.util.BufferRecycler,com.fasterxml.jackson.core.io.ContentReference,boolean)>(v3, v4, v5, 0);
return v2;
}
protected com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)
{
com.fasterxml.jackson.core.JsonFactory v0;
java.lang.Object v1;
boolean v2, v3;
com.fasterxml.jackson.core.io.ContentReference v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: boolean canHandleBinaryNatively()>();
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = staticinvoke <com.fasterxml.jackson.core.io.ContentReference: com.fasterxml.jackson.core.io.ContentReference construct(boolean,java.lang.Object)>(v3, v1);
return v4;
}
protected com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object, int, int)
{
com.fasterxml.jackson.core.JsonFactory v0;
int v2, v3;
java.lang.Object v1;
boolean v4, v5;
com.fasterxml.jackson.core.io.ContentReference v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: boolean canHandleBinaryNatively()>();
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
v6 = staticinvoke <com.fasterxml.jackson.core.io.ContentReference: com.fasterxml.jackson.core.io.ContentReference construct(boolean,java.lang.Object,int,int)>(v5, v1, v2, v3);
return v6;
}
private final void _requireJSONFactory(java.lang.String)
{
java.lang.UnsupportedOperationException v3;
com.fasterxml.jackson.core.JsonFactory v0;
java.lang.Object[] v4;
java.lang.String v1, v5, v6;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: boolean _isJSONFactory()>();
if v2 != 0 goto label1;
v3 = new java.lang.UnsupportedOperationException;
v4 = newarray (java.lang.Object)[1];
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
v4[0] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v1, v4);
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
return;
}
private final boolean _isJSONFactory()
{
com.fasterxml.jackson.core.JsonFactory v0;
java.lang.String v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactory;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
if v1 != "JSON" goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
static void <clinit>()
{
com.fasterxml.jackson.core.io.SerializedString v3;
int v0, v1, v2;
v0 = staticinvoke <com.fasterxml.jackson.core.JsonFactory$Feature: int collectDefaults()>();
<com.fasterxml.jackson.core.JsonFactory: int DEFAULT_FACTORY_FEATURE_FLAGS> = v0;
v1 = staticinvoke <com.fasterxml.jackson.core.JsonParser$Feature: int collectDefaults()>();
<com.fasterxml.jackson.core.JsonFactory: int DEFAULT_PARSER_FEATURE_FLAGS> = v1;
v2 = staticinvoke <com.fasterxml.jackson.core.JsonGenerator$Feature: int collectDefaults()>();
<com.fasterxml.jackson.core.JsonFactory: int DEFAULT_GENERATOR_FEATURE_FLAGS> = v2;
v3 = <com.fasterxml.jackson.core.util.DefaultPrettyPrinter: com.fasterxml.jackson.core.io.SerializedString DEFAULT_ROOT_VALUE_SEPARATOR>;
<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR> = v3;
return;
}
}