public class com.fasterxml.jackson.core.JsonFactoryBuilder extends com.fasterxml.jackson.core.TSFBuilder
{
protected com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes;
protected com.fasterxml.jackson.core.SerializableString _rootValueSeparator;
protected int _maximumNonEscapedChar;
protected char _quoteChar;
public void <init>()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
specialinvoke v0.<com.fasterxml.jackson.core.TSFBuilder: void <init>()>();
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: char _quoteChar> = 34;
v1 = <com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString DEFAULT_ROOT_VALUE_SEPARATOR>;
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v1;
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _maximumNonEscapedChar> = 0;
return;
}
public void <init>(com.fasterxml.jackson.core.JsonFactory)
{
com.fasterxml.jackson.core.JsonFactory v1;
com.fasterxml.jackson.core.SerializableString v3;
com.fasterxml.jackson.core.io.CharacterEscapes v2;
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
int v4;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory;
specialinvoke v0.<com.fasterxml.jackson.core.TSFBuilder: void <init>(com.fasterxml.jackson.core.JsonFactory)>(v1);
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: char _quoteChar> = 34;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.io.CharacterEscapes getCharacterEscapes()>();
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = v2;
v3 = v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v3;
v4 = v1.<com.fasterxml.jackson.core.JsonFactory: int _maximumNonEscapedChar>;
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _maximumNonEscapedChar> = v4;
return;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.JsonParser$Feature v2;
com.fasterxml.jackson.core.json.JsonReadFeature v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadFeature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonParser$Feature)>(v2);
return v0;
}
public transient com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature, com.fasterxml.jackson.core.json.JsonReadFeature[])
{
com.fasterxml.jackson.core.json.JsonReadFeature[] v2;
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.JsonParser$Feature v3, v7;
com.fasterxml.jackson.core.json.JsonReadFeature v1, v6;
int v4, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadFeature;
v2 := @parameter1: com.fasterxml.jackson.core.json.JsonReadFeature[];
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonParser$Feature)>(v3);
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature)>(v1);
v4 = lengthof v2;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v2[v5];
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonParser$Feature)>(v7);
v5 = v5 + 1;
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.JsonParser$Feature v2;
com.fasterxml.jackson.core.json.JsonReadFeature v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadFeature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyDisable(com.fasterxml.jackson.core.JsonParser$Feature)>(v2);
return v0;
}
public transient com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature, com.fasterxml.jackson.core.json.JsonReadFeature[])
{
com.fasterxml.jackson.core.json.JsonReadFeature[] v2;
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.JsonParser$Feature v3, v7;
com.fasterxml.jackson.core.json.JsonReadFeature v1, v6;
int v4, v5;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadFeature;
v2 := @parameter1: com.fasterxml.jackson.core.json.JsonReadFeature[];
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyDisable(com.fasterxml.jackson.core.JsonParser$Feature)>(v3);
v4 = lengthof v2;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v2[v5];
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonParser$Feature)>(v7);
v5 = v5 + 1;
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder configure(com.fasterxml.jackson.core.json.JsonReadFeature, boolean)
{
com.fasterxml.jackson.core.json.JsonReadFeature v1;
com.fasterxml.jackson.core.JsonFactoryBuilder v0, v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonReadFeature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonReadFeature)>(v1);
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonReadFeature)>(v1);
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.json.JsonWriteFeature v1;
com.fasterxml.jackson.core.JsonGenerator$Feature v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonWriteFeature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
if v2 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v2);
label1:
return v0;
}
public transient com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature, com.fasterxml.jackson.core.json.JsonWriteFeature[])
{
com.fasterxml.jackson.core.JsonGenerator$Feature v3, v7;
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.json.JsonWriteFeature[] v2;
int v4, v5;
com.fasterxml.jackson.core.json.JsonWriteFeature v1, v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonWriteFeature;
v2 := @parameter1: com.fasterxml.jackson.core.json.JsonWriteFeature[];
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v3);
v4 = lengthof v2;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v2[v5];
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyEnable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v7);
v5 = v5 + 1;
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.json.JsonWriteFeature v1;
com.fasterxml.jackson.core.JsonGenerator$Feature v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonWriteFeature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyDisable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v2);
return v0;
}
public transient com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature, com.fasterxml.jackson.core.json.JsonWriteFeature[])
{
com.fasterxml.jackson.core.JsonGenerator$Feature v3, v7;
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.json.JsonWriteFeature[] v2;
int v4, v5;
com.fasterxml.jackson.core.json.JsonWriteFeature v1, v6;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonWriteFeature;
v2 := @parameter1: com.fasterxml.jackson.core.json.JsonWriteFeature[];
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyDisable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v3);
v4 = lengthof v2;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v2[v5];
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: void _legacyDisable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v7);
v5 = v5 + 1;
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder configure(com.fasterxml.jackson.core.json.JsonWriteFeature, boolean)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0, v3;
com.fasterxml.jackson.core.json.JsonWriteFeature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.json.JsonWriteFeature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.JsonFactoryBuilder enable(com.fasterxml.jackson.core.json.JsonWriteFeature)>(v1);
goto label2;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.JsonFactoryBuilder disable(com.fasterxml.jackson.core.json.JsonWriteFeature)>(v1);
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder characterEscapes(com.fasterxml.jackson.core.io.CharacterEscapes)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.io.CharacterEscapes;
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder rootValueSeparator(java.lang.String)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.io.SerializedString v2;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = new com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v2.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(v1);
label2:
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v2;
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder rootValueSeparator(com.fasterxml.jackson.core.SerializableString)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.SerializableString _rootValueSeparator> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder highestNonEscapedChar(int)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
int v1, v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: int;
if v1 > 0 goto label1;
v2 = 0;
goto label2;
label1:
v2 = staticinvoke <java.lang.Math: int max(int,int)>(127, v1);
label2:
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _maximumNonEscapedChar> = v2;
return v0;
}
public com.fasterxml.jackson.core.JsonFactoryBuilder quoteChar(char)
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
char v1;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 := @parameter0: char;
if v1 <= 127 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can only use Unicode characters up to 0x7F as quote characters");
throw v2;
label1:
v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: char _quoteChar> = v1;
return v0;
}
public com.fasterxml.jackson.core.io.CharacterEscapes characterEscapes()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 = v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
return v1;
}
public com.fasterxml.jackson.core.SerializableString rootValueSeparator()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 = v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
return v1;
}
public int highestNonEscapedChar()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
int v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 = v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: int _maximumNonEscapedChar>;
return v1;
}
public char quoteChar()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
char v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 = v0.<com.fasterxml.jackson.core.JsonFactoryBuilder: char _quoteChar>;
return v1;
}
public com.fasterxml.jackson.core.JsonFactory build()
{
com.fasterxml.jackson.core.JsonFactoryBuilder v0;
com.fasterxml.jackson.core.JsonFactory v1;
v0 := @this: com.fasterxml.jackson.core.JsonFactoryBuilder;
v1 = new com.fasterxml.jackson.core.JsonFactory;
specialinvoke v1.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.JsonFactoryBuilder)>(v0);
return v1;
}
}