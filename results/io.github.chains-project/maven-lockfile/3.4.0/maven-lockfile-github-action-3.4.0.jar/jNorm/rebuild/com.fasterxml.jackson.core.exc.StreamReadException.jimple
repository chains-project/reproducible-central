public abstract class com.fasterxml.jackson.core.exc.StreamReadException extends com.fasterxml.jackson.core.JsonProcessingException
{
static final long serialVersionUID;
protected transient com.fasterxml.jackson.core.JsonParser _processor;
protected com.fasterxml.jackson.core.util.RequestPayload _requestPayload;
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String)
{
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
if v1 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();
label2:
specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation)>(v2, v3);
v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.JsonParser _processor> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
com.fasterxml.jackson.core.JsonLocation v4;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
if v1 != null goto label1;
v4 = null;
goto label2;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();
label2:
specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v2, v4, v3);
v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.JsonParser _processor> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.core.JsonLocation)
{
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v2, v3, null);
v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.JsonParser _processor> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
{
java.lang.Throwable v4;
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
v4 := @parameter3: java.lang.Throwable;
specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v2, v3, v4);
v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.JsonParser _processor> = v1;
return;
}
protected void <init>(java.lang.String, com.fasterxml.jackson.core.JsonLocation, java.lang.Throwable)
{
java.lang.Throwable v3;
com.fasterxml.jackson.core.JsonLocation v2;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.core.JsonLocation;
v3 := @parameter2: java.lang.Throwable;
specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String,com.fasterxml.jackson.core.JsonLocation,java.lang.Throwable)>(v1, v2, v3);
return;
}
protected void <init>(java.lang.String)
{
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: void <init>(java.lang.String)>(v1);
return;
}
public abstract com.fasterxml.jackson.core.exc.StreamReadException withParser(com.fasterxml.jackson.core.JsonParser);
public abstract com.fasterxml.jackson.core.exc.StreamReadException withRequestPayload(com.fasterxml.jackson.core.util.RequestPayload);
public com.fasterxml.jackson.core.JsonParser getProcessor()
{
com.fasterxml.jackson.core.exc.StreamReadException v0;
com.fasterxml.jackson.core.JsonParser v1;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 = v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.JsonParser _processor>;
return v1;
}
public com.fasterxml.jackson.core.util.RequestPayload getRequestPayload()
{
com.fasterxml.jackson.core.exc.StreamReadException v0;
com.fasterxml.jackson.core.util.RequestPayload v1;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 = v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;
return v1;
}
public java.lang.String getRequestPayloadAsString()
{
com.fasterxml.jackson.core.util.RequestPayload v1, v2;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 = v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.util.RequestPayload: java.lang.String toString()>();
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public java.lang.String getMessage()
{
com.fasterxml.jackson.core.util.RequestPayload v2, v3;
com.fasterxml.jackson.core.exc.StreamReadException v0;
java.lang.String v1, v4;
v0 := @this: com.fasterxml.jackson.core.exc.StreamReadException;
v1 = specialinvoke v0.<com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getMessage()>();
v2 = v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.exc.StreamReadException: com.fasterxml.jackson.core.util.RequestPayload _requestPayload>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.util.RequestPayload: java.lang.String toString()>();
v1 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\nRequest payload : \u0001");
label1:
return v1;
}
}