public class com.fasterxml.jackson.core.format.DataFormatDetector extends java.lang.Object
{
public static final int DEFAULT_MAX_INPUT_LOOKAHEAD;
protected final com.fasterxml.jackson.core.JsonFactory[] _detectors;
protected final com.fasterxml.jackson.core.format.MatchStrength _optimalMatch;
protected final com.fasterxml.jackson.core.format.MatchStrength _minimalMatch;
protected final int _maxInputLookahead;
public transient void <init>(com.fasterxml.jackson.core.JsonFactory[])
{
com.fasterxml.jackson.core.format.DataFormatDetector v0;
com.fasterxml.jackson.core.JsonFactory[] v1;
com.fasterxml.jackson.core.format.MatchStrength v2, v3;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory[];
v2 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength SOLID_MATCH>;
v3 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength WEAK_MATCH>;
specialinvoke v0.<com.fasterxml.jackson.core.format.DataFormatDetector: void <init>(com.fasterxml.jackson.core.JsonFactory[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int)>(v1, v2, v3, 64);
return;
}
public void <init>(java.util.Collection)
{
com.fasterxml.jackson.core.format.DataFormatDetector v0;
java.lang.Object[] v3;
java.util.Collection v1;
com.fasterxml.jackson.core.JsonFactory[] v2;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: java.util.Collection;
v2 = newarray (com.fasterxml.jackson.core.JsonFactory)[0];
v3 = interfaceinvoke v1.<java.util.Collection: java.lang.Object[] toArray(java.lang.Object[])>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.format.DataFormatDetector: void <init>(com.fasterxml.jackson.core.JsonFactory[])>(v3);
return;
}
private void <init>(com.fasterxml.jackson.core.JsonFactory[], com.fasterxml.jackson.core.format.MatchStrength, com.fasterxml.jackson.core.format.MatchStrength, int)
{
com.fasterxml.jackson.core.format.DataFormatDetector v0;
int v4;
com.fasterxml.jackson.core.JsonFactory[] v1;
com.fasterxml.jackson.core.format.MatchStrength v2, v3;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory[];
v2 := @parameter1: com.fasterxml.jackson.core.format.MatchStrength;
v3 := @parameter2: com.fasterxml.jackson.core.format.MatchStrength;
v4 := @parameter3: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors> = v1;
v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _optimalMatch> = v2;
v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _minimalMatch> = v3;
v0.<com.fasterxml.jackson.core.format.DataFormatDetector: int _maxInputLookahead> = v4;
return;
}
public com.fasterxml.jackson.core.format.DataFormatDetector withOptimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
{
com.fasterxml.jackson.core.format.DataFormatDetector v0, v3;
int v6;
com.fasterxml.jackson.core.JsonFactory[] v4;
com.fasterxml.jackson.core.format.MatchStrength v1, v2, v5;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: com.fasterxml.jackson.core.format.MatchStrength;
v2 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _optimalMatch>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.core.format.DataFormatDetector;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v5 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _minimalMatch>;
v6 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: int _maxInputLookahead>;
specialinvoke v3.<com.fasterxml.jackson.core.format.DataFormatDetector: void <init>(com.fasterxml.jackson.core.JsonFactory[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int)>(v4, v1, v5, v6);
return v3;
}
public com.fasterxml.jackson.core.format.DataFormatDetector withMinimalMatch(com.fasterxml.jackson.core.format.MatchStrength)
{
com.fasterxml.jackson.core.format.DataFormatDetector v0, v3;
int v6;
com.fasterxml.jackson.core.JsonFactory[] v4;
com.fasterxml.jackson.core.format.MatchStrength v1, v2, v5;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: com.fasterxml.jackson.core.format.MatchStrength;
v2 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _minimalMatch>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.core.format.DataFormatDetector;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v5 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _optimalMatch>;
v6 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: int _maxInputLookahead>;
specialinvoke v3.<com.fasterxml.jackson.core.format.DataFormatDetector: void <init>(com.fasterxml.jackson.core.JsonFactory[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int)>(v4, v5, v1, v6);
return v3;
}
public com.fasterxml.jackson.core.format.DataFormatDetector withMaxInputLookahead(int)
{
com.fasterxml.jackson.core.format.DataFormatDetector v0, v3;
int v1, v2;
com.fasterxml.jackson.core.JsonFactory[] v4;
com.fasterxml.jackson.core.format.MatchStrength v5, v6;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: int _maxInputLookahead>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.core.format.DataFormatDetector;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v5 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _optimalMatch>;
v6 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _minimalMatch>;
specialinvoke v3.<com.fasterxml.jackson.core.format.DataFormatDetector: void <init>(com.fasterxml.jackson.core.JsonFactory[],com.fasterxml.jackson.core.format.MatchStrength,com.fasterxml.jackson.core.format.MatchStrength,int)>(v4, v5, v6, v1);
return v3;
}
public com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(java.io.InputStream) throws java.io.IOException
{
byte[] v4;
com.fasterxml.jackson.core.format.DataFormatDetector v0;
com.fasterxml.jackson.core.format.DataFormatMatcher v5;
com.fasterxml.jackson.core.format.InputAccessor$Std v2;
int v3;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: java.io.InputStream;
v2 = new com.fasterxml.jackson.core.format.InputAccessor$Std;
v3 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: int _maxInputLookahead>;
v4 = newarray (byte)[v3];
specialinvoke v2.<com.fasterxml.jackson.core.format.InputAccessor$Std: void <init>(java.io.InputStream,byte[])>(v1, v4);
v5 = specialinvoke v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)>(v2);
return v5;
}
public com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[]) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.format.DataFormatDetector v0;
com.fasterxml.jackson.core.format.DataFormatMatcher v3;
com.fasterxml.jackson.core.format.InputAccessor$Std v2;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: byte[];
v2 = new com.fasterxml.jackson.core.format.InputAccessor$Std;
specialinvoke v2.<com.fasterxml.jackson.core.format.InputAccessor$Std: void <init>(byte[])>(v1);
v3 = specialinvoke v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)>(v2);
return v3;
}
public com.fasterxml.jackson.core.format.DataFormatMatcher findFormat(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.format.DataFormatDetector v0;
com.fasterxml.jackson.core.format.DataFormatMatcher v5;
com.fasterxml.jackson.core.format.InputAccessor$Std v4;
int v2, v3;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = new com.fasterxml.jackson.core.format.InputAccessor$Std;
specialinvoke v4.<com.fasterxml.jackson.core.format.InputAccessor$Std: void <init>(byte[],int,int)>(v1, v2, v3);
v5 = specialinvoke v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std)>(v4);
return v5;
}
public java.lang.String toString()
{
com.fasterxml.jackson.core.JsonFactory[] v2, v4, v8;
com.fasterxml.jackson.core.JsonFactory v5, v9;
com.fasterxml.jackson.core.format.DataFormatDetector v0;
int v3, v7;
java.lang.StringBuilder v1;
java.lang.String v10, v11, v6;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
v2 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v3 = lengthof v2;
if v3 <= 0 goto label2;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v5 = v4[0];
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
v7 = 1;
label1:
if v7 >= v3 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v8 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v9 = v8[v7];
v10 = virtualinvoke v9.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
v7 = v7 + 1;
goto label1;
label2:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
private com.fasterxml.jackson.core.format.DataFormatMatcher _findFormat(com.fasterxml.jackson.core.format.InputAccessor$Std) throws java.io.IOException
{
com.fasterxml.jackson.core.format.DataFormatMatcher v17;
com.fasterxml.jackson.core.JsonFactory[] v4;
com.fasterxml.jackson.core.format.DataFormatDetector v0;
int v11, v12, v13, v14, v16, v5, v6, v9;
com.fasterxml.jackson.core.format.InputAccessor$Std v1;
com.fasterxml.jackson.core.format.MatchStrength v10, v15, v3, v8;
com.fasterxml.jackson.core.JsonFactory v2, v7;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatDetector;
v1 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor$Std;
v2 = null;
v3 = null;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.JsonFactory[] _detectors>;
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label4;
v7 = v4[v6];
virtualinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor$Std: void reset()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor)>(v1);
if v8 == null goto label3;
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.format.MatchStrength: int ordinal()>();
v10 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _minimalMatch>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.core.format.MatchStrength: int ordinal()>();
if v9 < v11 goto label3;
if v2 == null goto label2;
v12 = virtualinvoke v3.<com.fasterxml.jackson.core.format.MatchStrength: int ordinal()>();
v13 = virtualinvoke v8.<com.fasterxml.jackson.core.format.MatchStrength: int ordinal()>();
if v12 >= v13 goto label3;
label2:
v2 = v7;
v3 = v8;
v14 = virtualinvoke v8.<com.fasterxml.jackson.core.format.MatchStrength: int ordinal()>();
v15 = v0.<com.fasterxml.jackson.core.format.DataFormatDetector: com.fasterxml.jackson.core.format.MatchStrength _optimalMatch>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.core.format.MatchStrength: int ordinal()>();
if v14 >= v16 goto label4;
label3:
v6 = v6 + 1;
goto label1;
label4:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor$Std: com.fasterxml.jackson.core.format.DataFormatMatcher createMatcher(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.format.MatchStrength)>(v2, v3);
return v17;
}
}