public final class com.fasterxml.jackson.core.io.NumberInput extends java.lang.Object
{
public static final java.lang.String NASTY_SMALL_DOUBLE;
static final long L_BILLION;
static final java.lang.String MIN_LONG_STR_NO_SIGN;
static final java.lang.String MAX_LONG_STR;
public void <init>()
{
com.fasterxml.jackson.core.io.NumberInput v0;
v0 := @this: com.fasterxml.jackson.core.io.NumberInput;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static int parseInt(char[], int, int)
{
int v1, v10, v11, v12, v14, v15, v16, v18, v19, v2, v20, v22, v23, v24, v26, v27, v28, v30, v31, v32, v34, v35, v37, v38, v4, v5, v7, v8;
char v13, v17, v21, v25, v29, v3, v33, v36, v6, v9;
char[] v0;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
if v2 <= 0 goto label01;
v3 = v0[v1];
if v3 != 43 goto label01;
v1 = v1 + 1;
v2 = v2 - 1;
label01:
v4 = v1 + v2;
v5 = v4 - 1;
v6 = v0[v5];
v7 = v6 - 48;
tableswitch(v2)
{
case 2: goto label09;
case 3: goto label08;
case 4: goto label07;
case 5: goto label06;
case 6: goto label05;
case 7: goto label04;
case 8: goto label03;
case 9: goto label02;
default: goto label10;
};
label02:
v8 = v1;
v1 = v1 + 1;
v9 = v0[v8];
v10 = v9 - 48;
v11 = v10 * 100000000;
v7 = v7 + v11;
label03:
v12 = v1;
v1 = v1 + 1;
v13 = v0[v12];
v14 = v13 - 48;
v15 = v14 * 10000000;
v7 = v7 + v15;
label04:
v16 = v1;
v1 = v1 + 1;
v17 = v0[v16];
v18 = v17 - 48;
v19 = v18 * 1000000;
v7 = v7 + v19;
label05:
v20 = v1;
v1 = v1 + 1;
v21 = v0[v20];
v22 = v21 - 48;
v23 = v22 * 100000;
v7 = v7 + v23;
label06:
v24 = v1;
v1 = v1 + 1;
v25 = v0[v24];
v26 = v25 - 48;
v27 = v26 * 10000;
v7 = v7 + v27;
label07:
v28 = v1;
v1 = v1 + 1;
v29 = v0[v28];
v30 = v29 - 48;
v31 = v30 * 1000;
v7 = v7 + v31;
label08:
v32 = v1;
v1 = v1 + 1;
v33 = v0[v32];
v34 = v33 - 48;
v35 = v34 * 100;
v7 = v7 + v35;
label09:
v36 = v0[v1];
v37 = v36 - 48;
v38 = v37 * 10;
v7 = v7 + v38;
label10:
return v7;
}
public static int parseInt(java.lang.String)
{
int v10, v12, v13, v14, v15, v17, v18, v19, v2, v20, v22, v23, v24, v25, v5, v6, v7, v8, v9;
java.lang.String v0;
boolean v3, v4;
char v1, v11, v16, v21;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
v2 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 != 45 goto label01;
v3 = 1;
goto label02;
label01:
v3 = 0;
label02:
v4 = v3;
v5 = 1;
if v3 == 0 goto label05;
if v2 == 1 goto label03;
if v2 <= 10 goto label04;
label03:
v6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
return v6;
label04:
v5 = 2;
v1 = virtualinvoke v0.<java.lang.String: char charAt(int)>(1);
goto label06;
label05:
if v2 <= 9 goto label06;
v7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
return v7;
label06:
if v1 > 57 goto label07;
if v1 >= 48 goto label08;
label07:
v8 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
return v8;
label08:
v9 = v1 - 48;
if v5 >= v2 goto label16;
v10 = v5 + 1;
v11 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v5);
if v11 > 57 goto label09;
if v11 >= 48 goto label10;
label09:
v12 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
return v12;
label10:
v13 = v9 * 10;
v14 = v11 - 48;
v9 = v13 + v14;
if v10 >= v2 goto label16;
v15 = v10 + 1;
v16 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v10);
if v16 > 57 goto label11;
if v16 >= 48 goto label12;
label11:
v17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
return v17;
label12:
v18 = v9 * 10;
v19 = v16 - 48;
v9 = v18 + v19;
if v15 >= v2 goto label16;
label13:
v20 = v15;
v15 = v15 + 1;
v21 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v20);
if v21 > 57 goto label14;
if v21 >= 48 goto label15;
label14:
v22 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
return v22;
label15:
v23 = v9 * 10;
v24 = v21 - 48;
v9 = v23 + v24;
if v15 < v2 goto label13;
label16:
if v4 == 0 goto label17;
v25 = neg v9;
goto label18;
label17:
v25 = v9;
label18:
return v25;
}
public static long parseLong(char[], int, int)
{
long v5, v8;
int v1, v2, v3, v4, v6, v7;
char[] v0;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = v2 - 9;
v4 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>(v0, v1, v3);
v5 = v4 * 1000000000L;
v6 = v1 + v3;
v7 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(char[],int,int)>(v0, v6, 9);
v8 = v5 + v7;
return v8;
}
public static long parseLong19(char[], int, boolean)
{
char v6;
long v3, v7, v9;
int v1, v4, v5, v8;
char[] v0;
boolean v2;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 = 0L;
v4 = 0;
label1:
if v4 >= 19 goto label2;
v5 = v1 + v4;
v6 = v0[v5];
v7 = v3 * 10L;
v8 = v6 - 48;
v3 = v7 + v8;
v4 = v4 + 1;
goto label1;
label2:
if v2 == 0 goto label3;
v9 = neg v3;
goto label4;
label3:
v9 = v3;
label4:
return v9;
}
public static long parseLong(java.lang.String)
{
int v1, v2;
long v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 > 9 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v0);
return v2;
label1:
v3 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v0);
return v3;
}
public static boolean inLongRange(char[], int, int, boolean)
{
char v10, v9;
int v1, v11, v2, v6, v7, v8;
char[] v0;
java.lang.String v4, v5;
boolean v12, v3;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
if v3 == 0 goto label1;
v4 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;
goto label2;
label1:
v4 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR>;
label2:
v5 = v4;
v6 = virtualinvoke v4.<java.lang.String: int length()>();
if v2 >= v6 goto label3;
return 1;
label3:
if v2 <= v6 goto label4;
return 0;
label4:
v7 = 0;
label5:
if v7 >= v6 goto label9;
v8 = v1 + v7;
v9 = v0[v8];
v10 = virtualinvoke v5.<java.lang.String: char charAt(int)>(v7);
v11 = v9 - v10;
if v11 == 0 goto label8;
if v11 >= 0 goto label6;
v12 = 1;
goto label7;
label6:
v12 = 0;
label7:
return v12;
label8:
v7 = v7 + 1;
goto label5;
label9:
return 1;
}
public static boolean inLongRange(java.lang.String, boolean)
{
char v7, v8;
int v4, v5, v6, v9;
java.lang.String v0, v2, v3;
boolean v1, v10;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN>;
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR>;
label2:
v3 = v2;
v4 = virtualinvoke v2.<java.lang.String: int length()>();
v5 = virtualinvoke v0.<java.lang.String: int length()>();
if v5 >= v4 goto label3;
return 1;
label3:
if v5 <= v4 goto label4;
return 0;
label4:
v6 = 0;
label5:
if v6 >= v4 goto label9;
v7 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v6);
v8 = virtualinvoke v3.<java.lang.String: char charAt(int)>(v6);
v9 = v7 - v8;
if v9 == 0 goto label8;
if v9 >= 0 goto label6;
v10 = 1;
goto label7;
label6:
v10 = 0;
label7:
return v10;
label8:
v6 = v6 + 1;
goto label5;
label9:
return 1;
}
public static int parseAsInt(java.lang.String, int)
{
char v5, v6;
java.lang.NumberFormatException v10, v8;
int v1, v3, v4, v9;
java.lang.String v0, v2;
double v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
if v0 != null goto label01;
return v1;
label01:
v2 = virtualinvoke v0.<java.lang.String: java.lang.String trim()>();
v3 = virtualinvoke v2.<java.lang.String: int length()>();
if v3 != 0 goto label02;
return v1;
label02:
v4 = 0;
v5 = virtualinvoke v2.<java.lang.String: char charAt(int)>(0);
if v5 != 43 goto label03;
v2 = virtualinvoke v2.<java.lang.String: java.lang.String substring(int)>(1);
v3 = virtualinvoke v2.<java.lang.String: int length()>();
goto label04;
label03:
if v5 != 45 goto label04;
v4 = 1;
label04:
if v4 >= v3 goto label09;
v6 = virtualinvoke v2.<java.lang.String: char charAt(int)>(v4);
if v6 > 57 goto label05;
if v6 >= 48 goto label08;
label05:
v7 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String,boolean)>(v2, 1);
label06:
return v7;
label07:
v8 := @caughtexception;
return v1;
label08:
v4 = v4 + 1;
goto label04;
label09:
v9 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v2);
label10:
return v9;
label11:
v10 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label05 to label06 with label07;
catch java.lang.NumberFormatException from label09 to label10 with label11;
}
public static long parseAsLong(java.lang.String, long)
{
char v5, v6;
java.lang.NumberFormatException v10, v8;
long v1, v9;
int v3, v4;
java.lang.String v0, v2;
double v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: long;
if v0 != null goto label01;
return v1;
label01:
v2 = virtualinvoke v0.<java.lang.String: java.lang.String trim()>();
v3 = virtualinvoke v2.<java.lang.String: int length()>();
if v3 != 0 goto label02;
return v1;
label02:
v4 = 0;
v5 = virtualinvoke v2.<java.lang.String: char charAt(int)>(0);
if v5 != 43 goto label03;
v2 = virtualinvoke v2.<java.lang.String: java.lang.String substring(int)>(1);
v3 = virtualinvoke v2.<java.lang.String: int length()>();
goto label04;
label03:
if v5 != 45 goto label04;
v4 = 1;
label04:
if v4 >= v3 goto label09;
v6 = virtualinvoke v2.<java.lang.String: char charAt(int)>(v4);
if v6 > 57 goto label05;
if v6 >= 48 goto label08;
label05:
v7 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String,boolean)>(v2, 1);
label06:
return v7;
label07:
v8 := @caughtexception;
return v1;
label08:
v4 = v4 + 1;
goto label04;
label09:
v9 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v2);
label10:
return v9;
label11:
v10 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label05 to label06 with label07;
catch java.lang.NumberFormatException from label09 to label10 with label11;
}
public static double parseAsDouble(java.lang.String, double)
{
java.lang.String v0;
double v1, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: double;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseAsDouble(java.lang.String,double,boolean)>(v0, v1, 0);
return v2;
}
public static double parseAsDouble(java.lang.String, double, boolean)
{
int v4;
java.lang.NumberFormatException v6;
java.lang.String v0, v3;
boolean v2;
double v1, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: double;
v2 := @parameter2: boolean;
if v0 != null goto label1;
return v1;
label1:
v3 = virtualinvoke v0.<java.lang.String: java.lang.String trim()>();
v4 = virtualinvoke v3.<java.lang.String: int length()>();
if v4 != 0 goto label2;
return v1;
label2:
v5 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String,boolean)>(v3, v2);
label3:
return v5;
label4:
v6 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label2 to label3 with label4;
}
public static double parseDouble(java.lang.String) throws java.lang.NumberFormatException
{
java.lang.String v0;
double v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String,boolean)>(v0, 0);
return v1;
}
public static double parseDouble(java.lang.String, boolean) throws java.lang.NumberFormatException
{
java.lang.String v0;
boolean v1;
double v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.doubleparser.JavaDoubleParser: double parseDouble(java.lang.CharSequence)>(v0);
goto label2;
label1:
v2 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(v0);
label2:
return v2;
}
public static float parseFloat(java.lang.String) throws java.lang.NumberFormatException
{
float v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: float parseFloat(java.lang.String,boolean)>(v0, 0);
return v1;
}
public static float parseFloat(java.lang.String, boolean) throws java.lang.NumberFormatException
{
float v2;
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.doubleparser.JavaFloatParser: float parseFloat(java.lang.CharSequence)>(v0);
goto label2;
label1:
v2 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(v0);
label2:
return v2;
}
public static java.math.BigDecimal parseBigDecimal(java.lang.String) throws java.lang.NumberFormatException
{
java.math.BigDecimal v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parse(java.lang.String)>(v0);
return v1;
}
public static java.math.BigDecimal parseBigDecimal(java.lang.String, boolean) throws java.lang.NumberFormatException
{
java.math.BigDecimal v2;
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parseWithFastParser(java.lang.String)>(v0);
goto label2;
label1:
v2 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parse(java.lang.String)>(v0);
label2:
return v2;
}
public static java.math.BigDecimal parseBigDecimal(char[], int, int) throws java.lang.NumberFormatException
{
java.math.BigDecimal v3;
int v1, v2;
char[] v0;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parse(char[],int,int)>(v0, v1, v2);
return v3;
}
public static java.math.BigDecimal parseBigDecimal(char[], int, int, boolean) throws java.lang.NumberFormatException
{
java.math.BigDecimal v4;
int v1, v2;
char[] v0;
boolean v3;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
if v3 == 0 goto label1;
v4 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parseWithFastParser(char[],int,int)>(v0, v1, v2);
goto label2;
label1:
v4 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parse(char[],int,int)>(v0, v1, v2);
label2:
return v4;
}
public static java.math.BigDecimal parseBigDecimal(char[]) throws java.lang.NumberFormatException
{
char[] v0;
java.math.BigDecimal v1;
v0 := @parameter0: char[];
v1 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parse(char[])>(v0);
return v1;
}
public static java.math.BigDecimal parseBigDecimal(char[], boolean) throws java.lang.NumberFormatException
{
java.math.BigDecimal v3;
int v2;
char[] v0;
boolean v1;
v0 := @parameter0: char[];
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = lengthof v0;
v3 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parseWithFastParser(char[],int,int)>(v0, 0, v2);
goto label2;
label1:
v3 = staticinvoke <com.fasterxml.jackson.core.io.BigDecimalParser: java.math.BigDecimal parse(char[])>(v0);
label2:
return v3;
}
public static java.math.BigInteger parseBigInteger(java.lang.String) throws java.lang.NumberFormatException
{
java.math.BigInteger v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new java.math.BigInteger;
specialinvoke v1.<java.math.BigInteger: void <init>(java.lang.String)>(v0);
return v1;
}
public static java.math.BigInteger parseBigInteger(java.lang.String, boolean) throws java.lang.NumberFormatException
{
java.math.BigInteger v2, v3;
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.BigIntegerParser: java.math.BigInteger parseWithFastParser(java.lang.String)>(v0);
return v2;
label1:
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: java.math.BigInteger parseBigInteger(java.lang.String)>(v0);
return v3;
}
public static java.math.BigInteger parseBigIntegerWithRadix(java.lang.String, int, boolean) throws java.lang.NumberFormatException
{
int v1;
java.math.BigInteger v3, v4;
java.lang.String v0;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
if v2 == 0 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.core.io.BigIntegerParser: java.math.BigInteger parseWithFastParser(java.lang.String,int)>(v0, v1);
return v3;
label1:
v4 = new java.math.BigInteger;
specialinvoke v4.<java.math.BigInteger: void <init>(java.lang.String,int)>(v0, v1);
return v4;
}
static void <clinit>()
{
java.lang.String v0, v1, v2;
v0 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);
v1 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(1);
<com.fasterxml.jackson.core.io.NumberInput: java.lang.String MIN_LONG_STR_NO_SIGN> = v1;
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(9223372036854775807L);
<com.fasterxml.jackson.core.io.NumberInput: java.lang.String MAX_LONG_STR> = v2;
return;
}
}