public final class com.fasterxml.jackson.core.io.NumberOutput extends java.lang.Object
{
private static int MILLION;
private static int BILLION;
private static long BILLION_L;
private static long MIN_INT_AS_LONG;
private static long MAX_INT_AS_LONG;
static final java.lang.String SMALLEST_INT;
static final java.lang.String SMALLEST_LONG;
private static final int[] TRIPLET_TO_CHARS;
private static final java.lang.String[] sSmallIntStrs;
private static final java.lang.String[] sSmallIntStrs2;
public void <init>()
{
com.fasterxml.jackson.core.io.NumberOutput v0;
v0 := @this: com.fasterxml.jackson.core.io.NumberOutput;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static int outputInt(int, char[], int)
{
int v0, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v4, v5, v6, v7, v8, v9;
char[] v1;
v0 := @parameter0: int;
v1 := @parameter1: char[];
v2 := @parameter2: int;
if v0 >= 0 goto label2;
if v0 != -2147483648 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputSmallestI(char[],int)>(v1, v2);
return v3;
label1:
v4 = v2;
v2 = v2 + 1;
v1[v4] = 45;
v0 = neg v0;
label2:
v5 = <com.fasterxml.jackson.core.io.NumberOutput: int MILLION>;
if v0 >= v5 goto label5;
if v0 >= 1000 goto label4;
if v0 >= 10 goto label3;
v6 = 48 + v0;
v1[v2] = v6;
v7 = v2 + 1;
return v7;
label3:
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,char[],int)>(v0, v1, v2);
return v8;
label4:
v9 = v0 / 1000;
v10 = v9 * 1000;
v11 = v0 - v10;
v12 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,char[],int)>(v9, v1, v2);
v13 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _full3(int,char[],int)>(v11, v1, v12);
return v13;
label5:
v14 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
if v0 < v14 goto label8;
v15 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
v16 = v0 - v15;
v17 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
if v16 < v17 goto label6;
v18 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
v16 = v16 - v18;
v19 = v2 + 1;
v1[v2] = 50;
goto label7;
label6:
v19 = v2 + 1;
v1[v2] = 49;
label7:
v20 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputFullBillion(int,char[],int)>(v16, v1, v19);
return v20;
label8:
v21 = v0 / 1000;
v22 = v21 * 1000;
v23 = v0 - v22;
v24 = v21 / 1000;
v25 = v24 * 1000;
v26 = v21 - v25;
v27 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,char[],int)>(v24, v1, v2);
v28 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _full3(int,char[],int)>(v26, v1, v27);
v29 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _full3(int,char[],int)>(v23, v1, v28);
return v29;
}
public static int outputInt(int, byte[], int)
{
byte[] v1;
int v0, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int;
v1 := @parameter1: byte[];
v2 := @parameter2: int;
if v0 >= 0 goto label2;
if v0 != -2147483648 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputSmallestI(byte[],int)>(v1, v2);
return v3;
label1:
v4 = v2;
v2 = v2 + 1;
v1[v4] = 45;
v0 = neg v0;
label2:
v5 = <com.fasterxml.jackson.core.io.NumberOutput: int MILLION>;
if v0 >= v5 goto label6;
if v0 >= 1000 goto label4;
if v0 >= 10 goto label3;
v6 = v2 + 1;
v7 = 48 + v0;
v1[v2] = v7;
goto label5;
label3:
v6 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,byte[],int)>(v0, v1, v2);
goto label5;
label4:
v8 = v0 / 1000;
v9 = v8 * 1000;
v10 = v0 - v9;
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,byte[],int)>(v8, v1, v2);
v6 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _full3(int,byte[],int)>(v10, v1, v11);
label5:
return v6;
label6:
v12 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
if v0 < v12 goto label9;
v13 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
v14 = v0 - v13;
v15 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
if v14 < v15 goto label7;
v16 = <com.fasterxml.jackson.core.io.NumberOutput: int BILLION>;
v14 = v14 - v16;
v17 = v2 + 1;
v1[v2] = 50;
goto label8;
label7:
v17 = v2 + 1;
v1[v2] = 49;
label8:
v18 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputFullBillion(int,byte[],int)>(v14, v1, v17);
return v18;
label9:
v19 = v0 / 1000;
v20 = v19 * 1000;
v21 = v0 - v20;
v22 = v19 / 1000;
v23 = v22 * 1000;
v24 = v19 - v23;
v25 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,byte[],int)>(v22, v1, v2);
v26 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _full3(int,byte[],int)>(v24, v1, v25);
v27 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _full3(int,byte[],int)>(v21, v1, v26);
return v27;
}
public static int outputLong(long, char[], int)
{
long v0, v10, v13, v14, v15, v16, v17, v18, v21, v22, v23, v24, v25, v4;
byte v11, v19, v3, v5, v7;
int v12, v2, v20, v26, v27, v6, v8, v9;
char[] v1;
v0 := @parameter0: long;
v1 := @parameter1: char[];
v2 := @parameter2: int;
v3 = v0 cmp 0L;
if v3 >= 0 goto label3;
v4 = <com.fasterxml.jackson.core.io.NumberOutput: long MIN_INT_AS_LONG>;
v5 = v0 cmp v4;
if v5 <= 0 goto label1;
v6 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(v0, v1, v2);
return v6;
label1:
v7 = v0 cmp -9223372036854775808L;
if v7 != 0 goto label2;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputSmallestL(char[],int)>(v1, v2);
return v8;
label2:
v9 = v2;
v2 = v2 + 1;
v1[v9] = 45;
v0 = neg v0;
goto label4;
label3:
v10 = <com.fasterxml.jackson.core.io.NumberOutput: long MAX_INT_AS_LONG>;
v11 = v0 cmp v10;
if v11 > 0 goto label4;
v12 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(v0, v1, v2);
return v12;
label4:
v13 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v14 = v0 / v13;
v15 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v16 = v14 * v15;
v17 = v0 - v16;
v18 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v19 = v14 cmp v18;
if v19 >= 0 goto label5;
v20 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputUptoBillion(int,char[],int)>(v14, v1, v2);
goto label6;
label5:
v21 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v22 = v14 / v21;
v23 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v24 = v22 * v23;
v25 = v14 - v24;
v26 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,char[],int)>(v22, v1, v2);
v20 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputFullBillion(int,char[],int)>(v25, v1, v26);
label6:
v27 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputFullBillion(int,char[],int)>(v17, v1, v20);
return v27;
}
public static int outputLong(long, byte[], int)
{
byte[] v1;
long v0, v10, v13, v14, v15, v16, v17, v18, v21, v22, v23, v24, v25, v4;
byte v11, v19, v3, v5, v7;
int v12, v2, v20, v26, v27, v6, v8, v9;
v0 := @parameter0: long;
v1 := @parameter1: byte[];
v2 := @parameter2: int;
v3 = v0 cmp 0L;
if v3 >= 0 goto label3;
v4 = <com.fasterxml.jackson.core.io.NumberOutput: long MIN_INT_AS_LONG>;
v5 = v0 cmp v4;
if v5 <= 0 goto label1;
v6 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>(v0, v1, v2);
return v6;
label1:
v7 = v0 cmp -9223372036854775808L;
if v7 != 0 goto label2;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputSmallestL(byte[],int)>(v1, v2);
return v8;
label2:
v9 = v2;
v2 = v2 + 1;
v1[v9] = 45;
v0 = neg v0;
goto label4;
label3:
v10 = <com.fasterxml.jackson.core.io.NumberOutput: long MAX_INT_AS_LONG>;
v11 = v0 cmp v10;
if v11 > 0 goto label4;
v12 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,byte[],int)>(v0, v1, v2);
return v12;
label4:
v13 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v14 = v0 / v13;
v15 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v16 = v14 * v15;
v17 = v0 - v16;
v18 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v19 = v14 cmp v18;
if v19 >= 0 goto label5;
v20 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputUptoBillion(int,byte[],int)>(v14, v1, v2);
goto label6;
label5:
v21 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v22 = v14 / v21;
v23 = <com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L>;
v24 = v22 * v23;
v25 = v14 - v24;
v26 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,byte[],int)>(v22, v1, v2);
v20 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputFullBillion(int,byte[],int)>(v25, v1, v26);
label6:
v27 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputFullBillion(int,byte[],int)>(v17, v1, v20);
return v27;
}
public static java.lang.String toString(int)
{
java.lang.String[] v1, v3, v7, v9;
int v0, v2, v5, v6, v8;
java.lang.String v10, v11, v4;
v0 := @parameter0: int;
v1 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String[] sSmallIntStrs>;
v2 = lengthof v1;
if v0 >= v2 goto label2;
if v0 < 0 goto label1;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String[] sSmallIntStrs>;
v4 = v3[v0];
return v4;
label1:
v5 = neg v0;
v6 = v5 - 1;
v7 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String[] sSmallIntStrs2>;
v8 = lengthof v7;
if v6 >= v8 goto label2;
v9 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String[] sSmallIntStrs2>;
v10 = v9[v6];
return v10;
label2:
v11 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v0);
return v11;
}
public static java.lang.String toString(long)
{
byte v1, v2;
long v0;
java.lang.String v3, v4;
v0 := @parameter0: long;
v1 = v0 cmp 2147483647L;
if v1 > 0 goto label1;
v2 = v0 cmp -2147483648L;
if v2 < 0 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(int)>(v0);
return v3;
label1:
v4 = staticinvoke <java.lang.Long: java.lang.String toString(long)>(v0);
return v4;
}
public static java.lang.String toString(double)
{
java.lang.String v1;
double v0;
v0 := @parameter0: double;
v1 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(double,boolean)>(v0, 0);
return v1;
}
public static java.lang.String toString(double, boolean)
{
java.lang.String v2;
boolean v1;
double v0;
v0 := @parameter0: double;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.DoubleToDecimal: java.lang.String toString(double)>(v0);
goto label2;
label1:
v2 = staticinvoke <java.lang.Double: java.lang.String toString(double)>(v0);
label2:
return v2;
}
public static java.lang.String toString(float)
{
float v0;
java.lang.String v1;
v0 := @parameter0: float;
v1 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(float,boolean)>(v0, 0);
return v1;
}
public static java.lang.String toString(float, boolean)
{
float v0;
java.lang.String v2;
boolean v1;
v0 := @parameter0: float;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = staticinvoke <com.fasterxml.jackson.core.io.schubfach.FloatToDecimal: java.lang.String toString(float)>(v0);
goto label2;
label1:
v2 = staticinvoke <java.lang.Float: java.lang.String toString(float)>(v0);
label2:
return v2;
}
public static boolean notFinite(double)
{
boolean v1, v2;
double v0;
v0 := @parameter0: double;
v1 = staticinvoke <java.lang.Double: boolean isFinite(double)>(v0);
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public static boolean notFinite(float)
{
float v0;
boolean v1, v2;
v0 := @parameter0: float;
v1 = staticinvoke <java.lang.Float: boolean isFinite(float)>(v0);
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
private static int _outputUptoBillion(int, char[], int)
{
int[] v16, v25;
int v0, v10, v11, v12, v13, v14, v15, v17, v18, v19, v2, v20, v21, v22, v23, v24, v26, v27, v28, v29, v3, v30, v31, v32, v33, v4, v5, v6, v7, v8, v9;
char[] v1;
v0 := @parameter0: int;
v1 := @parameter1: char[];
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: int MILLION>;
if v0 >= v3 goto label2;
if v0 >= 1000 goto label1;
v4 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,char[],int)>(v0, v1, v2);
return v4;
label1:
v5 = v0 / 1000;
v6 = v5 * 1000;
v7 = v0 - v6;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputUptoMillion(char[],int,int,int)>(v1, v2, v5, v7);
return v8;
label2:
v9 = v0 / 1000;
v10 = v9 * 1000;
v11 = v0 - v10;
v12 = v9 / 1000;
v13 = v12 * 1000;
v14 = v9 - v13;
v15 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,char[],int)>(v12, v1, v2);
v16 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v17 = v16[v14];
v18 = v15 + 1;
v19 = v17 >> 16;
v1[v15] = v19;
v20 = v18 + 1;
v21 = v17 >> 8;
v22 = v21 & 127;
v1[v18] = v22;
v23 = v20 + 1;
v24 = v17 & 127;
v1[v20] = v24;
v25 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v26 = v25[v11];
v27 = v23 + 1;
v28 = v26 >> 16;
v1[v23] = v28;
v29 = v27 + 1;
v30 = v26 >> 8;
v31 = v30 & 127;
v1[v27] = v31;
v32 = v29 + 1;
v33 = v26 & 127;
v1[v29] = v33;
return v32;
}
private static int _outputFullBillion(int, char[], int)
{
int[] v18, v27, v7;
int v0, v10, v11, v12, v13, v14, v15, v16, v17, v19, v2, v20, v21, v22, v23, v24, v25, v26, v28, v29, v3, v30, v31, v32, v33, v34, v35, v4, v5, v6, v8, v9;
char[] v1;
v0 := @parameter0: int;
v1 := @parameter1: char[];
v2 := @parameter2: int;
v3 = v0 / 1000;
v4 = v3 * 1000;
v5 = v0 - v4;
v6 = v3 / 1000;
v7 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v8 = v7[v6];
v9 = v2 + 1;
v10 = v8 >> 16;
v1[v2] = v10;
v11 = v9 + 1;
v12 = v8 >> 8;
v13 = v12 & 127;
v1[v9] = v13;
v14 = v11 + 1;
v15 = v8 & 127;
v1[v11] = v15;
v16 = v6 * 1000;
v17 = v3 - v16;
v18 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v19 = v18[v17];
v20 = v14 + 1;
v21 = v19 >> 16;
v1[v14] = v21;
v22 = v20 + 1;
v23 = v19 >> 8;
v24 = v23 & 127;
v1[v20] = v24;
v25 = v22 + 1;
v26 = v19 & 127;
v1[v22] = v26;
v27 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v28 = v27[v5];
v29 = v25 + 1;
v30 = v28 >> 16;
v1[v25] = v30;
v31 = v29 + 1;
v32 = v28 >> 8;
v33 = v32 & 127;
v1[v29] = v33;
v34 = v31 + 1;
v35 = v28 & 127;
v1[v31] = v35;
return v34;
}
private static int _outputUptoBillion(int, byte[], int)
{
byte[] v1;
int[] v16, v23;
int v0, v10, v11, v12, v13, v14, v15, v17, v18, v19, v2, v20, v21, v22, v24, v25, v26, v27, v28, v29, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int;
v1 := @parameter1: byte[];
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: int MILLION>;
if v0 >= v3 goto label2;
if v0 >= 1000 goto label1;
v4 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,byte[],int)>(v0, v1, v2);
return v4;
label1:
v5 = v0 / 1000;
v6 = v5 * 1000;
v7 = v0 - v6;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _outputUptoMillion(byte[],int,int,int)>(v1, v2, v5, v7);
return v8;
label2:
v9 = v0 / 1000;
v10 = v9 * 1000;
v11 = v0 - v10;
v12 = v9 / 1000;
v13 = v12 * 1000;
v14 = v9 - v13;
v15 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int _leading3(int,byte[],int)>(v12, v1, v2);
v16 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v17 = v16[v14];
v18 = v15 + 1;
v19 = v17 >> 16;
v1[v15] = v19;
v20 = v18 + 1;
v21 = v17 >> 8;
v1[v18] = v21;
v22 = v20 + 1;
v1[v20] = v17;
v23 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v24 = v23[v11];
v25 = v22 + 1;
v26 = v24 >> 16;
v1[v22] = v26;
v27 = v25 + 1;
v28 = v24 >> 8;
v1[v25] = v28;
v29 = v27 + 1;
v1[v27] = v24;
return v29;
}
private static int _outputFullBillion(int, byte[], int)
{
byte[] v1;
int[] v16, v23, v9;
int v0, v10, v11, v12, v13, v14, v15, v17, v18, v19, v2, v20, v21, v22, v24, v25, v26, v27, v28, v29, v3, v4, v5, v6, v7, v8;
v0 := @parameter0: int;
v1 := @parameter1: byte[];
v2 := @parameter2: int;
v3 = v0 / 1000;
v4 = v3 * 1000;
v5 = v0 - v4;
v6 = v3 / 1000;
v7 = v6 * 1000;
v8 = v3 - v7;
v9 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v10 = v9[v6];
v11 = v2 + 1;
v12 = v10 >> 16;
v1[v2] = v12;
v13 = v11 + 1;
v14 = v10 >> 8;
v1[v11] = v14;
v15 = v13 + 1;
v1[v13] = v10;
v16 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v17 = v16[v8];
v18 = v15 + 1;
v19 = v17 >> 16;
v1[v15] = v19;
v20 = v18 + 1;
v21 = v17 >> 8;
v1[v18] = v21;
v22 = v20 + 1;
v1[v20] = v17;
v23 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v24 = v23[v5];
v25 = v22 + 1;
v26 = v24 >> 16;
v1[v22] = v26;
v27 = v25 + 1;
v28 = v24 >> 8;
v1[v25] = v28;
v29 = v27 + 1;
v1[v27] = v24;
return v29;
}
private static int _outputUptoMillion(char[], int, int, int)
{
int[] v13, v4;
int v1, v10, v11, v12, v14, v15, v16, v17, v18, v19, v2, v20, v21, v3, v5, v6, v7, v8, v9;
char[] v0;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v5 = v4[v2];
if v2 <= 9 goto label2;
if v2 <= 99 goto label1;
v6 = v1;
v1 = v1 + 1;
v7 = v5 >> 16;
v0[v6] = v7;
label1:
v8 = v1;
v1 = v1 + 1;
v9 = v5 >> 8;
v10 = v9 & 127;
v0[v8] = v10;
label2:
v11 = v1 + 1;
v12 = v5 & 127;
v0[v1] = v12;
v13 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v14 = v13[v3];
v15 = v11 + 1;
v16 = v14 >> 16;
v0[v11] = v16;
v17 = v15 + 1;
v18 = v14 >> 8;
v19 = v18 & 127;
v0[v15] = v19;
v20 = v17 + 1;
v21 = v14 & 127;
v0[v17] = v21;
return v20;
}
private static int _outputUptoMillion(byte[], int, int, int)
{
byte[] v0;
int[] v11, v4;
int v1, v10, v12, v13, v14, v15, v16, v17, v2, v3, v5, v6, v7, v8, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v5 = v4[v2];
if v2 <= 9 goto label2;
if v2 <= 99 goto label1;
v6 = v1;
v1 = v1 + 1;
v7 = v5 >> 16;
v0[v6] = v7;
label1:
v8 = v1;
v1 = v1 + 1;
v9 = v5 >> 8;
v0[v8] = v9;
label2:
v10 = v1 + 1;
v0[v1] = v5;
v11 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v12 = v11[v3];
v13 = v10 + 1;
v14 = v12 >> 16;
v0[v10] = v14;
v15 = v13 + 1;
v16 = v12 >> 8;
v0[v13] = v16;
v17 = v15 + 1;
v0[v15] = v12;
return v17;
}
private static int _leading3(int, char[], int)
{
int[] v3;
int v0, v10, v11, v2, v4, v5, v6, v7, v8, v9;
char[] v1;
v0 := @parameter0: int;
v1 := @parameter1: char[];
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v4 = v3[v0];
if v0 <= 9 goto label2;
if v0 <= 99 goto label1;
v5 = v2;
v2 = v2 + 1;
v6 = v4 >> 16;
v1[v5] = v6;
label1:
v7 = v2;
v2 = v2 + 1;
v8 = v4 >> 8;
v9 = v8 & 127;
v1[v7] = v9;
label2:
v10 = v2 + 1;
v11 = v4 & 127;
v1[v2] = v11;
return v10;
}
private static int _leading3(int, byte[], int)
{
byte[] v1;
int[] v3;
int v0, v2, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int;
v1 := @parameter1: byte[];
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v4 = v3[v0];
if v0 <= 9 goto label2;
if v0 <= 99 goto label1;
v5 = v2;
v2 = v2 + 1;
v6 = v4 >> 16;
v1[v5] = v6;
label1:
v7 = v2;
v2 = v2 + 1;
v8 = v4 >> 8;
v1[v7] = v8;
label2:
v9 = v2 + 1;
v1[v2] = v4;
return v9;
}
private static int _full3(int, char[], int)
{
int[] v3;
int v0, v10, v11, v2, v4, v5, v6, v7, v8, v9;
char[] v1;
v0 := @parameter0: int;
v1 := @parameter1: char[];
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v4 = v3[v0];
v5 = v2 + 1;
v6 = v4 >> 16;
v1[v2] = v6;
v7 = v5 + 1;
v8 = v4 >> 8;
v9 = v8 & 127;
v1[v5] = v9;
v10 = v7 + 1;
v11 = v4 & 127;
v1[v7] = v11;
return v10;
}
private static int _full3(int, byte[], int)
{
byte[] v1;
int[] v3;
int v0, v2, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int;
v1 := @parameter1: byte[];
v2 := @parameter2: int;
v3 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v4 = v3[v0];
v5 = v2 + 1;
v6 = v4 >> 16;
v1[v2] = v6;
v7 = v5 + 1;
v8 = v4 >> 8;
v1[v5] = v8;
v9 = v7 + 1;
v1[v7] = v4;
return v9;
}
private static int _outputSmallestL(char[], int)
{
int v1, v3, v5;
char[] v0;
java.lang.String v2, v4;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_LONG>;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_LONG>;
virtualinvoke v4.<java.lang.String: void getChars(int,int,char[],int)>(0, v3, v0, v1);
v5 = v1 + v3;
return v5;
}
private static int _outputSmallestL(byte[], int)
{
byte[] v0;
char v7;
int v1, v3, v4, v5;
java.lang.String v2, v6;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_LONG>;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v1;
v1 = v1 + 1;
v6 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_LONG>;
v7 = virtualinvoke v6.<java.lang.String: char charAt(int)>(v4);
v0[v5] = v7;
v4 = v4 + 1;
goto label1;
label2:
return v1;
}
private static int _outputSmallestI(char[], int)
{
int v1, v3, v5;
char[] v0;
java.lang.String v2, v4;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_INT>;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_INT>;
virtualinvoke v4.<java.lang.String: void getChars(int,int,char[],int)>(0, v3, v0, v1);
v5 = v1 + v3;
return v5;
}
private static int _outputSmallestI(byte[], int)
{
byte[] v0;
char v7;
int v1, v3, v4, v5;
java.lang.String v2, v6;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_INT>;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v1;
v1 = v1 + 1;
v6 = <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_INT>;
v7 = virtualinvoke v6.<java.lang.String: char charAt(int)>(v4);
v0[v5] = v7;
v4 = v4 + 1;
goto label1;
label2:
return v1;
}
static void <clinit>()
{
java.lang.String[] v16, v17;
int[] v14, v2;
int v10, v11, v12, v13, v15, v3, v4, v5, v6, v7, v8, v9;
java.lang.String v0, v1;
<com.fasterxml.jackson.core.io.NumberOutput: int MILLION> = 1000000;
<com.fasterxml.jackson.core.io.NumberOutput: int BILLION> = 1000000000;
<com.fasterxml.jackson.core.io.NumberOutput: long BILLION_L> = 1000000000L;
<com.fasterxml.jackson.core.io.NumberOutput: long MIN_INT_AS_LONG> = -2147483648L;
<com.fasterxml.jackson.core.io.NumberOutput: long MAX_INT_AS_LONG> = 2147483647L;
v0 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(-2147483648);
<com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_INT> = v0;
v1 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(-9223372036854775808L);
<com.fasterxml.jackson.core.io.NumberOutput: java.lang.String SMALLEST_LONG> = v1;
v2 = newarray (int)[1000];
<com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS> = v2;
v3 = 0;
v4 = 0;
label1:
if v4 >= 10 goto label6;
v5 = 0;
label2:
if v5 >= 10 goto label5;
v6 = 0;
label3:
if v6 >= 10 goto label4;
v7 = v4 + 48;
v8 = v7 << 16;
v9 = v5 + 48;
v10 = v9 << 8;
v11 = v8 | v10;
v12 = v6 + 48;
v13 = v11 | v12;
v14 = <com.fasterxml.jackson.core.io.NumberOutput: int[] TRIPLET_TO_CHARS>;
v15 = v3;
v3 = v3 + 1;
v14[v15] = v13;
v6 = v6 + 1;
goto label3;
label4:
v5 = v5 + 1;
goto label2;
label5:
v4 = v4 + 1;
goto label1;
label6:
v16 = newarray (java.lang.String)[11];
v16[0] = "0";
v16[1] = "1";
v16[2] = "2";
v16[3] = "3";
v16[4] = "4";
v16[5] = "5";
v16[6] = "6";
v16[7] = "7";
v16[8] = "8";
v16[9] = "9";
v16[10] = "10";
<com.fasterxml.jackson.core.io.NumberOutput: java.lang.String[] sSmallIntStrs> = v16;
v17 = newarray (java.lang.String)[10];
v17[0] = "-1";
v17[1] = "-2";
v17[2] = "-3";
v17[3] = "-4";
v17[4] = "-5";
v17[5] = "-6";
v17[6] = "-7";
v17[7] = "-8";
v17[8] = "-9";
v17[9] = "-10";
<com.fasterxml.jackson.core.io.NumberOutput: java.lang.String[] sSmallIntStrs2> = v17;
return;
}
}