public class com.fasterxml.jackson.core.json.WriterBasedJsonGenerator extends com.fasterxml.jackson.core.json.JsonGeneratorImpl
{
protected static final int SHORT_WRITE;
protected static final char[] HEX_CHARS_UPPER;
protected static final char[] HEX_CHARS_LOWER;
protected final java.io.Writer _writer;
protected char _quoteChar;
protected char[] _outputBuffer;
protected int _outputHead;
protected int _outputTail;
protected int _outputEnd;
protected char[] _entityBuffer;
protected com.fasterxml.jackson.core.SerializableString _currentEscape;
protected char[] _copyBuffer;
private char[] getHexChars()
{
char[] v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgWriteHexUppercase>;
if v1 == 0 goto label1;
v2 = <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS_UPPER>;
goto label2;
label1:
v2 = <com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS_LOWER>;
label2:
return v2;
}
public void <init>(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer)
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.io.IOContext v1;
int v2;
java.io.Writer v4;
com.fasterxml.jackson.core.ObjectCodec v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.ObjectCodec;
v4 := @parameter3: java.io.Writer;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,char)>(v1, v2, v3, v4, 34);
return;
}
public void <init>(com.fasterxml.jackson.core.io.IOContext, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer, char)
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
char v5;
com.fasterxml.jackson.core.ObjectCodec v3;
int[] v9;
com.fasterxml.jackson.core.io.IOContext v1;
int v2, v8;
java.io.Writer v4;
char[] v6, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.ObjectCodec;
v4 := @parameter3: java.io.Writer;
v5 := @parameter4: char;
specialinvoke v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: void <init>(com.fasterxml.jackson.core.io.IOContext,int,com.fasterxml.jackson.core.ObjectCodec)>(v1, v2, v3);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer> = v4;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.io.IOContext: char[] allocConcatBuffer()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer> = v6;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = lengthof v7;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd> = v8;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar> = v5;
if v5 == 34 goto label1;
v9 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: int[] get7BitOutputEscapes(int)>(v5);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes> = v9;
label1:
return;
}
public java.lang.Object getOutputTarget()
{
java.io.Writer v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
return v1;
}
public int getOutputBuffered()
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
v3 = v1 - v2;
v4 = staticinvoke <java.lang.Math: int max(int,int)>(0, v3);
return v4;
}
public boolean canWriteFormattedNumbers()
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
return 1;
}
public void writeFieldName(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v3;
java.lang.String v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v1);
if v3 != 4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");
label1:
if v3 != 1 goto label2;
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldName(java.lang.String,boolean)>(v1, v4);
return;
}
public void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v4;
java.lang.String v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v3);
if v4 != 4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");
label1:
if v4 != 1 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldName(com.fasterxml.jackson.core.SerializableString,boolean)>(v1, v5);
return;
}
protected final void _writeFieldName(java.lang.String, boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v12, v13, v15, v16, v18, v19, v4, v5, v6, v8, v9;
java.lang.String v1;
boolean v10, v2;
char v14, v20;
char[] v11, v17, v7;
com.fasterxml.jackson.core.PrettyPrinter v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v3 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writePPFieldName(java.lang.String,boolean)>(v1, v2);
return;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v4 + 1;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 < v6 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
if v2 == 0 goto label3;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
v7[v8] = 44;
label3:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;
if v10 == 0 goto label4;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(v1);
return;
label4:
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v13 = v12 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v13;
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v11[v12] = v14;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(v1);
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v15 < v16 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label5:
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v19 = v18 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v19;
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v17[v18] = v20;
return;
}
protected final void _writeFieldName(com.fasterxml.jackson.core.SerializableString, boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v12, v14, v15, v18, v19, v20, v21, v22, v23, v25, v26, v4, v5, v6, v8, v9;
boolean v10, v2;
char v16, v27;
char[] v11, v13, v17, v24, v7;
com.fasterxml.jackson.core.PrettyPrinter v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 := @parameter1: boolean;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v3 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writePPFieldName(com.fasterxml.jackson.core.SerializableString,boolean)>(v1, v2);
return;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v4 + 1;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 < v6 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
if v2 == 0 goto label3;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
v7[v8] = 44;
label3:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;
if v10 == 0 goto label4;
v11 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();
v12 = lengthof v11;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(v11, 0, v12);
return;
label4:
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v15 = v14 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v15;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v13[v14] = v16;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v19 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: int appendQuoted(char[],int)>(v17, v18);
if v19 >= 0 goto label5;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeFieldNameTail(com.fasterxml.jackson.core.SerializableString)>(v1);
return;
label5:
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v21 = v20 + v19;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v21;
v22 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v23 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v22 < v23 goto label6;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label6:
v24 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v25 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v26 = v25 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v26;
v27 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v24[v25] = v27;
return;
}
private final void _writeFieldNameTail(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
char v9;
int v3, v4, v5, v7, v8;
char[] v2, v6;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();
v3 = lengthof v2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(v2, 0, v3);
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v6[v7] = v9;
return;
}
public void writeStartArray() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v5, v6, v8, v9;
char[] v7;
com.fasterxml.jackson.core.PrettyPrinter v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v2;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v4.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label3;
label1:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 < v6 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
v7[v8] = 91;
label3:
return;
}
public void writeStartArray(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v3;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v6, v7, v9;
char[] v8;
java.lang.Object v1;
com.fasterxml.jackson.core.PrettyPrinter v4, v5;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v3;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v5.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label3;
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v6 < v7 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = v9 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v10;
v8[v9] = 91;
label3:
return;
}
public void writeStartArray(java.lang.Object, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v3, v4;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v2, v7, v8;
char[] v9;
java.lang.Object v1;
com.fasterxml.jackson.core.PrettyPrinter v5, v6;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an array");
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v4;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v5 == null goto label1;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v6.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartArray(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label3;
label1:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v7 < v8 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v10 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
v9[v10] = 91;
label3:
return;
}
public void writeEndArray() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v13, v14, v9;
java.lang.String v4, v5;
boolean v2;
com.fasterxml.jackson.core.json.JsonWriteContext v1, v15, v16, v3, v8;
char[] v12;
com.fasterxml.jackson.core.PrettyPrinter v6, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inArray()>();
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Current context not Array but \u0001");
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>(v5);
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v6 == null goto label2;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>();
interfaceinvoke v7.<com.fasterxml.jackson.core.PrettyPrinter: void writeEndArray(com.fasterxml.jackson.core.JsonGenerator,int)>(v0, v9);
goto label4;
label2:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v10 < v11 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v12[v13] = 93;
label4:
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v16;
return;
}
public void writeStartObject() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v5, v6, v8, v9;
char[] v7;
com.fasterxml.jackson.core.PrettyPrinter v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an object");
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v2;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v4.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label3;
label1:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 < v6 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
v7[v8] = 123;
label3:
return;
}
public void writeStartObject(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v3;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v6, v7, v9;
char[] v8;
java.lang.Object v1;
com.fasterxml.jackson.core.PrettyPrinter v4, v5;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("start an object");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v3;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v5.<com.fasterxml.jackson.core.PrettyPrinter: void writeStartObject(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label3;
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v6 < v7 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = v9 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v10;
v8[v9] = 123;
label3:
return;
}
public void writeStartObject(java.lang.Object, int) throws java.io.IOException
{
int v2;
java.lang.Object v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeStartObject(java.lang.Object)>(v1);
return;
}
public void writeEndObject() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v13, v14, v9;
java.lang.String v4, v5;
boolean v2;
com.fasterxml.jackson.core.json.JsonWriteContext v1, v15, v16, v3, v8;
char[] v12;
com.fasterxml.jackson.core.PrettyPrinter v6, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inObject()>();
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Current context not Object but \u0001");
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>(v5);
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v6 == null goto label2;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.json.JsonWriteContext: int getEntryCount()>();
interfaceinvoke v7.<com.fasterxml.jackson.core.PrettyPrinter: void writeEndObject(com.fasterxml.jackson.core.JsonGenerator,int)>(v0, v9);
goto label4;
label2:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v10 < v11 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v12[v13] = 125;
label4:
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext clearAndGetParent()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v16;
return;
}
protected final void _writePPFieldName(java.lang.String, boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v12, v13, v15, v16, v6, v7, v9;
java.lang.String v1;
boolean v2, v5;
char v11, v17;
char[] v14, v8;
com.fasterxml.jackson.core.PrettyPrinter v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v3.<com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v4.<com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)>(v0);
label2:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;
if v5 == 0 goto label3;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(v1);
goto label6;
label3:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v6 < v7 goto label4;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label4:
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = v9 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v10;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v8[v9] = v11;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(v1);
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v12 < v13 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label5:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v16;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v14[v15] = v17;
label6:
return;
}
protected final void _writePPFieldName(com.fasterxml.jackson.core.SerializableString, boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v11, v12, v14, v15, v16, v18, v19, v7, v8, v9;
boolean v2, v6;
char v13, v20;
char[] v10, v17, v5;
com.fasterxml.jackson.core.PrettyPrinter v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v3.<com.fasterxml.jackson.core.PrettyPrinter: void writeObjectEntrySeparator(com.fasterxml.jackson.core.JsonGenerator)>(v0);
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
interfaceinvoke v4.<com.fasterxml.jackson.core.PrettyPrinter: void beforeObjectEntries(com.fasterxml.jackson.core.JsonGenerator)>(v0);
label2:
v5 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgUnqNames>;
if v6 == 0 goto label3;
v7 = lengthof v5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(v5, 0, v7);
goto label6;
label3:
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v8 < v9 goto label4;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label4:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v12;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v10[v11] = v13;
v14 = lengthof v5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(v5, 0, v14);
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v15 < v16 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label5:
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v19 = v18 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v19;
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v17[v18] = v20;
label6:
return;
}
public void writeString(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
char v13, v7;
int v11, v12, v2, v3, v5, v6, v8, v9;
char[] v10, v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");
if v1 != null goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();
return;
label1:
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v2 < v3 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v6;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v4[v5] = v7;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(java.lang.String)>(v1);
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v8 < v9 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v12;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v10[v11] = v13;
return;
}
public void writeString(java.io.Reader, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v12, v13, v14, v15, v16, v18, v19, v2, v3, v4, v5, v6, v8, v9;
char v10, v20;
java.io.Reader v1;
char[] v11, v17, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("null reader");
return;
label1:
if v2 < 0 goto label2;
v3 = v2;
goto label3;
label2:
v3 = 2147483647;
label3:
v4 = v3;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 < v6 goto label4;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label4:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v7[v8] = v10;
v11 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateCopyBuffer()>();
label5:
if v4 <= 0 goto label6;
v12 = lengthof v11;
v13 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v12);
v14 = virtualinvoke v1.<java.io.Reader: int read(char[],int,int)>(v11, 0, v13);
if v14 <= 0 goto label6;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(char[],int,int)>(v11, 0, v14);
v4 = v4 - v14;
goto label5;
label6:
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v15 < v16 goto label7;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label7:
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v19 = v18 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v19;
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v17[v18] = v20;
if v4 <= 0 goto label8;
if v2 < 0 goto label8;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>("Didn\'t read enough from reader");
label8:
return;
}
public void writeString(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v13, v14, v2, v3, v4, v5, v7, v8;
char v15, v9;
char[] v1, v12, v6;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v6[v7] = v9;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString(char[],int,int)>(v1, v2, v3);
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v10 < v11 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v12[v13] = v15;
return;
}
public void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v10, v11, v12, v13, v14, v16, v17, v2, v3, v5, v6, v9;
char v18, v7;
char[] v15, v4, v8;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a string");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v2 < v3 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v6;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v4[v5] = v7;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: int appendQuoted(char[],int)>(v8, v9);
if v10 >= 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString2(com.fasterxml.jackson.core.SerializableString)>(v1);
return;
label2:
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v12 = v11 + v10;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v12;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v13 < v14 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v17 = v16 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v17;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v15[v16] = v18;
return;
}
private void _writeString2(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v10, v12, v13, v15, v16, v3, v4, v5, v6, v8, v9;
char v17;
java.io.Writer v11;
char[] v14, v2, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: char[] asQuotedChars()>();
v3 = lengthof v2;
if v3 >= 32 goto label2;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v4 - v5;
if v3 <= v6 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v7, v8, v3);
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = v9 + v3;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v10;
goto label3;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v11.<java.io.Writer: void write(char[],int,int)>(v2, 0, v3);
label3:
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v12 < v13 goto label4;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label4:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v16;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v14[v15] = v17;
return;
}
public void writeRawUTF8String(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeUTF8String(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v2, v3, v4, v5, v6, v7, v9;
char[] v8;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v3 - v4;
if v5 != 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v6 - v7;
label1:
if v5 < v2 goto label2;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(0, v2, v8, v9);
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v10 + v2;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
goto label3;
label2:
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRawLong(java.lang.String)>(v1);
label3:
return;
}
public void writeRaw(java.lang.String, int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v11, v12, v13, v14, v2, v3, v4, v5, v6, v7, v8, v9;
java.lang.String v1, v15;
char[] v10;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _checkRangeBoundsForString(java.lang.String,int,int)>(v1, v2, v3);
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v4 - v5;
if v6 >= v3 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v7 - v8;
label1:
if v6 < v3 goto label2;
v9 = v2 + v3;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(v2, v9, v10, v11);
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v13 = v12 + v3;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v13;
goto label3;
label2:
v14 = v2 + v3;
v15 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(v2, v14);
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRawLong(java.lang.String)>(v15);
label3:
return;
}
public void writeRaw(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v3, v4, v6, v7;
char[] v2;
java.lang.String v5;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: int appendUnquoted(char[],int)>(v2, v3);
if v4 >= 0 goto label1;
v5 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v5);
return;
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v6 + v4;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v7;
return;
}
public void writeRaw(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v2, v3, v4, v5, v6, v8, v9;
java.io.Writer v11;
char[] v1, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _checkRangeBoundsForCharArray(char[],int,int)>(v1, v2, v3);
if v3 >= 32 goto label2;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v4 - v5;
if v3 <= v6 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v2, v7, v8, v3);
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = v9 + v3;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v10;
return;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v11.<java.io.Writer: void write(char[],int,int)>(v1, v2, v3);
return;
}
public void writeRaw(char) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v2, v3, v5, v6;
char[] v4;
char v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v2 < v3 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v6;
v4[v5] = v1;
return;
}
private void writeRawLong(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v12, v13, v14, v16, v2, v3, v4, v6, v7, v8, v9;
java.lang.String v1;
char[] v15, v17, v5;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = v2 - v3;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(0, v4, v5, v6);
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v7 + v4;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v9 = v4;
v10 = virtualinvoke v1.<java.lang.String: int length()>();
v11 = v10 - v4;
label1:
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v11 <= v12 goto label2;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v14 = v9 + v13;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(v9, v14, v15, 0);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v13;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v9 = v9 + v13;
v11 = v11 - v13;
goto label1;
label2:
v16 = v9 + v11;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(v9, v16, v17, 0);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
return;
}
public void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
byte[] v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v11, v12, v13, v15, v16, v3, v4, v5, v6, v8, v9;
char v10, v17;
com.fasterxml.jackson.core.Base64Variant v1;
char[] v14, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _checkRangeBoundsForByteArray(byte[],int,int)>(v2, v3, v4);
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a binary value");
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 < v6 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v7[v8] = v10;
v11 = v3 + v4;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>(v1, v2, v3, v11);
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v12 < v13 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v16;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v14[v15] = v17;
return;
}
public int writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
java.lang.Throwable v16;
byte[] v11;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v12, v13, v18, v19, v21, v22, v3, v4, v5, v7, v8;
java.lang.String v14;
char v23, v9;
com.fasterxml.jackson.core.Base64Variant v1;
com.fasterxml.jackson.core.io.IOContext v10, v15, v17;
char[] v20, v6;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a binary value");
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v6[v7] = v9;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.core.io.IOContext: byte[] allocBase64Buffer()>();
label2:
if v3 >= 0 goto label3;
v12 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[])>(v1, v2, v11);
goto label5;
label3:
v13 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _writeBinary(com.fasterxml.jackson.core.Base64Variant,java.io.InputStream,byte[],int)>(v1, v2, v11, v3);
if v13 <= 0 goto label4;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v13, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Too few bytes available: missing \u0001 bytes (out of \u0001)");
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportError(java.lang.String)>(v14);
label4:
v12 = v3;
label5:
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
virtualinvoke v15.<com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(v11);
goto label7;
label6:
v16 := @caughtexception;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
virtualinvoke v17.<com.fasterxml.jackson.core.io.IOContext: void releaseBase64Buffer(byte[])>(v11);
throw v16;
label7:
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v19 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v18 < v19 goto label8;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label8:
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v21 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v22 = v21 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v22;
v23 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v20[v21] = v23;
return v12;
catch java.lang.Throwable from label2 to label5 with label6;
}
public void writeNumber(short) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
short v1;
int v3, v4, v5, v7, v8;
char[] v6;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: short;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedShort(short)>(v1);
return;
label1:
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = v3 + 6;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(v1, v6, v7);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
return;
}
private void _writeQuotedShort(short) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
short v1;
int v10, v11, v13, v14, v2, v3, v4, v6, v7;
char v15, v8;
char[] v12, v5, v9;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: short;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v2 + 8;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v3 < v4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v6 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v7;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v5[v6] = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(v1, v9, v10);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v12[v13] = v15;
return;
}
public void writeNumber(int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v1, v3, v4, v5, v7, v8;
char[] v6;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedInt(int)>(v1);
return;
label1:
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = v3 + 11;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(v1, v6, v7);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
return;
}
private void _writeQuotedInt(int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v1, v10, v11, v13, v14, v2, v3, v4, v6, v7;
char v15, v8;
char[] v12, v5, v9;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v2 + 13;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v3 < v4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v6 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v7;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v5[v6] = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputInt(int,char[],int)>(v1, v9, v10);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v12[v13] = v15;
return;
}
public void writeNumber(long) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
long v1;
int v3, v4, v5, v7, v8;
char[] v6;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: long;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedLong(long)>(v1);
return;
label1:
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = v3 + 21;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,char[],int)>(v1, v6, v7);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
return;
}
private void _writeQuotedLong(long) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
long v1;
int v10, v11, v13, v14, v2, v3, v4, v6, v7;
char v15, v8;
char[] v12, v5, v9;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: long;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v2 + 23;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v3 < v4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v7 = v6 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v7;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v5[v6] = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: int outputLong(long,char[],int)>(v1, v9, v10);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v12[v13] = v15;
return;
}
public void writeNumber(java.math.BigInteger) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
java.math.BigInteger v1;
java.lang.String v3, v4;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.math.BigInteger;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
if v1 != null goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();
goto label3;
label1:
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 == 0 goto label2;
v3 = virtualinvoke v1.<java.math.BigInteger: java.lang.String toString()>();
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(java.lang.String)>(v3);
goto label3;
label2:
v4 = virtualinvoke v1.<java.math.BigInteger: java.lang.String toString()>();
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v4);
label3:
return;
}
public void writeNumber(double) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v4, v6, v9;
java.lang.String v11, v8;
boolean v10, v2, v3, v5, v7;
double v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: double;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 != 0 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(double)>(v1);
if v3 == 0 goto label2;
v4 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v4);
if v5 == 0 goto label2;
label1:
v6 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v6);
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(double,boolean)>(v1, v7);
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeString(java.lang.String)>(v8);
return;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v9);
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(double,boolean)>(v1, v10);
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v11);
return;
}
public void writeNumber(float) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v4, v6, v9;
float v1;
java.lang.String v11, v8;
boolean v10, v2, v3, v5, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: float;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 != 0 goto label1;
v3 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(float)>(v1);
if v3 == 0 goto label2;
v4 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v4);
if v5 == 0 goto label2;
label1:
v6 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v6);
v8 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(float,boolean)>(v1, v7);
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeString(java.lang.String)>(v8);
return;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature USE_FAST_DOUBLE_WRITER>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v9);
v11 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(float,boolean)>(v1, v10);
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v11);
return;
}
public void writeNumber(java.math.BigDecimal) throws java.io.IOException
{
java.math.BigDecimal v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
java.lang.String v3, v4;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.math.BigDecimal;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
if v1 != null goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();
goto label3;
label1:
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.lang.String _asString(java.math.BigDecimal)>(v1);
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(java.lang.String)>(v3);
goto label3;
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.lang.String _asString(java.math.BigDecimal)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v4);
label3:
return;
}
public void writeNumber(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
if v1 != null goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();
goto label3;
label1:
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v2 == 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(java.lang.String)>(v1);
goto label3;
label2:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v1);
label3:
return;
}
public void writeNumber(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v2, v3;
char[] v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a number");
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean _cfgNumbersAsStrings>;
if v4 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeQuotedRaw(char[],int,int)>(v1, v2, v3);
goto label2;
label1:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(v1, v2, v3);
label2:
return;
}
private void _writeQuotedRaw(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
char v13, v7;
int v11, v12, v2, v3, v5, v6, v8, v9;
char[] v10, v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v2 < v3 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v5 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v6;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v4[v5] = v7;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v1);
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v8 < v9 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v12;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v10[v11] = v13;
return;
}
private void _writeQuotedRaw(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v13, v14, v2, v3, v4, v5, v7, v8;
char v15, v9;
char[] v1, v12, v6;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 < v5 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v6[v7] = v9;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(char[],int,int)>(v1, v2, v3);
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v10 < v11 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v14;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char _quoteChar>;
v12[v13] = v15;
return;
}
public void writeBoolean(boolean) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v10, v11, v12, v13, v2, v3, v4, v5, v7, v8, v9;
char[] v6;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: boolean;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a boolean value");
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v2 + 5;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v3 < v4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
if v1 == 0 goto label2;
v6[v5] = 116;
v7 = v5 + 1;
v6[v7] = 114;
v8 = v7 + 1;
v6[v8] = 117;
v9 = v8 + 1;
v6[v9] = 101;
goto label3;
label2:
v6[v5] = 102;
v10 = v5 + 1;
v6[v10] = 97;
v11 = v10 + 1;
v6[v11] = 108;
v12 = v11 + 1;
v6[v12] = 115;
v9 = v12 + 1;
v6[v9] = 101;
label3:
v13 = v9 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v13;
return;
}
public void writeNull() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyValueWrite(java.lang.String)>("write a null");
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeNull()>();
return;
}
protected final void _verifyValueWrite(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v6, v7;
char v5;
int v10, v12, v13, v3, v9;
char[] v11;
com.fasterxml.jackson.core.PrettyPrinter v4;
java.lang.String v1, v8;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.PrettyPrinter _cfgPrettyPrinter>;
if v4 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _verifyPrettyValueWrite(java.lang.String,int)>(v1, v3);
return;
label1:
tableswitch(v3)
{
case 0: goto label2;
case 1: goto label3;
case 2: goto label4;
case 3: goto label5;
case 4: goto label2;
case 5: goto label7;
default: goto label2;
};
label2:
return;
label3:
v5 = 44;
goto label8;
label4:
v5 = 58;
goto label8;
label5:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
if v6 == null goto label6;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _rootValueSeparator>;
v8 = interfaceinvoke v7.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeRaw(java.lang.String)>(v8);
label6:
return;
label7:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _reportCantWriteValueExpectName(java.lang.String)>(v1);
return;
label8:
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v9 < v10 goto label9;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label9:
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v13 = v12 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v13;
v11[v12] = v5;
return;
}
public void flush() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v2;
java.io.Writer v1, v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
if v1 == null goto label1;
v2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v2);
if v3 == 0 goto label1;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v4.<java.io.Writer: void flush()>();
label1:
return;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
boolean v11, v13, v16, v4, v6, v7;
com.fasterxml.jackson.core.JsonGenerator$Feature v12, v15, v3;
com.fasterxml.jackson.core.JsonStreamContext v5;
java.io.IOException v1, v8;
java.lang.Exception v18;
com.fasterxml.jackson.core.io.IOContext v10;
java.io.Writer v14, v17, v9;
char[] v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
specialinvoke v0.<com.fasterxml.jackson.core.json.JsonGeneratorImpl: void close()>();
v1 = null;
label01:
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
if v2 == null goto label04;
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_JSON_CONTENT>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v3);
if v4 == 0 goto label04;
label02:
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.JsonStreamContext getOutputContext()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>();
if v6 == 0 goto label03;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeEndArray()>();
goto label02;
label03:
v7 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>();
if v7 == 0 goto label04;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void writeEndObject()>();
goto label02;
label04:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label05:
goto label07;
label06:
v8 := @caughtexception;
v1 = v8;
label07:
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = 0;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
if v9 == null goto label14;
label08:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();
if v11 != 0 goto label09;
v12 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET>;
v13 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v12);
if v13 == 0 goto label10;
label09:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v14.<java.io.Writer: void close()>();
goto label14;
label10:
v15 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;
v16 = virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v15);
if v16 == 0 goto label14;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v17.<java.io.Writer: void flush()>();
label11:
goto label14;
label12:
v18 := @caughtexception;
if v1 == null goto label13;
virtualinvoke v18.<java.lang.Exception: void addSuppressed(java.lang.Throwable)>(v1);
label13:
throw v18;
label14:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _releaseBuffers()>();
if v1 == null goto label15;
throw v1;
label15:
return;
catch java.io.IOException from label01 to label05 with label06;
catch java.io.IOException from label08 to label11 with label12;
catch java.lang.RuntimeException from label08 to label11 with label12;
}
protected void _releaseBuffers()
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.io.IOContext v2, v4;
char[] v1, v3;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
if v1 == null goto label1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer> = null;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
virtualinvoke v2.<com.fasterxml.jackson.core.io.IOContext: void releaseConcatBuffer(char[])>(v1);
label1:
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer>;
if v3 == null goto label2;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer> = null;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
virtualinvoke v4.<com.fasterxml.jackson.core.io.IOContext: void releaseNameCopyBuffer(char[])>(v3);
label2:
return;
}
private void _writeString(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.io.CharacterEscapes v9;
int v10, v11, v2, v3, v4, v5, v6, v8;
char[] v7;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v2 <= v3 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeLongString(java.lang.String)>(v1);
return;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v4 + v2;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v5 <= v6 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(0, v2, v7, v8);
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
if v9 == null goto label3;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringCustom(int)>(v2);
goto label5;
label3:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
if v10 == 0 goto label4;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringASCII(int,int)>(v2, v11);
goto label5;
label4:
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeString2(int)>(v2);
label5:
return;
}
private void _writeString2(int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int[] v4;
int v1, v10, v11, v12, v13, v14, v15, v18, v2, v20, v21, v23, v3, v5, v6, v8;
char v22, v9;
java.io.Writer v16;
char[] v17, v19, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v2 + v1;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v5 = lengthof v4;
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v6 >= v3 goto label6;
label2:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v9 = v7[v8];
if v9 >= v5 goto label3;
v10 = v4[v9];
if v10 != 0 goto label4;
label3:
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v12;
if v12 >= v3 goto label6;
goto label2;
label4:
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
v15 = v13 - v14;
if v15 <= 0 goto label5;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
virtualinvoke v16.<java.io.Writer: void write(char[],int,int)>(v17, v18, v15);
label5:
v19 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v21 = v20 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v21;
v22 = v19[v20];
v23 = v4[v22];
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>(v22, v23);
goto label1;
label6:
return;
}
private void _writeLongString(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.io.CharacterEscapes v10;
int v11, v12, v2, v3, v4, v5, v6, v7, v8;
char[] v9;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = 0;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v5 = v3 + v4;
if v5 <= v2 goto label2;
v6 = v2 - v3;
goto label3;
label2:
v6 = v4;
label3:
v7 = v6;
v8 = v3 + v6;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v1.<java.lang.String: void getChars(int,int,char[],int)>(v3, v8, v9, 0);
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
if v10 == null goto label4;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegmentCustom(int)>(v6);
goto label6;
label4:
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
if v11 == 0 goto label5;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegmentASCII(int,int)>(v6, v12);
goto label6;
label5:
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeSegment(int)>(v6);
label6:
v3 = v3 + v7;
if v3 < v2 goto label1;
return;
}
private void _writeSegment(int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
char v7;
int[] v2;
int v1, v13, v3, v4, v5, v8, v9;
java.io.Writer v10;
char[] v11, v12, v6;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v3 = lengthof v2;
v4 = 0;
v5 = 0;
label1:
if v4 >= v1 goto label6;
label2:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v6[v4];
if v7 >= v3 goto label3;
v8 = v2[v7];
if v8 != 0 goto label4;
label3:
v4 = v4 + 1;
if v4 < v1 goto label2;
label4:
v9 = v4 - v5;
if v9 <= 0 goto label5;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v10.<java.io.Writer: void write(char[],int,int)>(v11, v5, v9);
if v4 >= v1 goto label6;
label5:
v4 = v4 + 1;
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = v2[v7];
v5 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>(v12, v4, v1, v7, v13);
goto label1;
label6:
return;
}
private void _writeString(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.io.CharacterEscapes v4;
int[] v8;
int v10, v12, v13, v14, v15, v16, v18, v19, v2, v20, v22, v24, v3, v5, v6, v7, v9;
char v11, v23;
java.io.Writer v21;
char[] v1, v17;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
if v4 == null goto label01;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringCustom(char[],int,int)>(v1, v2, v3);
return;
label01:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
if v5 == 0 goto label02;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _writeStringASCII(char[],int,int,int)>(v1, v2, v3, v6);
return;
label02:
v7 = v3 + v2;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v9 = lengthof v8;
label03:
if v2 >= v7 goto label10;
v10 = v2;
label04:
v11 = v1[v2];
if v11 >= v9 goto label05;
v12 = v8[v11];
if v12 != 0 goto label06;
label05:
v2 = v2 + 1;
if v2 < v7 goto label04;
label06:
v13 = v2 - v10;
if v13 >= 32 goto label08;
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v15 = v14 + v13;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v15 <= v16 goto label07;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label07:
if v13 <= 0 goto label09;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v10, v17, v18, v13);
v19 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v20 = v19 + v13;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v20;
goto label09;
label08:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v21 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v21.<java.io.Writer: void write(char[],int,int)>(v1, v10, v13);
label09:
if v2 >= v7 goto label10;
v22 = v2;
v2 = v2 + 1;
v23 = v1[v22];
v24 = v8[v23];
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _appendCharacterEscape(char,int)>(v23, v24);
goto label03;
label10:
return;
}
private void _writeStringASCII(int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int[] v5;
int v1, v11, v13, v14, v15, v16, v17, v18, v19, v2, v22, v23, v24, v3, v4, v6, v7, v8, v9;
char v12;
java.io.Writer v20;
char[] v10, v21;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = v3 + v1;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v6 = lengthof v5;
v7 = v2 + 1;
v8 = staticinvoke <java.lang.Math: int min(int,int)>(v6, v7);
label1:
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v9 >= v4 goto label7;
label2:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v12 = v10[v11];
if v12 >= v8 goto label3;
v13 = v5[v12];
if v13 == 0 goto label4;
goto label5;
label3:
if v12 <= v2 goto label4;
v14 = (int) -1;
v13 = v14;
goto label5;
label4:
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v16;
if v16 < v4 goto label2;
goto label7;
label5:
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
v19 = v17 - v18;
if v19 <= 0 goto label6;
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v21 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v22 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
virtualinvoke v20.<java.io.Writer: void write(char[],int,int)>(v21, v22, v19);
label6:
v23 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v24 = v23 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v24;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>(v12, v13);
goto label1;
label7:
return;
}
private void _writeSegmentASCII(int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int[] v3;
int v1, v12, v13, v2, v4, v5, v6, v7, v8, v9;
char v11;
java.io.Writer v14;
char[] v10, v15, v16;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v4 = lengthof v3;
v5 = v2 + 1;
v6 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v5);
v7 = 0;
v8 = 0;
v9 = 0;
label1:
if v7 >= v1 goto label7;
label2:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v11 = v10[v7];
if v11 >= v6 goto label3;
v8 = v3[v11];
if v8 == 0 goto label4;
goto label5;
label3:
if v11 <= v2 goto label4;
v12 = (int) -1;
v8 = v12;
goto label5;
label4:
v7 = v7 + 1;
if v7 < v1 goto label2;
label5:
v13 = v7 - v9;
if v13 <= 0 goto label6;
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v14.<java.io.Writer: void write(char[],int,int)>(v15, v9, v13);
if v7 >= v1 goto label7;
label6:
v7 = v7 + 1;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v9 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>(v16, v7, v1, v11, v8);
goto label1;
label7:
return;
}
private void _writeStringASCII(char[], int, int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int[] v6;
int v10, v11, v13, v14, v15, v16, v17, v19, v2, v20, v21, v3, v4, v5, v7, v8, v9;
char v12;
java.io.Writer v22;
char[] v1, v18;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v3 + v2;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v7 = lengthof v6;
v8 = v4 + 1;
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v7, v8);
v10 = 0;
label1:
if v2 >= v5 goto label9;
v11 = v2;
label2:
v12 = v1[v2];
if v12 >= v9 goto label3;
v10 = v6[v12];
if v10 == 0 goto label4;
goto label5;
label3:
if v12 <= v4 goto label4;
v13 = (int) -1;
v10 = v13;
goto label5;
label4:
v2 = v2 + 1;
if v2 < v5 goto label2;
label5:
v14 = v2 - v11;
if v14 >= 32 goto label7;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v15 + v14;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v16 <= v17 goto label6;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label6:
if v14 <= 0 goto label8;
v18 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v19 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v11, v18, v19, v14);
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v21 = v20 + v14;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v21;
goto label8;
label7:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v22 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v22.<java.io.Writer: void write(char[],int,int)>(v1, v11, v14);
label8:
if v2 >= v5 goto label9;
v2 = v2 + 1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _appendCharacterEscape(char,int)>(v12, v10);
goto label1;
label9:
return;
}
private void _writeStringCustom(int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v19;
com.fasterxml.jackson.core.io.CharacterEscapes v12;
int[] v4;
int v1, v10, v11, v13, v15, v17, v18, v2, v20, v21, v22, v23, v24, v25, v28, v29, v3, v30, v5, v6, v7, v8, v9;
char v16;
java.io.Writer v26;
char[] v14, v27;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v3 = v2 + v1;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
if v5 >= 1 goto label01;
v6 = (int) 65535;
v7 = v6;
goto label02;
label01:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
label02:
v8 = v7;
v9 = lengthof v4;
v10 = v7 + 1;
v11 = staticinvoke <java.lang.Math: int min(int,int)>(v9, v10);
v12 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
label03:
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v13 >= v3 goto label10;
label04:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v16 = v14[v15];
if v16 >= v11 goto label05;
v17 = v4[v16];
if v17 == 0 goto label07;
goto label08;
label05:
if v16 <= v8 goto label06;
v18 = (int) -1;
v17 = v18;
goto label08;
label06:
v19 = virtualinvoke v12.<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(v16);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape> = v19;
if v19 == null goto label07;
v20 = (int) -2;
v17 = v20;
goto label08;
label07:
v21 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v22 = v21 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v22;
if v22 < v3 goto label04;
goto label10;
label08:
v23 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v24 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
v25 = v23 - v24;
if v25 <= 0 goto label09;
v26 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v27 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v28 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
virtualinvoke v26.<java.io.Writer: void write(char[],int,int)>(v27, v28, v25);
label09:
v29 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v30 = v29 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v30;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _prependOrWriteCharacterEscape(char,int)>(v16, v17);
goto label03;
label10:
return;
}
private void _writeSegmentCustom(int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v17;
com.fasterxml.jackson.core.io.CharacterEscapes v10;
int[] v2;
int v1, v11, v12, v13, v16, v18, v19, v3, v4, v5, v6, v7, v8, v9;
char v15;
java.io.Writer v20;
char[] v14, v21, v22;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
if v3 >= 1 goto label01;
v4 = (int) 65535;
v5 = v4;
goto label02;
label01:
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
label02:
v6 = v5;
v7 = lengthof v2;
v8 = v5 + 1;
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v7, v8);
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v11 = 0;
v12 = 0;
v13 = 0;
label03:
if v11 >= v1 goto label10;
label04:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v15 = v14[v11];
if v15 >= v9 goto label05;
v12 = v2[v15];
if v12 == 0 goto label07;
goto label08;
label05:
if v15 <= v6 goto label06;
v16 = (int) -1;
v12 = v16;
goto label08;
label06:
v17 = virtualinvoke v10.<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(v15);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape> = v17;
if v17 == null goto label07;
v18 = (int) -2;
v12 = v18;
goto label08;
label07:
v11 = v11 + 1;
if v11 < v1 goto label04;
label08:
v19 = v11 - v13;
if v19 <= 0 goto label09;
v20 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v21 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v20.<java.io.Writer: void write(char[],int,int)>(v21, v13, v19);
if v11 >= v1 goto label10;
label09:
v11 = v11 + 1;
v22 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v13 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _prependOrWriteCharacterEscape(char[],int,int,char,int)>(v22, v11, v1, v15, v12);
goto label03;
label10:
return;
}
private void _writeStringCustom(char[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v18;
com.fasterxml.jackson.core.io.CharacterEscapes v13;
int[] v5;
int v10, v11, v12, v14, v15, v17, v19, v2, v20, v21, v22, v23, v25, v26, v27, v3, v4, v6, v7, v8, v9;
char v16;
java.io.Writer v28;
char[] v1, v24;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v3 + v2;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int[] _outputEscapes>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
if v6 >= 1 goto label01;
v7 = (int) 65535;
v8 = v7;
goto label02;
label01:
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _maximumNonEscapedChar>;
label02:
v9 = v8;
v10 = lengthof v5;
v11 = v8 + 1;
v12 = staticinvoke <java.lang.Math: int min(int,int)>(v10, v11);
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v14 = 0;
label03:
if v2 >= v4 goto label12;
v15 = v2;
label04:
v16 = v1[v2];
if v16 >= v12 goto label05;
v14 = v5[v16];
if v14 == 0 goto label07;
goto label08;
label05:
if v16 <= v9 goto label06;
v17 = (int) -1;
v14 = v17;
goto label08;
label06:
v18 = virtualinvoke v13.<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(v16);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape> = v18;
if v18 == null goto label07;
v19 = (int) -2;
v14 = v19;
goto label08;
label07:
v2 = v2 + 1;
if v2 < v4 goto label04;
label08:
v20 = v2 - v15;
if v20 >= 32 goto label10;
v21 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v22 = v21 + v20;
v23 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v22 <= v23 goto label09;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label09:
if v20 <= 0 goto label11;
v24 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v25 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v15, v24, v25, v20);
v26 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v27 = v26 + v20;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v27;
goto label11;
label10:
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v28 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v28.<java.io.Writer: void write(char[],int,int)>(v1, v15, v20);
label11:
if v2 >= v4 goto label12;
v2 = v2 + 1;
specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _appendCharacterEscape(char,int)>(v16, v14);
goto label03;
label12:
return;
}
protected final void _writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
byte[] v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
byte v12, v15, v19, v35, v37;
com.fasterxml.jackson.core.Base64Variant v1;
short v16, v20, v38;
int v10, v11, v13, v14, v17, v18, v21, v23, v24, v26, v27, v29, v3, v30, v31, v32, v33, v34, v36, v39, v4, v41, v42, v5, v6, v7, v8, v9;
char[] v22, v25, v28, v40;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v4 - 3;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v7 = v6 - 6;
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v9 = v8 >> 2;
label1:
if v3 > v5 goto label3;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v10 <= v7 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label2:
v11 = v3 + 1;
v12 = v2[v3];
v13 = v12 << 8;
v14 = v11 + 1;
v15 = v2[v11];
v16 = v15 & 255;
v17 = v13 | v16;
v18 = v17 << 8;
v3 = v14 + 1;
v19 = v2[v14];
v20 = v19 & 255;
v21 = v18 | v20;
v22 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v23 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v24 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,char[],int)>(v21, v22, v23);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v24;
v9 = v9 - 1;
if v9 > 0 goto label1;
v25 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v26 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v27 = v26 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v27;
v25[v26] = 92;
v28 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v29 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v30 = v29 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v30;
v28[v29] = 110;
v31 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v9 = v31 >> 2;
goto label1;
label3:
v32 = v4 - v3;
if v32 <= 0 goto label6;
v33 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v33 <= v7 goto label4;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label4:
v34 = v3 + 1;
v35 = v2[v3];
v36 = v35 << 16;
if v32 != 2 goto label5;
v37 = v2[v34];
v38 = v37 & 255;
v39 = v38 << 8;
v36 = v36 | v39;
label5:
v40 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v41 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v42 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(v36, v32, v40, v41);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v42;
label6:
return;
}
protected final int _writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[], int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
byte[] v3;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
byte v15, v18, v22, v37, v39, v42;
com.fasterxml.jackson.core.Base64Variant v1;
short v19, v23, v40;
int v10, v11, v12, v13, v14, v16, v17, v20, v21, v24, v26, v27, v29, v30, v32, v33, v34, v35, v36, v38, v4, v41, v44, v45, v5, v6, v7, v8, v9;
char[] v25, v28, v31, v43;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: byte[];
v4 := @parameter3: int;
v5 = 0;
v6 = 0;
v7 = (int) -3;
v8 = v7;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v10 = v9 - 6;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v12 = v11 >> 2;
label1:
if v4 <= 2 goto label4;
if v5 <= v8 goto label2;
v6 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(v2, v3, v5, v6, v4);
v5 = 0;
if v6 < 3 goto label4;
v8 = v6 - 3;
label2:
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v13 <= v10 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v14 = v5 + 1;
v15 = v3[v5];
v16 = v15 << 8;
v17 = v14 + 1;
v18 = v3[v14];
v19 = v18 & 255;
v20 = v16 | v19;
v21 = v20 << 8;
v5 = v17 + 1;
v22 = v3[v17];
v23 = v22 & 255;
v24 = v21 | v23;
v4 = v4 - 3;
v25 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v26 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v27 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,char[],int)>(v24, v25, v26);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v27;
v12 = v12 - 1;
if v12 > 0 goto label1;
v28 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v29 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v30 = v29 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v30;
v28[v29] = 92;
v31 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v32 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v33 = v32 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v33;
v31[v32] = 110;
v34 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v12 = v34 >> 2;
goto label1;
label4:
if v4 <= 0 goto label8;
v35 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(v2, v3, v5, v6, v4);
if v35 <= 0 goto label8;
v36 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v36 <= v10 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label5:
v37 = v3[0];
v38 = v37 << 16;
if 1 >= v35 goto label6;
v39 = v3[1];
v40 = v39 & 255;
v41 = v40 << 8;
v38 = v38 | v41;
v42 = 2;
goto label7;
label6:
v42 = 1;
label7:
v43 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v44 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v45 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(v38, v42, v43, v44);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v45;
v4 = v4 - v42;
label8:
return v4;
}
protected final int _writeBinary(com.fasterxml.jackson.core.Base64Variant, java.io.InputStream, byte[]) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
byte[] v3;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
byte v16, v19, v23, v37, v39, v40;
com.fasterxml.jackson.core.Base64Variant v1;
short v20, v24, v41;
int v10, v11, v12, v13, v14, v15, v17, v18, v21, v22, v25, v27, v28, v30, v31, v33, v34, v35, v36, v38, v4, v42, v44, v45, v5, v6, v7, v8, v9;
char[] v26, v29, v32, v43;
java.io.InputStream v2;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: byte[];
v4 = 0;
v5 = 0;
v6 = (int) -3;
v7 = v6;
v8 = 0;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
v10 = v9 - 6;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v12 = v11 >> 2;
label1:
if v4 <= v7 goto label2;
v13 = lengthof v3;
v5 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _readMore(java.io.InputStream,byte[],int,int,int)>(v2, v3, v4, v5, v13);
v4 = 0;
if v5 < 3 goto label4;
v7 = v5 - 3;
label2:
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v14 <= v10 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v15 = v4 + 1;
v16 = v3[v4];
v17 = v16 << 8;
v18 = v15 + 1;
v19 = v3[v15];
v20 = v19 & 255;
v21 = v17 | v20;
v22 = v21 << 8;
v4 = v18 + 1;
v23 = v3[v18];
v24 = v23 & 255;
v25 = v22 | v24;
v8 = v8 + 3;
v26 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v27 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int encodeBase64Chunk(int,char[],int)>(v25, v26, v27);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v28;
v12 = v12 - 1;
if v12 > 0 goto label1;
v29 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v30 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v31 = v30 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v31;
v29[v30] = 92;
v32 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v33 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v34 = v33 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v34;
v32[v33] = 110;
v35 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v12 = v35 >> 2;
goto label1;
label4:
if 0 >= v5 goto label7;
v36 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v36 <= v10 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label5:
v37 = v3[0];
v38 = v37 << 16;
v39 = 1;
if 1 >= v5 goto label6;
v40 = v3[1];
v41 = v40 & 255;
v42 = v41 << 8;
v38 = v38 | v42;
v39 = 2;
label6:
v8 = v8 + v39;
v43 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v44 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v45 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int encodeBase64Partial(int,int,char[],int)>(v38, v39, v43, v44);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v45;
label7:
return v8;
}
private int _readMore(java.io.InputStream, byte[], int, int, int) throws java.io.IOException
{
byte[] v2;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
byte v9;
int v10, v11, v12, v13, v14, v3, v4, v5, v6, v7, v8;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = 0;
label1:
if v3 >= v4 goto label2;
v7 = v6;
v6 = v6 + 1;
v8 = v3;
v3 = v3 + 1;
v9 = v2[v8];
v2[v7] = v9;
goto label1;
label2:
v10 = v6;
v11 = lengthof v2;
v12 = staticinvoke <java.lang.Math: int min(int,int)>(v5, v11);
label3:
v13 = v12 - v10;
if v13 == 0 goto label5;
v14 = virtualinvoke v1.<java.io.InputStream: int read(byte[],int,int)>(v2, v10, v13);
if v14 >= 0 goto label4;
return v10;
label4:
v10 = v10 + v14;
if v10 < 3 goto label3;
label5:
return v10;
}
private final void _writeNull() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v1, v2, v3, v4, v6, v7, v8, v9;
char[] v5;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v2 = v1 + 4;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v2 < v3 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v5[v4] = 110;
v6 = v4 + 1;
v5[v6] = 117;
v7 = v6 + 1;
v5[v7] = 108;
v8 = v7 + 1;
v5[v8] = 108;
v9 = v8 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v9;
return;
}
private void _prependOrWriteCharacterEscape(char, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
java.lang.String v57;
char[] v13, v15, v35, v6, v63, v8, v9;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v54, v56, v58;
java.io.Writer v11, v48, v53, v65;
com.fasterxml.jackson.core.io.CharacterEscapes v55;
int v10, v12, v14, v16, v17, v18, v19, v2, v20, v21, v22, v24, v25, v28, v29, v3, v30, v32, v36, v37, v38, v4, v40, v42, v44, v49, v5, v59, v60, v61, v62, v64, v7;
char v1, v23, v26, v27, v31, v33, v34, v39, v41, v43, v45, v46, v47, v50, v51, v52;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char;
v2 := @parameter1: int;
if v2 < 0 goto label03;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v3 < 2 goto label01;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v5 = v4 - 2;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v5;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v5 + 1;
v6[v5] = 92;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v8[v7] = v2;
return;
label01:
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;
if v9 != null goto label02;
v9 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();
label02:
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v10;
v9[1] = v2;
v11 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v11.<java.io.Writer: void write(char[],int,int)>(v9, 0, 2);
return;
label03:
v12 = (int) -2;
if v2 == v12 goto label10;
v13 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] getHexChars()>();
v14 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v14 < 6 goto label06;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v17 = v16 - 6;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v17;
v15[v17] = 92;
v18 = v17 + 1;
v15[v18] = 117;
if v1 <= 255 goto label04;
v19 = v1 >> 8;
v20 = v19 & 255;
v21 = v18 + 1;
v22 = v20 >> 4;
v23 = v13[v22];
v15[v21] = v23;
v24 = v21 + 1;
v25 = v20 & 15;
v26 = v13[v25];
v15[v24] = v26;
v27 = v1 & 255;
goto label05;
label04:
v28 = v18 + 1;
v15[v28] = 48;
v24 = v28 + 1;
v15[v24] = 48;
label05:
v29 = v24 + 1;
v30 = v1 >> 4;
v31 = v13[v30];
v15[v29] = v31;
v32 = v29 + 1;
v33 = v27 & 15;
v34 = v13[v33];
v15[v32] = v34;
return;
label06:
v35 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;
if v35 != null goto label07;
v35 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();
label07:
v36 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v36;
if v1 <= 255 goto label08;
v37 = v1 >> 8;
v38 = v37 & 255;
v39 = v27 & 255;
v40 = v38 >> 4;
v41 = v13[v40];
v35[10] = v41;
v42 = v38 & 15;
v43 = v13[v42];
v35[11] = v43;
v44 = v39 >> 4;
v45 = v13[v44];
v35[12] = v45;
v46 = v39 & 15;
v47 = v13[v46];
v35[13] = v47;
v48 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v48.<java.io.Writer: void write(char[],int,int)>(v35, 8, 6);
goto label09;
label08:
v49 = v1 >> 4;
v50 = v13[v49];
v35[6] = v50;
v51 = v27 & 15;
v52 = v13[v51];
v35[7] = v52;
v53 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v53.<java.io.Writer: void write(char[],int,int)>(v35, 2, 6);
label09:
return;
label10:
v54 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape>;
if v54 != null goto label11;
v55 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v56 = virtualinvoke v55.<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(v1);
v57 = interfaceinvoke v56.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
goto label12;
label11:
v58 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape>;
v57 = interfaceinvoke v58.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape> = null;
label12:
v59 = virtualinvoke v57.<java.lang.String: int length()>();
v60 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
if v60 < v59 goto label13;
v61 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v62 = v61 - v59;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v62;
v63 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v57.<java.lang.String: void getChars(int,int,char[],int)>(0, v59, v63, v62);
return;
label13:
v64 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v64;
v65 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v65.<java.io.Writer: void write(java.lang.String)>(v57);
return;
}
private int _prependOrWriteCharacterEscape(char[], int, int, char, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v48, v50, v52;
java.io.Writer v42, v47, v54, v8;
com.fasterxml.jackson.core.io.CharacterEscapes v49;
int v11, v12, v13, v14, v15, v16, v17, v19, v2, v20, v23, v24, v25, v3, v30, v31, v32, v34, v36, v38, v43, v5, v53, v6, v9;
java.lang.String v51;
char v18, v21, v22, v26, v27, v28, v33, v35, v37, v39, v4, v40, v41, v44, v45, v46;
char[] v1, v10, v29, v7;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: char;
v5 := @parameter4: int;
if v5 < 0 goto label04;
if v2 <= 1 goto label01;
if v2 >= v3 goto label01;
v2 = v2 - 2;
v1[v2] = 92;
v6 = v2 + 1;
v1[v6] = v5;
goto label03;
label01:
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;
if v7 != null goto label02;
v7 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();
label02:
v7[1] = v5;
v8 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v8.<java.io.Writer: void write(char[],int,int)>(v7, 0, 2);
label03:
return v2;
label04:
v9 = (int) -2;
if v5 == v9 goto label11;
v10 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] getHexChars()>();
if v2 <= 5 goto label07;
if v2 >= v3 goto label07;
v11 = v2 - 6;
v12 = v11 + 1;
v1[v11] = 92;
v13 = v12 + 1;
v1[v12] = 117;
if v4 <= 255 goto label05;
v14 = v4 >> 8;
v15 = v14 & 255;
v16 = v13 + 1;
v17 = v15 >> 4;
v18 = v10[v17];
v1[v13] = v18;
v19 = v16 + 1;
v20 = v15 & 15;
v21 = v10[v20];
v1[v16] = v21;
v22 = v4 & 255;
goto label06;
label05:
v23 = v13 + 1;
v1[v13] = 48;
v19 = v23 + 1;
v1[v23] = 48;
label06:
v24 = v19 + 1;
v25 = v4 >> 4;
v26 = v10[v25];
v1[v19] = v26;
v27 = v22 & 15;
v28 = v10[v27];
v1[v24] = v28;
v2 = v24 - 5;
goto label10;
label07:
v29 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer>;
if v29 != null goto label08;
v29 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _allocateEntityBuffer()>();
label08:
v30 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = v30;
if v4 <= 255 goto label09;
v31 = v4 >> 8;
v32 = v31 & 255;
v33 = v22 & 255;
v34 = v32 >> 4;
v35 = v10[v34];
v29[10] = v35;
v36 = v32 & 15;
v37 = v10[v36];
v29[11] = v37;
v38 = v33 >> 4;
v39 = v10[v38];
v29[12] = v39;
v40 = v33 & 15;
v41 = v10[v40];
v29[13] = v41;
v42 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v42.<java.io.Writer: void write(char[],int,int)>(v29, 8, 6);
goto label10;
label09:
v43 = v4 >> 4;
v44 = v10[v43];
v29[6] = v44;
v45 = v22 & 15;
v46 = v10[v45];
v29[7] = v46;
v47 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v47.<java.io.Writer: void write(char[],int,int)>(v29, 2, 6);
label10:
return v2;
label11:
v48 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape>;
if v48 != null goto label12;
v49 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v50 = virtualinvoke v49.<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(v4);
v51 = interfaceinvoke v50.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
goto label13;
label12:
v52 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape>;
v51 = interfaceinvoke v52.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape> = null;
label13:
v53 = virtualinvoke v51.<java.lang.String: int length()>();
if v2 < v53 goto label14;
if v2 >= v3 goto label14;
v2 = v2 - v53;
virtualinvoke v51.<java.lang.String: void getChars(int,int,char[],int)>(0, v53, v1, v2);
goto label15;
label14:
v54 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v54.<java.io.Writer: void write(java.lang.String)>(v51);
label15:
return v2;
}
private void _appendCharacterEscape(char, int) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.SerializableString v37, v39, v41;
java.io.Writer v47;
com.fasterxml.jackson.core.io.CharacterEscapes v38;
int v10, v11, v12, v13, v14, v15, v16, v19, v2, v20, v21, v22, v23, v24, v26, v27, v3, v30, v31, v32, v34, v4, v42, v43, v44, v45, v46, v49, v5, v50, v51, v7, v8;
java.lang.String v40;
char v1, v25, v28, v29, v33, v35, v36;
char[] v17, v18, v48, v6, v9;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 := @parameter0: char;
v2 := @parameter1: int;
if v2 < 0 goto label2;
v3 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v4 = v3 + 2;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v4 <= v5 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label1:
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v7 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v8;
v6[v7] = 92;
v9 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v10 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v11 = v10 + 1;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v11;
v9[v10] = v2;
return;
label2:
v12 = (int) -2;
if v2 == v12 goto label6;
v13 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v14 = v13 + 5;
v15 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v14 < v15 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
label3:
v16 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v17 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v18 = specialinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] getHexChars()>();
v19 = v16 + 1;
v17[v16] = 92;
v20 = v19 + 1;
v17[v19] = 117;
if v1 <= 255 goto label4;
v21 = v1 >> 8;
v22 = v21 & 255;
v23 = v20 + 1;
v24 = v22 >> 4;
v25 = v18[v24];
v17[v20] = v25;
v26 = v23 + 1;
v27 = v22 & 15;
v28 = v18[v27];
v17[v23] = v28;
v29 = v1 & 255;
goto label5;
label4:
v30 = v20 + 1;
v17[v20] = 48;
v26 = v30 + 1;
v17[v30] = 48;
label5:
v31 = v26 + 1;
v32 = v1 >> 4;
v33 = v18[v32];
v17[v26] = v33;
v34 = v31 + 1;
v35 = v29 & 15;
v36 = v18[v35];
v17[v31] = v36;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v34;
return;
label6:
v37 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape>;
if v37 != null goto label7;
v38 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.CharacterEscapes _characterEscapes>;
v39 = virtualinvoke v38.<com.fasterxml.jackson.core.io.CharacterEscapes: com.fasterxml.jackson.core.SerializableString getEscapeSequence(int)>(v1);
v40 = interfaceinvoke v39.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
goto label8;
label7:
v41 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape>;
v40 = interfaceinvoke v41.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.SerializableString _currentEscape> = null;
label8:
v42 = virtualinvoke v40.<java.lang.String: int length()>();
v43 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v44 = v43 + v42;
v45 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v44 <= v45 goto label9;
virtualinvoke v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: void _flushBuffer()>();
v46 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputEnd>;
if v42 <= v46 goto label9;
v47 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
virtualinvoke v47.<java.io.Writer: void write(java.lang.String)>(v40);
return;
label9:
v48 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
v49 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
virtualinvoke v40.<java.lang.String: void getChars(int,int,char[],int)>(0, v42, v48, v49);
v50 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v51 = v50 + v42;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = v51;
return;
}
private char[] _allocateEntityBuffer()
{
char[] v1;
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = newarray (char)[14];
v1[0] = 92;
v1[2] = 92;
v1[3] = 117;
v1[4] = 48;
v1[5] = 48;
v1[8] = 92;
v1[9] = 117;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _entityBuffer> = v1;
return v1;
}
private char[] _allocateCopyBuffer()
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
com.fasterxml.jackson.core.io.IOContext v2;
char[] v1, v3, v4;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.io.IOContext: char[] allocNameCopyBuffer(int)>(2000);
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _copyBuffer>;
return v4;
}
protected void _flushBuffer() throws java.io.IOException
{
com.fasterxml.jackson.core.json.WriterBasedJsonGenerator v0;
int v1, v2, v3, v4;
java.io.Writer v5;
char[] v6;
v0 := @this: com.fasterxml.jackson.core.json.WriterBasedJsonGenerator;
v1 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail>;
v2 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
v3 = v1 - v2;
if v3 <= 0 goto label1;
v4 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead>;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputHead> = 0;
v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: int _outputTail> = 0;
v5 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: java.io.Writer _writer>;
v6 = v0.<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] _outputBuffer>;
virtualinvoke v5.<java.io.Writer: void write(char[],int,int)>(v6, v4, v3);
label1:
return;
}
static void <clinit>()
{
char[] v0, v1;
v0 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars(boolean)>(1);
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS_UPPER> = v0;
v1 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars(boolean)>(0);
<com.fasterxml.jackson.core.json.WriterBasedJsonGenerator: char[] HEX_CHARS_LOWER> = v1;
return;
}
}