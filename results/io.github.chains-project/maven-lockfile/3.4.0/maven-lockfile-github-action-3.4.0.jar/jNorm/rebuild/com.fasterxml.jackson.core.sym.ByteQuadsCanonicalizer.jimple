public final class com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer extends java.lang.Object
{
private static final int DEFAULT_T_SIZE;
private static final int MAX_T_SIZE;
private static final int MIN_HASH_SIZE;
protected static final int MAX_ENTRIES_FOR_REUSE;
protected final com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent;
protected final java.util.concurrent.atomic.AtomicReference _tableInfo;
protected final int _seed;
protected final boolean _intern;
protected final boolean _failOnDoS;
protected int[] _hashArea;
protected int _hashSize;
protected int _secondaryStart;
protected int _tertiaryStart;
protected int _tertiaryShift;
protected int _count;
protected java.lang.String[] _names;
protected int _spilloverEnd;
protected int _longNameOffset;
protected boolean _hashShared;
private static final int MULT;
private static final int MULT2;
private static final int MULT3;
private void <init>(int, int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.util.concurrent.atomic.AtomicReference v6;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo v7;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent> = null;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = 0;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared> = 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed> = v2;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern> = 0;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _failOnDoS> = 1;
if v1 >= 16 goto label1;
v1 = 16;
goto label4;
label1:
v3 = v1 - 1;
v4 = v1 & v3;
if v4 == 0 goto label4;
v5 = 16;
label2:
if v5 >= v1 goto label3;
v5 = v5 + v5;
goto label2;
label3:
v1 = v5;
label4:
v6 = new java.util.concurrent.atomic.AtomicReference;
v7 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int)>(v1);
specialinvoke v6.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(v7);
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo> = v6;
return;
}
private void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer, int, com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo, boolean, boolean)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0, v1;
java.lang.String[] v16;
int[] v15;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo v3;
int v10, v11, v12, v13, v14, v17, v18, v2, v6, v7, v8, v9;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent> = v1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed> = v2;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern> = v4;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _failOnDoS> = v5;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo> = null;
v6 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int count>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = v6;
v7 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int size>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize> = v7;
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v9 = v8 << 2;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart> = v9;
v10 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v12 = v11 >> 1;
v13 = v10 + v12;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart> = v13;
v14 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int tertiaryShift>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift> = v14;
v15 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int[] mainHash>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea> = v15;
v16 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: java.lang.String[] names>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names> = v16;
v17 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int spilloverEnd>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd> = v17;
v18 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int longNameOffset>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _longNameOffset> = v18;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared> = 1;
return;
}
private void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v4;
int[] v3, v6;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo v1;
int v2, v5, v7;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent> = null;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed> = 0;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern> = 0;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _failOnDoS> = 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo> = null;
v2 = (int) -1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = v2;
v3 = v1.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int[] mainHash>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea> = v3;
v4 = v1.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: java.lang.String[] names>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names> = v4;
v5 = v1.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int size>;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize> = v5;
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v7 = lengthof v6;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart> = v7;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart> = v7;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift> = 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd> = v7;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _longNameOffset> = v7;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared> = 1;
return;
}
public static com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v4;
int v2, v3;
long v0, v1;
v0 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v1 = v0 >>> 32;
v2 = v0 + v1;
v3 = v2 | 1;
v4 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int)>(v3);
return v4;
}
protected static com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer createRoot(int)
{
int v0;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v1;
v0 := @parameter0: int;
v1 = new com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
specialinvoke v1.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void <init>(int,int)>(64, v0);
return v1;
}
public com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChild(int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0, v2;
java.util.concurrent.atomic.AtomicReference v4;
com.fasterxml.jackson.core.JsonFactory$Feature v6, v8;
int v1, v3;
java.lang.Object v5;
boolean v7, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 = new com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v6 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v1);
v8 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v1);
specialinvoke v2.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo,boolean,boolean)>(v0, v3, v5, v7, v9);
return v2;
}
public com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer makeChildOrPlaceholder(int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0, v12, v4;
java.util.concurrent.atomic.AtomicReference v13, v6;
com.fasterxml.jackson.core.JsonFactory$Feature v10, v2, v8;
int v1, v5;
java.lang.Object v14, v7;
boolean v11, v3, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature CANONICALIZE_FIELD_NAMES>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v1);
if v3 == 0 goto label1;
v4 = new com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
v7 = virtualinvoke v6.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v8 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature INTERN_FIELD_NAMES>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v1);
v10 = <com.fasterxml.jackson.core.JsonFactory$Feature: com.fasterxml.jackson.core.JsonFactory$Feature FAIL_ON_SYMBOL_HASH_OVERFLOW>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.core.JsonFactory$Feature: boolean enabledIn(int)>(v1);
specialinvoke v4.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer,int,com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo,boolean,boolean)>(v0, v5, v7, v9, v11);
return v4;
label1:
v12 = new com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
v14 = virtualinvoke v13.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
specialinvoke v12.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo)>(v14);
return v12;
}
public void release()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0, v1, v3;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo v4;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent>;
if v1 == null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean maybeDirty()>();
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent>;
v4 = new com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo;
specialinvoke v4.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: void <init>(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer)>(v0);
specialinvoke v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo)>(v4);
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared> = 1;
label1:
return;
}
private void mergeChild(com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo v1;
int v2, v5;
java.lang.Object v4;
java.util.concurrent.atomic.AtomicReference v3, v6;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo;
v2 = v1.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int count>;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v5 = v4.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int count>;
if v2 != v5 goto label1;
return;
label1:
if v2 <= 6000 goto label2;
v1 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo createInitial(int)>(64);
label2:
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
virtualinvoke v6.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(v4, v1);
return;
}
public int size()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v4, v5;
java.lang.Object v3;
java.util.concurrent.atomic.AtomicReference v1, v2;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.util.concurrent.atomic.AtomicReference _tableInfo>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
v4 = v3.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer$TableInfo: int count>;
return v4;
label1:
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
return v5;
}
public int bucketCount()
{
int v1;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
return v1;
}
public boolean maybeDirty()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared>;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public int hashSeed()
{
int v1;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
return v1;
}
public boolean isCanonicalizing()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0, v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public int primaryCount()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v4;
int v1, v2, v3, v5;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = 0;
v2 = 3;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
label1:
if v2 >= v3 goto label3;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v5 = v4[v2];
if v5 == 0 goto label2;
v1 = v1 + 1;
label2:
v2 = v2 + 4;
goto label1;
label3:
return v1;
}
public int secondaryCount()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v5;
int v1, v2, v3, v4, v6;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = 0;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v3 = v2 + 3;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
label1:
if v3 >= v4 goto label3;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v6 = v5[v3];
if v6 == 0 goto label2;
v1 = v1 + 1;
label2:
v3 = v3 + 4;
goto label1;
label3:
return v1;
}
public int tertiaryCount()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v6;
int v1, v2, v3, v4, v5, v7;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = 0;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v3 = v2 + 3;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v5 = v3 + v4;
label1:
if v3 >= v5 goto label3;
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v7 = v6[v3];
if v7 == 0 goto label2;
v1 = v1 + 1;
label2:
v3 = v3 + 4;
goto label1;
label3:
return v1;
}
public int spilloverCount()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
v3 = v1 - v2;
v4 = v3 >> 2;
return v4;
}
public int totalCount()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v5;
int v1, v2, v3, v4, v6;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = 0;
v2 = 3;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v4 = v3 << 3;
label1:
if v2 >= v4 goto label3;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v6 = v5[v2];
if v6 == 0 goto label2;
v1 = v1 + 1;
label2:
v2 = v2 + 4;
goto label1;
label3:
return v1;
}
public java.lang.String toString()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.Object[] v6;
java.lang.Integer v10, v12, v13, v14, v15, v16, v20, v21;
int v1, v11, v17, v18, v19, v2, v3, v4, v5, v9;
java.lang.String v22, v8;
java.lang.Class v7;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int primaryCount()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int secondaryCount()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int tertiaryCount()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int spilloverCount()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int totalCount()>();
v6 = newarray (java.lang.Object)[9];
v7 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v6[0] = v8;
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v9);
v6[1] = v10;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
v6[2] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v6[3] = v13;
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v6[4] = v14;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v6[5] = v15;
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v6[6] = v16;
v17 = v1 + v2;
v18 = v17 + v3;
v19 = v18 + v4;
v20 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v19);
v6[7] = v20;
v21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v6[8] = v21;
v22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("[%s: size=%d, hashSize=%d, %d/%d/%d/%d pri/sec/ter/spill (=%s), total:%d]", v6);
return v22;
}
public java.lang.String findName(int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v18, v8;
int[] v4;
int v1, v11, v12, v13, v14, v15, v16, v17, v19, v2, v3, v5, v6, v7, v9;
java.lang.String v10, v20, v21;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int)>(v1);
v3 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>(v2);
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v5 = v3 + 3;
v6 = v4[v5];
if v6 != 1 goto label1;
v7 = v4[v3];
if v7 != v1 goto label2;
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v9 = v3 >> 2;
v10 = v8[v9];
return v10;
label1:
if v6 != 0 goto label2;
return null;
label2:
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v12 = v3 >> 3;
v13 = v12 << 2;
v14 = v11 + v13;
v15 = v14 + 3;
v16 = v4[v15];
if v16 != 1 goto label3;
v17 = v4[v14];
if v17 != v1 goto label4;
v18 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v19 = v14 >> 2;
v20 = v18[v19];
return v20;
label3:
if v16 != 0 goto label4;
return null;
label4:
v21 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int)>(v3, v1);
return v21;
}
public java.lang.String findName(int, int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v11, v23;
int[] v5;
int v1, v10, v12, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v24, v3, v4, v6, v7, v8, v9;
java.lang.String v13, v25, v26;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int)>(v1, v2);
v4 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>(v3);
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v6 = v4 + 3;
v7 = v5[v6];
if v7 != 2 goto label1;
v8 = v5[v4];
if v1 != v8 goto label2;
v9 = v4 + 1;
v10 = v5[v9];
if v2 != v10 goto label2;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v12 = v4 >> 2;
v13 = v11[v12];
return v13;
label1:
if v7 != 0 goto label2;
return null;
label2:
v14 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v15 = v4 >> 3;
v16 = v15 << 2;
v17 = v14 + v16;
v18 = v17 + 3;
v19 = v5[v18];
if v19 != 2 goto label3;
v20 = v5[v17];
if v1 != v20 goto label4;
v21 = v17 + 1;
v22 = v5[v21];
if v2 != v22 goto label4;
v23 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v24 = v17 >> 2;
v25 = v23[v24];
return v25;
label3:
if v19 != 0 goto label4;
return null;
label4:
v26 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int,int)>(v4, v1, v2);
return v26;
}
public java.lang.String findName(int, int, int)
{
int[] v6;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v14, v28;
int v1, v10, v11, v12, v13, v15, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v29, v3, v4, v5, v7, v8, v9;
java.lang.String v16, v30, v31;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int,int)>(v1, v2, v3);
v5 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>(v4);
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v7 = v5 + 3;
v8 = v6[v7];
if v8 != 3 goto label1;
v9 = v6[v5];
if v1 != v9 goto label2;
v10 = v5 + 1;
v11 = v6[v10];
if v11 != v2 goto label2;
v12 = v5 + 2;
v13 = v6[v12];
if v13 != v3 goto label2;
v14 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v15 = v5 >> 2;
v16 = v14[v15];
return v16;
label1:
if v8 != 0 goto label2;
return null;
label2:
v17 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v18 = v5 >> 3;
v19 = v18 << 2;
v20 = v17 + v19;
v21 = v20 + 3;
v22 = v6[v21];
if v22 != 3 goto label3;
v23 = v6[v20];
if v1 != v23 goto label4;
v24 = v20 + 1;
v25 = v6[v24];
if v25 != v2 goto label4;
v26 = v20 + 2;
v27 = v6[v26];
if v27 != v3 goto label4;
v28 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v29 = v20 >> 2;
v30 = v28[v29];
return v30;
label3:
if v22 != 0 goto label4;
return null;
label4:
v31 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int,int,int)>(v5, v1, v2, v3);
return v31;
}
public java.lang.String findName(int[], int)
{
int[] v1, v14;
boolean v20, v33;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v21, v34;
int v10, v12, v13, v15, v16, v17, v18, v19, v2, v22, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v35, v4, v5, v7, v8;
java.lang.String v11, v23, v36, v37, v6, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int[];
v2 := @parameter1: int;
if v2 >= 4 goto label5;
tableswitch(v2)
{
case 1: goto label3;
case 2: goto label2;
case 3: goto label1;
default: goto label4;
};
label1:
v3 = v1[0];
v4 = v1[1];
v5 = v1[2];
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int,int,int)>(v3, v4, v5);
return v6;
label2:
v7 = v1[0];
v8 = v1[1];
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int,int)>(v7, v8);
return v9;
label3:
v10 = v1[0];
v11 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String findName(int)>(v10);
return v11;
label4:
return "";
label5:
v12 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int[],int)>(v1, v2);
v13 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>(v12);
v14 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v15 = v13 + 3;
v16 = v14[v15];
v17 = v14[v13];
if v12 != v17 goto label6;
if v16 != v2 goto label6;
v18 = v13 + 1;
v19 = v14[v18];
v20 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName(int[],int,int)>(v1, v2, v19);
if v20 == 0 goto label6;
v21 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v22 = v13 >> 2;
v23 = v21[v22];
return v23;
label6:
if v16 != 0 goto label7;
return null;
label7:
v24 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v25 = v13 >> 3;
v26 = v25 << 2;
v27 = v24 + v26;
v28 = v27 + 3;
v29 = v14[v28];
v30 = v14[v27];
if v12 != v30 goto label8;
if v29 != v2 goto label8;
v31 = v27 + 1;
v32 = v14[v31];
v33 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName(int[],int,int)>(v1, v2, v32);
if v33 == 0 goto label8;
v34 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v35 = v27 >> 2;
v36 = v34[v35];
return v36;
label8:
v37 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String _findSecondary(int,int,int[],int)>(v13, v12, v1, v2);
return v37;
}
private final int _calcOffset(int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v2, v3, v4, v5;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v3 = v2 - 1;
v4 = v1 & v3;
v5 = v4 << 2;
return v5;
}
private java.lang.String _findSecondary(int, int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v17, v25;
int[] v10;
int v1, v11, v12, v13, v14, v15, v16, v18, v2, v20, v21, v22, v23, v24, v26, v3, v4, v5, v6, v7, v8, v9;
java.lang.String v19, v27;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v5 = v4 + 2;
v6 = v1 >> v5;
v7 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v8 = v6 << v7;
v9 = v3 + v8;
v10 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v12 = 1 << v11;
v13 = v9 + v12;
label1:
if v9 >= v13 goto label4;
v14 = v9 + 3;
v15 = v10[v14];
v16 = v10[v9];
if v2 != v16 goto label2;
if 1 != v15 goto label2;
v17 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v18 = v9 >> 2;
v19 = v17[v18];
return v19;
label2:
if v15 != 0 goto label3;
return null;
label3:
v9 = v9 + 4;
goto label1;
label4:
v20 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
label5:
v21 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
if v20 >= v21 goto label7;
v22 = v10[v20];
if v2 != v22 goto label6;
v23 = v20 + 3;
v24 = v10[v23];
if 1 != v24 goto label6;
v25 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v26 = v20 >> 2;
v27 = v25[v26];
return v27;
label6:
v20 = v20 + 4;
goto label5;
label7:
return null;
}
private java.lang.String _findSecondary(int, int, int)
{
int[] v11;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v20, v30;
int v1, v10, v12, v13, v14, v15, v16, v17, v18, v19, v2, v21, v23, v24, v25, v26, v27, v28, v29, v3, v31, v4, v5, v6, v7, v8, v9;
java.lang.String v22, v32;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v6 = v5 + 2;
v7 = v1 >> v6;
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v9 = v7 << v8;
v10 = v4 + v9;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v13 = 1 << v12;
v14 = v10 + v13;
label1:
if v10 >= v14 goto label4;
v15 = v10 + 3;
v16 = v11[v15];
v17 = v11[v10];
if v2 != v17 goto label2;
v18 = v10 + 1;
v19 = v11[v18];
if v3 != v19 goto label2;
if 2 != v16 goto label2;
v20 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v21 = v10 >> 2;
v22 = v20[v21];
return v22;
label2:
if v16 != 0 goto label3;
return null;
label3:
v10 = v10 + 4;
goto label1;
label4:
v23 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
label5:
v24 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
if v23 >= v24 goto label7;
v25 = v11[v23];
if v2 != v25 goto label6;
v26 = v23 + 1;
v27 = v11[v26];
if v3 != v27 goto label6;
v28 = v23 + 3;
v29 = v11[v28];
if 2 != v29 goto label6;
v30 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v31 = v23 >> 2;
v32 = v30[v31];
return v32;
label6:
v23 = v23 + 4;
goto label5;
label7:
return null;
}
private java.lang.String _findSecondary(int, int, int, int)
{
int[] v12;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v23, v35;
int v1, v10, v11, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v24, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v36, v4, v5, v6, v7, v8, v9;
java.lang.String v25, v37;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v7 = v6 + 2;
v8 = v1 >> v7;
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v10 = v8 << v9;
v11 = v5 + v10;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v14 = 1 << v13;
v15 = v11 + v14;
label1:
if v11 >= v15 goto label4;
v16 = v11 + 3;
v17 = v12[v16];
v18 = v12[v11];
if v2 != v18 goto label2;
v19 = v11 + 1;
v20 = v12[v19];
if v3 != v20 goto label2;
v21 = v11 + 2;
v22 = v12[v21];
if v4 != v22 goto label2;
if 3 != v17 goto label2;
v23 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v24 = v11 >> 2;
v25 = v23[v24];
return v25;
label2:
if v17 != 0 goto label3;
return null;
label3:
v11 = v11 + 4;
goto label1;
label4:
v26 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
label5:
v27 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
if v26 >= v27 goto label7;
v28 = v12[v26];
if v2 != v28 goto label6;
v29 = v26 + 1;
v30 = v12[v29];
if v3 != v30 goto label6;
v31 = v26 + 2;
v32 = v12[v31];
if v4 != v32 goto label6;
v33 = v26 + 3;
v34 = v12[v33];
if 3 != v34 goto label6;
v35 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v36 = v26 >> 2;
v37 = v35[v36];
return v37;
label6:
v26 = v26 + 4;
goto label5;
label7:
return null;
}
private java.lang.String _findSecondary(int, int, int[], int)
{
int[] v12, v3;
boolean v21, v32;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v22, v33;
int v1, v10, v11, v13, v14, v15, v16, v17, v18, v19, v2, v20, v23, v25, v26, v27, v28, v29, v30, v31, v34, v4, v5, v6, v7, v8, v9;
java.lang.String v24, v35;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int[];
v4 := @parameter3: int;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v7 = v6 + 2;
v8 = v1 >> v7;
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v10 = v8 << v9;
v11 = v5 + v10;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v14 = 1 << v13;
v15 = v11 + v14;
label1:
if v11 >= v15 goto label4;
v16 = v11 + 3;
v17 = v12[v16];
v18 = v12[v11];
if v2 != v18 goto label2;
if v4 != v17 goto label2;
v19 = v11 + 1;
v20 = v12[v19];
v21 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName(int[],int,int)>(v3, v4, v20);
if v21 == 0 goto label2;
v22 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v23 = v11 >> 2;
v24 = v22[v23];
return v24;
label2:
if v17 != 0 goto label3;
return null;
label3:
v11 = v11 + 4;
goto label1;
label4:
v25 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
label5:
v26 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
if v25 >= v26 goto label7;
v27 = v12[v25];
if v2 != v27 goto label6;
v28 = v25 + 3;
v29 = v12[v28];
if v4 != v29 goto label6;
v30 = v25 + 1;
v31 = v12[v30];
v32 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName(int[],int,int)>(v3, v4, v31);
if v32 == 0 goto label6;
v33 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v34 = v25 >> 2;
v35 = v33[v34];
return v35;
label6:
v25 = v25 + 4;
goto label5;
label7:
return null;
}
private boolean _verifyLongName(int[], int, int)
{
int[] v1, v4;
boolean v6;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v5, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v5 = 0;
tableswitch(v2)
{
case 4: goto label06;
case 5: goto label05;
case 6: goto label04;
case 7: goto label03;
case 8: goto label02;
default: goto label01;
};
label01:
v6 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _verifyLongName2(int[],int,int)>(v1, v2, v3);
return v6;
label02:
v5 = 1;
v7 = v1[0];
v8 = v3;
v3 = v3 + 1;
v9 = v4[v8];
if v7 == v9 goto label03;
return 0;
label03:
v10 = v5;
v5 = v5 + 1;
v11 = v1[v10];
v12 = v3;
v3 = v3 + 1;
v13 = v4[v12];
if v11 == v13 goto label04;
return 0;
label04:
v14 = v5;
v5 = v5 + 1;
v15 = v1[v14];
v16 = v3;
v3 = v3 + 1;
v17 = v4[v16];
if v15 == v17 goto label05;
return 0;
label05:
v18 = v5;
v5 = v5 + 1;
v19 = v1[v18];
v20 = v3;
v3 = v3 + 1;
v21 = v4[v20];
if v19 == v21 goto label06;
return 0;
label06:
v22 = v5 + 1;
v23 = v1[v5];
v24 = v3 + 1;
v25 = v4[v3];
if v23 == v25 goto label07;
return 0;
label07:
v26 = v22 + 1;
v27 = v1[v22];
v28 = v24 + 1;
v29 = v4[v24];
if v27 == v29 goto label08;
return 0;
label08:
v30 = v26 + 1;
v31 = v1[v26];
v32 = v28 + 1;
v33 = v4[v28];
if v31 == v33 goto label09;
return 0;
label09:
v34 = v1[v30];
v35 = v4[v32];
if v34 == v35 goto label10;
return 0;
label10:
return 1;
}
private boolean _verifyLongName2(int[], int, int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v1, v7;
int v2, v3, v4, v5, v6, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = 0;
label1:
v5 = v4;
v4 = v4 + 1;
v6 = v1[v5];
v7 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v8 = v3;
v3 = v3 + 1;
v9 = v7[v8];
if v6 == v9 goto label2;
return 0;
label2:
if v4 < v2 goto label1;
return 1;
}
public java.lang.String addName(java.lang.String, int) throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v10;
com.fasterxml.jackson.core.util.InternCache v4;
int[] v7, v8;
int v11, v12, v13, v2, v5, v6, v9;
java.lang.String v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _verifySharing()>();
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern>;
if v3 == 0 goto label1;
v4 = <com.fasterxml.jackson.core.util.InternCache: com.fasterxml.jackson.core.util.InternCache instance>;
v1 = virtualinvoke v4.<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>(v1);
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int)>(v2);
v6 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v5);
v7 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v7[v6] = v2;
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v9 = v6 + 3;
v8[v9] = 1;
v10 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v11 = v6 >> 2;
v10[v11] = v1;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v13 = v12 + 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = v13;
return v1;
}
public java.lang.String addName(java.lang.String, int, int) throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v13;
com.fasterxml.jackson.core.util.InternCache v5;
int[] v11, v8, v9;
int v10, v12, v14, v15, v16, v2, v3, v6, v7;
java.lang.String v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _verifySharing()>();
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern>;
if v4 == 0 goto label1;
v5 = <com.fasterxml.jackson.core.util.InternCache: com.fasterxml.jackson.core.util.InternCache instance>;
v1 = virtualinvoke v5.<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>(v1);
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int)>(v2, v3);
v7 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v6);
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v8[v7] = v2;
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v10 = v7 + 1;
v9[v10] = v3;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v12 = v7 + 3;
v11[v12] = 2;
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v14 = v7 >> 2;
v13[v14] = v1;
v15 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = v16;
return v1;
}
public java.lang.String addName(java.lang.String, int, int, int) throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v16;
com.fasterxml.jackson.core.util.InternCache v6;
int[] v10, v12, v14, v9;
int v11, v13, v15, v17, v18, v19, v2, v3, v4, v7, v8;
java.lang.String v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _verifySharing()>();
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern>;
if v5 == 0 goto label1;
v6 = <com.fasterxml.jackson.core.util.InternCache: com.fasterxml.jackson.core.util.InternCache instance>;
v1 = virtualinvoke v6.<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>(v1);
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int,int)>(v2, v3, v4);
v8 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v7);
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v9[v8] = v2;
v10 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v11 = v8 + 1;
v10[v11] = v3;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v13 = v8 + 2;
v12[v13] = v4;
v14 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v15 = v8 + 3;
v14[v15] = 3;
v16 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v17 = v8 >> 2;
v16[v17] = v1;
v18 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v19 = v18 + 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = v19;
return v1;
}
public java.lang.String addName(java.lang.String, int[], int) throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
int[] v11, v16, v18, v2, v21, v27, v29, v32, v35, v38, v40, v42, v9;
boolean v4;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v44;
com.fasterxml.jackson.core.util.InternCache v5;
int v10, v12, v13, v14, v15, v17, v19, v20, v22, v23, v24, v25, v26, v28, v3, v30, v31, v33, v34, v36, v37, v39, v41, v43, v45, v46, v47, v6, v7, v8;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int[];
v3 := @parameter2: int;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _verifySharing()>();
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _intern>;
if v4 == 0 goto label1;
v5 = <com.fasterxml.jackson.core.util.InternCache: com.fasterxml.jackson.core.util.InternCache instance>;
v1 = virtualinvoke v5.<com.fasterxml.jackson.core.util.InternCache: java.lang.String intern(java.lang.String)>(v1);
label1:
tableswitch(v3)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
default: goto label5;
};
label2:
v6 = v2[0];
v7 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int)>(v6);
v8 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v7);
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v10 = v2[0];
v9[v8] = v10;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v12 = v8 + 3;
v11[v12] = 1;
goto label6;
label3:
v13 = v2[0];
v14 = v2[1];
v15 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int)>(v13, v14);
v8 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v15);
v16 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v17 = v2[0];
v16[v8] = v17;
v18 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v19 = v8 + 1;
v20 = v2[1];
v18[v19] = v20;
v21 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v22 = v8 + 3;
v21[v22] = 2;
goto label6;
label4:
v23 = v2[0];
v24 = v2[1];
v25 = v2[2];
v26 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int,int,int)>(v23, v24, v25);
v8 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v26);
v27 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v28 = v2[0];
v27[v8] = v28;
v29 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v30 = v8 + 1;
v31 = v2[1];
v29[v30] = v31;
v32 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v33 = v8 + 2;
v34 = v2[2];
v32[v33] = v34;
v35 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v36 = v8 + 3;
v35[v36] = 3;
goto label6;
label5:
v37 = virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int calcHash(int[],int)>(v2, v3);
v8 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _findOffsetForAdd(int)>(v37);
v38 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v38[v8] = v37;
v39 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _appendLongName(int[],int)>(v2, v3);
v40 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v41 = v8 + 1;
v40[v41] = v39;
v42 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v43 = v8 + 3;
v42[v43] = v3;
label6:
v44 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v45 = v8 >> 2;
v44[v45] = v1;
v46 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v47 = v46 + 1;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = v47;
return v1;
}
private void _verifySharing()
{
java.lang.IllegalStateException v4, v5;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0, v2;
java.lang.Object[] v13;
java.lang.String[] v10, v11;
int[] v6, v7, v9;
int v12, v3, v8;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared>;
if v1 == 0 goto label3;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer _parent>;
if v2 != null goto label2;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
if v3 != 0 goto label1;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error: Cannot add names to Root symbol table");
throw v4;
label1:
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Internal error: Cannot add names to Placeholder symbol table");
throw v5;
label2:
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v7 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v8 = lengthof v7;
v9 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(v6, v8);
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea> = v9;
v10 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v12 = lengthof v11;
v13 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v10, v12);
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names> = v13;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared> = 0;
label3:
return;
}
private int _findOffsetForAdd(int) throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
int[] v3;
boolean v32, v6;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v33, v4, v5, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>(v1);
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v4 = v2 + 3;
v5 = v3[v4];
if v5 != 0 goto label1;
return v2;
label1:
v6 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _checkNeedForRehash()>();
if v6 == 0 goto label2;
v7 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _resizeAndFindOffsetForAdd(int)>(v1);
return v7;
label2:
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v9 = v2 >> 3;
v10 = v9 << 2;
v11 = v8 + v10;
v12 = v11 + 3;
v13 = v3[v12];
if v13 != 0 goto label3;
return v11;
label3:
v14 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v15 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v16 = v15 + 2;
v17 = v2 >> v16;
v18 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v19 = v17 << v18;
v20 = v14 + v19;
v21 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v22 = 1 << v21;
v23 = v20 + v22;
label4:
if v20 >= v23 goto label6;
v24 = v20 + 3;
v25 = v3[v24];
if v25 != 0 goto label5;
return v20;
label5:
v20 = v20 + 4;
goto label4;
label6:
v26 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
v27 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
v28 = v27 + 4;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd> = v28;
v29 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v30 = v29 << 3;
v31 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
if v31 < v30 goto label8;
v32 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _failOnDoS>;
if v32 == 0 goto label7;
virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void _reportTooManyCollisions()>();
label7:
v33 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _resizeAndFindOffsetForAdd(int)>(v1);
return v33;
label8:
return v26;
}
private int _resizeAndFindOffsetForAdd(int) throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v3;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void rehash()>();
v2 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcOffset(int)>(v1);
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v4 = v2 + 3;
v5 = v3[v4];
if v5 != 0 goto label1;
return v2;
label1:
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v7 = v2 >> 3;
v8 = v7 << 2;
v9 = v6 + v8;
v10 = v9 + 3;
v11 = v3[v10];
if v11 != 0 goto label2;
return v9;
label2:
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart>;
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v14 = v13 + 2;
v15 = v2 >> v14;
v16 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v17 = v15 << v16;
v18 = v12 + v17;
v19 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift>;
v20 = 1 << v19;
v21 = v18 + v20;
label3:
if v18 >= v21 goto label5;
v22 = v18 + 3;
v23 = v3[v22];
if v23 != 0 goto label4;
return v18;
label4:
v18 = v18 + 4;
goto label3;
label5:
v24 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
v25 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
v26 = v25 + 4;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd> = v26;
return v24;
}
private boolean _checkNeedForRehash()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
byte v14;
int v1, v10, v11, v12, v2, v3, v4, v5, v6, v7, v8, v9;
double v13;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v3 = v2 >> 1;
if v1 <= v3 goto label2;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
v5 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
v6 = v4 - v5;
v7 = v6 >> 2;
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v9 = 1 + v8;
v10 = v9 >> 7;
if v7 > v10 goto label1;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v13 = v12 * 0.8;
v14 = v11 cmpl v13;
if v14 <= 0 goto label2;
label1:
return 1;
label2:
return 0;
}
private int _appendLongName(int[], int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v1, v13, v17, v18, v19, v5, v8;
int v10, v11, v12, v14, v15, v16, v2, v20, v21, v3, v4, v6, v7, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int[];
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _longNameOffset>;
v4 = v3 + v2;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v6 = lengthof v5;
if v4 <= v6 goto label1;
v7 = v3 + v2;
v8 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v9 = lengthof v8;
v10 = v7 - v9;
v11 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v12 = staticinvoke <java.lang.Math: int min(int,int)>(4096, v11);
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v14 = lengthof v13;
v15 = staticinvoke <java.lang.Math: int max(int,int)>(v10, v12);
v16 = v14 + v15;
v17 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v18 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(v17, v16);
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea> = v18;
label1:
v19 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, 0, v19, v3, v2);
v20 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _longNameOffset>;
v21 = v20 + v2;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _longNameOffset> = v21;
return v3;
}
public int calcHash(int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
v3 = v1 ^ v2;
v4 = v3 >>> 16;
v5 = v3 + v4;
v6 = v5 << 3;
v7 = v5 ^ v6;
v8 = v7 >>> 12;
v9 = v7 + v8;
return v9;
}
public int calcHash(int, int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v1 >>> 15;
v4 = v1 + v3;
v5 = v4 >>> 9;
v6 = v4 ^ v5;
v7 = v2 * 33;
v8 = v6 + v7;
v9 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
v10 = v8 ^ v9;
v11 = v10 >>> 16;
v12 = v10 + v11;
v13 = v12 >>> 4;
v14 = v12 ^ v13;
v15 = v14 << 3;
v16 = v14 + v15;
return v16;
}
public int calcHash(int, int, int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
v5 = v1 ^ v4;
v6 = v5 >>> 9;
v7 = v5 + v6;
v8 = v7 * 31;
v9 = v8 + v2;
v10 = v9 * 33;
v11 = v10 >>> 15;
v12 = v10 + v11;
v13 = v12 ^ v3;
v14 = v13 >>> 4;
v15 = v13 + v14;
v16 = v15 >>> 15;
v17 = v15 + v16;
v18 = v17 << 9;
v19 = v17 ^ v18;
return v19;
}
public int calcHash(int[], int)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v1;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v4, v5, v6, v7, v8, v9;
java.lang.IllegalArgumentException v3;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: int[];
v2 := @parameter1: int;
if v2 >= 4 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("qlen is too short, needs to be at least 4");
throw v3;
label1:
v4 = v1[0];
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _seed>;
v6 = v4 ^ v5;
v7 = v6 >>> 9;
v8 = v6 + v7;
v9 = v1[1];
v10 = v8 + v9;
v11 = v10 >>> 15;
v12 = v10 + v11;
v13 = v12 * 33;
v14 = v1[2];
v15 = v13 ^ v14;
v16 = v15 >>> 4;
v17 = v15 + v16;
v18 = 3;
label2:
if v18 >= v2 goto label3;
v19 = v1[v18];
v20 = v19 >> 21;
v21 = v19 ^ v20;
v17 = v17 + v21;
v18 = v18 + 1;
goto label2;
label3:
v22 = v17 * 65599;
v23 = v22 >>> 19;
v24 = v22 + v23;
v25 = v24 << 5;
v26 = v24 ^ v25;
return v26;
}
private void rehash() throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
java.lang.IllegalStateException v39;
int[] v1, v10, v21;
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
java.lang.String[] v19, v2;
int v11, v12, v13, v14, v15, v16, v17, v18, v20, v22, v23, v24, v25, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v4, v5, v6, v7, v8, v9;
java.lang.String v26, v40;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: boolean _hashShared> = 0;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
v2 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v5 = v3 + v3;
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd>;
if v5 <= 65536 goto label01;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void nukeSymbols(boolean)>(1);
return;
label01:
v7 = lengthof v1;
v8 = v3 << 3;
v9 = v7 + v8;
v10 = newarray (int)[v9];
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea> = v10;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize> = v5;
v11 = v5 << 2;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart> = v11;
v12 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v13 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _secondaryStart>;
v14 = v13 >> 1;
v15 = v12 + v14;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryStart> = v15;
v16 = staticinvoke <com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _calcTertiaryShift(int)>(v5);
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _tertiaryShift> = v16;
v17 = lengthof v2;
v18 = v17 << 1;
v19 = newarray (java.lang.String)[v18];
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names> = v19;
specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: void nukeSymbols(boolean)>(0);
v20 = 0;
v21 = newarray (int)[16];
v22 = 0;
label02:
if v22 >= v6 goto label09;
v23 = v22 + 3;
v24 = v1[v23];
if v24 == 0 goto label08;
v20 = v20 + 1;
v25 = v22 >> 2;
v26 = v2[v25];
tableswitch(v24)
{
case 1: goto label03;
case 2: goto label04;
case 3: goto label05;
default: goto label06;
};
label03:
v27 = v1[v22];
v21[0] = v27;
virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String addName(java.lang.String,int[],int)>(v26, v21, 1);
goto label08;
label04:
v28 = v1[v22];
v21[0] = v28;
v29 = v22 + 1;
v30 = v1[v29];
v21[1] = v30;
virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String addName(java.lang.String,int[],int)>(v26, v21, 2);
goto label08;
label05:
v31 = v1[v22];
v21[0] = v31;
v32 = v22 + 1;
v33 = v1[v32];
v21[1] = v33;
v34 = v22 + 2;
v35 = v1[v34];
v21[2] = v35;
virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String addName(java.lang.String,int[],int)>(v26, v21, 3);
goto label08;
label06:
v36 = lengthof v21;
if v24 <= v36 goto label07;
v21 = newarray (int)[v24];
label07:
v37 = v22 + 1;
v38 = v1[v37];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v38, v21, 0, v24);
virtualinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String addName(java.lang.String,int[],int)>(v26, v21, v24);
label08:
v22 = v22 + 4;
goto label02;
label09:
if v20 == v4 goto label10;
v39 = new java.lang.IllegalStateException;
v40 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v4, v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Internal error: Failed rehash(), old count=\u0001, copyCount=\u0001");
specialinvoke v39.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v40);
throw v39;
label10:
return;
}
private void nukeSymbols(boolean)
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int[] v5;
int v2, v3, v4;
java.lang.String[] v6;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 := @parameter0: boolean;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count> = 0;
v2 = specialinvoke v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverStart()>();
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _spilloverEnd> = v2;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v4 = v3 << 3;
v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _longNameOffset> = v4;
if v1 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int[] _hashArea>;
staticinvoke <java.util.Arrays: void fill(int[],int)>(v5, 0);
v6 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: java.lang.String[] _names>;
staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>(v6, null);
label1:
return;
}
private final int _spilloverStart()
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v2, v3;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v2 = v1 << 3;
v3 = v2 - v1;
return v3;
}
protected void _reportTooManyCollisions() throws com.fasterxml.jackson.core.exc.StreamConstraintsException
{
com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer v0;
int v1, v3, v4, v5, v6;
java.lang.String v7;
com.fasterxml.jackson.core.exc.StreamConstraintsException v2;
v0 := @this: com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer;
v1 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
if v1 > 1024 goto label1;
return;
label1:
v2 = new com.fasterxml.jackson.core.exc.StreamConstraintsException;
v3 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _count>;
v4 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v5 = v0.<com.fasterxml.jackson.core.sym.ByteQuadsCanonicalizer: int _hashSize>;
v6 = v5 >> 3;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v3, v4, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Spill-over slots in symbol table with \u0001 entries, hash area of \u0001 slots is now full (all \u0001 slots -- suspect a DoS attack based on hash collisions. You can disable the check via `JsonFactory.Feature.FAIL_ON_SYMBOL_HASH_OVERFLOW`");
specialinvoke v2.<com.fasterxml.jackson.core.exc.StreamConstraintsException: void <init>(java.lang.String)>(v7);
throw v2;
}
static int _calcTertiaryShift(int)
{
int v0, v1;
v0 := @parameter0: int;
v1 = v0 >> 2;
if v1 >= 64 goto label1;
return 4;
label1:
if v1 > 256 goto label2;
return 5;
label2:
if v1 > 1024 goto label3;
return 6;
label3:
return 7;
}
}