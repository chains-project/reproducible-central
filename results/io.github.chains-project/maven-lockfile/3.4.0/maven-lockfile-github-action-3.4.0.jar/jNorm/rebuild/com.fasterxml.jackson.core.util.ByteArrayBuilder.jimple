public final class com.fasterxml.jackson.core.util.ByteArrayBuilder extends java.io.OutputStream
{
public static final byte[] NO_BYTES;
private static final int INITIAL_BLOCK_SIZE;
private static final int MAX_BLOCK_SIZE;
static final int DEFAULT_BLOCK_ARRAY_SIZE;
private final com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler;
private final java.util.LinkedList _pastBlocks;
private int _pastLen;
private byte[] _currBlock;
private int _currBlockPtr;
public void <init>()
{
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
specialinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>(null);
return;
}
public void <init>(com.fasterxml.jackson.core.util.BufferRecycler)
{
com.fasterxml.jackson.core.util.BufferRecycler v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
specialinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int)>(v1, 500);
return;
}
public void <init>(int)
{
int v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
specialinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,int)>(null, v1);
return;
}
public void <init>(com.fasterxml.jackson.core.util.BufferRecycler, int)
{
byte[] v4;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v2;
java.util.LinkedList v3;
com.fasterxml.jackson.core.util.BufferRecycler v1;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
v2 := @parameter1: int;
specialinvoke v0.<java.io.OutputStream: void <init>()>();
v3 = new java.util.LinkedList;
specialinvoke v3.<java.util.LinkedList: void <init>()>();
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks> = v3;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler> = v1;
if v2 <= 131072 goto label1;
v2 = 131072;
label1:
if v1 != null goto label2;
v4 = newarray (byte)[v2];
goto label3;
label2:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.util.BufferRecycler: byte[] allocByteBuffer(int)>(2);
label3:
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = v4;
return;
}
private void <init>(com.fasterxml.jackson.core.util.BufferRecycler, byte[], int)
{
byte[] v2;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v3;
java.util.LinkedList v4;
com.fasterxml.jackson.core.util.BufferRecycler v1;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
specialinvoke v0.<java.io.OutputStream: void <init>()>();
v4 = new java.util.LinkedList;
specialinvoke v4.<java.util.LinkedList: void <init>()>();
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks> = v4;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler> = null;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = v2;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v3;
return;
}
public static com.fasterxml.jackson.core.util.ByteArrayBuilder fromInitial(byte[], int)
{
int v1;
byte[] v0;
com.fasterxml.jackson.core.util.ByteArrayBuilder v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = new com.fasterxml.jackson.core.util.ByteArrayBuilder;
specialinvoke v2.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,byte[],int)>(null, v0, v1);
return v2;
}
public void reset()
{
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
java.util.LinkedList v1, v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen> = 0;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = 0;
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;
v2 = virtualinvoke v1.<java.util.LinkedList: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;
virtualinvoke v3.<java.util.LinkedList: void clear()>();
label1:
return;
}
public int size()
{
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v1, v2, v3;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v3 = v1 + v2;
return v3;
}
public void release()
{
byte[] v2, v4;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
com.fasterxml.jackson.core.util.BufferRecycler v1, v3;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>();
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: com.fasterxml.jackson.core.util.BufferRecycler _bufferRecycler>;
v4 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
virtualinvoke v3.<com.fasterxml.jackson.core.util.BufferRecycler: void releaseByteBuffer(int,byte[])>(2, v4);
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = null;
label1:
return;
}
public void append(int)
{
byte[] v3, v5;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v1, v2, v4, v6, v7;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v3 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v4 = lengthof v3;
if v2 < v4 goto label1;
specialinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>();
label1:
v5 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v6 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v7 = v6 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v7;
v5[v6] = v1;
return;
}
public void appendTwoBytes(int)
{
byte[] v10, v4, v6;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v1, v11, v12, v13, v2, v3, v5, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v3 = v2 + 1;
v4 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v5 = lengthof v4;
if v3 >= v5 goto label1;
v6 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v7 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v8;
v9 = v1 >> 8;
v6[v7] = v9;
v10 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v11 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v12;
v10[v11] = v1;
goto label2;
label1:
v13 = v1 >> 8;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v13);
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v1);
label2:
return;
}
public void appendThreeBytes(int)
{
byte[] v10, v14, v4, v6;
int v1, v11, v12, v13, v15, v16, v17, v18, v2, v3, v5, v7, v8, v9;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v3 = v2 + 2;
v4 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v5 = lengthof v4;
if v3 >= v5 goto label1;
v6 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v7 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v8;
v9 = v1 >> 16;
v6[v7] = v9;
v10 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v11 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v12;
v13 = v1 >> 8;
v10[v11] = v13;
v14 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v15 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v16;
v14[v15] = v1;
goto label2;
label1:
v17 = v1 >> 16;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v17);
v18 = v1 >> 8;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v18);
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v1);
label2:
return;
}
public void appendFourBytes(int)
{
byte[] v10, v14, v18, v4, v6;
int v1, v11, v12, v13, v15, v16, v17, v19, v2, v20, v21, v22, v23, v3, v5, v7, v8, v9;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v3 = v2 + 3;
v4 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v5 = lengthof v4;
if v3 >= v5 goto label1;
v6 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v7 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v8 = v7 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v8;
v9 = v1 >> 24;
v6[v7] = v9;
v10 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v11 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v12 = v11 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v12;
v13 = v1 >> 16;
v10[v11] = v13;
v14 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v15 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v16 = v15 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v16;
v17 = v1 >> 8;
v14[v15] = v17;
v18 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v19 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v20 = v19 + 1;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v20;
v18[v19] = v1;
goto label2;
label1:
v21 = v1 >> 24;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v21);
v22 = v1 >> 16;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v22);
v23 = v1 >> 8;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v23);
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v1);
label2:
return;
}
public byte[] toByteArray()
{
byte[] v12, v4, v5;
int v1, v11, v13, v14, v15, v2, v3, v6;
java.lang.String v17;
java.util.LinkedList v18, v7;
boolean v19, v9;
java.util.Iterator v8;
java.lang.RuntimeException v16;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
java.lang.Object v10;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v3 = v1 + v2;
if v3 != 0 goto label1;
v4 = <com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] NO_BYTES>;
return v4;
label1:
v5 = newarray (byte)[v3];
v6 = 0;
v7 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;
v8 = virtualinvoke v7.<java.util.LinkedList: java.util.Iterator iterator()>();
label2:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label3;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = lengthof v10;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v10, 0, v5, v6, v11);
v6 = v6 + v11;
goto label2;
label3:
v12 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v13 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v12, 0, v5, v6, v13);
v14 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v15 = v6 + v14;
if v15 == v3 goto label4;
v16 = new java.lang.RuntimeException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v3, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Internal error: total len assumed to be \u0001, copied \u0001 bytes");
specialinvoke v16.<java.lang.RuntimeException: void <init>(java.lang.String)>(v17);
throw v16;
label4:
v18 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;
v19 = virtualinvoke v18.<java.util.LinkedList: boolean isEmpty()>();
if v19 != 0 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>();
label5:
return v5;
}
public byte[] resetAndGetFirstSegment()
{
byte[] v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void reset()>();
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
return v1;
}
public byte[] finishCurrentSegment()
{
byte[] v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
specialinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>();
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
return v1;
}
public byte[] completeAndCoalesce(int)
{
int v1;
byte[] v2;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();
return v2;
}
public byte[] getCurrentSegment()
{
byte[] v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
return v1;
}
public void setCurrentSegmentLength(int)
{
int v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v1;
return;
}
public int getCurrentSegmentLength()
{
int v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
return v1;
}
public void write(byte[])
{
int v2;
byte[] v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: byte[];
v2 = lengthof v1;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void write(byte[],int,int)>(v1, 0, v2);
return;
}
public void write(byte[], int, int)
{
byte[] v1, v4, v9;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v10, v11, v12, v2, v3, v5, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
v4 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v5 = lengthof v4;
v6 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v7 = v5 - v6;
v8 = staticinvoke <java.lang.Math: int min(int,int)>(v7, v3);
if v8 <= 0 goto label2;
v9 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v10 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v2, v9, v10, v8);
v2 = v2 + v8;
v11 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr>;
v12 = v11 + v8;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = v12;
v3 = v3 - v8;
label2:
if v3 <= 0 goto label3;
specialinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void _allocMore()>();
goto label1;
label3:
return;
}
public void write(int)
{
int v1;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 := @parameter0: int;
virtualinvoke v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void append(int)>(v1);
return;
}
public void close()
{
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
return;
}
public void flush()
{
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
return;
}
private void _allocMore()
{
byte[] v10, v11, v2;
java.lang.IllegalStateException v5;
com.fasterxml.jackson.core.util.ByteArrayBuilder v0;
int v1, v3, v4, v6, v7, v8;
java.util.LinkedList v9;
v0 := @this: com.fasterxml.jackson.core.util.ByteArrayBuilder;
v1 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;
v2 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
v3 = lengthof v2;
v4 = v1 + v3;
if v4 >= 0 goto label1;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Maximum Java array size (2GB) exceeded by `ByteArrayBuilder`");
throw v5;
label1:
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen> = v4;
v6 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _pastLen>;
v7 = v6 >> 1;
v8 = staticinvoke <java.lang.Math: int max(int,int)>(v7, 1000);
if v8 <= 131072 goto label2;
v8 = 131072;
label2:
v9 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: java.util.LinkedList _pastBlocks>;
v10 = v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock>;
virtualinvoke v9.<java.util.LinkedList: boolean add(java.lang.Object)>(v10);
v11 = newarray (byte)[v8];
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] _currBlock> = v11;
v0.<com.fasterxml.jackson.core.util.ByteArrayBuilder: int _currBlockPtr> = 0;
return;
}
static void <clinit>()
{
byte[] v0;
v0 = newarray (byte)[0];
<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] NO_BYTES> = v0;
return;
}
}