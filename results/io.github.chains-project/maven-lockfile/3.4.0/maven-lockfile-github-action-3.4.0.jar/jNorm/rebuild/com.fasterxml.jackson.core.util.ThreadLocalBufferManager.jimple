class com.fasterxml.jackson.core.util.ThreadLocalBufferManager extends java.lang.Object
{
private final java.lang.Object RELEASE_LOCK;
private final java.util.Map _trackedRecyclers;
private final java.lang.ref.ReferenceQueue _refQueue;
void <init>()
{
com.fasterxml.jackson.core.util.ThreadLocalBufferManager v0;
java.util.concurrent.ConcurrentHashMap v2;
java.lang.Object v1;
java.lang.ref.ReferenceQueue v3;
v0 := @this: com.fasterxml.jackson.core.util.ThreadLocalBufferManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.Object;
specialinvoke v1.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.Object RELEASE_LOCK> = v1;
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers> = v2;
v3 = new java.lang.ref.ReferenceQueue;
specialinvoke v3.<java.lang.ref.ReferenceQueue: void <init>()>();
v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.ReferenceQueue _refQueue> = v3;
return;
}
public static com.fasterxml.jackson.core.util.ThreadLocalBufferManager instance()
{
com.fasterxml.jackson.core.util.ThreadLocalBufferManager v0;
v0 = <com.fasterxml.jackson.core.util.ThreadLocalBufferManager$ThreadLocalBufferManagerHolder: com.fasterxml.jackson.core.util.ThreadLocalBufferManager manager>;
return v0;
}
public int releaseBuffers()
{
java.lang.Throwable v9;
com.fasterxml.jackson.core.util.ThreadLocalBufferManager v0;
java.util.Iterator v5;
java.util.Set v4;
java.util.Map v3, v8;
int v2;
java.lang.Object v1, v7;
boolean v6;
v0 := @this: com.fasterxml.jackson.core.util.ThreadLocalBufferManager;
v1 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.Object RELEASE_LOCK>;
entermonitor v1;
label1:
v2 = 0;
specialinvoke v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: void removeSoftRefsClearedByGc()>();
v3 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set keySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label2:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v7.<java.lang.ref.SoftReference: void clear()>();
v2 = v2 + 1;
goto label2;
label3:
v8 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;
interfaceinvoke v8.<java.util.Map: void clear()>();
exitmonitor v1;
label4:
return v2;
label5:
v9 := @caughtexception;
exitmonitor v1;
throw v9;
catch java.lang.Throwable from label1 to label4 with label5;
}
public java.lang.ref.SoftReference wrapAndTrack(com.fasterxml.jackson.core.util.BufferRecycler)
{
com.fasterxml.jackson.core.util.ThreadLocalBufferManager v0;
java.util.Map v4;
java.lang.Boolean v5;
java.lang.ref.SoftReference v2;
com.fasterxml.jackson.core.util.BufferRecycler v1;
java.lang.ref.ReferenceQueue v3;
v0 := @this: com.fasterxml.jackson.core.util.ThreadLocalBufferManager;
v1 := @parameter0: com.fasterxml.jackson.core.util.BufferRecycler;
v2 = new java.lang.ref.SoftReference;
v3 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.ReferenceQueue _refQueue>;
specialinvoke v2.<java.lang.ref.SoftReference: void <init>(java.lang.Object,java.lang.ref.ReferenceQueue)>(v1, v3);
v4 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
specialinvoke v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: void removeSoftRefsClearedByGc()>();
return v2;
}
private void removeSoftRefsClearedByGc()
{
java.lang.ref.Reference v2;
com.fasterxml.jackson.core.util.ThreadLocalBufferManager v0;
java.util.Map v3;
java.lang.ref.ReferenceQueue v1;
v0 := @this: com.fasterxml.jackson.core.util.ThreadLocalBufferManager;
label1:
v1 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.lang.ref.ReferenceQueue _refQueue>;
v2 = virtualinvoke v1.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference poll()>();
if v2 == null goto label2;
v3 = v0.<com.fasterxml.jackson.core.util.ThreadLocalBufferManager: java.util.Map _trackedRecyclers>;
interfaceinvoke v3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v2);
goto label1;
label2:
return;
}
}