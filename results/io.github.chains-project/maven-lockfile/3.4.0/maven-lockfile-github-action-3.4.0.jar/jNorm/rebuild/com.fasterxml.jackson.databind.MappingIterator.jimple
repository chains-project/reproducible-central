public class com.fasterxml.jackson.databind.MappingIterator extends java.lang.Object implements java.util.Iterator, java.io.Closeable
{
protected static final com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR;
protected static final int STATE_CLOSED;
protected static final int STATE_NEED_RESYNC;
protected static final int STATE_MAY_HAVE_VALUE;
protected static final int STATE_HAS_VALUE;
protected final com.fasterxml.jackson.databind.JavaType _type;
protected final com.fasterxml.jackson.databind.DeserializationContext _context;
protected final com.fasterxml.jackson.databind.JsonDeserializer _deserializer;
protected final com.fasterxml.jackson.core.JsonParser _parser;
protected final com.fasterxml.jackson.core.JsonStreamContext _seqContext;
protected final java.lang.Object _updatedValue;
protected final boolean _closeParser;
protected int _state;
protected void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JsonDeserializer, boolean, java.lang.Object)
{
com.fasterxml.jackson.databind.DeserializationContext v3;
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.MappingIterator v0;
com.fasterxml.jackson.core.JsonStreamContext v7;
java.lang.Object v6;
com.fasterxml.jackson.core.JsonToken v10, v11, v9;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.JsonDeserializer v4;
boolean v5, v8;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 := @parameter2: com.fasterxml.jackson.databind.DeserializationContext;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonDeserializer;
v5 := @parameter4: boolean;
v6 := @parameter5: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.JavaType _type> = v1;
v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser> = v2;
v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.DeserializationContext _context> = v3;
v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.JsonDeserializer _deserializer> = v4;
v0.<com.fasterxml.jackson.databind.MappingIterator: boolean _closeParser> = v5;
if v6 != null goto label1;
v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue> = null;
goto label2;
label1:
v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue> = v6;
label2:
if v2 != null goto label3;
v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonStreamContext _seqContext> = null;
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 0;
goto label7;
label3:
v7 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();
if v5 == 0 goto label4;
v8 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v8 == 0 goto label4;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
goto label6;
label4:
v9 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v9 == v10 goto label5;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v9 != v11 goto label6;
label5:
v7 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonStreamContext: com.fasterxml.jackson.core.JsonStreamContext getParent()>();
label6:
v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonStreamContext _seqContext> = v7;
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 2;
label7:
return;
}
public static com.fasterxml.jackson.databind.MappingIterator emptyIterator()
{
com.fasterxml.jackson.databind.MappingIterator v0;
v0 = <com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR>;
return v0;
}
public boolean hasNext()
{
com.fasterxml.jackson.databind.MappingIterator v0;
java.io.IOException v5;
java.lang.Object v3, v6;
com.fasterxml.jackson.databind.JsonMappingException v2;
boolean v1, v4, v7;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
label1:
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException)>(v2);
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
return v4;
label4:
v5 := @caughtexception;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleIOException(java.io.IOException)>(v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
return v7;
catch com.fasterxml.jackson.databind.JsonMappingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
public java.lang.Object next()
{
com.fasterxml.jackson.databind.MappingIterator v0;
java.io.IOException v4;
java.lang.Object v1, v3, v5;
com.fasterxml.jackson.databind.JsonMappingException v2;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
label1:
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object nextValue()>();
label2:
return v1;
label3:
v2 := @caughtexception;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException)>(v2);
return v3;
label4:
v4 := @caughtexception;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _handleIOException(java.io.IOException)>(v4);
return v5;
catch com.fasterxml.jackson.databind.JsonMappingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
public void remove()
{
java.lang.UnsupportedOperationException v1;
com.fasterxml.jackson.databind.MappingIterator v0;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v2, v3;
com.fasterxml.jackson.databind.MappingIterator v0;
int v1;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: int _state>;
if v1 == 0 goto label1;
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 0;
v2 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonParser: void close()>();
label1:
return;
}
public boolean hasNextValue() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v2, v3, v5, v9;
com.fasterxml.jackson.databind.MappingIterator v0;
int v1;
com.fasterxml.jackson.core.JsonToken v4, v6, v7;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: int _state>;
tableswitch(v1)
{
case 0: goto label1;
case 1: goto label2;
case 2: goto label3;
case 3: goto label8;
default: goto label8;
};
label1:
return 0;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: void _resync()>();
label3:
v2 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
if v2 != null goto label4;
return 0;
label4:
v3 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v4 != null goto label7;
v5 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v6 == null goto label5;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v6 != v7 goto label7;
label5:
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 0;
v8 = v0.<com.fasterxml.jackson.databind.MappingIterator: boolean _closeParser>;
if v8 == 0 goto label6;
v9 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
virtualinvoke v9.<com.fasterxml.jackson.core.JsonParser: void close()>();
label6:
return 0;
label7:
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 3;
return 1;
label8:
return 1;
}
public java.lang.Object nextValue() throws java.io.IOException
{
java.lang.Throwable v15;
com.fasterxml.jackson.databind.MappingIterator v0;
int v1;
com.fasterxml.jackson.databind.JsonDeserializer v10, v6;
boolean v3;
com.fasterxml.jackson.databind.DeserializationContext v12, v8;
com.fasterxml.jackson.core.JsonParser v11, v14, v16, v7;
java.lang.Object v13, v2, v4, v5, v9;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: int _state>;
tableswitch(v1)
{
case 0: goto label1;
case 1: goto label2;
case 2: goto label2;
case 3: goto label3;
default: goto label3;
};
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _throwNoSuchElement()>();
return v2;
label2:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();
if v3 != 0 goto label3;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _throwNoSuchElement()>();
return v4;
label3:
v5 = v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue>;
if v5 != null goto label4;
v6 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.JsonDeserializer _deserializer>;
v7 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v8 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.DeserializationContext _context>;
v9 = virtualinvoke v6.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v7, v8);
goto label5;
label4:
v10 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.JsonDeserializer _deserializer>;
v11 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v12 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.DeserializationContext _context>;
v13 = v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue>;
virtualinvoke v10.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v11, v12, v13);
v9 = v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object _updatedValue>;
label5:
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 2;
v14 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
virtualinvoke v14.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
return v9;
label6:
v15 := @caughtexception;
v0.<com.fasterxml.jackson.databind.MappingIterator: int _state> = 1;
v16 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
virtualinvoke v16.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
throw v15;
catch java.lang.Throwable from label3 to label5 with label6;
}
public java.util.List readAll() throws java.io.IOException
{
java.util.List v2;
com.fasterxml.jackson.databind.MappingIterator v0;
java.util.ArrayList v1;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.util.List readAll(java.util.List)>(v1);
return v2;
}
public java.util.List readAll(java.util.List) throws java.io.IOException
{
java.util.List v1;
com.fasterxml.jackson.databind.MappingIterator v0;
java.lang.Object v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 := @parameter0: java.util.List;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object nextValue()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v3);
goto label1;
label2:
return v1;
}
public java.util.Collection readAll(java.util.Collection) throws java.io.IOException
{
com.fasterxml.jackson.databind.MappingIterator v0;
java.util.Collection v1;
java.lang.Object v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 := @parameter0: java.util.Collection;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: boolean hasNextValue()>();
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: java.lang.Object nextValue()>();
interfaceinvoke v1.<java.util.Collection: boolean add(java.lang.Object)>(v3);
goto label1;
label2:
return v1;
}
public com.fasterxml.jackson.core.JsonParser getParser()
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.MappingIterator v0;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
return v1;
}
public com.fasterxml.jackson.core.FormatSchema getParserSchema()
{
com.fasterxml.jackson.core.FormatSchema v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.MappingIterator v0;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.FormatSchema getSchema()>();
return v2;
}
public com.fasterxml.jackson.core.JsonLocation getCurrentLocation()
{
com.fasterxml.jackson.core.JsonLocation v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.MappingIterator v0;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonLocation getCurrentLocation()>();
return v2;
}
protected void _resync() throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.MappingIterator v0;
com.fasterxml.jackson.core.JsonStreamContext v2, v3, v7, v8;
com.fasterxml.jackson.core.JsonToken v10, v4, v5, v6, v9;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonParser _parser>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();
v3 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonStreamContext _seqContext>;
if v2 != v3 goto label1;
return;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v4 == v5 goto label2;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v4 != v6 goto label3;
label2:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonStreamContext getParsingContext()>();
v8 = v0.<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.core.JsonStreamContext _seqContext>;
if v7 != v8 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
return;
label3:
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v4 == v9 goto label4;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v4 != v10 goto label5;
label4:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonParser skipChildren()>();
goto label1;
label5:
if v4 != null goto label1;
return;
}
protected java.lang.Object _throwNoSuchElement()
{
java.util.NoSuchElementException v1;
com.fasterxml.jackson.databind.MappingIterator v0;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 = new java.util.NoSuchElementException;
specialinvoke v1.<java.util.NoSuchElementException: void <init>()>();
throw v1;
}
protected java.lang.Object _handleMappingException(com.fasterxml.jackson.databind.JsonMappingException)
{
com.fasterxml.jackson.databind.MappingIterator v0;
com.fasterxml.jackson.databind.JsonMappingException v1;
java.lang.String v3;
com.fasterxml.jackson.databind.RuntimeJsonMappingException v2;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonMappingException;
v2 = new com.fasterxml.jackson.databind.RuntimeJsonMappingException;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>();
specialinvoke v2.<com.fasterxml.jackson.databind.RuntimeJsonMappingException: void <init>(java.lang.String,com.fasterxml.jackson.databind.JsonMappingException)>(v3, v1);
throw v2;
}
protected java.lang.Object _handleIOException(java.io.IOException)
{
com.fasterxml.jackson.databind.MappingIterator v0;
java.io.IOException v1;
java.lang.RuntimeException v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.MappingIterator;
v1 := @parameter0: java.io.IOException;
v2 = new java.lang.RuntimeException;
v3 = virtualinvoke v1.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v3, v1);
throw v2;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.MappingIterator v0;
v0 = new com.fasterxml.jackson.databind.MappingIterator;
specialinvoke v0.<com.fasterxml.jackson.databind.MappingIterator: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer,boolean,java.lang.Object)>(null, null, null, null, 0, null);
<com.fasterxml.jackson.databind.MappingIterator: com.fasterxml.jackson.databind.MappingIterator EMPTY_ITERATOR> = v0;
return;
}
}