public class com.fasterxml.jackson.databind.SequenceWriter extends java.lang.Object implements com.fasterxml.jackson.core.Versioned, java.io.Closeable, java.io.Flushable
{
protected final com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider;
protected final com.fasterxml.jackson.databind.SerializationConfig _config;
protected final com.fasterxml.jackson.core.JsonGenerator _generator;
protected final com.fasterxml.jackson.databind.JsonSerializer _rootSerializer;
protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer;
protected final boolean _closeGenerator;
protected final boolean _cfgFlush;
protected final boolean _cfgCloseCloseable;
protected com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers;
protected boolean _openArray;
protected boolean _closed;
public void <init>(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider, com.fasterxml.jackson.core.JsonGenerator, boolean, com.fasterxml.jackson.databind.ObjectWriter$Prefetch) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.SerializationConfig v11, v7, v8;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v1;
com.fasterxml.jackson.databind.ObjectWriter$Prefetch v4;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v14;
com.fasterxml.jackson.databind.JsonSerializer v5;
com.fasterxml.jackson.databind.SerializationFeature v12, v9;
boolean v10, v13, v3;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: boolean;
v4 := @parameter3: com.fasterxml.jackson.databind.ObjectWriter$Prefetch;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider> = v1;
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator> = v2;
v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _closeGenerator> = v3;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ObjectWriter$Prefetch: com.fasterxml.jackson.databind.JsonSerializer getValueSerializer()>();
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _rootSerializer> = v5;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.ObjectWriter$Prefetch: com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer()>();
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer> = v6;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SerializationConfig _config> = v7;
v8 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SerializationConfig _config>;
v9 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;
v10 = virtualinvoke v8.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v9);
v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgFlush> = v10;
v11 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SerializationConfig _config>;
v12 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>;
v13 = virtualinvoke v11.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v12);
v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgCloseCloseable> = v13;
v14 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForRootValues()>();
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v14;
return;
}
public com.fasterxml.jackson.databind.SequenceWriter init(boolean) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.core.JsonGenerator v2;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();
v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _openArray> = 1;
label1:
return v0;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.Version v1;
com.fasterxml.jackson.databind.SequenceWriter v0;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 = <com.fasterxml.jackson.databind.cfg.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0, v6;
com.fasterxml.jackson.core.JsonGenerator v11, v13, v3;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v10, v2;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v9;
com.fasterxml.jackson.databind.JsonSerializer v7;
java.lang.Class v8;
java.lang.Object v1;
boolean v12, v4, v5;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v3 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v2.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v3, null);
return v0;
label1:
v4 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgCloseCloseable>;
if v4 == 0 goto label2;
v5 = v1 instanceof java.io.Closeable;
if v5 == 0 goto label2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object)>(v1);
return v6;
label2:
v7 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _rootSerializer>;
if v7 != null goto label3;
v8 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v9 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v7 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v8);
if v7 != null goto label3;
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(java.lang.Class)>(v8);
label3:
v10 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v11 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v10.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v11, v1, null, v7);
v12 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgFlush>;
if v12 == 0 goto label4;
v13 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v13.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label4:
return v0;
}
public com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0, v7;
com.fasterxml.jackson.core.JsonGenerator v12, v14, v4;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v11, v3;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v8;
com.fasterxml.jackson.databind.JsonSerializer v10;
java.lang.Class v9;
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v2;
boolean v13, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
if v1 != null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v4 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v3.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v4, null);
return v0;
label1:
v5 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgCloseCloseable>;
if v5 == 0 goto label2;
v6 = v1 instanceof java.io.Closeable;
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
return v7;
label2:
v8 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v10 = virtualinvoke v8.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v9);
if v10 != null goto label3;
v10 = specialinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.JavaType)>(v2);
label3:
v11 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v12 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v12, v1, v2, v10);
v13 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgFlush>;
if v13 == 0 goto label4;
v14 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v14.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label4:
return v0;
}
public com.fasterxml.jackson.databind.SequenceWriter writeAll(java.lang.Object[]) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
java.lang.Object[] v1;
int v2, v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Object[];
v2 = 0;
v3 = lengthof v1;
label1:
if v2 >= v3 goto label2;
v4 = v1[v2];
virtualinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object)>(v4);
v2 = v2 + 1;
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.databind.SequenceWriter writeAll(java.util.Collection) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
java.util.Iterator v2;
java.util.Collection v1;
java.lang.Object v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object)>(v4);
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.databind.SequenceWriter writeAll(java.lang.Iterable) throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
java.util.Iterator v2;
java.lang.Object v4;
java.lang.Iterable v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.SequenceWriter write(java.lang.Object)>(v4);
goto label1;
label2:
return v0;
}
public void flush() throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.core.JsonGenerator v2;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _closed>;
if v1 != 0 goto label1;
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label1:
return;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.core.JsonGenerator v3, v5;
boolean v1, v2, v4;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _closed>;
if v1 != 0 goto label2;
v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _closed> = 1;
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _openArray>;
if v2 == 0 goto label1;
v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _openArray> = 0;
v3 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
label1:
v4 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _closeGenerator>;
if v4 == 0 goto label2;
v5 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v5.<com.fasterxml.jackson.core.JsonGenerator: void close()>();
label2:
return;
}
protected com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object) throws java.io.IOException
{
java.lang.Throwable v10;
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.core.JsonGenerator v6, v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v5;
java.io.Closeable v9;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v4;
com.fasterxml.jackson.databind.JsonSerializer v2;
java.lang.Class v3;
java.lang.Object v1;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _rootSerializer>;
if v2 != null goto label2;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v2 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v3);
if v2 != null goto label2;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(java.lang.Class)>(v3);
label2:
v5 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v6 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v5.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v6, v1, null, v2);
v7 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgFlush>;
if v7 == 0 goto label3;
v8 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v8.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label3:
v9 = v1;
interfaceinvoke v9.<java.io.Closeable: void close()>();
label4:
goto label6;
label5:
v10 := @caughtexception;
throw v10;
label6:
return v0;
catch java.lang.Throwable from label1 to label4 with label5;
}
protected com.fasterxml.jackson.databind.SequenceWriter _writeCloseableValue(java.lang.Object, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
java.lang.Throwable v11;
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.core.JsonGenerator v7, v9;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v6;
java.io.Closeable v10;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v3;
com.fasterxml.jackson.databind.JsonSerializer v5;
java.lang.Class v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v2;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
label1:
v3 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v4);
if v5 != null goto label2;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.JavaType)>(v2);
label2:
v6 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v7 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v6.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v7, v1, v2, v5);
v8 = v0.<com.fasterxml.jackson.databind.SequenceWriter: boolean _cfgFlush>;
if v8 == 0 goto label3;
v9 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.core.JsonGenerator _generator>;
virtualinvoke v9.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label3:
v10 = v1;
interfaceinvoke v10.<java.io.Closeable: void close()>();
label4:
goto label6;
label5:
v11 := @caughtexception;
throw v11;
label6:
return v0;
catch java.lang.Throwable from label1 to label4 with label5;
}
private final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer v7;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v2, v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4, v9;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v11, v3, v6;
com.fasterxml.jackson.databind.JsonSerializer v10, v12;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;
if v2 != null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v4 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v4);
goto label2;
label1:
v6 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v7 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;
v8 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;
v9 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v1, null);
specialinvoke v7.<com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v8, v10);
v5 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v7);
label2:
v11 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v11;
v12 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v12;
}
private final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SequenceWriter v0;
com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer v7;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v2, v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4, v9;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v11, v3, v6;
com.fasterxml.jackson.databind.JsonSerializer v10, v12;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.SequenceWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;
if v2 != null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v4 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddRootValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v4);
goto label2;
label1:
v6 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v7 = new com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer;
v8 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;
v9 = v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _provider>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v1, null);
specialinvoke v7.<com.fasterxml.jackson.databind.ser.impl.TypeWrappedSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v8, v10);
v5 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult addSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v7);
label2:
v11 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.SequenceWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v11;
v12 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v12;
}
}