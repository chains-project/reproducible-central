public final class com.fasterxml.jackson.databind.deser.DeserializerCache extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers;
protected final java.util.HashMap _incompleteDeserializers;
public void <init>()
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: void <init>(int)>(2000);
return;
}
public void <init>(int)
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.util.LRUMap v5;
int v1, v3, v4;
java.util.HashMap v2;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>(int)>(8);
v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers> = v2;
v3 = v1 >> 2;
v4 = staticinvoke <java.lang.Math: int min(int,int)>(64, v3);
v5 = new com.fasterxml.jackson.databind.util.LRUMap;
specialinvoke v5.<com.fasterxml.jackson.databind.util.LRUMap: void <init>(int,int)>(v4, v1);
v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers> = v5;
return;
}
java.lang.Object writeReplace()
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
java.util.HashMap v1;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
virtualinvoke v1.<java.util.HashMap: void clear()>();
return v0;
}
public int cachedDeserializersCount()
{
com.fasterxml.jackson.databind.util.LRUMap v1;
int v2;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.LRUMap: int size()>();
return v2;
}
public void flushCachedDeserializers()
{
com.fasterxml.jackson.databind.util.LRUMap v1;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;
virtualinvoke v1.<com.fasterxml.jackson.databind.util.LRUMap: void clear()>();
return;
}
public com.fasterxml.jackson.databind.JsonDeserializer findValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.JsonDeserializer v4;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)>(v3);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v1, v3);
label1:
return v4;
}
public com.fasterxml.jackson.databind.KeyDeserializer findKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.KeyDeserializer v4, v5;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.KeyDeserializer createKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v1, v3);
if v4 != null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v1, v3);
return v5;
label1:
v6 = v4 instanceof com.fasterxml.jackson.databind.deser.ResolvableDeserializer;
if v6 == 0 goto label2;
interfaceinvoke v4.<com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
label2:
return v4;
}
public boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.JsonDeserializer v4;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)>(v3);
if v4 != null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
label1:
if v4 == null goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.util.LRUMap v4;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.IllegalArgumentException v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Null JavaType passed");
throw v2;
label1:
v3 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType)>(v1);
if v3 == 0 goto label2;
return null;
label2:
v4 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object get(java.lang.Object)>(v1);
return v5;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createAndCacheValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.Throwable v14, v18;
java.util.HashMap v11, v13, v15, v17, v4, v6, v8;
int v12, v16, v7;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.JsonDeserializer v10, v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
java.lang.Object v9;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
entermonitor v4;
label01:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _findCachedDeserializer(com.fasterxml.jackson.databind.JavaType)>(v3);
if v5 == null goto label03;
exitmonitor v4;
label02:
return v5;
label03:
v6 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
v7 = virtualinvoke v6.<java.util.HashMap: int size()>();
if v7 <= 0 goto label05;
v8 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
v9 = virtualinvoke v8.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v3);
if v9 == null goto label05;
exitmonitor v4;
label04:
return v9;
label05:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
label06:
if v7 != 0 goto label07;
v11 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
v12 = virtualinvoke v11.<java.util.HashMap: int size()>();
if v12 <= 0 goto label07;
v13 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
virtualinvoke v13.<java.util.HashMap: void clear()>();
label07:
exitmonitor v4;
label08:
return v10;
label09:
v14 := @caughtexception;
if v7 != 0 goto label10;
v15 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
v16 = virtualinvoke v15.<java.util.HashMap: int size()>();
if v16 <= 0 goto label10;
v17 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
virtualinvoke v17.<java.util.HashMap: void clear()>();
label10:
throw v14;
label11:
v18 := @caughtexception;
exitmonitor v4;
throw v18;
catch java.lang.Throwable from label05 to label06 with label09;
catch java.lang.Throwable from label01 to label02 with label11;
catch java.lang.Throwable from label03 to label04 with label11;
catch java.lang.Throwable from label05 to label08 with label11;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createAndCache2(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.HashMap v12, v13;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.util.LRUMap v14;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v6;
com.fasterxml.jackson.databind.JsonDeserializer v4;
boolean v10, v11, v7, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v5);
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v3, v6);
v4 = null;
label4:
if v4 != null goto label5;
return null;
label5:
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType)>(v3);
if v7 != 0 goto label6;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonDeserializer: boolean isCachable()>();
if v8 == 0 goto label6;
v9 = 1;
goto label7;
label6:
v9 = 0;
label7:
v10 = v9;
v11 = v4 instanceof com.fasterxml.jackson.databind.deser.ResolvableDeserializer;
if v11 == 0 goto label8;
v12 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
virtualinvoke v12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
interfaceinvoke v4.<com.fasterxml.jackson.databind.deser.ResolvableDeserializer: void resolve(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
v13 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.util.HashMap _incompleteDeserializers>;
virtualinvoke v13.<java.util.HashMap: java.lang.Object remove(java.lang.Object)>(v3);
label8:
if v10 == 0 goto label9;
v14 = v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.util.LRUMap _cachedDeserializers>;
virtualinvoke v14.<com.fasterxml.jackson.databind.util.LRUMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
label9:
return v4;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.util.Converter v15;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.type.TypeFactory v17;
com.fasterxml.jackson.databind.BeanDescription v8;
com.fasterxml.jackson.databind.JavaType v12, v18, v3;
com.fasterxml.jackson.databind.JsonDeserializer v10, v14, v16, v22;
boolean v20, v5, v6, v7;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer v21;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v11, v9;
java.lang.Class v13, v19;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isAbstract()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v6 != 0 goto label1;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();
if v7 == 0 goto label2;
label1:
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JavaType mapAbstractType(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType)>(v4, v3);
label2:
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v3);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v9);
if v10 == null goto label3;
return v10;
label3:
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v12 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>(v1, v11, v3);
if v12 == v3 goto label4;
v3 = v12;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v12);
label4:
v13 = virtualinvoke v8.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class findPOJOBuilder()>();
if v13 == null goto label5;
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createBuilderBasedDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,java.lang.Class)>(v1, v3, v8, v13);
return v14;
label5:
v15 = virtualinvoke v8.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Converter findDeserializationConverter()>();
if v15 != null goto label6;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3, v8);
return v16;
label6:
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v18 = interfaceinvoke v15.<com.fasterxml.jackson.databind.util.Converter: com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory)>(v17);
v19 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v20 = virtualinvoke v18.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(v19);
if v20 != 0 goto label7;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v18);
label7:
v21 = new com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.DeserializerFactory,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v18, v8);
specialinvoke v21.<com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>(v15, v18, v22);
return v21;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createDeserializer2(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.deser.DeserializerFactory, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.'annotation'.JsonFormat$Value v12, v19;
com.fasterxml.jackson.databind.BeanDescription v4;
com.fasterxml.jackson.databind.JsonDeserializer v10, v16, v17, v23, v24, v26, v30, v31, v7;
com.fasterxml.jackson.databind.type.MapLikeType v32;
boolean v11, v15, v18, v22, v25, v29, v6, v8, v9;
com.fasterxml.jackson.databind.deser.DeserializerFactory v2;
com.fasterxml.jackson.databind.DeserializationConfig v5;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v13, v14, v20, v21;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.type.CollectionLikeType v33;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
java.lang.Class v27, v28;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.DeserializerFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.BeanDescription;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();
if v6 == 0 goto label1;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createEnumDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v3, v4);
return v7;
label1:
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v8 == 0 goto label6;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();
if v9 == 0 goto label2;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createArrayDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v3, v4);
return v10;
label2:
v11 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v11 == 0 goto label4;
v12 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v13 = virtualinvoke v12.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v14 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;
if v13 == v14 goto label4;
v15 = v3 instanceof com.fasterxml.jackson.databind.type.MapType;
if v15 == 0 goto label3;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createMapDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v32, v4);
return v16;
label3:
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createMapLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v3, v4);
return v17;
label4:
v18 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();
if v18 == 0 goto label6;
v19 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v20 = virtualinvoke v19.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v21 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;
if v20 == v21 goto label6;
v22 = v3 instanceof com.fasterxml.jackson.databind.type.CollectionType;
if v22 == 0 goto label5;
v23 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createCollectionDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v33, v4);
return v23;
label5:
v24 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createCollectionLikeDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v3, v4);
return v24;
label6:
v25 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v25 == 0 goto label7;
v26 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createReferenceDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v3, v4);
return v26;
label7:
v27 = class "Lcom/fasterxml/jackson/databind/JsonNode;";
v28 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v29 = virtualinvoke v27.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v28);
if v29 == 0 goto label8;
v30 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createTreeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v5, v3, v4);
return v30;
label8:
v31 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.DeserializerFactory: com.fasterxml.jackson.databind.JsonDeserializer createBeanDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v3, v4);
return v31;
}
protected com.fasterxml.jackson.databind.JsonDeserializer findDeserializerFromAnnotation(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
java.lang.Object v4;
com.fasterxml.jackson.databind.JsonDeserializer v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v5);
return v6;
}
protected com.fasterxml.jackson.databind.JsonDeserializer findConvertingDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JsonDeserializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.util.Converter v4;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer v7;
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.type.TypeFactory v5;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.databind.JsonDeserializer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonDeserializer;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v2);
if v4 != null goto label1;
return v3;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v6 = interfaceinvoke v4.<com.fasterxml.jackson.databind.util.Converter: com.fasterxml.jackson.databind.JavaType getInputType(com.fasterxml.jackson.databind.type.TypeFactory)>(v5);
v7 = new com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer;
specialinvoke v7.<com.fasterxml.jackson.databind.deser.std.StdDelegatingDeserializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer)>(v4, v6, v3);
return v7;
}
protected com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.util.Converter v5;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findDeserializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v4);
return v5;
}
private com.fasterxml.jackson.databind.JavaType modifyTypeByAnnotation(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
com.fasterxml.jackson.databind.DeserializationConfig v15;
com.fasterxml.jackson.databind.JavaType v10, v16, v3, v6;
com.fasterxml.jackson.databind.KeyDeserializer v9;
boolean v13, v5;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.introspect.Annotated v2;
java.lang.Class v14;
java.lang.Object v11, v12, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
if v4 != null goto label1;
return v3;
label1:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
if v6 == null goto label2;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
if v7 != null goto label2;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeyDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v8 == null goto label2;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.KeyDeserializer keyDeserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v8);
if v9 == null goto label2;
v3 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.MapLikeType: com.fasterxml.jackson.databind.type.MapLikeType withKeyValueHandler(java.lang.Object)>(v9);
label2:
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
if v10 == null goto label4;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
if v11 != null goto label4;
v12 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentDeserializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v12 == null goto label4;
v13 = v12 instanceof com.fasterxml.jackson.databind.JsonDeserializer;
if v13 != 0 goto label3;
v14 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.DeserializerCache: java.lang.Class _verifyAsClass(java.lang.Object,java.lang.String,java.lang.Class)>(v12, "findContentDeserializer", class "Lcom/fasterxml/jackson/databind/JsonDeserializer$None;");
if v14 == null goto label3;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer deserializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v14);
label3:
if v12 == null goto label4;
v3 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)>(v12);
label4:
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v16 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.JavaType refineDeserializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>(v15, v2, v3);
return v16;
}
private boolean _hasCustomHandlers(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
java.lang.Object v4, v5, v8;
com.fasterxml.jackson.databind.JavaType v1, v3, v7;
boolean v2, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v2 == 0 goto label3;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
if v3 == null goto label2;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
if v4 != null goto label1;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();
if v5 == null goto label2;
label1:
return 1;
label2:
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v6 == 0 goto label3;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
if v8 == null goto label3;
return 1;
label3:
return 0;
}
private java.lang.Class _verifyAsClass(java.lang.Object, java.lang.String, java.lang.Class)
{
java.lang.IllegalStateException v5;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
java.lang.Class v3, v6;
java.lang.Object v1;
java.lang.String v2, v7, v8;
boolean v4, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Class;
if v1 != null goto label1;
return null;
label1:
v4 = v1 instanceof java.lang.Class;
if v4 != 0 goto label2;
v5 = new java.lang.IllegalStateException;
v6 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("AnnotationIntrospector.\u0001() returned value of type \u0001: expected type JsonSerializer or Class<JsonSerializer> instead");
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v8);
throw v5;
label2:
if v1 == v3 goto label3;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isBogusClass(java.lang.Class)>(v1);
if v9 == 0 goto label4;
label3:
return null;
label4:
return v1;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _handleUnknownValueDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
java.lang.Class v3;
java.lang.Object v6, v8;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v5, v7;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isConcrete(java.lang.Class)>(v3);
if v4 != 0 goto label1;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot find a Value deserializer for abstract type \u0001");
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v5);
return v6;
label1:
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot find a Value deserializer for type \u0001");
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v7);
return v8;
}
protected com.fasterxml.jackson.databind.KeyDeserializer _handleUnknownKeyDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.DeserializerCache v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object v4;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.deser.DeserializerCache;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot find a (Map) Key deserializer for type \u0001");
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v3);
return v4;
}
}