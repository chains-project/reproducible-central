public class com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/concurrent/atomic/AtomicBoolean;");
return;
}
public java.util.concurrent.atomic.AtomicBoolean deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.concurrent.atomic.AtomicBoolean v5, v7, v9;
java.lang.Boolean v8;
com.fasterxml.jackson.core.JsonToken v3, v4, v6;
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer v0;
boolean v10;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;
if v3 != v4 goto label1;
v5 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v5.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(1);
return v5;
label1:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;
if v3 != v6 goto label2;
v7 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);
return v7;
label2:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer: java.lang.Boolean _parseBoolean(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/util/concurrent/atomic/AtomicBoolean;");
if v8 != null goto label3;
v9 = null;
goto label4;
label3:
v9 = new java.util.concurrent.atomic.AtomicBoolean;
v10 = virtualinvoke v8.<java.lang.Boolean: boolean booleanValue()>();
specialinvoke v9.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(v10);
label4:
return v9;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>;
return v1;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.util.concurrent.atomic.AtomicBoolean v2;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicBooleanDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);
return v2;
}
}