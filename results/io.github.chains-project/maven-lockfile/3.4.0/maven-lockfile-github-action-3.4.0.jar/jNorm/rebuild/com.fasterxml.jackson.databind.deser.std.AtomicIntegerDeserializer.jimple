public class com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/concurrent/atomic/AtomicInteger;");
return;
}
public java.util.concurrent.atomic.AtomicInteger deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Integer v6;
java.util.concurrent.atomic.AtomicInteger v4, v7;
int v5, v8;
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedNumberIntToken()>();
if v3 == 0 goto label1;
v4 = new java.util.concurrent.atomic.AtomicInteger;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
specialinvoke v4.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(v5);
return v4;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer: java.lang.Integer _parseInteger(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, class "Ljava/util/concurrent/atomic/AtomicInteger;");
if v6 != null goto label2;
v7 = null;
goto label3;
label2:
v7 = new java.util.concurrent.atomic.AtomicInteger;
v8 = virtualinvoke v6.<java.lang.Integer: int intValue()>();
specialinvoke v7.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(v8);
label3:
return v7;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
return v1;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer v0;
java.util.concurrent.atomic.AtomicInteger v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicIntegerDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v2.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
return v2;
}
}