public class com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer extends com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer
{
private static final long serialVersionUID;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.deser.ValueInstantiator, com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer)
{
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
com.fasterxml.jackson.databind.deser.ValueInstantiator v2;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.JsonDeserializer v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.ValueInstantiator;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ReferenceTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>(v1, v2, v3, v4);
return;
}
public com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer withResolved(com.fasterxml.jackson.databind.jsontype.TypeDeserializer, com.fasterxml.jackson.databind.JsonDeserializer)
{
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0, v3;
com.fasterxml.jackson.databind.deser.ValueInstantiator v5;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v1;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.JsonDeserializer v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonDeserializer;
v3 = new com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: com.fasterxml.jackson.databind.JavaType _fullType>;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: com.fasterxml.jackson.databind.deser.ValueInstantiator _valueInstantiator>;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.ValueInstantiator,com.fasterxml.jackson.databind.jsontype.TypeDeserializer,com.fasterxml.jackson.databind.JsonDeserializer)>(v4, v5, v1, v2);
return v3;
}
public java.util.concurrent.atomic.AtomicReference getNullValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
java.lang.Object v4;
com.fasterxml.jackson.databind.JsonDeserializer v3;
java.util.concurrent.atomic.AtomicReference v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = new java.util.concurrent.atomic.AtomicReference;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: com.fasterxml.jackson.databind.JsonDeserializer _valueDeserializer>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
specialinvoke v2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(v4);
return v2;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
java.util.concurrent.atomic.AtomicReference v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer: java.util.concurrent.atomic.AtomicReference getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
return v2;
}
public java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
return null;
}
public java.util.concurrent.atomic.AtomicReference referenceValue(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
java.util.concurrent.atomic.AtomicReference v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: java.lang.Object;
v2 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v2.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(v1);
return v2;
}
public java.lang.Object getReferenced(java.util.concurrent.atomic.AtomicReference)
{
java.lang.Object v2;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
java.util.concurrent.atomic.AtomicReference v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: java.util.concurrent.atomic.AtomicReference;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
return v2;
}
public java.util.concurrent.atomic.AtomicReference updateReference(java.util.concurrent.atomic.AtomicReference, java.lang.Object)
{
java.lang.Object v2;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
java.util.concurrent.atomic.AtomicReference v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: java.util.concurrent.atomic.AtomicReference;
v2 := @parameter1: java.lang.Object;
virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v2);
return v1;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
java.lang.Boolean v2;
com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.AtomicReferenceDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v2;
}
}