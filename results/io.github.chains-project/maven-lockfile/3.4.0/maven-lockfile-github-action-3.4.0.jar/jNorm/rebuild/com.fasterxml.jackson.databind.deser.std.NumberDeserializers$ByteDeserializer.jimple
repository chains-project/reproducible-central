public class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer extends com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer
{
private static final long serialVersionUID;
static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance;
static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance;
public void <init>(java.lang.Class, java.lang.Byte)
{
com.fasterxml.jackson.databind.type.LogicalType v3;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer v0;
java.lang.Class v1;
java.lang.Byte v2, v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Byte;
v3 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object)>(v1, v3, v2, v4);
return;
}
public java.lang.Byte deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer v0;
byte v4, v7;
java.lang.Byte v5, v8, v9;
boolean v3, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedNumberIntToken()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
v5 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v4);
return v5;
label1:
v6 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: boolean _primitive>;
if v6 == 0 goto label2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v8 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v7);
return v8;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v9;
}
protected java.lang.Byte _parseByte(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
byte v11, v14;
java.lang.Byte v12, v15, v37;
boolean v26, v33;
java.lang.Object[] v31, v35;
com.fasterxml.jackson.databind.cfg.CoercionAction v20, v21, v23, v6, v7, v9;
int v28, v3;
com.fasterxml.jackson.databind.JavaType v18;
java.lang.String v25, v4;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v29;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer v0;
java.lang.Class v17, v30, v34, v5;
java.lang.Object v10, v13, v16, v19, v22, v24, v27, v32, v36, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label08;
case 2: goto label09;
case 3: goto label07;
case 4: goto label09;
case 5: goto label09;
case 6: goto label01;
case 7: goto label06;
case 8: goto label02;
case 9: goto label09;
case 10: goto label09;
case 11: goto label05;
default: goto label09;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label10;
label02:
v5 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Class _valueClass>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFloatToIntCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v5);
v7 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v6 != v7 goto label03;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v8;
label03:
v9 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v6 != v9 goto label04;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v10;
label04:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
v12 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v11);
return v12;
label05:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v13;
label06:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
v15 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v14);
return v15;
label07:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label08:
v17 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Class _valueClass>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v17);
goto label10;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v18, v1);
return v19;
label10:
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v4);
v21 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v20 != v21 goto label11;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v22;
label11:
v23 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v20 != v23 goto label12;
v24 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v24;
label12:
v25 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v26 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v25);
if v26 == 0 goto label13;
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v27;
label13:
v28 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v25);
label14:
goto label16;
label15:
v29 := @caughtexception;
v30 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Class _valueClass>;
v31 = newarray (java.lang.Object)[0];
v32 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v30, v25, "not a valid Byte value", v31);
return v32;
label16:
v33 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: boolean _byteOverflow(int)>(v28);
if v33 == 0 goto label17;
v34 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: java.lang.Class _valueClass>;
v35 = newarray (java.lang.Object)[0];
v36 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v34, v25, "overflow, value cannot be represented as 8-bit value", v35);
return v36;
label17:
v37 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v28);
return v37;
catch java.lang.IllegalArgumentException from label13 to label14 with label15;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer v0, v3;
java.lang.Class v1;
java.lang.Byte v2;
v0 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer;
v1 = <java.lang.Byte: java.lang.Class TYPE>;
v2 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(0);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>(v1, v2);
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer primitiveInstance> = v0;
v3 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: void <init>(java.lang.Class,java.lang.Byte)>(class "Ljava/lang/Byte;", null);
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$ByteDeserializer wrapperInstance> = v3;
return;
}
}