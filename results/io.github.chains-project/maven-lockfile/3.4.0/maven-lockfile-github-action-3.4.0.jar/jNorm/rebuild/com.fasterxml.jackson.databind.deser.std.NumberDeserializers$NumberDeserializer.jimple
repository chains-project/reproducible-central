public class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
public static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Number;");
return;
}
public final com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer v0;
com.fasterxml.jackson.databind.type.LogicalType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
return v1;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.core.StreamReadConstraints v33, v44;
java.lang.Integer v56;
com.fasterxml.jackson.databind.DeserializationFeature v35, v46, v52, v9;
java.math.BigDecimal v12, v39;
byte v54, v55;
java.lang.Long v57;
java.math.BigInteger v50;
boolean v10, v11, v24, v26, v28, v30, v32, v36, v38, v41, v47, v49, v53, v6;
com.fasterxml.jackson.core.StreamReadFeature v37, v40, v48;
java.lang.Object[] v60;
java.lang.Double v27, v29, v31, v43;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer v0;
long v51;
com.fasterxml.jackson.databind.cfg.CoercionAction v18, v19, v21;
int v3, v34, v45, v5;
com.fasterxml.jackson.databind.JavaType v16;
java.lang.String v23, v4;
java.lang.Number v13, v8;
double v42;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v58;
java.lang.Class v14, v59;
java.lang.Object v15, v17, v20, v22, v25, v61, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label06;
case 2: goto label08;
case 3: goto label07;
case 4: goto label08;
case 5: goto label08;
case 6: goto label01;
case 7: goto label02;
case 8: goto label04;
default: goto label08;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label09;
label02:
v5 = <com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: int F_MASK_INT_COERCIONS>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean hasSomeOfFeatures(int)>(v5);
if v6 == 0 goto label03;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v7;
label03:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v8;
label04:
v9 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v9);
if v10 == 0 goto label05;
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isNaN()>();
if v11 != 0 goto label05;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
return v12;
label05:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v13;
label06:
v14 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Class _valueClass>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v14);
goto label09;
label07:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v15;
label08:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v16, v1);
return v17;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v4);
v19 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v18 != v19 goto label10;
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v20;
label10:
v21 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v18 != v21 goto label11;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v22;
label11:
v23 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v24 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _hasTextualNull(java.lang.String)>(v23);
if v24 == 0 goto label12;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v25;
label12:
v26 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isPosInf(java.lang.String)>(v23);
if v26 == 0 goto label13;
v27 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#Infinity);
return v27;
label13:
v28 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isNegInf(java.lang.String)>(v23);
if v28 == 0 goto label14;
v29 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#-Infinity);
return v29;
label14:
v30 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isNaN(java.lang.String)>(v23);
if v30 == 0 goto label15;
v31 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(#NaN);
return v31;
label15:
v32 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: boolean _isIntNumber(java.lang.String)>(v23);
if v32 != 0 goto label19;
v33 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()>();
v34 = virtualinvoke v23.<java.lang.String: int length()>();
virtualinvoke v33.<com.fasterxml.jackson.core.StreamReadConstraints: void validateFPLength(int)>(v34);
v35 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v36 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v35);
if v36 == 0 goto label17;
v37 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_BIG_NUMBER_PARSER>;
v38 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>(v37);
v39 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: java.math.BigDecimal parseBigDecimal(java.lang.String,boolean)>(v23, v38);
label16:
return v39;
label17:
v40 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_DOUBLE_PARSER>;
v41 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>(v40);
v42 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String,boolean)>(v23, v41);
v43 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v42);
label18:
return v43;
label19:
v44 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.StreamReadConstraints streamReadConstraints()>();
v45 = virtualinvoke v23.<java.lang.String: int length()>();
virtualinvoke v44.<com.fasterxml.jackson.core.StreamReadConstraints: void validateIntegerLength(int)>(v45);
v46 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v47 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v46);
if v47 == 0 goto label21;
v48 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_BIG_NUMBER_PARSER>;
v49 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>(v48);
v50 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: java.math.BigInteger parseBigInteger(java.lang.String,boolean)>(v23, v49);
label20:
return v50;
label21:
v51 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v23);
v52 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_LONG_FOR_INTS>;
v53 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v52);
if v53 != 0 goto label23;
v54 = v51 cmp 2147483647L;
if v54 > 0 goto label23;
v55 = v51 cmp -2147483648L;
if v55 < 0 goto label23;
v56 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v51);
label22:
return v56;
label23:
v57 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v51);
label24:
return v57;
label25:
v58 := @caughtexception;
v59 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Class _valueClass>;
v60 = newarray (java.lang.Object)[0];
v61 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v59, v23, "not a valid number", v60);
return v61;
catch java.lang.IllegalArgumentException from label15 to label16 with label25;
catch java.lang.IllegalArgumentException from label17 to label18 with label25;
catch java.lang.IllegalArgumentException from label19 to label20 with label25;
catch java.lang.IllegalArgumentException from label21 to label22 with label25;
catch java.lang.IllegalArgumentException from label23 to label24 with label25;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
int v4;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer v0;
java.lang.Object v5, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 6: goto label1;
case 7: goto label1;
case 8: goto label1;
default: goto label2;
};
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label2:
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v6;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer v0;
v0 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$NumberDeserializer instance> = v0;
return;
}
}