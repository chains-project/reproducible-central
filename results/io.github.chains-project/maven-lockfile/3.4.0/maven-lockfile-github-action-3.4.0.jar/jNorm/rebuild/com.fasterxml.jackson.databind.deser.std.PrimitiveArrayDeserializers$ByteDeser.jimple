final class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser extends com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(java.lang.Class)>(class "[B");
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser, com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0, v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.NullValueProvider;
v3 := @parameter2: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.NullValueProvider v1;
java.lang.Boolean v2;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.NullValueProvider;
v2 := @parameter1: java.lang.Boolean;
v3 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v0, v1, v2);
return v3;
}
protected byte[] _constructEmpty()
{
byte[] v1;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 = newarray (byte)[0];
return v1;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0;
com.fasterxml.jackson.databind.type.LogicalType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Binary>;
return v1;
}
public byte[] deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
byte[] v6;
byte v25;
boolean v15, v16, v9;
com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder v19;
java.lang.Exception v31;
com.fasterxml.jackson.core.Base64Variant v5;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0;
com.fasterxml.jackson.databind.JsonMappingException v34;
java.lang.Object[] v11;
int v21, v29, v30, v32, v33;
com.fasterxml.jackson.core.JsonToken v13, v22, v23, v24, v26, v3, v4;
java.lang.String v10, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v27, v28;
com.fasterxml.jackson.core.JsonProcessingException v7;
com.fasterxml.jackson.databind.util.ArrayBuilders v18;
java.lang.Object v12, v14, v17, v20, v35;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v3 != v4 goto label04;
label01:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte[] getBinaryValue(com.fasterxml.jackson.core.Base64Variant)>(v5);
label02:
return v6;
label03:
v7 := @caughtexception;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonProcessingException: java.lang.String getOriginalMessage()>();
v9 = virtualinvoke v8.<java.lang.String: boolean contains(java.lang.CharSequence)>("base64");
if v9 == 0 goto label04;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v11 = newarray (java.lang.Object)[0];
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(class "[B", v10, v8, v11);
return v12;
label04:
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v3 != v13 goto label06;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
if v14 != null goto label05;
return null;
label05:
v15 = v14 instanceof byte[];
if v15 == 0 goto label06;
return v14;
label06:
v16 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v16 != 0 goto label07;
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v17;
label07:
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders()>();
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.util.ArrayBuilders: com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder getByteBuilder()>();
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: java.lang.Object resetAndStart()>();
v21 = 0;
label08:
v22 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v23 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v22 == v23 goto label15;
v24 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v22 != v24 goto label09;
v25 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
goto label12;
label09:
v26 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v22 != v26 goto label11;
v27 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
if v27 == null goto label10;
v28 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
interfaceinvoke v28.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label08;
label10:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v25 = 0;
goto label12;
label11:
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: byte _parseBytePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label12:
v29 = lengthof v20;
if v21 < v29 goto label13;
virtualinvoke v19.<com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>(v20, v21);
v21 = 0;
label13:
v30 = v21;
v21 = v21 + 1;
v20[v30] = v25;
goto label08;
label14:
v31 := @caughtexception;
v32 = virtualinvoke v19.<com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: int bufferedSize()>();
v33 = v32 + v21;
v34 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>(v31, v20, v33);
throw v34;
label15:
v35 = virtualinvoke v19.<com.fasterxml.jackson.databind.util.ArrayBuilders$ByteBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>(v20, v21);
return v35;
catch com.fasterxml.jackson.core.exc.StreamReadException from label01 to label02 with label03;
catch com.fasterxml.jackson.databind.DatabindException from label01 to label02 with label03;
catch java.lang.Exception from label08 to label14 with label14;
}
protected byte[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
byte[] v13;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v7, v8;
byte v5;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0;
java.lang.Class v10, v11;
java.lang.Object v12, v9;
com.fasterxml.jackson.core.JsonToken v3, v4, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v3 != v4 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: byte getByteValue()>();
goto label4;
label1:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v3 != v6 goto label3;
v7 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
if v7 == null goto label2;
v8 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
interfaceinvoke v8.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v9;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return null;
label3:
v10 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser: java.lang.Class _valueClass>;
v11 = virtualinvoke v10.<java.lang.Class: java.lang.Class getComponentType()>();
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v11, v1);
v5 = virtualinvoke v12.<java.lang.Number: byte byteValue()>();
label4:
v13 = newarray (byte)[1];
v13[0] = v5;
return v13;
}
protected byte[] _concat(byte[], byte[])
{
byte[] v1, v2, v6;
int v3, v4, v5;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$ByteDeser;
v1 := @parameter0: byte[];
v2 := @parameter1: byte[];
v3 = lengthof v1;
v4 = lengthof v2;
v5 = v3 + v4;
v6 = staticinvoke <java.util.Arrays: byte[] copyOf(byte[],int)>(v1, v5);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v6, v3, v4);
return v6;
}
}