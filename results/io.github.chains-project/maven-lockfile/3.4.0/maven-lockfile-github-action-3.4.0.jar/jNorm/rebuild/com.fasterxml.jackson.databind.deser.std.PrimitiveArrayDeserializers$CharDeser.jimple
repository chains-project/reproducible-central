final class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser extends com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(java.lang.Class)>(class "[C");
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser, com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0, v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.NullValueProvider;
v3 := @parameter2: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0;
java.lang.Boolean v2;
com.fasterxml.jackson.databind.deser.NullValueProvider v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.NullValueProvider;
v2 := @parameter1: java.lang.Boolean;
return v0;
}
protected char[] _constructEmpty()
{
char[] v1;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v1 = newarray (char)[0];
return v1;
}
public char[] deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Integer v23;
boolean v28, v30, v31, v33, v4, v9;
com.fasterxml.jackson.core.Base64Variant v34;
java.lang.StringBuilder v10;
java.lang.Object[] v21;
int v20, v22, v6, v7;
com.fasterxml.jackson.core.JsonToken v11, v12, v13, v15, v27, v3;
java.lang.String v14, v25, v35;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v16, v17;
char v24;
char[] v26, v32, v36, v5, v8;
java.lang.Class v18, v37;
java.lang.Object v19, v29, v38;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label01;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: char[] getTextCharacters()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getTextOffset()>();
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getTextLength()>();
v8 = newarray (char)[v7];
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v5, v6, v8, 0, v7);
return v8;
label01:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v9 == 0 goto label09;
v10 = new java.lang.StringBuilder;
specialinvoke v10.<java.lang.StringBuilder: void <init>(int)>(64);
label02:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v11 == v12 goto label08;
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v11 != v13 goto label03;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label06;
label03:
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v11 != v15 goto label05;
v16 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
if v16 == null goto label04;
v17 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
interfaceinvoke v17.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label02;
label04:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v14 = "\u0000";
goto label06;
label05:
v18 = <java.lang.Character: java.lang.Class TYPE>;
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v18, v1);
v14 = virtualinvoke v19.<java.lang.Object: java.lang.String toString()>();
label06:
v20 = virtualinvoke v14.<java.lang.String: int length()>();
if v20 == 1 goto label07;
v21 = newarray (java.lang.Object)[1];
v22 = virtualinvoke v14.<java.lang.String: int length()>();
v23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v22);
v21[0] = v23;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(com.fasterxml.jackson.databind.JsonDeserializer,java.lang.String,java.lang.Object[])>(v0, "Cannot convert a JSON String of length %d into a char element of char array", v21);
label07:
v24 = virtualinvoke v14.<java.lang.String: char charAt(int)>(0);
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v24);
goto label02;
label08:
v25 = virtualinvoke v10.<java.lang.StringBuilder: java.lang.String toString()>();
v26 = virtualinvoke v25.<java.lang.String: char[] toCharArray()>();
return v26;
label09:
v27 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v27);
if v28 == 0 goto label13;
v29 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
if v29 != null goto label10;
return null;
label10:
v30 = v29 instanceof char[];
if v30 == 0 goto label11;
return v29;
label11:
v31 = v29 instanceof java.lang.String;
if v31 == 0 goto label12;
v32 = virtualinvoke v29.<java.lang.String: char[] toCharArray()>();
return v32;
label12:
v33 = v29 instanceof byte[];
if v33 == 0 goto label13;
v34 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();
v35 = virtualinvoke v34.<com.fasterxml.jackson.core.Base64Variant: java.lang.String encode(byte[],boolean)>(v29, 0);
v36 = virtualinvoke v35.<java.lang.String: char[] toCharArray()>();
return v36;
label13:
v37 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: java.lang.Class _valueClass>;
v38 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v37, v1);
return v38;
}
protected char[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Class v3;
java.lang.Object v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser: java.lang.Class _valueClass>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(v3, v1);
return v4;
}
protected char[] _concat(char[], char[])
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser v0;
int v3, v4, v5;
char[] v1, v2, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$CharDeser;
v1 := @parameter0: char[];
v2 := @parameter1: char[];
v3 = lengthof v1;
v4 = lengthof v2;
v5 = v3 + v4;
v6 = staticinvoke <java.util.Arrays: char[] copyOf(char[],int)>(v1, v5);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v6, v3, v4);
return v6;
}
}