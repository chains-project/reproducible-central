public class com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer extends com.fasterxml.jackson.databind.KeyDeserializer implements java.io.Serializable
{
private static final long serialVersionUID;
public static final int TYPE_BOOLEAN;
public static final int TYPE_BYTE;
public static final int TYPE_SHORT;
public static final int TYPE_CHAR;
public static final int TYPE_INT;
public static final int TYPE_LONG;
public static final int TYPE_FLOAT;
public static final int TYPE_DOUBLE;
public static final int TYPE_LOCALE;
public static final int TYPE_DATE;
public static final int TYPE_CALENDAR;
public static final int TYPE_UUID;
public static final int TYPE_URI;
public static final int TYPE_URL;
public static final int TYPE_CLASS;
public static final int TYPE_CURRENCY;
public static final int TYPE_BYTE_ARRAY;
protected final int _kind;
protected final java.lang.Class _keyClass;
protected final com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser;
protected void <init>(int, java.lang.Class)
{
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
int v1;
java.lang.Class v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)>(v1, v2, null);
return;
}
protected void <init>(int, java.lang.Class, com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v3;
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
int v1;
java.lang.Class v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.KeyDeserializer: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _kind> = v1;
v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser> = v3;
return;
}
public static com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer forType(java.lang.Class)
{
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v3, v5;
byte v2;
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v4, v6, v7;
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD v1;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
if v0 == class "Ljava/lang/String;" goto label01;
if v0 == class "Ljava/lang/Object;" goto label01;
if v0 == class "Ljava/lang/CharSequence;" goto label01;
if v0 != class "Ljava/io/Serializable;" goto label02;
label01:
v1 = staticinvoke <com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer$StringKD forType(java.lang.Class)>(v0);
return v1;
label02:
if v0 != class "Ljava/util/UUID;" goto label03;
v2 = 12;
goto label20;
label03:
if v0 != class "Ljava/lang/Integer;" goto label04;
v2 = 5;
goto label20;
label04:
if v0 != class "Ljava/lang/Long;" goto label05;
v2 = 6;
goto label20;
label05:
if v0 != class "Ljava/util/Date;" goto label06;
v2 = 10;
goto label20;
label06:
if v0 != class "Ljava/util/Calendar;" goto label07;
v2 = 11;
goto label20;
label07:
if v0 != class "Ljava/lang/Boolean;" goto label08;
v2 = 1;
goto label20;
label08:
if v0 != class "Ljava/lang/Byte;" goto label09;
v2 = 2;
goto label20;
label09:
if v0 != class "Ljava/lang/Character;" goto label10;
v2 = 4;
goto label20;
label10:
if v0 != class "Ljava/lang/Short;" goto label11;
v2 = 3;
goto label20;
label11:
if v0 != class "Ljava/lang/Float;" goto label12;
v2 = 7;
goto label20;
label12:
if v0 != class "Ljava/lang/Double;" goto label13;
v2 = 8;
goto label20;
label13:
if v0 != class "Ljava/net/URI;" goto label14;
v2 = 13;
goto label20;
label14:
if v0 != class "Ljava/net/URL;" goto label15;
v2 = 14;
goto label20;
label15:
if v0 != class "Ljava/lang/Class;" goto label16;
v2 = 15;
goto label20;
label16:
if v0 != class "Ljava/util/Locale;" goto label17;
v3 = staticinvoke <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class)>(class "Ljava/util/Locale;");
v4 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
specialinvoke v4.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)>(9, v0, v3);
return v4;
label17:
if v0 != class "Ljava/util/Currency;" goto label18;
v5 = staticinvoke <com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer findDeserializer(java.lang.Class)>(class "Ljava/util/Currency;");
v6 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
specialinvoke v6.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class,com.fasterxml.jackson.databind.deser.std.FromStringDeserializer)>(16, v0, v5);
return v6;
label18:
if v0 != class "[B" goto label19;
v2 = 17;
goto label20;
label19:
return null;
label20:
v7 = new com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
specialinvoke v7.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: void <init>(int,java.lang.Class)>(v2, v0);
return v7;
}
public java.lang.Object deserializeKey(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v17, v6;
com.fasterxml.jackson.databind.DeserializationFeature v14;
com.fasterxml.jackson.databind.DeserializationConfig v13;
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
java.lang.String v1, v8, v9;
boolean v12, v15;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Exception v4;
java.lang.Class v11, v16, v5, v7;
java.lang.Object v10, v18, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
if v1 != null goto label1;
return null;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _parse(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
if v3 == null goto label4;
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v6 = newarray (java.lang.Object)[2];
v7 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v6[0] = v8;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v4);
v6[1] = v9;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v5, v1, "not a valid representation, problem: (%s) %s", v6);
return v10;
label4:
v11 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v11);
if v12 == 0 goto label5;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v14 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature READ_UNKNOWN_ENUM_VALUES_AS_NULL>;
v15 = virtualinvoke v13.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v14);
if v15 == 0 goto label5;
return null;
label5:
v16 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v17 = newarray (java.lang.Object)[0];
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v16, v1, "not a valid representation", v17);
return v18;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.lang.Class getKeyClass()
{
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
return v1;
}
protected java.lang.Object _parse(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.lang.Exception
{
byte[] v66;
java.lang.Float v36;
java.lang.Integer v32;
java.lang.Character v27;
java.lang.Long v34;
com.fasterxml.jackson.databind.deser.std.FromStringDeserializer v39, v43;
java.lang.Exception v51, v54, v60;
java.lang.Object[] v11, v16, v22, v29, v62;
java.lang.Double v38;
long v33;
java.util.Calendar v49;
java.lang.String v1, v4, v7, v71;
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.IllegalStateException v69;
java.net.URL v56;
java.util.Date v47, v48;
java.lang.Short v24;
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
java.net.URI v53;
java.lang.Byte v18;
boolean v5, v8;
java.util.UUID v50;
com.fasterxml.jackson.core.Base64Variant v65;
com.fasterxml.jackson.databind.DeserializationConfig v64;
int v13, v14, v19, v20, v25, v3, v31;
java.lang.Boolean v6, v9;
double v35, v37;
java.net.MalformedURLException v57;
char v26;
java.lang.IllegalArgumentException v41, v45, v67;
java.lang.Class v10, v15, v21, v28, v59, v61, v70;
java.lang.Object v12, v17, v23, v30, v40, v42, v44, v46, v52, v55, v58, v63, v68;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _kind>;
tableswitch(v3)
{
case 1: goto label01;
case 2: goto label04;
case 3: goto label07;
case 4: goto label10;
case 5: goto label12;
case 6: goto label13;
case 7: goto label14;
case 8: goto label15;
case 9: goto label16;
case 10: goto label22;
case 11: goto label23;
case 12: goto label24;
case 13: goto label27;
case 14: goto label30;
case 15: goto label33;
case 16: goto label19;
case 17: goto label36;
default: goto label39;
};
label01:
v4 = "true";
v5 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v5 == 0 goto label02;
v6 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v6;
label02:
v7 = "false";
v8 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v8 == 0 goto label03;
v9 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v9;
label03:
v10 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v11 = newarray (java.lang.Object)[0];
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v10, v1, "value not \'true\' or \'false\'", v11);
return v12;
label04:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _parseInt(java.lang.String)>(v1);
v14 = (int) -128;
if v13 < v14 goto label05;
if v13 <= 255 goto label06;
label05:
v15 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v16 = newarray (java.lang.Object)[0];
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v15, v1, "overflow, value cannot be represented as 8-bit value", v16);
return v17;
label06:
v18 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v13);
return v18;
label07:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _parseInt(java.lang.String)>(v1);
v20 = (int) -32768;
if v19 < v20 goto label08;
if v19 <= 32767 goto label09;
label08:
v21 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v22 = newarray (java.lang.Object)[0];
v23 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v21, v1, "overflow, value cannot be represented as 16-bit value", v22);
return v23;
label09:
v24 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v19);
return v24;
label10:
v25 = virtualinvoke v1.<java.lang.String: int length()>();
if v25 != 1 goto label11;
v26 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
v27 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(v26);
return v27;
label11:
v28 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v29 = newarray (java.lang.Object)[0];
v30 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v28, v1, "can only convert 1-character Strings", v29);
return v30;
label12:
v31 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: int _parseInt(java.lang.String)>(v1);
v32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v31);
return v32;
label13:
v33 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: long _parseLong(java.lang.String)>(v1);
v34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v33);
return v34;
label14:
v35 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: double _parseDouble(java.lang.String)>(v1);
v36 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v35);
return v36;
label15:
v37 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: double _parseDouble(java.lang.String)>(v1);
v38 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v37);
return v38;
label16:
v39 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser>;
v40 = virtualinvoke v39.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label17:
return v40;
label18:
v41 := @caughtexception;
v42 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(v2, v1, v41);
return v42;
label19:
v43 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: com.fasterxml.jackson.databind.deser.std.FromStringDeserializer _deser>;
v44 = virtualinvoke v43.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserialize(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label20:
return v44;
label21:
v45 := @caughtexception;
v46 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(v2, v1, v45);
return v46;
label22:
v47 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.util.Date parseDate(java.lang.String)>(v1);
return v47;
label23:
v48 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.util.Date parseDate(java.lang.String)>(v1);
v49 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.util.Calendar constructCalendar(java.util.Date)>(v48);
return v49;
label24:
v50 = staticinvoke <java.util.UUID: java.util.UUID fromString(java.lang.String)>(v1);
label25:
return v50;
label26:
v51 := @caughtexception;
v52 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(v2, v1, v51);
return v52;
label27:
v53 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v1);
label28:
return v53;
label29:
v54 := @caughtexception;
v55 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(v2, v1, v54);
return v55;
label30:
v56 = new java.net.URL;
specialinvoke v56.<java.net.URL: void <init>(java.lang.String)>(v1);
label31:
return v56;
label32:
v57 := @caughtexception;
v58 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(v2, v1, v57);
return v58;
label33:
v59 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Class findClass(java.lang.String)>(v1);
label34:
return v59;
label35:
v60 := @caughtexception;
v61 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v62 = newarray (java.lang.Object)[0];
v63 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v61, v1, "unable to parse key as Class", v62);
return v63;
label36:
v64 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.DeserializationConfig getConfig()>();
v65 = virtualinvoke v64.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
v66 = virtualinvoke v65.<com.fasterxml.jackson.core.Base64Variant: byte[] decode(java.lang.String)>(v1);
label37:
return v66;
label38:
v67 := @caughtexception;
v68 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String,java.lang.Exception)>(v2, v1, v67);
return v68;
label39:
v69 = new java.lang.IllegalStateException;
v70 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v71 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v70) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Internal error: unknown key type \u0001");
specialinvoke v69.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v71);
throw v69;
catch java.lang.IllegalArgumentException from label16 to label17 with label18;
catch java.lang.IllegalArgumentException from label19 to label20 with label21;
catch java.lang.Exception from label24 to label25 with label26;
catch java.lang.Exception from label27 to label28 with label29;
catch java.net.MalformedURLException from label30 to label31 with label32;
catch java.lang.Exception from label33 to label34 with label35;
catch java.lang.IllegalArgumentException from label36 to label37 with label38;
}
protected int _parseInt(java.lang.String) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
int v2;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v1);
return v2;
}
protected long _parseLong(java.lang.String) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
long v2;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v1);
return v2;
}
protected double _parseDouble(java.lang.String) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
java.lang.String v1;
double v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: double parseDouble(java.lang.String)>(v1);
return v2;
}
protected java.lang.Object _weirdKey(com.fasterxml.jackson.databind.DeserializationContext, java.lang.String, java.lang.Exception) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v5;
java.lang.Exception v3;
com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer v0;
java.lang.Class v4;
java.lang.Object v7;
java.lang.String v2, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Exception;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.StdKeyDeserializer: java.lang.Class _keyClass>;
v5 = newarray (java.lang.Object)[1];
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v3);
v5[0] = v6;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdKey(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v4, v2, "problem: %s", v5);
return v7;
}
}