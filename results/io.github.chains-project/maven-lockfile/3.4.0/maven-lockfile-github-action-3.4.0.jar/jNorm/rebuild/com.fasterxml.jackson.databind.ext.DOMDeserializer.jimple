public abstract class com.fasterxml.jackson.databind.ext.DOMDeserializer extends com.fasterxml.jackson.databind.deser.std.FromStringDeserializer
{
private static final long serialVersionUID;
private static final javax.xml.parsers.DocumentBuilderFactory DEFAULT_PARSER_FACTORY;
protected void <init>(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.ext.DOMDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.ext.DOMDeserializer;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: void <init>(java.lang.Class)>(v1);
return;
}
public abstract java.lang.Object _deserialize(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext);
protected final org.w3c.dom.Document parse(java.lang.String) throws java.lang.IllegalArgumentException
{
org.xml.sax.InputSource v3;
java.lang.IllegalArgumentException v7;
java.lang.Exception v6;
java.io.StringReader v4;
org.w3c.dom.Document v5;
javax.xml.parsers.DocumentBuilder v2;
java.lang.String v1, v8, v9;
com.fasterxml.jackson.databind.ext.DOMDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.ext.DOMDeserializer;
v1 := @parameter0: java.lang.String;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ext.DOMDeserializer: javax.xml.parsers.DocumentBuilder documentBuilder()>();
v3 = new org.xml.sax.InputSource;
v4 = new java.io.StringReader;
specialinvoke v4.<java.io.StringReader: void <init>(java.lang.String)>(v1);
specialinvoke v3.<org.xml.sax.InputSource: void <init>(java.io.Reader)>(v4);
v5 = virtualinvoke v2.<javax.xml.parsers.DocumentBuilder: org.w3c.dom.Document parse(org.xml.sax.InputSource)>(v3);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = new java.lang.IllegalArgumentException;
v8 = virtualinvoke v6.<java.lang.Exception: java.lang.String getMessage()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to parse JSON String as XML: \u0001");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v9, v6);
throw v7;
catch java.lang.Exception from label1 to label2 with label3;
}
protected javax.xml.parsers.DocumentBuilder documentBuilder() throws javax.xml.parsers.ParserConfigurationException
{
javax.xml.parsers.DocumentBuilderFactory v1;
com.fasterxml.jackson.databind.ext.DOMDeserializer v0;
javax.xml.parsers.DocumentBuilder v2;
v0 := @this: com.fasterxml.jackson.databind.ext.DOMDeserializer;
v1 = <com.fasterxml.jackson.databind.ext.DOMDeserializer: javax.xml.parsers.DocumentBuilderFactory DEFAULT_PARSER_FACTORY>;
v2 = virtualinvoke v1.<javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilder newDocumentBuilder()>();
return v2;
}
static void <clinit>()
{
javax.xml.parsers.ParserConfigurationException v1;
javax.xml.parsers.DocumentBuilderFactory v0;
java.lang.Exception v2, v3;
v0 = staticinvoke <javax.xml.parsers.DocumentBuilderFactory: javax.xml.parsers.DocumentBuilderFactory newInstance()>();
virtualinvoke v0.<javax.xml.parsers.DocumentBuilderFactory: void setNamespaceAware(boolean)>(1);
virtualinvoke v0.<javax.xml.parsers.DocumentBuilderFactory: void setExpandEntityReferences(boolean)>(0);
label01:
virtualinvoke v0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://javax.xml.XMLConstants/feature/secure-processing", 1);
label02:
goto label04;
label03:
v1 := @caughtexception;
label04:
virtualinvoke v0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/disallow-doctype-decl", 1);
label05:
goto label07;
label06:
v2 := @caughtexception;
label07:
virtualinvoke v0.<javax.xml.parsers.DocumentBuilderFactory: void setFeature(java.lang.String,boolean)>("http://apache.org/xml/features/nonvalidating/load-external-dtd", 0);
label08:
goto label10;
label09:
v3 := @caughtexception;
label10:
<com.fasterxml.jackson.databind.ext.DOMDeserializer: javax.xml.parsers.DocumentBuilderFactory DEFAULT_PARSER_FACTORY> = v0;
return;
catch javax.xml.parsers.ParserConfigurationException from label01 to label02 with label03;
catch java.lang.Exception from label04 to label05 with label06;
catch java.lang.Exception from label07 to label08 with label09;
}
}