public class com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector extends com.fasterxml.jackson.databind.introspect.CollectorBase
{
private final com.fasterxml.jackson.databind.type.TypeFactory _typeFactory;
private final com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver;
private final boolean _collectAnnotations;
void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver, boolean)
{
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v1;
com.fasterxml.jackson.databind.type.TypeFactory v2;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v3, v5;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v4 := @parameter3: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector)>(v1);
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = v2;
if v1 != null goto label1;
v5 = null;
goto label2;
label1:
v5 = v3;
label2:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver> = v5;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: boolean _collectAnnotations> = v4;
return;
}
public static java.util.List collectFields(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.JavaType, boolean)
{
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector v6;
com.fasterxml.jackson.databind.AnnotationIntrospector v0;
java.util.List v7;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v2;
boolean v5;
v0 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v1 := @parameter1: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v3 := @parameter3: com.fasterxml.jackson.databind.type.TypeFactory;
v4 := @parameter4: com.fasterxml.jackson.databind.JavaType;
v5 := @parameter5: boolean;
v6 = new com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector;
specialinvoke v6.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean)>(v0, v3, v2, v5);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: java.util.List collect(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v7;
}
java.util.List collect(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector v0;
java.util.Iterator v8;
java.util.Collection v7;
java.util.ArrayList v5;
java.util.List v4;
java.util.Map v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
int v6;
java.lang.Object v10;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.introspect.AnnotatedField v11;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map)>(v1, v2, null);
if v3 != null goto label1;
v4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v4;
label1:
v5 = new java.util.ArrayList;
v6 = interfaceinvoke v3.<java.util.Map: int size()>();
specialinvoke v5.<java.util.ArrayList: void <init>(int)>(v6);
v7 = interfaceinvoke v3.<java.util.Map: java.util.Collection values()>();
v8 = interfaceinvoke v7.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label3;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedField build()>();
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v11);
goto label2;
label3:
return v5;
}
private java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.JavaType, java.util.Map)
{
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector v0;
java.lang.'annotation'.Annotation[] v19;
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder v16;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic v6;
java.util.LinkedHashMap v15;
com.fasterxml.jackson.databind.type.TypeFactory v7;
com.fasterxml.jackson.databind.type.TypeBindings v8;
java.util.Map v3, v9;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v18, v20;
int v11, v12;
com.fasterxml.jackson.databind.JavaType v2, v4;
java.lang.String v21;
boolean v14, v17;
java.lang.reflect.Field v13;
java.lang.reflect.Field[] v10;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
java.lang.Class v24, v5;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v22, v23;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: java.util.Map;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getSuperClass()>();
if v4 != null goto label1;
return v3;
label1:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = new com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic;
v7 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
specialinvoke v6.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings)>(v7, v8);
v9 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: java.util.Map _findFields(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.Map)>(v6, v4, v3);
v10 = virtualinvoke v5.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
v11 = lengthof v10;
v12 = 0;
label2:
if v12 >= v11 goto label6;
v13 = v10[v12];
v14 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: boolean _isIncludableField(java.lang.reflect.Field)>(v13);
if v14 == 0 goto label5;
if v9 != null goto label3;
v15 = new java.util.LinkedHashMap;
specialinvoke v15.<java.util.LinkedHashMap: void <init>()>();
v9 = v15;
label3:
v16 = new com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder;
specialinvoke v16.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Field)>(v1, v13);
v17 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: boolean _collectAnnotations>;
if v17 == 0 goto label4;
v18 = v16.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations>;
v19 = virtualinvoke v13.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v18, v19);
v16.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations> = v20;
label4:
v21 = virtualinvoke v13.<java.lang.reflect.Field: java.lang.String getName()>();
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v21, v16);
label5:
v12 = v12 + 1;
goto label2;
label6:
if v9 == null goto label7;
v22 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
if v22 == null goto label7;
v23 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v24 = interfaceinvoke v23.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(v5);
if v24 == null goto label7;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: void _addFieldMixIns(java.lang.Class,java.lang.Class,java.util.Map)>(v24, v5, v9);
label7:
return v9;
}
private void _addFieldMixIns(java.lang.Class, java.lang.Class, java.util.Map)
{
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector v0;
java.lang.'annotation'.Annotation[] v16;
java.util.Map v3;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v15, v17;
int v10, v9;
java.lang.String v13;
boolean v12, v6;
java.util.Iterator v5;
java.lang.reflect.Field v11;
java.lang.reflect.Field[] v8;
java.util.List v4;
java.lang.Class v1, v2;
java.lang.Object v14, v7;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.util.Map;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List findSuperClasses(java.lang.Class,java.lang.Class,boolean)>(v1, v2, 1);
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label4;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
v9 = lengthof v8;
v10 = 0;
label2:
if v10 >= v9 goto label1;
v11 = v8[v10];
v12 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: boolean _isIncludableField(java.lang.reflect.Field)>(v11);
if v12 == 0 goto label3;
v13 = virtualinvoke v11.<java.lang.reflect.Field: java.lang.String getName()>();
v14 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v13);
if v14 == null goto label3;
v15 = v14.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations>;
v16 = virtualinvoke v11.<java.lang.reflect.Field: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v15, v16);
v14.<com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector$FieldBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations> = v17;
label3:
v10 = v10 + 1;
goto label2;
label4:
return;
}
private boolean _isIncludableField(java.lang.reflect.Field)
{
com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector v0;
int v3;
java.lang.reflect.Field v1;
boolean v2, v4;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedFieldCollector;
v1 := @parameter0: java.lang.reflect.Field;
v2 = virtualinvoke v1.<java.lang.reflect.Field: boolean isSynthetic()>();
if v2 == 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
v4 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v3);
if v4 == 0 goto label2;
return 0;
label2:
return 1;
}
}