public class com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer extends com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
{
private static final com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)>(null, null);
return;
}
public static com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer instance()
{
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
v0 = <com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE>;
return v0;
}
public com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
com.fasterxml.jackson.databind.BeanProperty v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
return v0;
}
public com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
{
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer;
v1 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As EXISTING_PROPERTY>;
return v1;
}
public com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.type.WritableTypeId v12, v2;
java.lang.Object v11, v8;
com.fasterxml.jackson.core.JsonToken v10, v3, v6, v7, v9;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.core.type.WritableTypeId;
v3 = v2.<com.fasterxml.jackson.core.type.WritableTypeId: com.fasterxml.jackson.core.JsonToken valueShape>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonToken: boolean isStructStart()>();
if v4 == 0 goto label4;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: boolean canWriteTypeId()>();
if v5 == 0 goto label3;
v2.<com.fasterxml.jackson.core.type.WritableTypeId: boolean wrapperWritten> = 0;
v6 = v2.<com.fasterxml.jackson.core.type.WritableTypeId: com.fasterxml.jackson.core.JsonToken valueShape>;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v6 != v7 goto label1;
v8 = v2.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object forValue>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object)>(v8);
goto label2;
label1:
v9 = v2.<com.fasterxml.jackson.core.type.WritableTypeId: com.fasterxml.jackson.core.JsonToken valueShape>;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v9 != v10 goto label2;
v11 = v2.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object forValue>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object)>(v11);
label2:
return v2;
label3:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)>(v2);
return v12;
label4:
return null;
}
public com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException
{
com.fasterxml.jackson.core.type.WritableTypeId v2, v3;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.core.type.WritableTypeId;
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)>(v2);
label2:
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer v0;
v0 = new com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer: void <init>()>();
<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeSerializer INSTANCE> = v0;
return;
}
}