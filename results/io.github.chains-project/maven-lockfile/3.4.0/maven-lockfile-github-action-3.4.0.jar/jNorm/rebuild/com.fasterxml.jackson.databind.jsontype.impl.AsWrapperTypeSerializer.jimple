public class com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer extends com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase
{
public void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer v0;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
return;
}
public com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer forProperty(com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.BeanProperty v1, v2;
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer v0, v3;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
if v2 != v1 goto label1;
v3 = v0;
goto label2;
label1:
v3 = new com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
specialinvoke v3.<com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer: void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver,com.fasterxml.jackson.databind.BeanProperty)>(v4, v1);
label2:
return v3;
}
public com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer v0;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
v1 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_OBJECT>;
return v1;
}
protected java.lang.String _validTypeId(java.lang.String)
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer v0;
java.lang.String v1, v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String nonNullString(java.lang.String)>(v1);
return v2;
}
protected final void _writeTypeId(com.fasterxml.jackson.core.JsonGenerator, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer v0;
java.lang.String v2;
com.fasterxml.jackson.core.JsonGenerator v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsWrapperTypeSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.String;
if v2 == null goto label1;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeTypeId(java.lang.Object)>(v2);
label1:
return;
}
}