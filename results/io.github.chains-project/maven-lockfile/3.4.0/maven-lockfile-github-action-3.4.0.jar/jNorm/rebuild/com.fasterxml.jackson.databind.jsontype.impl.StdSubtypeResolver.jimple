public class com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver extends com.fasterxml.jackson.databind.jsontype.SubtypeResolver implements java.io.Serializable
{
private static final long serialVersionUID;
protected java.util.LinkedHashSet _registeredSubtypes;
public void <init>()
{
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void <init>()>();
return;
}
protected void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver)
{
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0, v1;
java.util.LinkedHashSet v2, v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void <init>()>();
v2 = v1.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = new java.util.LinkedHashSet;
specialinvoke v3.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v2);
label2:
v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes> = v3;
return;
}
public com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy()
{
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0, v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
specialinvoke v1.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void <init>(com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver)>(v0);
return v1;
}
public transient void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[])
{
com.fasterxml.jackson.databind.jsontype.NamedType[] v1;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
int v4, v5;
com.fasterxml.jackson.databind.jsontype.NamedType v6;
java.util.LinkedHashSet v2, v3, v7;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.NamedType[];
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
if v2 != null goto label1;
v3 = new java.util.LinkedHashSet;
specialinvoke v3.<java.util.LinkedHashSet: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes> = v3;
label1:
v4 = lengthof v1;
v5 = 0;
label2:
if v5 >= v4 goto label3;
v6 = v1[v5];
v7 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
virtualinvoke v7.<java.util.LinkedHashSet: boolean add(java.lang.Object)>(v6);
v5 = v5 + 1;
goto label2;
label3:
return;
}
public transient void registerSubtypes(java.lang.Class[])
{
java.lang.Class[] v1;
com.fasterxml.jackson.databind.jsontype.NamedType[] v3;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
int v2, v4, v5;
com.fasterxml.jackson.databind.jsontype.NamedType v6;
java.lang.Class v7;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: java.lang.Class[];
v2 = lengthof v1;
v3 = newarray (com.fasterxml.jackson.databind.jsontype.NamedType)[v2];
v4 = 0;
v5 = lengthof v1;
label1:
if v4 >= v5 goto label2;
v6 = new com.fasterxml.jackson.databind.jsontype.NamedType;
v7 = v1[v4];
specialinvoke v6.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>(v7);
v3[v4] = v6;
v4 = v4 + 1;
goto label1;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[])>(v3);
return;
}
public void registerSubtypes(java.util.Collection)
{
java.util.Iterator v5;
java.util.Collection v1;
com.fasterxml.jackson.databind.jsontype.NamedType[] v3;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
int v2, v4, v8;
com.fasterxml.jackson.databind.jsontype.NamedType v9;
java.lang.Object v7;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: java.util.Collection;
v2 = interfaceinvoke v1.<java.util.Collection: int size()>();
v3 = newarray (com.fasterxml.jackson.databind.jsontype.NamedType)[v2];
v4 = 0;
v5 = interfaceinvoke v1.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = v4;
v4 = v4 + 1;
v9 = new com.fasterxml.jackson.databind.jsontype.NamedType;
specialinvoke v9.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>(v7);
v3[v8] = v9;
goto label1;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[])>(v3);
return;
}
public java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
java.util.HashMap v7;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
java.util.ArrayList v25;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v2;
com.fasterxml.jackson.databind.jsontype.NamedType v23;
com.fasterxml.jackson.databind.JavaType v3;
java.util.LinkedHashSet v8, v9;
boolean v11, v14, v19;
java.util.Iterator v10, v18;
java.util.Collection v26;
java.lang.IllegalArgumentException v6;
java.util.List v17;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v16, v22, v24;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v13, v15, v21, v5;
java.lang.Object v12, v20;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
if v3 == null goto label1;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
goto label3;
label1:
if v2 == null goto label2;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getRawType()>();
goto label3;
label2:
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Both property and base type are nulls");
throw v6;
label3:
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
v8 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
if v8 == null goto label5;
v9 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
v10 = virtualinvoke v9.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
label4:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label5;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v14 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v13);
if v14 == 0 goto label4;
v15 = virtualinvoke v12.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v16 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v15);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(v16, v12, v1, v4, v7);
goto label4;
label5:
if v2 == null goto label7;
v17 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v17 == null goto label7;
v18 = interfaceinvoke v17.<java.util.Collection: java.util.Iterator iterator()>();
label6:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label7;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = virtualinvoke v20.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v22 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v21);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(v22, v20, v1, v4, v7);
goto label6;
label7:
v23 = new com.fasterxml.jackson.databind.jsontype.NamedType;
specialinvoke v23.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(v5, null);
v24 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v5);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(v24, v23, v1, v4, v7);
v25 = new java.util.ArrayList;
v26 = virtualinvoke v7.<java.util.HashMap: java.util.Collection values()>();
specialinvoke v25.<java.util.ArrayList: void <init>(java.util.Collection)>(v26);
return v25;
}
public java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedClass)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
java.util.HashMap v4;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
java.util.ArrayList v17;
com.fasterxml.jackson.databind.jsontype.NamedType v15;
java.util.LinkedHashSet v5, v7;
boolean v12, v9;
java.util.Iterator v8;
java.util.Collection v18;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v14, v2;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v11, v13, v16, v6;
java.lang.Object v10;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v5 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
if v5 == null goto label2;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getRawType()>();
v7 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
v8 = virtualinvoke v7.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label2;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v12 = virtualinvoke v6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v11);
if v12 == 0 goto label1;
v13 = virtualinvoke v10.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v14 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v13);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(v14, v10, v1, v3, v4);
goto label1;
label2:
v15 = new com.fasterxml.jackson.databind.jsontype.NamedType;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getRawType()>();
specialinvoke v15.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(v16, null);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(v2, v15, v1, v3, v4);
v17 = new java.util.ArrayList;
v18 = virtualinvoke v4.<java.util.HashMap: java.util.Collection values()>();
specialinvoke v17.<java.util.ArrayList: void <init>(java.util.Collection)>(v18);
return v17;
}
public java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMember, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
java.util.HashSet v6;
java.util.LinkedHashMap v7;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v2;
com.fasterxml.jackson.databind.jsontype.NamedType v8;
com.fasterxml.jackson.databind.JavaType v3;
java.util.LinkedHashSet v16, v17;
boolean v12, v19, v22;
java.util.Iterator v11, v18;
java.util.Collection v25;
java.util.List v10;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v15, v24, v9;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v14, v21, v23, v5;
java.lang.Object v13, v20;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = new java.util.HashSet;
specialinvoke v6.<java.util.HashSet: void <init>()>();
v7 = new java.util.LinkedHashMap;
specialinvoke v7.<java.util.LinkedHashMap: void <init>()>();
v8 = new com.fasterxml.jackson.databind.jsontype.NamedType;
specialinvoke v8.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(v5, null);
v9 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v5);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(v9, v8, v1, v6, v7);
if v2 == null goto label2;
v10 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v10 == null goto label2;
v11 = interfaceinvoke v10.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label2;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v15 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v14);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(v15, v13, v1, v6, v7);
goto label1;
label2:
v16 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
if v16 == null goto label4;
v17 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
v18 = virtualinvoke v17.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
label3:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label4;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = virtualinvoke v20.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v22 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v21);
if v22 == 0 goto label3;
v23 = virtualinvoke v20.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v24 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v23);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(v24, v20, v1, v6, v7);
goto label3;
label4:
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map)>(v5, v6, v7);
return v25;
}
public java.util.Collection collectAndResolveSubtypesByTypeId(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.introspect.AnnotatedClass)
{
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
java.util.HashSet v4;
java.util.LinkedHashMap v5;
com.fasterxml.jackson.databind.jsontype.NamedType v6;
java.util.LinkedHashSet v7, v8;
boolean v10, v13;
java.util.Iterator v9;
java.util.Collection v16;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v15, v2;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v12, v14, v3;
java.lang.Object v11;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: java.lang.Class getRawType()>();
v4 = new java.util.HashSet;
specialinvoke v4.<java.util.HashSet: void <init>()>();
v5 = new java.util.LinkedHashMap;
specialinvoke v5.<java.util.LinkedHashMap: void <init>()>();
v6 = new com.fasterxml.jackson.databind.jsontype.NamedType;
specialinvoke v6.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(v3, null);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(v2, v6, v1, v4, v5);
v7 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
if v7 == null goto label2;
v8 = v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.LinkedHashSet _registeredSubtypes>;
v9 = virtualinvoke v8.<java.util.LinkedHashSet: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v13 = virtualinvoke v3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v12);
if v13 == 0 goto label1;
v14 = virtualinvoke v11.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v15 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v14);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(v15, v11, v1, v4, v5);
goto label1;
label2:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: java.util.Collection _combineNamedAndUnnamed(java.lang.Class,java.util.Set,java.util.Map)>(v3, v4, v5);
return v16;
}
protected void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass, com.fasterxml.jackson.databind.jsontype.NamedType, com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.AnnotationIntrospector, java.util.HashMap)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
java.util.HashMap v5;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
com.fasterxml.jackson.databind.jsontype.NamedType v10, v2, v8;
java.lang.String v7;
boolean v12, v13, v15, v17, v19, v6;
java.util.Iterator v18;
java.util.List v16;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v1, v22;
com.fasterxml.jackson.databind.cfg.MapperConfig v3;
java.lang.Class v11, v21, v9;
java.lang.Object v14, v20;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.NamedType;
v3 := @parameter2: com.fasterxml.jackson.databind.cfg.MapperConfig;
v4 := @parameter3: com.fasterxml.jackson.databind.AnnotationIntrospector;
v5 := @parameter4: java.util.HashMap;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();
if v6 != 0 goto label1;
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v1);
if v7 == null goto label1;
v8 = new com.fasterxml.jackson.databind.jsontype.NamedType;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
specialinvoke v8.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(v9, v7);
v2 = v8;
label1:
v10 = new com.fasterxml.jackson.databind.jsontype.NamedType;
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
specialinvoke v10.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>(v11);
v12 = virtualinvoke v5.<java.util.HashMap: boolean containsKey(java.lang.Object)>(v10);
if v12 == 0 goto label3;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();
if v13 == 0 goto label2;
v14 = virtualinvoke v5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v10);
v15 = virtualinvoke v14.<com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();
if v15 != 0 goto label2;
virtualinvoke v5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v2);
label2:
return;
label3:
virtualinvoke v5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v2);
v16 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)>(v1);
if v16 == null goto label5;
v17 = interfaceinvoke v16.<java.util.Collection: boolean isEmpty()>();
if v17 != 0 goto label5;
v18 = interfaceinvoke v16.<java.util.Collection: java.util.Iterator iterator()>();
label4:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label5;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = virtualinvoke v20.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v22 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v3, v21);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolve(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.AnnotationIntrospector,java.util.HashMap)>(v22, v20, v3, v4, v5);
goto label4;
label5:
return;
}
protected void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass, com.fasterxml.jackson.databind.jsontype.NamedType, com.fasterxml.jackson.databind.cfg.MapperConfig, java.util.Set, java.util.Map)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v6;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
java.util.Map v5;
com.fasterxml.jackson.databind.jsontype.NamedType v2, v9;
java.lang.String v12, v8;
boolean v11, v14, v16, v18, v7;
java.util.Iterator v17;
java.util.Set v4;
java.util.List v15;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v1, v21;
com.fasterxml.jackson.databind.cfg.MapperConfig v3;
java.lang.Class v10, v13, v20;
java.lang.Object v19;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.NamedType;
v3 := @parameter2: com.fasterxml.jackson.databind.cfg.MapperConfig;
v4 := @parameter3: java.util.Set;
v5 := @parameter4: java.util.Map;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();
if v7 != 0 goto label1;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String findTypeName(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v1);
if v8 == null goto label1;
v9 = new com.fasterxml.jackson.databind.jsontype.NamedType;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
specialinvoke v9.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class,java.lang.String)>(v10, v8);
v2 = v9;
label1:
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: boolean hasName()>();
if v11 == 0 goto label2;
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.String getName()>();
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v2);
label2:
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v14 = interfaceinvoke v4.<java.util.Set: boolean add(java.lang.Object)>(v13);
if v14 == 0 goto label4;
v15 = virtualinvoke v6.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.util.List findSubtypes(com.fasterxml.jackson.databind.introspect.Annotated)>(v1);
if v15 == null goto label4;
v16 = interfaceinvoke v15.<java.util.Collection: boolean isEmpty()>();
if v16 != 0 goto label4;
v17 = interfaceinvoke v15.<java.util.Collection: java.util.Iterator iterator()>();
label3:
v18 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v18 == 0 goto label4;
v19 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v21 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedClassResolver: com.fasterxml.jackson.databind.introspect.AnnotatedClass resolveWithoutSuperTypes(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v3, v20);
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void _collectAndResolveByTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.jsontype.NamedType,com.fasterxml.jackson.databind.cfg.MapperConfig,java.util.Set,java.util.Map)>(v21, v19, v3, v4, v5);
goto label3;
label4:
return;
}
protected java.util.Collection _combineNamedAndUnnamed(java.lang.Class, java.util.Set, java.util.Map)
{
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v0;
java.util.ArrayList v4;
java.util.Map v3;
int v14;
com.fasterxml.jackson.databind.jsontype.NamedType v16;
boolean v12, v15, v8;
java.util.Iterator v11, v7;
java.util.Collection v5, v6;
java.util.Set v2;
java.lang.Class v1, v10;
java.lang.Object v13, v9;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: java.util.Map;
v4 = new java.util.ArrayList;
v5 = interfaceinvoke v3.<java.util.Map: java.util.Collection values()>();
specialinvoke v4.<java.util.ArrayList: void <init>(java.util.Collection)>(v5);
v6 = interfaceinvoke v3.<java.util.Map: java.util.Collection values()>();
v7 = interfaceinvoke v6.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label2;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
interfaceinvoke v2.<java.util.Set: boolean remove(java.lang.Object)>(v10);
goto label1;
label2:
v11 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label3:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label5;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
if v13 != v1 goto label4;
v14 = virtualinvoke v13.<java.lang.Class: int getModifiers()>();
v15 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(v14);
if v15 != 0 goto label3;
label4:
v16 = new com.fasterxml.jackson.databind.jsontype.NamedType;
specialinvoke v16.<com.fasterxml.jackson.databind.jsontype.NamedType: void <init>(java.lang.Class)>(v13);
virtualinvoke v4.<java.util.ArrayList: boolean add(java.lang.Object)>(v16);
goto label3;
label5:
return v4;
}
}