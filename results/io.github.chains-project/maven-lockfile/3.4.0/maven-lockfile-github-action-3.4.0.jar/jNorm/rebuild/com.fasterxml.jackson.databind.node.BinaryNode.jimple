public class com.fasterxml.jackson.databind.node.BinaryNode extends com.fasterxml.jackson.databind.node.ValueNode
{
private static final long serialVersionUID;
static final com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE;
protected final byte[] _data;
public void <init>(byte[])
{
byte[] v1;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 := @parameter0: byte[];
specialinvoke v0.<com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data> = v1;
return;
}
public void <init>(byte[], int, int)
{
byte[] v1, v5, v6;
int v2, v3, v4;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();
if v2 != 0 goto label1;
v4 = lengthof v1;
if v3 != v4 goto label1;
v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data> = v1;
goto label2;
label1:
v5 = newarray (byte)[v3];
v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data> = v5;
v6 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, v2, v6, 0, v3);
label2:
return;
}
public static com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[])
{
byte[] v0;
int v1;
com.fasterxml.jackson.databind.node.BinaryNode v2, v3;
v0 := @parameter0: byte[];
if v0 != null goto label1;
return null;
label1:
v1 = lengthof v0;
if v1 != 0 goto label2;
v2 = <com.fasterxml.jackson.databind.node.BinaryNode: com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE>;
return v2;
label2:
v3 = new com.fasterxml.jackson.databind.node.BinaryNode;
specialinvoke v3.<com.fasterxml.jackson.databind.node.BinaryNode: void <init>(byte[])>(v0);
return v3;
}
public static com.fasterxml.jackson.databind.node.BinaryNode valueOf(byte[], int, int)
{
byte[] v0;
int v1, v2;
com.fasterxml.jackson.databind.node.BinaryNode v3, v4;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
if v0 != null goto label1;
return null;
label1:
if v2 != 0 goto label2;
v3 = <com.fasterxml.jackson.databind.node.BinaryNode: com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE>;
return v3;
label2:
v4 = new com.fasterxml.jackson.databind.node.BinaryNode;
specialinvoke v4.<com.fasterxml.jackson.databind.node.BinaryNode: void <init>(byte[],int,int)>(v0, v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
{
com.fasterxml.jackson.databind.node.BinaryNode v0;
com.fasterxml.jackson.databind.node.JsonNodeType v1;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 = <com.fasterxml.jackson.databind.node.JsonNodeType: com.fasterxml.jackson.databind.node.JsonNodeType BINARY>;
return v1;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
return v1;
}
public byte[] binaryValue()
{
byte[] v1;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
return v1;
}
public java.lang.String asText()
{
com.fasterxml.jackson.core.Base64Variant v1;
byte[] v2;
java.lang.String v3;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();
v2 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: java.lang.String encode(byte[],boolean)>(v2, 0);
return v3;
}
public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
byte[] v5, v6;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.SerializationConfig v3;
com.fasterxml.jackson.core.Base64Variant v4;
int v7;
com.fasterxml.jackson.databind.SerializerProvider v2;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.core.Base64Variant getBase64Variant()>();
v5 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
v6 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
v7 = lengthof v6;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeBinary(com.fasterxml.jackson.core.Base64Variant,byte[],int,int)>(v4, v5, 0, v7);
return;
}
public boolean equals(java.lang.Object)
{
byte[] v3, v4;
java.lang.Object v1;
boolean v2, v5;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.node.BinaryNode;
if v2 != 0 goto label3;
return 0;
label3:
v3 = v1.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
v4 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
v5 = staticinvoke <java.util.Arrays: boolean equals(byte[],byte[])>(v3, v4);
return v5;
}
public int hashCode()
{
byte[] v1, v4;
int v2, v3;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.BinaryNode;
v1 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
if v1 != null goto label1;
v2 = (int) -1;
v3 = v2;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.node.BinaryNode: byte[] _data>;
v3 = lengthof v4;
label2:
return v3;
}
static void <clinit>()
{
byte[] v1;
com.fasterxml.jackson.databind.node.BinaryNode v0;
v0 = new com.fasterxml.jackson.databind.node.BinaryNode;
v1 = newarray (byte)[0];
specialinvoke v0.<com.fasterxml.jackson.databind.node.BinaryNode: void <init>(byte[])>(v1);
<com.fasterxml.jackson.databind.node.BinaryNode: com.fasterxml.jackson.databind.node.BinaryNode EMPTY_BINARY_NODE> = v0;
return;
}
}