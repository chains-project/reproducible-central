public final class com.fasterxml.jackson.databind.node.MissingNode extends com.fasterxml.jackson.databind.node.ValueNode
{
private static final long serialVersionUID;
private static final com.fasterxml.jackson.databind.node.MissingNode instance;
protected void <init>()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
specialinvoke v0.<com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();
return;
}
protected java.lang.Object readResolve()
{
com.fasterxml.jackson.databind.node.MissingNode v0, v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 = <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode instance>;
return v1;
}
public boolean isMissingNode()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
return 1;
}
public com.fasterxml.jackson.databind.JsonNode deepCopy()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
return v0;
}
public static com.fasterxml.jackson.databind.node.MissingNode getInstance()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 = <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode instance>;
return v0;
}
public com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
com.fasterxml.jackson.databind.node.JsonNodeType v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 = <com.fasterxml.jackson.databind.node.JsonNodeType: com.fasterxml.jackson.databind.node.JsonNodeType MISSING>;
return v1;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
com.fasterxml.jackson.core.JsonToken v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
return v1;
}
public java.lang.String asText()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
return "";
}
public java.lang.String asText(java.lang.String)
{
com.fasterxml.jackson.databind.node.MissingNode v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 := @parameter0: java.lang.String;
return v1;
}
public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.MissingNode v0;
com.fasterxml.jackson.databind.SerializerProvider v2;
com.fasterxml.jackson.core.JsonGenerator v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
return;
}
public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.MissingNode v0;
com.fasterxml.jackson.databind.SerializerProvider v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNull()>();
return;
}
public com.fasterxml.jackson.databind.JsonNode require()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
java.lang.Object v2;
java.lang.Object[] v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 = newarray (java.lang.Object)[0];
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.MissingNode: java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[])>("require() called on `MissingNode`", v1);
return v2;
}
public com.fasterxml.jackson.databind.JsonNode requireNonNull()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
java.lang.Object v2;
java.lang.Object[] v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 = newarray (java.lang.Object)[0];
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.MissingNode: java.lang.Object _reportRequiredViolation(java.lang.String,java.lang.Object[])>("requireNonNull() called on `MissingNode`", v1);
return v2;
}
public int hashCode()
{
int v2;
com.fasterxml.jackson.databind.node.MissingNode v0;
com.fasterxml.jackson.databind.node.JsonNodeType v1;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 = <com.fasterxml.jackson.databind.node.JsonNodeType: com.fasterxml.jackson.databind.node.JsonNodeType MISSING>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.JsonNodeType: int ordinal()>();
return v2;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
return "";
}
public java.lang.String toPrettyString()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
return "";
}
public boolean equals(java.lang.Object)
{
com.fasterxml.jackson.databind.node.MissingNode v0;
java.lang.Object v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.node.MissingNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.node.MissingNode v0;
v0 = new com.fasterxml.jackson.databind.node.MissingNode;
specialinvoke v0.<com.fasterxml.jackson.databind.node.MissingNode: void <init>()>();
<com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode instance> = v0;
return;
}
}