public abstract class com.fasterxml.jackson.databind.node.NumericNode extends com.fasterxml.jackson.databind.node.ValueNode
{
private static final long serialVersionUID;
protected void <init>()
{
com.fasterxml.jackson.databind.node.NumericNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
specialinvoke v0.<com.fasterxml.jackson.databind.node.ValueNode: void <init>()>();
return;
}
public final com.fasterxml.jackson.databind.node.JsonNodeType getNodeType()
{
com.fasterxml.jackson.databind.node.NumericNode v0;
com.fasterxml.jackson.databind.node.JsonNodeType v1;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 = <com.fasterxml.jackson.databind.node.JsonNodeType: com.fasterxml.jackson.databind.node.JsonNodeType NUMBER>;
return v1;
}
public abstract com.fasterxml.jackson.core.JsonParser$NumberType numberType();
public abstract java.lang.Number numberValue();
public abstract int intValue();
public abstract long longValue();
public abstract double doubleValue();
public abstract java.math.BigDecimal decimalValue();
public abstract java.math.BigInteger bigIntegerValue();
public abstract boolean canConvertToInt();
public abstract boolean canConvertToLong();
public abstract java.lang.String asText();
public final int asInt()
{
int v1;
com.fasterxml.jackson.databind.node.NumericNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: int intValue()>();
return v1;
}
public final int asInt(int)
{
int v1, v2;
com.fasterxml.jackson.databind.node.NumericNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: int intValue()>();
return v2;
}
public final long asLong()
{
com.fasterxml.jackson.databind.node.NumericNode v0;
long v1;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: long longValue()>();
return v1;
}
public final long asLong(long)
{
com.fasterxml.jackson.databind.node.NumericNode v0;
long v1, v2;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: long longValue()>();
return v2;
}
public final double asDouble()
{
com.fasterxml.jackson.databind.node.NumericNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: double doubleValue()>();
return v1;
}
public final double asDouble(double)
{
com.fasterxml.jackson.databind.node.NumericNode v0;
double v1, v2;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
v1 := @parameter0: double;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: double doubleValue()>();
return v2;
}
public boolean isNaN()
{
com.fasterxml.jackson.databind.node.NumericNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.NumericNode;
return 0;
}
}