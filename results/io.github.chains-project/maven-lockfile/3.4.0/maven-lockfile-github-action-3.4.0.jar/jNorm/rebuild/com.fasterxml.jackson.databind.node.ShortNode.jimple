public class com.fasterxml.jackson.databind.node.ShortNode extends com.fasterxml.jackson.databind.node.NumericNode
{
protected final short _value;
public void <init>(short)
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 := @parameter0: short;
specialinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value> = v1;
return;
}
public static com.fasterxml.jackson.databind.node.ShortNode valueOf(short)
{
com.fasterxml.jackson.databind.node.ShortNode v1;
short v0;
v0 := @parameter0: short;
v1 = new com.fasterxml.jackson.databind.node.ShortNode;
specialinvoke v1.<com.fasterxml.jackson.databind.node.ShortNode: void <init>(short)>(v0);
return v1;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
com.fasterxml.jackson.core.JsonToken v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
return v1;
}
public com.fasterxml.jackson.core.JsonParser$NumberType numberType()
{
com.fasterxml.jackson.core.JsonParser$NumberType v1;
com.fasterxml.jackson.databind.node.ShortNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
return v1;
}
public boolean isIntegralNumber()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
return 1;
}
public boolean isShort()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
return 1;
}
public boolean canConvertToInt()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
return 1;
}
public boolean canConvertToLong()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
return 1;
}
public java.lang.Number numberValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
java.lang.Short v2;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
v2 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v1);
return v2;
}
public short shortValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
return v1;
}
public int intValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
return v1;
}
public long longValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
return v1;
}
public float floatValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
return v1;
}
public double doubleValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
return v1;
}
public java.math.BigDecimal decimalValue()
{
java.math.BigDecimal v2;
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
v2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(v1);
return v2;
}
public java.math.BigInteger bigIntegerValue()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
java.math.BigInteger v2;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
v2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(v1);
return v2;
}
public java.lang.String asText()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(int)>(v1);
return v2;
}
public boolean asBoolean(boolean)
{
short v2;
com.fasterxml.jackson.databind.node.ShortNode v0;
boolean v1, v3;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 := @parameter0: boolean;
v2 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
short v3;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.node.ShortNode v0;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(short)>(v3);
return;
}
public boolean equals(java.lang.Object)
{
short v3, v4;
com.fasterxml.jackson.databind.node.ShortNode v0;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.node.ShortNode;
if v2 == 0 goto label5;
v3 = v1.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
v4 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
if v3 != v4 goto label3;
v5 = 1;
goto label4;
label3:
v5 = 0;
label4:
return v5;
label5:
return 0;
}
public int hashCode()
{
com.fasterxml.jackson.databind.node.ShortNode v0;
short v1;
v0 := @this: com.fasterxml.jackson.databind.node.ShortNode;
v1 = v0.<com.fasterxml.jackson.databind.node.ShortNode: short _value>;
return v1;
}
}