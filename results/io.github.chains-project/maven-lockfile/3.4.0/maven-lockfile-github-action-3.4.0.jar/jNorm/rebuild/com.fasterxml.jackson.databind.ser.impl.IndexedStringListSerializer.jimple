public final class com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer extends com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance;
protected void <init>()
{
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: void <init>(java.lang.Class)>(class "Ljava/util/List;");
return;
}
public void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer, java.lang.Boolean)
{
java.lang.Boolean v2;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.StaticListSerializerBase,java.lang.Boolean)>(v1, v2);
return;
}
public com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean)
{
com.fasterxml.jackson.databind.BeanProperty v1;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0, v3;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 := @parameter1: java.lang.Boolean;
v3 = new com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer,java.lang.Boolean)>(v0, v2);
return v3;
}
protected com.fasterxml.jackson.databind.JsonNode contentSchema()
{
com.fasterxml.jackson.databind.node.ObjectNode v1;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);
return v1;
}
protected void acceptContentVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor v1;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor;
v2 = <com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes STRING>;
interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonArrayFormatVisitor: void itemsFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatTypes)>(v2);
return;
}
public void serialize(java.util.List, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.List v1;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
int v4;
java.lang.Boolean v5, v8, v9;
com.fasterxml.jackson.databind.SerializationFeature v6;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 := @parameter0: java.util.List;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = interfaceinvoke v1.<java.util.List: int size()>();
if v4 != 1 goto label3;
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: java.lang.Boolean _unwrapSingle>;
if v5 != null goto label1;
v6 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v6);
if v7 != 0 goto label2;
label1:
v8 = v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: java.lang.Boolean _unwrapSingle>;
v9 = <java.lang.Boolean: java.lang.Boolean TRUE>;
if v8 != v9 goto label3;
label2:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)>(v1, v2, v3, 1);
return;
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object,int)>(v1, v4);
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)>(v1, v2, v3, v4);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
return;
}
public void serializeWithType(java.util.List, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
java.util.List v1;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
int v8;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 := @parameter0: java.util.List;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
v8 = interfaceinvoke v1.<java.util.List: int size()>();
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void serializeContents(java.util.List,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,int)>(v1, v2, v3, v8);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
private final void serializeContents(java.util.List, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, int) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.lang.Exception v7;
java.util.List v1;
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
int v4, v5;
java.lang.Object v6;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
v1 := @parameter0: java.util.List;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: int;
v5 = 0;
label1:
if v5 >= v4 goto label5;
v6 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v5);
if v6 != null goto label2;
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v2);
goto label3;
label2:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v6);
label3:
v5 = v5 + 1;
goto label1;
label4:
v7 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,int)>(v3, v7, v1, v5);
label5:
return;
catch java.lang.Exception from label1 to label4 with label4;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer v0;
v0 = new com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: void <init>()>();
<com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance> = v0;
return;
}
}