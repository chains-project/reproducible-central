public final class com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2 extends java.lang.Object implements java.util.function.BiConsumer
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap cap0;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] cap1;
public static java.util.function.BiConsumer bootstrap$(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap, com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[])
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v0;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v1;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2 v2;
v0 := @parameter0: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v1 := @parameter1: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[];
v2 = new com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2: void <init>(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap,com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[])>(v0, v1);
return v2;
}
public void <init>(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap, com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[])
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v1;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v2;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2 v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap cap0> = v1;
v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] cap1> = v2;
return;
}
public void accept(java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap v3;
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] v4;
com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2 v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap cap0>;
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$lambda_new_0__2: com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[] cap1>;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap: void lambda$new$0(com.fasterxml.jackson.databind.ser.impl.ReadOnlyClassToSerializerMap$Bucket[],com.fasterxml.jackson.databind.util.TypeKey,com.fasterxml.jackson.databind.JsonSerializer)>(v4, v1, v2);
return;
}
}