public class com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter extends java.lang.Object implements com.fasterxml.jackson.databind.ser.BeanPropertyFilter, com.fasterxml.jackson.databind.ser.PropertyFilter
{
protected void <init>()
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAll()
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v0;
v0 = <com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter INCLUDE_ALL>;
return v0;
}
public static com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAll()
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter v0;
v0 = <com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter EXCLUDE_ALL>;
return v0;
}
public static com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAll(java.util.Set)
{
java.util.Set v0;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter v1;
v0 := @parameter0: java.util.Set;
v1 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter: void <init>(java.util.Set)>(v0);
return v1;
}
public static com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.util.Set)
{
java.util.Set v0;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter v1;
v0 := @parameter0: java.util.Set;
v1 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter: void <init>(java.util.Set)>(v0);
return v1;
}
public static transient com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter filterOutAllExcept(java.lang.String[])
{
java.util.HashSet v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter v3;
int v2;
java.lang.String[] v0;
v0 := @parameter0: java.lang.String[];
v1 = new java.util.HashSet;
v2 = lengthof v0;
specialinvoke v1.<java.util.HashSet: void <init>(int)>(v2);
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v1, v0);
v3 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$FilterExceptFilter: void <init>(java.util.Set)>(v1);
return v3;
}
public static com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.util.Set)
{
java.util.Set v0;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v1;
v0 := @parameter0: java.util.Set;
v1 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: void <init>(java.util.Set)>(v0);
return v1;
}
public static transient com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter serializeAllExcept(java.lang.String[])
{
java.util.HashSet v1;
int v2;
java.lang.String[] v0;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v3;
v0 := @parameter0: java.lang.String[];
v1 = new java.util.HashSet;
v2 = lengthof v0;
specialinvoke v1.<java.util.HashSet: void <init>(int)>(v2);
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v1, v0);
v3 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: void <init>(java.util.Set)>(v1);
return v3;
}
public static com.fasterxml.jackson.databind.ser.PropertyFilter 'from'(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1 v1;
com.fasterxml.jackson.databind.ser.BeanPropertyFilter v0;
v0 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyFilter;
v1 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1;
specialinvoke v1.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$1: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)>(v0);
return v1;
}
protected boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
return 1;
}
protected boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter)
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
com.fasterxml.jackson.databind.ser.PropertyWriter v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.PropertyWriter;
return 1;
}
protected boolean includeElement(java.lang.Object)
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: java.lang.Object;
return 1;
}
public void serializeAsField(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.ser.BeanPropertyWriter) throws java.lang.Exception
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v4;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(v4);
if v5 == 0 goto label1;
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
goto label2;
label1:
v6 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: boolean canOmitFields()>();
if v6 != 0 goto label2;
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label2:
return;
}
public void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, com.fasterxml.jackson.databind.node.ObjectNode, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.node.ObjectNode v2;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
v2 := @parameter1: com.fasterxml.jackson.databind.node.ObjectNode;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(v1);
if v4 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v3);
label1:
return;
}
public void depositSchemaProperty(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor v2;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
v2 := @parameter1: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(v1);
if v4 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v3);
label1:
return;
}
public void serializeAsField(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.ser.PropertyWriter) throws java.lang.Exception
{
com.fasterxml.jackson.databind.ser.PropertyWriter v4;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.ser.PropertyWriter;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter)>(v4);
if v5 == 0 goto label1;
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.PropertyWriter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
goto label2;
label1:
v6 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: boolean canOmitFields()>();
if v6 != 0 goto label2;
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.PropertyWriter: void serializeAsOmittedField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label2:
return;
}
public void serializeAsElement(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.ser.PropertyWriter) throws java.lang.Exception
{
com.fasterxml.jackson.databind.ser.PropertyWriter v4;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.ser.PropertyWriter;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean includeElement(java.lang.Object)>(v1);
if v5 == 0 goto label1;
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.PropertyWriter: void serializeAsElement(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label1:
return;
}
public void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter, com.fasterxml.jackson.databind.node.ObjectNode, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.PropertyWriter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.node.ObjectNode v2;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.PropertyWriter;
v2 := @parameter1: com.fasterxml.jackson.databind.node.ObjectNode;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter)>(v1);
if v4 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.databind.ser.PropertyWriter: void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v3);
label1:
return;
}
public void depositSchemaProperty(com.fasterxml.jackson.databind.ser.PropertyWriter, com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor v2;
com.fasterxml.jackson.databind.ser.PropertyWriter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v0;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.PropertyWriter;
v2 := @parameter1: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter)>(v1);
if v4 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.databind.ser.PropertyWriter: void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)>(v2, v3);
label1:
return;
}
}