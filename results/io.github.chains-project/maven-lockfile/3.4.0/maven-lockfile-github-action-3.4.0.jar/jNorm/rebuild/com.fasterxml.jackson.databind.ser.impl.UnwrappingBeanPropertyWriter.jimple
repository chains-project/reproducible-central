public class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter extends com.fasterxml.jackson.databind.ser.BeanPropertyWriter implements java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer;
public void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
com.fasterxml.jackson.databind.util.NameTransformer v2;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
v2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(v1);
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v2;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter, com.fasterxml.jackson.databind.util.NameTransformer, com.fasterxml.jackson.core.io.SerializedString)
{
com.fasterxml.jackson.core.io.SerializedString v3;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0, v1;
com.fasterxml.jackson.databind.util.NameTransformer v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;
v3 := @parameter2: com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,com.fasterxml.jackson.core.io.SerializedString)>(v1, v3);
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v2;
return;
}
public com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter rename(com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0, v8;
com.fasterxml.jackson.core.io.SerializedString v2, v7;
com.fasterxml.jackson.databind.util.NameTransformer v1, v5, v6;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.core.io.SerializedString _name>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.io.SerializedString: java.lang.String getValue()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.NameTransformer: java.lang.String transform(java.lang.String)>(v3);
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v6 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>(v1, v5);
v7 = new com.fasterxml.jackson.core.io.SerializedString;
specialinvoke v7.<com.fasterxml.jackson.core.io.SerializedString: void <init>(java.lang.String)>(v4);
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter _new(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString)>(v6, v7);
return v8;
}
protected com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter _new(com.fasterxml.jackson.databind.util.NameTransformer, com.fasterxml.jackson.core.io.SerializedString)
{
com.fasterxml.jackson.core.io.SerializedString v2;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0, v3;
com.fasterxml.jackson.databind.util.NameTransformer v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
v2 := @parameter1: com.fasterxml.jackson.core.io.SerializedString;
v3 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.core.io.SerializedString)>(v0, v1, v2);
return v3;
}
public boolean isUnwrapping()
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
return 1;
}
public void serializeAsField(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.lang.Exception
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v17, v18;
com.fasterxml.jackson.core.io.SerializedString v16;
com.fasterxml.jackson.databind.JsonSerializer v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v11, v13, v14, v15;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v7;
java.lang.Class v6;
java.lang.Object v1, v10, v12, v4, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object get(java.lang.Object)>(v1);
if v4 != null goto label1;
return;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _serializer>;
if v5 != null goto label2;
v6 = virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v7 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v5 = virtualinvoke v7.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v6);
if v5 != null goto label2;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>(v7, v6, v3);
label2:
v8 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object _suppressableValue>;
if v8 == null goto label4;
v9 = <com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object MARKER_FOR_EMPTY>;
v10 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object _suppressableValue>;
if v9 != v10 goto label3;
v11 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v4);
if v11 == 0 goto label4;
return;
label3:
v12 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: java.lang.Object _suppressableValue>;
v13 = virtualinvoke v12.<java.lang.Object: boolean equals(java.lang.Object)>(v4);
if v13 == 0 goto label4;
return;
label4:
if v4 != v1 goto label5;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: boolean _handleSelfReference(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v5);
if v14 == 0 goto label5;
return;
label5:
v15 = virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();
if v15 != 0 goto label6;
v16 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.core.io.SerializedString _name>;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(com.fasterxml.jackson.core.SerializableString)>(v16);
label6:
v17 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;
if v17 != null goto label7;
virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v4, v2, v3);
goto label8;
label7:
v18 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer _typeSerializer>;
virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v4, v2, v3, v18);
label8:
return;
}
public void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
com.fasterxml.jackson.databind.util.NameTransformer v2, v5;
com.fasterxml.jackson.databind.JsonSerializer v1;
boolean v3, v4;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.JsonSerializer;
if v1 == null goto label2;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();
if v3 == 0 goto label1;
v4 = v1 instanceof com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
if v4 == 0 goto label1;
v5 = v1.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>(v2, v5);
label1:
v1 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v2);
label2:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignSerializer(com.fasterxml.jackson.databind.JsonSerializer)>(v1);
return;
}
public void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1 v8;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor v1;
com.fasterxml.jackson.databind.util.NameTransformer v5;
com.fasterxml.jackson.databind.JsonSerializer v4, v6;
com.fasterxml.jackson.databind.JavaType v3, v9;
com.fasterxml.jackson.databind.SerializerProvider v2;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v3, v0);
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v5);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();
if v7 == 0 goto label1;
v8 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1;
specialinvoke v8.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter$1: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor)>(v0, v2, v1);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>();
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)>(v8, v9);
goto label2;
label1:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
label2:
return;
}
protected void _depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode, com.fasterxml.jackson.databind.JsonNode)
{
java.util.Iterator v4;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
com.fasterxml.jackson.databind.node.ObjectNode v1;
com.fasterxml.jackson.databind.util.NameTransformer v8, v9;
com.fasterxml.jackson.databind.JsonNode v2, v3;
java.lang.Object v10, v6, v7;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.node.ObjectNode;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonNode: com.fasterxml.jackson.databind.JsonNode get(java.lang.String)>("properties");
if v3 == null goto label3;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JsonNode: java.util.Iterator fields()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
if v8 == null goto label2;
v9 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v7 = virtualinvoke v9.<com.fasterxml.jackson.databind.util.NameTransformer: java.lang.String transform(java.lang.String)>(v7);
label2:
v10 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.JsonNode set(java.lang.String,com.fasterxml.jackson.databind.JsonNode)>(v7, v10);
goto label1;
label3:
return;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter v0;
com.fasterxml.jackson.databind.util.NameTransformer v11, v8;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1, v13, v14;
com.fasterxml.jackson.databind.JsonSerializer v12, v7;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v4, v5, v6;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v10, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.JavaType _nonTrivialBaseType>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v5, v2);
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v6, v0);
goto label2;
label1:
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class,com.fasterxml.jackson.databind.BeanProperty)>(v2, v0);
label2:
v8 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v9 = virtualinvoke v7.<com.fasterxml.jackson.databind.JsonSerializer: boolean isUnwrappingSerializer()>();
if v9 == 0 goto label3;
v10 = v7 instanceof com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
if v10 == 0 goto label3;
v11 = v7.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v8 = staticinvoke <com.fasterxml.jackson.databind.util.NameTransformer: com.fasterxml.jackson.databind.util.NameTransformer chainedTransformer(com.fasterxml.jackson.databind.util.NameTransformer,com.fasterxml.jackson.databind.util.NameTransformer)>(v8, v11);
label3:
v12 = virtualinvoke v7.<com.fasterxml.jackson.databind.JsonSerializer: com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)>(v8);
v13 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap newWith(java.lang.Class,com.fasterxml.jackson.databind.JsonSerializer)>(v2, v12);
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanPropertyWriter: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicSerializers> = v14;
return v12;
}
}