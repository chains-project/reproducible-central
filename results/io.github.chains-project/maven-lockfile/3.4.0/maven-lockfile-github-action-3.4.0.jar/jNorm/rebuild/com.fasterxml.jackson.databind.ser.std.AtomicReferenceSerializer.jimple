public class com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer extends com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer
{
private static final long serialVersionUID;
public void <init>(com.fasterxml.jackson.databind.type.ReferenceType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.type.ReferenceType v1;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0;
boolean v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.type.ReferenceType;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v4);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.util.NameTransformer, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0, v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.util.NameTransformer v5;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Object v6;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: com.fasterxml.jackson.databind.util.NameTransformer;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean)>(v1, v2, v3, v4, v5, v6, v7);
return;
}
protected com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.BeanProperty v1;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0, v5;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v2;
com.fasterxml.jackson.databind.util.NameTransformer v4;
com.fasterxml.jackson.databind.JsonSerializer v3;
java.lang.Object v6;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.util.NameTransformer;
v5 = new com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: java.lang.Object _suppressableValue>;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: boolean _suppressNulls>;
specialinvoke v5.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean)>(v0, v1, v2, v3, v4, v6, v7);
return v5;
}
public com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.BeanProperty v4;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0, v3;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
com.fasterxml.jackson.databind.util.NameTransformer v7;
com.fasterxml.jackson.databind.JsonSerializer v6;
java.lang.Object v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = new com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: com.fasterxml.jackson.databind.util.NameTransformer _unwrapper>;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.util.NameTransformer,java.lang.Object,boolean)>(v0, v4, v5, v6, v7, v1, v2);
return v3;
}
protected boolean _isValuePresent(java.util.concurrent.atomic.AtomicReference)
{
java.lang.Object v2;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0;
java.util.concurrent.atomic.AtomicReference v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: java.util.concurrent.atomic.AtomicReference;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
if v2 == null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
protected java.lang.Object _getReferenced(java.util.concurrent.atomic.AtomicReference)
{
java.lang.Object v2;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0;
java.util.concurrent.atomic.AtomicReference v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: java.util.concurrent.atomic.AtomicReference;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
return v2;
}
protected java.lang.Object _getReferencedIfPresent(java.util.concurrent.atomic.AtomicReference)
{
java.lang.Object v2;
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v0;
java.util.concurrent.atomic.AtomicReference v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
v1 := @parameter0: java.util.concurrent.atomic.AtomicReference;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
return v2;
}
}