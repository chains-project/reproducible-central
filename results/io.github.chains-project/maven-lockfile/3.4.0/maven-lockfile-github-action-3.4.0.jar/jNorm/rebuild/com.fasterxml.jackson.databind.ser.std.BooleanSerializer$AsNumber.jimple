final class com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
private static final long serialVersionUID;
protected final boolean _forPrimitive;
public void <init>(boolean)
{
java.lang.Class v2;
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = <java.lang.Boolean: java.lang.Class TYPE>;
goto label2;
label1:
v2 = class "Ljava/lang/Boolean;";
label2:
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,boolean)>(v2, 0);
v0.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber: boolean _forPrimitive> = v1;
return;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
byte v6;
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber v0;
com.fasterxml.jackson.core.JsonGenerator v2;
java.lang.Boolean v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = <java.lang.Boolean: java.lang.Boolean FALSE>;
v5 = virtualinvoke v4.<java.lang.Boolean: boolean equals(java.lang.Object)>(v1);
if v5 == 0 goto label1;
v6 = 0;
goto label2;
label1:
v6 = 1;
label2:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v6);
return;
}
public final void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber v0;
com.fasterxml.jackson.core.JsonGenerator v2;
java.lang.Boolean v5;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v6;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v6 = virtualinvoke v5.<java.lang.Boolean: boolean equals(java.lang.Object)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeBoolean(boolean)>(v6);
return;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonParser$NumberType v3;
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber v0;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber: void visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType)>(v1, v2, v3);
return;
}
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v3;
com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber v0;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.std.BooleanSerializer v6;
boolean v5, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, class "Ljava/lang/Boolean;");
if v3 == null goto label1;
v4 = virtualinvoke v3.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Shape: boolean isNumeric()>();
if v5 != 0 goto label1;
v6 = new com.fasterxml.jackson.databind.ser.std.BooleanSerializer;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer$AsNumber: boolean _forPrimitive>;
specialinvoke v6.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer: void <init>(boolean)>(v7);
return v6;
label1:
return v0;
}
}