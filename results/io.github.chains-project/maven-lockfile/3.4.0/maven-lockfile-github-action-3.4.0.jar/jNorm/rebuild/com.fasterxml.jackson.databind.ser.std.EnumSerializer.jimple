public class com.fasterxml.jackson.databind.ser.std.EnumSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.util.EnumValues _values;
protected final java.lang.Boolean _serializeAsIndex;
protected final com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming;
public void <init>(com.fasterxml.jackson.databind.util.EnumValues, java.lang.Boolean)
{
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
com.fasterxml.jackson.databind.util.EnumValues v1;
java.lang.Boolean v2;
java.lang.Class v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.EnumValues;
v2 := @parameter1: java.lang.Boolean;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Class getEnumClass()>();
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,boolean)>(v3, 0);
v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values> = v1;
v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming> = null;
return;
}
public void <init>(com.fasterxml.jackson.databind.util.EnumValues, java.lang.Boolean, com.fasterxml.jackson.databind.util.EnumValues)
{
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
com.fasterxml.jackson.databind.util.EnumValues v1, v3;
java.lang.Boolean v2;
java.lang.Class v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.EnumValues;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.util.EnumValues;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.EnumValues: java.lang.Class getEnumClass()>();
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class,boolean)>(v4, 0);
v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values> = v1;
v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming> = v3;
return;
}
public static com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.'annotation'.JsonFormat$Value)
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v3;
com.fasterxml.jackson.databind.ser.std.EnumSerializer v8;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v5;
com.fasterxml.jackson.databind.util.EnumValues v4, v6;
java.lang.Boolean v7;
com.fasterxml.jackson.databind.BeanDescription v2;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter3: com.fasterxml.jackson.'annotation'.JsonFormat$Value;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructFromName(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v0);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues constructEnumNamingStrategyValues(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v1, v0, v5);
v7 = staticinvoke <com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.'annotation'.JsonFormat$Value,boolean,java.lang.Boolean)>(v0, v3, 1, null);
v8 = new com.fasterxml.jackson.databind.ser.std.EnumSerializer;
specialinvoke v8.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean,com.fasterxml.jackson.databind.util.EnumValues)>(v4, v7, v6);
return v8;
}
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v4;
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0, v10;
com.fasterxml.jackson.databind.util.EnumValues v11;
java.lang.Boolean v6, v7, v8;
java.lang.Class v3, v5;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Class handledType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v3);
if v4 == null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Class handledType()>();
v6 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;
v7 = staticinvoke <com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class,com.fasterxml.jackson.'annotation'.JsonFormat$Value,boolean,java.lang.Boolean)>(v5, v4, 0, v6);
v8 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 != 0 goto label1;
v10 = new com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v11 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;
specialinvoke v10.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: void <init>(com.fasterxml.jackson.databind.util.EnumValues,java.lang.Boolean)>(v11, v7);
return v10;
label1:
return v0;
}
public com.fasterxml.jackson.databind.util.EnumValues getEnumValues()
{
com.fasterxml.jackson.databind.util.EnumValues v1;
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;
return v1;
}
public final void serialize(java.lang.Enum, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.core.SerializableString v13, v6;
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
java.lang.Enum v1;
com.fasterxml.jackson.databind.util.EnumValues v12, v4, v5;
int v8;
com.fasterxml.jackson.databind.SerializationFeature v9;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v11;
boolean v10, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: java.lang.Enum;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _valuesByEnumNaming>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(com.fasterxml.jackson.core.SerializableString)>(v6);
return;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v7 == 0 goto label2;
v8 = virtualinvoke v1.<java.lang.Enum: int ordinal()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v8);
return;
label2:
v9 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v9);
if v10 == 0 goto label3;
v11 = virtualinvoke v1.<java.lang.Enum: java.lang.String toString()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v11);
return;
label3:
v12 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.core.SerializableString serializedValueFor(java.lang.Enum)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(com.fasterxml.jackson.core.SerializableString)>(v13);
return;
}
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
{
java.util.Iterator v11;
java.util.Collection v10;
com.fasterxml.jackson.databind.node.ObjectNode v4, v5;
com.fasterxml.jackson.databind.node.ArrayNode v8;
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.util.EnumValues v9;
java.lang.Object v13;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v14;
boolean v12, v3, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("integer", 1);
return v4;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("string", 1);
if v2 == null goto label3;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();
if v7 == 0 goto label3;
v8 = virtualinvoke v5.<com.fasterxml.jackson.databind.node.ObjectNode: com.fasterxml.jackson.databind.node.ArrayNode putArray(java.lang.String)>("enum");
v9 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.util.EnumValues: java.util.Collection values()>();
v11 = interfaceinvoke v10.<java.util.Collection: java.util.Iterator iterator()>();
label2:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label3;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = interfaceinvoke v13.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
virtualinvoke v8.<com.fasterxml.jackson.databind.node.ArrayNode: com.fasterxml.jackson.databind.node.ArrayNode add(java.lang.String)>(v14);
goto label2;
label3:
return v5;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonParser$NumberType v5;
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor v6;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v15, v21;
java.util.LinkedHashSet v7;
boolean v13, v19, v4, v9;
java.util.Iterator v12, v18;
java.util.Collection v17;
java.util.List v11;
com.fasterxml.jackson.databind.util.EnumValues v10, v16;
com.fasterxml.jackson.databind.SerializationFeature v8;
java.lang.Object v14, v20;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.SerializerProvider getProvider()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
v5 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: void visitIntFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser$NumberType)>(v1, v2, v5);
return;
label1:
v6 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v6 == null goto label6;
v7 = new java.util.LinkedHashSet;
specialinvoke v7.<java.util.LinkedHashSet: void <init>()>();
if v3 == null goto label3;
v8 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_TO_STRING>;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v8);
if v9 == 0 goto label3;
v10 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.util.EnumValues: java.util.List enums()>();
v12 = interfaceinvoke v11.<java.util.List: java.util.Iterator iterator()>();
label2:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label5;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = virtualinvoke v14.<java.lang.Enum: java.lang.String toString()>();
interfaceinvoke v7.<java.util.Set: boolean add(java.lang.Object)>(v15);
goto label2;
label3:
v16 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.util.EnumValues _values>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.util.EnumValues: java.util.Collection values()>();
v18 = interfaceinvoke v17.<java.util.Collection: java.util.Iterator iterator()>();
label4:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label5;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = interfaceinvoke v20.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
interfaceinvoke v7.<java.util.Set: boolean add(java.lang.Object)>(v21);
goto label4;
label5:
interfaceinvoke v6.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor: void enumTypes(java.util.Set)>(v7);
label6:
return;
}
protected final boolean _serializeAsIndex(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.databind.ser.std.EnumSerializer v0;
java.lang.Boolean v2, v3;
com.fasterxml.jackson.databind.SerializationFeature v5;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.EnumSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.EnumSerializer: java.lang.Boolean _serializeAsIndex>;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
return v4;
label1:
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_ENUMS_USING_INDEX>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
return v6;
}
protected static java.lang.Boolean _isShapeWrittenUsingIndex(java.lang.Class, com.fasterxml.jackson.'annotation'.JsonFormat$Value, boolean, java.lang.Boolean)
{
java.lang.Object[] v14;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v11, v4, v5, v6, v7, v8;
java.lang.Boolean v12, v3, v9;
java.lang.String v15, v16, v17;
boolean v10, v2;
java.lang.IllegalArgumentException v13;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: com.fasterxml.jackson.'annotation'.JsonFormat$Value;
v2 := @parameter2: boolean;
v3 := @parameter3: java.lang.Boolean;
if v1 != null goto label01;
v4 = null;
goto label02;
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
label02:
if v4 != null goto label03;
return v3;
label03:
v5 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape ANY>;
if v4 == v5 goto label04;
v6 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape SCALAR>;
if v4 != v6 goto label05;
label04:
return v3;
label05:
v7 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape STRING>;
if v4 == v7 goto label06;
v8 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape NATURAL>;
if v4 != v8 goto label07;
label06:
v9 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v9;
label07:
v10 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Shape: boolean isNumeric()>();
if v10 != 0 goto label08;
v11 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape ARRAY>;
if v4 != v11 goto label09;
label08:
v12 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v12;
label09:
v13 = new java.lang.IllegalArgumentException;
v14 = newarray (java.lang.Object)[3];
v14[0] = v4;
v15 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v14[1] = v15;
if v2 == 0 goto label10;
v16 = "class";
goto label11;
label10:
v16 = "property";
label11:
v14[2] = v16;
v17 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Unsupported serialization shape (%s) for Enum %s, not supported as %s annotation", v14);
specialinvoke v13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v13;
}
protected static com.fasterxml.jackson.databind.util.EnumValues constructEnumNamingStrategyValues(com.fasterxml.jackson.databind.SerializationConfig, java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedClass)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.SerializationConfig v0;
com.fasterxml.jackson.databind.EnumNamingStrategy v6;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
com.fasterxml.jackson.databind.util.EnumValues v7;
java.lang.Class v1;
java.lang.Object v4;
boolean v5;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedClass;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v0, v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.introspect.EnumNamingStrategyFactory: com.fasterxml.jackson.databind.EnumNamingStrategy createEnumNamingStrategyInstance(java.lang.Object,boolean)>(v4, v5);
if v6 != null goto label1;
v7 = null;
goto label2;
label1:
v7 = staticinvoke <com.fasterxml.jackson.databind.util.EnumValues: com.fasterxml.jackson.databind.util.EnumValues constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy)>(v0, v1, v6);
label2:
return v7;
}
}