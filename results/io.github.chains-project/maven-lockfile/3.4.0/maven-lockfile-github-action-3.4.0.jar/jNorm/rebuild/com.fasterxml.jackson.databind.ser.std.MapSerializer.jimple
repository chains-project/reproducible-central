public class com.fasterxml.jackson.databind.ser.std.MapSerializer extends com.fasterxml.jackson.databind.ser.ContainerSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
private static final long serialVersionUID;
protected static final com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE;
public static final java.lang.Object MARKER_FOR_EMPTY;
protected final com.fasterxml.jackson.databind.BeanProperty _property;
protected final boolean _valueTypeIsStatic;
protected final com.fasterxml.jackson.databind.JavaType _keyType;
protected final com.fasterxml.jackson.databind.JavaType _valueType;
protected com.fasterxml.jackson.databind.JsonSerializer _keySerializer;
protected com.fasterxml.jackson.databind.JsonSerializer _valueSerializer;
protected final com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer;
protected com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers;
protected final java.util.Set _ignoredEntries;
protected final java.util.Set _includedEntries;
protected final java.lang.Object _filterId;
protected final java.lang.Object _suppressableValue;
protected final boolean _suppressNulls;
protected final com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker;
protected final boolean _sortKeys;
protected void <init>(java.util.Set, java.util.Set, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
java.util.Set v1, v10, v12, v13, v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v11;
com.fasterxml.jackson.databind.JsonSerializer v7, v8;
com.fasterxml.jackson.databind.JavaType v3, v4;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v14;
boolean v5, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Set;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType;
v5 := @parameter4: boolean;
v6 := @parameter5: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v7 := @parameter6: com.fasterxml.jackson.databind.JsonSerializer;
v8 := @parameter7: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);
if v1 == null goto label1;
v9 = interfaceinvoke v1.<java.util.Set: boolean isEmpty()>();
if v9 == 0 goto label2;
label1:
v10 = null;
goto label3;
label2:
v10 = v1;
label3:
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = v10;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = v3;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = v4;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = v5;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v6;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v7;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = v8;
v11 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = v11;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = null;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = null;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = 0;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = null;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = 0;
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>(v12, v13);
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v14;
return;
}
protected void <init>(java.util.Set, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
java.util.Set v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v6, v7;
com.fasterxml.jackson.databind.JavaType v2, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Set;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v7 := @parameter6: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, null, v2, v3, v4, v5, v6, v7);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.jsontype.TypeSerializer v12;
com.fasterxml.jackson.databind.JsonSerializer v3, v4;
com.fasterxml.jackson.databind.JavaType v10, v9;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v20;
boolean v11, v15, v17, v7;
com.fasterxml.jackson.databind.BeanProperty v2;
java.util.Set v18, v19, v5, v6, v8;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v1;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v13;
java.lang.Object v14, v16;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: java.util.Set;
v6 := @parameter5: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);
if v5 == null goto label1;
v7 = interfaceinvoke v5.<java.util.Set: boolean isEmpty()>();
if v7 == 0 goto label2;
label1:
v8 = null;
goto label3;
label2:
v8 = v5;
label3:
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = v8;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = v6;
v9 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = v9;
v10 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = v10;
v11 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = v11;
v12 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v12;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v3;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = v4;
v13 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = v13;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
v14 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = v14;
v15 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = v15;
v16 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = v16;
v17 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = v17;
v18 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;
v19 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;
v20 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set,java.util.Set)>(v18, v19);
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v20;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.util.Set)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.JsonSerializer v3, v4;
java.util.Set v5;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter4: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set)>(v1, v2, v3, v4, v5, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.jsontype.TypeSerializer v2;
com.fasterxml.jackson.databind.JsonSerializer v10, v11;
com.fasterxml.jackson.databind.JavaType v7, v8;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v16;
boolean v15, v4, v9;
com.fasterxml.jackson.databind.BeanProperty v13;
java.util.Set v5, v6;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v1;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v12;
java.lang.Object v14, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);
v5 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = v5;
v6 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = v6;
v7 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = v7;
v8 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = v8;
v9 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = v9;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v2;
v10 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v10;
v11 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = v11;
v12 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = v12;
v13 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = v13;
v14 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = v14;
v15 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = v15;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = v3;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = v4;
v16 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v16;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.jsontype.TypeSerializer v9;
com.fasterxml.jackson.databind.JsonSerializer v10, v11;
com.fasterxml.jackson.databind.JavaType v6, v7;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v16;
boolean v15, v3, v8;
com.fasterxml.jackson.databind.BeanProperty v13;
java.util.Set v4, v5;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v1;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v12;
java.lang.Object v14, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(class "Ljava/util/Map;", 0);
v4 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries> = v4;
v5 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries> = v5;
v6 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType> = v6;
v7 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType> = v7;
v8 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic> = v8;
v9 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer> = v9;
v10 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer> = v10;
v11 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer> = v11;
v12 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap emptyForProperties()>();
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = v12;
v13 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property> = v13;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys> = v3;
v14 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue> = v14;
v15 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls> = v15;
v16 = v1.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker> = v16;
return;
}
public com.fasterxml.jackson.databind.ser.std.MapSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
{
java.lang.Object v4;
boolean v5;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v1, v2;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v2 != v1 goto label1;
return v0;
label1:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("_withValueTypeSerializer");
v3 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(v0, v1, v4, v5);
return v3;
}
public com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.util.Set, java.util.Set, boolean)
{
com.fasterxml.jackson.databind.BeanProperty v1;
java.util.Set v4, v5;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v10, v7, v8;
com.fasterxml.jackson.databind.JsonSerializer v2, v3;
java.lang.Object v11;
boolean v6, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonSerializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 := @parameter3: java.util.Set;
v5 := @parameter4: java.util.Set;
v6 := @parameter5: boolean;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("withResolved");
v7 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
specialinvoke v7.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set)>(v0, v1, v2, v3, v4, v5);
v8 = v7;
v9 = v7.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;
if v6 == v9 goto label1;
v10 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
v11 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;
specialinvoke v10.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)>(v7, v11, v6);
v8 = v10;
label1:
return v8;
}
public com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.util.Set, boolean)
{
com.fasterxml.jackson.databind.BeanProperty v1;
com.fasterxml.jackson.databind.JsonSerializer v2, v3;
java.util.Set v4;
boolean v5;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonSerializer;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 := @parameter3: java.util.Set;
v5 := @parameter4: boolean;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set,boolean)>(v1, v2, v3, v4, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)
{
java.lang.Object v1, v2;
boolean v4;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;
if v2 != v1 goto label1;
return v0;
label1:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("withFilterId");
v3 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,java.lang.Object,boolean)>(v0, v1, v4);
return v3;
}
public com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object, boolean)
{
java.lang.Object v1, v3;
boolean v2, v4;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
if v1 != v3 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v2 != v4 goto label1;
return v0;
label1:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("withContentInclusion");
v5 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
specialinvoke v5.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(v0, v6, v1, v2);
return v5;
}
public static com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set, java.util.Set, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.lang.Object)
{
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.JsonSerializer v5, v6;
com.fasterxml.jackson.databind.JavaType v10, v2, v8, v9;
boolean v11, v12, v13, v3;
java.util.Set v0, v1;
com.fasterxml.jackson.databind.ser.std.MapSerializer v15, v16;
java.lang.Class v14;
java.lang.Object v7;
v0 := @parameter0: java.util.Set;
v1 := @parameter1: java.util.Set;
v2 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter3: boolean;
v4 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v6 := @parameter6: com.fasterxml.jackson.databind.JsonSerializer;
v7 := @parameter7: java.lang.Object;
if v2 != null goto label1;
v8 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE>;
v9 = v8;
v10 = v8;
goto label3;
label1:
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getKeyType()>();
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/util/Properties;");
if v11 == 0 goto label2;
v9 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
goto label3;
label2:
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
label3:
if v3 != 0 goto label6;
if v9 == null goto label4;
v12 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: boolean isFinal()>();
if v12 == 0 goto label4;
v13 = 1;
goto label5;
label4:
v13 = 0;
label5:
v3 = v13;
goto label7;
label6:
v14 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
if v14 != class "Ljava/lang/Object;" goto label7;
v3 = 0;
label7:
v15 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
specialinvoke v15.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v0, v1, v10, v9, v3, v4, v5, v6);
v16 = v15;
if v7 == null goto label8;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)>(v7);
label8:
return v16;
}
public static com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set, com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.lang.Object)
{
java.util.Set v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v7;
com.fasterxml.jackson.databind.JsonSerializer v4, v5;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v1;
boolean v2;
v0 := @parameter0: java.util.Set;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: boolean;
v3 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v6 := @parameter6: java.lang.Object;
v7 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(v0, null, v1, v2, v3, v4, v5, v6);
return v7;
}
protected void _ensureOverride(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.lang.String;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String)>(class "Lcom/fasterxml/jackson/databind/ser/std/MapSerializer;", v0, v1);
return;
}
protected void _ensureOverride()
{
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void _ensureOverride(java.lang.String)>("N/A");
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, java.lang.Object)
{
java.lang.Object v3;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v2;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v3 := @parameter2: java.lang.Object;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(v1, v2, v3, 0);
return;
}
public com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object)
{
java.lang.Object v1;
boolean v4;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.lang.Object;
v2 = new com.fasterxml.jackson.databind.ser.std.MapSerializer;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.MapSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,java.lang.Object,boolean)>(v0, v3, v1, v4);
return v2;
}
public static com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.lang.String[], com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.JsonSerializer, java.lang.Object)
{
java.lang.String[] v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v8;
java.util.HashSet v7;
com.fasterxml.jackson.databind.JsonSerializer v4, v5;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v1;
boolean v2;
v0 := @parameter0: java.lang.String[];
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: boolean;
v3 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;
v5 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v6 := @parameter6: java.lang.Object;
v7 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.util.HashSet arrayToSet(java.lang.Object[])>(v0);
v8 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(v7, v1, v2, v3, v4, v5, v6);
return v8;
}
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.AnnotationIntrospector v5;
com.fasterxml.jackson.databind.SerializationConfig v22;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v38;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v44, v45;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v43;
int[] v46;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v6, v7;
com.fasterxml.jackson.databind.JsonSerializer v11, v17, v3, v4;
boolean v12, v14, v20, v21, v25, v28, v34, v51, v53, v55, v8;
com.fasterxml.jackson.databind.BeanProperty v2;
java.util.Set v18, v19, v24, v31;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0, v41;
com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value v23;
com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value v30;
java.util.HashSet v26, v32;
int v47, v48;
java.lang.Boolean v36, v37, v40;
com.fasterxml.jackson.databind.JavaType v13, v15, v16, v49, v54;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v39;
java.util.Iterator v27, v33;
java.lang.Class v52, v57;
java.lang.Object v10, v29, v35, v42, v50, v56, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = null;
v4 = null;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
if v2 != null goto label01;
v6 = null;
goto label02;
label01:
v6 = interfaceinvoke v2.<com.fasterxml.jackson.databind.BeanProperty: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
label02:
v7 = v6;
v8 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>(v6, v5);
if v8 == 0 goto label04;
v9 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v6);
if v9 == null goto label03;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v6, v9);
label03:
v10 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v7);
if v10 == null goto label04;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v7, v10);
label04:
if v3 != null goto label05;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
label05:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer findContextualConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3);
if v11 != null goto label06;
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _valueTypeIsStatic>;
if v12 == 0 goto label06;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v14 != 0 goto label06;
v15 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findContentValueSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v15, v2);
label06:
if v4 != null goto label07;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
if v4 != null goto label07;
v16 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v16, v2);
goto label08;
label07:
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v4, v2);
label08:
v18 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _ignoredEntries>;
v19 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Set _includedEntries>;
v20 = 0;
v21 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _neitherNull(java.lang.Object,java.lang.Object)>(v7, v5);
if v21 == 0 goto label17;
v22 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v23 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value findPropertyIgnoralByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(v22, v7);
v24 = virtualinvoke v23.<com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value: java.util.Set findIgnoredForSerialization()>();
v25 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _nonEmpty(java.util.Collection)>(v24);
if v25 == 0 goto label12;
if v18 != null goto label09;
v26 = new java.util.HashSet;
specialinvoke v26.<java.util.HashSet: void <init>()>();
goto label10;
label09:
v26 = new java.util.HashSet;
specialinvoke v26.<java.util.HashSet: void <init>(java.util.Collection)>(v18);
label10:
v18 = v26;
v27 = interfaceinvoke v24.<java.util.Set: java.util.Iterator iterator()>();
label11:
v28 = interfaceinvoke v27.<java.util.Iterator: boolean hasNext()>();
if v28 == 0 goto label12;
v29 = interfaceinvoke v27.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v18.<java.util.Set: boolean add(java.lang.Object)>(v29);
goto label11;
label12:
v30 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value findPropertyInclusionByName(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated)>(v22, v7);
v31 = virtualinvoke v30.<com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value: java.util.Set getIncluded()>();
if v31 == null goto label16;
if v19 != null goto label13;
v32 = new java.util.HashSet;
specialinvoke v32.<java.util.HashSet: void <init>()>();
goto label14;
label13:
v32 = new java.util.HashSet;
specialinvoke v32.<java.util.HashSet: void <init>(java.util.Collection)>(v19);
label14:
v19 = v32;
v33 = interfaceinvoke v31.<java.util.Set: java.util.Iterator iterator()>();
label15:
v34 = interfaceinvoke v33.<java.util.Iterator: boolean hasNext()>();
if v34 == 0 goto label16;
v35 = interfaceinvoke v33.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v19.<java.util.Set: boolean add(java.lang.Object)>(v35);
goto label15;
label16:
v36 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Boolean findSerializationSortAlphabetically(com.fasterxml.jackson.databind.introspect.Annotated)>(v7);
v37 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v20 = virtualinvoke v37.<java.lang.Boolean: boolean equals(java.lang.Object)>(v36);
label17:
v38 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, class "Ljava/util/Map;");
if v38 == null goto label18;
v39 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SORTED_MAP_ENTRIES>;
v40 = virtualinvoke v38.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v39);
if v40 == null goto label18;
v20 = virtualinvoke v40.<java.lang.Boolean: boolean booleanValue()>();
label18:
v41 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withResolved(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.util.Set,java.util.Set,boolean)>(v2, v17, v11, v18, v19, v20);
if v7 == null goto label19;
v42 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>(v7);
if v42 == null goto label19;
v41 = virtualinvoke v41.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withFilterId(java.lang.Object)>(v42);
label19:
v43 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.'annotation'.JsonInclude$Value findIncludeOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, class "Ljava/util/Map;");
if v43 == null goto label30;
v44 = virtualinvoke v43.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();
v45 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
if v44 == v45 goto label30;
v46 = <com.fasterxml.jackson.databind.ser.std.MapSerializer$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v47 = virtualinvoke v44.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v48 = v46[v47];
tableswitch(v48)
{
case 1: goto label20;
case 2: goto label21;
case 3: goto label24;
case 4: goto label25;
case 5: goto label27;
case 6: goto label28;
default: goto label28;
};
label20:
v49 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v50 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v49);
v51 = 1;
if v50 == null goto label29;
v52 = virtualinvoke v50.<java.lang.Object: java.lang.Class getClass()>();
v53 = virtualinvoke v52.<java.lang.Class: boolean isArray()>();
if v53 == 0 goto label29;
v50 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(v50);
goto label29;
label21:
v51 = 1;
v54 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v55 = virtualinvoke v54.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v55 == 0 goto label22;
v56 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label23;
label22:
v56 = null;
label23:
v50 = v56;
goto label29;
label24:
v51 = 1;
v50 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label29;
label25:
v57 = virtualinvoke v43.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();
v50 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, v57);
if v50 != null goto label26;
v51 = 1;
goto label29;
label26:
v51 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(v50);
goto label29;
label27:
v50 = null;
v51 = 1;
goto label29;
label28:
v50 = null;
v51 = 0;
label29:
v41 = virtualinvoke v41.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean)>(v50, v51);
label30:
return v41;
}
public com.fasterxml.jackson.databind.JavaType getContentType()
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer getContentSerializer()
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
return v1;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.util.Map)
{
java.util.Map v2;
com.fasterxml.jackson.databind.JsonSerializer v22, v6;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v12, v14, v15, v16, v19, v21, v24, v25, v3, v5, v8, v9;
java.util.Iterator v11, v18;
java.util.Collection v10, v17;
com.fasterxml.jackson.databind.DatabindException v23;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.lang.Object v13, v20, v4, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.util.Map;
v3 = interfaceinvoke v2.<java.util.Map: boolean isEmpty()>();
if v3 == 0 goto label01;
return 1;
label01:
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
if v4 != null goto label02;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v5 != 0 goto label02;
return 0;
label02:
v6 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
v7 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v7 != v4 goto label03;
v8 = 1;
goto label04;
label03:
v8 = 0;
label04:
v9 = v8;
if v6 == null goto label10;
v10 = interfaceinvoke v2.<java.util.Map: java.util.Collection values()>();
v11 = interfaceinvoke v10.<java.util.Collection: java.util.Iterator iterator()>();
label05:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label09;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
if v13 != null goto label06;
v14 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v14 != 0 goto label05;
return 0;
label06:
if v9 == 0 goto label07;
v15 = virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v13);
if v15 != 0 goto label05;
return 0;
label07:
if v4 == null goto label08;
v16 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v16 != 0 goto label05;
label08:
return 0;
label09:
return 1;
label10:
v17 = interfaceinvoke v2.<java.util.Map: java.util.Collection values()>();
v18 = interfaceinvoke v17.<java.util.Collection: java.util.Iterator iterator()>();
label11:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label18;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
if v20 != null goto label12;
v21 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v21 != 0 goto label11;
return 0;
label12:
v22 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v20);
label13:
goto label15;
label14:
v23 := @caughtexception;
return 0;
label15:
if v9 == 0 goto label16;
v24 = virtualinvoke v22.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v20);
if v24 != 0 goto label11;
return 0;
label16:
if v4 == null goto label17;
v25 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v25 != 0 goto label11;
label17:
return 0;
label18:
return 1;
catch com.fasterxml.jackson.databind.DatabindException from label12 to label13 with label14;
}
public boolean hasSingleElement(java.util.Map)
{
java.util.Map v1;
int v2;
boolean v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
if v2 != 1 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public com.fasterxml.jackson.databind.JsonSerializer getKeySerializer()
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
return v1;
}
public void serialize(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Map v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartObject(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeWithoutTypeInfo(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndObject()>();
return;
}
public void serializeWithType(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
java.util.Map v1;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeWithoutTypeInfo(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
public void serializeWithoutTypeInfo(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Map v1;
com.fasterxml.jackson.databind.JsonSerializer v15, v16;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v13, v4, v5, v7;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.SerializationFeature v6;
com.fasterxml.jackson.databind.ser.PropertyFilter v10;
java.lang.Object v11, v12, v14, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
if v4 != 0 goto label7;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _sortKeys>;
if v5 != 0 goto label1;
v6 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature ORDER_MAP_ENTRIES_BY_KEYS>;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v6);
if v7 == 0 goto label2;
label1:
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.util.Map _orderEntries(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label2:
v8 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;
if v8 == null goto label3;
v9 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _filterId>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object,java.lang.Object)>(v3, v9, v1);
if v10 == null goto label3;
v11 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFilteredFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyFilter,java.lang.Object)>(v1, v2, v3, v10, v11);
goto label7;
label3:
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
if v12 != null goto label4;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v13 == 0 goto label5;
label4:
v14 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeOptionalFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v2, v3, v14);
goto label7;
label5:
v15 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v15 == null goto label6;
v16 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFieldsUsing(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v16);
goto label7;
label6:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label7:
return;
}
public void serializeFields(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
java.util.Map v1;
com.fasterxml.jackson.databind.JsonSerializer v14, v18, v5;
com.fasterxml.jackson.databind.JavaType v12;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v20;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v15, v16;
boolean v17, v9;
java.util.Iterator v8;
com.fasterxml.jackson.databind.BeanProperty v13;
java.util.Set v7;
java.lang.Exception v19;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.lang.Object v10, v11, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v4 == null goto label01;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v2, v3, null);
return;
label01:
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v6 = null;
label02:
v7 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label03:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label10;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
v6 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
if v6 != null goto label04;
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v14 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v12, v13);
virtualinvoke v14.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v2, v3);
goto label06;
label04:
v15 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v15 == null goto label05;
v16 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v6);
if v17 != 0 goto label03;
label05:
virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v6, v2, v3);
label06:
if v11 != null goto label07;
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v2);
goto label03;
label07:
v18 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v18 != null goto label08;
v18 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v11);
label08:
virtualinvoke v18.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v11, v2, v3);
goto label03;
label09:
v19 := @caughtexception;
v20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v6);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v3, v19, v1, v20);
label10:
return;
catch java.lang.Exception from label02 to label09 with label09;
}
public void serializeOptionalFields(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
java.util.Map v1;
com.fasterxml.jackson.databind.JsonSerializer v16, v22;
com.fasterxml.jackson.databind.JavaType v14;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v26;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v17, v18;
boolean v11, v19, v21, v23, v24, v7, v8;
java.util.Iterator v10;
com.fasterxml.jackson.databind.BeanProperty v15;
java.util.Set v9;
java.lang.Exception v25;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.lang.Object v12, v13, v20, v4, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: java.lang.Object;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
if v5 == null goto label01;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void serializeTypedFields(java.util.Map,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v2, v3, v4);
return;
label01:
v6 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v6 != v4 goto label02;
v7 = 1;
goto label03;
label02:
v7 = 0;
label03:
v8 = v7;
v9 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label04:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label14;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getKey()>();
if v13 != null goto label05;
v14 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v15 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v16 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v14, v15);
goto label07;
label05:
v17 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v17 == null goto label06;
v18 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v13);
if v19 != 0 goto label04;
label06:
v16 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
label07:
v20 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getValue()>();
if v20 != null goto label08;
v21 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v21 != 0 goto label04;
v22 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();
goto label11;
label08:
v22 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v22 != null goto label09;
v22 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v20);
label09:
if v8 == 0 goto label10;
v23 = virtualinvoke v22.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v20);
if v23 == 0 goto label11;
goto label04;
label10:
if v4 == null goto label11;
v24 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v20);
if v24 != 0 goto label04;
label11:
virtualinvoke v16.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v13, v2, v3);
virtualinvoke v22.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v20, v2, v3);
label12:
goto label04;
label13:
v25 := @caughtexception;
v26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v13);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v3, v25, v1, v26);
goto label04;
label14:
return;
catch java.lang.Exception from label11 to label12 with label13;
}
public void serializeFieldsUsing(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JsonSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
java.util.Map v1;
com.fasterxml.jackson.databind.JsonSerializer v17, v4, v5;
com.fasterxml.jackson.databind.JavaType v15;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v20;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v12, v13;
boolean v14, v9;
java.util.Iterator v8;
com.fasterxml.jackson.databind.BeanProperty v16;
java.util.Set v7;
java.lang.Exception v19;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.lang.Object v10, v11, v18;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v7 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label9;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v12 == null goto label2;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v11);
if v14 != 0 goto label1;
label2:
if v11 != null goto label3;
v15 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v16 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v17 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v15, v16);
virtualinvoke v17.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v2, v3);
goto label4;
label3:
virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v11, v2, v3);
label4:
v18 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
if v18 != null goto label5;
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v2);
goto label1;
label5:
if v6 != null goto label6;
virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v18, v2, v3);
goto label1;
label6:
virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v18, v2, v3, v6);
label7:
goto label1;
label8:
v19 := @caughtexception;
v20 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v11);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v3, v19, v1, v20);
goto label1;
label9:
return;
catch java.lang.Exception from label5 to label7 with label8;
}
public void serializeFilteredFields(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.ser.PropertyFilter, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v7;
java.util.Map v1;
com.fasterxml.jackson.databind.JsonSerializer v22, v25;
com.fasterxml.jackson.databind.JavaType v20;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v29;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v17, v18;
boolean v10, v11, v14, v19, v24, v26, v27;
com.fasterxml.jackson.databind.ser.std.MapProperty v6;
java.util.Iterator v13;
com.fasterxml.jackson.databind.BeanProperty v21, v8;
java.util.Set v12;
java.lang.Exception v28;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.PropertyFilter v4;
java.lang.Object v15, v16, v23, v5, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.ser.PropertyFilter;
v5 := @parameter4: java.lang.Object;
v6 = new com.fasterxml.jackson.databind.ser.std.MapProperty;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
specialinvoke v6.<com.fasterxml.jackson.databind.ser.std.MapProperty: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v7, v8);
v9 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v9 != v5 goto label01;
v10 = 1;
goto label02;
label01:
v10 = 0;
label02:
v11 = v10;
v12 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v13 = interfaceinvoke v12.<java.util.Set: java.util.Iterator iterator()>();
label03:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label14;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = interfaceinvoke v15.<java.util.Map$Entry: java.lang.Object getKey()>();
v17 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v17 == null goto label04;
v18 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v16);
if v19 != 0 goto label03;
label04:
if v16 != null goto label05;
v20 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v21 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v22 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v20, v21);
goto label06;
label05:
v22 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
label06:
v23 = interfaceinvoke v15.<java.util.Map$Entry: java.lang.Object getValue()>();
if v23 != null goto label07;
v24 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v24 != 0 goto label03;
v25 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();
goto label10;
label07:
v25 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v25 != null goto label08;
v25 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v23);
label08:
if v11 == 0 goto label09;
v26 = virtualinvoke v25.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v23);
if v26 == 0 goto label10;
goto label03;
label09:
if v5 == null goto label10;
v27 = virtualinvoke v5.<java.lang.Object: boolean equals(java.lang.Object)>(v23);
if v27 != 0 goto label03;
label10:
virtualinvoke v6.<com.fasterxml.jackson.databind.ser.std.MapProperty: void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v16, v23, v22, v25);
label11:
interfaceinvoke v4.<com.fasterxml.jackson.databind.ser.PropertyFilter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter)>(v1, v2, v3, v6);
label12:
goto label03;
label13:
v28 := @caughtexception;
v29 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v16);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v3, v28, v1, v29);
goto label03;
label14:
return;
catch java.lang.Exception from label11 to label12 with label13;
}
public void serializeTypedFields(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v24;
java.util.Map v1;
com.fasterxml.jackson.databind.JsonSerializer v15, v21;
com.fasterxml.jackson.databind.JavaType v13;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v26;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v16, v17;
boolean v10, v18, v20, v22, v23, v6, v7;
java.util.Iterator v9;
com.fasterxml.jackson.databind.BeanProperty v14;
java.util.Set v8;
java.lang.Exception v25;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.lang.Object v11, v12, v19, v4, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: java.lang.Object;
v5 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v5 != v4 goto label01;
v6 = 1;
goto label02;
label01:
v6 = 0;
label02:
v7 = v6;
v8 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v9 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
label03:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label14;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getKey()>();
if v12 != null goto label04;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v14 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v15 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v13, v14);
goto label06;
label04:
v16 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v16 == null goto label05;
v17 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v18 = virtualinvoke v17.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v12);
if v18 != 0 goto label03;
label05:
v15 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
label06:
v19 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
if v19 != null goto label07;
v20 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v20 != 0 goto label03;
v21 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();
goto label10;
label07:
v21 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v21 != null goto label08;
v21 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v19);
label08:
if v7 == 0 goto label09;
v22 = virtualinvoke v21.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v3, v19);
if v22 == 0 goto label10;
goto label03;
label09:
if v4 == null goto label10;
v23 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v19);
if v23 != 0 goto label03;
label10:
virtualinvoke v15.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v12, v2, v3);
label11:
v24 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
virtualinvoke v21.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v19, v2, v3, v24);
label12:
goto label03;
label13:
v25 := @caughtexception;
v26 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v12);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v3, v25, v1, v26);
goto label03;
label14:
return;
catch java.lang.Exception from label11 to label12 with label13;
}
public void serializeFilteredAnyProperties(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, java.util.Map, com.fasterxml.jackson.databind.ser.PropertyFilter, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v8;
java.util.Map v4;
com.fasterxml.jackson.databind.JsonSerializer v23, v26;
com.fasterxml.jackson.databind.JavaType v21;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v30;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v18, v19;
boolean v11, v12, v15, v20, v25, v27, v28;
com.fasterxml.jackson.databind.ser.std.MapProperty v7;
java.util.Iterator v14;
com.fasterxml.jackson.databind.BeanProperty v22, v9;
java.util.Set v13;
java.lang.Exception v29;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.PropertyFilter v5;
java.lang.Object v10, v16, v17, v24, v3, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.util.Map;
v5 := @parameter4: com.fasterxml.jackson.databind.ser.PropertyFilter;
v6 := @parameter5: java.lang.Object;
v7 = new com.fasterxml.jackson.databind.ser.std.MapProperty;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.jsontype.TypeSerializer _valueTypeSerializer>;
v9 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
specialinvoke v7.<com.fasterxml.jackson.databind.ser.std.MapProperty: void <init>(com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v8, v9);
v10 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v10 != v6 goto label01;
v11 = 1;
goto label02;
label01:
v11 = 0;
label02:
v12 = v11;
v13 = interfaceinvoke v4.<java.util.Map: java.util.Set entrySet()>();
v14 = interfaceinvoke v13.<java.util.Set: java.util.Iterator iterator()>();
label03:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label14;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getKey()>();
v18 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
if v18 == null goto label04;
v19 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker _inclusionChecker>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: boolean shouldIgnore(java.lang.Object)>(v17);
if v20 != 0 goto label03;
label04:
if v17 != null goto label05;
v21 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v22 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v23 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v21, v22);
goto label06;
label05:
v23 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
label06:
v24 = interfaceinvoke v16.<java.util.Map$Entry: java.lang.Object getValue()>();
if v24 != null goto label07;
v25 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v25 != 0 goto label03;
v26 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();
goto label10;
label07:
v26 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v26 != null goto label08;
v26 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v24);
label08:
if v12 == 0 goto label09;
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v24);
if v27 == 0 goto label10;
goto label03;
label09:
if v6 == null goto label10;
v28 = virtualinvoke v6.<java.lang.Object: boolean equals(java.lang.Object)>(v24);
if v28 != 0 goto label03;
label10:
virtualinvoke v7.<com.fasterxml.jackson.databind.ser.std.MapProperty: void reset(java.lang.Object,java.lang.Object,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v17, v24, v23, v26);
label11:
interfaceinvoke v5.<com.fasterxml.jackson.databind.ser.PropertyFilter: void serializeAsField(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.ser.PropertyWriter)>(v3, v2, v1, v7);
label12:
goto label03;
label13:
v29 := @caughtexception;
v30 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v17);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v1, v29, v4, v30);
goto label03;
label14:
return;
catch java.lang.Exception from label11 to label12 with label13;
}
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type)
{
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.node.ObjectNode v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.node.ObjectNode createSchemaNode(java.lang.String,boolean)>("object", 1);
return v3;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor v3;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v7;
com.fasterxml.jackson.databind.JsonSerializer v4, v6;
com.fasterxml.jackson.databind.JavaType v10, v2, v5, v8;
com.fasterxml.jackson.databind.SerializerProvider v9;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor expectMapFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v3 == null goto label2;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _keySerializer>;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
interfaceinvoke v3.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor: void keyFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType)>(v4, v5);
v6 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v6 != null goto label1;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v9 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.SerializerProvider getProvider()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>(v7, v8, v9);
label1:
v10 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
interfaceinvoke v3.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonMapFormatVisitor: void valueFormat(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable,com.fasterxml.jackson.databind.JavaType)>(v6, v10);
label2:
return;
}
protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, java.lang.Class, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v4;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1, v6, v7;
com.fasterxml.jackson.databind.JsonSerializer v8;
java.lang.Class v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3, v4);
v6 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
if v1 == v6 goto label1;
v7 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = v7;
label1:
v8 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v8;
}
protected final com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.BeanProperty v4;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult v5;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v1, v6, v7;
com.fasterxml.jackson.databind.JsonSerializer v8;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult findAndAddSecondarySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty)>(v2, v3, v4);
v6 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
if v1 == v6 goto label1;
v7 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap map>;
v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers> = v7;
label1:
v8 = v5.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap$SerializerAndMapResult: com.fasterxml.jackson.databind.JsonSerializer serializer>;
return v8;
}
protected java.util.Map _orderEntries(java.util.Map, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
java.util.Iterator v8;
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Set v7;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.util.TreeMap v14, v6;
java.util.Map v1;
java.lang.Object v10, v11, v12, v13;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v4, v5, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = v1 instanceof java.util.SortedMap;
if v4 == 0 goto label1;
return v1;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _hasNullKey(java.util.Map)>(v1);
if v5 == 0 goto label5;
v6 = new java.util.TreeMap;
specialinvoke v6.<java.util.TreeMap: void <init>()>();
v7 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v8 = interfaceinvoke v7.<java.util.Set: java.util.Iterator iterator()>();
label2:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label4;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getKey()>();
if v11 != null goto label3;
v12 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void _writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v2, v3, v12);
goto label2;
label3:
v13 = interfaceinvoke v10.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v13);
goto label2;
label4:
return v6;
label5:
v14 = new java.util.TreeMap;
specialinvoke v14.<java.util.TreeMap: void <init>(java.util.Map)>(v1);
return v14;
}
protected boolean _hasNullKey(java.util.Map)
{
java.util.Map v1;
boolean v2, v3, v4;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: java.util.Map;
v2 = v1 instanceof java.util.HashMap;
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>(null);
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
protected void _writeNullKeyedEntry(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.JsonSerializer v6, v8;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.SerializerProvider v2;
boolean v11, v14, v7;
com.fasterxml.jackson.databind.BeanProperty v5;
java.lang.Exception v15;
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
java.lang.Object v10, v12, v13, v3, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _keyType>;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.BeanProperty _property>;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findNullKeySerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanProperty)>(v4, v5);
if v3 != null goto label2;
v7 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: boolean _suppressNulls>;
if v7 == 0 goto label1;
return;
label1:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getDefaultNullValueSerializer()>();
goto label5;
label2:
v8 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _valueSerializer>;
if v8 != null goto label3;
v8 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v2, v3);
label3:
v9 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
v10 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
if v9 != v10 goto label4;
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v2, v3);
if v11 == 0 goto label5;
return;
label4:
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
if v12 == null goto label5;
v13 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object _suppressableValue>;
v14 = virtualinvoke v13.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
if v14 == 0 goto label5;
return;
label5:
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(null, v1, v2);
virtualinvoke v8.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v3, v1, v2);
label6:
goto label8;
label7:
v15 := @caughtexception;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: void wrapAndThrow(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v15, v3, "");
label8:
return;
catch java.lang.Exception from label5 to label6 with label7;
}
private final com.fasterxml.jackson.databind.JsonSerializer _findSerializer(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.MapSerializer v0;
com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap v12, v4, v8;
com.fasterxml.jackson.databind.JsonSerializer v11, v13, v5;
java.lang.Class v3;
java.lang.Object v2;
com.fasterxml.jackson.databind.JavaType v10, v6, v9;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap: com.fasterxml.jackson.databind.JsonSerializer serializerFor(java.lang.Class)>(v3);
if v5 == null goto label1;
return v5;
label1:
v6 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: boolean hasGenericTypes()>();
if v7 == 0 goto label2;
v8 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;
v9 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType _valueType>;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructSpecializedType(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v9, v3);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializerProvider)>(v8, v10, v1);
return v11;
label2:
v12 = v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap _dynamicValueSerializers>;
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JsonSerializer _findAndAddDynamic(com.fasterxml.jackson.databind.ser.impl.PropertySerializerMap,java.lang.Class,com.fasterxml.jackson.databind.SerializerProvider)>(v12, v3, v1);
return v13;
}
static void <clinit>()
{
com.fasterxml.jackson.'annotation'.JsonInclude$Include v1;
com.fasterxml.jackson.databind.JavaType v0;
v0 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType UNSPECIFIED_TYPE> = v0;
v1 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include NON_EMPTY>;
<com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY> = v1;
return;
}
}