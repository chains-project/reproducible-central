public final class com.fasterxml.jackson.databind.util.ObjectBuffer extends java.lang.Object
{
private static final int SMALL_CHUNK;
private static final int MAX_CHUNK;
private com.fasterxml.jackson.databind.util.LinkedNode _head;
private com.fasterxml.jackson.databind.util.LinkedNode _tail;
private int _size;
private java.lang.Object[] _freeBuffer;
public void <init>()
{
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object[] resetAndStart()
{
java.lang.Object[] v1, v2, v3;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();
v1 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
if v1 != null goto label1;
v2 = newarray (java.lang.Object)[12];
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer> = v2;
return v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
return v3;
}
public java.lang.Object[] resetAndStart(java.lang.Object[], int)
{
java.lang.Object[] v1, v3, v4, v7, v8, v9;
int v2, v5, v6;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();
v3 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
v5 = lengthof v4;
if v5 >= v2 goto label2;
label1:
v6 = staticinvoke <java.lang.Math: int max(int,int)>(12, v2);
v7 = newarray (java.lang.Object)[v6];
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer> = v7;
label2:
v8 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, 0, v8, 0, v2);
v9 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
return v9;
}
public java.lang.Object[] appendCompletedChunk(java.lang.Object[])
{
java.lang.Object[] v1, v9;
int v5, v6, v7, v8;
com.fasterxml.jackson.databind.util.LinkedNode v2, v3, v4;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 := @parameter0: java.lang.Object[];
v2 = new com.fasterxml.jackson.databind.util.LinkedNode;
specialinvoke v2.<com.fasterxml.jackson.databind.util.LinkedNode: void <init>(java.lang.Object,com.fasterxml.jackson.databind.util.LinkedNode)>(v1, null);
v3 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _head>;
if v3 != null goto label1;
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _tail> = v2;
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _head> = v2;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _tail>;
virtualinvoke v4.<com.fasterxml.jackson.databind.util.LinkedNode: void linkNext(com.fasterxml.jackson.databind.util.LinkedNode)>(v2);
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _tail> = v2;
label2:
v5 = lengthof v1;
v6 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;
v7 = v6 + v5;
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: int _size> = v7;
if v5 >= 16384 goto label3;
v5 = v5 + v5;
goto label4;
label3:
if v5 >= 262144 goto label4;
v8 = v5 >> 2;
v5 = v5 + v8;
label4:
v9 = newarray (java.lang.Object)[v5];
return v9;
}
public java.lang.Object[] completeAndClearBuffer(java.lang.Object[], int)
{
java.lang.Object[] v1, v5;
int v2, v3, v4;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;
v4 = v2 + v3;
v5 = newarray (java.lang.Object)[v4];
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _copyTo(java.lang.Object,int,java.lang.Object[],int)>(v5, v4, v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();
return v5;
}
public java.lang.Object[] completeAndClearBuffer(java.lang.Object[], int, java.lang.Class)
{
java.lang.Object[] v1;
int v2, v4, v5;
java.lang.Class v3;
java.lang.Object v6;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Class;
v4 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;
v5 = v2 + v4;
v6 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v3, v5);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _copyTo(java.lang.Object,int,java.lang.Object[],int)>(v6, v5, v1, v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();
return v6;
}
public void completeAndClearBuffer(java.lang.Object[], int, java.util.List)
{
java.lang.Object[] v1;
java.util.List v3;
int v2, v6, v7, v9;
java.lang.Object v10, v5, v8;
com.fasterxml.jackson.databind.util.LinkedNode v4;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: int;
v3 := @parameter2: java.util.List;
v4 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _head>;
label1:
if v4 == null goto label4;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v6 = 0;
v7 = lengthof v5;
label2:
if v6 >= v7 goto label3;
v8 = v5[v6];
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v8);
v6 = v6 + 1;
goto label2;
label3:
v4 = virtualinvoke v4.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label4:
v9 = 0;
label5:
if v9 >= v2 goto label6;
v10 = v1[v9];
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v10);
v9 = v9 + 1;
goto label5;
label6:
virtualinvoke v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: void _reset()>();
return;
}
public int initialCapacity()
{
java.lang.Object[] v1, v3;
int v2;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
if v1 != null goto label1;
v2 = 0;
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer>;
v2 = lengthof v3;
label2:
return v2;
}
public int bufferedSize()
{
int v1;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: int _size>;
return v1;
}
protected void _reset()
{
java.lang.Object v3;
com.fasterxml.jackson.databind.util.LinkedNode v1, v2;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _tail>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _tail>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] _freeBuffer> = v3;
label1:
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _tail> = null;
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _head> = null;
v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: int _size> = 0;
return;
}
protected final void _copyTo(java.lang.Object, int, java.lang.Object[], int)
{
java.lang.IllegalStateException v10;
java.lang.Object[] v3;
int v2, v4, v5, v8, v9;
java.lang.Object v1, v7;
java.lang.String v11;
com.fasterxml.jackson.databind.util.LinkedNode v6;
com.fasterxml.jackson.databind.util.ObjectBuffer v0;
v0 := @this: com.fasterxml.jackson.databind.util.ObjectBuffer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Object[];
v4 := @parameter3: int;
v5 = 0;
v6 = v0.<com.fasterxml.jackson.databind.util.ObjectBuffer: com.fasterxml.jackson.databind.util.LinkedNode _head>;
label1:
if v6 == null goto label2;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.LinkedNode: java.lang.Object value()>();
v8 = lengthof v7;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v7, 0, v1, v5, v8);
v5 = v5 + v8;
v6 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.LinkedNode: com.fasterxml.jackson.databind.util.LinkedNode next()>();
goto label1;
label2:
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v3, 0, v1, v5, v4);
v9 = v5 + v4;
if v9 == v2 goto label3;
v10 = new java.lang.IllegalStateException;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v2, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Should have gotten \u0001 entries, got \u0001");
specialinvoke v10.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v11);
throw v10;
label3:
return;
}
}