final class com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node extends java.lang.Object
{
final java.lang.Object _data;
final int _dataLength;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next;
public void <init>(java.lang.Object, int)
{
int v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v0;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object _data> = v1;
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int _dataLength> = v2;
return;
}
public java.lang.Object getData()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v0;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
v1 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object _data>;
return v1;
}
public int copyData(java.lang.Object, int)
{
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v0;
int v2, v4, v5, v6;
java.lang.Object v1, v3;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: java.lang.Object _data>;
v4 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int _dataLength>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v3, 0, v1, v2, v4);
v5 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: int _dataLength>;
v6 = v2 + v5;
return v6;
}
public com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node next()
{
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v0, v1;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
v1 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next>;
return v1;
}
public void linkNext(com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node)
{
java.lang.IllegalStateException v3;
com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node v0, v1, v2;
v0 := @this: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
v1 := @parameter0: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node;
v2 = v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next>;
if v2 == null goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
label1:
v0.<com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node: com.fasterxml.jackson.databind.util.PrimitiveArrayBuilder$Node _next> = v1;
return;
}
}