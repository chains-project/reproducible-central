public final class com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder extends java.lang.Object
{
static final int DEFAULT_CONCURRENCY_LEVEL;
static final int DEFAULT_INITIAL_CAPACITY;
int concurrencyLevel;
int initialCapacity;
long capacity;
public void <init>()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder v0;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: long capacity> = -1L;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: int initialCapacity> = 16;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: int concurrencyLevel> = 16;
return;
}
public com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder initialCapacity(int)
{
int v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder;
v1 := @parameter0: int;
if v1 < 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void checkArgument(boolean)>(v2);
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: int initialCapacity> = v1;
return v0;
}
public com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder maximumCapacity(long)
{
byte v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder v0;
long v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 < 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void checkArgument(boolean)>(v3);
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: long capacity> = v1;
return v0;
}
public com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder concurrencyLevel(int)
{
int v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder;
v1 := @parameter0: int;
if v1 <= 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void checkArgument(boolean)>(v2);
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: int concurrencyLevel> = v1;
return v0;
}
public com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap build()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v4;
byte v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder v0;
long v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder: long capacity>;
v2 = v1 cmp 0L;
if v2 < 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void checkState(boolean)>(v3);
v4 = new com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap;
specialinvoke v4.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Builder)>(v0);
return v4;
}
}