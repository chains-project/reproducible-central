final class com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node extends java.util.concurrent.atomic.AtomicReference implements com.fasterxml.jackson.databind.util.internal.Linked
{
final java.lang.Object key;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node prev;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node next;
void <init>(java.lang.Object, com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v0;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue;
specialinvoke v0.<java.util.concurrent.atomic.AtomicReference: void <init>(java.lang.Object)>(v2);
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node: java.lang.Object key> = v1;
return;
}
public com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node getPrevious()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v0, v1;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node prev>;
return v1;
}
public void setPrevious(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v0, v1;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v1 := @parameter0: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node prev> = v1;
return;
}
public com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node getNext()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v0, v1;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node next>;
return v1;
}
public void setNext(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v0, v1;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v1 := @parameter0: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node next> = v1;
return;
}
java.lang.Object getValue()
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node v0;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$Node: java.lang.Object get()>();
v2 = v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$WeightedValue: java.lang.Object value>;
return v2;
}
}