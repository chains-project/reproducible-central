public class com.fasterxml.jackson.dataformat.yaml.YAMLFactory extends com.fasterxml.jackson.core.JsonFactory
{
private static final long serialVersionUID;
public static final java.lang.String FORMAT_NAME_YAML;
protected static final int DEFAULT_YAML_PARSER_FEATURE_FLAGS;
protected static final int DEFAULT_YAML_GENERATOR_FEATURE_FLAGS;
private static final byte UTF8_BOM_1;
private static final byte UTF8_BOM_2;
private static final byte UTF8_BOM_3;
protected int _yamlGeneratorFeatures;
protected int _yamlParserFeatures;
protected final org.yaml.snakeyaml.DumperOptions$Version _version;
protected final com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker;
protected final org.yaml.snakeyaml.LoaderOptions _loaderOptions;
protected final org.yaml.snakeyaml.DumperOptions _dumperOptions;
public void <init>()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.core.ObjectCodec v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 = null;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>(v1);
return;
}
public void <init>(com.fasterxml.jackson.core.ObjectCodec)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v4, v5;
com.fasterxml.jackson.core.ObjectCodec v1;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default v6;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.ObjectCodec)>(v1);
v2 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v2;
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v3;
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v4;
v5 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v5;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions$Version _version> = null;
v6 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default instance()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker> = v6;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions> = null;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions _dumperOptions> = null;
return;
}
public void <init>(com.fasterxml.jackson.dataformat.yaml.YAMLFactory, com.fasterxml.jackson.core.ObjectCodec)
{
org.yaml.snakeyaml.DumperOptions$Version v7;
org.yaml.snakeyaml.LoaderOptions v9;
com.fasterxml.jackson.core.ObjectCodec v2;
org.yaml.snakeyaml.DumperOptions v10;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0, v1;
int v3, v4, v5, v6;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v8;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v2 := @parameter1: com.fasterxml.jackson.core.ObjectCodec;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.core.ObjectCodec)>(v1, v2);
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v3;
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v4;
v5 = v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v5;
v6 = v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v6;
v7 = v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions$Version _version>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions$Version _version> = v7;
v8 = v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker> = v8;
v9 = v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions> = v9;
v10 = v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions _dumperOptions>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions _dumperOptions> = v10;
return;
}
protected void <init>(com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder)
{
org.yaml.snakeyaml.DumperOptions$Version v6;
org.yaml.snakeyaml.LoaderOptions v8;
org.yaml.snakeyaml.DumperOptions v9;
com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder v1;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v4, v5;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder;
specialinvoke v0.<com.fasterxml.jackson.core.JsonFactory: void <init>(com.fasterxml.jackson.core.TSFBuilder,boolean)>(v1, 0);
v2 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_GENERATOR_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v2;
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_PARSER_FEATURE_FLAGS>;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v3;
v4 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: int formatGeneratorFeaturesMask()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v4;
v5 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: int formatParserFeaturesMask()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v5;
v6 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: org.yaml.snakeyaml.DumperOptions$Version yamlVersionToWrite()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions$Version _version> = v6;
v7 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker stringQuotingChecker()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker> = v7;
v8 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: org.yaml.snakeyaml.LoaderOptions loaderOptions()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions> = v8;
v9 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: org.yaml.snakeyaml.DumperOptions dumperOptions()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions _dumperOptions> = v9;
return;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder rebuild()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 = new com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder;
specialinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: void <init>(com.fasterxml.jackson.dataformat.yaml.YAMLFactory)>(v0);
return v1;
}
public static com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder builder()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder v0;
v0 = new com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactoryBuilder: void <init>()>();
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLFactory copy()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0, v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: void _checkInvalidCopy(java.lang.Class)>(class "Lcom/fasterxml/jackson/dataformat/yaml/YAMLFactory;");
v1 = new com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
specialinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: void <init>(com.fasterxml.jackson.dataformat.yaml.YAMLFactory,com.fasterxml.jackson.core.ObjectCodec)>(v0, null);
return v1;
}
protected java.lang.Object readResolve()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0, v1;
com.fasterxml.jackson.core.ObjectCodec v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 = new com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
specialinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: void <init>(com.fasterxml.jackson.dataformat.yaml.YAMLFactory,com.fasterxml.jackson.core.ObjectCodec)>(v0, v2);
return v1;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.core.Version v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 = <com.fasterxml.jackson.dataformat.yaml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public boolean canUseCharArrays()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
return 0;
}
public java.lang.Class getFormatReadFeatureType()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
return class "Lcom/fasterxml/jackson/dataformat/yaml/YAMLParser$Feature;";
}
public java.lang.Class getFormatWriteFeatureType()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
return class "Lcom/fasterxml/jackson/dataformat/yaml/YAMLGenerator$Feature;";
}
public java.lang.String getFormatName()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
return "YAML";
}
public com.fasterxml.jackson.core.format.MatchStrength hasFormat(com.fasterxml.jackson.core.format.InputAccessor) throws java.io.IOException
{
byte v13, v19, v21, v4, v8;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v14, v5, v9;
boolean v11, v16, v18, v2, v20, v6;
com.fasterxml.jackson.core.format.InputAccessor v1;
com.fasterxml.jackson.core.format.MatchStrength v10, v12, v15, v17, v22, v23, v3, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.core.format.InputAccessor;
v2 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v2 != 0 goto label1;
v3 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v3;
label1:
v4 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v5 = (int) -17;
if v4 != v5 goto label7;
v6 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v6 != 0 goto label2;
v7 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v7;
label2:
v8 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v9 = (int) -69;
if v8 == v9 goto label3;
v10 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v10;
label3:
v11 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v11 != 0 goto label4;
v12 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v12;
label4:
v13 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
v14 = (int) -65;
if v13 == v14 goto label5;
v15 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength NO_MATCH>;
return v15;
label5:
v16 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v16 != 0 goto label6;
v17 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v17;
label6:
v4 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
label7:
if v4 != 45 goto label8;
v18 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v18 == 0 goto label8;
v19 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
if v19 != 45 goto label8;
v20 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: boolean hasMoreBytes()>();
if v20 == 0 goto label8;
v21 = interfaceinvoke v1.<com.fasterxml.jackson.core.format.InputAccessor: byte nextByte()>();
if v21 != 45 goto label8;
v22 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength FULL_MATCH>;
return v22;
label8:
v23 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
return v23;
}
public final com.fasterxml.jackson.dataformat.yaml.YAMLFactory configure(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature, boolean)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLFactory enable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)>(v1);
goto label2;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLFactory disable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)>(v1);
label2:
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLFactory enable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v4;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLFactory disable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v4, v5, v6;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures> = v6;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v4;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int getFormatGeneratorFeatures()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures>;
return v1;
}
public final com.fasterxml.jackson.dataformat.yaml.YAMLFactory configure(com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature, boolean)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLFactory enable(com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature)>(v1);
goto label2;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLFactory disable(com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature)>(v1);
label2:
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLFactory enable(com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v1;
int v2, v3, v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLFactory disable(com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v1;
int v2, v3, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures> = v6;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature v1;
int v2, v3, v4;
boolean v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int getFormatParserFeatures()
{
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
return v1;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.lang.String) throws java.io.IOException
{
java.io.StringReader v2;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.lang.String;
v2 = new java.io.StringReader;
specialinvoke v2.<java.io.StringReader: void <init>(java.lang.String)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.io.Reader)>(v2);
return v3;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.io.File) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser v6;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.FileInputStream v4;
java.io.File v1;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 1);
v4 = new java.io.FileInputStream;
specialinvoke v4.<java.io.FileInputStream: void <init>(java.io.File)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v5, v3);
return v6;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.net.URL) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser v6;
java.net.URL v1;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v4, v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.net.URL;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.InputStream _optimizedStreamFromURL(java.net.URL)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v5, v3);
return v6;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.io.InputStream) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser v5;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v1, v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.InputStream;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.InputStream _decorate(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.io.Reader) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser v5;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.Reader v1, v4;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.Reader;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Reader _decorate(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.Reader,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(char[]) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLParser v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2;
char[] v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: char[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(char[],int,int)>(v1, 0, v2);
return v3;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(char[], int, int) throws java.io.IOException
{
java.io.CharArrayReader v4;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v5;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3;
char[] v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = new java.io.CharArrayReader;
specialinvoke v4.<java.io.CharArrayReader: void <init>(char[],int,int)>(v1, v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(java.io.Reader)>(v4);
return v5;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(byte[]) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v10, v8;
com.fasterxml.jackson.core.io.InputDecorator v4, v5;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v6, v9;
com.fasterxml.jackson.core.io.ContentReference v2;
java.io.InputStream v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: byte[];
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 1);
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v6 = lengthof v1;
v7 = virtualinvoke v5.<com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(v3, v1, 0, v6);
if v7 == null goto label1;
v8 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v7, v3);
return v8;
label1:
v9 = lengthof v1;
v10 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)>(v1, 0, v9, v3);
return v10;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLParser createParser(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v10, v9;
com.fasterxml.jackson.core.io.InputDecorator v6, v7;
com.fasterxml.jackson.core.io.IOContext v5;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3;
com.fasterxml.jackson.core.io.ContentReference v4;
java.io.InputStream v8;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object,int,int)>(v1, v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v4, 1);
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
if v6 == null goto label1;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.InputDecorator _inputDecorator>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.io.InputDecorator: java.io.InputStream decorate(com.fasterxml.jackson.core.io.IOContext,byte[],int,int)>(v5, v1, v2, v3);
if v8 == null goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.InputStream,com.fasterxml.jackson.core.io.IOContext)>(v8, v5);
return v9;
label1:
v10 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(byte[],int,int,com.fasterxml.jackson.core.io.IOContext)>(v1, v2, v3, v5);
return v10;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v1, v5;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v7;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.io.IOContext v4;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.Writer v6;
com.fasterxml.jackson.core.io.ContentReference v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v3, 0);
virtualinvoke v4.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v1, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v5, v2, v4);
v7 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v6, v4);
return v7;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator createGenerator(java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1, v4;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v7;
com.fasterxml.jackson.core.JsonEncoding v5;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.Writer v6;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.OutputStream;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v4, v5, v3);
v7 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v6, v3);
return v7;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator createGenerator(java.io.Writer) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v5;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.Writer v1, v4;
com.fasterxml.jackson.core.io.ContentReference v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.Writer;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v2, 0);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Writer _decorate(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v4, v3);
return v5;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v6;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v8;
java.io.FileOutputStream v3;
java.io.File v1;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.io.IOContext v5;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.Writer v7;
com.fasterxml.jackson.core.io.ContentReference v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.File;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 = new java.io.FileOutputStream;
specialinvoke v3.<java.io.FileOutputStream: void <init>(java.io.File)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.ContentReference _createContentReference(java.lang.Object)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.io.IOContext _createContext(com.fasterxml.jackson.core.io.ContentReference,boolean)>(v4, 1);
virtualinvoke v5.<com.fasterxml.jackson.core.io.IOContext: void setEncoding(com.fasterxml.jackson.core.JsonEncoding)>(v2);
v6 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.OutputStream _decorate(java.io.OutputStream,com.fasterxml.jackson.core.io.IOContext)>(v3, v5);
v7 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Writer _createWriter(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v6, v2, v5);
v8 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator _createGenerator(java.io.Writer,com.fasterxml.jackson.core.io.IOContext)>(v7, v5);
return v8;
}
protected com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.InputStream, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
org.yaml.snakeyaml.LoaderOptions v6;
com.fasterxml.jackson.core.ObjectCodec v7;
java.io.Reader v8;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v3;
com.fasterxml.jackson.core.io.IOContext v2;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v4, v5;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = new com.fasterxml.jackson.dataformat.yaml.YAMLParser;
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _parserFeatures>;
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions>;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v8 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Reader _createReader(java.io.InputStream,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v1, null, v2);
specialinvoke v3.<com.fasterxml.jackson.dataformat.yaml.YAMLParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,org.yaml.snakeyaml.LoaderOptions,com.fasterxml.jackson.core.ObjectCodec,java.io.Reader)>(v2, v4, v5, v6, v7, v8);
return v3;
}
protected com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(java.io.Reader, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
org.yaml.snakeyaml.LoaderOptions v6;
com.fasterxml.jackson.core.ObjectCodec v7;
java.io.Reader v1;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v3;
com.fasterxml.jackson.core.io.IOContext v2;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v4, v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = new com.fasterxml.jackson.dataformat.yaml.YAMLParser;
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _parserFeatures>;
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions>;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
specialinvoke v3.<com.fasterxml.jackson.dataformat.yaml.YAMLParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,org.yaml.snakeyaml.LoaderOptions,com.fasterxml.jackson.core.ObjectCodec,java.io.Reader)>(v2, v4, v5, v6, v7, v1);
return v3;
}
protected com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(char[], int, int, com.fasterxml.jackson.core.io.IOContext, boolean) throws java.io.IOException
{
java.io.CharArrayReader v11;
org.yaml.snakeyaml.LoaderOptions v9;
com.fasterxml.jackson.core.ObjectCodec v10;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v6;
com.fasterxml.jackson.core.io.IOContext v4;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v7, v8;
char[] v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.io.IOContext;
v5 := @parameter4: boolean;
v6 = new com.fasterxml.jackson.dataformat.yaml.YAMLParser;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _parserFeatures>;
v8 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v9 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions>;
v10 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v11 = new java.io.CharArrayReader;
specialinvoke v11.<java.io.CharArrayReader: void <init>(char[],int,int)>(v1, v2, v3);
specialinvoke v6.<com.fasterxml.jackson.dataformat.yaml.YAMLParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,org.yaml.snakeyaml.LoaderOptions,com.fasterxml.jackson.core.ObjectCodec,java.io.Reader)>(v4, v7, v8, v9, v10, v11);
return v6;
}
protected com.fasterxml.jackson.dataformat.yaml.YAMLParser _createParser(byte[], int, int, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
byte[] v1;
org.yaml.snakeyaml.LoaderOptions v8;
com.fasterxml.jackson.core.ObjectCodec v9;
java.io.Reader v10;
com.fasterxml.jackson.dataformat.yaml.YAMLParser v5;
com.fasterxml.jackson.core.io.IOContext v4;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3, v6, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.io.IOContext;
v5 = new com.fasterxml.jackson.dataformat.yaml.YAMLParser;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _parserFeatures>;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlParserFeatures>;
v8 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.LoaderOptions _loaderOptions>;
v9 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: java.io.Reader _createReader(byte[],int,int,com.fasterxml.jackson.core.JsonEncoding,com.fasterxml.jackson.core.io.IOContext)>(v1, v2, v3, null, v4);
specialinvoke v5.<com.fasterxml.jackson.dataformat.yaml.YAMLParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,org.yaml.snakeyaml.LoaderOptions,com.fasterxml.jackson.core.ObjectCodec,java.io.Reader)>(v4, v6, v7, v8, v9, v10);
return v5;
}
protected com.fasterxml.jackson.dataformat.yaml.YAMLGenerator _createGenerator(java.io.Writer, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v10, v5;
org.yaml.snakeyaml.DumperOptions$Version v9;
com.fasterxml.jackson.core.ObjectCodec v13, v8;
org.yaml.snakeyaml.DumperOptions v14, v4;
com.fasterxml.jackson.core.io.IOContext v2;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v11, v3, v6;
java.io.Writer v1;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v12, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.Writer;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _yamlGeneratorFeatures>;
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions _dumperOptions>;
if v4 != null goto label1;
v5 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _generatorFeatures>;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker>;
v8 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v9 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions$Version _version>;
specialinvoke v5.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,org.yaml.snakeyaml.DumperOptions$Version)>(v2, v6, v3, v7, v8, v1, v9);
return v5;
label1:
v10 = new com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v11 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int _generatorFeatures>;
v12 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker>;
v13 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: com.fasterxml.jackson.core.ObjectCodec _objectCodec>;
v14 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: org.yaml.snakeyaml.DumperOptions _dumperOptions>;
specialinvoke v10.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,org.yaml.snakeyaml.DumperOptions)>(v2, v11, v3, v12, v13, v1, v14);
return v10;
}
protected com.fasterxml.jackson.dataformat.yaml.YAMLGenerator _createUTF8Generator(java.io.OutputStream, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
java.io.OutputStream v1;
java.lang.IllegalStateException v3;
com.fasterxml.jackson.core.io.IOContext v2;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.io.IOContext;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
}
protected java.io.Writer _createWriter(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.dataformat.yaml.UTF8Writer v5;
com.fasterxml.jackson.core.JsonEncoding v2, v4;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.io.OutputStreamWriter v6;
java.lang.String v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 := @parameter2: com.fasterxml.jackson.core.io.IOContext;
v4 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v2 != v4 goto label1;
v5 = new com.fasterxml.jackson.dataformat.yaml.UTF8Writer;
specialinvoke v5.<com.fasterxml.jackson.dataformat.yaml.UTF8Writer: void <init>(java.io.OutputStream)>(v1);
return v5;
label1:
v6 = new java.io.OutputStreamWriter;
v7 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();
specialinvoke v6.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.lang.String)>(v1, v7);
return v6;
}
protected java.io.Reader _createReader(java.io.InputStream, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
java.io.InputStreamReader v10;
com.fasterxml.jackson.core.JsonParser$Feature v6;
com.fasterxml.jackson.dataformat.yaml.UTF8Reader v9;
com.fasterxml.jackson.core.JsonEncoding v2, v4;
com.fasterxml.jackson.core.io.IOContext v3;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
java.lang.String v11;
boolean v5, v7, v8;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
v3 := @parameter2: com.fasterxml.jackson.core.io.IOContext;
if v2 != null goto label1;
v2 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
label1:
v4 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v2 != v4 goto label5;
v5 = virtualinvoke v3.<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();
if v5 != 0 goto label2;
v6 = <com.fasterxml.jackson.core.JsonParser$Feature: com.fasterxml.jackson.core.JsonParser$Feature AUTO_CLOSE_SOURCE>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)>(v6);
if v7 == 0 goto label3;
label2:
v8 = 1;
goto label4;
label3:
v8 = 0;
label4:
v9 = new com.fasterxml.jackson.dataformat.yaml.UTF8Reader;
specialinvoke v9.<com.fasterxml.jackson.dataformat.yaml.UTF8Reader: void <init>(java.io.InputStream,boolean)>(v1, v8);
return v9;
label5:
v10 = new java.io.InputStreamReader;
v11 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();
specialinvoke v10.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(v1, v11);
return v10;
}
protected java.io.Reader _createReader(byte[], int, int, com.fasterxml.jackson.core.JsonEncoding, com.fasterxml.jackson.core.io.IOContext) throws java.io.IOException
{
byte[] v1;
java.io.InputStreamReader v9;
com.fasterxml.jackson.dataformat.yaml.UTF8Reader v7;
java.io.ByteArrayInputStream v8;
com.fasterxml.jackson.core.JsonEncoding v4, v6;
com.fasterxml.jackson.core.io.IOContext v5;
com.fasterxml.jackson.dataformat.yaml.YAMLFactory v0;
int v2, v3;
java.lang.String v10;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLFactory;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.JsonEncoding;
v5 := @parameter4: com.fasterxml.jackson.core.io.IOContext;
if v4 != null goto label1;
v4 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
label1:
if v4 == null goto label2;
v6 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
if v4 != v6 goto label3;
label2:
v7 = new com.fasterxml.jackson.dataformat.yaml.UTF8Reader;
specialinvoke v7.<com.fasterxml.jackson.dataformat.yaml.UTF8Reader: void <init>(byte[],int,int,boolean)>(v1, v2, v3, 1);
return v7;
label3:
v8 = new java.io.ByteArrayInputStream;
specialinvoke v8.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(v1, v2, v3);
v9 = new java.io.InputStreamReader;
v10 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonEncoding: java.lang.String getJavaName()>();
specialinvoke v9.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(v8, v10);
return v9;
}
static void <clinit>()
{
int v0, v1;
v0 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.YAMLParser$Feature: int collectDefaults()>();
<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_PARSER_FEATURE_FLAGS> = v0;
v1 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int collectDefaults()>();
<com.fasterxml.jackson.dataformat.yaml.YAMLFactory: int DEFAULT_YAML_GENERATOR_FEATURE_FLAGS> = v1;
return;
}
}