public class com.fasterxml.jackson.dataformat.yaml.YAMLGenerator extends com.fasterxml.jackson.core.base.GeneratorBase
{
protected static final long MIN_INT_AS_LONG;
protected static final long MAX_INT_AS_LONG;
protected static final java.util.regex.Pattern PLAIN_NUMBER_P;
protected static final java.lang.String TAG_BINARY;
protected final com.fasterxml.jackson.core.io.IOContext _ioContext;
protected int _formatFeatures;
protected java.io.Writer _writer;
protected org.yaml.snakeyaml.DumperOptions _outputOptions;
protected final org.yaml.snakeyaml.DumperOptions$Version _docVersion;
private static final org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_UNQUOTED_NAME;
private static final org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR;
private static final org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_QUOTED;
private static final org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_LITERAL;
private static final org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_BASE64;
private static final org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_PLAIN;
protected org.yaml.snakeyaml.emitter.Emitter _emitter;
protected java.lang.String _objectId;
protected java.lang.String _typeId;
protected int _rootValueCount;
protected final com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker;
private static final org.yaml.snakeyaml.events.ImplicitTuple NO_TAGS;
private static final org.yaml.snakeyaml.events.ImplicitTuple EXPLICIT_TAGS;
public void <init>(com.fasterxml.jackson.core.io.IOContext, int, int, com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer, org.yaml.snakeyaml.DumperOptions$Version) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$Version v7;
com.fasterxml.jackson.core.ObjectCodec v5;
org.yaml.snakeyaml.DumperOptions v12, v9;
org.yaml.snakeyaml.emitter.Emitter v10;
com.fasterxml.jackson.core.io.IOContext v1;
int v2, v3;
java.io.Writer v11, v6;
org.yaml.snakeyaml.events.StreamStartEvent v13;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v4, v8;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker;
v5 := @parameter4: com.fasterxml.jackson.core.ObjectCodec;
v6 := @parameter5: java.io.Writer;
v7 := @parameter6: org.yaml.snakeyaml.DumperOptions$Version;
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void <init>(int,com.fasterxml.jackson.core.ObjectCodec)>(v2, v5);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext> = v1;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures> = v3;
if v4 != null goto label1;
v8 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default instance()>();
goto label2;
label1:
v8 = v4;
label2:
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker> = v8;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer> = v6;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$Version _docVersion> = v7;
v9 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions buildDumperOptions(int,int,org.yaml.snakeyaml.DumperOptions$Version)>(v2, v3, v7);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions> = v9;
v10 = new org.yaml.snakeyaml.emitter.Emitter;
v11 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
v12 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions>;
specialinvoke v10.<org.yaml.snakeyaml.emitter.Emitter: void <init>(java.io.Writer,org.yaml.snakeyaml.DumperOptions)>(v11, v12);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.emitter.Emitter _emitter> = v10;
v13 = new org.yaml.snakeyaml.events.StreamStartEvent;
specialinvoke v13.<org.yaml.snakeyaml.events.StreamStartEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(null, null);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v13);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emitStartDocument()>();
return;
}
public void <init>(com.fasterxml.jackson.core.io.IOContext, int, int, com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer, org.yaml.snakeyaml.DumperOptions) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$Version v9;
com.fasterxml.jackson.core.ObjectCodec v5;
org.yaml.snakeyaml.DumperOptions v12, v7;
org.yaml.snakeyaml.emitter.Emitter v10;
com.fasterxml.jackson.core.io.IOContext v1;
int v2, v3;
java.io.Writer v11, v6;
org.yaml.snakeyaml.events.StreamStartEvent v13;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v4, v8;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker;
v5 := @parameter4: com.fasterxml.jackson.core.ObjectCodec;
v6 := @parameter5: java.io.Writer;
v7 := @parameter6: org.yaml.snakeyaml.DumperOptions;
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void <init>(int,com.fasterxml.jackson.core.ObjectCodec)>(v2, v5);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext> = v1;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures> = v3;
if v4 != null goto label1;
v8 = staticinvoke <com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker$Default instance()>();
goto label2;
label1:
v8 = v4;
label2:
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker> = v8;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer> = v6;
v9 = virtualinvoke v7.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$Version getVersion()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$Version _docVersion> = v9;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions> = v7;
v10 = new org.yaml.snakeyaml.emitter.Emitter;
v11 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
v12 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions>;
specialinvoke v10.<org.yaml.snakeyaml.emitter.Emitter: void <init>(java.io.Writer,org.yaml.snakeyaml.DumperOptions)>(v11, v12);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.emitter.Emitter _emitter> = v10;
v13 = new org.yaml.snakeyaml.events.StreamStartEvent;
specialinvoke v13.<org.yaml.snakeyaml.events.StreamStartEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(null, null);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v13);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emitStartDocument()>();
return;
}
public void <init>(com.fasterxml.jackson.core.io.IOContext, int, int, com.fasterxml.jackson.core.ObjectCodec, java.io.Writer, org.yaml.snakeyaml.DumperOptions$Version) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.io.IOContext v1;
int v2, v3;
java.io.Writer v5;
org.yaml.snakeyaml.DumperOptions$Version v6;
com.fasterxml.jackson.core.ObjectCodec v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.ObjectCodec;
v5 := @parameter4: java.io.Writer;
v6 := @parameter5: org.yaml.snakeyaml.DumperOptions$Version;
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void <init>(com.fasterxml.jackson.core.io.IOContext,int,int,com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker,com.fasterxml.jackson.core.ObjectCodec,java.io.Writer,org.yaml.snakeyaml.DumperOptions$Version)>(v1, v2, v3, null, v4, v5, v6);
return;
}
protected org.yaml.snakeyaml.DumperOptions buildDumperOptions(int, int, org.yaml.snakeyaml.DumperOptions$Version)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$FlowStyle v8;
org.yaml.snakeyaml.DumperOptions v4;
int v1, v10, v13, v16, v19, v2, v23, v6;
boolean v11, v14, v17, v20, v24, v7;
org.yaml.snakeyaml.DumperOptions$LineBreak v21;
org.yaml.snakeyaml.DumperOptions$Version v3;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v12, v15, v18, v22, v5, v9;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: org.yaml.snakeyaml.DumperOptions$Version;
v4 = new org.yaml.snakeyaml.DumperOptions;
specialinvoke v4.<org.yaml.snakeyaml.DumperOptions: void <init>()>();
v5 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature CANONICAL_OUTPUT>;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v7 = virtualinvoke v5.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v6);
if v7 == 0 goto label1;
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setCanonical(boolean)>(1);
goto label2;
label1:
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setCanonical(boolean)>(0);
v8 = <org.yaml.snakeyaml.DumperOptions$FlowStyle: org.yaml.snakeyaml.DumperOptions$FlowStyle BLOCK>;
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle)>(v8);
label2:
v9 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature SPLIT_LINES>;
v10 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v11 = virtualinvoke v9.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v10);
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setSplitLines(boolean)>(v11);
v12 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS>;
v13 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v14 = virtualinvoke v12.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v13);
if v14 == 0 goto label3;
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setIndicatorIndent(int)>(1);
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setIndent(int)>(2);
label3:
v15 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature INDENT_ARRAYS_WITH_INDICATOR>;
v16 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v17 = virtualinvoke v15.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v16);
if v17 == 0 goto label4;
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setIndicatorIndent(int)>(2);
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setIndentWithIndicator(boolean)>(1);
label4:
v18 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_PLATFORM_LINE_BREAKS>;
v19 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v20 = virtualinvoke v18.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v19);
if v20 == 0 goto label5;
v21 = staticinvoke <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak getPlatformLineBreak()>();
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setLineBreak(org.yaml.snakeyaml.DumperOptions$LineBreak)>(v21);
label5:
v22 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALLOW_LONG_KEYS>;
v23 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v24 = virtualinvoke v22.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v23);
if v24 == 0 goto label6;
virtualinvoke v4.<org.yaml.snakeyaml.DumperOptions: void setMaxSimpleKeyLength(int)>(1024);
label6:
return v4;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.core.Version v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = <com.fasterxml.jackson.dataformat.yaml.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator useDefaultPrettyPrinter()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.PrettyPrinter v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.PrettyPrinter;
return v0;
}
public java.lang.Object getOutputTarget()
{
java.io.Writer v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
return v1;
}
public int getOutputBuffered()
{
int v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = (int) -1;
return v1;
}
public int getFormatFeatures()
{
int v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
return v1;
}
public com.fasterxml.jackson.core.JsonGenerator overrideFormatFeatures(int, int)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v1, v2, v3, v4, v5, v6, v7, v8;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v4 = (int) -1;
v5 = v2 ^ v4;
v6 = v3 & v5;
v7 = v1 & v2;
v8 = v6 | v7;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures> = v8;
return v0;
}
public boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema)
{
com.fasterxml.jackson.core.FormatSchema v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.FormatSchema;
return 0;
}
public boolean canWriteFormattedNumbers()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
return 1;
}
public com.fasterxml.jackson.core.util.JacksonFeatureSet getWriteCapabilities()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.util.JacksonFeatureSet v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.util.JacksonFeatureSet DEFAULT_TEXTUAL_WRITE_CAPABILITIES>;
return v1;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator enable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3, v4;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v4 = v2 | v3;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures> = v4;
return v0;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator disable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3, v4, v5, v6;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures> = v6;
return v0;
}
public final boolean isEnabled(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3, v4;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: int getMask()>();
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public com.fasterxml.jackson.dataformat.yaml.YAMLGenerator configure(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature, boolean)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator enable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)>(v1);
goto label2;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator disable(com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature)>(v1);
label2:
return v0;
}
public final void writeFieldName(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v1);
if v3 != 4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");
label1:
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeFieldName(java.lang.String)>(v1);
return;
}
public final void writeFieldName(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.SerializableString v1;
int v4;
java.lang.String v3, v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v3);
if v4 != 4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportError(java.lang.String)>("Can not write a field name, expecting a value");
label1:
v5 = interfaceinvoke v1.<com.fasterxml.jackson.core.SerializableString: java.lang.String getValue()>();
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeFieldName(java.lang.String)>(v5);
return;
}
public void writeFieldId(long) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v4;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.Long v2;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v6;
int v5;
long v1;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: long;
v2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v1);
v3 = virtualinvoke v2.<java.lang.Long: java.lang.String toString()>();
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeFieldName(java.lang.String)>(v3);
if v5 != 4 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportError(java.lang.String)>("Can not write a field id, expecting a value");
label1:
v6 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v3, "int", v6);
return;
}
private final void _writeFieldName(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v4;
java.lang.String v1;
boolean v3;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker: boolean needToQuoteName(java.lang.String)>(v1);
if v3 == 0 goto label1;
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_QUOTED>;
goto label2;
label1:
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_UNQUOTED_NAME>;
label2:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v1, "string", v4);
return;
}
public final void flush() throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
java.io.Writer v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v1);
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
virtualinvoke v3.<java.io.Writer: void flush()>();
label1:
return;
}
public void close() throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v6, v9;
com.fasterxml.jackson.core.io.IOContext v4;
java.io.Writer v11, v3, v8;
org.yaml.snakeyaml.events.StreamEndEvent v2;
boolean v1, v10, v5, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: boolean isClosed()>();
if v1 != 0 goto label3;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emitEndDocument()>();
v2 = new org.yaml.snakeyaml.events.StreamEndEvent;
specialinvoke v2.<org.yaml.snakeyaml.events.StreamEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(null, null);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v2);
specialinvoke v0.<com.fasterxml.jackson.core.base.GeneratorBase: void close()>();
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
if v3 == null goto label3;
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.io.IOContext _ioContext>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.io.IOContext: boolean isResourceManaged()>();
if v5 != 0 goto label1;
v6 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature AUTO_CLOSE_TARGET>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v6);
if v7 == 0 goto label2;
label1:
v8 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
virtualinvoke v8.<java.io.Writer: void close()>();
goto label3;
label2:
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature FLUSH_PASSED_TO_STREAM>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v9);
if v10 == 0 goto label3;
v11 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.io.Writer _writer>;
virtualinvoke v11.<java.io.Writer: void flush()>();
label3:
return;
}
public final void writeStartArray() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v2;
org.yaml.snakeyaml.events.SequenceStartEvent v9;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$FlowStyle v4;
org.yaml.snakeyaml.DumperOptions v3;
java.lang.String v5, v8;
boolean v6, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("start an array");
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildArrayContext()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v2;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions>;
v4 = virtualinvoke v3.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle()>();
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId>;
if v5 != null goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
v7 = v6;
v8 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId>;
if v8 == null goto label3;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId> = null;
label3:
v9 = new org.yaml.snakeyaml.events.SequenceStartEvent;
specialinvoke v9.<org.yaml.snakeyaml.events.SequenceStartEvent: void <init>(java.lang.String,java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.DumperOptions$FlowStyle)>(v8, v5, v7, null, null, v4);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v9);
return;
}
public final void writeEndArray() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v3, v6, v7;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.events.SequenceEndEvent v8;
java.lang.String v4, v5;
boolean v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inArray()>();
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Current context not Array but \u0001");
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportError(java.lang.String)>(v5);
label1:
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId> = null;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v7;
v8 = new org.yaml.snakeyaml.events.SequenceEndEvent;
specialinvoke v8.<org.yaml.snakeyaml.events.SequenceEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(null, null);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v8);
return;
}
public final void writeStartObject() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$FlowStyle v4;
org.yaml.snakeyaml.DumperOptions v3;
org.yaml.snakeyaml.events.MappingStartEvent v9;
java.lang.String v5, v8;
boolean v6, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("start an object");
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext createChildObjectContext()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v2;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions>;
v4 = virtualinvoke v3.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle()>();
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId>;
if v5 != null goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
v7 = v6;
v8 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId>;
if v8 == null goto label3;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId> = null;
label3:
v9 = new org.yaml.snakeyaml.events.MappingStartEvent;
specialinvoke v9.<org.yaml.snakeyaml.events.MappingStartEvent: void <init>(java.lang.String,java.lang.String,boolean,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.DumperOptions$FlowStyle)>(v8, v5, v7, null, null, v4);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v9);
return;
}
public final void writeEndObject() throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v1, v3, v6, v7;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.events.MappingEndEvent v8;
java.lang.String v4, v5;
boolean v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inObject()>();
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.json.JsonWriteContext: java.lang.String typeDesc()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Current context not Object but \u0001");
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportError(java.lang.String)>(v5);
label1:
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId> = null;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.core.json.JsonWriteContext: com.fasterxml.jackson.core.json.JsonWriteContext getParent()>();
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext> = v7;
v8 = new org.yaml.snakeyaml.events.MappingEndEvent;
specialinvoke v8.<org.yaml.snakeyaml.events.MappingEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(null, null);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v8);
return;
}
public void writeString(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3, v8;
java.util.regex.Matcher v15;
int v12, v18, v20, v5, v7;
java.lang.String v1;
boolean v10, v13, v16, v19, v2, v6;
com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker v9;
java.util.regex.Pattern v14;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v11, v17, v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeNull()>();
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write String value");
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label2;
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_QUOTED>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v1, "string", v3);
return;
label2:
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature MINIMIZE_QUOTES>;
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v5);
if v6 == 0 goto label6;
v7 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(10);
if v7 < 0 goto label3;
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_LITERAL>;
goto label8;
label3:
v9 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker _quotingChecker>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.dataformat.yaml.util.StringQuotingChecker: boolean needToQuoteValue(java.lang.String)>(v1);
if v10 != 0 goto label4;
v11 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature ALWAYS_QUOTE_NUMBERS_AS_STRINGS>;
v12 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v13 = virtualinvoke v11.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v12);
if v13 == 0 goto label5;
v14 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.util.regex.Pattern PLAIN_NUMBER_P>;
v15 = virtualinvoke v14.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v1);
v16 = virtualinvoke v15.<java.util.regex.Matcher: boolean matches()>();
if v16 == 0 goto label5;
label4:
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_QUOTED>;
goto label8;
label5:
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_PLAIN>;
goto label8;
label6:
v17 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature LITERAL_BLOCK_STYLE>;
v18 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v19 = virtualinvoke v17.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v18);
if v19 == 0 goto label7;
v20 = virtualinvoke v1.<java.lang.String: int indexOf(int)>(10);
if v20 < 0 goto label7;
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_LITERAL>;
goto label8;
label7:
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_QUOTED>;
label8:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v1, "string", v8);
return;
}
public void writeString(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
char[] v1;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = new java.lang.String;
specialinvoke v4.<java.lang.String: void <init>(char[],int,int)>(v1, v2, v3);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeString(java.lang.String)>(v4);
return;
}
public final void writeString(com.fasterxml.jackson.core.SerializableString) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.String v2;
com.fasterxml.jackson.core.SerializableString v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.SerializableString;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeString(java.lang.String)>(v2);
return;
}
public void writeRawUTF8String(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public final void writeUTF8String(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = new java.lang.String;
specialinvoke v4.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(v1, v2, v3, "UTF-8");
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeString(java.lang.String)>(v4);
return;
}
public void writeRaw(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(java.lang.String, int, int) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
char[] v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRaw(char) throws java.io.IOException
{
char v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: char;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRawValue(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRawValue(java.lang.String, int, int) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeRawValue(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2, v3;
char[] v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportUnsupportedOperation()>();
return;
}
public void writeBinary(com.fasterxml.jackson.core.Base64Variant, byte[], int, int) throws java.io.IOException
{
byte[] v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.Base64Variant v1;
int v3, v4, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
if v2 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeNull()>();
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write Binary value");
if v3 > 0 goto label2;
v5 = v3 + v4;
v6 = lengthof v2;
if v5 == v6 goto label3;
label2:
v7 = v3 + v4;
v2 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(v2, v3, v7);
label3:
specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalarBinary(com.fasterxml.jackson.core.Base64Variant,byte[])>(v1, v2);
return;
}
public void writeBoolean(boolean) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3;
java.lang.String v2;
boolean v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: boolean;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write boolean value");
if v1 == 0 goto label1;
v2 = "true";
goto label2;
label1:
v2 = "false";
label2:
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v2, "bool", v3);
return;
}
public void writeNumber(int) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3;
int v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: int;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v1);
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v2, "int", v3);
return;
}
public void writeNumber(long) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
byte v2, v3;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v5;
long v1;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: long;
v2 = v1 cmp 2147483647L;
if v2 > 0 goto label1;
v3 = v1 cmp -2147483648L;
if v3 < 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeNumber(int)>(v1);
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v4 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(v1);
v5 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v4, "long", v5);
return;
}
public void writeNumber(java.math.BigInteger) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v4;
java.math.BigInteger v1;
java.lang.String v2, v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.math.BigInteger;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeNull()>();
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v2 = virtualinvoke v1.<java.math.BigInteger: java.lang.String toString()>();
v3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
v4 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v3, "java.math.BigInteger", v4);
return;
}
public void writeNumber(double) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3;
java.lang.String v2;
double v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: double;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(double)>(v1);
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v2, "double", v3);
return;
}
public void writeNumber(float) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3;
float v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: float;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(float)>(v1);
v3 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v2, "float", v3);
return;
}
public void writeNumber(java.math.BigDecimal) throws java.io.IOException
{
java.math.BigDecimal v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v2;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v5;
java.lang.String v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.math.BigDecimal;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeNull()>();
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v2 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_BIGDECIMAL_AS_PLAIN>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v2);
if v3 == 0 goto label2;
v4 = virtualinvoke v1.<java.math.BigDecimal: java.lang.String toPlainString()>();
goto label3;
label2:
v4 = virtualinvoke v1.<java.math.BigDecimal: java.lang.String toString()>();
label3:
v5 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v4, "java.math.BigDecimal", v5);
return;
}
public void writeNumber(java.lang.String) throws java.io.IOException, com.fasterxml.jackson.core.JsonGenerationException, java.lang.UnsupportedOperationException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.String v1;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void writeNull()>();
return;
label1:
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write number");
v2 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v1, "number", v2);
return;
}
public void writeNull() throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write null value");
v1 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR>;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _writeScalar(java.lang.String,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>("null", "object", v1);
return;
}
public boolean canWriteObjectId()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_OBJECT_ID>;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v2);
return v3;
}
public boolean canWriteTypeId()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature USE_NATIVE_TYPE_ID>;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v2);
return v3;
}
public void writeTypeId(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v1);
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId> = v2;
return;
}
public void writeObjectRef(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.Object v1;
org.yaml.snakeyaml.events.AliasEvent v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _verifyValueWrite(java.lang.String)>("write Object reference");
v2 = new org.yaml.snakeyaml.events.AliasEvent;
v3 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v1);
specialinvoke v2.<org.yaml.snakeyaml.events.AliasEvent: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v3, null, null);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v2);
return;
}
public void writeObjectId(java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.lang.Object v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v1);
label2:
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId> = v2;
return;
}
protected final void _verifyValueWrite(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.json.JsonWriteContext v2, v5, v7;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
int v3, v8;
java.lang.String v1, v4;
boolean v6;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteContext: int writeValue()>();
if v3 != 5 goto label1;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Can not \u0001, expecting field name");
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _reportError(java.lang.String)>(v4);
label1:
v5 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.json.JsonWriteContext: boolean inRoot()>();
if v6 == 0 goto label2;
v7 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: com.fasterxml.jackson.core.json.JsonWriteContext _writeContext>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.json.JsonWriteContext: int getCurrentIndex()>();
if v8 <= 0 goto label2;
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emitEndDocument()>();
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emitStartDocument()>();
label2:
return;
}
protected void _releaseBuffers()
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
return;
}
protected void _writeScalar(java.lang.String, java.lang.String, org.yaml.snakeyaml.DumperOptions$ScalarStyle) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3;
java.lang.String v1, v2;
org.yaml.snakeyaml.events.ScalarEvent v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.yaml.snakeyaml.DumperOptions$ScalarStyle;
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.events.ScalarEvent _scalarEvent(java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v1, v3);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v4);
return;
}
private void _writeScalarBinary(com.fasterxml.jackson.core.Base64Variant, byte[]) throws java.io.IOException
{
byte[] v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v9;
org.yaml.snakeyaml.events.ImplicitTuple v8;
com.fasterxml.jackson.core.Base64Variant v1, v3;
java.lang.String v4, v5, v7;
org.yaml.snakeyaml.events.ScalarEvent v6;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: byte[];
v3 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();
if v1 != v3 goto label1;
v1 = <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant MIME>;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _lf()>();
v5 = specialinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _base64encode(com.fasterxml.jackson.core.Base64Variant,byte[],java.lang.String)>(v1, v2, v4);
v6 = new org.yaml.snakeyaml.events.ScalarEvent;
v7 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String TAG_BINARY>;
v8 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.events.ImplicitTuple EXPLICIT_TAGS>;
v9 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_BASE64>;
specialinvoke v6.<org.yaml.snakeyaml.events.ScalarEvent: void <init>(java.lang.String,java.lang.String,org.yaml.snakeyaml.events.ImplicitTuple,java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(null, v7, v8, v5, null, null, v9);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v6);
return;
}
protected org.yaml.snakeyaml.events.ScalarEvent _scalarEvent(java.lang.String, org.yaml.snakeyaml.DumperOptions$ScalarStyle)
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v2;
java.lang.String v1, v3, v4;
org.yaml.snakeyaml.events.ImplicitTuple v6;
org.yaml.snakeyaml.events.ScalarEvent v5;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.yaml.snakeyaml.DumperOptions$ScalarStyle;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId>;
if v3 == null goto label1;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _typeId> = null;
label1:
v4 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId>;
if v4 == null goto label2;
v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String _objectId> = null;
label2:
v5 = new org.yaml.snakeyaml.events.ScalarEvent;
v6 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.events.ImplicitTuple NO_TAGS>;
specialinvoke v5.<org.yaml.snakeyaml.events.ScalarEvent: void <init>(java.lang.String,java.lang.String,org.yaml.snakeyaml.events.ImplicitTuple,java.lang.String,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v4, v3, v6, v1, null, null, v2);
return v5;
}
private java.lang.String _base64encode(com.fasterxml.jackson.core.Base64Variant, byte[], java.lang.String)
{
byte[] v2;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
byte v15, v18, v22, v28, v30;
com.fasterxml.jackson.core.Base64Variant v1;
java.lang.StringBuilder v5;
short v19, v23, v31;
int v10, v11, v12, v13, v14, v16, v17, v20, v21, v24, v25, v26, v27, v29, v32, v4, v6, v7, v8, v9;
java.lang.String v3, v33;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 := @parameter1: byte[];
v3 := @parameter2: java.lang.String;
v4 = lengthof v2;
v5 = new java.lang.StringBuilder;
v6 = v4 >> 2;
v7 = v4 + v6;
v8 = v4 >> 3;
v9 = v7 + v8;
specialinvoke v5.<java.lang.StringBuilder: void <init>(int)>(v9);
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v11 = v10 >> 2;
v12 = 0;
v13 = v4 - 3;
label1:
if v12 > v13 goto label2;
v14 = v12 + 1;
v15 = v2[v12];
v16 = v15 << 8;
v17 = v14 + 1;
v18 = v2[v14];
v19 = v18 & 255;
v20 = v16 | v19;
v21 = v20 << 8;
v12 = v17 + 1;
v22 = v2[v17];
v23 = v22 & 255;
v24 = v21 | v23;
virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: void encodeBase64Chunk(java.lang.StringBuilder,int)>(v5, v24);
v11 = v11 - 1;
if v11 > 0 goto label1;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
v25 = virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: int getMaxLineLength()>();
v11 = v25 >> 2;
goto label1;
label2:
v26 = v4 - v12;
if v26 <= 0 goto label4;
v27 = v12 + 1;
v28 = v2[v12];
v29 = v28 << 16;
if v26 != 2 goto label3;
v30 = v2[v27];
v31 = v30 & 255;
v32 = v31 << 8;
v29 = v29 | v32;
label3:
virtualinvoke v1.<com.fasterxml.jackson.core.Base64Variant: void encodeBase64Partial(java.lang.StringBuilder,int,int)>(v5, v29, v26);
label4:
v33 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
return v33;
}
protected java.lang.String _lf()
{
org.yaml.snakeyaml.DumperOptions v1;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.DumperOptions$LineBreak v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions _outputOptions>;
v2 = virtualinvoke v1.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$LineBreak getLineBreak()>();
v3 = virtualinvoke v2.<org.yaml.snakeyaml.DumperOptions$LineBreak: java.lang.String getString()>();
return v3;
}
protected void _emitStartDocument() throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
java.util.Map v1;
org.yaml.snakeyaml.events.DocumentStartEvent v5;
int v3;
org.yaml.snakeyaml.DumperOptions$Version v6;
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature v2;
boolean v4;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v2 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature WRITE_DOC_START_MARKER>;
v3 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: int _formatFeatures>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator$Feature: boolean enabledIn(int)>(v3);
v5 = new org.yaml.snakeyaml.events.DocumentStartEvent;
v6 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$Version _docVersion>;
specialinvoke v5.<org.yaml.snakeyaml.events.DocumentStartEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean,org.yaml.snakeyaml.DumperOptions$Version,java.util.Map)>(null, null, v4, v6, v1);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v5);
return;
}
protected void _emitEndDocument() throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.events.DocumentEndEvent v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 = new org.yaml.snakeyaml.events.DocumentEndEvent;
specialinvoke v1.<org.yaml.snakeyaml.events.DocumentEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean)>(null, null, 0);
virtualinvoke v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: void _emit(org.yaml.snakeyaml.events.Event)>(v1);
return;
}
protected final void _emit(org.yaml.snakeyaml.events.Event) throws java.io.IOException
{
com.fasterxml.jackson.dataformat.yaml.YAMLGenerator v0;
org.yaml.snakeyaml.emitter.Emitter v2;
org.yaml.snakeyaml.events.Event v1;
v0 := @this: com.fasterxml.jackson.dataformat.yaml.YAMLGenerator;
v1 := @parameter0: org.yaml.snakeyaml.events.Event;
v2 = v0.<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.emitter.Emitter _emitter>;
virtualinvoke v2.<org.yaml.snakeyaml.emitter.Emitter: void emit(org.yaml.snakeyaml.events.Event)>(v1);
return;
}
static void <clinit>()
{
org.yaml.snakeyaml.DumperOptions$ScalarStyle v3, v4, v5, v6, v7, v8;
org.yaml.snakeyaml.nodes.Tag v1;
org.yaml.snakeyaml.events.ImplicitTuple v10, v9;
java.lang.String v2;
java.util.regex.Pattern v0;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[+-]?[0-9]*(\\.[0-9]*)?");
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.util.regex.Pattern PLAIN_NUMBER_P> = v0;
v1 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag BINARY>;
v2 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Tag: java.lang.String toString()>();
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: java.lang.String TAG_BINARY> = v2;
v3 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_UNQUOTED_NAME> = v3;
v4 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_SCALAR> = v4;
v5 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle DOUBLE_QUOTED>;
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_QUOTED> = v5;
v6 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle LITERAL>;
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_LITERAL> = v6;
v7 = <com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_LITERAL>;
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_BASE64> = v7;
v8 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.DumperOptions$ScalarStyle STYLE_PLAIN> = v8;
v9 = new org.yaml.snakeyaml.events.ImplicitTuple;
specialinvoke v9.<org.yaml.snakeyaml.events.ImplicitTuple: void <init>(boolean,boolean)>(1, 1);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.events.ImplicitTuple NO_TAGS> = v9;
v10 = new org.yaml.snakeyaml.events.ImplicitTuple;
specialinvoke v10.<org.yaml.snakeyaml.events.ImplicitTuple: void <init>(boolean,boolean)>(0, 0);
<com.fasterxml.jackson.dataformat.yaml.YAMLGenerator: org.yaml.snakeyaml.events.ImplicitTuple EXPLICIT_TAGS> = v10;
return;
}
}