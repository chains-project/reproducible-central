public class com.fasterxml.jackson.datatype.jdk8.Jdk8BeanSerializerModifier extends com.fasterxml.jackson.databind.ser.BeanSerializerModifier
{
public void <init>()
{
com.fasterxml.jackson.datatype.jdk8.Jdk8BeanSerializerModifier v0;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.Jdk8BeanSerializerModifier;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: void <init>()>();
return;
}
public java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
{
com.fasterxml.jackson.datatype.jdk8.Jdk8OptionalBeanPropertyWriter v13;
com.fasterxml.jackson.databind.SerializationConfig v1;
java.util.List v3;
com.fasterxml.jackson.datatype.jdk8.Jdk8BeanSerializerModifier v0;
int v4, v5;
com.fasterxml.jackson.databind.BeanDescription v2;
java.lang.Object v6, v9;
com.fasterxml.jackson.databind.JavaType v7;
boolean v10, v11, v12, v8;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.Jdk8BeanSerializerModifier;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.List;
v4 = 0;
label1:
v5 = interfaceinvoke v3.<java.util.List: int size()>();
if v4 >= v5 goto label7;
v6 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v4);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Ljava/util/Optional;");
if v8 == 0 goto label2;
v9 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
goto label5;
label2:
v10 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/util/OptionalLong;");
if v10 == 0 goto label3;
v9 = staticinvoke <java.util.OptionalLong: java.util.OptionalLong empty()>();
goto label5;
label3:
v11 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/util/OptionalInt;");
if v11 == 0 goto label4;
v9 = staticinvoke <java.util.OptionalInt: java.util.OptionalInt empty()>();
goto label5;
label4:
v12 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(class "Ljava/util/OptionalDouble;");
if v12 == 0 goto label6;
v9 = staticinvoke <java.util.OptionalDouble: java.util.OptionalDouble empty()>();
label5:
v13 = new com.fasterxml.jackson.datatype.jdk8.Jdk8OptionalBeanPropertyWriter;
specialinvoke v13.<com.fasterxml.jackson.datatype.jdk8.Jdk8OptionalBeanPropertyWriter: void <init>(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Object)>(v6, v9);
interfaceinvoke v3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v4, v13);
label6:
v4 = v4 + 1;
goto label1;
label7:
return v3;
}
}