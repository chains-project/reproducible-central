public class com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer extends com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase
{
private static final long serialVersionUID;
private static final java.time.format.DateTimeFormatter DEFAULT_FORMATTER;
public static final com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 = <com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER>;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return;
}
public void <init>(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(class "Ljava/time/LocalTime;", v1);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer, java.lang.Boolean)
{
java.lang.Boolean v2;
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v2 := @parameter1: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.JSR310DateTimeDeserializerBase,java.lang.Boolean)>(v1, v2);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer withDateFormat(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0, v2;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: void <init>(java.time.format.DateTimeFormatter)>(v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer withLeniency(java.lang.Boolean)
{
java.lang.Boolean v1;
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0, v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: java.lang.Boolean;
v2 = new com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
specialinvoke v2.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: void <init>(com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer,java.lang.Boolean)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer withShape(com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v1;
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
return v0;
}
public java.time.LocalTime deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v14, v31;
java.time.LocalTime v10, v18, v26, v6;
boolean v11, v15, v32, v4, v41, v44, v7;
com.fasterxml.jackson.databind.JsonMappingException v37;
java.lang.Object[] v39, v45;
int v22, v23, v27, v30;
com.fasterxml.jackson.core.JsonToken v12, v13, v16, v17, v19, v20, v21, v24, v25, v28, v29, v3, v33, v34, v36, v40, v43;
java.lang.String v5, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0;
java.lang.Class v35, v38, v8;
java.lang.Object v42, v46;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label01;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.LocalTime _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v5);
return v6;
label01:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartObjectToken()>();
if v7 == 0 goto label02;
v8 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.lang.Class handledType()>();
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v8);
v10 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.LocalTime _fromString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v9);
return v10;
label02:
v11 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v11 == 0 goto label13;
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v12 != v13 goto label03;
return null;
label03:
v14 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature UNWRAP_SINGLE_VALUE_ARRAYS>;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v14);
if v15 == 0 goto label06;
v16 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v12 == v16 goto label04;
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v12 != v17 goto label06;
label04:
v18 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.LocalTime deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v20 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v19 == v20 goto label05;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: void handleMissingEndArrayForSingle(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label05:
return v18;
label06:
v21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v12 != v21 goto label12;
v22 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v24 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v25 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v24 != v25 goto label07;
v26 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int)>(v22, v23);
goto label11;
label07:
v27 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v29 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v28 != v29 goto label08;
v26 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int,int)>(v22, v23, v27);
goto label11;
label08:
v30 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int getIntValue()>();
if v30 >= 1000 goto label09;
v31 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature READ_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v32 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v31);
if v32 != 0 goto label09;
v30 = v30 * 1000000;
label09:
v33 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v34 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v33 == v34 goto label10;
v35 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.lang.Class handledType()>();
v36 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
v37 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException wrongTokenException(com.fasterxml.jackson.core.JsonParser,java.lang.Class,com.fasterxml.jackson.core.JsonToken,java.lang.String)>(v1, v35, v36, "Expected array to end");
throw v37;
label10:
v26 = staticinvoke <java.time.LocalTime: java.time.LocalTime of(int,int,int,int)>(v22, v23, v27, v30);
label11:
return v26;
label12:
v38 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.lang.Class handledType()>();
v39 = newarray (java.lang.Object)[1];
v39[0] = v12;
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportInputMismatch(java.lang.Class,java.lang.String,java.lang.Object[])>(v38, "Unexpected token (%s) within Array, expected VALUE_NUMBER_INT", v39);
label13:
v40 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v41 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v40);
if v41 == 0 goto label14;
v42 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v42;
label14:
v43 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v44 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v43);
if v44 == 0 goto label15;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: void _throwNoNumericTimestampNeedTimeZone(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label15:
v45 = newarray (java.lang.Object)[0];
v46 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.lang.Object _handleUnexpectedToken(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object[])>(v2, v1, "Expected array or string.", v45);
return v46;
}
protected java.time.LocalTime _fromString(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v0;
java.time.format.DateTimeFormatter v10, v7, v8;
int v5;
java.time.LocalTime v11, v12;
java.lang.Object v14, v6;
java.lang.String v3, v4;
java.time.DateTimeException v13;
boolean v9;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v3.<java.lang.String: java.lang.String trim()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.lang.Object _fromEmptyString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v4);
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.format.DateTimeFormatter _formatter>;
label2:
v8 = <com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER>;
if v7 != v8 goto label4;
v9 = virtualinvoke v4.<java.lang.String: boolean contains(java.lang.CharSequence)>("T");
if v9 == 0 goto label4;
v10 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_LOCAL_DATE_TIME>;
v11 = staticinvoke <java.time.LocalTime: java.time.LocalTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v4, v10);
label3:
return v11;
label4:
v12 = staticinvoke <java.time.LocalTime: java.time.LocalTime parse(java.lang.CharSequence,java.time.format.DateTimeFormatter)>(v4, v7);
label5:
return v12;
label6:
v13 := @caughtexception;
v14 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.lang.Object _handleDateTimeException(com.fasterxml.jackson.databind.DeserializationContext,java.time.DateTimeException,java.lang.String)>(v2, v13, v4);
return v14;
catch java.time.DateTimeException from label2 to label3 with label6;
catch java.time.DateTimeException from label4 to label5 with label6;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer v1;
java.time.format.DateTimeFormatter v0;
v0 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_LOCAL_TIME>;
<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER> = v0;
v1 = new com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer;
specialinvoke v1.<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer: com.fasterxml.jackson.datatype.jsr310.deser.LocalTimeDeserializer INSTANCE> = v1;
return;
}
}