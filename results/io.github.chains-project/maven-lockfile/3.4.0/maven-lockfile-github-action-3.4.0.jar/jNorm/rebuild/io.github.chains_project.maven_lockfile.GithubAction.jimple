public class io.github.chains_project.maven_lockfile.GithubAction extends java.lang.Object
{
java.lang.String version;
private static final java.lang.String COMMAND_GENERATE;
private static final java.lang.String COMMAND_VALIDATE;
public void <init>()
{
io.github.chains_project.maven_lockfile.GithubAction v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
void run(io.quarkiverse.githubaction.Inputs, io.quarkiverse.githubaction.Commands, io.quarkiverse.githubaction.Context)
{
io.quarkiverse.githubaction.Inputs v1;
io.quarkiverse.githubaction.Context v3;
io.quarkiverse.githubaction.Commands v2;
java.lang.Boolean v5;
java.util.Optional v4;
java.lang.Object v6;
java.lang.String v8;
io.github.chains_project.maven_lockfile.GithubAction v0;
boolean v7, v9;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction;
v1 := @parameter0: io.quarkiverse.githubaction.Inputs;
v2 := @parameter1: io.quarkiverse.githubaction.Commands;
v3 := @parameter2: io.quarkiverse.githubaction.Context;
v4 = interfaceinvoke v1.<io.quarkiverse.githubaction.Inputs: java.util.Optional getBoolean(java.lang.String)>("include-maven-plugins");
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v6 = virtualinvoke v4.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v5);
v7 = virtualinvoke v6.<java.lang.Boolean: boolean booleanValue()>();
v8 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("POM_CHANGED");
v9 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(v8);
if v9 == 0 goto label1;
interfaceinvoke v2.<io.quarkiverse.githubaction.Commands: void group(java.lang.String)>("maven-lockfile");
interfaceinvoke v2.<io.quarkiverse.githubaction.Commands: void notice(java.lang.String)>("Pom file changed, running lockfile generation");
interfaceinvoke v2.<io.quarkiverse.githubaction.Commands: void endGroup()>();
virtualinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction: void generateLockFile(io.quarkiverse.githubaction.Commands,boolean)>(v2, v7);
goto label2;
label1:
interfaceinvoke v2.<io.quarkiverse.githubaction.Commands: void group(java.lang.String)>("maven-lockfile");
interfaceinvoke v2.<io.quarkiverse.githubaction.Commands: void notice(java.lang.String)>("Pom file not changed, running lockfile validation");
interfaceinvoke v2.<io.quarkiverse.githubaction.Commands: void endGroup()>();
virtualinvoke v0.<io.github.chains_project.maven_lockfile.GithubAction: void validateLockFile(io.quarkiverse.githubaction.Commands,boolean)>(v2, v7);
label2:
return;
}
void generateLockFile(io.quarkiverse.githubaction.Commands, boolean)
{
java.lang.Object[] v15, v4;
org.buildobjects.process.ProcBuilder v10, v12, v13, v16, v7;
java.lang.String[] v14, v8;
java.util.ArrayList v3;
int v18;
java.lang.String v19, v20, v22, v23, v24, v25, v5, v6;
boolean v2;
java.io.PrintStream v11, v9;
java.lang.Exception v21;
org.buildobjects.process.ProcResult v17;
io.quarkiverse.githubaction.Commands v1;
io.github.chains_project.maven_lockfile.GithubAction v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction;
v1 := @parameter0: io.quarkiverse.githubaction.Commands;
v2 := @parameter1: boolean;
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void group(java.lang.String)>("maven-lockfile");
label1:
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = newarray (java.lang.Object)[1];
v5 = v0.<io.github.chains_project.maven_lockfile.GithubAction: java.lang.String version>;
v4[0] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("io.github.chains-project:maven-lockfile:%s:generate", v4);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v6);
if v2 == 0 goto label2;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>("-DincludeMavenPlugins=true");
label2:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>("-q");
v7 = new org.buildobjects.process.ProcBuilder;
v8 = newarray (java.lang.String)[0];
specialinvoke v7.<org.buildobjects.process.ProcBuilder: void <init>(java.lang.String,java.lang.String[])>("mvn", v8);
v9 = <java.lang.System: java.io.PrintStream out>;
v10 = virtualinvoke v7.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withOutputStream(java.io.OutputStream)>(v9);
v11 = <java.lang.System: java.io.PrintStream err>;
v12 = virtualinvoke v10.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withErrorStream(java.io.OutputStream)>(v11);
v13 = virtualinvoke v12.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withNoTimeout()>();
v14 = newarray (java.lang.String)[0];
v15 = interfaceinvoke v3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v14);
v16 = virtualinvoke v13.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withArgs(java.lang.String[])>(v15);
v17 = virtualinvoke v16.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcResult run()>();
v18 = virtualinvoke v17.<org.buildobjects.process.ProcResult: int getExitValue()>();
if v18 == 0 goto label3;
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void error(java.lang.String)>("Lockfile generation failed\n");
v19 = virtualinvoke v17.<org.buildobjects.process.ProcResult: java.lang.String getOutputString()>();
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void notice(java.lang.String)>(v19);
v20 = virtualinvoke v17.<org.buildobjects.process.ProcResult: java.lang.String getErrorString()>();
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void notice(java.lang.String)>(v20);
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void endGroup()>();
staticinvoke <java.lang.System: void exit(int)>(1);
label3:
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void jobSummary(java.lang.String)>("# Maven Lockfile");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>("\u2705**Success** Lockfile generation succeeded");
label4:
goto label6;
label5:
v21 := @caughtexception;
v22 = virtualinvoke v21.<java.lang.Exception: java.lang.String getMessage()>();
v23 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v22) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Lockfile generation failed\n\u0001");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void error(java.lang.String)>(v23);
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void jobSummary(java.lang.String)>("# Maven Lockfile");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>("\u26a0\ufe0f**Warning** Lockfile generation failed");
v24 = virtualinvoke v21.<java.lang.Exception: java.lang.String getMessage()>();
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The error message is:\n \u0001");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>(v25);
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void endGroup()>();
staticinvoke <java.lang.System: void exit(int)>(1);
label6:
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void notice(java.lang.String)>("Lockfile generated");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void endGroup()>();
return;
catch java.lang.Exception from label1 to label4 with label5;
}
void validateLockFile(io.quarkiverse.githubaction.Commands, boolean)
{
java.lang.Object[] v11, v22, v23, v4;
org.buildobjects.process.ProcBuilder v12, v14, v16, v7, v9;
java.lang.String[] v10, v8;
java.util.ArrayList v3;
int v18;
java.lang.String v20, v21, v24, v25, v26, v5, v6;
boolean v2;
java.io.PrintStream v13, v15;
java.lang.Exception v19;
org.buildobjects.process.ProcResult v17;
io.quarkiverse.githubaction.Commands v1;
io.github.chains_project.maven_lockfile.GithubAction v0;
v0 := @this: io.github.chains_project.maven_lockfile.GithubAction;
v1 := @parameter0: io.quarkiverse.githubaction.Commands;
v2 := @parameter1: boolean;
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void group(java.lang.String)>("maven-lockfile-validation");
label1:
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = newarray (java.lang.Object)[1];
v5 = v0.<io.github.chains_project.maven_lockfile.GithubAction: java.lang.String version>;
v4[0] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("io.github.chains-project:maven-lockfile:%s:validate", v4);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v6);
if v2 == 0 goto label2;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>("-DincludeMavenPlugins=true");
label2:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>("-q");
v7 = new org.buildobjects.process.ProcBuilder;
v8 = newarray (java.lang.String)[0];
specialinvoke v7.<org.buildobjects.process.ProcBuilder: void <init>(java.lang.String,java.lang.String[])>("mvn", v8);
v9 = virtualinvoke v7.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withNoTimeout()>();
v10 = newarray (java.lang.String)[0];
v11 = interfaceinvoke v3.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v10);
v12 = virtualinvoke v9.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withArgs(java.lang.String[])>(v11);
v13 = <java.lang.System: java.io.PrintStream out>;
v14 = virtualinvoke v12.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withOutputStream(java.io.OutputStream)>(v13);
v15 = <java.lang.System: java.io.PrintStream err>;
v16 = virtualinvoke v14.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withErrorStream(java.io.OutputStream)>(v15);
v17 = virtualinvoke v16.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcResult run()>();
v18 = virtualinvoke v17.<org.buildobjects.process.ProcResult: int getExitValue()>();
if v18 == 0 goto label5;
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void error(java.lang.String)>("Integrity check failed\n");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void endGroup()>();
staticinvoke <java.lang.System: void exit(int)>(1);
label3:
goto label5;
label4:
v19 := @caughtexception;
v20 = virtualinvoke v19.<java.lang.Exception: java.lang.String getMessage()>();
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Integrity check failed\n.\u0001");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void error(java.lang.String)>(v21);
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void jobSummary(java.lang.String)>("# Maven Lockfile");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>("\u26a0\ufe0f**Warning** Integrity check failed");
v22 = newarray (java.lang.Object)[1];
v23 = newarray (java.lang.Object)[1];
v24 = v0.<io.github.chains_project.maven_lockfile.GithubAction: java.lang.String version>;
v23[0] = v24;
v25 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("io.github.chains-project:maven-lockfile:%s:generate", v23);
v22[0] = v25;
v26 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The lockfile is not up to date with the pom file. Please run %s to update the lockfile. For your convenience, you can also download the generated lockfile from the artifacts of this check run.", v22);
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>(v26);
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void endGroup()>();
staticinvoke <java.lang.System: void exit(int)>(1);
label5:
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void jobSummary(java.lang.String)>("# Maven Lockfile");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>("\u2705**Success** Integrity check passed");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void appendJobSummary(java.lang.String)>("The lockfile is up to date with the pom files.");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void notice(java.lang.String)>("Integrity check passed");
interfaceinvoke v1.<io.quarkiverse.githubaction.Commands: void endGroup()>();
return;
catch java.lang.Exception from label1 to label3 with label4;
}
}