final class io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry extends java.lang.Object
{
final io.netty.util.Recycler$EnhancedHandle recyclerHandle;
io.netty.buffer.PoolChunk chunk;
java.nio.ByteBuffer nioBuffer;
long handle;
int normCapacity;
void <init>(io.netty.util.internal.ObjectPool$Handle)
{
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry v0;
io.netty.util.internal.ObjectPool$Handle v1;
v0 := @this: io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry;
v1 := @parameter0: io.netty.util.internal.ObjectPool$Handle;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: long handle> = -1L;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: io.netty.util.Recycler$EnhancedHandle recyclerHandle> = v1;
return;
}
void recycle()
{
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry v0;
io.netty.util.Recycler$EnhancedHandle v1;
v0 := @this: io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: io.netty.buffer.PoolChunk chunk> = null;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: java.nio.ByteBuffer nioBuffer> = null;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: long handle> = -1L;
v1 = v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: io.netty.util.Recycler$EnhancedHandle recyclerHandle>;
virtualinvoke v1.<io.netty.util.Recycler$EnhancedHandle: void recycle(java.lang.Object)>(v0);
return;
}
void unguardedRecycle()
{
io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry v0;
io.netty.util.Recycler$EnhancedHandle v1;
v0 := @this: io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: io.netty.buffer.PoolChunk chunk> = null;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: java.nio.ByteBuffer nioBuffer> = null;
v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: long handle> = -1L;
v1 = v0.<io.netty.buffer.PoolThreadCache$MemoryRegionCache$Entry: io.netty.util.Recycler$EnhancedHandle recyclerHandle>;
virtualinvoke v1.<io.netty.util.Recycler$EnhancedHandle: void unguardedRecycle(java.lang.Object)>(v0);
return;
}
}