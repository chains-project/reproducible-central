final class io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf extends io.netty.buffer.UnpooledHeapByteBuf
{
void <init>(io.netty.buffer.UnpooledByteBufAllocator, int, int)
{
io.netty.buffer.UnpooledByteBufAllocator v1;
int v2, v3;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf v0;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf;
v1 := @parameter0: io.netty.buffer.UnpooledByteBufAllocator;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.buffer.UnpooledHeapByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v1, v2, v3);
return;
}
protected byte[] allocateArray(int)
{
byte[] v2;
io.netty.buffer.ByteBufAllocator v3;
int v1, v4;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf v0;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.buffer.UnpooledHeapByteBuf: byte[] allocateArray(int)>(v1);
v3 = virtualinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v4 = lengthof v2;
virtualinvoke v3.<io.netty.buffer.UnpooledByteBufAllocator: void incrementHeap(int)>(v4);
return v2;
}
protected void freeArray(byte[])
{
byte[] v1;
io.netty.buffer.ByteBufAllocator v3;
int v2;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf v0;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf;
v1 := @parameter0: byte[];
v2 = lengthof v1;
specialinvoke v0.<io.netty.buffer.UnpooledHeapByteBuf: void freeArray(byte[])>(v1);
v3 = virtualinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
virtualinvoke v3.<io.netty.buffer.UnpooledByteBufAllocator: void decrementHeap(int)>(v2);
return;
}
}