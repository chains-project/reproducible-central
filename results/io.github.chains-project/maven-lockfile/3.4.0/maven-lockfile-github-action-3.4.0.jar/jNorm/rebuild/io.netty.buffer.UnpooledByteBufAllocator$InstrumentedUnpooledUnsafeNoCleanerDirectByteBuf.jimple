final class io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf extends io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf
{
void <init>(io.netty.buffer.UnpooledByteBufAllocator, int, int)
{
io.netty.buffer.UnpooledByteBufAllocator v1;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf v0;
int v2, v3;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: io.netty.buffer.UnpooledByteBufAllocator;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v1, v2, v3);
return;
}
protected java.nio.ByteBuffer allocateDirect(int)
{
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf v0;
io.netty.buffer.ByteBufAllocator v3;
int v1, v4;
java.nio.ByteBuffer v2;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: java.nio.ByteBuffer allocateDirect(int)>(v1);
v3 = virtualinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v4 = virtualinvoke v2.<java.nio.ByteBuffer: int capacity()>();
virtualinvoke v3.<io.netty.buffer.UnpooledByteBufAllocator: void incrementDirect(int)>(v4);
return v2;
}
java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer, int)
{
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf v0;
io.netty.buffer.ByteBufAllocator v5;
java.nio.ByteBuffer v1, v4;
int v2, v3, v6, v7;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: int;
v3 = virtualinvoke v1.<java.nio.ByteBuffer: int capacity()>();
v4 = specialinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int)>(v1, v2);
v5 = virtualinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v6 = virtualinvoke v4.<java.nio.ByteBuffer: int capacity()>();
v7 = v6 - v3;
virtualinvoke v5.<io.netty.buffer.UnpooledByteBufAllocator: void incrementDirect(int)>(v7);
return v4;
}
protected void freeDirect(java.nio.ByteBuffer)
{
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf v0;
io.netty.buffer.ByteBufAllocator v3;
int v2;
java.nio.ByteBuffer v1;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: java.nio.ByteBuffer;
v2 = virtualinvoke v1.<java.nio.ByteBuffer: int capacity()>();
specialinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: void freeDirect(java.nio.ByteBuffer)>(v1);
v3 = virtualinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
virtualinvoke v3.<io.netty.buffer.UnpooledByteBufAllocator: void decrementDirect(int)>(v2);
return;
}
}