public final class io.netty.buffer.UnpooledByteBufAllocator extends io.netty.buffer.AbstractByteBufAllocator implements io.netty.buffer.ByteBufAllocatorMetricProvider
{
private final io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric;
private final boolean disableLeakDetector;
private final boolean noCleaner;
public static final io.netty.buffer.UnpooledByteBufAllocator DEFAULT;
public void <init>(boolean)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
boolean v1;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator: void <init>(boolean,boolean)>(v1, 0);
return;
}
public void <init>(boolean, boolean)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
boolean v1, v2, v3;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean useDirectBufferNoCleaner()>();
specialinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator: void <init>(boolean,boolean,boolean)>(v1, v2, v3);
return;
}
public void <init>(boolean, boolean, boolean)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric v4;
boolean v1, v2, v3, v5, v6, v7;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: void <init>(boolean)>(v1);
v4 = new io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric;
specialinvoke v4.<io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric: void <init>()>();
v0.<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric> = v4;
v0.<io.netty.buffer.UnpooledByteBufAllocator: boolean disableLeakDetector> = v2;
if v3 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasDirectBufferNoCleanerConstructor()>();
if v6 == 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
v0.<io.netty.buffer.UnpooledByteBufAllocator: boolean noCleaner> = v7;
return;
}
protected io.netty.buffer.ByteBuf newHeapBuffer(int, int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
int v1, v2;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf v6;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf v4;
boolean v3;
io.netty.buffer.UnpooledHeapByteBuf v5;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v3 == 0 goto label1;
v4 = new io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf;
v5 = v4;
specialinvoke v4.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeHeapByteBuf: void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int)>(v0, v1, v2);
goto label2;
label1:
v6 = new io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf;
v5 = v6;
specialinvoke v6.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledHeapByteBuf: void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int)>(v0, v1, v2);
label2:
return v5;
}
protected io.netty.buffer.ByteBuf newDirectBuffer(int, int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf v5;
io.netty.buffer.UnpooledUnsafeDirectByteBuf v6;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf v9;
io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf v7;
io.netty.buffer.ByteBuf v11;
int v1, v2;
io.netty.buffer.UnpooledDirectByteBuf v8;
boolean v10, v3, v4;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v3 == 0 goto label3;
v4 = v0.<io.netty.buffer.UnpooledByteBufAllocator: boolean noCleaner>;
if v4 == 0 goto label1;
v5 = new io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf;
v6 = v5;
specialinvoke v5.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeNoCleanerDirectByteBuf: void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int)>(v0, v1, v2);
goto label2;
label1:
v7 = new io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf;
v6 = v7;
specialinvoke v7.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledUnsafeDirectByteBuf: void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int)>(v0, v1, v2);
label2:
v8 = v6;
goto label4;
label3:
v9 = new io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf;
specialinvoke v9.<io.netty.buffer.UnpooledByteBufAllocator$InstrumentedUnpooledDirectByteBuf: void <init>(io.netty.buffer.UnpooledByteBufAllocator,int,int)>(v0, v1, v2);
v8 = v9;
label4:
v10 = v0.<io.netty.buffer.UnpooledByteBufAllocator: boolean disableLeakDetector>;
if v10 == 0 goto label5;
v11 = v8;
goto label6;
label5:
v11 = staticinvoke <io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.ByteBuf toLeakAwareBuffer(io.netty.buffer.ByteBuf)>(v8);
label6:
return v11;
}
public io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
io.netty.buffer.CompositeByteBuf v2, v4;
int v1;
boolean v3;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 = new io.netty.buffer.CompositeByteBuf;
specialinvoke v2.<io.netty.buffer.CompositeByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,boolean,int)>(v0, 0, v1);
v3 = v0.<io.netty.buffer.UnpooledByteBufAllocator: boolean disableLeakDetector>;
if v3 == 0 goto label1;
v4 = v2;
goto label2;
label1:
v4 = staticinvoke <io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf)>(v2);
label2:
return v4;
}
public io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
io.netty.buffer.CompositeByteBuf v2, v4;
int v1;
boolean v3;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 = new io.netty.buffer.CompositeByteBuf;
specialinvoke v2.<io.netty.buffer.CompositeByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,boolean,int)>(v0, 1, v1);
v3 = v0.<io.netty.buffer.UnpooledByteBufAllocator: boolean disableLeakDetector>;
if v3 == 0 goto label1;
v4 = v2;
goto label2;
label1:
v4 = staticinvoke <io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf)>(v2);
label2:
return v4;
}
public boolean isDirectBufferPooled()
{
io.netty.buffer.UnpooledByteBufAllocator v0;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
return 0;
}
public io.netty.buffer.ByteBufAllocatorMetric metric()
{
io.netty.buffer.UnpooledByteBufAllocator v0;
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric v1;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 = v0.<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric>;
return v1;
}
void incrementDirect(int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
int v1;
io.netty.util.internal.LongCounter v3;
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric v2;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric>;
v3 = v2.<io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric: io.netty.util.internal.LongCounter directCounter>;
interfaceinvoke v3.<io.netty.util.internal.LongCounter: void add(long)>(v1);
return;
}
void decrementDirect(int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
int v1, v4;
io.netty.util.internal.LongCounter v3;
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric v2;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric>;
v3 = v2.<io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric: io.netty.util.internal.LongCounter directCounter>;
v4 = neg v1;
interfaceinvoke v3.<io.netty.util.internal.LongCounter: void add(long)>(v4);
return;
}
void incrementHeap(int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
int v1;
io.netty.util.internal.LongCounter v3;
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric v2;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric>;
v3 = v2.<io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric: io.netty.util.internal.LongCounter heapCounter>;
interfaceinvoke v3.<io.netty.util.internal.LongCounter: void add(long)>(v1);
return;
}
void decrementHeap(int)
{
io.netty.buffer.UnpooledByteBufAllocator v0;
int v1, v4;
io.netty.util.internal.LongCounter v3;
io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric v2;
v0 := @this: io.netty.buffer.UnpooledByteBufAllocator;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric metric>;
v3 = v2.<io.netty.buffer.UnpooledByteBufAllocator$UnpooledByteBufAllocatorMetric: io.netty.util.internal.LongCounter heapCounter>;
v4 = neg v1;
interfaceinvoke v3.<io.netty.util.internal.LongCounter: void add(long)>(v4);
return;
}
static void <clinit>()
{
io.netty.buffer.UnpooledByteBufAllocator v0;
boolean v1;
v0 = new io.netty.buffer.UnpooledByteBufAllocator;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean directBufferPreferred()>();
specialinvoke v0.<io.netty.buffer.UnpooledByteBufAllocator: void <init>(boolean)>(v1);
<io.netty.buffer.UnpooledByteBufAllocator: io.netty.buffer.UnpooledByteBufAllocator DEFAULT> = v0;
return;
}
}