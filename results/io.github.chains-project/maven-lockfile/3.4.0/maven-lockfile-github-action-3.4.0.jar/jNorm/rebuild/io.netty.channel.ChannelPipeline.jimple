public interface  io.netty.channel.ChannelPipeline extends java.lang.Object implements io.netty.channel.ChannelInboundInvoker, io.netty.channel.ChannelOutboundInvoker, java.lang.Iterable
{
public abstract io.netty.channel.ChannelPipeline addFirst(java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addLast(java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addBefore(java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addBefore(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addAfter(java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelPipeline addAfter(io.netty.util.concurrent.EventExecutorGroup, java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
public abstract transient io.netty.channel.ChannelPipeline addFirst(io.netty.channel.ChannelHandler[]);
public abstract transient io.netty.channel.ChannelPipeline addFirst(io.netty.util.concurrent.EventExecutorGroup, io.netty.channel.ChannelHandler[]);
public abstract transient io.netty.channel.ChannelPipeline addLast(io.netty.channel.ChannelHandler[]);
public abstract transient io.netty.channel.ChannelPipeline addLast(io.netty.util.concurrent.EventExecutorGroup, io.netty.channel.ChannelHandler[]);
public abstract io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelHandler remove(java.lang.String);
public abstract io.netty.channel.ChannelHandler remove(java.lang.Class);
public abstract io.netty.channel.ChannelHandler removeFirst();
public abstract io.netty.channel.ChannelHandler removeLast();
public abstract io.netty.channel.ChannelPipeline replace(io.netty.channel.ChannelHandler, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelHandler replace(java.lang.String, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelHandler replace(java.lang.Class, java.lang.String, io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelHandler first();
public abstract io.netty.channel.ChannelHandlerContext firstContext();
public abstract io.netty.channel.ChannelHandler last();
public abstract io.netty.channel.ChannelHandlerContext lastContext();
public abstract io.netty.channel.ChannelHandler get(java.lang.String);
public abstract io.netty.channel.ChannelHandler get(java.lang.Class);
public abstract io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler);
public abstract io.netty.channel.ChannelHandlerContext context(java.lang.String);
public abstract io.netty.channel.ChannelHandlerContext context(java.lang.Class);
public abstract io.netty.channel.Channel channel();
public abstract java.util.List names();
public abstract java.util.Map toMap();
public abstract io.netty.channel.ChannelPipeline fireChannelRegistered();
public abstract io.netty.channel.ChannelPipeline fireChannelUnregistered();
public abstract io.netty.channel.ChannelPipeline fireChannelActive();
public abstract io.netty.channel.ChannelPipeline fireChannelInactive();
public abstract io.netty.channel.ChannelPipeline fireExceptionCaught(java.lang.Throwable);
public abstract io.netty.channel.ChannelPipeline fireUserEventTriggered(java.lang.Object);
public abstract io.netty.channel.ChannelPipeline fireChannelRead(java.lang.Object);
public abstract io.netty.channel.ChannelPipeline fireChannelReadComplete();
public abstract io.netty.channel.ChannelPipeline fireChannelWritabilityChanged();
public abstract io.netty.channel.ChannelPipeline flush();
}