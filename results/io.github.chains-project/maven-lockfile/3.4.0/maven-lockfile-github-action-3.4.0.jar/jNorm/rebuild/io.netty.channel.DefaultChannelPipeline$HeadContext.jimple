final class io.netty.channel.DefaultChannelPipeline$HeadContext extends io.netty.channel.AbstractChannelHandlerContext implements io.netty.channel.ChannelOutboundHandler, io.netty.channel.ChannelInboundHandler
{
private final io.netty.channel.Channel$Unsafe unsafe;
final io.netty.channel.DefaultChannelPipeline this$0;
void <init>(io.netty.channel.DefaultChannelPipeline, io.netty.channel.DefaultChannelPipeline)
{
io.netty.channel.Channel v4;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
java.lang.String v3;
io.netty.channel.DefaultChannelPipeline v1, v2;
io.netty.channel.Channel$Unsafe v5;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.DefaultChannelPipeline;
v2 := @parameter1: io.netty.channel.DefaultChannelPipeline;
v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.DefaultChannelPipeline this$0> = v1;
v3 = <io.netty.channel.DefaultChannelPipeline: java.lang.String HEAD_NAME>;
specialinvoke v0.<io.netty.channel.AbstractChannelHandlerContext: void <init>(io.netty.channel.DefaultChannelPipeline,io.netty.util.concurrent.EventExecutor,java.lang.String,java.lang.Class)>(v2, null, v3, class "Lio/netty/channel/DefaultChannelPipeline$HeadContext;");
v4 = virtualinvoke v2.<io.netty.channel.DefaultChannelPipeline: io.netty.channel.Channel channel()>();
v5 = interfaceinvoke v4.<io.netty.channel.Channel: io.netty.channel.Channel$Unsafe unsafe()>();
v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe> = v5;
virtualinvoke v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: boolean setAddComplete()>();
return;
}
public io.netty.channel.ChannelHandler handler()
{
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
return v0;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
return;
}
public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelPromise v3;
java.net.SocketAddress v2;
io.netty.channel.Channel$Unsafe v4;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v4.<io.netty.channel.Channel$Unsafe: void bind(java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v2, v3);
return;
}
public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelPromise v4;
java.net.SocketAddress v2, v3;
io.netty.channel.Channel$Unsafe v5;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: java.net.SocketAddress;
v4 := @parameter3: io.netty.channel.ChannelPromise;
v5 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v5.<io.netty.channel.Channel$Unsafe: void connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v2, v3, v4);
return;
}
public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelPromise v2;
io.netty.channel.Channel$Unsafe v3;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v3.<io.netty.channel.Channel$Unsafe: void disconnect(io.netty.channel.ChannelPromise)>(v2);
return;
}
public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelPromise v2;
io.netty.channel.Channel$Unsafe v3;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v3.<io.netty.channel.Channel$Unsafe: void close(io.netty.channel.ChannelPromise)>(v2);
return;
}
public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelPromise v2;
io.netty.channel.Channel$Unsafe v3;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v3.<io.netty.channel.Channel$Unsafe: void deregister(io.netty.channel.ChannelPromise)>(v2);
return;
}
public void read(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.Channel$Unsafe v2;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v2.<io.netty.channel.Channel$Unsafe: void beginRead()>();
return;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelPromise v3;
java.lang.Object v2;
io.netty.channel.Channel$Unsafe v4;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v4.<io.netty.channel.Channel$Unsafe: void write(java.lang.Object,io.netty.channel.ChannelPromise)>(v2, v3);
return;
}
public void flush(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.Channel$Unsafe v2;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.Channel$Unsafe unsafe>;
interfaceinvoke v2.<io.netty.channel.Channel$Unsafe: void flush()>();
return;
}
public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable)
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Throwable;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v2);
return;
}
public void channelRegistered(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.DefaultChannelPipeline v2;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.DefaultChannelPipeline this$0>;
virtualinvoke v2.<io.netty.channel.DefaultChannelPipeline: void invokeHandlerAddedIfNeeded()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRegistered()>();
return;
}
public void channelUnregistered(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.Channel v3;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.DefaultChannelPipeline v2, v5;
boolean v4;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelUnregistered()>();
v2 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.DefaultChannelPipeline this$0>;
v3 = v2.<io.netty.channel.DefaultChannelPipeline: io.netty.channel.Channel channel>;
v4 = interfaceinvoke v3.<io.netty.channel.Channel: boolean isOpen()>();
if v4 != 0 goto label1;
v5 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.DefaultChannelPipeline this$0>;
specialinvoke v5.<io.netty.channel.DefaultChannelPipeline: void destroy()>();
label1:
return;
}
public void channelActive(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelActive()>();
specialinvoke v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: void readIfIsAutoRead()>();
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelInactive()>();
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
java.lang.Object v2;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)>(v2);
return;
}
public void channelReadComplete(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelReadComplete()>();
specialinvoke v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: void readIfIsAutoRead()>();
return;
}
private void readIfIsAutoRead()
{
io.netty.channel.Channel v2, v6;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
io.netty.channel.ChannelConfig v3;
io.netty.channel.DefaultChannelPipeline v1, v5;
boolean v4;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.DefaultChannelPipeline this$0>;
v2 = v1.<io.netty.channel.DefaultChannelPipeline: io.netty.channel.Channel channel>;
v3 = interfaceinvoke v2.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v4 = interfaceinvoke v3.<io.netty.channel.ChannelConfig: boolean isAutoRead()>();
if v4 == 0 goto label1;
v5 = v0.<io.netty.channel.DefaultChannelPipeline$HeadContext: io.netty.channel.DefaultChannelPipeline this$0>;
v6 = v5.<io.netty.channel.DefaultChannelPipeline: io.netty.channel.Channel channel>;
interfaceinvoke v6.<io.netty.channel.Channel: io.netty.channel.Channel read()>();
label1:
return;
}
public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
java.lang.Object v2;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v2);
return;
}
public void channelWritabilityChanged(io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.DefaultChannelPipeline$HeadContext v0;
v0 := @this: io.netty.channel.DefaultChannelPipeline$HeadContext;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelWritabilityChanged()>();
return;
}
}