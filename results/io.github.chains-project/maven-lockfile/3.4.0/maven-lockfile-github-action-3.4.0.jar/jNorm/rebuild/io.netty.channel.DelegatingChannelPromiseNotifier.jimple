public final class io.netty.channel.DelegatingChannelPromiseNotifier extends java.lang.Object implements io.netty.channel.ChannelPromise, io.netty.channel.ChannelFutureListener
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private final io.netty.channel.ChannelPromise delegate;
private final boolean logNotifyFailure;
public void <init>(io.netty.channel.ChannelPromise)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2, v3;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.channel.ChannelPromise;
v2 = v1 instanceof io.netty.channel.VoidChannelPromise;
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
specialinvoke v0.<io.netty.channel.DelegatingChannelPromiseNotifier: void <init>(io.netty.channel.ChannelPromise,boolean)>(v1, v3);
return;
}
public void <init>(io.netty.channel.ChannelPromise, boolean)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
java.lang.Object v3;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.channel.ChannelPromise;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "delegate");
v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate> = v3;
v0.<io.netty.channel.DelegatingChannelPromiseNotifier: boolean logNotifyFailure> = v2;
return;
}
public void operationComplete(io.netty.channel.ChannelFuture) throws java.lang.Exception
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Throwable v9;
io.netty.channel.ChannelFuture v1;
io.netty.channel.ChannelPromise v10, v6, v8;
io.netty.util.internal.logging.InternalLogger v3;
java.lang.Object v5;
boolean v2, v4, v7;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: boolean logNotifyFailure>;
if v2 == 0 goto label1;
v3 = <io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.util.internal.logging.InternalLogger logger>;
goto label2;
label1:
v3 = null;
label2:
v4 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isSuccess()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Object get()>();
v6 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
staticinvoke <io.netty.util.internal.PromiseNotificationUtil: void trySuccess(io.netty.util.concurrent.Promise,java.lang.Object,io.netty.util.internal.logging.InternalLogger)>(v6, v5, v3);
goto label5;
label3:
v7 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isCancelled()>();
if v7 == 0 goto label4;
v8 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
staticinvoke <io.netty.util.internal.PromiseNotificationUtil: void tryCancel(io.netty.util.concurrent.Promise,io.netty.util.internal.logging.InternalLogger)>(v8, v3);
goto label5;
label4:
v9 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
v10 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
staticinvoke <io.netty.util.internal.PromiseNotificationUtil: void tryFailure(io.netty.util.concurrent.Promise,java.lang.Throwable,io.netty.util.internal.logging.InternalLogger)>(v10, v9, v3);
label5:
return;
}
public io.netty.channel.Channel channel()
{
io.netty.channel.Channel v2;
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.Channel channel()>();
return v2;
}
public io.netty.channel.ChannelPromise setSuccess(java.lang.Void)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Void v1;
io.netty.channel.ChannelPromise v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: java.lang.Void;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess(java.lang.Void)>(v1);
return v0;
}
public io.netty.channel.ChannelPromise setSuccess()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
return v0;
}
public boolean trySuccess()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean trySuccess()>();
return v2;
}
public boolean trySuccess(java.lang.Void)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Void v1;
io.netty.channel.ChannelPromise v2;
boolean v3;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: java.lang.Void;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean trySuccess(java.lang.Object)>(v1);
return v3;
}
public io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Throwable v1;
io.netty.channel.ChannelPromise v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v1);
return v0;
}
public io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.util.concurrent.GenericFutureListener v1;
io.netty.channel.ChannelPromise v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)>(v1);
return v0;
}
public transient io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[])
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v2;
io.netty.util.concurrent.GenericFutureListener[] v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener[];
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise addListeners(io.netty.util.concurrent.GenericFutureListener[])>(v1);
return v0;
}
public io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.util.concurrent.GenericFutureListener v1;
io.netty.channel.ChannelPromise v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise removeListener(io.netty.util.concurrent.GenericFutureListener)>(v1);
return v0;
}
public transient io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[])
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v2;
io.netty.util.concurrent.GenericFutureListener[] v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: io.netty.util.concurrent.GenericFutureListener[];
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise removeListeners(io.netty.util.concurrent.GenericFutureListener[])>(v1);
return v0;
}
public boolean tryFailure(java.lang.Throwable)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Throwable v1;
io.netty.channel.ChannelPromise v2;
boolean v3;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean tryFailure(java.lang.Throwable)>(v1);
return v3;
}
public boolean setUncancellable()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean setUncancellable()>();
return v2;
}
public io.netty.channel.ChannelPromise await() throws java.lang.InterruptedException
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise await()>();
return v0;
}
public io.netty.channel.ChannelPromise awaitUninterruptibly()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise awaitUninterruptibly()>();
return v0;
}
public boolean isVoid()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean isVoid()>();
return v2;
}
public io.netty.channel.ChannelPromise unvoid()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0, v2;
io.netty.channel.ChannelPromise v3, v4;
boolean v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = virtualinvoke v0.<io.netty.channel.DelegatingChannelPromiseNotifier: boolean isVoid()>();
if v1 == 0 goto label1;
v2 = new io.netty.channel.DelegatingChannelPromiseNotifier;
v3 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v4 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise unvoid()>();
specialinvoke v2.<io.netty.channel.DelegatingChannelPromiseNotifier: void <init>(io.netty.channel.ChannelPromise)>(v4);
goto label2;
label1:
v2 = v0;
label2:
return v2;
}
public boolean await(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.util.concurrent.TimeUnit v2;
io.netty.channel.ChannelPromise v3;
long v1;
boolean v4;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v4 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: boolean await(long,java.util.concurrent.TimeUnit)>(v1, v2);
return v4;
}
public boolean await(long) throws java.lang.InterruptedException
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v2;
long v1;
boolean v3;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: long;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean await(long)>(v1);
return v3;
}
public boolean awaitUninterruptibly(long, java.util.concurrent.TimeUnit)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.util.concurrent.TimeUnit v2;
io.netty.channel.ChannelPromise v3;
long v1;
boolean v4;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v4 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: boolean awaitUninterruptibly(long,java.util.concurrent.TimeUnit)>(v1, v2);
return v4;
}
public boolean awaitUninterruptibly(long)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v2;
long v1;
boolean v3;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: long;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean awaitUninterruptibly(long)>(v1);
return v3;
}
public java.lang.Void getNow()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Object v2;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: java.lang.Object getNow()>();
return v2;
}
public boolean cancel(boolean)
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v2;
boolean v1, v3;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: boolean;
v2 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean cancel(boolean)>(v1);
return v3;
}
public boolean isCancelled()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean isCancelled()>();
return v2;
}
public boolean isDone()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean isDone()>();
return v2;
}
public java.lang.Void get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Object v2;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: java.lang.Object get()>();
return v2;
}
public java.lang.Void get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.util.concurrent.TimeUnit v2;
io.netty.channel.ChannelPromise v3;
java.lang.Object v4;
long v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v4 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(v1, v2);
return v4;
}
public io.netty.channel.ChannelPromise sync() throws java.lang.InterruptedException
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise sync()>();
return v0;
}
public io.netty.channel.ChannelPromise syncUninterruptibly()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
interfaceinvoke v1.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise syncUninterruptibly()>();
return v0;
}
public boolean isSuccess()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean isSuccess()>();
return v2;
}
public boolean isCancellable()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
io.netty.channel.ChannelPromise v1;
boolean v2;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean isCancellable()>();
return v2;
}
public java.lang.Throwable cause()
{
io.netty.channel.DelegatingChannelPromiseNotifier v0;
java.lang.Throwable v2;
io.netty.channel.ChannelPromise v1;
v0 := @this: io.netty.channel.DelegatingChannelPromiseNotifier;
v1 = v0.<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.channel.ChannelPromise delegate>;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: java.lang.Throwable cause()>();
return v2;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/channel/DelegatingChannelPromiseNotifier;");
<io.netty.channel.DelegatingChannelPromiseNotifier: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}