class io.netty.channel.ThreadPerChannelEventLoop$1 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.channel.ThreadPerChannelEventLoop this$0;
void <init>(io.netty.channel.ThreadPerChannelEventLoop)
{
io.netty.channel.ThreadPerChannelEventLoop$1 v0;
io.netty.channel.ThreadPerChannelEventLoop v1;
v0 := @this: io.netty.channel.ThreadPerChannelEventLoop$1;
v1 := @parameter0: io.netty.channel.ThreadPerChannelEventLoop;
v0.<io.netty.channel.ThreadPerChannelEventLoop$1: io.netty.channel.ThreadPerChannelEventLoop this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture) throws java.lang.Exception
{
io.netty.channel.Channel v4;
io.netty.channel.ThreadPerChannelEventLoop v3, v5;
io.netty.channel.ThreadPerChannelEventLoop$1 v0;
boolean v2;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.channel.ThreadPerChannelEventLoop$1;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.channel.ThreadPerChannelEventLoop$1: io.netty.channel.ThreadPerChannelEventLoop this$0>;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: io.netty.channel.Channel channel()>();
v3.<io.netty.channel.ThreadPerChannelEventLoop: io.netty.channel.Channel ch> = v4;
goto label2;
label1:
v5 = v0.<io.netty.channel.ThreadPerChannelEventLoop$1: io.netty.channel.ThreadPerChannelEventLoop this$0>;
virtualinvoke v5.<io.netty.channel.ThreadPerChannelEventLoop: void deregister()>();
label2:
return;
}
}