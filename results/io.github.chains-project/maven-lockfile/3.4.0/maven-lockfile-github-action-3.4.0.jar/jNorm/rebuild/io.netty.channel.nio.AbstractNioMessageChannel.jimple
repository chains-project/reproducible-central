public abstract class io.netty.channel.nio.AbstractNioMessageChannel extends io.netty.channel.nio.AbstractNioChannel
{
boolean inputShutdown;
protected void <init>(io.netty.channel.Channel, java.nio.channels.SelectableChannel, int)
{
io.netty.channel.Channel v1;
java.nio.channels.SelectableChannel v2;
int v3;
io.netty.channel.nio.AbstractNioMessageChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
v1 := @parameter0: io.netty.channel.Channel;
v2 := @parameter1: java.nio.channels.SelectableChannel;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.channel.nio.AbstractNioChannel: void <init>(io.netty.channel.Channel,java.nio.channels.SelectableChannel,int)>(v1, v2, v3);
return;
}
protected io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe newUnsafe()
{
io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe v1;
io.netty.channel.nio.AbstractNioMessageChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
v1 = new io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe;
specialinvoke v1.<io.netty.channel.nio.AbstractNioMessageChannel$NioMessageUnsafe: void <init>(io.netty.channel.nio.AbstractNioMessageChannel)>(v0);
return v1;
}
protected void doBeginRead() throws java.lang.Exception
{
io.netty.channel.nio.AbstractNioMessageChannel v0;
boolean v1;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
v1 = v0.<io.netty.channel.nio.AbstractNioMessageChannel: boolean inputShutdown>;
if v1 == 0 goto label1;
return;
label1:
specialinvoke v0.<io.netty.channel.nio.AbstractNioChannel: void doBeginRead()>();
return;
}
protected boolean continueReading(io.netty.channel.RecvByteBufAllocator$Handle)
{
io.netty.channel.RecvByteBufAllocator$Handle v1;
io.netty.channel.nio.AbstractNioMessageChannel v0;
boolean v2;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
v1 := @parameter0: io.netty.channel.RecvByteBufAllocator$Handle;
v2 = interfaceinvoke v1.<io.netty.channel.RecvByteBufAllocator$Handle: boolean continueReading()>();
return v2;
}
protected void doWrite(io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception
{
int v14, v15, v16, v17, v18, v3, v4, v8, v9;
boolean v10, v12, v13, v6;
java.nio.channels.SelectionKey v2;
io.netty.channel.nio.AbstractNioMessageChannel v0;
java.lang.Exception v11;
io.netty.channel.ChannelOutboundBuffer v1;
io.netty.channel.ChannelConfig v7;
java.lang.Object v5;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
v1 := @parameter0: io.netty.channel.ChannelOutboundBuffer;
v2 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioMessageChannel: java.nio.channels.SelectionKey selectionKey()>();
v3 = virtualinvoke v2.<java.nio.channels.SelectionKey: int interestOps()>();
v4 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioMessageChannel: int maxMessagesPerWrite()>();
label01:
if v4 <= 0 goto label08;
v5 = virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: java.lang.Object current()>();
if v5 == null goto label08;
label02:
v6 = 0;
v7 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioMessageChannel: io.netty.channel.ChannelConfig config()>();
v8 = interfaceinvoke v7.<io.netty.channel.ChannelConfig: int getWriteSpinCount()>();
v9 = v8 - 1;
label03:
if v9 < 0 goto label05;
v10 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioMessageChannel: boolean doWriteMessage(java.lang.Object,io.netty.channel.ChannelOutboundBuffer)>(v5, v1);
if v10 == 0 goto label04;
v6 = 1;
goto label05;
label04:
v9 = v9 - 1;
goto label03;
label05:
if v6 == 0 goto label08;
v4 = v4 - 1;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean remove()>();
goto label01;
label06:
v11 := @caughtexception;
v12 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioMessageChannel: boolean continueOnWriteError()>();
if v12 == 0 goto label07;
v4 = v4 - 1;
virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean remove(java.lang.Throwable)>(v11);
goto label01;
label07:
throw v11;
label08:
v13 = virtualinvoke v1.<io.netty.channel.ChannelOutboundBuffer: boolean isEmpty()>();
if v13 == 0 goto label09;
v14 = v3 & 4;
if v14 == 0 goto label10;
v15 = (int) -5;
v16 = v3 & v15;
virtualinvoke v2.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(v16);
goto label10;
label09:
v17 = v3 & 4;
if v17 != 0 goto label10;
v18 = v3 | 4;
virtualinvoke v2.<java.nio.channels.SelectionKey: java.nio.channels.SelectionKey interestOps(int)>(v18);
label10:
return;
catch java.lang.Exception from label02 to label06 with label06;
}
protected boolean continueOnWriteError()
{
io.netty.channel.nio.AbstractNioMessageChannel v0;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
return 0;
}
protected boolean closeOnReadError(java.lang.Throwable)
{
java.lang.Throwable v1;
io.netty.channel.nio.AbstractNioMessageChannel v0;
boolean v2, v3, v4, v5, v6;
v0 := @this: io.netty.channel.nio.AbstractNioMessageChannel;
v1 := @parameter0: java.lang.Throwable;
v2 = virtualinvoke v0.<io.netty.channel.nio.AbstractNioMessageChannel: boolean isActive()>();
if v2 != 0 goto label1;
return 1;
label1:
v3 = v1 instanceof java.net.PortUnreachableException;
if v3 == 0 goto label2;
return 0;
label2:
v4 = v1 instanceof java.io.IOException;
if v4 == 0 goto label5;
v5 = v0 instanceof io.netty.channel.ServerChannel;
if v5 != 0 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
label5:
return 1;
}
protected abstract int doReadMessages(java.util.List) throws java.lang.Exception;
protected abstract boolean doWriteMessage(java.lang.Object, io.netty.channel.ChannelOutboundBuffer) throws java.lang.Exception;
}