final class io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig extends io.netty.channel.socket.DefaultSocketChannelConfig
{
private volatile int maxBytesPerGatheringWrite;
final io.netty.channel.socket.nio.NioSocketChannel this$0;
private void <init>(io.netty.channel.socket.nio.NioSocketChannel, io.netty.channel.socket.nio.NioSocketChannel, java.net.Socket)
{
io.netty.channel.socket.nio.NioSocketChannel v1, v2;
java.net.Socket v3;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 := @parameter0: io.netty.channel.socket.nio.NioSocketChannel;
v2 := @parameter1: io.netty.channel.socket.nio.NioSocketChannel;
v3 := @parameter2: java.net.Socket;
v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: io.netty.channel.socket.nio.NioSocketChannel this$0> = v1;
specialinvoke v0.<io.netty.channel.socket.DefaultSocketChannelConfig: void <init>(io.netty.channel.socket.SocketChannel,java.net.Socket)>(v2, v3);
v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: int maxBytesPerGatheringWrite> = 2147483647;
specialinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: void calculateMaxBytesPerGatheringWrite()>();
return;
}
protected void autoReadCleared()
{
io.netty.channel.socket.nio.NioSocketChannel v1;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 = v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: io.netty.channel.socket.nio.NioSocketChannel this$0>;
virtualinvoke v1.<io.netty.channel.socket.nio.NioSocketChannel: void clearReadPending()>();
return;
}
public io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig setSendBufferSize(int)
{
int v1;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.channel.socket.DefaultSocketChannelConfig: io.netty.channel.socket.SocketChannelConfig setSendBufferSize(int)>(v1);
specialinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: void calculateMaxBytesPerGatheringWrite()>();
return v0;
}
public boolean setOption(io.netty.channel.ChannelOption, java.lang.Object)
{
io.netty.channel.ChannelOption v1;
java.nio.channels.SocketChannel v5;
int v3;
java.lang.Object v2;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
boolean v4, v6, v7;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 := @parameter0: io.netty.channel.ChannelOption;
v2 := @parameter1: java.lang.Object;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v3 < 7 goto label1;
v4 = v1 instanceof io.netty.channel.socket.nio.NioChannelOption;
if v4 == 0 goto label1;
v5 = specialinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: java.nio.channels.SocketChannel jdkChannel()>();
v6 = staticinvoke <io.netty.channel.socket.nio.NioChannelOption: boolean setOption(java.nio.channels.Channel,io.netty.channel.socket.nio.NioChannelOption,java.lang.Object)>(v5, v1, v2);
return v6;
label1:
v7 = specialinvoke v0.<io.netty.channel.socket.DefaultSocketChannelConfig: boolean setOption(io.netty.channel.ChannelOption,java.lang.Object)>(v1, v2);
return v7;
}
public java.lang.Object getOption(io.netty.channel.ChannelOption)
{
io.netty.channel.ChannelOption v1;
java.nio.channels.SocketChannel v4;
int v2;
java.lang.Object v5, v6;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
boolean v3;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 := @parameter0: io.netty.channel.ChannelOption;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v2 < 7 goto label1;
v3 = v1 instanceof io.netty.channel.socket.nio.NioChannelOption;
if v3 == 0 goto label1;
v4 = specialinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: java.nio.channels.SocketChannel jdkChannel()>();
v5 = staticinvoke <io.netty.channel.socket.nio.NioChannelOption: java.lang.Object getOption(java.nio.channels.Channel,io.netty.channel.socket.nio.NioChannelOption)>(v4, v1);
return v5;
label1:
v6 = specialinvoke v0.<io.netty.channel.socket.DefaultSocketChannelConfig: java.lang.Object getOption(io.netty.channel.ChannelOption)>(v1);
return v6;
}
public java.util.Map getOptions()
{
io.netty.channel.ChannelOption[] v4;
java.nio.channels.SocketChannel v3;
java.util.Map v2, v5, v6;
int v1;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 < 7 goto label1;
v2 = specialinvoke v0.<io.netty.channel.socket.DefaultSocketChannelConfig: java.util.Map getOptions()>();
v3 = specialinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: java.nio.channels.SocketChannel jdkChannel()>();
v4 = staticinvoke <io.netty.channel.socket.nio.NioChannelOption: io.netty.channel.ChannelOption[] getOptions(java.nio.channels.Channel)>(v3);
v5 = virtualinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: java.util.Map getOptions(java.util.Map,io.netty.channel.ChannelOption[])>(v2, v4);
return v5;
label1:
v6 = specialinvoke v0.<io.netty.channel.socket.DefaultSocketChannelConfig: java.util.Map getOptions()>();
return v6;
}
void setMaxBytesPerGatheringWrite(int)
{
int v1;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 := @parameter0: int;
v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: int maxBytesPerGatheringWrite> = v1;
return;
}
int getMaxBytesPerGatheringWrite()
{
int v1;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 = v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: int maxBytesPerGatheringWrite>;
return v1;
}
private void calculateMaxBytesPerGatheringWrite()
{
int v1, v2;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 = virtualinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: int getSendBufferSize()>();
v2 = v1 << 1;
if v2 <= 0 goto label1;
virtualinvoke v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: void setMaxBytesPerGatheringWrite(int)>(v2);
label1:
return;
}
private java.nio.channels.SocketChannel jdkChannel()
{
io.netty.channel.Channel v1;
io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig v0;
java.nio.channels.SocketChannel v2;
v0 := @this: io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig;
v1 = v0.<io.netty.channel.socket.nio.NioSocketChannel$NioSocketChannelConfig: io.netty.channel.Channel channel>;
v2 = virtualinvoke v1.<io.netty.channel.socket.nio.NioSocketChannel: java.nio.channels.SocketChannel javaChannel()>();
return v2;
}
}