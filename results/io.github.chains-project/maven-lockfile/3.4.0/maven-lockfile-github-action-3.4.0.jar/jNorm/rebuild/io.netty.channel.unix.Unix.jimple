public final class io.netty.channel.unix.Unix extends java.lang.Object
{
private static final java.util.concurrent.atomic.AtomicBoolean registered;
public static synchronized void registerInternal(java.lang.Runnable)
{
java.lang.Runnable v0;
v0 := @parameter0: java.lang.Runnable;
interfaceinvoke v0.<java.lang.Runnable: void run()>();
staticinvoke <io.netty.channel.unix.Socket: void initialize()>();
return;
}
public static boolean isAvailable()
{
return 0;
}
public static void ensureAvailability()
{
java.lang.UnsupportedOperationException v0;
v0 = new java.lang.UnsupportedOperationException;
specialinvoke v0.<java.lang.UnsupportedOperationException: void <init>()>();
throw v0;
}
public static java.lang.Throwable unavailabilityCause()
{
java.lang.UnsupportedOperationException v0;
v0 = new java.lang.UnsupportedOperationException;
specialinvoke v0.<java.lang.UnsupportedOperationException: void <init>()>();
return v0;
}
private void <init>()
{
io.netty.channel.unix.Unix v0;
v0 := @this: io.netty.channel.unix.Unix;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.lang.Class[] v1;
java.util.concurrent.atomic.AtomicBoolean v0;
v0 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v0.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
<io.netty.channel.unix.Unix: java.util.concurrent.atomic.AtomicBoolean registered> = v0;
v1 = newarray (java.lang.Class)[8];
v1[0] = class "Ljava/lang/OutOfMemoryError;";
v1[1] = class "Ljava/lang/RuntimeException;";
v1[2] = class "Ljava/nio/channels/ClosedChannelException;";
v1[3] = class "Ljava/io/IOException;";
v1[4] = class "Ljava/net/PortUnreachableException;";
v1[5] = class "Lio/netty/channel/unix/DatagramSocketAddress;";
v1[6] = class "Lio/netty/channel/unix/DomainDatagramSocketAddress;";
v1[7] = class "Ljava/net/InetSocketAddress;";
staticinvoke <io.netty.util.internal.ClassInitializerUtil: void tryLoadClasses(java.lang.Class,java.lang.Class[])>(class "Lio/netty/channel/unix/Unix;", v1);
return;
}
}