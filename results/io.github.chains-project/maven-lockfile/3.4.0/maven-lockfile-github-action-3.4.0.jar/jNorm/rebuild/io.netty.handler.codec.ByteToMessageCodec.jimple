public abstract class io.netty.handler.codec.ByteToMessageCodec extends io.netty.channel.ChannelDuplexHandler
{
private final io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher;
private final io.netty.handler.codec.MessageToByteEncoder encoder;
private final io.netty.handler.codec.ByteToMessageDecoder decoder;
protected void <init>()
{
io.netty.handler.codec.ByteToMessageCodec v0;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageCodec: void <init>(boolean)>(1);
return;
}
protected void <init>(java.lang.Class)
{
io.netty.handler.codec.ByteToMessageCodec v0;
java.lang.Class v1;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageCodec: void <init>(java.lang.Class,boolean)>(v1, 1);
return;
}
protected void <init>(boolean)
{
io.netty.handler.codec.ByteToMessageCodec$1 v2;
io.netty.handler.codec.ByteToMessageCodec$Encoder v4;
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.util.internal.TypeParameterMatcher v3;
boolean v1;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void <init>()>();
v2 = new io.netty.handler.codec.ByteToMessageCodec$1;
specialinvoke v2.<io.netty.handler.codec.ByteToMessageCodec$1: void <init>(io.netty.handler.codec.ByteToMessageCodec)>(v0);
v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder> = v2;
virtualinvoke v0.<io.netty.handler.codec.ByteToMessageCodec: void ensureNotSharable()>();
v3 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher find(java.lang.Object,java.lang.Class,java.lang.String)>(v0, class "Lio/netty/handler/codec/ByteToMessageCodec;", "I");
v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher> = v3;
v4 = new io.netty.handler.codec.ByteToMessageCodec$Encoder;
specialinvoke v4.<io.netty.handler.codec.ByteToMessageCodec$Encoder: void <init>(io.netty.handler.codec.ByteToMessageCodec,boolean)>(v0, v1);
v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder> = v4;
return;
}
protected void <init>(java.lang.Class, boolean)
{
io.netty.handler.codec.ByteToMessageCodec$1 v3;
io.netty.handler.codec.ByteToMessageCodec$Encoder v5;
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.util.internal.TypeParameterMatcher v4;
java.lang.Class v1;
boolean v2;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void <init>()>();
v3 = new io.netty.handler.codec.ByteToMessageCodec$1;
specialinvoke v3.<io.netty.handler.codec.ByteToMessageCodec$1: void <init>(io.netty.handler.codec.ByteToMessageCodec)>(v0);
v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder> = v3;
virtualinvoke v0.<io.netty.handler.codec.ByteToMessageCodec: void ensureNotSharable()>();
v4 = staticinvoke <io.netty.util.internal.TypeParameterMatcher: io.netty.util.internal.TypeParameterMatcher get(java.lang.Class)>(v1);
v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher> = v4;
v5 = new io.netty.handler.codec.ByteToMessageCodec$Encoder;
specialinvoke v5.<io.netty.handler.codec.ByteToMessageCodec$Encoder: void <init>(io.netty.handler.codec.ByteToMessageCodec,boolean)>(v0, v2);
v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder> = v5;
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.util.internal.TypeParameterMatcher v2;
java.lang.Object v1;
boolean v3;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.util.internal.TypeParameterMatcher outboundMsgMatcher>;
v3 = virtualinvoke v2.<io.netty.util.internal.TypeParameterMatcher: boolean match(java.lang.Object)>(v1);
return v3;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ByteToMessageCodec v0;
java.lang.Object v2;
io.netty.handler.codec.ByteToMessageDecoder v3;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder>;
virtualinvoke v3.<io.netty.handler.codec.ByteToMessageDecoder: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
io.netty.handler.codec.ByteToMessageCodec v0;
java.lang.Object v2;
io.netty.handler.codec.MessageToByteEncoder v4;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder>;
virtualinvoke v4.<io.netty.handler.codec.MessageToByteEncoder: void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)>(v1, v2, v3);
return;
}
public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.handler.codec.ByteToMessageDecoder v2;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder>;
virtualinvoke v2.<io.netty.handler.codec.ByteToMessageDecoder: void channelReadComplete(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.handler.codec.ByteToMessageDecoder v2;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder>;
virtualinvoke v2.<io.netty.handler.codec.ByteToMessageDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.handler.codec.ByteToMessageDecoder v2;
io.netty.handler.codec.MessageToByteEncoder v3, v5;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
v2 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder>;
virtualinvoke v2.<io.netty.handler.codec.ByteToMessageDecoder: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
label2:
v3 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToByteEncoder: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
goto label4;
label3:
v4 := @caughtexception;
v5 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder>;
virtualinvoke v5.<io.netty.handler.codec.MessageToByteEncoder: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ByteToMessageCodec v0;
io.netty.handler.codec.ByteToMessageDecoder v2;
io.netty.handler.codec.MessageToByteEncoder v3, v5;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
v2 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.ByteToMessageDecoder decoder>;
virtualinvoke v2.<io.netty.handler.codec.ByteToMessageDecoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
label2:
v3 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToByteEncoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
goto label4;
label3:
v4 := @caughtexception;
v5 = v0.<io.netty.handler.codec.ByteToMessageCodec: io.netty.handler.codec.MessageToByteEncoder encoder>;
virtualinvoke v5.<io.netty.handler.codec.MessageToByteEncoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
protected abstract void encode(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.buffer.ByteBuf) throws java.lang.Exception;
protected abstract void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception;
protected void decodeLast(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.ByteToMessageCodec v0;
boolean v4;
v0 := @this: io.netty.handler.codec.ByteToMessageCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 == 0 goto label1;
virtualinvoke v0.<io.netty.handler.codec.ByteToMessageCodec: void decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)>(v1, v2, v3);
label1:
return;
}
}