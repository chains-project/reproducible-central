public class io.netty.handler.codec.DatagramPacketEncoder extends io.netty.handler.codec.MessageToMessageEncoder
{
private final io.netty.handler.codec.MessageToMessageEncoder encoder;
static final boolean $assertionsDisabled;
public void <init>(io.netty.handler.codec.MessageToMessageEncoder)
{
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v1;
java.lang.Object v2;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.handler.codec.MessageToMessageEncoder;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageEncoder: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "encoder");
v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder> = v2;
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
java.net.SocketAddress v6, v8, v9;
io.netty.handler.codec.MessageToMessageEncoder v3;
io.netty.handler.codec.DatagramPacketEncoder v0;
java.lang.Object v1, v4;
boolean v10, v11, v2, v5, v7;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<io.netty.handler.codec.MessageToMessageEncoder: boolean acceptOutboundMessage(java.lang.Object)>(v1);
if v2 == 0 goto label4;
v3 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
v4 = interfaceinvoke v1.<io.netty.channel.AddressedEnvelope: java.lang.Object content()>();
v5 = virtualinvoke v3.<io.netty.handler.codec.MessageToMessageEncoder: boolean acceptOutboundMessage(java.lang.Object)>(v4);
if v5 == 0 goto label2;
v6 = interfaceinvoke v1.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress sender()>();
v7 = v6 instanceof java.net.InetSocketAddress;
if v7 != 0 goto label1;
v8 = interfaceinvoke v1.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress sender()>();
if v8 != null goto label2;
label1:
v9 = interfaceinvoke v1.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress recipient()>();
v10 = v9 instanceof java.net.InetSocketAddress;
if v10 == 0 goto label2;
v11 = 1;
goto label3;
label2:
v11 = 0;
label3:
return v11;
label4:
return 0;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.channel.AddressedEnvelope, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.EncoderException v10, v19;
java.net.SocketAddress v17, v18;
io.netty.handler.codec.MessageToMessageEncoder v11, v20, v7;
java.lang.AssertionError v6;
io.netty.channel.AddressedEnvelope v2;
io.netty.channel.ChannelHandlerContext v1;
int v9;
io.netty.channel.socket.DatagramPacket v16;
java.lang.String v12, v13, v21, v22;
boolean v15, v4, v5;
java.util.List v3;
io.netty.handler.codec.DatagramPacketEncoder v0;
java.lang.Object v14, v8;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.AddressedEnvelope;
v3 := @parameter2: java.util.List;
v4 = <io.netty.handler.codec.DatagramPacketEncoder: boolean $assertionsDisabled>;
if v4 != 0 goto label1;
v5 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = new java.lang.AssertionError;
specialinvoke v6.<java.lang.AssertionError: void <init>()>();
throw v6;
label1:
v7 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
v8 = interfaceinvoke v2.<io.netty.channel.AddressedEnvelope: java.lang.Object content()>();
virtualinvoke v7.<io.netty.handler.codec.MessageToMessageEncoder: void encode(io.netty.channel.ChannelHandlerContext,java.lang.Object,java.util.List)>(v1, v8, v3);
v9 = interfaceinvoke v3.<java.util.List: int size()>();
if v9 == 1 goto label2;
v10 = new io.netty.handler.codec.EncoderException;
v11 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
v12 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v11);
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 must produce only one message.");
specialinvoke v10.<io.netty.handler.codec.EncoderException: void <init>(java.lang.String)>(v13);
throw v10;
label2:
v14 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(0);
v15 = v14 instanceof io.netty.buffer.ByteBuf;
if v15 == 0 goto label3;
v16 = new io.netty.channel.socket.DatagramPacket;
v17 = interfaceinvoke v2.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress recipient()>();
v18 = interfaceinvoke v2.<io.netty.channel.AddressedEnvelope: java.net.SocketAddress sender()>();
specialinvoke v16.<io.netty.channel.socket.DatagramPacket: void <init>(io.netty.buffer.ByteBuf,java.net.InetSocketAddress,java.net.InetSocketAddress)>(v14, v17, v18);
interfaceinvoke v3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(0, v16);
goto label4;
label3:
v19 = new io.netty.handler.codec.EncoderException;
v20 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
v21 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v20);
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v21) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 must produce only ByteBuf.");
specialinvoke v19.<io.netty.handler.codec.EncoderException: void <init>(java.lang.String)>(v22);
throw v19;
label4:
return;
}
public void bind(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
java.net.SocketAddress v2;
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v4;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v4.<io.netty.handler.codec.MessageToMessageEncoder: void bind(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v1, v2, v3);
return;
}
public void connect(io.netty.channel.ChannelHandlerContext, java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v4;
java.net.SocketAddress v2, v3;
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v5;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: java.net.SocketAddress;
v4 := @parameter3: io.netty.channel.ChannelPromise;
v5 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v5.<io.netty.handler.codec.MessageToMessageEncoder: void connect(io.netty.channel.ChannelHandlerContext,java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v1, v2, v3, v4);
return;
}
public void disconnect(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v3;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToMessageEncoder: void disconnect(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v2);
return;
}
public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v3;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToMessageEncoder: void close(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v2);
return;
}
public void deregister(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v3;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToMessageEncoder: void deregister(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v2);
return;
}
public void read(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v2;
io.netty.channel.ChannelHandlerContext v1;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v2.<io.netty.handler.codec.MessageToMessageEncoder: void read(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v2;
io.netty.channel.ChannelHandlerContext v1;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v2.<io.netty.handler.codec.MessageToMessageEncoder: void flush(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v2;
io.netty.channel.ChannelHandlerContext v1;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v2.<io.netty.handler.codec.MessageToMessageEncoder: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v2;
io.netty.channel.ChannelHandlerContext v1;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v2.<io.netty.handler.codec.MessageToMessageEncoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v3;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
virtualinvoke v3.<io.netty.handler.codec.MessageToMessageEncoder: void exceptionCaught(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)>(v1, v2);
return;
}
public boolean isSharable()
{
io.netty.handler.codec.DatagramPacketEncoder v0;
io.netty.handler.codec.MessageToMessageEncoder v1;
boolean v2;
v0 := @this: io.netty.handler.codec.DatagramPacketEncoder;
v1 = v0.<io.netty.handler.codec.DatagramPacketEncoder: io.netty.handler.codec.MessageToMessageEncoder encoder>;
v2 = virtualinvoke v1.<io.netty.handler.codec.MessageToMessageEncoder: boolean isSharable()>();
return v2;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/DatagramPacketEncoder;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.DatagramPacketEncoder: boolean $assertionsDisabled> = v2;
return;
}
}