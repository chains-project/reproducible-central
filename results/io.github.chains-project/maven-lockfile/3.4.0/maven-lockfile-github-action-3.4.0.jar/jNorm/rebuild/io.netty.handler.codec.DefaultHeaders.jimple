public class io.netty.handler.codec.DefaultHeaders extends java.lang.Object implements io.netty.handler.codec.Headers
{
static final int HASH_CODE_SEED;
private final io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries;
protected final io.netty.handler.codec.DefaultHeaders$HeaderEntry head;
private final byte hashMask;
private final io.netty.handler.codec.ValueConverter valueConverter;
private final io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator;
private final io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator;
private final io.netty.util.HashingStrategy hashingStrategy;
int size;
static final boolean $assertionsDisabled;
public void <init>(io.netty.handler.codec.ValueConverter)
{
io.netty.util.HashingStrategy v2;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.ValueConverter v1;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.ValueConverter;
v2 = <io.netty.util.HashingStrategy: io.netty.util.HashingStrategy JAVA_HASHER>;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter)>(v2, v1);
return;
}
public void <init>(io.netty.handler.codec.ValueConverter, io.netty.handler.codec.DefaultHeaders$NameValidator)
{
io.netty.util.HashingStrategy v3;
io.netty.handler.codec.ValueConverter v1;
io.netty.handler.codec.DefaultHeaders$NameValidator v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.ValueConverter;
v2 := @parameter1: io.netty.handler.codec.DefaultHeaders$NameValidator;
v3 = <io.netty.util.HashingStrategy: io.netty.util.HashingStrategy JAVA_HASHER>;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator)>(v3, v1, v2);
return;
}
public void <init>(io.netty.util.HashingStrategy, io.netty.handler.codec.ValueConverter)
{
io.netty.util.HashingStrategy v1;
io.netty.handler.codec.ValueConverter v2;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.util.HashingStrategy;
v2 := @parameter1: io.netty.handler.codec.ValueConverter;
v3 = <io.netty.handler.codec.DefaultHeaders$NameValidator: io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL>;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator)>(v1, v2, v3);
return;
}
public void <init>(io.netty.util.HashingStrategy, io.netty.handler.codec.ValueConverter, io.netty.handler.codec.DefaultHeaders$NameValidator)
{
io.netty.util.HashingStrategy v1;
io.netty.handler.codec.ValueConverter v2;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.util.HashingStrategy;
v2 := @parameter1: io.netty.handler.codec.ValueConverter;
v3 := @parameter2: io.netty.handler.codec.DefaultHeaders$NameValidator;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int)>(v1, v2, v3, 16);
return;
}
public void <init>(io.netty.util.HashingStrategy, io.netty.handler.codec.ValueConverter, io.netty.handler.codec.DefaultHeaders$NameValidator, int)
{
io.netty.util.HashingStrategy v1;
io.netty.handler.codec.ValueConverter v2;
int v4;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
io.netty.handler.codec.DefaultHeaders$ValueValidator v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.util.HashingStrategy;
v2 := @parameter1: io.netty.handler.codec.ValueConverter;
v3 := @parameter2: io.netty.handler.codec.DefaultHeaders$NameValidator;
v4 := @parameter3: int;
v5 = <io.netty.handler.codec.DefaultHeaders$ValueValidator: io.netty.handler.codec.DefaultHeaders$ValueValidator NO_VALIDATION>;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int,io.netty.handler.codec.DefaultHeaders$ValueValidator)>(v1, v2, v3, v4, v5);
return;
}
public void <init>(io.netty.util.HashingStrategy, io.netty.handler.codec.ValueConverter, io.netty.handler.codec.DefaultHeaders$NameValidator, int, io.netty.handler.codec.DefaultHeaders$ValueValidator)
{
io.netty.util.HashingStrategy v1;
int v10, v11, v12, v15, v16, v4;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
io.netty.handler.codec.DefaultHeaders$ValueValidator v5;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v17;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v13, v14;
io.netty.handler.codec.ValueConverter v2;
java.lang.Object v6, v7, v8, v9;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.util.HashingStrategy;
v2 := @parameter1: io.netty.handler.codec.ValueConverter;
v3 := @parameter2: io.netty.handler.codec.DefaultHeaders$NameValidator;
v4 := @parameter3: int;
v5 := @parameter4: io.netty.handler.codec.DefaultHeaders$ValueValidator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "valueConverter");
v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter> = v6;
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "nameValidator");
v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator> = v7;
v8 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "nameHashingStrategy");
v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy> = v8;
v9 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v5, "valueValidator");
v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator> = v9;
v10 = staticinvoke <java.lang.Math: int min(int,int)>(v4, 128);
v11 = staticinvoke <java.lang.Math: int max(int,int)>(2, v10);
v12 = staticinvoke <io.netty.util.internal.MathUtil: int findNextPositivePowerOfTwo(int)>(v11);
v13 = newarray (io.netty.handler.codec.DefaultHeaders$HeaderEntry)[v12];
v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries> = v13;
v14 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v15 = lengthof v14;
v16 = v15 - 1;
v0.<io.netty.handler.codec.DefaultHeaders: byte hashMask> = v16;
v17 = new io.netty.handler.codec.DefaultHeaders$HeaderEntry;
specialinvoke v17.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: void <init>()>();
v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head> = v17;
return;
}
public java.lang.Object get(java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v5;
io.netty.util.HashingStrategy v2, v9;
int v3, v4, v8;
java.lang.Object v1, v10, v7;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v6;
boolean v11;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
v2 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v3 = interfaceinvoke v2.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v4 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v3);
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v6 = v5[v4];
v7 = null;
label1:
if v6 == null goto label3;
v8 = v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
if v8 != v3 goto label2;
v9 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v10 = v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v11 = interfaceinvoke v9.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v1, v10);
if v11 == 0 goto label2;
v7 = v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object value>;
label2:
v6 = v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
goto label1;
label3:
return v7;
}
public java.lang.Object get(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
return v2;
label1:
return v3;
}
public java.lang.Object getAndRemove(java.lang.Object)
{
io.netty.util.HashingStrategy v2;
int v3, v4;
java.lang.Object v1, v5, v6;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v3 = interfaceinvoke v2.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v4 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v3);
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object remove0(int,int,java.lang.Object)>(v3, v4, v5);
return v6;
}
public java.lang.Object getAndRemove(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
if v3 != null goto label1;
return v2;
label1:
return v3;
}
public java.util.List getAll(java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v6;
io.netty.util.HashingStrategy v3, v9;
int v4, v5, v8;
java.lang.Object v1, v10, v12;
java.util.LinkedList v2;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v7;
boolean v11;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
v2 = new java.util.LinkedList;
specialinvoke v2.<java.util.LinkedList: void <init>()>();
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v4 = interfaceinvoke v3.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v5 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v4);
v6 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v7 = v6[v5];
label1:
if v7 == null goto label3;
v8 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
if v8 != v4 goto label2;
v9 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v10 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v11 = interfaceinvoke v9.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v1, v10);
if v11 == 0 goto label2;
v12 = virtualinvoke v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object getValue()>();
virtualinvoke v2.<java.util.LinkedList: void addFirst(java.lang.Object)>(v12);
label2:
v7 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
goto label1;
label3:
return v2;
}
public java.util.Iterator valueIterator(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$ValueIterator v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = new io.netty.handler.codec.DefaultHeaders$ValueIterator;
specialinvoke v2.<io.netty.handler.codec.DefaultHeaders$ValueIterator: void <init>(io.netty.handler.codec.DefaultHeaders,java.lang.Object)>(v0, v1);
return v2;
}
public java.util.List getAllAndRemove(java.lang.Object)
{
java.lang.Object v1;
java.util.List v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.util.List getAll(java.lang.Object)>(v1);
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean remove(java.lang.Object)>(v1);
return v2;
}
public boolean contains(java.lang.Object)
{
java.lang.Object v1, v2;
io.netty.handler.codec.DefaultHeaders v0;
boolean v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
if v2 == null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean containsObject(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromObject(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsBoolean(java.lang.Object, boolean)
{
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromBoolean(java.lang.Object,boolean)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsByte(java.lang.Object, byte)
{
byte v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: byte;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromByte(java.lang.Object,byte)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsChar(java.lang.Object, char)
{
char v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: char;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromChar(java.lang.Object,char)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsShort(java.lang.Object, short)
{
short v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: short;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromShort(java.lang.Object,short)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsInt(java.lang.Object, int)
{
int v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromInt(java.lang.Object,int)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsLong(java.lang.Object, long)
{
java.lang.Object v1, v3;
long v2;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromLong(java.lang.Object,long)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsFloat(java.lang.Object, float)
{
float v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: float;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromFloat(java.lang.Object,float)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsDouble(java.lang.Object, double)
{
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
double v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: double;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromDouble(java.lang.Object,double)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean containsTimeMillis(java.lang.Object, long)
{
java.lang.Object v1, v3;
long v2;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromTimeMillis(java.lang.Object,long)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public boolean contains(java.lang.Object, java.lang.Object)
{
io.netty.util.HashingStrategy v3;
java.lang.Object v1, v2;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = <io.netty.util.HashingStrategy: io.netty.util.HashingStrategy JAVA_HASHER>;
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean contains(java.lang.Object,java.lang.Object,io.netty.util.HashingStrategy)>(v1, v2, v3);
return v4;
}
public final boolean contains(java.lang.Object, java.lang.Object, io.netty.util.HashingStrategy)
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v7;
io.netty.util.HashingStrategy v10, v3, v4;
int v5, v6, v9;
java.lang.Object v1, v11, v13, v2;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v8;
boolean v12, v14;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.util.HashingStrategy;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
v7 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v8 = v7[v6];
label1:
if v8 == null goto label3;
v9 = v8.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
if v9 != v5 goto label2;
v10 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v11 = v8.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v12 = interfaceinvoke v10.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v1, v11);
if v12 == 0 goto label2;
v13 = v8.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object value>;
v14 = interfaceinvoke v3.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v2, v13);
if v14 == 0 goto label2;
return 1;
label2:
v8 = v8.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
goto label1;
label3:
return 0;
}
public int size()
{
int v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = v0.<io.netty.handler.codec.DefaultHeaders: int size>;
return v1;
}
public boolean isEmpty()
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v1, v2, v3;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v2 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v3 = v2.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after>;
if v1 != v3 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public java.util.Set names()
{
java.util.Set v2;
io.netty.handler.codec.DefaultHeaders v0;
int v4;
java.lang.Object v8;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v5, v6, v7;
java.util.LinkedHashSet v3;
boolean v1;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean isEmpty()>();
if v1 == 0 goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v2;
label1:
v3 = new java.util.LinkedHashSet;
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: int size()>();
specialinvoke v3.<java.util.LinkedHashSet: void <init>(int)>(v4);
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v6 = v5.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after>;
label2:
v7 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
if v6 == v7 goto label3;
v8 = virtualinvoke v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object getKey()>();
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>(v8);
v6 = v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after>;
goto label2;
label3:
return v3;
}
public io.netty.handler.codec.Headers add(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v8;
io.netty.util.HashingStrategy v5;
int v6, v7;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v2;
io.netty.handler.codec.DefaultHeaders$ValueValidator v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 1, v1);
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v4, v1, v2);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "value");
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v6 = interfaceinvoke v5.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v7 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v6);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v6, v7, v1, v2);
v8 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v8;
}
public io.netty.handler.codec.Headers add(java.lang.Object, java.lang.Iterable)
{
java.util.Iterator v7;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Iterable v2;
io.netty.handler.codec.Headers v11;
io.netty.util.HashingStrategy v4;
int v5, v6;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v9;
io.netty.handler.codec.DefaultHeaders$ValueValidator v10;
boolean v8;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 1, v1);
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
v7 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label2;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v10, v1, v9);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v5, v6, v1, v9);
goto label1;
label2:
v11 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v11;
}
public transient io.netty.handler.codec.Headers add(java.lang.Object, java.lang.Object[])
{
java.lang.Object[] v2;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v11;
io.netty.util.HashingStrategy v4;
int v5, v6, v7, v8;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v9;
io.netty.handler.codec.DefaultHeaders$ValueValidator v10;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 1, v1);
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
v7 = lengthof v2;
v8 = 0;
label1:
if v8 >= v7 goto label2;
v9 = v2[v8];
v10 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v10, v1, v9);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v5, v6, v1, v9);
v8 = v8 + 1;
goto label1;
label2:
v11 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v11;
}
public io.netty.handler.codec.Headers addObject(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v2, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromObject(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addObject(java.lang.Object, java.lang.Iterable)
{
io.netty.handler.codec.Headers v6;
java.util.Iterator v3;
java.lang.Object v1, v5;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Iterable v2;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Iterable;
v3 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object)>(v1, v5);
goto label1;
label2:
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v6;
}
public transient io.netty.handler.codec.Headers addObject(java.lang.Object, java.lang.Object[])
{
io.netty.handler.codec.Headers v6;
java.lang.Object[] v2;
int v3, v4;
java.lang.Object v1, v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers addObject(java.lang.Object,java.lang.Object)>(v1, v5);
v4 = v4 + 1;
goto label1;
label2:
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v6;
}
public io.netty.handler.codec.Headers addInt(java.lang.Object, int)
{
io.netty.handler.codec.Headers v4;
int v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromInt(java.lang.Object,int)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addLong(java.lang.Object, long)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
long v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromLong(java.lang.Object,long)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addDouble(java.lang.Object, double)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
double v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: double;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromDouble(java.lang.Object,double)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addTimeMillis(java.lang.Object, long)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
long v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromTimeMillis(java.lang.Object,long)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addChar(java.lang.Object, char)
{
io.netty.handler.codec.Headers v4;
char v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: char;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromChar(java.lang.Object,char)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addBoolean(java.lang.Object, boolean)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromBoolean(java.lang.Object,boolean)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addFloat(java.lang.Object, float)
{
io.netty.handler.codec.Headers v4;
float v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: float;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromFloat(java.lang.Object,float)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addByte(java.lang.Object, byte)
{
io.netty.handler.codec.Headers v4;
byte v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: byte;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromByte(java.lang.Object,byte)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers addShort(java.lang.Object, short)
{
io.netty.handler.codec.Headers v4;
short v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: short;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromShort(java.lang.Object,short)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers add(io.netty.handler.codec.Headers)
{
io.netty.handler.codec.Headers v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.Headers;
if v1 != v0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("can\'t add to itself.");
throw v2;
label1:
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void addImpl(io.netty.handler.codec.Headers)>(v1);
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v3;
}
protected void addImpl(io.netty.handler.codec.Headers)
{
io.netty.util.HashingStrategy v5, v6;
int v10, v11, v12;
io.netty.handler.codec.DefaultHeaders$NameValidator v7, v8;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v15, v3, v4, v9;
boolean v19, v2;
java.util.Iterator v18;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v1;
java.lang.Object v13, v14, v16, v17, v20, v21, v22;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.Headers;
v2 = v1 instanceof io.netty.handler.codec.DefaultHeaders;
if v2 == 0 goto label3;
v3 = v1.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v4 = v3.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after>;
v5 = v1.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v6 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
if v5 != v6 goto label2;
v7 = v1.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
v8 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
if v7 != v8 goto label2;
label1:
v9 = v1.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
if v4 == v9 goto label5;
v10 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
v11 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
v12 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v11);
v13 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v14 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object value>;
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v10, v12, v13, v14);
v4 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after>;
goto label1;
label2:
v15 = v1.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
if v4 == v15 goto label5;
v16 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v17 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object value>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v16, v17);
v4 = v4.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after>;
goto label2;
label3:
v18 = interfaceinvoke v1.<io.netty.handler.codec.Headers: java.util.Iterator iterator()>();
label4:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label5;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = interfaceinvoke v20.<java.util.Map$Entry: java.lang.Object getKey()>();
v22 = interfaceinvoke v20.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v21, v22);
goto label4;
label5:
return;
}
public io.netty.handler.codec.Headers set(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v8;
io.netty.util.HashingStrategy v5;
int v6, v7;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v2;
io.netty.handler.codec.DefaultHeaders$ValueValidator v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 0, v1);
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v4, v1, v2);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "value");
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v6 = interfaceinvoke v5.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v7 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v6);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object remove0(int,int,java.lang.Object)>(v6, v7, v1);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v6, v7, v1, v2);
v8 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v8;
}
public io.netty.handler.codec.Headers set(java.lang.Object, java.lang.Iterable)
{
java.util.Iterator v7;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Iterable v2;
io.netty.handler.codec.Headers v11;
io.netty.util.HashingStrategy v4;
int v5, v6;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v9;
io.netty.handler.codec.DefaultHeaders$ValueValidator v10;
boolean v8;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 0, v1);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "values");
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object remove0(int,int,java.lang.Object)>(v5, v6, v1);
v7 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label2;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
if v9 == null goto label2;
v10 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v10, v1, v9);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v5, v6, v1, v9);
goto label1;
label2:
v11 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v11;
}
public transient io.netty.handler.codec.Headers set(java.lang.Object, java.lang.Object[])
{
java.lang.Object[] v2;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v11;
io.netty.util.HashingStrategy v4;
int v5, v6, v7, v8;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v9;
io.netty.handler.codec.DefaultHeaders$ValueValidator v10;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 0, v1);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "values");
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object remove0(int,int,java.lang.Object)>(v5, v6, v1);
v7 = lengthof v2;
v8 = 0;
label1:
if v8 >= v7 goto label2;
v9 = v2[v8];
if v9 == null goto label2;
v10 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v10, v1, v9);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v5, v6, v1, v9);
v8 = v8 + 1;
goto label1;
label2:
v11 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v11;
}
public io.netty.handler.codec.Headers setObject(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.Headers v5;
java.lang.Object v1, v2, v3, v4;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromObject(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "convertedValue");
v5 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v4);
return v5;
}
public io.netty.handler.codec.Headers setObject(java.lang.Object, java.lang.Iterable)
{
java.util.Iterator v7;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Iterable v2;
io.netty.handler.codec.Headers v12;
io.netty.util.HashingStrategy v4;
int v5, v6;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v10, v9;
io.netty.handler.codec.DefaultHeaders$ValueValidator v11;
boolean v8;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 0, v1);
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object remove0(int,int,java.lang.Object)>(v5, v6, v1);
v7 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label2;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
if v9 == null goto label2;
v10 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromObject(java.lang.Object,java.lang.Object)>(v1, v9);
v11 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v11, v1, v10);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v5, v6, v1, v10);
goto label1;
label2:
v12 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v12;
}
public transient io.netty.handler.codec.Headers setObject(java.lang.Object, java.lang.Object[])
{
java.lang.Object[] v2;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v12;
io.netty.util.HashingStrategy v4;
int v5, v6, v7, v8;
io.netty.handler.codec.DefaultHeaders$NameValidator v3;
java.lang.Object v1, v10, v9;
io.netty.handler.codec.DefaultHeaders$ValueValidator v11;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator,boolean,java.lang.Object)>(v3, 0, v1);
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v5 = interfaceinvoke v4.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v1);
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v5);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object remove0(int,int,java.lang.Object)>(v5, v6, v1);
v7 = lengthof v2;
v8 = 0;
label1:
if v8 >= v7 goto label2;
v9 = v2[v8];
if v9 == null goto label2;
v10 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromObject(java.lang.Object,java.lang.Object)>(v1, v9);
v11 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator,java.lang.Object,java.lang.Object)>(v11, v1, v10);
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void add0(int,int,java.lang.Object,java.lang.Object)>(v5, v6, v1, v10);
v8 = v8 + 1;
goto label1;
label2:
v12 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v12;
}
public io.netty.handler.codec.Headers setInt(java.lang.Object, int)
{
io.netty.handler.codec.Headers v4;
int v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromInt(java.lang.Object,int)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setLong(java.lang.Object, long)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
long v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromLong(java.lang.Object,long)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setDouble(java.lang.Object, double)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
double v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: double;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromDouble(java.lang.Object,double)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setTimeMillis(java.lang.Object, long)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
long v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromTimeMillis(java.lang.Object,long)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setFloat(java.lang.Object, float)
{
io.netty.handler.codec.Headers v4;
float v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: float;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromFloat(java.lang.Object,float)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setChar(java.lang.Object, char)
{
io.netty.handler.codec.Headers v4;
char v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: char;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromChar(java.lang.Object,char)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setBoolean(java.lang.Object, boolean)
{
io.netty.handler.codec.Headers v4;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromBoolean(java.lang.Object,boolean)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setByte(java.lang.Object, byte)
{
io.netty.handler.codec.Headers v4;
byte v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: byte;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromByte(java.lang.Object,byte)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers setShort(java.lang.Object, short)
{
io.netty.handler.codec.Headers v4;
short v2;
java.lang.Object v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: short;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object fromShort(java.lang.Object,short)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers set(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
public io.netty.handler.codec.Headers set(io.netty.handler.codec.Headers)
{
io.netty.handler.codec.Headers v1, v2;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.Headers;
if v1 == v0 goto label1;
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers clear()>();
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void addImpl(io.netty.handler.codec.Headers)>(v1);
label1:
v2 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v2;
}
public io.netty.handler.codec.Headers setAll(io.netty.handler.codec.Headers)
{
io.netty.handler.codec.Headers v1, v6;
java.util.Iterator v3;
java.util.Set v2;
java.lang.Object v5;
io.netty.handler.codec.DefaultHeaders v0;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.Headers;
if v1 == v0 goto label3;
v2 = interfaceinvoke v1.<io.netty.handler.codec.Headers: java.util.Set names()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean remove(java.lang.Object)>(v5);
goto label1;
label2:
virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: void addImpl(io.netty.handler.codec.Headers)>(v1);
label3:
v6 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v6;
}
public boolean remove(java.lang.Object)
{
java.lang.Object v1, v2;
io.netty.handler.codec.DefaultHeaders v0;
boolean v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
if v2 == null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public io.netty.handler.codec.Headers clear()
{
io.netty.handler.codec.Headers v5;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v2, v3, v4;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v1;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>(v1, null);
v2 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
v3.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry after> = v4;
v2.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry before> = v4;
v0.<io.netty.handler.codec.DefaultHeaders: int size> = 0;
v5 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.Headers thisT()>();
return v5;
}
public java.util.Iterator iterator()
{
io.netty.handler.codec.DefaultHeaders$HeaderIterator v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = new io.netty.handler.codec.DefaultHeaders$HeaderIterator;
specialinvoke v1.<io.netty.handler.codec.DefaultHeaders$HeaderIterator: void <init>(io.netty.handler.codec.DefaultHeaders)>(v0);
return v1;
}
public java.lang.Boolean getBoolean(java.lang.Object)
{
java.lang.Boolean v4;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
boolean v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean toBoolean(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public boolean getBoolean(java.lang.Object, boolean)
{
java.lang.Boolean v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Boolean getBoolean(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Byte getByte(java.lang.Object)
{
byte v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Byte v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: byte toByte(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public byte getByte(java.lang.Object, byte)
{
byte v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Byte v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: byte;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Byte getByte(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Byte: byte byteValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Character getChar(java.lang.Object)
{
java.lang.Character v4;
char v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: char toChar(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public char getChar(java.lang.Object, char)
{
java.lang.Character v3;
char v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: char;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Character getChar(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Character: char charValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Short getShort(java.lang.Object)
{
short v3;
java.lang.Short v4;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: short toShort(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public short getShort(java.lang.Object, short)
{
short v2, v4;
java.lang.Short v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: short;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Short getShort(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Short: short shortValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Integer getInt(java.lang.Object)
{
int v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Integer v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int toInt(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public int getInt(java.lang.Object, int)
{
int v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Integer v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Integer getInt(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Integer: int intValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Long getLong(java.lang.Object)
{
java.lang.Long v4;
java.lang.Object v1, v2;
long v3;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: long toLong(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public long getLong(java.lang.Object, long)
{
java.lang.Long v3;
java.lang.Object v1;
long v2, v4;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Long getLong(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Long: long longValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Float getFloat(java.lang.Object)
{
java.lang.Float v4;
float v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: float toFloat(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public float getFloat(java.lang.Object, float)
{
java.lang.Float v3;
float v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: float;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Float getFloat(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Float: float floatValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Double getDouble(java.lang.Object)
{
java.lang.Double v4;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
double v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: double toDouble(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public double getDouble(java.lang.Object, double)
{
java.lang.Double v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
double v2, v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: double;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Double getDouble(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Double: double doubleValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Long getTimeMillis(java.lang.Object)
{
java.lang.Long v4;
java.lang.Object v1, v2;
long v3;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object get(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: long toTimeMillis(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public long getTimeMillis(java.lang.Object, long)
{
java.lang.Long v3;
java.lang.Object v1;
long v2, v4;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Long getTimeMillis(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Long: long longValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Boolean getBooleanAndRemove(java.lang.Object)
{
java.lang.Boolean v4;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
boolean v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean toBoolean(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public boolean getBooleanAndRemove(java.lang.Object, boolean)
{
java.lang.Boolean v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Boolean getBooleanAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Byte getByteAndRemove(java.lang.Object)
{
byte v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Byte v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: byte toByte(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Byte: java.lang.Byte valueOf(byte)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public byte getByteAndRemove(java.lang.Object, byte)
{
byte v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Byte v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: byte;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Byte getByteAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Byte: byte byteValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Character getCharAndRemove(java.lang.Object)
{
java.lang.Character v4;
char v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: char toChar(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public char getCharAndRemove(java.lang.Object, char)
{
java.lang.Character v3;
char v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: char;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Character getCharAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Character: char charValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Short getShortAndRemove(java.lang.Object)
{
short v3;
java.lang.Short v4;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: short toShort(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public short getShortAndRemove(java.lang.Object, short)
{
short v2, v4;
java.lang.Short v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: short;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Short getShortAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Short: short shortValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Integer getIntAndRemove(java.lang.Object)
{
int v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Integer v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int toInt(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public int getIntAndRemove(java.lang.Object, int)
{
int v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.Integer v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Integer getIntAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Integer: int intValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Long getLongAndRemove(java.lang.Object)
{
java.lang.Long v4;
java.lang.Object v1, v2;
long v3;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: long toLong(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public long getLongAndRemove(java.lang.Object, long)
{
java.lang.Long v3;
java.lang.Object v1;
long v2, v4;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Long getLongAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Long: long longValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Float getFloatAndRemove(java.lang.Object)
{
java.lang.Float v4;
float v3;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: float toFloat(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public float getFloatAndRemove(java.lang.Object, float)
{
java.lang.Float v3;
float v2, v4;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: float;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Float getFloatAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Float: float floatValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Double getDoubleAndRemove(java.lang.Object)
{
java.lang.Double v4;
java.lang.Object v1, v2;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
double v3;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: double toDouble(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public double getDoubleAndRemove(java.lang.Object, double)
{
java.lang.Double v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
double v2, v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: double;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Double getDoubleAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Double: double doubleValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public java.lang.Long getTimeMillisAndRemove(java.lang.Object)
{
java.lang.Long v4;
java.lang.Object v1, v2;
long v3;
java.lang.RuntimeException v5;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Object getAndRemove(java.lang.Object)>(v1);
label1:
if v2 == null goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: long toTimeMillis(java.lang.Object,java.lang.Object)>(v1, v2);
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v3);
goto label3;
label2:
v4 = null;
label3:
return v4;
label4:
v5 := @caughtexception;
return null;
catch java.lang.RuntimeException from label1 to label3 with label4;
}
public long getTimeMillisAndRemove(java.lang.Object, long)
{
java.lang.Long v3;
java.lang.Object v1;
long v2, v4;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.lang.Long getTimeMillisAndRemove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.Long: long longValue()>();
goto label2;
label1:
v4 = v2;
label2:
return v4;
}
public boolean equals(java.lang.Object)
{
io.netty.util.HashingStrategy v3;
java.lang.Object v1;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.Headers;
if v2 != 0 goto label1;
return 0;
label1:
v3 = <io.netty.util.HashingStrategy: io.netty.util.HashingStrategy JAVA_HASHER>;
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: boolean equals(io.netty.handler.codec.Headers,io.netty.util.HashingStrategy)>(v1, v3);
return v4;
}
public int hashCode()
{
int v2;
io.netty.util.HashingStrategy v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = <io.netty.util.HashingStrategy: io.netty.util.HashingStrategy JAVA_HASHER>;
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: int hashCode(io.netty.util.HashingStrategy)>(v1);
return v2;
}
public final boolean equals(io.netty.handler.codec.Headers, io.netty.util.HashingStrategy)
{
io.netty.util.HashingStrategy v2;
int v11, v12, v13, v14, v3, v4;
boolean v17, v7;
java.util.Iterator v6;
java.util.Set v5;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.Headers v1;
java.util.List v10, v9;
java.lang.Object v15, v16, v8;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.Headers;
v2 := @parameter1: io.netty.util.HashingStrategy;
v3 = interfaceinvoke v1.<io.netty.handler.codec.Headers: int size()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: int size()>();
if v3 == v4 goto label1;
return 0;
label1:
if v0 != v1 goto label2;
return 1;
label2:
v5 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.util.Set names()>();
v6 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
label3:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label7;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = interfaceinvoke v1.<io.netty.handler.codec.Headers: java.util.List getAll(java.lang.Object)>(v8);
v10 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.util.List getAll(java.lang.Object)>(v8);
v11 = interfaceinvoke v9.<java.util.List: int size()>();
v12 = interfaceinvoke v10.<java.util.List: int size()>();
if v11 == v12 goto label4;
return 0;
label4:
v13 = 0;
label5:
v14 = interfaceinvoke v9.<java.util.List: int size()>();
if v13 >= v14 goto label3;
v15 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(v13);
v16 = interfaceinvoke v10.<java.util.List: java.lang.Object get(int)>(v13);
v17 = interfaceinvoke v2.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v15, v16);
if v17 != 0 goto label6;
return 0;
label6:
v13 = v13 + 1;
goto label5;
label7:
return 1;
}
public final int hashCode(io.netty.util.HashingStrategy)
{
io.netty.util.HashingStrategy v1, v8;
int v11, v12, v13, v15, v2, v7, v9;
boolean v5;
java.util.Iterator v4;
java.util.Set v3;
io.netty.handler.codec.DefaultHeaders v0;
java.util.List v10;
java.lang.Object v14, v6;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.util.HashingStrategy;
v2 = -1028477387;
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.util.Set names()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = 31 * v2;
v8 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v9 = interfaceinvoke v8.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v6);
v2 = v7 + v9;
v10 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.util.List getAll(java.lang.Object)>(v6);
v11 = 0;
label2:
v12 = interfaceinvoke v10.<java.util.List: int size()>();
if v11 >= v12 goto label1;
v13 = 31 * v2;
v14 = interfaceinvoke v10.<java.util.List: java.lang.Object get(int)>(v11);
v15 = interfaceinvoke v1.<io.netty.util.HashingStrategy: int hashCode(java.lang.Object)>(v14);
v2 = v13 + v15;
v11 = v11 + 1;
goto label2;
label3:
return v2;
}
public java.lang.String toString()
{
java.util.Iterator v2;
int v3;
java.lang.Class v1;
java.lang.String v4;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: java.util.Iterator iterator()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: int size()>();
v4 = staticinvoke <io.netty.handler.codec.HeadersUtils: java.lang.String toString(java.lang.Class,java.util.Iterator,int)>(v1, v2, v3);
return v4;
}
protected void validateName(io.netty.handler.codec.DefaultHeaders$NameValidator, boolean, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders$NameValidator v1;
java.lang.Object v3;
io.netty.handler.codec.DefaultHeaders v0;
boolean v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.DefaultHeaders$NameValidator;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.Object;
interfaceinvoke v1.<io.netty.handler.codec.DefaultHeaders$NameValidator: void validateName(java.lang.Object)>(v3);
return;
}
protected void validateValue(io.netty.handler.codec.DefaultHeaders$ValueValidator, java.lang.Object, java.lang.Object)
{
java.lang.Object v2, v3;
io.netty.handler.codec.DefaultHeaders$ValueValidator v1;
java.lang.String v6;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v4, v5;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.DefaultHeaders$ValueValidator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
label1:
interfaceinvoke v1.<io.netty.handler.codec.DefaultHeaders$ValueValidator: void validate(java.lang.Object)>(v3);
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalArgumentException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Validation failed for header \'\u0001\'");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v6, v4);
throw v5;
label4:
return;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
protected io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int, java.lang.Object, java.lang.Object, io.netty.handler.codec.DefaultHeaders$HeaderEntry)
{
int v1;
java.lang.Object v2, v3;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v4, v5, v6;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: io.netty.handler.codec.DefaultHeaders$HeaderEntry;
v5 = new io.netty.handler.codec.DefaultHeaders$HeaderEntry;
v6 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry head>;
specialinvoke v5.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: void <init>(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry,io.netty.handler.codec.DefaultHeaders$HeaderEntry)>(v1, v2, v3, v4, v6);
return v5;
}
protected io.netty.handler.codec.ValueConverter valueConverter()
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.ValueConverter v1;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
return v1;
}
protected io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator()
{
io.netty.handler.codec.DefaultHeaders$NameValidator v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
return v1;
}
protected io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator()
{
io.netty.handler.codec.DefaultHeaders$ValueValidator v1;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$ValueValidator valueValidator>;
return v1;
}
private int index(int)
{
byte v2;
int v1, v3;
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.DefaultHeaders: byte hashMask>;
v3 = v1 & v2;
return v3;
}
private void add0(int, int, java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v5, v6;
int v1, v10, v2, v9;
java.lang.Object v3, v4;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v7, v8;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v6 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v7 = v6[v2];
v8 = virtualinvoke v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry newHeaderEntry(int,java.lang.Object,java.lang.Object,io.netty.handler.codec.DefaultHeaders$HeaderEntry)>(v1, v3, v4, v7);
v5[v2] = v8;
v9 = v0.<io.netty.handler.codec.DefaultHeaders: int size>;
v10 = v9 + 1;
v0.<io.netty.handler.codec.DefaultHeaders: int size> = v10;
return;
}
private java.lang.Object remove0(int, int, java.lang.Object)
{
io.netty.util.HashingStrategy v18, v9;
int v1, v13, v14, v17, v2, v23, v24, v8;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v12, v16, v22, v5, v7;
boolean v11, v20;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v15, v21, v4;
java.lang.Object v10, v19, v3, v6;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v5 = v4[v2];
if v5 != null goto label1;
return null;
label1:
v6 = null;
v7 = v5.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
label2:
if v7 == null goto label5;
v8 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
if v8 != v1 goto label3;
v9 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v10 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v11 = interfaceinvoke v9.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v3, v10);
if v11 == 0 goto label3;
v6 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object value>;
v12 = v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
v5.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next> = v12;
virtualinvoke v7.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: void remove()>();
v13 = v0.<io.netty.handler.codec.DefaultHeaders: int size>;
v14 = v13 - 1;
v0.<io.netty.handler.codec.DefaultHeaders: int size> = v14;
goto label4;
label3:
v5 = v7;
label4:
v7 = v5.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
goto label2;
label5:
v15 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v16 = v15[v2];
v17 = v16.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
if v17 != v1 goto label7;
v18 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v19 = v16.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object key>;
v20 = interfaceinvoke v18.<io.netty.util.HashingStrategy: boolean equals(java.lang.Object,java.lang.Object)>(v3, v19);
if v20 == 0 goto label7;
if v6 != null goto label6;
v6 = v16.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: java.lang.Object value>;
label6:
v21 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v22 = v16.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
v21[v2] = v22;
virtualinvoke v16.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: void remove()>();
v23 = v0.<io.netty.handler.codec.DefaultHeaders: int size>;
v24 = v23 - 1;
v0.<io.netty.handler.codec.DefaultHeaders: int size> = v24;
label7:
return v6;
}
io.netty.handler.codec.DefaultHeaders$HeaderEntry remove0(io.netty.handler.codec.DefaultHeaders$HeaderEntry, io.netty.handler.codec.DefaultHeaders$HeaderEntry)
{
java.lang.AssertionError v12;
int v16, v17, v3, v4;
java.lang.String v13;
io.netty.handler.codec.DefaultHeaders$HeaderEntry v1, v10, v14, v15, v2, v6, v8;
boolean v11;
io.netty.handler.codec.DefaultHeaders v0;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v5, v7, v9;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: io.netty.handler.codec.DefaultHeaders$HeaderEntry;
v2 := @parameter1: io.netty.handler.codec.DefaultHeaders$HeaderEntry;
v3 = v1.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: int hash>;
v4 = specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: int index(int)>(v3);
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v6 = v5[v4];
if v6 != v1 goto label1;
v7 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v8 = v1.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
v7[v4] = v8;
v9 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v2 = v9[v4];
goto label6;
label1:
if v2 != null goto label5;
v2 = v6;
v10 = v6.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
label2:
if v10 == null goto label3;
if v10 == v1 goto label3;
v2 = v10;
v10 = v10.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
goto label2;
label3:
v11 = <io.netty.handler.codec.DefaultHeaders: boolean $assertionsDisabled>;
if v11 != 0 goto label4;
if v10 != null goto label4;
v12 = new java.lang.AssertionError;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.DefaultHeaders$HeaderEntry)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Entry not found in its hash bucket: \u0001");
specialinvoke v12.<java.lang.AssertionError: void <init>(java.lang.Object)>(v13);
throw v12;
label4:
v14 = v1.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
v2.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next> = v14;
goto label6;
label5:
v15 = v1.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next>;
v2.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: io.netty.handler.codec.DefaultHeaders$HeaderEntry next> = v15;
label6:
virtualinvoke v1.<io.netty.handler.codec.DefaultHeaders$HeaderEntry: void remove()>();
v16 = v0.<io.netty.handler.codec.DefaultHeaders: int size>;
v17 = v16 - 1;
v0.<io.netty.handler.codec.DefaultHeaders: int size> = v17;
return v2;
}
private io.netty.handler.codec.Headers thisT()
{
io.netty.handler.codec.DefaultHeaders v0;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
return v0;
}
private java.lang.Object fromObject(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v6, v7;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2, v4, v5;
java.lang.String v8;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "value");
v5 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertObject(java.lang.Object)>(v4);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = new java.lang.IllegalArgumentException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert object value for header \'\u0001\'");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v8, v6);
throw v7;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromBoolean(java.lang.Object, boolean)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
boolean v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertBoolean(boolean)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert boolean value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromByte(java.lang.Object, byte)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
byte v2;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: byte;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertByte(byte)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert byte value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromChar(java.lang.Object, char)
{
char v2;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: char;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertChar(char)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert char value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromShort(java.lang.Object, short)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
short v2;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: short;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertShort(short)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert short value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromInt(java.lang.Object, int)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
int v2;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: int;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertInt(int)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert int value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromLong(java.lang.Object, long)
{
long v2;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertLong(long)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert long value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromFloat(java.lang.Object, float)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
float v2;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: float;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertFloat(float)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert float value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromDouble(java.lang.Object, double)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
double v2;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: double;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertDouble(double)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert double value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private java.lang.Object fromTimeMillis(java.lang.Object, long)
{
long v2;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v4;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: long;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: java.lang.Object convertTimeMillis(long)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert millsecond value for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private boolean toBoolean(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
boolean v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: boolean convertToBoolean(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to boolean for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private byte toByte(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
byte v4;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: byte convertToByte(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to byte for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private char toChar(java.lang.Object, java.lang.Object)
{
char v4;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: char convertToChar(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to char for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private short toShort(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
short v4;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: short convertToShort(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to short for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private int toInt(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
int v4;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: int convertToInt(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to int for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private long toLong(java.lang.Object, java.lang.Object)
{
long v4;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: long convertToLong(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to long for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private float toFloat(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
float v4;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: float convertToFloat(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to float for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private double toDouble(java.lang.Object, java.lang.Object)
{
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
double v4;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: double convertToDouble(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to double for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private long toTimeMillis(java.lang.Object, java.lang.Object)
{
long v4;
io.netty.handler.codec.DefaultHeaders v0;
java.lang.IllegalArgumentException v5, v6;
io.netty.handler.codec.ValueConverter v3;
java.lang.Object v1, v2;
java.lang.String v7;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = interfaceinvoke v3.<io.netty.handler.codec.ValueConverter: long convertToTimeMillis(java.lang.Object)>(v2);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to convert header value to millsecond for header \'\u0001\'");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public io.netty.handler.codec.DefaultHeaders copy()
{
io.netty.util.HashingStrategy v2;
io.netty.handler.codec.ValueConverter v3;
int v6;
io.netty.handler.codec.DefaultHeaders$NameValidator v4;
io.netty.handler.codec.DefaultHeaders v0, v1;
io.netty.handler.codec.DefaultHeaders$HeaderEntry[] v5;
v0 := @this: io.netty.handler.codec.DefaultHeaders;
v1 = new io.netty.handler.codec.DefaultHeaders;
v2 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.util.HashingStrategy hashingStrategy>;
v3 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.ValueConverter valueConverter>;
v4 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator nameValidator>;
v5 = v0.<io.netty.handler.codec.DefaultHeaders: io.netty.handler.codec.DefaultHeaders$HeaderEntry[] entries>;
v6 = lengthof v5;
specialinvoke v1.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator,int)>(v2, v3, v4, v6);
virtualinvoke v1.<io.netty.handler.codec.DefaultHeaders: void addImpl(io.netty.handler.codec.Headers)>(v0);
return v1;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/DefaultHeaders;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.DefaultHeaders: boolean $assertionsDisabled> = v2;
return;
}
}