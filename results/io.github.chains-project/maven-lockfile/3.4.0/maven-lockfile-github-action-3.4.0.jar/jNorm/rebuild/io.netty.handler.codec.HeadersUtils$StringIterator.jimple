final class io.netty.handler.codec.HeadersUtils$StringIterator extends java.lang.Object implements java.util.Iterator
{
private final java.util.Iterator iter;
void <init>(java.util.Iterator)
{
io.netty.handler.codec.HeadersUtils$StringIterator v0;
java.util.Iterator v1;
v0 := @this: io.netty.handler.codec.HeadersUtils$StringIterator;
v1 := @parameter0: java.util.Iterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.HeadersUtils$StringIterator: java.util.Iterator iter> = v1;
return;
}
public boolean hasNext()
{
io.netty.handler.codec.HeadersUtils$StringIterator v0;
java.util.Iterator v1;
boolean v2;
v0 := @this: io.netty.handler.codec.HeadersUtils$StringIterator;
v1 = v0.<io.netty.handler.codec.HeadersUtils$StringIterator: java.util.Iterator iter>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.lang.String next()
{
io.netty.handler.codec.HeadersUtils$StringIterator v0;
java.util.Iterator v1;
java.lang.Object v2;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.HeadersUtils$StringIterator;
v1 = v0.<io.netty.handler.codec.HeadersUtils$StringIterator: java.util.Iterator iter>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public void remove()
{
io.netty.handler.codec.HeadersUtils$StringIterator v0;
java.util.Iterator v1;
v0 := @this: io.netty.handler.codec.HeadersUtils$StringIterator;
v1 = v0.<io.netty.handler.codec.HeadersUtils$StringIterator: java.util.Iterator iter>;
interfaceinvoke v1.<java.util.Iterator: void remove()>();
return;
}
}