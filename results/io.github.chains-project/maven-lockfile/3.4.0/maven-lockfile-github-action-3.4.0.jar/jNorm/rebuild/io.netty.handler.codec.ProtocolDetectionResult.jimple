public final class io.netty.handler.codec.ProtocolDetectionResult extends java.lang.Object
{
private static final io.netty.handler.codec.ProtocolDetectionResult NEEDS_MORE_DATA;
private static final io.netty.handler.codec.ProtocolDetectionResult INVALID;
private final io.netty.handler.codec.ProtocolDetectionState state;
private final java.lang.Object result;
public static io.netty.handler.codec.ProtocolDetectionResult needsMoreData()
{
io.netty.handler.codec.ProtocolDetectionResult v0;
v0 = <io.netty.handler.codec.ProtocolDetectionResult: io.netty.handler.codec.ProtocolDetectionResult NEEDS_MORE_DATA>;
return v0;
}
public static io.netty.handler.codec.ProtocolDetectionResult invalid()
{
io.netty.handler.codec.ProtocolDetectionResult v0;
v0 = <io.netty.handler.codec.ProtocolDetectionResult: io.netty.handler.codec.ProtocolDetectionResult INVALID>;
return v0;
}
public static io.netty.handler.codec.ProtocolDetectionResult detected(java.lang.Object)
{
io.netty.handler.codec.ProtocolDetectionResult v1;
java.lang.Object v0, v3;
io.netty.handler.codec.ProtocolDetectionState v2;
v0 := @parameter0: java.lang.Object;
v1 = new io.netty.handler.codec.ProtocolDetectionResult;
v2 = <io.netty.handler.codec.ProtocolDetectionState: io.netty.handler.codec.ProtocolDetectionState DETECTED>;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "protocol");
specialinvoke v1.<io.netty.handler.codec.ProtocolDetectionResult: void <init>(io.netty.handler.codec.ProtocolDetectionState,java.lang.Object)>(v2, v3);
return v1;
}
private void <init>(io.netty.handler.codec.ProtocolDetectionState, java.lang.Object)
{
java.lang.Object v2;
io.netty.handler.codec.ProtocolDetectionResult v0;
io.netty.handler.codec.ProtocolDetectionState v1;
v0 := @this: io.netty.handler.codec.ProtocolDetectionResult;
v1 := @parameter0: io.netty.handler.codec.ProtocolDetectionState;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.ProtocolDetectionResult: io.netty.handler.codec.ProtocolDetectionState state> = v1;
v0.<io.netty.handler.codec.ProtocolDetectionResult: java.lang.Object result> = v2;
return;
}
public io.netty.handler.codec.ProtocolDetectionState state()
{
io.netty.handler.codec.ProtocolDetectionResult v0;
io.netty.handler.codec.ProtocolDetectionState v1;
v0 := @this: io.netty.handler.codec.ProtocolDetectionResult;
v1 = v0.<io.netty.handler.codec.ProtocolDetectionResult: io.netty.handler.codec.ProtocolDetectionState state>;
return v1;
}
public java.lang.Object detectedProtocol()
{
java.lang.Object v1;
io.netty.handler.codec.ProtocolDetectionResult v0;
v0 := @this: io.netty.handler.codec.ProtocolDetectionResult;
v1 = v0.<io.netty.handler.codec.ProtocolDetectionResult: java.lang.Object result>;
return v1;
}
static void <clinit>()
{
io.netty.handler.codec.ProtocolDetectionResult v0, v2;
io.netty.handler.codec.ProtocolDetectionState v1, v3;
v0 = new io.netty.handler.codec.ProtocolDetectionResult;
v1 = <io.netty.handler.codec.ProtocolDetectionState: io.netty.handler.codec.ProtocolDetectionState NEEDS_MORE_DATA>;
specialinvoke v0.<io.netty.handler.codec.ProtocolDetectionResult: void <init>(io.netty.handler.codec.ProtocolDetectionState,java.lang.Object)>(v1, null);
<io.netty.handler.codec.ProtocolDetectionResult: io.netty.handler.codec.ProtocolDetectionResult NEEDS_MORE_DATA> = v0;
v2 = new io.netty.handler.codec.ProtocolDetectionResult;
v3 = <io.netty.handler.codec.ProtocolDetectionState: io.netty.handler.codec.ProtocolDetectionState INVALID>;
specialinvoke v2.<io.netty.handler.codec.ProtocolDetectionResult: void <init>(io.netty.handler.codec.ProtocolDetectionState,java.lang.Object)>(v3, null);
<io.netty.handler.codec.ProtocolDetectionResult: io.netty.handler.codec.ProtocolDetectionResult INVALID> = v2;
return;
}
}