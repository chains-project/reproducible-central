public abstract class io.netty.handler.codec.ReplayingDecoder extends io.netty.handler.codec.ByteToMessageDecoder
{
static final io.netty.util.Signal REPLAY;
private final io.netty.handler.codec.ReplayingDecoderByteBuf replayable;
private java.lang.Object state;
private int checkpoint;
protected void <init>()
{
io.netty.handler.codec.ReplayingDecoder v0;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
specialinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void <init>(java.lang.Object)>(null);
return;
}
protected void <init>(java.lang.Object)
{
io.netty.handler.codec.ReplayingDecoder v0;
io.netty.handler.codec.ReplayingDecoderByteBuf v2;
int v3;
java.lang.Object v1;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void <init>()>();
v2 = new io.netty.handler.codec.ReplayingDecoderByteBuf;
specialinvoke v2.<io.netty.handler.codec.ReplayingDecoderByteBuf: void <init>()>();
v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.handler.codec.ReplayingDecoderByteBuf replayable> = v2;
v3 = (int) -1;
v0.<io.netty.handler.codec.ReplayingDecoder: int checkpoint> = v3;
v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state> = v1;
return;
}
protected void checkpoint()
{
int v2;
io.netty.handler.codec.ReplayingDecoder v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 = virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.buffer.ByteBuf internalBuffer()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v0.<io.netty.handler.codec.ReplayingDecoder: int checkpoint> = v2;
return;
}
protected void checkpoint(java.lang.Object)
{
io.netty.handler.codec.ReplayingDecoder v0;
java.lang.Object v1;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void checkpoint()>();
virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state(java.lang.Object)>(v1);
return;
}
protected java.lang.Object state()
{
io.netty.handler.codec.ReplayingDecoder v0;
java.lang.Object v1;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 = v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state>;
return v1;
}
protected java.lang.Object state(java.lang.Object)
{
io.netty.handler.codec.ReplayingDecoder v0;
java.lang.Object v1, v2;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state>;
v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state> = v1;
return v2;
}
final void channelInputClosed(io.netty.channel.ChannelHandlerContext, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.ReplayingDecoderByteBuf v3, v6, v8;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ReplayingDecoder v0;
java.util.List v2;
io.netty.buffer.ByteBuf v4, v5, v7;
io.netty.util.Signal v10, v9;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.util.List;
label1:
v3 = v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.handler.codec.ReplayingDecoderByteBuf replayable>;
virtualinvoke v3.<io.netty.handler.codec.ReplayingDecoderByteBuf: void terminate()>();
v4 = v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.buffer.ByteBuf cumulation>;
if v4 == null goto label2;
v5 = virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.buffer.ByteBuf internalBuffer()>();
virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void callDecode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)>(v1, v5, v2);
goto label3;
label2:
v6 = v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.handler.codec.ReplayingDecoderByteBuf replayable>;
v7 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
virtualinvoke v6.<io.netty.handler.codec.ReplayingDecoderByteBuf: void setCumulation(io.netty.buffer.ByteBuf)>(v7);
label3:
v8 = v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.handler.codec.ReplayingDecoderByteBuf replayable>;
virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void decodeLast(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)>(v1, v8, v2);
label4:
goto label6;
label5:
v9 := @caughtexception;
v10 = <io.netty.handler.codec.ReplayingDecoder: io.netty.util.Signal REPLAY>;
virtualinvoke v9.<io.netty.util.Signal: void expect(io.netty.util.Signal)>(v10);
label6:
return;
catch io.netty.util.Signal from label1 to label4 with label5;
}
protected void callDecode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List)
{
boolean v12, v22, v30, v5, v8;
io.netty.handler.codec.DecoderException v16, v26, v31, v33;
io.netty.handler.codec.ReplayingDecoderByteBuf v11, v4;
java.lang.Exception v32;
java.util.List v3;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.ReplayingDecoder v0;
io.netty.buffer.ByteBuf v2;
int v10, v13, v14, v23, v24, v6, v7;
java.lang.String v18, v19, v28, v29;
java.lang.Class v17, v27;
java.lang.Object v15, v25, v9;
io.netty.util.Signal v20, v21;
v0 := @this: io.netty.handler.codec.ReplayingDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.handler.codec.ReplayingDecoderByteBuf replayable>;
virtualinvoke v4.<io.netty.handler.codec.ReplayingDecoderByteBuf: void setCumulation(io.netty.buffer.ByteBuf)>(v2);
label01:
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v5 == 0 goto label10;
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v0.<io.netty.handler.codec.ReplayingDecoder: int checkpoint> = v6;
v7 = interfaceinvoke v3.<java.util.List: int size()>();
if v7 <= 0 goto label02;
staticinvoke <io.netty.handler.codec.ReplayingDecoder: void fireChannelRead(io.netty.channel.ChannelHandlerContext,java.util.List,int)>(v1, v3, v7);
interfaceinvoke v3.<java.util.List: void clear()>();
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: boolean isRemoved()>();
if v8 != 0 goto label10;
v7 = 0;
label02:
v9 = v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state>;
v10 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
label03:
v11 = v0.<io.netty.handler.codec.ReplayingDecoder: io.netty.handler.codec.ReplayingDecoderByteBuf replayable>;
virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void decodeRemovalReentryProtection(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,java.util.List)>(v1, v11, v3);
v12 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: boolean isRemoved()>();
if v12 != 0 goto label10;
label04:
v13 = interfaceinvoke v3.<java.util.List: int size()>();
if v7 != v13 goto label06;
v14 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v10 != v14 goto label01;
v15 = v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state>;
if v9 != v15 goto label01;
v16 = new io.netty.handler.codec.DecoderException;
v17 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v18 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(v17);
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.decode() must consume the inbound data or change its state if it did not decode anything.");
specialinvoke v16.<io.netty.handler.codec.DecoderException: void <init>(java.lang.String)>(v19);
throw v16;
label05:
v20 := @caughtexception;
v21 = <io.netty.handler.codec.ReplayingDecoder: io.netty.util.Signal REPLAY>;
virtualinvoke v20.<io.netty.util.Signal: void expect(io.netty.util.Signal)>(v21);
v22 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: boolean isRemoved()>();
if v22 != 0 goto label10;
v23 = v0.<io.netty.handler.codec.ReplayingDecoder: int checkpoint>;
if v23 < 0 goto label10;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v23);
goto label10;
label06:
v24 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
if v6 != v24 goto label07;
v25 = v0.<io.netty.handler.codec.ReplayingDecoder: java.lang.Object state>;
if v9 != v25 goto label07;
v26 = new io.netty.handler.codec.DecoderException;
v27 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v28 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(v27);
v29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v28) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.decode() method must consume the inbound data or change its state if it decoded something.");
specialinvoke v26.<io.netty.handler.codec.DecoderException: void <init>(java.lang.String)>(v29);
throw v26;
label07:
v30 = virtualinvoke v0.<io.netty.handler.codec.ReplayingDecoder: boolean isSingleDecode()>();
if v30 != 0 goto label10;
goto label01;
label08:
v31 := @caughtexception;
throw v31;
label09:
v32 := @caughtexception;
v33 = new io.netty.handler.codec.DecoderException;
specialinvoke v33.<io.netty.handler.codec.DecoderException: void <init>(java.lang.Throwable)>(v32);
throw v33;
label10:
return;
catch io.netty.util.Signal from label03 to label04 with label05;
catch io.netty.util.Signal from label04 to label05 with label05;
catch io.netty.handler.codec.DecoderException from label01 to label08 with label08;
catch java.lang.Exception from label01 to label08 with label09;
}
static void <clinit>()
{
io.netty.util.Signal v0;
v0 = staticinvoke <io.netty.util.Signal: io.netty.util.Signal valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/ReplayingDecoder;", "REPLAY");
<io.netty.handler.codec.ReplayingDecoder: io.netty.util.Signal REPLAY> = v0;
return;
}
}