public final class io.netty.handler.codec.base64.Base64 extends java.lang.Object
{
private static final int MAX_LINE_LENGTH;
private static final byte EQUALS_SIGN;
private static final byte NEW_LINE;
private static final byte WHITE_SPACE_ENC;
private static final byte EQUALS_SIGN_ENC;
private static byte[] alphabet(io.netty.handler.codec.base64.Base64Dialect)
{
byte[] v2;
java.lang.Object v1;
io.netty.handler.codec.base64.Base64Dialect v0;
v0 := @parameter0: io.netty.handler.codec.base64.Base64Dialect;
v1 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "dialect");
v2 = v1.<io.netty.handler.codec.base64.Base64Dialect: byte[] alphabet>;
return v2;
}
private static byte[] decodabet(io.netty.handler.codec.base64.Base64Dialect)
{
byte[] v2;
java.lang.Object v1;
io.netty.handler.codec.base64.Base64Dialect v0;
v0 := @parameter0: io.netty.handler.codec.base64.Base64Dialect;
v1 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "dialect");
v2 = v1.<io.netty.handler.codec.base64.Base64Dialect: byte[] decodabet>;
return v2;
}
private static boolean breakLines(io.netty.handler.codec.base64.Base64Dialect)
{
java.lang.Object v1;
boolean v2;
io.netty.handler.codec.base64.Base64Dialect v0;
v0 := @parameter0: io.netty.handler.codec.base64.Base64Dialect;
v1 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "dialect");
v2 = v1.<io.netty.handler.codec.base64.Base64Dialect: boolean breakLinesByDefault>;
return v2;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v0, v2;
io.netty.handler.codec.base64.Base64Dialect v1;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
v2 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1);
return v2;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, io.netty.handler.codec.base64.Base64Dialect)
{
io.netty.buffer.ByteBuf v0, v3;
boolean v2;
io.netty.handler.codec.base64.Base64Dialect v1;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: io.netty.handler.codec.base64.Base64Dialect;
v2 = staticinvoke <io.netty.handler.codec.base64.Base64: boolean breakLines(io.netty.handler.codec.base64.Base64Dialect)>(v1);
v3 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean,io.netty.handler.codec.base64.Base64Dialect)>(v0, v2, v1);
return v3;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, boolean)
{
io.netty.buffer.ByteBuf v0, v3;
boolean v1;
io.netty.handler.codec.base64.Base64Dialect v2;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: boolean;
v2 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
v3 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1, v2);
return v3;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, boolean, io.netty.handler.codec.base64.Base64Dialect)
{
io.netty.buffer.ByteBuf v0, v5;
int v3, v4, v6;
boolean v1;
io.netty.handler.codec.base64.Base64Dialect v2;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: boolean;
v2 := @parameter2: io.netty.handler.codec.base64.Base64Dialect;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "src");
v3 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v5 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect)>(v0, v3, v4, v1, v2);
v6 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v6);
return v5;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, int, int)
{
io.netty.buffer.ByteBuf v0, v4;
int v1, v2;
io.netty.handler.codec.base64.Base64Dialect v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
v4 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1, v2, v3);
return v4;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, int, int, io.netty.handler.codec.base64.Base64Dialect)
{
io.netty.buffer.ByteBuf v0, v5;
int v1, v2;
boolean v4;
io.netty.handler.codec.base64.Base64Dialect v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: io.netty.handler.codec.base64.Base64Dialect;
v4 = staticinvoke <io.netty.handler.codec.base64.Base64: boolean breakLines(io.netty.handler.codec.base64.Base64Dialect)>(v3);
v5 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1, v2, v4, v3);
return v5;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, int, int, boolean)
{
io.netty.buffer.ByteBuf v0, v5;
int v1, v2;
boolean v3;
io.netty.handler.codec.base64.Base64Dialect v4;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
v5 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1, v2, v3, v4);
return v5;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, int, int, boolean, io.netty.handler.codec.base64.Base64Dialect)
{
io.netty.buffer.ByteBuf v0, v6;
io.netty.buffer.ByteBufAllocator v5;
int v1, v2;
boolean v3;
io.netty.handler.codec.base64.Base64Dialect v4;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: io.netty.handler.codec.base64.Base64Dialect;
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v6 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,int,int,boolean,io.netty.handler.codec.base64.Base64Dialect,io.netty.buffer.ByteBufAllocator)>(v0, v1, v2, v3, v4, v5);
return v6;
}
public static io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf, int, int, boolean, io.netty.handler.codec.base64.Base64Dialect, io.netty.buffer.ByteBufAllocator)
{
byte[] v10;
io.netty.buffer.ByteBufAllocator v5;
byte v20;
io.netty.buffer.ByteBuf v0, v21, v7, v9;
int v1, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v6;
boolean v3;
java.nio.ByteOrder v8;
io.netty.handler.codec.base64.Base64Dialect v4;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: io.netty.handler.codec.base64.Base64Dialect;
v5 := @parameter5: io.netty.buffer.ByteBufAllocator;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "src");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v4, "dialect");
v6 = staticinvoke <io.netty.handler.codec.base64.Base64: int encodedBufferSize(int,boolean)>(v2, v3);
v7 = interfaceinvoke v5.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(v6);
v8 = virtualinvoke v0.<io.netty.buffer.ByteBuf: java.nio.ByteOrder order()>();
v9 = virtualinvoke v7.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf order(java.nio.ByteOrder)>(v8);
v10 = staticinvoke <io.netty.handler.codec.base64.Base64: byte[] alphabet(io.netty.handler.codec.base64.Base64Dialect)>(v4);
v11 = 0;
v12 = 0;
v13 = v2 - 2;
v14 = 0;
label1:
if v11 >= v13 goto label3;
v15 = v11 + v1;
staticinvoke <io.netty.handler.codec.base64.Base64: void encode3to4(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf,int,byte[])>(v0, v15, 3, v9, v12, v10);
v14 = v14 + 4;
if v3 == 0 goto label2;
if v14 != 76 goto label2;
v16 = v12 + 4;
virtualinvoke v9.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setByte(int,int)>(v16, 10);
v12 = v12 + 1;
v14 = 0;
label2:
v11 = v11 + 3;
v12 = v12 + 4;
goto label1;
label3:
if v11 >= v2 goto label4;
v17 = v11 + v1;
v18 = v2 - v11;
staticinvoke <io.netty.handler.codec.base64.Base64: void encode3to4(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBuf,int,byte[])>(v0, v17, v18, v9, v12, v10);
v12 = v12 + 4;
label4:
if v12 <= 1 goto label5;
v19 = v12 - 1;
v20 = virtualinvoke v9.<io.netty.buffer.ByteBuf: byte getByte(int)>(v19);
if v20 != 10 goto label5;
v12 = v12 - 1;
label5:
v21 = virtualinvoke v9.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(0, v12);
return v21;
}
private static void encode3to4(io.netty.buffer.ByteBuf, int, int, io.netty.buffer.ByteBuf, int, byte[])
{
byte[] v5;
short v10, v15;
byte v13, v8;
io.netty.buffer.ByteBuf v0, v3;
int v1, v11, v12, v14, v16, v17, v2, v4, v9;
java.nio.ByteOrder v6, v7;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: io.netty.buffer.ByteBuf;
v4 := @parameter4: int;
v5 := @parameter5: byte[];
v6 = virtualinvoke v0.<io.netty.buffer.ByteBuf: java.nio.ByteOrder order()>();
v7 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;
if v6 != v7 goto label07;
lookupswitch(v2)
{
case 1: goto label01;
case 2: goto label02;
default: goto label03;
};
label01:
v8 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v1);
v9 = staticinvoke <io.netty.handler.codec.base64.Base64: int toInt(byte)>(v8);
goto label06;
label02:
v10 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short getShort(int)>(v1);
v9 = staticinvoke <io.netty.handler.codec.base64.Base64: int toIntBE(short)>(v10);
goto label06;
label03:
if v2 > 0 goto label04;
v11 = 0;
goto label05;
label04:
v12 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int getMedium(int)>(v1);
v11 = staticinvoke <io.netty.handler.codec.base64.Base64: int toIntBE(int)>(v12);
label05:
v9 = v11;
label06:
staticinvoke <io.netty.handler.codec.base64.Base64: void encode3to4BigEndian(int,int,io.netty.buffer.ByteBuf,int,byte[])>(v9, v2, v3, v4, v5);
goto label14;
label07:
lookupswitch(v2)
{
case 1: goto label08;
case 2: goto label09;
default: goto label10;
};
label08:
v13 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v1);
v14 = staticinvoke <io.netty.handler.codec.base64.Base64: int toInt(byte)>(v13);
goto label13;
label09:
v15 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short getShort(int)>(v1);
v14 = staticinvoke <io.netty.handler.codec.base64.Base64: int toIntLE(short)>(v15);
goto label13;
label10:
if v2 > 0 goto label11;
v16 = 0;
goto label12;
label11:
v17 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int getMedium(int)>(v1);
v16 = staticinvoke <io.netty.handler.codec.base64.Base64: int toIntLE(int)>(v17);
label12:
v14 = v16;
label13:
staticinvoke <io.netty.handler.codec.base64.Base64: void encode3to4LittleEndian(int,int,io.netty.buffer.ByteBuf,int,byte[])>(v14, v2, v3, v4, v5);
label14:
return;
}
static int encodedBufferSize(int, boolean)
{
long v2, v3, v4, v5, v6;
byte v7;
int v0;
boolean v1;
v0 := @parameter0: int;
v1 := @parameter1: boolean;
v2 = v0 << 2;
v3 = v2 / 3L;
v4 = v3 + 3L;
v5 = v4 & -4L;
if v1 == 0 goto label1;
v6 = v3 / 76L;
v5 = v5 + v6;
label1:
v7 = v5 cmp 2147483647L;
if v7 < 0 goto label2;
v5 = 2147483647;
label2:
return v5;
}
private static int toInt(byte)
{
int v2;
short v1;
byte v0;
v0 := @parameter0: byte;
v1 = v0 & 255;
v2 = v1 << 16;
return v2;
}
private static int toIntBE(short)
{
short v0, v4;
int v1, v2, v3, v5, v6;
v0 := @parameter0: short;
v1 = (int) 65280;
v2 = v0 & v1;
v3 = v2 << 8;
v4 = v0 & 255;
v5 = v4 << 8;
v6 = v3 | v5;
return v6;
}
private static int toIntLE(short)
{
short v0, v1;
int v2, v3, v4, v5;
v0 := @parameter0: short;
v1 = v0 & 255;
v2 = v1 << 16;
v3 = (int) 65280;
v4 = v0 & v3;
v5 = v2 | v4;
return v5;
}
private static int toIntBE(int)
{
int v0, v1, v2, v3, v4, v5, v6;
v0 := @parameter0: int;
v1 = v0 & 16711680;
v2 = (int) 65280;
v3 = v0 & v2;
v4 = v1 | v3;
v5 = v0 & 255;
v6 = v4 | v5;
return v6;
}
private static int toIntLE(int)
{
int v0, v1, v2, v3, v4, v5, v6, v7, v8;
v0 := @parameter0: int;
v1 = v0 & 255;
v2 = v1 << 16;
v3 = (int) 65280;
v4 = v0 & v3;
v5 = v2 | v4;
v6 = v0 & 16711680;
v7 = v6 >>> 16;
v8 = v5 | v7;
return v8;
}
private static void encode3to4BigEndian(int, int, io.netty.buffer.ByteBuf, int, byte[])
{
byte[] v4;
byte v10, v15, v19, v22, v26, v31, v36, v40, v6;
io.netty.buffer.ByteBuf v2;
int v0, v1, v11, v12, v13, v14, v16, v17, v18, v20, v21, v23, v24, v25, v27, v28, v29, v3, v30, v32, v33, v34, v35, v37, v38, v39, v41, v42, v43, v44, v5, v7, v8, v9;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: io.netty.buffer.ByteBuf;
v3 := @parameter3: int;
v4 := @parameter4: byte[];
tableswitch(v1)
{
case 1: goto label3;
case 2: goto label2;
case 3: goto label1;
default: goto label4;
};
label1:
v5 = v0 >>> 18;
v6 = v4[v5];
v7 = v6 << 24;
v8 = v0 >>> 12;
v9 = v8 & 63;
v10 = v4[v9];
v11 = v10 << 16;
v12 = v7 | v11;
v13 = v0 >>> 6;
v14 = v13 & 63;
v15 = v4[v14];
v16 = v15 << 8;
v17 = v12 | v16;
v18 = v0 & 63;
v19 = v4[v18];
v20 = v17 | v19;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v3, v20);
goto label4;
label2:
v21 = v0 >>> 18;
v22 = v4[v21];
v23 = v22 << 24;
v24 = v0 >>> 12;
v25 = v24 & 63;
v26 = v4[v25];
v27 = v26 << 16;
v28 = v23 | v27;
v29 = v0 >>> 6;
v30 = v29 & 63;
v31 = v4[v30];
v32 = v31 << 8;
v33 = v28 | v32;
v34 = v33 | 61;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v3, v34);
goto label4;
label3:
v35 = v0 >>> 18;
v36 = v4[v35];
v37 = v36 << 24;
v38 = v0 >>> 12;
v39 = v38 & 63;
v40 = v4[v39];
v41 = v40 << 16;
v42 = v37 | v41;
v43 = v42 | 15616;
v44 = v43 | 61;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v3, v44);
label4:
return;
}
private static void encode3to4LittleEndian(int, int, io.netty.buffer.ByteBuf, int, byte[])
{
byte[] v4;
byte v14, v18, v22, v25, v30, v35, v38, v6, v9;
io.netty.buffer.ByteBuf v2;
int v0, v1, v10, v11, v12, v13, v15, v16, v17, v19, v20, v21, v23, v24, v26, v27, v28, v29, v3, v31, v32, v33, v34, v36, v37, v39, v40, v41, v42, v5, v7, v8;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: io.netty.buffer.ByteBuf;
v3 := @parameter3: int;
v4 := @parameter4: byte[];
tableswitch(v1)
{
case 1: goto label3;
case 2: goto label2;
case 3: goto label1;
default: goto label4;
};
label1:
v5 = v0 >>> 18;
v6 = v4[v5];
v7 = v0 >>> 12;
v8 = v7 & 63;
v9 = v4[v8];
v10 = v9 << 8;
v11 = v6 | v10;
v12 = v0 >>> 6;
v13 = v12 & 63;
v14 = v4[v13];
v15 = v14 << 16;
v16 = v11 | v15;
v17 = v0 & 63;
v18 = v4[v17];
v19 = v18 << 24;
v20 = v16 | v19;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v3, v20);
goto label4;
label2:
v21 = v0 >>> 18;
v22 = v4[v21];
v23 = v0 >>> 12;
v24 = v23 & 63;
v25 = v4[v24];
v26 = v25 << 8;
v27 = v22 | v26;
v28 = v0 >>> 6;
v29 = v28 & 63;
v30 = v4[v29];
v31 = v30 << 16;
v32 = v27 | v31;
v33 = v32 | 1023410176;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v3, v33);
goto label4;
label3:
v34 = v0 >>> 18;
v35 = v4[v34];
v36 = v0 >>> 12;
v37 = v36 & 63;
v38 = v4[v37];
v39 = v38 << 8;
v40 = v35 | v39;
v41 = v40 | 3997696;
v42 = v41 | 1023410176;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v3, v42);
label4:
return;
}
public static io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v0, v2;
io.netty.handler.codec.base64.Base64Dialect v1;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
v2 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1);
return v2;
}
public static io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf, io.netty.handler.codec.base64.Base64Dialect)
{
io.netty.buffer.ByteBuf v0, v4;
int v2, v3, v5;
io.netty.handler.codec.base64.Base64Dialect v1;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: io.netty.handler.codec.base64.Base64Dialect;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "src");
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v3 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v4 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect)>(v0, v2, v3, v1);
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v5);
return v4;
}
public static io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf, int, int)
{
io.netty.buffer.ByteBuf v0, v4;
int v1, v2;
io.netty.handler.codec.base64.Base64Dialect v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect STANDARD>;
v4 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1, v2, v3);
return v4;
}
public static io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf, int, int, io.netty.handler.codec.base64.Base64Dialect)
{
io.netty.buffer.ByteBuf v0, v5;
io.netty.buffer.ByteBufAllocator v4;
int v1, v2;
io.netty.handler.codec.base64.Base64Dialect v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: io.netty.handler.codec.base64.Base64Dialect;
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v5 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.handler.codec.base64.Base64Dialect,io.netty.buffer.ByteBufAllocator)>(v0, v1, v2, v3, v4);
return v5;
}
public static io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf, int, int, io.netty.handler.codec.base64.Base64Dialect, io.netty.buffer.ByteBufAllocator)
{
io.netty.buffer.ByteBuf v0, v6;
io.netty.buffer.ByteBufAllocator v4;
int v1, v2;
io.netty.handler.codec.base64.Base64$Decoder v5;
io.netty.handler.codec.base64.Base64Dialect v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: io.netty.handler.codec.base64.Base64Dialect;
v4 := @parameter4: io.netty.buffer.ByteBufAllocator;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "src");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "dialect");
v5 = new io.netty.handler.codec.base64.Base64$Decoder;
specialinvoke v5.<io.netty.handler.codec.base64.Base64$Decoder: void <init>()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.base64.Base64$Decoder: io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,int,int,io.netty.buffer.ByteBufAllocator,io.netty.handler.codec.base64.Base64Dialect)>(v0, v1, v2, v4, v3);
return v6;
}
static int decodedBufferSize(int)
{
int v0, v1, v2;
v0 := @parameter0: int;
v1 = v0 >>> 2;
v2 = v0 - v1;
return v2;
}
private void <init>()
{
io.netty.handler.codec.base64.Base64 v0;
v0 := @this: io.netty.handler.codec.base64.Base64;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}