public final class io.netty.handler.codec.compression.BrotliDecoder extends io.netty.handler.codec.ByteToMessageDecoder
{
private final int inputBufferSize;
private com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder;
private boolean destroyed;
public void <init>()
{
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: void <init>(int)>(8192);
return;
}
public void <init>(int)
{
int v1, v2;
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v1, "inputBufferSize");
v0.<io.netty.handler.codec.compression.BrotliDecoder: int inputBufferSize> = v2;
return;
}
private io.netty.buffer.ByteBuf pull(io.netty.buffer.ByteBufAllocator)
{
io.netty.buffer.ByteBuf v5;
io.netty.buffer.ByteBufAllocator v1;
com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper v2;
int v4;
java.nio.ByteBuffer v3;
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
v3 = virtualinvoke v2.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: java.nio.ByteBuffer pull()>();
v4 = virtualinvoke v3.<java.nio.ByteBuffer: int remaining()>();
v5 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(v4);
virtualinvoke v5.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(java.nio.ByteBuffer)>(v3);
return v5;
}
private io.netty.handler.codec.compression.BrotliDecoder$State decompress(io.netty.buffer.ByteBuf, java.util.List, io.netty.buffer.ByteBufAllocator)
{
io.netty.buffer.ByteBufAllocator v3;
java.nio.ByteBuffer v17;
io.netty.handler.codec.compression.BrotliDecoder v0;
io.netty.buffer.ByteBuf v1, v13, v20;
int[] v4;
com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper v10, v11, v16, v19, v5;
int v18, v7, v8;
boolean v12, v14;
io.netty.handler.codec.compression.BrotliDecoder$State v15, v21, v9;
com.aayushatharva.brotli4j.decoder.DecoderJNI$Status v6;
java.util.List v2;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: java.util.List;
v3 := @parameter2: io.netty.buffer.ByteBufAllocator;
label1:
v4 = <io.netty.handler.codec.compression.BrotliDecoder$1: int[] $SwitchMap$com$aayushatharva$brotli4j$decoder$DecoderJNI$Status>;
v5 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
v6 = virtualinvoke v5.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: com.aayushatharva.brotli4j.decoder.DecoderJNI$Status getStatus()>();
v7 = virtualinvoke v6.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Status: int ordinal()>();
v8 = v4[v7];
tableswitch(v8)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
case 4: goto label7;
default: goto label8;
};
label2:
v9 = <io.netty.handler.codec.compression.BrotliDecoder$State: io.netty.handler.codec.compression.BrotliDecoder$State DONE>;
return v9;
label3:
v10 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
virtualinvoke v10.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: void push(int)>(0);
goto label1;
label4:
v11 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
v12 = virtualinvoke v11.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: boolean hasOutput()>();
if v12 == 0 goto label5;
v13 = specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: io.netty.buffer.ByteBuf pull(io.netty.buffer.ByteBufAllocator)>(v3);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v13);
label5:
v14 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v14 != 0 goto label6;
v15 = <io.netty.handler.codec.compression.BrotliDecoder$State: io.netty.handler.codec.compression.BrotliDecoder$State NEEDS_MORE_INPUT>;
return v15;
label6:
v16 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
v17 = virtualinvoke v16.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: java.nio.ByteBuffer getInputBuffer()>();
virtualinvoke v17.<java.nio.ByteBuffer: java.nio.ByteBuffer clear()>();
v18 = staticinvoke <io.netty.handler.codec.compression.BrotliDecoder: int readBytes(io.netty.buffer.ByteBuf,java.nio.ByteBuffer)>(v1, v17);
v19 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
virtualinvoke v19.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: void push(int)>(v18);
goto label1;
label7:
v20 = specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: io.netty.buffer.ByteBuf pull(io.netty.buffer.ByteBufAllocator)>(v3);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v20);
goto label1;
label8:
v21 = <io.netty.handler.codec.compression.BrotliDecoder$State: io.netty.handler.codec.compression.BrotliDecoder$State ERROR>;
return v21;
}
private static int readBytes(io.netty.buffer.ByteBuf, java.nio.ByteBuffer)
{
java.nio.ByteBuffer v1, v5;
io.netty.buffer.ByteBuf v0;
int v2, v3, v4, v6, v7;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: java.nio.ByteBuffer;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readableBytes()>();
v3 = virtualinvoke v1.<java.nio.ByteBuffer: int remaining()>();
v4 = staticinvoke <java.lang.Math: int min(int,int)>(v2, v3);
v5 = virtualinvoke v1.<java.nio.ByteBuffer: java.nio.ByteBuffer slice()>();
virtualinvoke v5.<java.nio.ByteBuffer: java.nio.ByteBuffer limit(int)>(v4);
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readBytes(java.nio.ByteBuffer)>(v5);
v6 = virtualinvoke v1.<java.nio.ByteBuffer: int position()>();
v7 = v6 + v4;
virtualinvoke v1.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(v7);
return v4;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper v2;
int v3;
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = new com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper;
v3 = v0.<io.netty.handler.codec.compression.BrotliDecoder: int inputBufferSize>;
specialinvoke v2.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: void <init>(int)>(v3);
v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder> = v2;
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.compression.DecompressionException v11;
io.netty.buffer.ByteBufAllocator v7;
io.netty.handler.codec.compression.BrotliDecoder$State v10, v8, v9;
java.lang.Exception v12;
io.netty.handler.codec.compression.BrotliDecoder v0;
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v2;
int v5;
boolean v4, v6;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = v0.<io.netty.handler.codec.compression.BrotliDecoder: boolean destroyed>;
if v4 == 0 goto label1;
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v5);
return;
label1:
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v6 != 0 goto label2;
return;
label2:
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v8 = specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: io.netty.handler.codec.compression.BrotliDecoder$State decompress(io.netty.buffer.ByteBuf,java.util.List,io.netty.buffer.ByteBufAllocator)>(v2, v3, v7);
v9 = <io.netty.handler.codec.compression.BrotliDecoder$State: io.netty.handler.codec.compression.BrotliDecoder$State DONE>;
if v8 != v9 goto label3;
specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: void destroy()>();
goto label5;
label3:
v10 = <io.netty.handler.codec.compression.BrotliDecoder$State: io.netty.handler.codec.compression.BrotliDecoder$State ERROR>;
if v8 != v10 goto label5;
v11 = new io.netty.handler.codec.compression.DecompressionException;
specialinvoke v11.<io.netty.handler.codec.compression.DecompressionException: void <init>(java.lang.String)>("Brotli stream corrupted");
throw v11;
label4:
v12 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: void destroy()>();
throw v12;
label5:
return;
catch java.lang.Exception from label2 to label4 with label4;
}
private void destroy()
{
com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper v2;
boolean v1;
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 = v0.<io.netty.handler.codec.compression.BrotliDecoder: boolean destroyed>;
if v1 != 0 goto label1;
v0.<io.netty.handler.codec.compression.BrotliDecoder: boolean destroyed> = 1;
v2 = v0.<io.netty.handler.codec.compression.BrotliDecoder: com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper decoder>;
virtualinvoke v2.<com.aayushatharva.brotli4j.decoder.DecoderJNI$Wrapper: void destroy()>();
label1:
return;
}
protected void handlerRemoved0(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: void destroy()>();
label2:
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void handlerRemoved0(io.netty.channel.ChannelHandlerContext)>(v1);
goto label4;
label3:
v2 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void handlerRemoved0(io.netty.channel.ChannelHandlerContext)>(v1);
throw v2;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.compression.BrotliDecoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
specialinvoke v0.<io.netty.handler.codec.compression.BrotliDecoder: void destroy()>();
label2:
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
goto label4;
label3:
v2 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
throw v2;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
static void <clinit>()
{
java.lang.Throwable v0;
java.lang.ExceptionInInitializerError v1;
label1:
staticinvoke <io.netty.handler.codec.compression.Brotli: void ensureAvailability()>();
label2:
goto label4;
label3:
v0 := @caughtexception;
v1 = new java.lang.ExceptionInInitializerError;
specialinvoke v1.<java.lang.ExceptionInInitializerError: void <init>(java.lang.Throwable)>(v0);
throw v1;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}