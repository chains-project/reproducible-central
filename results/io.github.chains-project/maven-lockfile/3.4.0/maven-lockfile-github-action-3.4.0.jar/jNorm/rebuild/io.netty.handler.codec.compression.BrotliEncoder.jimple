public final class io.netty.handler.codec.compression.BrotliEncoder extends io.netty.handler.codec.MessageToByteEncoder
{
private static final io.netty.util.AttributeKey ATTR;
private static final java.lang.reflect.Method FLUSH_METHOD;
private final com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters;
private final boolean isSharable;
private io.netty.handler.codec.compression.BrotliEncoder$Writer writer;
public void <init>()
{
io.netty.handler.codec.compression.BrotliOptions v1;
io.netty.handler.codec.compression.BrotliEncoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 = <io.netty.handler.codec.compression.BrotliOptions: io.netty.handler.codec.compression.BrotliOptions DEFAULT>;
specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder: void <init>(io.netty.handler.codec.compression.BrotliOptions)>(v1);
return;
}
public void <init>(io.netty.handler.codec.compression.BrotliOptions)
{
io.netty.handler.codec.compression.BrotliOptions v1;
com.aayushatharva.brotli4j.encoder.Encoder$Parameters v2;
io.netty.handler.codec.compression.BrotliEncoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.handler.codec.compression.BrotliOptions;
v2 = virtualinvoke v1.<io.netty.handler.codec.compression.BrotliOptions: com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters()>();
specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder: void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters)>(v2);
return;
}
public void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters)
{
com.aayushatharva.brotli4j.encoder.Encoder$Parameters v1;
io.netty.handler.codec.compression.BrotliEncoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: com.aayushatharva.brotli4j.encoder.Encoder$Parameters;
specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder: void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters,boolean)>(v1, 1);
return;
}
public void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters, boolean)
{
com.aayushatharva.brotli4j.encoder.Encoder$Parameters v1;
io.netty.handler.codec.compression.BrotliEncoder v0;
java.lang.Object v3;
boolean v2;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: com.aayushatharva.brotli4j.encoder.Encoder$Parameters;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "Parameters");
v0.<io.netty.handler.codec.compression.BrotliEncoder: com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters> = v3;
v0.<io.netty.handler.codec.compression.BrotliEncoder: boolean isSharable> = v2;
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.util.AttributeKey v6;
io.netty.util.Attribute v7;
com.aayushatharva.brotli4j.encoder.Encoder$Parameters v3;
io.netty.handler.codec.compression.BrotliEncoder v0;
io.netty.handler.codec.compression.BrotliEncoder$Writer v2;
io.netty.channel.Channel v5;
io.netty.channel.ChannelHandlerContext v1;
boolean v4;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = new io.netty.handler.codec.compression.BrotliEncoder$Writer;
v3 = v0.<io.netty.handler.codec.compression.BrotliEncoder: com.aayushatharva.brotli4j.encoder.Encoder$Parameters parameters>;
specialinvoke v2.<io.netty.handler.codec.compression.BrotliEncoder$Writer: void <init>(com.aayushatharva.brotli4j.encoder.Encoder$Parameters,io.netty.channel.ChannelHandlerContext)>(v3, v1);
v4 = v0.<io.netty.handler.codec.compression.BrotliEncoder: boolean isSharable>;
if v4 == 0 goto label1;
v5 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v6 = <io.netty.handler.codec.compression.BrotliEncoder: io.netty.util.AttributeKey ATTR>;
v7 = interfaceinvoke v5.<io.netty.channel.Channel: io.netty.util.Attribute attr(io.netty.util.AttributeKey)>(v6);
interfaceinvoke v7.<io.netty.util.Attribute: void set(java.lang.Object)>(v2);
goto label2;
label1:
v0.<io.netty.handler.codec.compression.BrotliEncoder: io.netty.handler.codec.compression.BrotliEncoder$Writer writer> = v2;
label2:
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.compression.BrotliEncoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
virtualinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder: void finish(io.netty.channel.ChannelHandlerContext)>(v1);
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v3;
io.netty.handler.codec.compression.BrotliEncoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
return;
}
protected io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, boolean) throws java.lang.Exception
{
io.netty.util.AttributeKey v8;
io.netty.util.Attribute v9;
io.netty.handler.codec.compression.BrotliEncoder v0;
io.netty.channel.Channel v7;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v11, v12, v2, v5;
java.lang.Object v10;
boolean v3, v4, v6;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: boolean;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 != 0 goto label1;
v5 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
return v5;
label1:
v6 = v0.<io.netty.handler.codec.compression.BrotliEncoder: boolean isSharable>;
if v6 == 0 goto label2;
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v8 = <io.netty.handler.codec.compression.BrotliEncoder: io.netty.util.AttributeKey ATTR>;
v9 = interfaceinvoke v7.<io.netty.channel.Channel: io.netty.util.Attribute attr(io.netty.util.AttributeKey)>(v8);
v10 = interfaceinvoke v9.<io.netty.util.Attribute: java.lang.Object get()>();
goto label3;
label2:
v10 = v0.<io.netty.handler.codec.compression.BrotliEncoder: io.netty.handler.codec.compression.BrotliEncoder$Writer writer>;
label3:
if v10 != null goto label4;
v11 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
return v11;
label4:
specialinvoke v10.<io.netty.handler.codec.compression.BrotliEncoder$Writer: void encode(io.netty.buffer.ByteBuf,boolean)>(v2, v3);
v12 = v10.<io.netty.handler.codec.compression.BrotliEncoder$Writer: io.netty.buffer.ByteBuf writableBuffer>;
return v12;
}
public boolean isSharable()
{
io.netty.handler.codec.compression.BrotliEncoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 = v0.<io.netty.handler.codec.compression.BrotliEncoder: boolean isSharable>;
return v1;
}
public void finish(io.netty.channel.ChannelHandlerContext) throws java.io.IOException
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.compression.BrotliEncoder v0;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v2);
return;
}
private io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.io.IOException
{
io.netty.util.AttributeKey v5;
io.netty.util.Attribute v6;
io.netty.handler.codec.compression.BrotliEncoder v0;
io.netty.channel.Channel v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
java.lang.Object v7;
boolean v3;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.compression.BrotliEncoder: boolean isSharable>;
if v3 == 0 goto label1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v5 = <io.netty.handler.codec.compression.BrotliEncoder: io.netty.util.AttributeKey ATTR>;
v6 = interfaceinvoke v4.<io.netty.channel.Channel: io.netty.util.Attribute attr(io.netty.util.AttributeKey)>(v5);
v7 = interfaceinvoke v6.<io.netty.util.Attribute: java.lang.Object getAndSet(java.lang.Object)>(null);
goto label2;
label1:
v7 = v0.<io.netty.handler.codec.compression.BrotliEncoder: io.netty.handler.codec.compression.BrotliEncoder$Writer writer>;
label2:
if v7 == null goto label3;
virtualinvoke v7.<io.netty.handler.codec.compression.BrotliEncoder$Writer: void close()>();
v0.<io.netty.handler.codec.compression.BrotliEncoder: io.netty.handler.codec.compression.BrotliEncoder$Writer writer> = null;
label3:
return v2;
}
public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2, v3;
io.netty.handler.codec.compression.BrotliEncoder v0;
io.netty.channel.ChannelFuture v4;
v0 := @this: io.netty.handler.codec.compression.BrotliEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v4 = specialinvoke v0.<io.netty.handler.codec.compression.BrotliEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v3);
staticinvoke <io.netty.handler.codec.compression.EncoderUtil: void closeAfterFinishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise)>(v1, v4, v2);
return;
}
static void <clinit>()
{
io.netty.util.AttributeKey v0;
java.lang.IllegalStateException v5;
java.lang.NoSuchMethodException v4;
java.lang.Class[] v2;
java.lang.Class v1;
java.lang.reflect.Method v3;
v0 = staticinvoke <io.netty.util.AttributeKey: io.netty.util.AttributeKey valueOf(java.lang.String)>("BrotliEncoderWriter");
<io.netty.handler.codec.compression.BrotliEncoder: io.netty.util.AttributeKey ATTR> = v0;
label1:
v1 = class "Lcom/aayushatharva/brotli4j/encoder/Encoder;";
v2 = newarray (java.lang.Class)[0];
v3 = virtualinvoke v1.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("flush", v2);
virtualinvoke v3.<java.lang.reflect.Method: void setAccessible(boolean)>(1);
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.Throwable)>(v4);
throw v5;
label4:
<io.netty.handler.codec.compression.BrotliEncoder: java.lang.reflect.Method FLUSH_METHOD> = v3;
return;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
}
}