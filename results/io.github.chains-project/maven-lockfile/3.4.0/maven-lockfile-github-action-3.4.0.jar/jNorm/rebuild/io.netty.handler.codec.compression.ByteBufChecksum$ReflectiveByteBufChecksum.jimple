final class io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum extends io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum
{
private final java.lang.reflect.Method method;
void <init>(java.util.zip.Checksum, java.lang.reflect.Method)
{
java.util.zip.Checksum v1;
io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum v0;
java.lang.reflect.Method v2;
v0 := @this: io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum;
v1 := @parameter0: java.util.zip.Checksum;
v2 := @parameter1: java.lang.reflect.Method;
specialinvoke v0.<io.netty.handler.codec.compression.ByteBufChecksum$SlowByteBufChecksum: void <init>(java.util.zip.Checksum)>(v1);
v0.<io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum: java.lang.reflect.Method method> = v2;
return;
}
public void update(io.netty.buffer.ByteBuf, int, int)
{
java.lang.Throwable v12;
byte[] v5;
java.lang.Object[] v10;
java.lang.Error v13;
java.nio.ByteBuffer v11;
java.util.zip.Checksum v9;
io.netty.buffer.ByteBuf v1;
int v2, v3, v6, v7;
io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum v0;
java.lang.reflect.Method v8;
boolean v4;
v0 := @this: io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean hasArray()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: byte[] array()>();
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v7 = v6 + v2;
virtualinvoke v0.<io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum: void update(byte[],int,int)>(v5, v7, v3);
goto label4;
label1:
v8 = v0.<io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum: java.lang.reflect.Method method>;
v9 = v0.<io.netty.handler.codec.compression.ByteBufChecksum$ReflectiveByteBufChecksum: java.util.zip.Checksum checksum>;
v10 = newarray (java.lang.Object)[1];
v11 = staticinvoke <io.netty.handler.codec.compression.CompressionUtil: java.nio.ByteBuffer safeNioBuffer(io.netty.buffer.ByteBuf,int,int)>(v1, v2, v3);
v10[0] = v11;
virtualinvoke v8.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v9, v10);
label2:
goto label4;
label3:
v12 := @caughtexception;
v13 = new java.lang.Error;
specialinvoke v13.<java.lang.Error: void <init>()>();
throw v13;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}