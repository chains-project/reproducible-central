final class io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder extends java.lang.Object
{
private final int[] bwtBlock;
private final int bwtLength;
private final boolean[] bwtValuesPresent;
private final char[] mtfBlock;
private int mtfLength;
private final int[] mtfSymbolFrequencies;
private int alphabetSize;
void <init>(int[], int, boolean[])
{
int[] v1, v4;
boolean[] v3;
int v2, v5;
char[] v6;
io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder;
v1 := @parameter0: int[];
v2 := @parameter1: int;
v3 := @parameter2: boolean[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = newarray (int)[258];
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int[] mtfSymbolFrequencies> = v4;
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int[] bwtBlock> = v1;
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int bwtLength> = v2;
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: boolean[] bwtValuesPresent> = v3;
v5 = v2 + 1;
v6 = newarray (char)[v5];
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: char[] mtfBlock> = v6;
return;
}
void encode()
{
byte[] v6;
byte v21;
int[] v3, v5;
boolean v11;
int v1, v10, v12, v13, v14, v15, v16, v17, v18, v19, v20, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v43, v44, v45, v8, v9;
boolean[] v2;
io.netty.handler.codec.compression.Bzip2MoveToFrontTable v7;
char[] v4;
io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int bwtLength>;
v2 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: boolean[] bwtValuesPresent>;
v3 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int[] bwtBlock>;
v4 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: char[] mtfBlock>;
v5 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int[] mtfSymbolFrequencies>;
v6 = newarray (byte)[256];
v7 = new io.netty.handler.codec.compression.Bzip2MoveToFrontTable;
specialinvoke v7.<io.netty.handler.codec.compression.Bzip2MoveToFrontTable: void <init>()>();
v8 = 0;
v9 = 0;
label01:
v10 = lengthof v6;
if v9 >= v10 goto label03;
v11 = v2[v9];
if v11 == 0 goto label02;
v12 = v8;
v8 = v8 + 1;
v6[v9] = v12;
label02:
v9 = v9 + 1;
goto label01;
label03:
v13 = v8 + 1;
v14 = 0;
v15 = 0;
v16 = 0;
v17 = 0;
v18 = 0;
label04:
if v18 >= v1 goto label12;
v19 = v3[v18];
v20 = v19 & 255;
v21 = v6[v20];
v22 = virtualinvoke v7.<io.netty.handler.codec.compression.Bzip2MoveToFrontTable: int valueToFront(byte)>(v21);
if v22 != 0 goto label05;
v15 = v15 + 1;
goto label11;
label05:
if v15 <= 0 goto label10;
v23 = v15 - 1;
label06:
v24 = v23 & 1;
if v24 != 0 goto label07;
v25 = v14;
v14 = v14 + 1;
v4[v25] = 0;
v16 = v16 + 1;
goto label08;
label07:
v26 = v14;
v14 = v14 + 1;
v4[v26] = 1;
v17 = v17 + 1;
label08:
if v23 <= 1 goto label09;
v27 = v23 - 2;
v23 = v27 >>> 1;
goto label06;
label09:
v15 = 0;
label10:
v28 = v14;
v14 = v14 + 1;
v29 = v22 + 1;
v4[v28] = v29;
v30 = v22 + 1;
v31 = v5[v30];
v32 = v31 + 1;
v5[v30] = v32;
label11:
v18 = v18 + 1;
goto label04;
label12:
if v15 <= 0 goto label16;
v33 = v15 - 1;
label13:
v34 = v33 & 1;
if v34 != 0 goto label14;
v35 = v14;
v14 = v14 + 1;
v4[v35] = 0;
v16 = v16 + 1;
goto label15;
label14:
v36 = v14;
v14 = v14 + 1;
v4[v36] = 1;
v17 = v17 + 1;
label15:
if v33 <= 1 goto label16;
v37 = v33 - 2;
v33 = v37 >>> 1;
goto label13;
label16:
v4[v14] = v13;
v38 = v5[v13];
v39 = v38 + 1;
v5[v13] = v39;
v40 = v5[0];
v41 = v40 + v16;
v5[0] = v41;
v42 = v5[1];
v43 = v42 + v17;
v5[1] = v43;
v44 = v14 + 1;
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int mtfLength> = v44;
v45 = v13 + 1;
v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int alphabetSize> = v45;
return;
}
char[] mtfBlock()
{
char[] v1;
io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: char[] mtfBlock>;
return v1;
}
int mtfLength()
{
int v1;
io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int mtfLength>;
return v1;
}
int mtfAlphabetSize()
{
int v1;
io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int alphabetSize>;
return v1;
}
int[] mtfSymbolFrequencies()
{
io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder v0;
int[] v1;
v0 := @this: io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2MTFAndRLE2StageEncoder: int[] mtfSymbolFrequencies>;
return v1;
}
}