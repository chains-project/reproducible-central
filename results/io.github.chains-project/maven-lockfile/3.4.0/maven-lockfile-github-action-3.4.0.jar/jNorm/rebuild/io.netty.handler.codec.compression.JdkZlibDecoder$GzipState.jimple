final enum class io.netty.handler.codec.compression.JdkZlibDecoder$GzipState extends java.lang.Enum
{
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC;
public static final enum io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START;
private static final io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES;
public static io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] values()
{
java.lang.Object v1;
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] v0;
v0 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.compression.JdkZlibDecoder$GzipState valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/compression/JdkZlibDecoder$GzipState;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $values()
{
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState v1, v2, v3, v4, v5, v6, v7, v8;
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] v0;
v0 = newarray (io.netty.handler.codec.compression.JdkZlibDecoder$GzipState)[8];
v1 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START>;
v0[0] = v1;
v2 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END>;
v0[1] = v2;
v3 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ>;
v0[2] = v3;
v4 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ>;
v0[3] = v4;
v5 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME>;
v0[4] = v5;
v6 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT>;
v0[5] = v6;
v7 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC>;
v0[6] = v7;
v8 = <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START>;
v0[7] = v8;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState v0, v1, v2, v3, v4, v5, v6, v7;
io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] v8;
v0 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v0.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("HEADER_START", 0);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_START> = v0;
v1 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v1.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("HEADER_END", 1);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState HEADER_END> = v1;
v2 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v2.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("FLG_READ", 2);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FLG_READ> = v2;
v3 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v3.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("XLEN_READ", 3);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState XLEN_READ> = v3;
v4 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v4.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("SKIP_FNAME", 4);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_FNAME> = v4;
v5 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v5.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("SKIP_COMMENT", 5);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState SKIP_COMMENT> = v5;
v6 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v6.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("PROCESS_FHCRC", 6);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState PROCESS_FHCRC> = v6;
v7 = new io.netty.handler.codec.compression.JdkZlibDecoder$GzipState;
specialinvoke v7.<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: void <init>(java.lang.String,int)>("FOOTER_START", 7);
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState FOOTER_START> = v7;
v8 = staticinvoke <io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $values()>();
<io.netty.handler.codec.compression.JdkZlibDecoder$GzipState: io.netty.handler.codec.compression.JdkZlibDecoder$GzipState[] $VALUES> = v8;
return;
}
}