public class io.netty.handler.codec.compression.SnappyFrameEncoder extends io.netty.handler.codec.MessageToByteEncoder
{
private static final int MIN_COMPRESSIBLE_LENGTH;
private static final byte[] STREAM_START;
private final io.netty.handler.codec.compression.Snappy snappy;
private boolean started;
public void <init>()
{
io.netty.handler.codec.compression.SnappyFrameEncoder v0;
io.netty.handler.codec.compression.Snappy v1;
v0 := @this: io.netty.handler.codec.compression.SnappyFrameEncoder;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>()>();
v1 = new io.netty.handler.codec.compression.Snappy;
specialinvoke v1.<io.netty.handler.codec.compression.Snappy: void <init>()>();
v0.<io.netty.handler.codec.compression.SnappyFrameEncoder: io.netty.handler.codec.compression.Snappy snappy> = v1;
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
byte[] v6;
io.netty.handler.codec.compression.SnappyFrameEncoder v0;
io.netty.handler.codec.compression.Snappy v12, v14;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v10, v11, v13, v2, v3;
int v7, v8, v9;
boolean v4, v5;
v0 := @this: io.netty.handler.codec.compression.SnappyFrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 != 0 goto label1;
return;
label1:
v5 = v0.<io.netty.handler.codec.compression.SnappyFrameEncoder: boolean started>;
if v5 != 0 goto label2;
v0.<io.netty.handler.codec.compression.SnappyFrameEncoder: boolean started> = 1;
v6 = <io.netty.handler.codec.compression.SnappyFrameEncoder: byte[] STREAM_START>;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v6);
label2:
v7 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v7 <= 18 goto label6;
label3:
v8 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int writerIndex()>();
v9 = v8 + 1;
if v7 >= 18 goto label4;
v10 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v7);
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void writeUnencodedChunk(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int)>(v10, v3, v7);
goto label7;
label4:
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(0);
if v7 <= 32767 goto label5;
v11 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(32767);
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void calculateAndWriteChecksum(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v11, v3);
v12 = v0.<io.netty.handler.codec.compression.SnappyFrameEncoder: io.netty.handler.codec.compression.Snappy snappy>;
virtualinvoke v12.<io.netty.handler.codec.compression.Snappy: void encode(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int)>(v11, v3, 32767);
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void setChunkLength(io.netty.buffer.ByteBuf,int)>(v3, v9);
v7 = v7 - 32767;
goto label3;
label5:
v13 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v7);
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void calculateAndWriteChecksum(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v13, v3);
v14 = v0.<io.netty.handler.codec.compression.SnappyFrameEncoder: io.netty.handler.codec.compression.Snappy snappy>;
virtualinvoke v14.<io.netty.handler.codec.compression.Snappy: void encode(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int)>(v13, v3, v7);
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void setChunkLength(io.netty.buffer.ByteBuf,int)>(v3, v9);
goto label7;
label6:
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void writeUnencodedChunk(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int)>(v2, v3, v7);
label7:
return;
}
private static void writeUnencodedChunk(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf, int)
{
io.netty.buffer.ByteBuf v0, v1;
int v2, v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 := @parameter2: int;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(1);
v3 = v2 + 4;
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void writeChunkLength(io.netty.buffer.ByteBuf,int)>(v1, v3);
staticinvoke <io.netty.handler.codec.compression.SnappyFrameEncoder: void calculateAndWriteChecksum(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v0, v1);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int)>(v0, v2);
return;
}
private static void setChunkLength(io.netty.buffer.ByteBuf, int)
{
io.netty.handler.codec.compression.CompressionException v6;
io.netty.buffer.ByteBuf v0;
int v1, v2, v3, v4, v5;
java.lang.String v7;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
v3 = v2 - v1;
v4 = v3 - 3;
v5 = v4 >>> 24;
if v5 == 0 goto label1;
v6 = new io.netty.handler.codec.compression.CompressionException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("compressed data too large: \u0001");
specialinvoke v6.<io.netty.handler.codec.compression.CompressionException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setMediumLE(int,int)>(v1, v4);
return;
}
private static void writeChunkLength(io.netty.buffer.ByteBuf, int)
{
int v1;
io.netty.buffer.ByteBuf v0;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeMediumLE(int)>(v1);
return;
}
private static void calculateAndWriteChecksum(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf)
{
int v2;
io.netty.buffer.ByteBuf v0, v1;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = staticinvoke <io.netty.handler.codec.compression.Snappy: int calculateChecksum(io.netty.buffer.ByteBuf)>(v0);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeIntLE(int)>(v2);
return;
}
static void <clinit>()
{
byte[] v0;
v0 = newarray (byte)[10];
v0[0] = -1;
v0[1] = 6;
v0[2] = 0;
v0[3] = 0;
v0[4] = 115;
v0[5] = 78;
v0[6] = 97;
v0[7] = 80;
v0[8] = 112;
v0[9] = 89;
<io.netty.handler.codec.compression.SnappyFrameEncoder: byte[] STREAM_START> = v0;
return;
}
}