public final enum class io.netty.handler.codec.compression.ZlibWrapper extends java.lang.Enum
{
public static final enum io.netty.handler.codec.compression.ZlibWrapper ZLIB;
public static final enum io.netty.handler.codec.compression.ZlibWrapper GZIP;
public static final enum io.netty.handler.codec.compression.ZlibWrapper NONE;
public static final enum io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE;
private static final io.netty.handler.codec.compression.ZlibWrapper[] $VALUES;
public static io.netty.handler.codec.compression.ZlibWrapper[] values()
{
io.netty.handler.codec.compression.ZlibWrapper[] v0;
java.lang.Object v1;
v0 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.compression.ZlibWrapper valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/compression/ZlibWrapper;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
io.netty.handler.codec.compression.ZlibWrapper v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.compression.ZlibWrapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static io.netty.handler.codec.compression.ZlibWrapper[] $values()
{
io.netty.handler.codec.compression.ZlibWrapper[] v0;
io.netty.handler.codec.compression.ZlibWrapper v1, v2, v3, v4;
v0 = newarray (io.netty.handler.codec.compression.ZlibWrapper)[4];
v1 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
v0[0] = v1;
v2 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper GZIP>;
v0[1] = v2;
v3 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper NONE>;
v0[2] = v3;
v4 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.compression.ZlibWrapper[] v4;
io.netty.handler.codec.compression.ZlibWrapper v0, v1, v2, v3;
v0 = new io.netty.handler.codec.compression.ZlibWrapper;
specialinvoke v0.<io.netty.handler.codec.compression.ZlibWrapper: void <init>(java.lang.String,int)>("ZLIB", 0);
<io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB> = v0;
v1 = new io.netty.handler.codec.compression.ZlibWrapper;
specialinvoke v1.<io.netty.handler.codec.compression.ZlibWrapper: void <init>(java.lang.String,int)>("GZIP", 1);
<io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper GZIP> = v1;
v2 = new io.netty.handler.codec.compression.ZlibWrapper;
specialinvoke v2.<io.netty.handler.codec.compression.ZlibWrapper: void <init>(java.lang.String,int)>("NONE", 2);
<io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper NONE> = v2;
v3 = new io.netty.handler.codec.compression.ZlibWrapper;
specialinvoke v3.<io.netty.handler.codec.compression.ZlibWrapper: void <init>(java.lang.String,int)>("ZLIB_OR_NONE", 3);
<io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB_OR_NONE> = v3;
v4 = staticinvoke <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper[] $values()>();
<io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper[] $VALUES> = v4;
return;
}
}