public abstract class io.netty.handler.codec.dns.AbstractDnsMessage extends io.netty.util.AbstractReferenceCounted implements io.netty.handler.codec.dns.DnsMessage
{
private static final io.netty.util.ResourceLeakDetector leakDetector;
private static final int SECTION_QUESTION;
private static final int SECTION_COUNT;
private final io.netty.util.ResourceLeakTracker leak;
private short id;
private io.netty.handler.codec.dns.DnsOpCode opCode;
private boolean recursionDesired;
private byte z;
private java.lang.Object questions;
private java.lang.Object answers;
private java.lang.Object authorities;
private java.lang.Object additionals;
static final boolean $assertionsDisabled;
protected void <init>(int)
{
int v1;
io.netty.handler.codec.dns.DnsOpCode v2;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 = <io.netty.handler.codec.dns.DnsOpCode: io.netty.handler.codec.dns.DnsOpCode QUERY>;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void <init>(int,io.netty.handler.codec.dns.DnsOpCode)>(v1, v2);
return;
}
protected void <init>(int, io.netty.handler.codec.dns.DnsOpCode)
{
io.netty.handler.codec.dns.DnsOpCode v2;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
io.netty.util.ResourceLeakDetector v3;
io.netty.util.ResourceLeakTracker v4;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.dns.DnsOpCode;
specialinvoke v0.<io.netty.util.AbstractReferenceCounted: void <init>()>();
v3 = <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.util.ResourceLeakDetector leakDetector>;
v4 = virtualinvoke v3.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v0);
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.util.ResourceLeakTracker leak> = v4;
virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsMessage setId(int)>(v1);
virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode)>(v2);
return;
}
public int id()
{
short v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: short id>;
v2 = (int) 65535;
v3 = v1 & v2;
return v3;
}
public io.netty.handler.codec.dns.DnsMessage setId(int)
{
int v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: short id> = v1;
return v0;
}
public io.netty.handler.codec.dns.DnsOpCode opCode()
{
io.netty.handler.codec.dns.DnsOpCode v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsOpCode opCode>;
return v1;
}
public io.netty.handler.codec.dns.DnsMessage setOpCode(io.netty.handler.codec.dns.DnsOpCode)
{
java.lang.Object v2;
io.netty.handler.codec.dns.DnsOpCode v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsOpCode;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "opCode");
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsOpCode opCode> = v2;
return v0;
}
public boolean isRecursionDesired()
{
boolean v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: boolean recursionDesired>;
return v1;
}
public io.netty.handler.codec.dns.DnsMessage setRecursionDesired(boolean)
{
boolean v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: boolean recursionDesired> = v1;
return v0;
}
public int z()
{
byte v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: byte z>;
return v1;
}
public io.netty.handler.codec.dns.DnsMessage setZ(int)
{
int v1, v2;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 = v1 & 7;
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: byte z> = v2;
return v0;
}
public int count(io.netty.handler.codec.dns.DnsSection)
{
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
v3 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: int count(int)>(v2);
return v3;
}
private int count(int)
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1, v4;
java.lang.Object v2;
boolean v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v2 != null goto label1;
return 0;
label1:
v3 = v2 instanceof io.netty.handler.codec.dns.DnsRecord;
if v3 == 0 goto label2;
return 1;
label2:
v4 = interfaceinvoke v2.<java.util.List: int size()>();
return v4;
}
public int count()
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1, v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = 0;
v2 = 0;
label1:
if v2 >= 4 goto label2;
v3 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: int count(int)>(v2);
v1 = v1 + v3;
v2 = v2 + 1;
goto label1;
label2:
return v1;
}
public io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection)
{
io.netty.handler.codec.dns.DnsRecord v3;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
v3 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord recordAt(int)>(v2);
return v3;
}
private io.netty.handler.codec.dns.DnsRecord recordAt(int)
{
io.netty.handler.codec.dns.DnsRecord v4, v7;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
java.lang.Object v2, v6;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v2 != null goto label1;
return null;
label1:
v3 = v2 instanceof io.netty.handler.codec.dns.DnsRecord;
if v3 == 0 goto label2;
v4 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v2);
return v4;
label2:
v5 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v5 == 0 goto label3;
return null;
label3:
v6 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(0);
v7 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v6);
return v7;
}
public io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection, int)
{
io.netty.handler.codec.dns.DnsRecord v4;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 := @parameter1: int;
v3 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
v4 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord recordAt(int,int)>(v3, v2);
return v4;
}
private io.netty.handler.codec.dns.DnsRecord recordAt(int, int)
{
io.netty.handler.codec.dns.DnsRecord v11, v7;
java.lang.IndexOutOfBoundsException v4, v8;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1, v2;
java.lang.Object v10, v3;
java.lang.String v5, v9;
boolean v6;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v3 != null goto label1;
v4 = new java.lang.IndexOutOfBoundsException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: none)");
specialinvoke v4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v3 instanceof io.netty.handler.codec.dns.DnsRecord;
if v6 == 0 goto label3;
if v2 != 0 goto label2;
v7 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v3);
return v7;
label2:
v8 = new java.lang.IndexOutOfBoundsException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001\' (expected: 0)");
specialinvoke v8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v9);
throw v8;
label3:
v10 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v2);
v11 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v10);
return v11;
}
public io.netty.handler.codec.dns.DnsMessage setRecord(io.netty.handler.codec.dns.DnsSection, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v2;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord;
v3 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setRecord(int,io.netty.handler.codec.dns.DnsRecord)>(v3, v2);
return v0;
}
private void setRecord(int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v2, v3;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void clear(int)>(v1);
v3 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord checkQuestion(int,io.netty.handler.codec.dns.DnsRecord)>(v1, v2);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, v3);
return;
}
public io.netty.handler.codec.dns.DnsRecord setRecord(io.netty.handler.codec.dns.DnsSection, int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v3, v5;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2, v4;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord;
v4 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
v5 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord setRecord(int,int,io.netty.handler.codec.dns.DnsRecord)>(v4, v2, v3);
return v5;
}
private io.netty.handler.codec.dns.DnsRecord setRecord(int, int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v12, v3, v8;
java.lang.IndexOutOfBoundsException v5, v9;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1, v2;
java.lang.Object v11, v4;
java.lang.String v10, v6;
boolean v7;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord;
staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord checkQuestion(int,io.netty.handler.codec.dns.DnsRecord)>(v1, v3);
v4 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v4 != null goto label1;
v5 = new java.lang.IndexOutOfBoundsException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: none)");
specialinvoke v5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v6);
throw v5;
label1:
v7 = v4 instanceof io.netty.handler.codec.dns.DnsRecord;
if v7 == 0 goto label3;
if v2 != 0 goto label2;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, v3);
v8 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v4);
return v8;
label2:
v9 = new java.lang.IndexOutOfBoundsException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: 0)");
specialinvoke v9.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v10);
throw v9;
label3:
v11 = interfaceinvoke v4.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v2, v3);
v12 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v11);
return v12;
}
public io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v2;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord;
v3 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void addRecord(int,io.netty.handler.codec.dns.DnsRecord)>(v3, v2);
return v0;
}
private void addRecord(int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v2, v6;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
java.lang.Object v3;
boolean v4;
java.util.ArrayList v5;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord;
staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord checkQuestion(int,io.netty.handler.codec.dns.DnsRecord)>(v1, v2);
v3 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v3 != null goto label1;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, v2);
return;
label1:
v4 = v3 instanceof io.netty.handler.codec.dns.DnsRecord;
if v4 == 0 goto label2;
v5 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: java.util.ArrayList newRecordList()>();
v6 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v3);
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v6);
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v2);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, v5);
return;
label2:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v2);
return;
}
public io.netty.handler.codec.dns.DnsMessage addRecord(io.netty.handler.codec.dns.DnsSection, int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v3;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2, v4;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord;
v4 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void addRecord(int,int,io.netty.handler.codec.dns.DnsRecord)>(v4, v2, v3);
return v0;
}
private void addRecord(int, int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v10, v3, v9;
java.lang.IndexOutOfBoundsException v11, v5;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
java.util.ArrayList v8;
int v1, v2;
java.lang.Object v4;
java.lang.String v12, v6;
boolean v7;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.dns.DnsRecord;
staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord checkQuestion(int,io.netty.handler.codec.dns.DnsRecord)>(v1, v3);
v4 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v4 != null goto label2;
if v2 == 0 goto label1;
v5 = new java.lang.IndexOutOfBoundsException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: 0)");
specialinvoke v5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v6);
throw v5;
label1:
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, v3);
return;
label2:
v7 = v4 instanceof io.netty.handler.codec.dns.DnsRecord;
if v7 == 0 goto label6;
if v2 != 0 goto label3;
v8 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: java.util.ArrayList newRecordList()>();
interfaceinvoke v8.<java.util.List: boolean add(java.lang.Object)>(v3);
v9 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v4);
interfaceinvoke v8.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label5;
label3:
if v2 != 1 goto label4;
v8 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: java.util.ArrayList newRecordList()>();
v10 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v4);
interfaceinvoke v8.<java.util.List: boolean add(java.lang.Object)>(v10);
interfaceinvoke v8.<java.util.List: boolean add(java.lang.Object)>(v3);
goto label5;
label4:
v11 = new java.lang.IndexOutOfBoundsException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: 0 or 1)");
specialinvoke v11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v12);
throw v11;
label5:
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, v8);
return;
label6:
interfaceinvoke v4.<java.util.List: void add(int,java.lang.Object)>(v2, v3);
return;
}
public io.netty.handler.codec.dns.DnsRecord removeRecord(io.netty.handler.codec.dns.DnsSection, int)
{
io.netty.handler.codec.dns.DnsRecord v4;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 := @parameter1: int;
v3 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
v4 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord removeRecord(int,int)>(v3, v2);
return v4;
}
private io.netty.handler.codec.dns.DnsRecord removeRecord(int, int)
{
io.netty.handler.codec.dns.DnsRecord v11, v9;
java.lang.IndexOutOfBoundsException v4, v7;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1, v2;
java.lang.Object v10, v3;
java.lang.String v5, v8;
boolean v6;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
if v3 != null goto label1;
v4 = new java.lang.IndexOutOfBoundsException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: none)");
specialinvoke v4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v3 instanceof io.netty.handler.codec.dns.DnsRecord;
if v6 == 0 goto label3;
if v2 == 0 goto label2;
v7 = new java.lang.IndexOutOfBoundsException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("index: \u0001 (expected: 0)");
specialinvoke v7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v8);
throw v7;
label2:
v9 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v3);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, null);
return v9;
label3:
v10 = interfaceinvoke v3.<java.util.List: java.lang.Object remove(int)>(v2);
v11 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)>(v10);
return v11;
}
public io.netty.handler.codec.dns.DnsMessage clear(io.netty.handler.codec.dns.DnsSection)
{
int v2;
io.netty.handler.codec.dns.DnsSection v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v2 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsMessage: int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)>(v1);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void clear(int)>(v2);
return v0;
}
public io.netty.handler.codec.dns.DnsMessage clear()
{
int v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = 0;
label1:
if v1 >= 4 goto label2;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void clear(int)>(v1);
v1 = v1 + 1;
goto label1;
label2:
return v0;
}
private void clear(int)
{
java.util.Iterator v6;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
java.lang.Object v2, v8;
boolean v3, v4, v5, v7;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object sectionAt(int)>(v1);
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: void setSection(int,java.lang.Object)>(v1, null);
v3 = v2 instanceof io.netty.util.ReferenceCounted;
if v3 == 0 goto label1;
interfaceinvoke v2.<io.netty.util.ReferenceCounted: boolean release()>();
goto label3;
label1:
v4 = v2 instanceof java.util.List;
if v4 == 0 goto label3;
v5 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v5 != 0 goto label3;
v6 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label2:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label3;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v8);
goto label2;
label3:
return;
}
public io.netty.handler.codec.dns.DnsMessage touch()
{
io.netty.util.ReferenceCounted v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted touch()>();
return v1;
}
public io.netty.handler.codec.dns.DnsMessage touch(java.lang.Object)
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
java.lang.Object v1;
io.netty.util.ResourceLeakTracker v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.util.ResourceLeakTracker leak>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.util.ResourceLeakTracker leak>;
interfaceinvoke v3.<io.netty.util.ResourceLeakTracker: void record(java.lang.Object)>(v1);
label1:
return v0;
}
public io.netty.handler.codec.dns.DnsMessage retain()
{
io.netty.util.ReferenceCounted v1;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain()>();
return v1;
}
public io.netty.handler.codec.dns.DnsMessage retain(int)
{
int v1;
io.netty.util.ReferenceCounted v2;
io.netty.handler.codec.dns.AbstractDnsMessage v0;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain(int)>(v1);
return v2;
}
protected void deallocate()
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
java.lang.AssertionError v4;
io.netty.util.ResourceLeakTracker v1;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.handler.codec.dns.DnsMessage clear()>();
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.util.ResourceLeakTracker leak>;
if v1 == null goto label1;
v2 = interfaceinvoke v1.<io.netty.util.ResourceLeakTracker: boolean close(java.lang.Object)>(v0);
v3 = <io.netty.handler.codec.dns.AbstractDnsMessage: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
if v2 != 0 goto label1;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label1:
return;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v3, v4;
java.lang.Object v1;
boolean v2, v5, v6, v7;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.netty.handler.codec.dns.DnsMessage;
if v2 != 0 goto label2;
return 0;
label2:
v3 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: int id()>();
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsMessage: int id()>();
if v3 == v4 goto label3;
return 0;
label3:
v5 = v0 instanceof io.netty.handler.codec.dns.DnsQuery;
if v5 == 0 goto label4;
v6 = v1 instanceof io.netty.handler.codec.dns.DnsQuery;
if v6 != 0 goto label5;
return 0;
label4:
v7 = v1 instanceof io.netty.handler.codec.dns.DnsQuery;
if v7 == 0 goto label5;
return 0;
label5:
return 1;
}
public int hashCode()
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1, v2, v5;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsMessage: int id()>();
v2 = v1 * 31;
v3 = v0 instanceof io.netty.handler.codec.dns.DnsQuery;
if v3 == 0 goto label1;
v4 = 0;
goto label2;
label1:
v4 = 1;
label2:
v5 = v2 + v4;
return v5;
}
private java.lang.Object sectionAt(int)
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
java.lang.Error v6;
java.lang.Object v2, v3, v4, v5;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
tableswitch(v1)
{
case 0: goto label1;
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
default: goto label5;
};
label1:
v2 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object questions>;
return v2;
label2:
v3 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object answers>;
return v3;
label3:
v4 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object authorities>;
return v4;
label4:
v5 = v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object additionals>;
return v5;
label5:
v6 = new java.lang.Error;
specialinvoke v6.<java.lang.Error: void <init>()>();
throw v6;
}
private void setSection(int, java.lang.Object)
{
io.netty.handler.codec.dns.AbstractDnsMessage v0;
int v1;
java.lang.Error v3;
java.lang.Object v2;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsMessage;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
tableswitch(v1)
{
case 0: goto label1;
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
default: goto label5;
};
label1:
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object questions> = v2;
return;
label2:
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object answers> = v2;
return;
label3:
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object authorities> = v2;
return;
label4:
v0.<io.netty.handler.codec.dns.AbstractDnsMessage: java.lang.Object additionals> = v2;
return;
label5:
v3 = new java.lang.Error;
specialinvoke v3.<java.lang.Error: void <init>()>();
throw v3;
}
private static int sectionOrdinal(io.netty.handler.codec.dns.DnsSection)
{
int v2;
java.lang.Object v1;
io.netty.handler.codec.dns.DnsSection v0;
v0 := @parameter0: io.netty.handler.codec.dns.DnsSection;
v1 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "section");
v2 = virtualinvoke v1.<io.netty.handler.codec.dns.DnsSection: int ordinal()>();
return v2;
}
private static io.netty.handler.codec.dns.DnsRecord checkQuestion(int, io.netty.handler.codec.dns.DnsRecord)
{
io.netty.handler.codec.dns.DnsRecord v1;
java.lang.IllegalArgumentException v5;
int v0, v2;
java.lang.Object v3;
java.lang.String v6, v7;
boolean v4;
v0 := @parameter0: int;
v1 := @parameter1: io.netty.handler.codec.dns.DnsRecord;
v2 = <io.netty.handler.codec.dns.AbstractDnsMessage: int SECTION_QUESTION>;
if v0 != v2 goto label1;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "record");
v4 = v3 instanceof io.netty.handler.codec.dns.DnsQuestion;
if v4 != 0 goto label1;
v5 = new java.lang.IllegalArgumentException;
v6 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(class "Lio/netty/handler/codec/dns/DnsQuestion;");
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.dns.DnsRecord,java.lang.String)>(v1, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("record: \u0001 (expected: \u0001)");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v5;
label1:
return v1;
}
private static io.netty.handler.codec.dns.DnsRecord castRecord(java.lang.Object)
{
java.lang.Object v0;
v0 := @parameter0: java.lang.Object;
return v0;
}
private static java.util.ArrayList newRecordList()
{
java.util.ArrayList v0;
v0 = new java.util.ArrayList;
specialinvoke v0.<java.util.ArrayList: void <init>(int)>(2);
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.dns.DnsSection v5;
int v6;
io.netty.util.ResourceLeakDetectorFactory v3;
java.lang.Class v0;
io.netty.util.ResourceLeakDetector v4;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/dns/AbstractDnsMessage;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.dns.AbstractDnsMessage: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <io.netty.util.ResourceLeakDetectorFactory: io.netty.util.ResourceLeakDetectorFactory instance()>();
v4 = virtualinvoke v3.<io.netty.util.ResourceLeakDetectorFactory: io.netty.util.ResourceLeakDetector newResourceLeakDetector(java.lang.Class)>(class "Lio/netty/handler/codec/dns/DnsMessage;");
<io.netty.handler.codec.dns.AbstractDnsMessage: io.netty.util.ResourceLeakDetector leakDetector> = v4;
v5 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v6 = virtualinvoke v5.<io.netty.handler.codec.dns.DnsSection: int ordinal()>();
<io.netty.handler.codec.dns.AbstractDnsMessage: int SECTION_QUESTION> = v6;
return;
}
}