public abstract class io.netty.handler.codec.dns.AbstractDnsRecord extends java.lang.Object implements io.netty.handler.codec.dns.DnsRecord
{
private final java.lang.String name;
private final io.netty.handler.codec.dns.DnsRecordType type;
private final short dnsClass;
private final long timeToLive;
private int hashCode;
protected void <init>(java.lang.String, io.netty.handler.codec.dns.DnsRecordType, long)
{
io.netty.handler.codec.dns.AbstractDnsRecord v0;
io.netty.handler.codec.dns.DnsRecordType v2;
long v3;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecordType;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long)>(v1, v2, 1, v3);
return;
}
protected void <init>(java.lang.String, io.netty.handler.codec.dns.DnsRecordType, int, long)
{
io.netty.handler.codec.dns.DnsRecordType v2;
long v4;
io.netty.handler.codec.dns.AbstractDnsRecord v0;
int v3;
java.lang.Object v7;
java.lang.String v1, v5, v6;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecordType;
v3 := @parameter2: int;
v4 := @parameter3: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: long checkPositiveOrZero(long,java.lang.String)>(v4, "timeToLive");
v5 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String IDNtoASCII(java.lang.String)>(v1);
v6 = staticinvoke <io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String appendTrailingDot(java.lang.String)>(v5);
v0.<io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String name> = v6;
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "type");
v0.<io.netty.handler.codec.dns.AbstractDnsRecord: io.netty.handler.codec.dns.DnsRecordType type> = v7;
v0.<io.netty.handler.codec.dns.AbstractDnsRecord: short dnsClass> = v3;
v0.<io.netty.handler.codec.dns.AbstractDnsRecord: long timeToLive> = v4;
return;
}
private static java.lang.String IDNtoASCII(java.lang.String)
{
java.lang.String v0, v2, v4;
boolean v1, v3;
v0 := @parameter0: java.lang.String;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "name");
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean isAndroid()>();
if v1 == 0 goto label1;
v2 = ".";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>(v0);
return v4;
}
private static java.lang.String appendTrailingDot(java.lang.String)
{
int v1, v2, v3;
char v4;
java.lang.String v0, v5;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 <= 0 goto label1;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
v3 = v2 - 1;
v4 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v3);
if v4 == 46 goto label1;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.");
return v5;
label1:
return v0;
}
public java.lang.String name()
{
io.netty.handler.codec.dns.AbstractDnsRecord v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String name>;
return v1;
}
public io.netty.handler.codec.dns.DnsRecordType type()
{
io.netty.handler.codec.dns.AbstractDnsRecord v0;
io.netty.handler.codec.dns.DnsRecordType v1;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: io.netty.handler.codec.dns.DnsRecordType type>;
return v1;
}
public int dnsClass()
{
io.netty.handler.codec.dns.AbstractDnsRecord v0;
short v1;
int v2, v3;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: short dnsClass>;
v2 = (int) 65535;
v3 = v1 & v2;
return v3;
}
public long timeToLive()
{
io.netty.handler.codec.dns.AbstractDnsRecord v0;
long v1;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: long timeToLive>;
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.dns.DnsRecordType v5, v7;
io.netty.handler.codec.dns.AbstractDnsRecord v0;
int v10, v3, v4, v6, v8, v9;
java.lang.Object v1;
java.lang.String v11, v12;
boolean v13, v14, v2;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.netty.handler.codec.dns.DnsRecord;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: int hashCode>;
if v3 == 0 goto label3;
v4 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
if v3 == v4 goto label3;
return 0;
label3:
v5 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.dns.DnsRecordType: int intValue()>();
v7 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v8 = virtualinvoke v7.<io.netty.handler.codec.dns.DnsRecordType: int intValue()>();
if v6 != v8 goto label4;
v9 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: int dnsClass()>();
v10 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: int dnsClass()>();
if v9 != v10 goto label4;
v11 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String name()>();
v12 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: java.lang.String name()>();
v13 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v12);
if v13 == 0 goto label4;
v14 = 1;
goto label5;
label4:
v14 = 0;
label5:
return v14;
}
public int hashCode()
{
io.netty.handler.codec.dns.DnsRecordType v5;
io.netty.handler.codec.dns.AbstractDnsRecord v0;
int v1, v10, v3, v4, v6, v7, v8, v9;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: int hashCode>;
if v1 == 0 goto label1;
return v1;
label1:
v2 = v0.<io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String name>;
v3 = virtualinvoke v2.<java.lang.String: int hashCode()>();
v4 = v3 * 31;
v5 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.dns.DnsRecordType: int intValue()>();
v7 = v6 * 31;
v8 = v4 + v7;
v9 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: int dnsClass()>();
v10 = v8 + v9;
v0.<io.netty.handler.codec.dns.AbstractDnsRecord: int hashCode> = v10;
return v10;
}
public java.lang.String toString()
{
long v8;
int v10;
java.lang.String v14, v16, v2, v5;
io.netty.handler.codec.dns.DnsRecordType v13;
io.netty.handler.codec.dns.AbstractDnsRecord v0;
java.lang.StringBuilder v1, v11, v12, v15, v3, v4, v6, v7, v9;
v0 := @this: io.netty.handler.codec.dns.AbstractDnsRecord;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>(int)>(64);
v2 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v0);
v3 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
v4 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
v5 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: java.lang.String name()>();
v6 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
v7 = virtualinvoke v6.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v8 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: long timeToLive()>();
v9 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v8);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v10 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: int dnsClass()>();
v11 = staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: java.lang.StringBuilder appendRecordClass(java.lang.StringBuilder,int)>(v1, v10);
v12 = virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v13 = virtualinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v14 = virtualinvoke v13.<io.netty.handler.codec.dns.DnsRecordType: java.lang.String name()>();
v15 = virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v14);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
v16 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v16;
}
}