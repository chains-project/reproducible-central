public class io.netty.handler.codec.dns.DefaultDnsRawRecord extends io.netty.handler.codec.dns.AbstractDnsRecord implements io.netty.handler.codec.dns.DnsRawRecord
{
private final io.netty.buffer.ByteBuf content;
public void <init>(java.lang.String, io.netty.handler.codec.dns.DnsRecordType, long, io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.dns.DnsRecordType v2;
io.netty.buffer.ByteBuf v4;
long v3;
java.lang.String v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecordType;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf)>(v1, v2, 1, v3, v4);
return;
}
public void <init>(java.lang.String, io.netty.handler.codec.dns.DnsRecordType, int, long, io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.dns.DnsRecordType v2;
io.netty.buffer.ByteBuf v5;
int v3;
java.lang.Object v6;
long v4;
java.lang.String v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecordType;
v3 := @parameter2: int;
v4 := @parameter3: long;
v5 := @parameter4: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.dns.AbstractDnsRecord: void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long)>(v1, v2, v3, v4);
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v5, "content");
v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content> = v6;
return;
}
public io.netty.buffer.ByteBuf content()
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content>;
return v1;
}
public io.netty.handler.codec.dns.DnsRawRecord copy()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.dns.DnsRawRecord v3;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf copy()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.handler.codec.dns.DnsRawRecord replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.dns.DnsRawRecord duplicate()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.dns.DnsRawRecord v3;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf duplicate()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.handler.codec.dns.DnsRawRecord replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.dns.DnsRawRecord retainedDuplicate()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.dns.DnsRawRecord v3;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedDuplicate()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.handler.codec.dns.DnsRawRecord replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.dns.DnsRawRecord replace(io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.dns.DnsRecordType v4;
io.netty.buffer.ByteBuf v1;
int v5;
long v6;
java.lang.String v3;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0, v2;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = new io.netty.handler.codec.dns.DefaultDnsRawRecord;
v3 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: java.lang.String name()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v5 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: int dnsClass()>();
v6 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: long timeToLive()>();
specialinvoke v2.<io.netty.handler.codec.dns.DefaultDnsRawRecord: void <init>(java.lang.String,io.netty.handler.codec.dns.DnsRecordType,int,long,io.netty.buffer.ByteBuf)>(v3, v4, v5, v6, v1);
return v2;
}
public int refCnt()
{
int v2;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int refCnt()>();
return v2;
}
public io.netty.handler.codec.dns.DnsRawRecord retain()
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
return v0;
}
public io.netty.handler.codec.dns.DnsRawRecord retain(int)
{
int v1;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain(int)>(v1);
return v0;
}
public boolean release()
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
boolean v2;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
return v2;
}
public boolean release(int)
{
io.netty.buffer.ByteBuf v2;
int v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
boolean v3;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release(int)>(v1);
return v3;
}
public io.netty.handler.codec.dns.DnsRawRecord touch()
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf touch()>();
return v0;
}
public io.netty.handler.codec.dns.DnsRawRecord touch(java.lang.Object)
{
java.lang.Object v1;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf touch(java.lang.Object)>(v1);
return v0;
}
public java.lang.String toString()
{
long v12, v7;
io.netty.buffer.ByteBuf v14;
int v13, v15, v8;
java.lang.String v1, v11, v16, v4, v6;
io.netty.handler.codec.dns.DefaultDnsRawRecord v0;
boolean v5;
io.netty.handler.codec.dns.DnsRecordType v2, v3;
java.lang.StringBuilder v10, v17, v18, v19, v20, v21, v9;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRawRecord;
specialinvoke v17.<java.lang.StringBuilder: void <init>(int)>(64);
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v0);
v2 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v3 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType OPT>;
if v2 == v3 goto label3;
v4 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: java.lang.String name()>();
v5 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v5 == 0 goto label1;
v6 = "<root>";
goto label2;
label1:
v6 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: java.lang.String name()>();
label2:
v7 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: long timeToLive()>();
virtualinvoke v21.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v8 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: int dnsClass()>();
v9 = staticinvoke <io.netty.handler.codec.dns.DnsMessageUtil: java.lang.StringBuilder appendRecordClass(java.lang.StringBuilder,int)>(v18, v8);
v10 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v11 = virtualinvoke v2.<io.netty.handler.codec.dns.DnsRecordType: java.lang.String name()>();
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
goto label4;
label3:
v12 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: long timeToLive()>();
v13 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: int dnsClass()>();
virtualinvoke v19.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v13);
label4:
v14 = virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRawRecord: io.netty.buffer.ByteBuf content()>();
v15 = virtualinvoke v14.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("B)");
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,long,long,int)>(v1, v6, v7, v12, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001 \u0001OPT flags:\u0001 udp: \u0001");
return v16;
}
}