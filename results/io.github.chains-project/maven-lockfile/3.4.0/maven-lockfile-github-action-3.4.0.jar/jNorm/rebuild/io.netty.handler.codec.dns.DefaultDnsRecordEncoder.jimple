public class io.netty.handler.codec.dns.DefaultDnsRecordEncoder extends java.lang.Object implements io.netty.handler.codec.dns.DnsRecordEncoder
{
private static final int PREFIX_MASK;
protected void <init>()
{
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public final void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecordType v4;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsQuestion v1;
int v5, v6;
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsQuestion;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuestion: java.lang.String name()>();
virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeName(java.lang.String,io.netty.buffer.ByteBuf)>(v3, v2);
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuestion: io.netty.handler.codec.dns.DnsRecordType type()>();
v5 = virtualinvoke v4.<io.netty.handler.codec.dns.DnsRecordType: int intValue()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v5);
v6 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuestion: int dnsClass()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v6);
return;
}
public void encodeRecord(io.netty.handler.codec.dns.DnsRecord, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v1;
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.UnsupportedMessageTypeException v8;
java.lang.String v9;
boolean v3, v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecord;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = v1 instanceof io.netty.handler.codec.dns.DnsQuestion;
if v3 == 0 goto label1;
virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf)>(v1, v2);
goto label6;
label1:
v4 = v1 instanceof io.netty.handler.codec.dns.DnsPtrRecord;
if v4 == 0 goto label2;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodePtrRecord(io.netty.handler.codec.dns.DnsPtrRecord,io.netty.buffer.ByteBuf)>(v1, v2);
goto label6;
label2:
v5 = v1 instanceof io.netty.handler.codec.dns.DnsOptEcsRecord;
if v5 == 0 goto label3;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeOptEcsRecord(io.netty.handler.codec.dns.DnsOptEcsRecord,io.netty.buffer.ByteBuf)>(v1, v2);
goto label6;
label3:
v6 = v1 instanceof io.netty.handler.codec.dns.DnsOptPseudoRecord;
if v6 == 0 goto label4;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeOptPseudoRecord(io.netty.handler.codec.dns.DnsOptPseudoRecord,io.netty.buffer.ByteBuf)>(v1, v2);
goto label6;
label4:
v7 = v1 instanceof io.netty.handler.codec.dns.DnsRawRecord;
if v7 == 0 goto label5;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeRawRecord(io.netty.handler.codec.dns.DnsRawRecord,io.netty.buffer.ByteBuf)>(v1, v2);
goto label6;
label5:
v8 = new io.netty.handler.codec.UnsupportedMessageTypeException;
v9 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v1);
specialinvoke v8.<io.netty.handler.codec.UnsupportedMessageTypeException: void <init>(java.lang.String)>(v9);
throw v8;
label6:
return;
}
private void encodeRecord0(io.netty.handler.codec.dns.DnsRecord, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v1;
io.netty.handler.codec.dns.DnsRecordType v4;
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
long v7;
io.netty.buffer.ByteBuf v2;
int v5, v6;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecord;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: java.lang.String name()>();
virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeName(java.lang.String,io.netty.buffer.ByteBuf)>(v3, v2);
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v5 = virtualinvoke v4.<io.netty.handler.codec.dns.DnsRecordType: int intValue()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v5);
v6 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: int dnsClass()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v6);
v7 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRecord: long timeToLive()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v7);
return;
}
private void encodePtrRecord(io.netty.handler.codec.dns.DnsPtrRecord, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsPtrRecord v1;
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsPtrRecord;
v2 := @parameter1: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeRecord0(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf)>(v1, v2);
v3 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsPtrRecord: java.lang.String hostname()>();
virtualinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeName(java.lang.String,io.netty.buffer.ByteBuf)>(v3, v2);
return;
}
private void encodeOptPseudoRecord(io.netty.handler.codec.dns.DnsOptPseudoRecord, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsOptPseudoRecord v1;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsOptPseudoRecord;
v2 := @parameter1: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeRecord0(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf)>(v1, v2);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(0);
return;
}
private void encodeOptEcsRecord(io.netty.handler.codec.dns.DnsOptEcsRecord, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
byte[] v6;
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
short v20;
byte v18, v19;
io.netty.buffer.ByteBuf v2;
int v11, v14, v15, v16, v17, v3, v4, v5, v7, v8;
io.netty.channel.socket.InternetProtocolFamily v12, v13;
java.lang.String v10;
java.lang.IllegalArgumentException v9;
io.netty.handler.codec.dns.DnsOptEcsRecord v1;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsOptEcsRecord;
v2 := @parameter1: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeRecord0(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf)>(v1, v2);
v3 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsOptEcsRecord: int sourcePrefixLength()>();
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsOptEcsRecord: int scopePrefixLength()>();
v5 = v3 & 7;
v6 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsOptEcsRecord: byte[] address()>();
v7 = lengthof v6;
v8 = v7 << 3;
if v8 < v3 goto label1;
if v3 >= 0 goto label2;
label1:
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v3, v3, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: \u0001 (expected: 0 >= \u0001)");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
label2:
v11 = lengthof v6;
if v11 != 4 goto label3;
v12 = <io.netty.channel.socket.InternetProtocolFamily: io.netty.channel.socket.InternetProtocolFamily IPv4>;
virtualinvoke v12.<io.netty.channel.socket.InternetProtocolFamily: int addressNumber()>();
goto label4;
label3:
v13 = <io.netty.channel.socket.InternetProtocolFamily: io.netty.channel.socket.InternetProtocolFamily IPv6>;
virtualinvoke v13.<io.netty.channel.socket.InternetProtocolFamily: int addressNumber()>();
label4:
v14 = staticinvoke <io.netty.handler.codec.dns.DefaultDnsRecordEncoder: int calculateEcsAddressLength(int,int)>(v3, v5);
v15 = 8 + v14;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v15);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(8);
v16 = v15 - 4;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v16);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v20);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v3);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v4);
if v5 <= 0 goto label5;
v17 = v14 - 1;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[],int,int)>(v6, 0, v17);
v18 = v6[v17];
v19 = staticinvoke <io.netty.handler.codec.dns.DefaultDnsRecordEncoder: byte padWithZeros(byte,int)>(v18, v5);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v19);
goto label6;
label5:
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[],int,int)>(v6, 0, v14);
label6:
return;
}
static int calculateEcsAddressLength(int, int)
{
int v0, v1, v2, v4;
boolean v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = v0 >>> 3;
if v1 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v4 = v2 + v3;
return v4;
}
private void encodeRawRecord(io.netty.handler.codec.dns.DnsRawRecord, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.buffer.ByteBuf v2, v3;
int v4, v5;
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
io.netty.handler.codec.dns.DnsRawRecord v1;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRawRecord;
v2 := @parameter1: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.dns.DefaultDnsRecordEncoder: void encodeRecord0(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf)>(v1, v2);
v3 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsRawRecord: io.netty.buffer.ByteBuf content()>();
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v4);
v5 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf,int,int)>(v3, v5, v4);
return;
}
protected void encodeName(java.lang.String, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DefaultDnsRecordEncoder v0;
java.lang.String v1;
io.netty.buffer.ByteBuf v2;
v0 := @this: io.netty.handler.codec.dns.DefaultDnsRecordEncoder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.buffer.ByteBuf;
staticinvoke <io.netty.handler.codec.dns.DnsCodecUtil: void encodeDomainName(java.lang.String,io.netty.buffer.ByteBuf)>(v1, v2);
return;
}
private static byte padWithZeros(byte, int)
{
java.lang.IllegalArgumentException v9;
short v2, v3, v4, v5, v6, v7, v8;
byte v0;
int v1;
java.lang.String v10;
v0 := @parameter0: byte;
v1 := @parameter1: int;
tableswitch(v1)
{
case 0: goto label01;
case 1: goto label02;
case 2: goto label03;
case 3: goto label04;
case 4: goto label05;
case 5: goto label06;
case 6: goto label07;
case 7: goto label08;
case 8: goto label09;
default: goto label10;
};
label01:
return 0;
label02:
v2 = 128 & v0;
return v2;
label03:
v3 = 192 & v0;
return v3;
label04:
v4 = 224 & v0;
return v4;
label05:
v5 = 240 & v0;
return v5;
label06:
v6 = 248 & v0;
return v6;
label07:
v7 = 252 & v0;
return v7;
label08:
v8 = 254 & v0;
return v8;
label09:
return v0;
label10:
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("lowOrderBitsToPreserve: \u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
}
}