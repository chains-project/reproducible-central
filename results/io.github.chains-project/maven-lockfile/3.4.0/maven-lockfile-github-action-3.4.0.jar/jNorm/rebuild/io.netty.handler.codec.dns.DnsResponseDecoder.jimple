abstract class io.netty.handler.codec.dns.DnsResponseDecoder extends java.lang.Object
{
private final io.netty.handler.codec.dns.DnsRecordDecoder recordDecoder;
void <init>(io.netty.handler.codec.dns.DnsRecordDecoder)
{
java.lang.Object v2;
io.netty.handler.codec.dns.DnsResponseDecoder v0;
io.netty.handler.codec.dns.DnsRecordDecoder v1;
v0 := @this: io.netty.handler.codec.dns.DnsResponseDecoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecordDecoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "recordDecoder");
v0.<io.netty.handler.codec.dns.DnsResponseDecoder: io.netty.handler.codec.dns.DnsRecordDecoder recordDecoder> = v2;
return;
}
final io.netty.handler.codec.dns.DnsResponse decode(java.net.SocketAddress, java.net.SocketAddress, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsResponseCode v9;
java.net.SocketAddress v1, v2;
io.netty.handler.codec.dns.DnsOpCode v8;
byte v35, v36;
io.netty.handler.codec.dns.DnsSection v29, v31, v33;
boolean v13, v16, v19, v22, v30, v32;
io.netty.handler.codec.dns.DnsResponseDecoder v0;
java.lang.Throwable v34;
io.netty.handler.codec.dns.DnsResponse v10;
io.netty.buffer.ByteBuf v3;
int v11, v12, v14, v15, v17, v18, v20, v21, v23, v24, v25, v26, v27, v28, v4, v5, v6;
io.netty.handler.codec.CorruptedFrameException v7;
v0 := @this: io.netty.handler.codec.dns.DnsResponseDecoder;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v5 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v6 = v5 >> 15;
if v6 != 0 goto label01;
v7 = new io.netty.handler.codec.CorruptedFrameException;
specialinvoke v7.<io.netty.handler.codec.CorruptedFrameException: void <init>(java.lang.String)>("not a response");
throw v7;
label01:
v8 = staticinvoke <io.netty.handler.codec.dns.DnsOpCode: io.netty.handler.codec.dns.DnsOpCode valueOf(int)>(v35);
v9 = staticinvoke <io.netty.handler.codec.dns.DnsResponseCode: io.netty.handler.codec.dns.DnsResponseCode valueOf(int)>(v36);
v10 = virtualinvoke v0.<io.netty.handler.codec.dns.DnsResponseDecoder: io.netty.handler.codec.dns.DnsResponse newResponse(java.net.SocketAddress,java.net.SocketAddress,int,io.netty.handler.codec.dns.DnsOpCode,io.netty.handler.codec.dns.DnsResponseCode)>(v1, v2, v4, v8, v9);
v11 = v5 >> 8;
v12 = v11 & 1;
if v12 != 1 goto label02;
v13 = 1;
goto label03;
label02:
v13 = 0;
label03:
interfaceinvoke v10.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse setRecursionDesired(boolean)>(v13);
v14 = v5 >> 10;
v15 = v14 & 1;
if v15 != 1 goto label04;
v16 = 1;
goto label05;
label04:
v16 = 0;
label05:
interfaceinvoke v10.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse setAuthoritativeAnswer(boolean)>(v16);
v17 = v5 >> 9;
v18 = v17 & 1;
if v18 != 1 goto label06;
v19 = 1;
goto label07;
label06:
v19 = 0;
label07:
interfaceinvoke v10.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse setTruncated(boolean)>(v19);
v20 = v5 >> 7;
v21 = v20 & 1;
if v21 != 1 goto label08;
v22 = 1;
goto label09;
label08:
v22 = 0;
label09:
interfaceinvoke v10.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse setRecursionAvailable(boolean)>(v22);
v23 = v5 >> 4;
v24 = v23 & 7;
interfaceinvoke v10.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse setZ(int)>(v24);
label10:
v25 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v26 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v27 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v28 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
specialinvoke v0.<io.netty.handler.codec.dns.DnsResponseDecoder: void decodeQuestions(io.netty.handler.codec.dns.DnsResponse,io.netty.buffer.ByteBuf,int)>(v10, v3, v25);
v29 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ANSWER>;
v30 = specialinvoke v0.<io.netty.handler.codec.dns.DnsResponseDecoder: boolean decodeRecords(io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int)>(v10, v29, v3, v26);
if v30 != 0 goto label12;
label11:
return v10;
label12:
v31 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection AUTHORITY>;
v32 = specialinvoke v0.<io.netty.handler.codec.dns.DnsResponseDecoder: boolean decodeRecords(io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int)>(v10, v31, v3, v27);
if v32 != 0 goto label14;
label13:
return v10;
label14:
v33 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
specialinvoke v0.<io.netty.handler.codec.dns.DnsResponseDecoder: boolean decodeRecords(io.netty.handler.codec.dns.DnsResponse,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf,int)>(v10, v33, v3, v28);
label15:
return v10;
label16:
v34 := @caughtexception;
interfaceinvoke v10.<io.netty.handler.codec.dns.DnsResponse: boolean release()>();
throw v34;
catch java.lang.Throwable from label10 to label11 with label16;
catch java.lang.Throwable from label12 to label13 with label16;
catch java.lang.Throwable from label14 to label15 with label16;
}
protected abstract io.netty.handler.codec.dns.DnsResponse newResponse(java.net.SocketAddress, java.net.SocketAddress, int, io.netty.handler.codec.dns.DnsOpCode, io.netty.handler.codec.dns.DnsResponseCode) throws java.lang.Exception;
private void decodeQuestions(io.netty.handler.codec.dns.DnsResponse, io.netty.buffer.ByteBuf, int) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsResponse v1;
io.netty.handler.codec.dns.DnsQuestion v7;
io.netty.handler.codec.dns.DnsRecordDecoder v6;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsSection v5;
int v3, v4;
io.netty.handler.codec.dns.DnsResponseDecoder v0;
v0 := @this: io.netty.handler.codec.dns.DnsResponseDecoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsResponse;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: int;
v4 = v3;
label1:
if v4 <= 0 goto label2;
v5 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v6 = v0.<io.netty.handler.codec.dns.DnsResponseDecoder: io.netty.handler.codec.dns.DnsRecordDecoder recordDecoder>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.dns.DnsRecordDecoder: io.netty.handler.codec.dns.DnsQuestion decodeQuestion(io.netty.buffer.ByteBuf)>(v2);
interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord)>(v5, v7);
v4 = v4 - 1;
goto label1;
label2:
return;
}
private boolean decodeRecords(io.netty.handler.codec.dns.DnsResponse, io.netty.handler.codec.dns.DnsSection, io.netty.buffer.ByteBuf, int) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v7;
io.netty.handler.codec.dns.DnsResponse v1;
io.netty.handler.codec.dns.DnsRecordDecoder v6;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.dns.DnsSection v2;
int v4, v5;
io.netty.handler.codec.dns.DnsResponseDecoder v0;
v0 := @this: io.netty.handler.codec.dns.DnsResponseDecoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsResponse;
v2 := @parameter1: io.netty.handler.codec.dns.DnsSection;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: int;
v5 = v4;
label1:
if v5 <= 0 goto label3;
v6 = v0.<io.netty.handler.codec.dns.DnsResponseDecoder: io.netty.handler.codec.dns.DnsRecordDecoder recordDecoder>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.dns.DnsRecordDecoder: io.netty.handler.codec.dns.DnsRecord decodeRecord(io.netty.buffer.ByteBuf)>(v3);
if v7 != null goto label2;
return 0;
label2:
interfaceinvoke v1.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsResponse addRecord(io.netty.handler.codec.dns.DnsSection,io.netty.handler.codec.dns.DnsRecord)>(v2, v7);
v5 = v5 - 1;
goto label1;
label3:
return 1;
}
}