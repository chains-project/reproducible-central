class io.netty.handler.codec.http.DefaultHttpHeaders$1 extends java.lang.Object implements io.netty.handler.codec.DefaultHeaders$NameValidator
{
void <init>()
{
io.netty.handler.codec.http.DefaultHttpHeaders$1 v0;
v0 := @this: io.netty.handler.codec.http.DefaultHttpHeaders$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void validateName(java.lang.CharSequence)
{
java.lang.CharSequence v1;
char v8;
java.lang.IllegalArgumentException v3, v7;
int v2, v5, v6;
java.lang.String v10, v4, v9;
io.netty.handler.codec.http.DefaultHttpHeaders$1 v0;
v0 := @this: io.netty.handler.codec.http.DefaultHttpHeaders$1;
v1 := @parameter0: java.lang.CharSequence;
if v1 == null goto label1;
v2 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v2 != 0 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("empty headers are not allowed [\u0001]");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label2:
v5 = staticinvoke <io.netty.handler.codec.http.HttpHeaderValidationUtil: int validateToken(java.lang.CharSequence)>(v1);
v6 = (int) -1;
if v5 == v6 goto label3;
v7 = new java.lang.IllegalArgumentException;
v8 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v5);
v9 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v8);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int,java.lang.CharSequence)>(v9, v5, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("a header name can only contain \"token\" characters, but found invalid character 0x\u0001 at index \u0001 of header \'\u0001\'.");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v7;
label3:
return;
}
}