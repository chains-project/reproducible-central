public class io.netty.handler.codec.http.HttpContentCompressor extends io.netty.handler.codec.http.HttpContentEncoder
{
private final boolean supportsCompressionOptions;
private final io.netty.handler.codec.compression.BrotliOptions brotliOptions;
private final io.netty.handler.codec.compression.GzipOptions gzipOptions;
private final io.netty.handler.codec.compression.DeflateOptions deflateOptions;
private final io.netty.handler.codec.compression.ZstdOptions zstdOptions;
private final int compressionLevel;
private final int windowBits;
private final int memLevel;
private final int contentSizeThreshold;
private io.netty.channel.ChannelHandlerContext ctx;
private final java.util.Map factories;
public void <init>()
{
io.netty.handler.codec.http.HttpContentCompressor v0;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentCompressor: void <init>(int)>(6);
return;
}
public void <init>(int)
{
int v1;
io.netty.handler.codec.http.HttpContentCompressor v0;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentCompressor: void <init>(int,int,int,int)>(v1, 15, 8, 0);
return;
}
public void <init>(int, int, int)
{
io.netty.handler.codec.http.HttpContentCompressor v0;
int v1, v2, v3;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentCompressor: void <init>(int,int,int,int)>(v1, v2, v3, 0);
return;
}
public void <init>(int, int, int, int)
{
io.netty.handler.codec.http.HttpContentCompressor v0;
int v1, v2, v3, v4, v5, v6, v7, v8;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void <init>()>();
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v1, 0, 9, "compressionLevel");
v0.<io.netty.handler.codec.http.HttpContentCompressor: int compressionLevel> = v5;
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v2, 9, 15, "windowBits");
v0.<io.netty.handler.codec.http.HttpContentCompressor: int windowBits> = v6;
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkInRange(int,int,int,java.lang.String)>(v3, 1, 9, "memLevel");
v0.<io.netty.handler.codec.http.HttpContentCompressor: int memLevel> = v7;
v8 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v4, "contentSizeThreshold");
v0.<io.netty.handler.codec.http.HttpContentCompressor: int contentSizeThreshold> = v8;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.BrotliOptions brotliOptions> = null;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.GzipOptions gzipOptions> = null;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.DeflateOptions deflateOptions> = null;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.ZstdOptions zstdOptions> = null;
v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories> = null;
v0.<io.netty.handler.codec.http.HttpContentCompressor: boolean supportsCompressionOptions> = 0;
return;
}
public transient void <init>(io.netty.handler.codec.compression.CompressionOptions[])
{
io.netty.handler.codec.http.HttpContentCompressor v0;
io.netty.handler.codec.compression.CompressionOptions[] v1;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: io.netty.handler.codec.compression.CompressionOptions[];
specialinvoke v0.<io.netty.handler.codec.http.HttpContentCompressor: void <init>(int,io.netty.handler.codec.compression.CompressionOptions[])>(0, v1);
return;
}
public transient void <init>(int, io.netty.handler.codec.compression.CompressionOptions[])
{
io.netty.handler.codec.http.HttpContentCompressor$GzipEncoderFactory v22;
io.netty.handler.codec.compression.CompressionOptions v9;
java.util.Map v21, v24, v28, v31;
io.netty.handler.codec.compression.DeflateOptions v23;
boolean v10, v11, v12, v13, v14, v26, v5, v6;
io.netty.handler.codec.compression.ZstdOptions v30;
io.netty.handler.codec.http.HttpContentCompressor$DeflateEncoderFactory v25;
io.netty.handler.codec.http.HttpContentCompressor v0;
java.util.HashMap v19;
io.netty.handler.codec.http.HttpContentCompressor$BrEncoderFactory v29;
int v1, v3, v33, v34, v35, v4, v7, v8;
io.netty.handler.codec.compression.BrotliOptions v27;
java.lang.String v17, v18;
io.netty.handler.codec.compression.CompressionOptions[] v2;
java.lang.IllegalArgumentException v15;
io.netty.handler.codec.http.HttpContentCompressor$ZstdEncoderFactory v32;
io.netty.handler.codec.compression.GzipOptions v20;
java.lang.Class v16;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.compression.CompressionOptions[];
specialinvoke v0.<io.netty.handler.codec.http.HttpContentEncoder: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "contentSizeThreshold");
v0.<io.netty.handler.codec.http.HttpContentCompressor: int contentSizeThreshold> = v3;
if v2 == null goto label01;
v4 = lengthof v2;
if v4 != 0 goto label03;
label01:
v5 = staticinvoke <io.netty.handler.codec.compression.Brotli: boolean isAvailable()>();
if v5 == 0 goto label02;
staticinvoke <io.netty.handler.codec.compression.StandardCompressionOptions: io.netty.handler.codec.compression.BrotliOptions brotli()>();
label02:
staticinvoke <io.netty.handler.codec.compression.StandardCompressionOptions: io.netty.handler.codec.compression.GzipOptions gzip()>();
staticinvoke <io.netty.handler.codec.compression.StandardCompressionOptions: io.netty.handler.codec.compression.DeflateOptions deflate()>();
v6 = staticinvoke <io.netty.handler.codec.compression.Zstd: boolean isAvailable()>();
if v6 == 0 goto label07;
staticinvoke <io.netty.handler.codec.compression.StandardCompressionOptions: io.netty.handler.codec.compression.ZstdOptions zstd()>();
goto label07;
label03:
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object[] deepCheckNotNull(java.lang.String,java.lang.Object[])>("compressionOptions", v2);
v7 = lengthof v2;
v8 = 0;
label04:
if v8 >= v7 goto label07;
v9 = v2[v8];
v10 = staticinvoke <io.netty.handler.codec.compression.Brotli: boolean isAvailable()>();
if v10 == 0 goto label05;
v11 = v9 instanceof io.netty.handler.codec.compression.BrotliOptions;
if v11 != 0 goto label06;
label05:
v12 = v9 instanceof io.netty.handler.codec.compression.GzipOptions;
if v12 != 0 goto label06;
v13 = v9 instanceof io.netty.handler.codec.compression.DeflateOptions;
if v13 != 0 goto label06;
v14 = v9 instanceof io.netty.handler.codec.compression.ZstdOptions;
if v14 != 0 goto label06;
v15 = new java.lang.IllegalArgumentException;
v16 = class "Lio/netty/handler/codec/compression/CompressionOptions;";
v17 = virtualinvoke v16.<java.lang.Class: java.lang.String getSimpleName()>();
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,io.netty.handler.codec.compression.CompressionOptions)>(v17, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unsupported \u0001: \u0001");
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v18);
throw v15;
label06:
v8 = v8 + 1;
goto label04;
label07:
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.GzipOptions gzipOptions> = v9;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.DeflateOptions deflateOptions> = v9;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.BrotliOptions brotliOptions> = v9;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.ZstdOptions zstdOptions> = v9;
v19 = new java.util.HashMap;
specialinvoke v19.<java.util.HashMap: void <init>()>();
v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories> = v19;
v20 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.GzipOptions gzipOptions>;
if v20 == null goto label08;
v21 = v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories>;
v22 = new io.netty.handler.codec.http.HttpContentCompressor$GzipEncoderFactory;
specialinvoke v22.<io.netty.handler.codec.http.HttpContentCompressor$GzipEncoderFactory: void <init>(io.netty.handler.codec.http.HttpContentCompressor)>(v0);
interfaceinvoke v21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("gzip", v22);
label08:
v23 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.DeflateOptions deflateOptions>;
if v23 == null goto label09;
v24 = v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories>;
v25 = new io.netty.handler.codec.http.HttpContentCompressor$DeflateEncoderFactory;
specialinvoke v25.<io.netty.handler.codec.http.HttpContentCompressor$DeflateEncoderFactory: void <init>(io.netty.handler.codec.http.HttpContentCompressor)>(v0);
interfaceinvoke v24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("deflate", v25);
label09:
v26 = staticinvoke <io.netty.handler.codec.compression.Brotli: boolean isAvailable()>();
if v26 == 0 goto label10;
v27 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.BrotliOptions brotliOptions>;
if v27 == null goto label10;
v28 = v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories>;
v29 = new io.netty.handler.codec.http.HttpContentCompressor$BrEncoderFactory;
specialinvoke v29.<io.netty.handler.codec.http.HttpContentCompressor$BrEncoderFactory: void <init>(io.netty.handler.codec.http.HttpContentCompressor)>(v0);
interfaceinvoke v28.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("br", v29);
label10:
v30 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.ZstdOptions zstdOptions>;
if v30 == null goto label11;
v31 = v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories>;
v32 = new io.netty.handler.codec.http.HttpContentCompressor$ZstdEncoderFactory;
specialinvoke v32.<io.netty.handler.codec.http.HttpContentCompressor$ZstdEncoderFactory: void <init>(io.netty.handler.codec.http.HttpContentCompressor)>(v0);
interfaceinvoke v31.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("zstd", v32);
label11:
v33 = (int) -1;
v0.<io.netty.handler.codec.http.HttpContentCompressor: int compressionLevel> = v33;
v34 = (int) -1;
v0.<io.netty.handler.codec.http.HttpContentCompressor: int windowBits> = v34;
v35 = (int) -1;
v0.<io.netty.handler.codec.http.HttpContentCompressor: int memLevel> = v35;
v0.<io.netty.handler.codec.http.HttpContentCompressor: boolean supportsCompressionOptions> = 1;
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpContentCompressor v0;
io.netty.channel.ChannelHandlerContext v1;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx> = v1;
return;
}
protected io.netty.handler.codec.http.HttpContentEncoder$Result beginEncode(io.netty.handler.codec.http.HttpResponse, java.lang.String) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v8;
io.netty.channel.ChannelId v20, v40;
io.netty.util.AsciiString v9;
io.netty.handler.codec.compression.ZlibEncoder v52;
int[] v31;
java.util.Map v13;
boolean v11, v24, v4, v44;
io.netty.handler.codec.http.HttpResponse v1;
io.netty.handler.codec.http.HttpContentEncoder$Result v16, v36;
io.netty.handler.codec.http.HttpContentCompressor v0;
java.lang.Error v15, v35;
io.netty.channel.ChannelHandlerContext v18, v21, v25, v38, v41, v45;
io.netty.buffer.ByteBuf v5;
int v3, v32, v33, v49, v50, v51, v6, v7;
io.netty.channel.ChannelMetadata v23, v43;
java.lang.String v10, v12, v2, v34;
io.netty.handler.codec.MessageToByteEncoder v29;
io.netty.channel.embedded.EmbeddedChannel v17, v37;
io.netty.handler.codec.compression.ZlibWrapper v30;
io.netty.channel.ChannelHandler[] v28, v48;
io.netty.channel.Channel v19, v22, v26, v39, v42, v46;
io.netty.channel.ChannelConfig v27, v47;
java.lang.Object v14;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.netty.handler.codec.http.HttpContentCompressor: int contentSizeThreshold>;
if v3 <= 0 goto label01;
v4 = v1 instanceof io.netty.handler.codec.http.HttpContent;
if v4 == 0 goto label01;
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpContent: io.netty.buffer.ByteBuf content()>();
v6 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = v0.<io.netty.handler.codec.http.HttpContentCompressor: int contentSizeThreshold>;
if v6 >= v7 goto label01;
return null;
label01:
v8 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v9 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_ENCODING>;
v10 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v9);
if v10 == null goto label02;
return null;
label02:
v11 = v0.<io.netty.handler.codec.http.HttpContentCompressor: boolean supportsCompressionOptions>;
if v11 == 0 goto label05;
v12 = virtualinvoke v0.<io.netty.handler.codec.http.HttpContentCompressor: java.lang.String determineEncoding(java.lang.String)>(v2);
if v12 != null goto label03;
return null;
label03:
v13 = v0.<io.netty.handler.codec.http.HttpContentCompressor: java.util.Map factories>;
v14 = interfaceinvoke v13.<java.util.Map: java.lang.Object get(java.lang.Object)>(v12);
if v14 != null goto label04;
v15 = new java.lang.Error;
specialinvoke v15.<java.lang.Error: void <init>()>();
throw v15;
label04:
v16 = new io.netty.handler.codec.http.HttpContentEncoder$Result;
v17 = new io.netty.channel.embedded.EmbeddedChannel;
v18 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx>;
v19 = interfaceinvoke v18.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v20 = interfaceinvoke v19.<io.netty.channel.Channel: io.netty.channel.ChannelId id()>();
v21 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx>;
v22 = interfaceinvoke v21.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v23 = interfaceinvoke v22.<io.netty.channel.Channel: io.netty.channel.ChannelMetadata metadata()>();
v24 = virtualinvoke v23.<io.netty.channel.ChannelMetadata: boolean hasDisconnect()>();
v25 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx>;
v26 = interfaceinvoke v25.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v27 = interfaceinvoke v26.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v28 = newarray (io.netty.channel.ChannelHandler)[1];
v29 = interfaceinvoke v14.<io.netty.handler.codec.http.CompressionEncoderFactory: io.netty.handler.codec.MessageToByteEncoder createEncoder()>();
v28[0] = v29;
specialinvoke v17.<io.netty.channel.embedded.EmbeddedChannel: void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[])>(v20, v24, v27, v28);
specialinvoke v16.<io.netty.handler.codec.http.HttpContentEncoder$Result: void <init>(java.lang.String,io.netty.channel.embedded.EmbeddedChannel)>(v12, v17);
return v16;
label05:
v30 = virtualinvoke v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String)>(v2);
if v30 != null goto label06;
return null;
label06:
v31 = <io.netty.handler.codec.http.HttpContentCompressor$1: int[] $SwitchMap$io$netty$handler$codec$compression$ZlibWrapper>;
v32 = virtualinvoke v30.<io.netty.handler.codec.compression.ZlibWrapper: int ordinal()>();
v33 = v31[v32];
lookupswitch(v33)
{
case 1: goto label07;
case 2: goto label08;
default: goto label09;
};
label07:
v34 = "gzip";
goto label10;
label08:
v34 = "deflate";
goto label10;
label09:
v35 = new java.lang.Error;
specialinvoke v35.<java.lang.Error: void <init>()>();
throw v35;
label10:
v36 = new io.netty.handler.codec.http.HttpContentEncoder$Result;
v37 = new io.netty.channel.embedded.EmbeddedChannel;
v38 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx>;
v39 = interfaceinvoke v38.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v40 = interfaceinvoke v39.<io.netty.channel.Channel: io.netty.channel.ChannelId id()>();
v41 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx>;
v42 = interfaceinvoke v41.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v43 = interfaceinvoke v42.<io.netty.channel.Channel: io.netty.channel.ChannelMetadata metadata()>();
v44 = virtualinvoke v43.<io.netty.channel.ChannelMetadata: boolean hasDisconnect()>();
v45 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.channel.ChannelHandlerContext ctx>;
v46 = interfaceinvoke v45.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v47 = interfaceinvoke v46.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v48 = newarray (io.netty.channel.ChannelHandler)[1];
v49 = v0.<io.netty.handler.codec.http.HttpContentCompressor: int compressionLevel>;
v50 = v0.<io.netty.handler.codec.http.HttpContentCompressor: int windowBits>;
v51 = v0.<io.netty.handler.codec.http.HttpContentCompressor: int memLevel>;
v52 = staticinvoke <io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.handler.codec.compression.ZlibEncoder newZlibEncoder(io.netty.handler.codec.compression.ZlibWrapper,int,int,int)>(v30, v49, v50, v51);
v48[0] = v52;
specialinvoke v37.<io.netty.channel.embedded.EmbeddedChannel: void <init>(io.netty.channel.ChannelId,boolean,io.netty.channel.ChannelConfig,io.netty.channel.ChannelHandler[])>(v40, v44, v47, v48);
specialinvoke v36.<io.netty.handler.codec.http.HttpContentEncoder$Result: void <init>(java.lang.String,io.netty.channel.embedded.EmbeddedChannel)>(v34, v37);
return v36;
}
protected java.lang.String determineEncoding(java.lang.String)
{
byte v19, v21, v23, v25, v26, v27, v28, v29, v30, v31, v33, v34, v36, v37, v39, v41, v42, v44, v46, v48;
io.netty.handler.codec.compression.DeflateOptions v40, v49;
boolean v17, v18, v20, v22, v24;
io.netty.handler.codec.compression.ZstdOptions v35, v45;
float v11, v2, v3, v4, v5, v6;
io.netty.handler.codec.http.HttpContentCompressor v0;
java.lang.String[] v7;
int v12, v13, v14, v8, v9;
io.netty.handler.codec.compression.BrotliOptions v32, v43;
java.lang.String v1, v10, v15;
java.lang.NumberFormatException v16;
io.netty.handler.codec.compression.GzipOptions v38, v47;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: java.lang.String;
v2 = -1.0F;
v3 = -1.0F;
v4 = -1.0F;
v5 = -1.0F;
v6 = -1.0F;
v7 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
v8 = lengthof v7;
v9 = 0;
label01:
if v9 >= v8 goto label11;
v10 = v7[v9];
v11 = 1.0F;
v12 = virtualinvoke v10.<java.lang.String: int indexOf(int)>(61);
v13 = (int) -1;
if v12 == v13 goto label05;
label02:
v14 = v12 + 1;
v15 = virtualinvoke v10.<java.lang.String: java.lang.String substring(int)>(v14);
v11 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(v15);
label03:
goto label05;
label04:
v16 := @caughtexception;
v11 = 0.0F;
label05:
v17 = virtualinvoke v10.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
if v17 == 0 goto label06;
v2 = v11;
goto label10;
label06:
v18 = virtualinvoke v10.<java.lang.String: boolean contains(java.lang.CharSequence)>("br");
if v18 == 0 goto label07;
v19 = v11 cmpl v3;
if v19 <= 0 goto label07;
v3 = v11;
goto label10;
label07:
v20 = virtualinvoke v10.<java.lang.String: boolean contains(java.lang.CharSequence)>("zstd");
if v20 == 0 goto label08;
v21 = v11 cmpl v4;
if v21 <= 0 goto label08;
v4 = v11;
goto label10;
label08:
v22 = virtualinvoke v10.<java.lang.String: boolean contains(java.lang.CharSequence)>("gzip");
if v22 == 0 goto label09;
v23 = v11 cmpl v5;
if v23 <= 0 goto label09;
v5 = v11;
goto label10;
label09:
v24 = virtualinvoke v10.<java.lang.String: boolean contains(java.lang.CharSequence)>("deflate");
if v24 == 0 goto label10;
v25 = v11 cmpl v6;
if v25 <= 0 goto label10;
v6 = v11;
label10:
v9 = v9 + 1;
goto label01;
label11:
v26 = v3 cmpl 0.0F;
if v26 > 0 goto label12;
v27 = v4 cmpl 0.0F;
if v27 > 0 goto label12;
v28 = v5 cmpl 0.0F;
if v28 > 0 goto label12;
v29 = v6 cmpl 0.0F;
if v29 <= 0 goto label16;
label12:
v30 = v3 cmpl -1.0F;
if v30 == 0 goto label13;
v31 = v3 cmpl v4;
if v31 < 0 goto label13;
v32 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.BrotliOptions brotliOptions>;
if v32 == null goto label13;
return "br";
label13:
v33 = v4 cmpl -1.0F;
if v33 == 0 goto label14;
v34 = v4 cmpl v5;
if v34 < 0 goto label14;
v35 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.ZstdOptions zstdOptions>;
if v35 == null goto label14;
return "zstd";
label14:
v36 = v5 cmpl -1.0F;
if v36 == 0 goto label15;
v37 = v5 cmpl v6;
if v37 < 0 goto label15;
v38 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.GzipOptions gzipOptions>;
if v38 == null goto label15;
return "gzip";
label15:
v39 = v6 cmpl -1.0F;
if v39 == 0 goto label16;
v40 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.DeflateOptions deflateOptions>;
if v40 == null goto label16;
return "deflate";
label16:
v41 = v2 cmpl 0.0F;
if v41 <= 0 goto label20;
v42 = v3 cmpl -1.0F;
if v42 != 0 goto label17;
v43 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.BrotliOptions brotliOptions>;
if v43 == null goto label17;
return "br";
label17:
v44 = v4 cmpl -1.0F;
if v44 != 0 goto label18;
v45 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.ZstdOptions zstdOptions>;
if v45 == null goto label18;
return "zstd";
label18:
v46 = v5 cmpl -1.0F;
if v46 != 0 goto label19;
v47 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.GzipOptions gzipOptions>;
if v47 == null goto label19;
return "gzip";
label19:
v48 = v6 cmpl -1.0F;
if v48 != 0 goto label20;
v49 = v0.<io.netty.handler.codec.http.HttpContentCompressor: io.netty.handler.codec.compression.DeflateOptions deflateOptions>;
if v49 == null goto label20;
return "deflate";
label20:
return null;
catch java.lang.NumberFormatException from label02 to label03 with label04;
}
protected io.netty.handler.codec.compression.ZlibWrapper determineWrapper(java.lang.String)
{
io.netty.handler.codec.http.HttpContentCompressor v0;
java.lang.String[] v5;
byte v17, v19, v20, v21, v22, v25, v26, v28;
int v10, v11, v12, v6, v7;
java.lang.String v1, v13, v8;
boolean v15, v16, v18;
java.lang.NumberFormatException v14;
io.netty.handler.codec.compression.ZlibWrapper v23, v24, v27, v29;
float v2, v3, v4, v9;
v0 := @this: io.netty.handler.codec.http.HttpContentCompressor;
v1 := @parameter0: java.lang.String;
v2 = -1.0F;
v3 = -1.0F;
v4 = -1.0F;
v5 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>(",");
v6 = lengthof v5;
v7 = 0;
label01:
if v7 >= v6 goto label09;
v8 = v5[v7];
v9 = 1.0F;
v10 = virtualinvoke v8.<java.lang.String: int indexOf(int)>(61);
v11 = (int) -1;
if v10 == v11 goto label05;
label02:
v12 = v10 + 1;
v13 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int)>(v12);
v9 = staticinvoke <java.lang.Float: float parseFloat(java.lang.String)>(v13);
label03:
goto label05;
label04:
v14 := @caughtexception;
v9 = 0.0F;
label05:
v15 = virtualinvoke v8.<java.lang.String: boolean contains(java.lang.CharSequence)>("*");
if v15 == 0 goto label06;
v2 = v9;
goto label08;
label06:
v16 = virtualinvoke v8.<java.lang.String: boolean contains(java.lang.CharSequence)>("gzip");
if v16 == 0 goto label07;
v17 = v9 cmpl v3;
if v17 <= 0 goto label07;
v3 = v9;
goto label08;
label07:
v18 = virtualinvoke v8.<java.lang.String: boolean contains(java.lang.CharSequence)>("deflate");
if v18 == 0 goto label08;
v19 = v9 cmpl v4;
if v19 <= 0 goto label08;
v4 = v9;
label08:
v7 = v7 + 1;
goto label01;
label09:
v20 = v3 cmpl 0.0F;
if v20 > 0 goto label10;
v21 = v4 cmpl 0.0F;
if v21 <= 0 goto label12;
label10:
v22 = v3 cmpl v4;
if v22 < 0 goto label11;
v23 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper GZIP>;
return v23;
label11:
v24 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
return v24;
label12:
v25 = v2 cmpl 0.0F;
if v25 <= 0 goto label14;
v26 = v3 cmpl -1.0F;
if v26 != 0 goto label13;
v27 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper GZIP>;
return v27;
label13:
v28 = v4 cmpl -1.0F;
if v28 != 0 goto label14;
v29 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
return v29;
label14:
return null;
catch java.lang.NumberFormatException from label02 to label03 with label04;
}
}