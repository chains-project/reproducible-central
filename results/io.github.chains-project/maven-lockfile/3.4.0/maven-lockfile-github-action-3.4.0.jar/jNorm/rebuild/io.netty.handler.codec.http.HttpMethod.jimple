public class io.netty.handler.codec.http.HttpMethod extends java.lang.Object implements java.lang.Comparable
{
public static final io.netty.handler.codec.http.HttpMethod OPTIONS;
public static final io.netty.handler.codec.http.HttpMethod GET;
public static final io.netty.handler.codec.http.HttpMethod HEAD;
public static final io.netty.handler.codec.http.HttpMethod POST;
public static final io.netty.handler.codec.http.HttpMethod PUT;
public static final io.netty.handler.codec.http.HttpMethod PATCH;
public static final io.netty.handler.codec.http.HttpMethod DELETE;
public static final io.netty.handler.codec.http.HttpMethod TRACE;
public static final io.netty.handler.codec.http.HttpMethod CONNECT;
private static final io.netty.handler.codec.http.HttpMethod$EnumNameMap methodMap;
private final io.netty.util.AsciiString name;
public static io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String)
{
io.netty.handler.codec.http.HttpMethod$EnumNameMap v7;
io.netty.handler.codec.http.HttpMethod v1, v3, v4, v6, v9;
java.lang.Object v8;
java.lang.String v0, v2, v5;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
if v0 != v2 goto label1;
v3 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
return v3;
label1:
v4 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod POST>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
if v0 != v5 goto label2;
v6 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod POST>;
return v6;
label2:
v7 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod$EnumNameMap methodMap>;
v8 = virtualinvoke v7.<io.netty.handler.codec.http.HttpMethod$EnumNameMap: java.lang.Object get(java.lang.String)>(v0);
if v8 == null goto label3;
v9 = v8;
goto label4;
label3:
v9 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v9.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>(v0);
label4:
return v9;
}
public void <init>(java.lang.String)
{
io.netty.handler.codec.http.HttpMethod v0;
io.netty.util.AsciiString v9;
char v5;
java.lang.IllegalArgumentException v8;
int v3, v4;
java.lang.String v1, v2;
boolean v6, v7;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.String checkNonEmptyAfterTrim(java.lang.String,java.lang.String)>(v1, "name");
v3 = 0;
label1:
v4 = virtualinvoke v2.<java.lang.String: int length()>();
if v3 >= v4 goto label4;
v5 = virtualinvoke v2.<java.lang.String: char charAt(int)>(v3);
v6 = staticinvoke <java.lang.Character: boolean isISOControl(char)>(v5);
if v6 != 0 goto label2;
v7 = staticinvoke <java.lang.Character: boolean isWhitespace(char)>(v5);
if v7 == 0 goto label3;
label2:
v8 = new java.lang.IllegalArgumentException;
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("invalid character in name");
throw v8;
label3:
v3 = v3 + 1;
goto label1;
label4:
v9 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString cached(java.lang.String)>(v2);
v0.<io.netty.handler.codec.http.HttpMethod: io.netty.util.AsciiString name> = v9;
return;
}
public java.lang.String name()
{
io.netty.handler.codec.http.HttpMethod v0;
io.netty.util.AsciiString v1;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 = v0.<io.netty.handler.codec.http.HttpMethod: io.netty.util.AsciiString name>;
v2 = virtualinvoke v1.<io.netty.util.AsciiString: java.lang.String toString()>();
return v2;
}
public io.netty.util.AsciiString asciiName()
{
io.netty.handler.codec.http.HttpMethod v0;
io.netty.util.AsciiString v1;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 = v0.<io.netty.handler.codec.http.HttpMethod: io.netty.util.AsciiString name>;
return v1;
}
public int hashCode()
{
int v2;
io.netty.handler.codec.http.HttpMethod v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.http.HttpMethod v0;
java.lang.Object v1;
java.lang.String v3, v4;
boolean v2, v5;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.netty.handler.codec.http.HttpMethod;
if v2 != 0 goto label2;
return 0;
label2:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
v4 = virtualinvoke v1.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
return v5;
}
public java.lang.String toString()
{
io.netty.handler.codec.http.HttpMethod v0;
io.netty.util.AsciiString v1;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 = v0.<io.netty.handler.codec.http.HttpMethod: io.netty.util.AsciiString name>;
v2 = virtualinvoke v1.<io.netty.util.AsciiString: java.lang.String toString()>();
return v2;
}
public int compareTo(io.netty.handler.codec.http.HttpMethod)
{
int v4;
io.netty.handler.codec.http.HttpMethod v0, v1;
java.lang.String v2, v3;
v0 := @this: io.netty.handler.codec.http.HttpMethod;
v1 := @parameter0: io.netty.handler.codec.http.HttpMethod;
if v1 != v0 goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
v3 = virtualinvoke v1.<io.netty.handler.codec.http.HttpMethod: java.lang.String name()>();
v4 = virtualinvoke v2.<java.lang.String: int compareTo(java.lang.String)>(v3);
return v4;
}
static void <clinit>()
{
io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[] v10;
java.lang.String v13, v17, v21, v25, v29, v33, v37, v41, v45;
io.netty.handler.codec.http.HttpMethod$EnumNameMap v9;
io.netty.handler.codec.http.HttpMethod v0, v1, v12, v14, v16, v18, v2, v20, v22, v24, v26, v28, v3, v30, v32, v34, v36, v38, v4, v40, v42, v44, v46, v5, v6, v7, v8;
io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node v11, v15, v19, v23, v27, v31, v35, v39, v43;
v0 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v0.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("OPTIONS");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod OPTIONS> = v0;
v1 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v1.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("GET");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET> = v1;
v2 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v2.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("HEAD");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod HEAD> = v2;
v3 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v3.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("POST");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod POST> = v3;
v4 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v4.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("PUT");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod PUT> = v4;
v5 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v5.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("PATCH");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod PATCH> = v5;
v6 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v6.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("DELETE");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod DELETE> = v6;
v7 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v7.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("TRACE");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod TRACE> = v7;
v8 = new io.netty.handler.codec.http.HttpMethod;
specialinvoke v8.<io.netty.handler.codec.http.HttpMethod: void <init>(java.lang.String)>("CONNECT");
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod CONNECT> = v8;
v9 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap;
v10 = newarray (io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node)[9];
v11 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v12 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod OPTIONS>;
v13 = virtualinvoke v12.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v14 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod OPTIONS>;
specialinvoke v11.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v13, v14);
v10[0] = v11;
v15 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v16 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
v17 = virtualinvoke v16.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v18 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
specialinvoke v15.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v17, v18);
v10[1] = v15;
v19 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v20 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod HEAD>;
v21 = virtualinvoke v20.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v22 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod HEAD>;
specialinvoke v19.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v21, v22);
v10[2] = v19;
v23 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v24 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod POST>;
v25 = virtualinvoke v24.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v26 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod POST>;
specialinvoke v23.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v25, v26);
v10[3] = v23;
v27 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v28 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod PUT>;
v29 = virtualinvoke v28.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v30 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod PUT>;
specialinvoke v27.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v29, v30);
v10[4] = v27;
v31 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v32 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod PATCH>;
v33 = virtualinvoke v32.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v34 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod PATCH>;
specialinvoke v31.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v33, v34);
v10[5] = v31;
v35 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v36 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod DELETE>;
v37 = virtualinvoke v36.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v38 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod DELETE>;
specialinvoke v35.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v37, v38);
v10[6] = v35;
v39 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v40 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod TRACE>;
v41 = virtualinvoke v40.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v42 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod TRACE>;
specialinvoke v39.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v41, v42);
v10[7] = v39;
v43 = new io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node;
v44 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod CONNECT>;
v45 = virtualinvoke v44.<io.netty.handler.codec.http.HttpMethod: java.lang.String toString()>();
v46 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod CONNECT>;
specialinvoke v43.<io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node: void <init>(java.lang.String,java.lang.Object)>(v45, v46);
v10[8] = v43;
specialinvoke v9.<io.netty.handler.codec.http.HttpMethod$EnumNameMap: void <init>(io.netty.handler.codec.http.HttpMethod$EnumNameMap$Node[])>(v10);
<io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod$EnumNameMap methodMap> = v9;
return;
}
}