final class io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder extends io.netty.handler.codec.http.HttpResponseEncoder
{
private io.netty.handler.codec.http.HttpMethod method;
final io.netty.handler.codec.http.HttpServerCodec this$0;
private void <init>(io.netty.handler.codec.http.HttpServerCodec)
{
io.netty.handler.codec.http.HttpServerCodec v1;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v0;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpServerCodec;
v0.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: io.netty.handler.codec.http.HttpServerCodec this$0> = v1;
specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: void <init>()>();
return;
}
protected void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse, boolean)
{
io.netty.handler.codec.http.HttpHeaders v9;
io.netty.handler.codec.http.HttpMethod v3, v4;
io.netty.util.AsciiString v10;
io.netty.handler.codec.http.HttpResponseStatus v6;
io.netty.handler.codec.http.HttpStatusClass v7, v8;
io.netty.handler.codec.http.HttpResponse v1;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v0;
boolean v2, v5;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 := @parameter1: boolean;
if v2 != 0 goto label1;
v3 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod CONNECT>;
v4 = v0.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: io.netty.handler.codec.http.HttpMethod method>;
v5 = virtualinvoke v3.<io.netty.handler.codec.http.HttpMethod: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v7 = virtualinvoke v6.<io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpStatusClass codeClass()>();
v8 = <io.netty.handler.codec.http.HttpStatusClass: io.netty.handler.codec.http.HttpStatusClass SUCCESS>;
if v7 != v8 goto label1;
v9 = interfaceinvoke v1.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v10 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString TRANSFER_ENCODING>;
virtualinvoke v9.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v10);
return;
label1:
specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: void sanitizeHeadersBeforeEncode(io.netty.handler.codec.http.HttpResponse,boolean)>(v1, v2);
return;
}
protected boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse)
{
io.netty.handler.codec.http.HttpMethod v5, v6;
io.netty.handler.codec.http.HttpServerCodec v2;
io.netty.handler.codec.http.HttpResponse v1;
java.lang.Object v4;
java.util.Queue v3;
io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder v0;
boolean v7, v8, v9;
v0 := @this: io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 = v0.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: io.netty.handler.codec.http.HttpServerCodec this$0>;
v3 = v2.<io.netty.handler.codec.http.HttpServerCodec: java.util.Queue queue>;
v4 = interfaceinvoke v3.<java.util.Queue: java.lang.Object poll()>();
v0.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: io.netty.handler.codec.http.HttpMethod method> = v4;
v5 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod HEAD>;
v6 = v0.<io.netty.handler.codec.http.HttpServerCodec$HttpServerResponseEncoder: io.netty.handler.codec.http.HttpMethod method>;
v7 = virtualinvoke v5.<io.netty.handler.codec.http.HttpMethod: boolean equals(java.lang.Object)>(v6);
if v7 != 0 goto label1;
v8 = specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse)>(v1);
if v8 == 0 goto label2;
label1:
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
}
}