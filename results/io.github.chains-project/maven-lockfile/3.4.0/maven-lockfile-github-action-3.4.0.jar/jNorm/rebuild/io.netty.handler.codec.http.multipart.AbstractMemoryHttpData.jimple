public abstract class io.netty.handler.codec.http.multipart.AbstractMemoryHttpData extends io.netty.handler.codec.http.multipart.AbstractHttpData
{
private io.netty.buffer.ByteBuf byteBuf;
private int chunkPosition;
protected void <init>(java.lang.String, java.nio.charset.Charset, long)
{
io.netty.buffer.ByteBuf v4;
java.nio.charset.Charset v2;
long v3;
java.lang.String v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.nio.charset.Charset;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractHttpData: void <init>(java.lang.String,java.nio.charset.Charset,long)>(v1, v2, v3);
v4 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v4;
return;
}
public void setContent(io.netty.buffer.ByteBuf) throws java.io.IOException
{
java.io.IOException v3, v8;
long v4, v6, v9;
byte v5, v7;
io.netty.buffer.ByteBuf v1, v11, v12;
int v2;
java.lang.String v10;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: io.netty.buffer.ByteBuf;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "buffer");
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
label1:
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void checkSize(long)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
throw v3;
label4:
v4 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v5 = v4 cmp 0L;
if v5 <= 0 goto label5;
v6 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v7 = v6 cmp v2;
if v7 >= 0 goto label5;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
v8 = new java.io.IOException;
v9 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long,long)>(v2, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Out of size: \u0001 > \u0001");
specialinvoke v8.<java.io.IOException: void <init>(java.lang.String)>(v10);
throw v8;
label5:
v11 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v11 == null goto label6;
v12 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v12.<io.netty.buffer.ByteBuf: boolean release()>();
label6:
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v1;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size> = v2;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void setCompleted()>();
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void setContent(java.io.InputStream) throws java.io.IOException
{
byte[] v2;
long v10, v13, v14, v7, v9;
byte v11, v8;
io.netty.buffer.ByteBuf v16, v17, v3;
int v4, v5;
java.lang.String v15;
java.io.IOException v12, v6;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
java.io.InputStream v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: java.io.InputStream;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "inputStream");
v2 = newarray (byte)[16384];
v3 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf buffer()>();
v4 = 0;
label1:
v5 = virtualinvoke v1.<java.io.InputStream: int read(byte[])>(v2);
label2:
if v5 <= 0 goto label4;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[],int,int)>(v2, 0, v5);
v4 = v4 + v5;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void checkSize(long)>(v4);
v5 = virtualinvoke v1.<java.io.InputStream: int read(byte[])>(v2);
goto label2;
label3:
v6 := @caughtexception;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
throw v6;
label4:
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size> = v4;
v7 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v8 = v7 cmp 0L;
if v8 <= 0 goto label5;
v9 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v10 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size>;
v11 = v9 cmp v10;
if v11 >= 0 goto label5;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
v12 = new java.io.IOException;
v13 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size>;
v14 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long,long)>(v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Out of size: \u0001 > \u0001");
specialinvoke v12.<java.io.IOException: void <init>(java.lang.String)>(v15);
throw v12;
label5:
v16 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v16 == null goto label6;
v17 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v17.<io.netty.buffer.ByteBuf: boolean release()>();
label6:
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v3;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void setCompleted()>();
return;
catch java.io.IOException from label1 to label3 with label3;
}
public void addContent(io.netty.buffer.ByteBuf, boolean) throws java.io.IOException
{
long v10, v11, v14, v15, v16, v18, v19, v4, v5, v7, v9;
byte v12, v21, v8;
io.netty.buffer.ByteBuf v1, v20, v22, v24, v25, v27, v30;
int v23, v3;
java.lang.String v17;
boolean v2, v26;
io.netty.buffer.ByteBuf[] v29;
java.io.IOException v13, v6;
io.netty.buffer.CompositeByteBuf v28;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
if v1 == null goto label10;
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
label01:
v4 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size>;
v5 = v4 + v3;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void checkSize(long)>(v5);
label02:
goto label04;
label03:
v6 := @caughtexception;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
throw v6;
label04:
v7 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v8 = v7 cmp 0L;
if v8 <= 0 goto label05;
v9 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v10 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size>;
v11 = v10 + v3;
v12 = v9 cmp v11;
if v12 >= 0 goto label05;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
v13 = new java.io.IOException;
v14 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size>;
v15 = v14 + v3;
v16 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long definedSize>;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long,long)>(v15, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Out of size: \u0001 > \u0001");
specialinvoke v13.<java.io.IOException: void <init>(java.lang.String)>(v17);
throw v13;
label05:
v18 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size>;
v19 = v18 + v3;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size> = v19;
v20 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v20 != null goto label06;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v1;
goto label10;
label06:
v21 = v3 cmp 0L;
if v21 != 0 goto label07;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
goto label10;
label07:
v22 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v23 = virtualinvoke v22.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v23 != 0 goto label08;
v24 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v24.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v1;
goto label10;
label08:
v25 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v26 = v25 instanceof io.netty.buffer.CompositeByteBuf;
if v26 == 0 goto label09;
v27 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v27.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf)>(1, v1);
goto label10;
label09:
v28 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.CompositeByteBuf compositeBuffer(int)>(2147483647);
v29 = newarray (io.netty.buffer.ByteBuf)[2];
v30 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v29[0] = v30;
v29[1] = v1;
virtualinvoke v28.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.CompositeByteBuf addComponents(boolean,io.netty.buffer.ByteBuf[])>(1, v29);
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v28;
label10:
if v2 == 0 goto label11;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void setCompleted()>();
goto label12;
label11:
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "buffer");
label12:
return;
catch java.io.IOException from label01 to label02 with label03;
}
public void setContent(java.io.File) throws java.io.IOException
{
java.lang.Throwable v12, v13;
byte[] v7;
java.io.RandomAccessFile v5;
long v2;
java.nio.ByteBuffer v8;
byte v10, v3;
io.netty.buffer.ByteBuf v14, v15, v17;
int v11, v9;
java.nio.ByteBuffer[] v16;
java.lang.IllegalArgumentException v4;
java.io.File v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
java.nio.channels.FileChannel v6;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: java.io.File;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "file");
v2 = virtualinvoke v1.<java.io.File: long length()>();
v3 = v2 cmp 2147483647L;
if v3 <= 0 goto label01;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("File too big to be loaded in memory");
throw v4;
label01:
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void checkSize(long)>(v2);
v5 = new java.io.RandomAccessFile;
specialinvoke v5.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(v1, "r");
label02:
v6 = virtualinvoke v5.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();
label03:
v7 = newarray (byte)[v2];
v8 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer wrap(byte[])>(v7);
v9 = 0;
label04:
v10 = v9 cmp v2;
if v10 >= 0 goto label05;
v11 = virtualinvoke v6.<java.nio.channels.FileChannel: int read(java.nio.ByteBuffer)>(v8);
v9 = v9 + v11;
goto label04;
label05:
virtualinvoke v6.<java.nio.channels.FileChannel: void close()>();
goto label07;
label06:
v12 := @caughtexception;
virtualinvoke v6.<java.nio.channels.FileChannel: void close()>();
throw v12;
label07:
virtualinvoke v5.<java.io.RandomAccessFile: void close()>();
goto label09;
label08:
v13 := @caughtexception;
virtualinvoke v5.<java.io.RandomAccessFile: void close()>();
throw v13;
label09:
virtualinvoke v8.<java.nio.ByteBuffer: java.nio.ByteBuffer flip()>();
v14 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v14 == null goto label10;
v15 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v15.<io.netty.buffer.ByteBuf: boolean release()>();
label10:
v16 = newarray (java.nio.ByteBuffer)[1];
v16[0] = v8;
v17 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(int,java.nio.ByteBuffer[])>(2147483647, v16);
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = v17;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: long size> = v2;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: void setCompleted()>();
return;
catch java.lang.Throwable from label03 to label05 with label06;
catch java.lang.Throwable from label02 to label07 with label08;
}
public void delete()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf> = null;
label1:
return;
}
public byte[] get()
{
byte[] v3, v6;
io.netty.buffer.ByteBuf v1, v2, v4, v7, v8;
int v5, v9;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v1 != null goto label1;
v2 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte[] array()>();
return v3;
label1:
v4 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v5 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readableBytes()>();
v6 = newarray (byte)[v5];
v7 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v8 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v9 = virtualinvoke v8.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v7.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf getBytes(int,byte[])>(v9, v6);
return v6;
}
public java.lang.String getString()
{
java.lang.String v2;
java.nio.charset.Charset v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 = <io.netty.handler.codec.http.HttpConstants: java.nio.charset.Charset DEFAULT_CHARSET>;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: java.lang.String getString(java.nio.charset.Charset)>(v1);
return v2;
}
public java.lang.String getString(java.nio.charset.Charset)
{
io.netty.buffer.ByteBuf v2, v3;
java.nio.charset.Charset v1;
java.lang.String v4;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: java.nio.charset.Charset;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v2 != null goto label1;
return "";
label1:
if v1 != null goto label2;
v1 = <io.netty.handler.codec.http.HttpConstants: java.nio.charset.Charset DEFAULT_CHARSET>;
label2:
v3 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: java.lang.String toString(java.nio.charset.Charset)>(v1);
return v4;
}
public io.netty.buffer.ByteBuf getByteBuf()
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
return v1;
}
public io.netty.buffer.ByteBuf getChunk(int) throws java.io.IOException
{
io.netty.buffer.ByteBuf v10, v12, v14, v2, v3, v5, v6;
int v1, v11, v13, v15, v16, v4, v7, v8, v9;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v2 == null goto label1;
if v1 == 0 goto label1;
v3 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v4 != 0 goto label2;
label1:
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: int chunkPosition> = 0;
v5 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
return v5;
label2:
v6 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v7 = virtualinvoke v6.<io.netty.buffer.ByteBuf: int readableBytes()>();
v8 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: int chunkPosition>;
v9 = v7 - v8;
if v9 != 0 goto label3;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: int chunkPosition> = 0;
v10 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
return v10;
label3:
v11 = v1;
if v9 >= v1 goto label4;
v11 = v9;
label4:
v12 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v13 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: int chunkPosition>;
v14 = virtualinvoke v12.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedSlice(int,int)>(v13, v11);
v15 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: int chunkPosition>;
v16 = v15 + v11;
v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: int chunkPosition> = v16;
return v14;
}
public boolean isInMemory()
{
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
return 1;
}
public boolean renameTo(java.io.File) throws java.io.IOException
{
java.lang.Throwable v21, v22;
java.io.RandomAccessFile v9;
long v20, v8;
java.nio.ByteBuffer v14;
byte v15, v19, v23;
io.netty.buffer.ByteBuf v11, v13, v17, v2, v6;
int v12, v16, v7;
java.lang.String v5;
boolean v24, v3;
java.nio.ByteBuffer[] v18;
java.io.IOException v4;
java.io.File v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
java.nio.channels.FileChannel v10;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: java.io.File;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "dest");
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v2 != null goto label02;
v3 = virtualinvoke v1.<java.io.File: boolean createNewFile()>();
if v3 != 0 goto label01;
v4 = new java.io.IOException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.io.File)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("file exists already: \u0001");
specialinvoke v4.<java.io.IOException: void <init>(java.lang.String)>(v5);
throw v4;
label01:
return 1;
label02:
v6 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v7 = virtualinvoke v6.<io.netty.buffer.ByteBuf: int readableBytes()>();
v8 = 0L;
v9 = new java.io.RandomAccessFile;
specialinvoke v9.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(v1, "rw");
label03:
v10 = virtualinvoke v9.<java.io.RandomAccessFile: java.nio.channels.FileChannel getChannel()>();
label04:
v11 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v12 = virtualinvoke v11.<io.netty.buffer.ByteBuf: int nioBufferCount()>();
if v12 != 1 goto label06;
v13 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v14 = virtualinvoke v13.<io.netty.buffer.ByteBuf: java.nio.ByteBuffer nioBuffer()>();
label05:
v15 = v8 cmp v7;
if v15 >= 0 goto label08;
v16 = virtualinvoke v10.<java.nio.channels.FileChannel: int write(java.nio.ByteBuffer)>(v14);
v8 = v8 + v16;
goto label05;
label06:
v17 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
v18 = virtualinvoke v17.<io.netty.buffer.ByteBuf: java.nio.ByteBuffer[] nioBuffers()>();
label07:
v19 = v8 cmp v7;
if v19 >= 0 goto label08;
v20 = virtualinvoke v10.<java.nio.channels.FileChannel: long write(java.nio.ByteBuffer[])>(v18);
v8 = v8 + v20;
goto label07;
label08:
virtualinvoke v10.<java.nio.channels.FileChannel: void force(boolean)>(0);
label09:
virtualinvoke v10.<java.nio.channels.FileChannel: void close()>();
goto label11;
label10:
v21 := @caughtexception;
virtualinvoke v10.<java.nio.channels.FileChannel: void close()>();
throw v21;
label11:
virtualinvoke v9.<java.io.RandomAccessFile: void close()>();
goto label13;
label12:
v22 := @caughtexception;
virtualinvoke v9.<java.io.RandomAccessFile: void close()>();
throw v22;
label13:
v23 = v8 cmp v7;
if v23 != 0 goto label14;
v24 = 1;
goto label15;
label14:
v24 = 0;
label15:
return v24;
catch java.lang.Throwable from label04 to label09 with label10;
catch java.lang.Throwable from label03 to label11 with label12;
}
public java.io.File getFile() throws java.io.IOException
{
java.io.IOException v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 = new java.io.IOException;
specialinvoke v1.<java.io.IOException: void <init>(java.lang.String)>("Not represented by a file");
throw v1;
}
public io.netty.handler.codec.http.multipart.HttpData touch()
{
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object)>(null);
return v1;
}
public io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object)
{
io.netty.buffer.ByteBuf v2, v3;
java.lang.Object v1;
io.netty.handler.codec.http.multipart.AbstractMemoryHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf byteBuf>;
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf touch(java.lang.Object)>(v1);
label1:
return v0;
}
}