final class io.netty.handler.codec.http.multipart.DeleteFileOnExitHook extends java.lang.Object
{
private static final java.util.Set FILES;
private void <init>()
{
io.netty.handler.codec.http.multipart.DeleteFileOnExitHook v0;
v0 := @this: io.netty.handler.codec.http.multipart.DeleteFileOnExitHook;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void remove(java.lang.String)
{
java.util.Set v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.handler.codec.http.multipart.DeleteFileOnExitHook: java.util.Set FILES>;
interfaceinvoke v1.<java.util.Set: boolean remove(java.lang.Object)>(v0);
return;
}
public static void add(java.lang.String)
{
java.util.Set v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.handler.codec.http.multipart.DeleteFileOnExitHook: java.util.Set FILES>;
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>(v0);
return;
}
public static boolean checkFileExist(java.lang.String)
{
java.util.Set v1;
java.lang.String v0;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.handler.codec.http.multipart.DeleteFileOnExitHook: java.util.Set FILES>;
v2 = interfaceinvoke v1.<java.util.Set: boolean contains(java.lang.Object)>(v0);
return v2;
}
static void runHook()
{
java.util.Iterator v1;
java.util.Set v0;
java.lang.Object v3;
java.io.File v4;
boolean v2;
v0 = <io.netty.handler.codec.http.multipart.DeleteFileOnExitHook: java.util.Set FILES>;
v1 = interfaceinvoke v0.<java.util.Set: java.util.Iterator iterator()>();
label1:
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v4 = new java.io.File;
specialinvoke v4.<java.io.File: void <init>(java.lang.String)>(v3);
virtualinvoke v4.<java.io.File: boolean delete()>();
goto label1;
label2:
return;
}
static void <clinit>()
{
io.netty.handler.codec.http.multipart.DeleteFileOnExitHook$1 v3;
java.lang.Runtime v2;
java.util.concurrent.ConcurrentHashMap v0;
java.util.Set v1;
v0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v0.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v1 = staticinvoke <java.util.Collections: java.util.Set newSetFromMap(java.util.Map)>(v0);
<io.netty.handler.codec.http.multipart.DeleteFileOnExitHook: java.util.Set FILES> = v1;
v2 = staticinvoke <java.lang.Runtime: java.lang.Runtime getRuntime()>();
v3 = new io.netty.handler.codec.http.multipart.DeleteFileOnExitHook$1;
specialinvoke v3.<io.netty.handler.codec.http.multipart.DeleteFileOnExitHook$1: void <init>()>();
virtualinvoke v2.<java.lang.Runtime: void addShutdownHook(java.lang.Thread)>(v3);
return;
}
}