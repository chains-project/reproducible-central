public class io.netty.handler.codec.http.multipart.DiskFileUpload extends io.netty.handler.codec.http.multipart.AbstractDiskHttpData implements io.netty.handler.codec.http.multipart.FileUpload
{
public static java.lang.String baseDirectory;
public static boolean deleteOnExitTemporaryFile;
public static final java.lang.String prefix;
public static final java.lang.String postfix;
private final java.lang.String baseDir;
private final boolean deleteOnExit;
private java.lang.String filename;
private java.lang.String contentType;
private java.lang.String contentTransferEncoding;
public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.nio.charset.Charset, long, java.lang.String, boolean)
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
long v6;
java.nio.charset.Charset v5;
java.lang.String v1, v2, v3, v4, v7, v9;
boolean v8;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.nio.charset.Charset;
v6 := @parameter5: long;
v7 := @parameter6: java.lang.String;
v8 := @parameter7: boolean;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractDiskHttpData: void <init>(java.lang.String,java.nio.charset.Charset,long)>(v1, v5, v6);
virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: void setFilename(java.lang.String)>(v2);
virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: void setContentType(java.lang.String)>(v3);
virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: void setContentTransferEncoding(java.lang.String)>(v4);
if v7 != null goto label1;
v9 = <io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String baseDirectory>;
goto label2;
label1:
v9 = v7;
label2:
v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String baseDir> = v9;
v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean deleteOnExit> = v8;
return;
}
public void <init>(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.nio.charset.Charset, long)
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
long v6;
java.nio.charset.Charset v5;
java.lang.String v1, v2, v3, v4, v7;
boolean v8;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.nio.charset.Charset;
v6 := @parameter5: long;
v7 = <io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String baseDirectory>;
v8 = <io.netty.handler.codec.http.multipart.DiskFileUpload: boolean deleteOnExitTemporaryFile>;
specialinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,java.lang.String,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8);
return;
}
public io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()
{
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = <io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType FileUpload>;
return v1;
}
public java.lang.String getFilename()
{
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String filename>;
return v1;
}
public void setFilename(java.lang.String)
{
java.lang.Object v2;
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "filename");
v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String filename> = v2;
return;
}
public int hashCode()
{
int v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = staticinvoke <io.netty.handler.codec.http.multipart.FileUploadUtil: int hashCode(io.netty.handler.codec.http.multipart.FileUpload)>(v0);
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
java.lang.Object v1;
boolean v2, v3, v4;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.http.multipart.FileUpload;
if v2 == 0 goto label1;
v3 = staticinvoke <io.netty.handler.codec.http.multipart.FileUploadUtil: boolean equals(io.netty.handler.codec.http.multipart.FileUpload,io.netty.handler.codec.http.multipart.FileUpload)>(v0, v1);
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData)
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
io.netty.handler.codec.http.multipart.InterfaceHttpData v1;
java.lang.ClassCastException v3;
int v7;
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType v4, v5;
java.lang.String v6;
boolean v2;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: io.netty.handler.codec.http.multipart.InterfaceHttpData;
v2 = v1 instanceof io.netty.handler.codec.http.multipart.FileUpload;
if v2 != 0 goto label1;
v3 = new java.lang.ClassCastException;
v4 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()>();
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.InterfaceHttpData: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType,io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot compare \u0001 with \u0001");
specialinvoke v3.<java.lang.ClassCastException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: int compareTo(io.netty.handler.codec.http.multipart.FileUpload)>(v1);
return v7;
}
public int compareTo(io.netty.handler.codec.http.multipart.FileUpload)
{
int v2;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
io.netty.handler.codec.http.multipart.FileUpload v1;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: io.netty.handler.codec.http.multipart.FileUpload;
v2 = staticinvoke <io.netty.handler.codec.http.multipart.FileUploadUtil: int compareTo(io.netty.handler.codec.http.multipart.FileUpload,io.netty.handler.codec.http.multipart.FileUpload)>(v0, v1);
return v2;
}
public void setContentType(java.lang.String)
{
java.lang.Object v2;
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "contentType");
v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String contentType> = v2;
return;
}
public java.lang.String getContentType()
{
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String contentType>;
return v1;
}
public java.lang.String getContentTransferEncoding()
{
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String contentTransferEncoding>;
return v1;
}
public void setContentTransferEncoding(java.lang.String)
{
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.String;
v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String contentTransferEncoding> = v1;
return;
}
public java.lang.String toString()
{
io.netty.util.AsciiString v12, v16, v3, v4, v5, v7, v9;
long v17;
java.nio.charset.Charset v11, v13;
java.lang.String v10, v14, v15, v20, v22, v6, v8;
boolean v18, v19, v21;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
java.io.IOException v2;
java.io.File v1;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = null;
label1:
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.io.File getFile()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
v3 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_DISPOSITION>;
v4 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString FORM_DATA>;
v5 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString NAME>;
v6 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String getName()>();
v7 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString FILENAME>;
v8 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String filename>;
v9 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_TYPE>;
v10 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String contentType>;
v11 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.nio.charset.Charset getCharset()>();
if v11 == null goto label5;
v12 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString CHARSET>;
v13 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.nio.charset.Charset getCharset()>();
v14 = virtualinvoke v13.<java.nio.charset.Charset: java.lang.String name()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.util.AsciiString,java.lang.String)>(v12, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("; \u0001=\u0001\r\n");
goto label6;
label5:
v15 = "\r\n";
label6:
v16 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v17 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: long length()>();
v18 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean isCompleted()>();
v19 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean isInMemory()>();
if v1 == null goto label7;
v20 = virtualinvoke v1.<java.io.File: java.lang.String getAbsolutePath()>();
goto label8;
label7:
v20 = "null";
label8:
v21 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean deleteOnExit>;
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.util.AsciiString,io.netty.util.AsciiString,io.netty.util.AsciiString,java.lang.String,io.netty.util.AsciiString,java.lang.String,io.netty.util.AsciiString,java.lang.String,java.lang.String,io.netty.util.AsciiString,long,boolean,boolean,java.lang.String,boolean)>(v3, v4, v5, v6, v7, v8, v9, v10, v15, v16, v17, v18, v19, v20, v21) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: \u0001; \u0001=\"\u0001\"; \u0001=\"\u0001\"\r\n\u0001: \u0001\u0001\u0001: \u0001\r\nCompleted: \u0001\r\nIsInMemory: \u0001\r\nRealFile: \u0001 DeleteAfter: \u0001");
return v22;
catch java.io.IOException from label1 to label2 with label3;
}
protected boolean deleteOnExit()
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean deleteOnExit>;
return v1;
}
protected java.lang.String getBaseDirectory()
{
java.lang.String v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String baseDir>;
return v1;
}
protected java.lang.String getDiskFilename()
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
return "upload";
}
protected java.lang.String getPostfix()
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
return ".tmp";
}
protected java.lang.String getPrefix()
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
return "FUp_";
}
public io.netty.handler.codec.http.multipart.FileUpload copy()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
io.netty.handler.codec.http.multipart.FileUpload v3;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.buffer.ByteBuf content()>();
if v1 == null goto label1;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf copy()>();
goto label2;
label1:
v2 = null;
label2:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.http.multipart.FileUpload duplicate()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
io.netty.handler.codec.http.multipart.FileUpload v3;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.buffer.ByteBuf content()>();
if v1 == null goto label1;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf duplicate()>();
goto label2;
label1:
v2 = null;
label2:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)>(v2);
return v3;
}
public io.netty.handler.codec.http.multipart.FileUpload retainedDuplicate()
{
java.lang.Throwable v4;
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
io.netty.handler.codec.http.multipart.FileUpload v3, v5;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.buffer.ByteBuf content()>();
if v1 == null goto label4;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedDuplicate()>();
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)>(v2);
label2:
return v3;
label3:
v4 := @caughtexception;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
throw v4;
label4:
v5 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)>(null);
return v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.handler.codec.http.multipart.FileUpload replace(io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0, v2;
java.io.IOException v11;
long v8;
io.netty.channel.ChannelException v12;
io.netty.buffer.ByteBuf v1;
java.nio.charset.Charset v7;
java.lang.String v3, v4, v5, v6, v9;
boolean v10, v13;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = new io.netty.handler.codec.http.multipart.DiskFileUpload;
v3 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String getName()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String getFilename()>();
v5 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String getContentType()>();
v6 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String getContentTransferEncoding()>();
v7 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.nio.charset.Charset getCharset()>();
v8 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: long size>;
v9 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: java.lang.String baseDir>;
v10 = v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean deleteOnExit>;
specialinvoke v2.<io.netty.handler.codec.http.multipart.DiskFileUpload: void <init>(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.nio.charset.Charset,long,java.lang.String,boolean)>(v3, v4, v5, v6, v7, v8, v9, v10);
if v1 == null goto label4;
label1:
virtualinvoke v2.<io.netty.handler.codec.http.multipart.DiskFileUpload: void setContent(io.netty.buffer.ByteBuf)>(v1);
label2:
goto label4;
label3:
v11 := @caughtexception;
v12 = new io.netty.channel.ChannelException;
specialinvoke v12.<io.netty.channel.ChannelException: void <init>(java.lang.Throwable)>(v11);
throw v12;
label4:
v13 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean isCompleted()>();
virtualinvoke v2.<io.netty.handler.codec.http.multipart.DiskFileUpload: void setCompleted(boolean)>(v13);
return v2;
catch java.io.IOException from label1 to label2 with label3;
}
public io.netty.handler.codec.http.multipart.FileUpload retain(int)
{
int v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractDiskHttpData: io.netty.handler.codec.http.multipart.HttpData retain(int)>(v1);
return v0;
}
public io.netty.handler.codec.http.multipart.FileUpload retain()
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractDiskHttpData: io.netty.handler.codec.http.multipart.HttpData retain()>();
return v0;
}
public io.netty.handler.codec.http.multipart.FileUpload touch()
{
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractDiskHttpData: io.netty.handler.codec.http.multipart.HttpData touch()>();
return v0;
}
public io.netty.handler.codec.http.multipart.FileUpload touch(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.codec.http.multipart.DiskFileUpload v0;
v0 := @this: io.netty.handler.codec.http.multipart.DiskFileUpload;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<io.netty.handler.codec.http.multipart.AbstractDiskHttpData: io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object)>(v1);
return v0;
}
static void <clinit>()
{
<io.netty.handler.codec.http.multipart.DiskFileUpload: boolean deleteOnExitTemporaryFile> = 1;
return;
}
}