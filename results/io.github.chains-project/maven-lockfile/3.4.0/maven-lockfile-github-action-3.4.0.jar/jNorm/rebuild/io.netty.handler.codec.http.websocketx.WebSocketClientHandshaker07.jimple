public class io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 extends io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker
{
private static final io.netty.util.internal.logging.InternalLogger logger;
public static final java.lang.String MAGIC_GUID;
private java.lang.String expectedChallengeResponseString;
private final boolean allowExtensions;
private final boolean performMasking;
private final boolean allowMaskMismatch;
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int)
{
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
io.netty.handler.codec.http.HttpHeaders v5;
int v6;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
java.lang.String v3;
java.net.URI v1;
boolean v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean)>(v1, v2, v3, v4, v5, v6, 1, 0);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4, v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long)>(v1, v2, v3, v4, v5, v6, v7, v8, 10000L);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, long)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
long v9;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4, v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8, v9, 0);
return;
}
void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, long, boolean)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
long v9;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v10, v4, v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: long;
v10 := @parameter9: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8, v9, v10, 1);
return;
}
void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, long, boolean, boolean)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
long v9;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v10, v11, v4, v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: long;
v10 := @parameter9: boolean;
v11 := @parameter10: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,io.netty.handler.codec.http.HttpHeaders,int,long,boolean,boolean)>(v1, v2, v3, v5, v6, v9, v10, v11);
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean allowExtensions> = v4;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean performMasking> = v7;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean allowMaskMismatch> = v8;
return;
}
protected io.netty.handler.codec.http.FullHttpRequest newHandshakeRequest()
{
byte[] v2, v6, v7;
io.netty.handler.codec.http.HttpHeaders v18, v19, v20, v29, v32;
io.netty.handler.codec.http.DefaultFullHttpRequest v13;
io.netty.util.AsciiString v21, v23, v25, v27, v28, v30, v31, v33, v35, v37, v41, v42, v44;
java.net.URI v1;
boolean v10, v22, v34, v36, v40;
java.lang.CharSequence v24, v26, v38;
io.netty.util.internal.logging.InternalLogger v11, v9;
io.netty.handler.codec.http.HttpVersion v14;
io.netty.handler.codec.http.websocketx.WebSocketVersion v43;
io.netty.buffer.ByteBuf v17;
java.nio.charset.Charset v5;
java.lang.String v12, v16, v3, v39, v4, v8;
io.netty.handler.codec.http.HttpMethod v15;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.net.URI uri()>();
v2 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] randomBytes(int)>(16);
v3 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: java.lang.String base64(byte[])>(v2);
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
v5 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v6 = virtualinvoke v4.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v5);
v7 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] sha1(byte[])>(v6);
v8 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: java.lang.String base64(byte[])>(v7);
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.String expectedChallengeResponseString> = v8;
v9 = <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: io.netty.util.internal.logging.InternalLogger logger>;
v10 = interfaceinvoke v9.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v10 == 0 goto label1;
v11 = <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: io.netty.util.internal.logging.InternalLogger logger>;
v12 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.String expectedChallengeResponseString>;
interfaceinvoke v11.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("WebSocket version 07 client handshake key: {}, expected response: {}", v3, v12);
label1:
v13 = new io.netty.handler.codec.http.DefaultFullHttpRequest;
v14 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v15 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
v16 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.String upgradeUrl(java.net.URI)>(v1);
v17 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v13.<io.netty.handler.codec.http.DefaultFullHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf)>(v14, v15, v16, v17);
v18 = interfaceinvoke v13.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v19 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: io.netty.handler.codec.http.HttpHeaders customHeaders>;
if v19 == null goto label2;
v20 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: io.netty.handler.codec.http.HttpHeaders customHeaders>;
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v20);
v21 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v22 = virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v21);
if v22 != 0 goto label3;
v23 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v24 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.CharSequence websocketHostValue(java.net.URI)>(v1);
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v23, v24);
goto label3;
label2:
v25 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v26 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.CharSequence websocketHostValue(java.net.URI)>(v1);
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v25, v26);
label3:
v27 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v28 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v29 = virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v27, v28);
v30 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v31 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v32 = virtualinvoke v29.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v30, v31);
v33 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY>;
virtualinvoke v32.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v33, v3);
v34 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean generateOriginHeader>;
if v34 == 0 goto label4;
v35 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_ORIGIN>;
v36 = virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v35);
if v36 != 0 goto label4;
v37 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_ORIGIN>;
v38 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.CharSequence websocketOriginValue(java.net.URI)>(v1);
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v37, v38);
label4:
v39 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.String expectedSubprotocol()>();
if v39 == null goto label5;
v40 = virtualinvoke v39.<java.lang.String: boolean isEmpty()>();
if v40 != 0 goto label5;
v41 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL>;
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v41, v39);
label5:
v42 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_VERSION>;
v43 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: io.netty.handler.codec.http.websocketx.WebSocketVersion version()>();
v44 = virtualinvoke v43.<io.netty.handler.codec.http.websocketx.WebSocketVersion: io.netty.util.AsciiString toAsciiString()>();
virtualinvoke v18.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v42, v44);
return v13;
}
protected void verify(io.netty.handler.codec.http.FullHttpResponse)
{
io.netty.handler.codec.http.HttpHeaders v7;
java.lang.Object[] v26;
io.netty.util.AsciiString v10, v14, v15, v18, v21, v8;
java.lang.String v13, v19, v20, v22, v23, v27, v28, v6, v9;
boolean v11, v16, v24, v4;
io.netty.handler.codec.http.HttpResponseStatus v2, v3;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException v12, v17, v25, v5;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
io.netty.handler.codec.http.FullHttpResponse v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpResponse;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v3 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS>;
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpResponseStatus: boolean equals(java.lang.Object)>(v2);
if v4 != 0 goto label1;
v5 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.HttpResponseStatus)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid handshake response getStatus: \u0001");
specialinvoke v5.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v6, v1);
throw v5;
label1:
v7 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v8 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v9 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v8);
v10 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v11 = virtualinvoke v10.<io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence)>(v9);
if v11 != 0 goto label2;
v12 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid handshake response upgrade: \u0001");
specialinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v13, v1);
throw v12;
label2:
v14 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v15 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v16 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v14, v15, 1);
if v16 != 0 goto label3;
v17 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v18 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v19 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v18);
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid handshake response connection: \u0001");
specialinvoke v17.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v20, v1);
throw v17;
label3:
v21 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_ACCEPT>;
v22 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v21);
if v22 == null goto label4;
v23 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.String expectedChallengeResponseString>;
v24 = virtualinvoke v22.<java.lang.Object: boolean equals(java.lang.Object)>(v23);
if v24 != 0 goto label5;
label4:
v25 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
v26 = newarray (java.lang.Object)[2];
v26[0] = v22;
v27 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: java.lang.String expectedChallengeResponseString>;
v26[1] = v27;
v28 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid challenge. Actual: %s. Expected: %s", v26);
specialinvoke v25.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpResponse)>(v28, v1);
throw v25;
label5:
return;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder()
{
int v3;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder v1;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean allowExtensions>;
v3 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: int maxFramePayloadLength()>();
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean allowMaskMismatch>;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket07FrameDecoder: void <init>(boolean,boolean,int,boolean)>(0, v2, v3, v4);
return v1;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder()
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: boolean performMasking>;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket07FrameEncoder: void <init>(boolean)>(v2);
return v1;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 setForceCloseTimeoutMillis(long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07 v0;
long v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07;
v1 := @parameter0: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker setForceCloseTimeoutMillis(long)>(v1);
return v0;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http/websocketx/WebSocketClientHandshaker07;");
<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker07: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}