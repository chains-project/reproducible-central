public class io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler extends io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler
{
private final io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker;
private final io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig;
public io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker()
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker>;
return v1;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.HttpHeaders v10;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v4;
long v14, v5;
io.netty.handler.codec.http.websocketx.WebSocketVersion v7;
int v11;
java.lang.String v8;
java.net.URI v6;
boolean v12, v13, v15, v16, v3, v9;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v17;
java.lang.Object v2;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "clientConfig");
v3 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean dropPongFrames()>();
v4 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame()>();
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long forceCloseTimeoutMillis()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler: void <init>(boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,long)>(v3, v4, v5);
v6 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.net.URI webSocketUri()>();
v7 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketVersion version()>();
v8 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.lang.String subprotocol()>();
v9 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowExtensions()>();
v10 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.HttpHeaders customHeaders()>();
v11 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: int maxFramePayloadLength()>();
v12 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean performMasking()>();
v13 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowMaskMismatch()>();
v14 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long forceCloseTimeoutMillis()>();
v15 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean absoluteUpgradeUrl()>();
v16 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean generateOriginHeader()>();
v17 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,long,boolean,boolean)>(v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16);
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker> = v17;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig> = v1;
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4, v7, v8, v9;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,long)>(v1, v2, v3, v4, v5, v6, v7, v8, v9, 10000L);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.HttpHeaders v5;
long v10;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v11;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4, v7, v8, v9;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: boolean;
v10 := @parameter9: long;
v11 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientHandshakerFactory: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker newHandshaker(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean)>(v1, v2, v3, v4, v5, v6, v8, v9);
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,long)>(v11, v7, v10);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,long)>(v1, v2, v3, v4, v5, v6, v7, 10000L);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.HttpHeaders v5;
long v8;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,long)>(v1, v2, v3, v4, v5, v6, v7, 1, 0, v8);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
io.netty.handler.codec.http.HttpHeaders v5;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,long)>(v1, v2, v3, v4, v5, v6, 10000L);
return;
}
public void <init>(java.net.URI, io.netty.handler.codec.http.websocketx.WebSocketVersion, java.lang.String, boolean, io.netty.handler.codec.http.HttpHeaders, int, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.HttpHeaders v5;
long v7;
io.netty.handler.codec.http.websocketx.WebSocketVersion v2;
int v6;
java.lang.String v3;
java.net.URI v1;
boolean v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(java.net.URI,io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,long)>(v1, v2, v3, v4, v5, v6, 1, v7);
return;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
boolean v2;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,long)>(v1, v2, 10000L);
return;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
long v3;
boolean v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: boolean;
v3 := @parameter2: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,boolean,long)>(v1, v2, 1, v3);
return;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, boolean, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,boolean,long)>(v1, v2, v3, 10000L);
return;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, boolean, boolean, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v5, v6, v7;
long v4;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
boolean v2, v3;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
v4 := @parameter3: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler: void <init>(boolean)>(v3);
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker> = v1;
v5 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder newBuilder()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder handleCloseFrames(boolean)>(v2);
v7 = virtualinvoke v6.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder handshakeTimeoutMillis(long)>(v4);
v8 = virtualinvoke v7.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig build()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig> = v8;
return;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,long)>(v1, 10000L);
return;
}
public void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, long)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
long v2;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: long;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,boolean,long)>(v1, 1, v2);
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.websocketx.WebSocketFrame, java.util.List) throws java.lang.Exception
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.handler.codec.http.websocketx.WebSocketFrame v2;
boolean v5, v6;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v3 := @parameter2: java.util.List;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean handleCloseFrames()>();
if v5 == 0 goto label1;
v6 = v2 instanceof io.netty.handler.codec.http.websocketx.CloseWebSocketFrame;
if v6 == 0 goto label1;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close()>();
return;
label1:
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler: void decode(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame,java.util.List)>(v1, v2, v3);
return;
}
protected io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException buildHandshakeException(java.lang.String)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException v2;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: java.lang.String;
v2 = new io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException;
specialinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshakeException: void <init>(java.lang.String)>(v1);
return v2;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler v0;
io.netty.handler.codec.http.websocketx.Utf8FrameValidator v19;
long v11;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler v8;
io.netty.channel.ChannelHandlerContext v1;
java.lang.String v16, v18, v5, v7;
boolean v13;
io.netty.channel.ChannelPipeline v15, v2, v4;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v9;
io.netty.channel.ChannelHandler v14, v3;
java.lang.Class v17, v6;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v10, v12;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler get(java.lang.Class)>(class "Lio/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler;");
if v3 != null goto label1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v5 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v6 = class "Lio/netty/handler/codec/http/websocketx/WebSocketClientProtocolHandshakeHandler;";
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
v8 = new io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler;
v9 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker>;
v10 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig>;
v11 = virtualinvoke v10.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long handshakeTimeoutMillis()>();
specialinvoke v8.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandshakeHandler: void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker,long)>(v9, v11);
interfaceinvoke v4.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v5, v7, v8);
label1:
v12 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolHandler: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig clientConfig>;
v13 = virtualinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean withUTF8Validator()>();
if v13 == 0 goto label2;
v14 = interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler get(java.lang.Class)>(class "Lio/netty/handler/codec/http/websocketx/Utf8FrameValidator;");
if v14 != null goto label2;
v15 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v16 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v17 = class "Lio/netty/handler/codec/http/websocketx/Utf8FrameValidator;";
v18 = virtualinvoke v17.<java.lang.Class: java.lang.String getName()>();
v19 = new io.netty.handler.codec.http.websocketx.Utf8FrameValidator;
specialinvoke v19.<io.netty.handler.codec.http.websocketx.Utf8FrameValidator: void <init>()>();
interfaceinvoke v15.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v16, v18, v19);
label2:
return;
}
}