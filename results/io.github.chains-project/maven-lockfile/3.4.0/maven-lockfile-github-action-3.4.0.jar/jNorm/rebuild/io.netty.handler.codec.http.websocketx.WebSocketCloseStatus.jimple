public final class io.netty.handler.codec.http.websocketx.WebSocketCloseStatus extends java.lang.Object implements java.lang.Comparable
{
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus NORMAL_CLOSURE;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ENDPOINT_UNAVAILABLE;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus PROTOCOL_ERROR;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_MESSAGE_TYPE;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_PAYLOAD_DATA;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus POLICY_VIOLATION;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MESSAGE_TOO_BIG;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MANDATORY_EXTENSION;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INTERNAL_SERVER_ERROR;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus SERVICE_RESTART;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TRY_AGAIN_LATER;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus BAD_GATEWAY;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus EMPTY;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ABNORMAL_CLOSURE;
public static final io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TLS_HANDSHAKE_FAILED;
private final int statusCode;
private final java.lang.String reasonText;
private java.lang.String text;
public void <init>(int, java.lang.String)
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String,boolean)>(v1, v2, 1);
return;
}
public void <init>(int, java.lang.String, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
java.lang.IllegalArgumentException v5;
int v1;
java.lang.Object v7;
java.lang.String v2, v6;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v3 == 0 goto label1;
v4 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: boolean isValidStatusCode(int)>(v1);
if v4 != 0 goto label1;
v5 = new java.lang.IllegalArgumentException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("WebSocket close status code does NOT comply with RFC-6455: \u0001");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v5;
label1:
v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int statusCode> = v1;
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "reasonText");
v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: java.lang.String reasonText> = v7;
return;
}
public int code()
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int statusCode>;
return v1;
}
public java.lang.String reasonText()
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: java.lang.String reasonText>;
return v1;
}
public int compareTo(io.netty.handler.codec.http.websocketx.WebSocketCloseStatus)
{
int v2, v3, v4;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0, v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int code()>();
v3 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int code()>();
v4 = v2 - v3;
return v4;
}
public boolean equals(java.lang.Object)
{
int v4, v5;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if null == v1 goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int statusCode>;
v5 = v1.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int statusCode>;
if v4 != v5 goto label4;
v6 = 1;
goto label5;
label4:
v6 = 0;
label5:
return v6;
}
public int hashCode()
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int statusCode>;
return v1;
}
public java.lang.String toString()
{
int v2;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0;
java.lang.String v1, v3, v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: java.lang.String text>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: int code()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: java.lang.String reasonText()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");
v1 = v4;
v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: java.lang.String text> = v4;
label1:
return v1;
}
public static boolean isValidStatusCode(int)
{
int v0;
boolean v1;
v0 := @parameter0: int;
if v0 < 0 goto label3;
if 1000 > v0 goto label1;
if v0 <= 1003 goto label3;
label1:
if 1007 > v0 goto label2;
if v0 <= 1014 goto label3;
label2:
if 3000 > v0 goto label4;
label3:
v1 = 1;
goto label5;
label4:
v1 = 0;
label5:
return v1;
}
public static io.netty.handler.codec.http.websocketx.WebSocketCloseStatus valueOf(int)
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v1, v10, v11, v12, v13, v14, v15, v16, v2, v3, v4, v5, v6, v7, v8, v9;
int v0;
java.lang.String v17;
v0 := @parameter0: int;
tableswitch(v0)
{
case 1000: goto label01;
case 1001: goto label02;
case 1002: goto label03;
case 1003: goto label04;
case 1004: goto label16;
case 1005: goto label05;
case 1006: goto label06;
case 1007: goto label07;
case 1008: goto label08;
case 1009: goto label09;
case 1010: goto label10;
case 1011: goto label11;
case 1012: goto label12;
case 1013: goto label13;
case 1014: goto label14;
case 1015: goto label15;
default: goto label16;
};
label01:
v1 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus NORMAL_CLOSURE>;
return v1;
label02:
v2 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ENDPOINT_UNAVAILABLE>;
return v2;
label03:
v3 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus PROTOCOL_ERROR>;
return v3;
label04:
v4 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_MESSAGE_TYPE>;
return v4;
label05:
v5 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus EMPTY>;
return v5;
label06:
v6 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ABNORMAL_CLOSURE>;
return v6;
label07:
v7 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_PAYLOAD_DATA>;
return v7;
label08:
v8 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus POLICY_VIOLATION>;
return v8;
label09:
v9 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MESSAGE_TOO_BIG>;
return v9;
label10:
v10 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MANDATORY_EXTENSION>;
return v10;
label11:
v11 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INTERNAL_SERVER_ERROR>;
return v11;
label12:
v12 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus SERVICE_RESTART>;
return v12;
label13:
v13 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TRY_AGAIN_LATER>;
return v13;
label14:
v14 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus BAD_GATEWAY>;
return v14;
label15:
v15 = <io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TLS_HANDSHAKE_FAILED>;
return v15;
label16:
v16 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Close status #\u0001");
specialinvoke v16.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(v0, v17);
return v16;
}
static void <clinit>()
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v0, v1, v10, v11, v12, v13, v14, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1000, "Bye");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus NORMAL_CLOSURE> = v0;
v1 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1001, "Endpoint unavailable");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ENDPOINT_UNAVAILABLE> = v1;
v2 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1002, "Protocol error");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus PROTOCOL_ERROR> = v2;
v3 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v3.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1003, "Invalid message type");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_MESSAGE_TYPE> = v3;
v4 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v4.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1007, "Invalid payload data");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INVALID_PAYLOAD_DATA> = v4;
v5 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v5.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1008, "Policy violation");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus POLICY_VIOLATION> = v5;
v6 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v6.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1009, "Message too big");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MESSAGE_TOO_BIG> = v6;
v7 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v7.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1010, "Mandatory extension");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus MANDATORY_EXTENSION> = v7;
v8 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v8.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1011, "Internal server error");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus INTERNAL_SERVER_ERROR> = v8;
v9 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v9.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1012, "Service Restart");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus SERVICE_RESTART> = v9;
v10 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v10.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1013, "Try Again Later");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TRY_AGAIN_LATER> = v10;
v11 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v11.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String)>(1014, "Bad Gateway");
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus BAD_GATEWAY> = v11;
v12 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String,boolean)>(1005, "Empty", 0);
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus EMPTY> = v12;
v13 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v13.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String,boolean)>(1006, "Abnormal closure", 0);
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus ABNORMAL_CLOSURE> = v13;
v14 = new io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
specialinvoke v14.<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: void <init>(int,java.lang.String,boolean)>(1015, "TLS handshake failed", 0);
<io.netty.handler.codec.http.websocketx.WebSocketCloseStatus: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus TLS_HANDSHAKE_FAILED> = v14;
return;
}
}