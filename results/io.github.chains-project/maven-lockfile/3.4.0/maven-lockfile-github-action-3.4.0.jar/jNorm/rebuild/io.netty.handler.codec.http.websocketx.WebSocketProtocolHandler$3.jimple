class io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.util.concurrent.Future val$timeoutTask;
final io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler this$0;
void <init>(io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler, io.netty.util.concurrent.Future)
{
io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler v1;
io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3 v0;
io.netty.util.concurrent.Future v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler;
v2 := @parameter1: io.netty.util.concurrent.Future;
v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3: io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler this$0> = v1;
v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3: io.netty.util.concurrent.Future val$timeoutTask> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3 v0;
io.netty.util.concurrent.Future v2;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketProtocolHandler$3: io.netty.util.concurrent.Future val$timeoutTask>;
interfaceinvoke v2.<io.netty.util.concurrent.Future: boolean cancel(boolean)>(0);
return;
}
}