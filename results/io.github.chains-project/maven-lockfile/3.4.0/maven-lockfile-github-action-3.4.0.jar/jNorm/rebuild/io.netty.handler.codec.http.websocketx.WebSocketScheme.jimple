public final class io.netty.handler.codec.http.websocketx.WebSocketScheme extends java.lang.Object
{
public static final io.netty.handler.codec.http.websocketx.WebSocketScheme WS;
public static final io.netty.handler.codec.http.websocketx.WebSocketScheme WSS;
private final int port;
private final io.netty.util.AsciiString name;
private void <init>(int, java.lang.String)
{
io.netty.handler.codec.http.websocketx.WebSocketScheme v0;
int v1;
io.netty.util.AsciiString v3;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketScheme;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: int port> = v1;
v3 = staticinvoke <io.netty.util.AsciiString: io.netty.util.AsciiString cached(java.lang.String)>(v2);
v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.util.AsciiString name> = v3;
return;
}
public io.netty.util.AsciiString name()
{
io.netty.handler.codec.http.websocketx.WebSocketScheme v0;
io.netty.util.AsciiString v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketScheme;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.util.AsciiString name>;
return v1;
}
public int port()
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketScheme v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketScheme;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: int port>;
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.http.websocketx.WebSocketScheme v0;
io.netty.util.AsciiString v5, v6;
int v3, v4;
java.lang.Object v1;
boolean v2, v7, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketScheme;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.handler.codec.http.websocketx.WebSocketScheme;
if v2 != 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketScheme: int port()>();
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: int port>;
if v3 != v4 goto label2;
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.util.AsciiString name()>();
v6 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.util.AsciiString name>;
v7 = virtualinvoke v5.<io.netty.util.AsciiString: boolean equals(java.lang.Object)>(v6);
if v7 == 0 goto label2;
v8 = 1;
goto label3;
label2:
v8 = 0;
label3:
return v8;
}
public int hashCode()
{
io.netty.handler.codec.http.websocketx.WebSocketScheme v0;
int v1, v2, v4, v5;
io.netty.util.AsciiString v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketScheme;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: int port>;
v2 = v1 * 31;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.util.AsciiString name>;
v4 = virtualinvoke v3.<io.netty.util.AsciiString: int hashCode()>();
v5 = v2 + v4;
return v5;
}
public java.lang.String toString()
{
io.netty.handler.codec.http.websocketx.WebSocketScheme v0;
io.netty.util.AsciiString v1;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketScheme;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.util.AsciiString name>;
v2 = virtualinvoke v1.<io.netty.util.AsciiString: java.lang.String toString()>();
return v2;
}
static void <clinit>()
{
io.netty.handler.codec.http.websocketx.WebSocketScheme v0, v1;
v0 = new io.netty.handler.codec.http.websocketx.WebSocketScheme;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketScheme: void <init>(int,java.lang.String)>(80, "ws");
<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.handler.codec.http.websocketx.WebSocketScheme WS> = v0;
v1 = new io.netty.handler.codec.http.websocketx.WebSocketScheme;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketScheme: void <init>(int,java.lang.String)>(443, "wss");
<io.netty.handler.codec.http.websocketx.WebSocketScheme: io.netty.handler.codec.http.websocketx.WebSocketScheme WSS> = v1;
return;
}
}