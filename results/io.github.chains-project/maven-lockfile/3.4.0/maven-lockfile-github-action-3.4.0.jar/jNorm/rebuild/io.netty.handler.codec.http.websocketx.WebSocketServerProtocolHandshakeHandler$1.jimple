class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.channel.ChannelPromise val$localHandshakePromise;
final io.netty.channel.ChannelHandlerContext val$ctx;
final io.netty.handler.codec.http.HttpRequest val$req;
final io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker val$handshaker;
final io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler this$0;
void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler, io.netty.channel.ChannelPromise, io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.HttpRequest, io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker)
{
io.netty.channel.ChannelHandlerContext v3;
io.netty.handler.codec.http.HttpRequest v4;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker v5;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1 v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 := @parameter2: io.netty.channel.ChannelHandlerContext;
v4 := @parameter3: io.netty.handler.codec.http.HttpRequest;
v5 := @parameter4: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler this$0> = v1;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelPromise val$localHandshakePromise> = v2;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelHandlerContext val$ctx> = v3;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.handler.codec.http.HttpRequest val$req> = v4;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker val$handshaker> = v5;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
java.lang.Throwable v4, v6;
io.netty.handler.codec.http.HttpHeaders v15;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$HandshakeComplete v11;
io.netty.channel.ChannelHandlerContext v10, v5, v8;
io.netty.channel.ChannelPromise v3, v7;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1 v0;
java.lang.String v13, v17;
boolean v2;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent v9;
io.netty.handler.codec.http.HttpRequest v12, v14;
io.netty.channel.ChannelFuture v1;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker v16;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isSuccess()>();
if v2 != 0 goto label1;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelPromise val$localHandshakePromise>;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
interfaceinvoke v3.<io.netty.channel.ChannelPromise: boolean tryFailure(java.lang.Throwable)>(v4);
v5 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelHandlerContext val$ctx>;
v6 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
interfaceinvoke v5.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v6);
goto label2;
label1:
v7 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelPromise val$localHandshakePromise>;
interfaceinvoke v7.<io.netty.channel.ChannelPromise: boolean trySuccess()>();
v8 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelHandlerContext val$ctx>;
v9 = <io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$ServerHandshakeStateEvent HANDSHAKE_COMPLETE>;
interfaceinvoke v8.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v9);
v10 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.channel.ChannelHandlerContext val$ctx>;
v11 = new io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$HandshakeComplete;
v12 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.handler.codec.http.HttpRequest val$req>;
v13 = interfaceinvoke v12.<io.netty.handler.codec.http.HttpRequest: java.lang.String uri()>();
v14 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.handler.codec.http.HttpRequest val$req>;
v15 = interfaceinvoke v14.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v16 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandshakeHandler$1: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker val$handshaker>;
v17 = virtualinvoke v16.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker: java.lang.String selectedSubprotocol()>();
specialinvoke v11.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler$HandshakeComplete: void <init>(java.lang.String,io.netty.handler.codec.http.HttpHeaders,java.lang.String)>(v13, v15, v17);
interfaceinvoke v10.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v11);
label2:
return;
}
}