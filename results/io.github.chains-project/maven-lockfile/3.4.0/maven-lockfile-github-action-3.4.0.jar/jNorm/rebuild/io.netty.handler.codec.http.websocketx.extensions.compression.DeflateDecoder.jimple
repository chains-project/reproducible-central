abstract class io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder extends io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder
{
static final io.netty.buffer.ByteBuf FRAME_TAIL;
static final io.netty.buffer.ByteBuf EMPTY_DEFLATE_BLOCK;
private final boolean noContext;
private final io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter;
private io.netty.channel.embedded.EmbeddedChannel decoder;
void <init>(boolean, io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v2;
java.lang.Object v3;
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder: void <init>()>();
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: boolean noContext> = v1;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "extensionDecoderFilter");
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter> = v3;
return;
}
protected io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter()
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v1;
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter>;
return v1;
}
protected abstract boolean appendFrameTail(io.netty.handler.codec.http.websocketx.WebSocketFrame);
protected abstract int newRsv(io.netty.handler.codec.http.websocketx.WebSocketFrame);
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.websocketx.WebSocketFrame, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.CodecException v18;
io.netty.buffer.ByteBuf v4;
int v13, v17, v8;
java.lang.String v20, v21;
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
boolean v10, v12, v14, v16, v5, v7;
io.netty.handler.codec.http.websocketx.WebSocketFrame v2, v9;
io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame v15;
io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame v11;
java.util.List v3;
io.netty.handler.codec.http.websocketx.TextWebSocketFrame v6;
java.lang.Class v19;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v3 := @parameter2: java.util.List;
v4 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.buffer.ByteBuf decompressContent(io.netty.channel.ChannelHandlerContext,io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v1, v2);
v5 = v2 instanceof io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
if v5 == 0 goto label1;
v6 = new io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
v7 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: boolean isFinalFragment()>();
v8 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: int newRsv(io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v2);
specialinvoke v6.<io.netty.handler.codec.http.websocketx.TextWebSocketFrame: void <init>(boolean,int,io.netty.buffer.ByteBuf)>(v7, v8, v4);
v9 = v6;
goto label4;
label1:
v10 = v2 instanceof io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
if v10 == 0 goto label2;
v11 = new io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
v12 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: boolean isFinalFragment()>();
v13 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: int newRsv(io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v2);
specialinvoke v11.<io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame: void <init>(boolean,int,io.netty.buffer.ByteBuf)>(v12, v13, v4);
v9 = v11;
goto label4;
label2:
v14 = v2 instanceof io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame;
if v14 == 0 goto label3;
v15 = new io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame;
v16 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: boolean isFinalFragment()>();
v17 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: int newRsv(io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v2);
specialinvoke v15.<io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame: void <init>(boolean,int,io.netty.buffer.ByteBuf)>(v16, v17, v4);
v9 = v15;
goto label4;
label3:
v18 = new io.netty.handler.codec.CodecException;
v19 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v20 = virtualinvoke v19.<java.lang.Class: java.lang.String getName()>();
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected frame type: \u0001");
specialinvoke v18.<io.netty.handler.codec.CodecException: void <init>(java.lang.String)>(v21);
throw v18;
label4:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v9);
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: void cleanup()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: void cleanup()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
private io.netty.buffer.ByteBuf decompressContent(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.websocketx.WebSocketFrame)
{
io.netty.buffer.ByteBufAllocator v28;
io.netty.handler.codec.compression.ZlibDecoder v13;
io.netty.handler.codec.CodecException v35, v6;
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
boolean v15, v18, v23, v32, v34, v36, v37, v4, v5;
io.netty.buffer.CompositeByteBuf v29;
java.lang.Object[] v20, v25;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v14, v16, v17, v21, v22, v26, v27;
int v33;
java.lang.String v8, v9;
io.netty.handler.codec.http.websocketx.WebSocketFrame v2;
io.netty.channel.embedded.EmbeddedChannel v10, v19, v24, v3, v30;
io.netty.handler.codec.compression.ZlibWrapper v12;
io.netty.channel.ChannelHandler[] v11;
java.lang.Class v7;
java.lang.Object v31;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v3 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder>;
if v3 != null goto label2;
v4 = v2 instanceof io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
if v4 != 0 goto label1;
v5 = v2 instanceof io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
if v5 != 0 goto label1;
v6 = new io.netty.handler.codec.CodecException;
v7 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected initial frame type: \u0001");
specialinvoke v6.<io.netty.handler.codec.CodecException: void <init>(java.lang.String)>(v9);
throw v6;
label1:
v10 = new io.netty.channel.embedded.EmbeddedChannel;
v11 = newarray (io.netty.channel.ChannelHandler)[1];
v12 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper NONE>;
v13 = staticinvoke <io.netty.handler.codec.compression.ZlibCodecFactory: io.netty.handler.codec.compression.ZlibDecoder newZlibDecoder(io.netty.handler.codec.compression.ZlibWrapper)>(v12);
v11[0] = v13;
specialinvoke v10.<io.netty.channel.embedded.EmbeddedChannel: void <init>(io.netty.channel.ChannelHandler[])>(v11);
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder> = v10;
label2:
v14 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: io.netty.buffer.ByteBuf content()>();
v15 = virtualinvoke v14.<io.netty.buffer.ByteBuf: boolean isReadable()>();
v16 = <io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.buffer.ByteBuf EMPTY_DEFLATE_BLOCK>;
v17 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: io.netty.buffer.ByteBuf content()>();
v18 = virtualinvoke v16.<io.netty.buffer.ByteBuf: boolean equals(java.lang.Object)>(v17);
v19 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder>;
v20 = newarray (java.lang.Object)[1];
v21 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: io.netty.buffer.ByteBuf content()>();
v22 = virtualinvoke v21.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
v20[0] = v22;
virtualinvoke v19.<io.netty.channel.embedded.EmbeddedChannel: boolean writeInbound(java.lang.Object[])>(v20);
v23 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: boolean appendFrameTail(io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v2);
if v23 == 0 goto label3;
v24 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder>;
v25 = newarray (java.lang.Object)[1];
v26 = <io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.buffer.ByteBuf FRAME_TAIL>;
v27 = virtualinvoke v26.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf duplicate()>();
v25[0] = v27;
virtualinvoke v24.<io.netty.channel.embedded.EmbeddedChannel: boolean writeInbound(java.lang.Object[])>(v25);
label3:
v28 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v29 = interfaceinvoke v28.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeBuffer()>();
label4:
v30 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder>;
v31 = virtualinvoke v30.<io.netty.channel.embedded.EmbeddedChannel: java.lang.Object readInbound()>();
if v31 == null goto label6;
v32 = virtualinvoke v31.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v32 != 0 goto label5;
virtualinvoke v31.<io.netty.buffer.ByteBuf: boolean release()>();
goto label4;
label5:
virtualinvoke v29.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf)>(1, v31);
goto label4;
label6:
if v18 != 0 goto label7;
if v15 == 0 goto label7;
v33 = virtualinvoke v29.<io.netty.buffer.CompositeByteBuf: int numComponents()>();
if v33 > 0 goto label7;
v34 = v2 instanceof io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame;
if v34 != 0 goto label7;
virtualinvoke v29.<io.netty.buffer.CompositeByteBuf: boolean release()>();
v35 = new io.netty.handler.codec.CodecException;
specialinvoke v35.<io.netty.handler.codec.CodecException: void <init>(java.lang.String)>("cannot read uncompressed buffer");
throw v35;
label7:
v36 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketFrame: boolean isFinalFragment()>();
if v36 == 0 goto label8;
v37 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: boolean noContext>;
if v37 == 0 goto label8;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: void cleanup()>();
label8:
return v29;
}
private void cleanup()
{
io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder v0;
io.netty.channel.embedded.EmbeddedChannel v1, v2;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder;
v1 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder>;
virtualinvoke v2.<io.netty.channel.embedded.EmbeddedChannel: boolean finishAndReleaseAll()>();
v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.channel.embedded.EmbeddedChannel decoder> = null;
label1:
return;
}
static void <clinit>()
{
byte[] v0, v4;
io.netty.buffer.ByteBuf v1, v2, v3, v5, v6, v7;
v0 = newarray (byte)[4];
v0[0] = 0;
v0[1] = 0;
v0[2] = -1;
v0[3] = -1;
v1 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v0);
v2 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf unreleasableBuffer(io.netty.buffer.ByteBuf)>(v1);
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf asReadOnly()>();
<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.buffer.ByteBuf FRAME_TAIL> = v3;
v4 = newarray (byte)[1];
v4[0] = 0;
v5 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v4);
v6 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf unreleasableBuffer(io.netty.buffer.ByteBuf)>(v5);
v7 = virtualinvoke v6.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf asReadOnly()>();
<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: io.netty.buffer.ByteBuf EMPTY_DEFLATE_BLOCK> = v7;
return;
}
}