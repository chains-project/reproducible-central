public final class io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler extends io.netty.handler.codec.ByteToMessageDecoder
{
private static final io.netty.buffer.ByteBuf CONNECTION_PREFACE;
private final io.netty.handler.codec.http.HttpServerCodec httpServerCodec;
private final io.netty.handler.codec.http.HttpServerUpgradeHandler httpServerUpgradeHandler;
private final io.netty.channel.ChannelHandler http2ServerHandler;
public void <init>(io.netty.handler.codec.http.HttpServerCodec, io.netty.handler.codec.http.HttpServerUpgradeHandler, io.netty.channel.ChannelHandler)
{
io.netty.handler.codec.http.HttpServerCodec v1;
io.netty.channel.ChannelHandler v3;
io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler v0;
java.lang.Object v4, v5, v6;
io.netty.handler.codec.http.HttpServerUpgradeHandler v2;
v0 := @this: io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler;
v1 := @parameter0: io.netty.handler.codec.http.HttpServerCodec;
v2 := @parameter1: io.netty.handler.codec.http.HttpServerUpgradeHandler;
v3 := @parameter2: io.netty.channel.ChannelHandler;
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void <init>()>();
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "httpServerCodec");
v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.handler.codec.http.HttpServerCodec httpServerCodec> = v4;
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "httpServerUpgradeHandler");
v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.handler.codec.http.HttpServerUpgradeHandler httpServerUpgradeHandler> = v5;
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "http2ServerHandler");
v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.channel.ChannelHandler http2ServerHandler> = v6;
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelPipeline v2, v5;
io.netty.handler.codec.http.HttpServerCodec v7;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler v0;
java.lang.String v3, v6;
io.netty.handler.codec.http.HttpServerUpgradeHandler v4;
v0 := @this: io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v4 = v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.handler.codec.http.HttpServerUpgradeHandler httpServerUpgradeHandler>;
v5 = interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v3, null, v4);
v6 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v7 = v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.handler.codec.http.HttpServerCodec httpServerCodec>;
interfaceinvoke v5.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v6, null, v7);
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v4, v8, v9;
int v10, v11, v5, v6, v7;
io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler v0;
java.lang.String v19;
boolean v12;
io.netty.channel.ChannelPipeline v13, v14, v16, v18, v21;
io.netty.handler.codec.http.HttpServerCodec v15;
java.util.List v3;
io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler$PriorKnowledgeUpgradeEvent v22;
io.netty.channel.ChannelHandler v20;
io.netty.handler.codec.http.HttpServerUpgradeHandler v17;
v0 := @this: io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = <io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.buffer.ByteBuf CONNECTION_PREFACE>;
v5 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readableBytes()>();
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = staticinvoke <java.lang.Math: int min(int,int)>(v6, v5);
v8 = <io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.buffer.ByteBuf CONNECTION_PREFACE>;
v9 = <io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.buffer.ByteBuf CONNECTION_PREFACE>;
v10 = virtualinvoke v9.<io.netty.buffer.ByteBuf: int readerIndex()>();
v11 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v12 = staticinvoke <io.netty.buffer.ByteBufUtil: boolean equals(io.netty.buffer.ByteBuf,int,io.netty.buffer.ByteBuf,int,int)>(v8, v10, v2, v11, v7);
if v12 != 0 goto label1;
v13 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v13.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
goto label2;
label1:
if v7 != v5 goto label2;
v14 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v15 = v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.handler.codec.http.HttpServerCodec httpServerCodec>;
v16 = interfaceinvoke v14.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v15);
v17 = v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.handler.codec.http.HttpServerUpgradeHandler httpServerUpgradeHandler>;
interfaceinvoke v16.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v17);
v18 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v19 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v20 = v0.<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.channel.ChannelHandler http2ServerHandler>;
interfaceinvoke v18.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v19, null, v20);
v21 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v21.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
v22 = <io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler$PriorKnowledgeUpgradeEvent: io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler$PriorKnowledgeUpgradeEvent INSTANCE>;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v22);
label2:
return;
}
static void <clinit>()
{
io.netty.buffer.ByteBuf v0, v1, v2;
v0 = staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: io.netty.buffer.ByteBuf connectionPrefaceBuf()>();
v1 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf unreleasableBuffer(io.netty.buffer.ByteBuf)>(v0);
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf asReadOnly()>();
<io.netty.handler.codec.http2.CleartextHttp2ServerUpgradeHandler: io.netty.buffer.ByteBuf CONNECTION_PREFACE> = v2;
return;
}
}