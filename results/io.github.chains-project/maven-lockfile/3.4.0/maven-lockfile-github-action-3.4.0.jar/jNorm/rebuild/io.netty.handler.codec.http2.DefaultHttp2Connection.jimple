public class io.netty.handler.codec.http2.DefaultHttp2Connection extends java.lang.Object implements io.netty.handler.codec.http2.Http2Connection
{
private static final io.netty.util.internal.logging.InternalLogger logger;
final io.netty.util.collection.IntObjectMap streamMap;
final io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry propertyKeyRegistry;
final io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream;
final io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint;
final io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint;
final java.util.List listeners;
final io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams;
io.netty.util.concurrent.Promise closePromise;
public void <init>(boolean)
{
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: void <init>(boolean,int)>(v1, 100);
return;
}
public void <init>(boolean, int)
{
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v7;
java.util.ArrayList v6;
io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream v14, v16, v5;
io.netty.util.collection.IntObjectMap v13;
int v10, v15, v2;
io.netty.util.collection.IntObjectHashMap v3;
boolean v1, v12;
io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry v4;
java.util.List v8;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v11, v9;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new io.netty.util.collection.IntObjectHashMap;
specialinvoke v3.<io.netty.util.collection.IntObjectHashMap: void <init>()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.collection.IntObjectMap streamMap> = v3;
v4 = new io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry;
specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection)>(v0);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry propertyKeyRegistry> = v4;
v5 = new io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream;
specialinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection)>(v0);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream> = v5;
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>(int)>(4);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners> = v6;
v7 = new io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
specialinvoke v7.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,java.util.List)>(v0, v8);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams> = v7;
v9 = new io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint;
if v1 == 0 goto label1;
v10 = 2147483647;
goto label2;
label1:
v10 = v2;
label2:
specialinvoke v9.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,boolean,int)>(v0, v1, v10);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint> = v9;
v11 = new io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint;
if v1 != 0 goto label3;
v12 = 1;
goto label4;
label3:
v12 = 0;
label4:
specialinvoke v11.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,boolean,int)>(v0, v12, v2);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint> = v11;
v13 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.collection.IntObjectMap streamMap>;
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream>;
v15 = virtualinvoke v14.<io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream: int id()>();
v16 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream>;
interfaceinvoke v13.<io.netty.util.collection.IntObjectMap: java.lang.Object put(int,java.lang.Object)>(v15, v16);
return;
}
final boolean isClosed()
{
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.util.concurrent.Promise v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public io.netty.util.concurrent.Future close(io.netty.util.concurrent.Promise)
{
java.lang.Throwable v20;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v12, v14, v19, v21;
java.lang.Iterable v10;
io.netty.util.collection.IntObjectMap v9;
int v18, v25;
boolean v13, v15, v22, v4, v6, v8;
io.netty.util.concurrent.Promise v1, v2, v26, v3, v5, v7;
java.util.Iterator v11;
java.lang.Object v16, v17, v23, v24;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.util.concurrent.Promise;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "promise");
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
if v2 == null goto label2;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
if v3 == v1 goto label3;
v4 = v1 instanceof io.netty.channel.ChannelPromise;
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
v6 = interfaceinvoke v5.<io.netty.channel.ChannelFuture: boolean isVoid()>();
if v6 == 0 goto label1;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise> = v1;
goto label3;
label1:
v7 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
staticinvoke <io.netty.util.concurrent.PromiseNotifier: io.netty.util.concurrent.Future cascade(io.netty.util.concurrent.Future,io.netty.util.concurrent.Promise)>(v7, v1);
goto label3;
label2:
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise> = v1;
label3:
v8 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: boolean isStreamMapEmpty()>();
if v8 == 0 goto label4;
interfaceinvoke v1.<io.netty.util.concurrent.Promise: boolean trySuccess(java.lang.Object)>(null);
return v1;
label4:
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.collection.IntObjectMap streamMap>;
v10 = interfaceinvoke v9.<io.netty.util.collection.IntObjectMap: java.lang.Iterable entries()>();
v11 = interfaceinvoke v10.<java.lang.Iterable: java.util.Iterator iterator()>();
v12 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
v13 = virtualinvoke v12.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: boolean allowModifications()>();
if v13 == 0 goto label8;
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
virtualinvoke v14.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void incrementPendingIterations()>();
label5:
v15 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label6;
v16 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v17 = interfaceinvoke v16.<io.netty.util.collection.IntObjectMap$PrimitiveEntry: java.lang.Object value()>();
v18 = virtualinvoke v17.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id()>();
if v18 == 0 goto label5;
virtualinvoke v17.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream close(java.util.Iterator)>(v11);
goto label5;
label6:
v19 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
virtualinvoke v19.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void decrementPendingIterations()>();
goto label9;
label7:
v20 := @caughtexception;
v21 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
virtualinvoke v21.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void decrementPendingIterations()>();
throw v20;
label8:
v22 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v22 == 0 goto label9;
v23 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v24 = interfaceinvoke v23.<io.netty.util.collection.IntObjectMap$PrimitiveEntry: java.lang.Object value()>();
v25 = interfaceinvoke v24.<io.netty.handler.codec.http2.Http2Stream: int id()>();
if v25 == 0 goto label8;
interfaceinvoke v24.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream close()>();
goto label8;
label9:
v26 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
return v26;
catch java.lang.Throwable from label5 to label6 with label7;
}
public void addListener(io.netty.handler.codec.http2.Http2Connection$Listener)
{
java.util.List v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.Http2Connection$Listener v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$Listener;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return;
}
public void removeListener(io.netty.handler.codec.http2.Http2Connection$Listener)
{
java.util.List v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.Http2Connection$Listener v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$Listener;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
interfaceinvoke v2.<java.util.List: boolean remove(java.lang.Object)>(v1);
return;
}
public boolean isServer()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v1;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: boolean isServer()>();
return v2;
}
public io.netty.handler.codec.http2.Http2Stream connectionStream()
{
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ConnectionStream connectionStream>;
return v1;
}
public io.netty.handler.codec.http2.Http2Stream stream(int)
{
io.netty.util.collection.IntObjectMap v2;
int v1;
java.lang.Object v3;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.collection.IntObjectMap streamMap>;
v3 = interfaceinvoke v2.<io.netty.util.collection.IntObjectMap: java.lang.Object get(int)>(v1);
return v3;
}
public boolean streamMayHaveExisted(int)
{
int v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v2, v4;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
boolean v3, v5, v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: boolean mayHaveCreatedStream(int)>(v1);
if v3 != 0 goto label1;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: boolean mayHaveCreatedStream(int)>(v1);
if v5 == 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
public int numActiveStreams()
{
int v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: int size()>();
return v2;
}
public io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2Stream v3;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v2;
io.netty.handler.codec.http2.Http2StreamVisitor v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.Http2StreamVisitor;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor)>(v1);
return v3;
}
public io.netty.handler.codec.http2.Http2Connection$Endpoint local()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v1;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
return v1;
}
public io.netty.handler.codec.http2.Http2Connection$Endpoint remote()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v1;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
return v1;
}
public boolean goAwayReceived()
{
int v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v1;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v2 = v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer>;
if v2 < 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public void goAwayReceived(int, long, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v21;
java.lang.Object[] v9;
long v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
java.lang.Integer v12, v13;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.http2.Http2Exception v14;
int v1, v11, v16, v18, v5, v7;
java.util.List v17, v19;
io.netty.util.internal.logging.InternalLogger v22;
io.netty.handler.codec.http2.Http2Error v8;
java.lang.Object v20;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v10, v15, v23, v4, v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
if v5 < 0 goto label1;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v7 = virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
if v7 >= v1 goto label1;
v8 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v9 = newarray (java.lang.Object)[2];
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v11 = virtualinvoke v10.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
v9[0] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v9[1] = v13;
v14 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v8, "lastStreamId MUST NOT increase. Current value: %d new value: %d", v9);
throw v14;
label1:
v15 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
specialinvoke v15.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: void lastStreamKnownByPeer(int)>(v1);
v16 = 0;
label2:
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v18 = interfaceinvoke v17.<java.util.List: int size()>();
if v16 >= v18 goto label7;
label3:
v19 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v20 = interfaceinvoke v19.<java.util.List: java.lang.Object get(int)>(v16);
interfaceinvoke v20.<io.netty.handler.codec.http2.Http2Connection$Listener: void onGoAwayReceived(int,long,io.netty.buffer.ByteBuf)>(v1, v2, v3);
label4:
goto label6;
label5:
v21 := @caughtexception;
v22 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v22.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable from listener onGoAwayReceived.", v21);
label6:
v16 = v16 + 1;
goto label2;
label7:
v23 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: void closeStreamsGreaterThanLastKnownStreamId(int,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint)>(v1, v23);
return;
catch java.lang.Throwable from label3 to label4 with label5;
}
public boolean goAwaySent()
{
int v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v1;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
v2 = v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer>;
if v2 < 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean goAwaySent(int, long, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v23;
java.lang.Object[] v11;
long v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
java.lang.Integer v14, v15;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.http2.Http2Exception v16;
int v1, v13, v18, v20, v5, v7, v9;
java.util.List v19, v21;
io.netty.util.internal.logging.InternalLogger v24;
io.netty.handler.codec.http2.Http2Error v10;
java.lang.Object v22;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v12, v17, v25, v4, v6, v8;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
if v5 < 0 goto label2;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
v7 = virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
if v1 != v7 goto label1;
return 0;
label1:
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
v9 = virtualinvoke v8.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
if v1 <= v9 goto label2;
v10 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v11 = newarray (java.lang.Object)[2];
v12 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
v13 = virtualinvoke v12.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int lastStreamKnownByPeer()>();
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v13);
v11[0] = v14;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v11[1] = v15;
v16 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v10, "Last stream identifier must not increase between sending multiple GOAWAY frames (was \'%d\', is \'%d\').", v11);
throw v16;
label2:
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
specialinvoke v17.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: void lastStreamKnownByPeer(int)>(v1);
v18 = 0;
label3:
v19 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v20 = interfaceinvoke v19.<java.util.List: int size()>();
if v18 >= v20 goto label8;
label4:
v21 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v22 = interfaceinvoke v21.<java.util.List: java.lang.Object get(int)>(v18);
interfaceinvoke v22.<io.netty.handler.codec.http2.Http2Connection$Listener: void onGoAwaySent(int,long,io.netty.buffer.ByteBuf)>(v1, v2, v3);
label5:
goto label7;
label6:
v23 := @caughtexception;
v24 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v24.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable from listener onGoAwaySent.", v23);
label7:
v18 = v18 + 1;
goto label3;
label8:
v25 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: void closeStreamsGreaterThanLastKnownStreamId(int,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint)>(v1, v25);
return 1;
catch java.lang.Throwable from label4 to label5 with label6;
}
private void closeStreamsGreaterThanLastKnownStreamId(int, io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2Connection$1 v3;
int v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint;
v3 = new io.netty.handler.codec.http2.DefaultHttp2Connection$1;
specialinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2Connection$1: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection,int,io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint)>(v0, v1, v2);
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor)>(v3);
return;
}
private boolean isStreamMapEmpty()
{
io.netty.util.collection.IntObjectMap v1;
int v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.collection.IntObjectMap streamMap>;
v2 = interfaceinvoke v1.<io.netty.util.collection.IntObjectMap: int size()>();
if v2 != 1 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
void removeStream(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream, java.util.Iterator)
{
java.lang.Throwable v13;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v1;
io.netty.util.collection.IntObjectMap v3;
int v10, v4, v8;
boolean v16, v6, v7;
io.netty.util.concurrent.Promise v15, v17;
java.util.Iterator v2;
java.util.List v11, v9;
io.netty.util.internal.logging.InternalLogger v14;
java.lang.Object v12, v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v2 := @parameter1: java.util.Iterator;
if v2 != null goto label03;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.collection.IntObjectMap streamMap>;
v4 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id()>();
v5 = interfaceinvoke v3.<io.netty.util.collection.IntObjectMap: java.lang.Object remove(int)>(v4);
if v5 == null goto label01;
v6 = 1;
goto label02;
label01:
v6 = 0;
label02:
v7 = v6;
goto label04;
label03:
interfaceinvoke v2.<java.util.Iterator: void remove()>();
v7 = 1;
label04:
if v7 == 0 goto label11;
v8 = 0;
label05:
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v10 = interfaceinvoke v9.<java.util.List: int size()>();
if v8 >= v10 goto label10;
label06:
v11 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v12 = interfaceinvoke v11.<java.util.List: java.lang.Object get(int)>(v8);
interfaceinvoke v12.<io.netty.handler.codec.http2.Http2Connection$Listener: void onStreamRemoved(io.netty.handler.codec.http2.Http2Stream)>(v1);
label07:
goto label09;
label08:
v13 := @caughtexception;
v14 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v14.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable from listener onStreamRemoved.", v13);
label09:
v8 = v8 + 1;
goto label05;
label10:
v15 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
if v15 == null goto label11;
v16 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: boolean isStreamMapEmpty()>();
if v16 == 0 goto label11;
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.concurrent.Promise closePromise>;
interfaceinvoke v17.<io.netty.util.concurrent.Promise: boolean trySuccess(java.lang.Object)>(null);
label11:
return;
catch java.lang.Throwable from label06 to label07 with label08;
}
static io.netty.handler.codec.http2.Http2Stream$State activeState(int, io.netty.handler.codec.http2.Http2Stream$State, boolean, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v12;
io.netty.handler.codec.http2.Http2Stream$State v1, v7, v8, v9;
int[] v4;
io.netty.handler.codec.http2.Http2Exception v13;
int v0, v5, v6;
io.netty.handler.codec.http2.Http2Error v10;
java.lang.String v11;
boolean v2, v3;
v0 := @parameter0: int;
v1 := @parameter1: io.netty.handler.codec.http2.Http2Stream$State;
v2 := @parameter2: boolean;
v3 := @parameter3: boolean;
v4 = <io.netty.handler.codec.http2.DefaultHttp2Connection$2: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v5 = virtualinvoke v1.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v6 = v4[v5];
tableswitch(v6)
{
case 1: goto label1;
case 2: goto label5;
case 3: goto label6;
default: goto label7;
};
label1:
if v3 == 0 goto label3;
if v2 == 0 goto label2;
v7 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL>;
goto label4;
label2:
v7 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE>;
goto label4;
label3:
v7 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State OPEN>;
label4:
return v7;
label5:
v8 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE>;
return v8;
label6:
v9 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL>;
return v9;
label7:
v10 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http2.Http2Stream$State)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Attempting to open a stream in an invalid state: \u0001");
v12 = newarray (java.lang.Object)[0];
v13 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v0, v10, v11, v12);
throw v13;
}
void notifyHalfClosed(io.netty.handler.codec.http2.Http2Stream)
{
java.lang.Throwable v7;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
java.util.List v3, v5;
io.netty.util.internal.logging.InternalLogger v8;
int v2, v4;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = 0;
label1:
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 >= v4 goto label6;
label2:
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v6 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v2);
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection$Listener: void onStreamHalfClosed(io.netty.handler.codec.http2.Http2Stream)>(v1);
label3:
goto label5;
label4:
v7 := @caughtexception;
v8 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable from listener onStreamHalfClosed.", v7);
label5:
v2 = v2 + 1;
goto label1;
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
void notifyClosed(io.netty.handler.codec.http2.Http2Stream)
{
java.lang.Throwable v7;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
java.util.List v3, v5;
io.netty.util.internal.logging.InternalLogger v8;
int v2, v4;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = 0;
label1:
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 >= v4 goto label6;
label2:
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: java.util.List listeners>;
v6 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v2);
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection$Listener: void onStreamClosed(io.netty.handler.codec.http2.Http2Stream)>(v1);
label3:
goto label5;
label4:
v7 := @caughtexception;
v8 = <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void error(java.lang.String,java.lang.Throwable)>("Caught Throwable from listener onStreamClosed.", v7);
label5:
v2 = v2 + 1;
goto label1;
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
public io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry propertyKeyRegistry>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2Connection$PropertyKeyRegistry: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey newKey()>();
return v2;
}
final io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyKey(io.netty.handler.codec.http2.Http2Connection$PropertyKey)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey v3;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v1;
java.lang.Object v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$PropertyKey;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "key");
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyConnection(io.netty.handler.codec.http2.Http2Connection)>(v0);
return v3;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http2/DefaultHttp2Connection;");
<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}