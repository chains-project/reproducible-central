final class io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength extends java.lang.Object
{
private final long expected;
private long seen;
void <init>(long)
{
long v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength;
v1 := @parameter0: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long expected> = v1;
return;
}
void increaseReceivedBytes(boolean, int, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength v0;
byte v16, v25, v28, v8;
java.lang.Long v12, v20, v22, v32, v34;
io.netty.handler.codec.http2.Http2Exception v13, v23, v35;
boolean v1, v4;
io.netty.handler.codec.http2.Http2Error v17, v29, v9;
java.lang.Object[] v10, v18, v30;
long v11, v14, v15, v19, v21, v24, v26, v27, v31, v33, v5, v6, v7;
int v2, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v6 = v5 + v3;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen> = v6;
v7 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v8 = v7 cmp 0L;
if v8 >= 0 goto label1;
v9 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v10 = newarray (java.lang.Object)[1];
v11 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long expected>;
v12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v11);
v10[0] = v12;
v13 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v2, v9, "Received amount of data did overflow and so not match content-length header %d", v10);
throw v13;
label1:
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v15 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long expected>;
v16 = v14 cmp v15;
if v16 <= 0 goto label2;
v17 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v18 = newarray (java.lang.Object)[2];
v19 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v19);
v18[0] = v20;
v21 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long expected>;
v22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v21);
v18[1] = v22;
v23 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v2, v17, "Received amount of data %d does not match content-length header %d", v18);
throw v23;
label2:
if v4 == 0 goto label4;
v24 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v25 = v24 cmp 0L;
if v25 != 0 goto label3;
if v1 != 0 goto label3;
return;
label3:
v26 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long expected>;
v27 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v28 = v26 cmp v27;
if v28 <= 0 goto label4;
v29 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v30 = newarray (java.lang.Object)[2];
v31 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long seen>;
v32 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v31);
v30[0] = v32;
v33 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: long expected>;
v34 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v33);
v30[1] = v34;
v35 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception streamError(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v2, v29, "Received amount of data %d does not match content-length header %d", v30);
throw v35;
label4:
return;
}
}