public class io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder extends java.lang.Object implements io.netty.handler.codec.http2.Http2ConnectionDecoder
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private io.netty.handler.codec.http2.Http2FrameListener internalFrameListener;
private final io.netty.handler.codec.http2.Http2Connection connection;
private io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager;
private final io.netty.handler.codec.http2.Http2ConnectionEncoder encoder;
private final io.netty.handler.codec.http2.Http2FrameReader frameReader;
private io.netty.handler.codec.http2.Http2FrameListener listener;
private final io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier;
private final io.netty.handler.codec.http2.Http2SettingsReceivedConsumer settingsReceivedConsumer;
private final boolean autoAckPing;
private final io.netty.handler.codec.http2.Http2Connection$PropertyKey contentLengthKey;
public void <init>(io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2FrameReader)
{
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.Http2FrameReader v3;
io.netty.handler.codec.http2.Http2PromisedRequestVerifier v4;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2FrameReader;
v4 = <io.netty.handler.codec.http2.Http2PromisedRequestVerifier: io.netty.handler.codec.http2.Http2PromisedRequestVerifier ALWAYS_VERIFY>;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2PromisedRequestVerifier)>(v1, v2, v3, v4);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2FrameReader, io.netty.handler.codec.http2.Http2PromisedRequestVerifier)
{
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.Http2FrameReader v3;
io.netty.handler.codec.http2.Http2PromisedRequestVerifier v4;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2FrameReader;
v4 := @parameter3: io.netty.handler.codec.http2.Http2PromisedRequestVerifier;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2PromisedRequestVerifier,boolean)>(v1, v2, v3, v4, 1);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2FrameReader, io.netty.handler.codec.http2.Http2PromisedRequestVerifier, boolean)
{
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.Http2FrameReader v3;
io.netty.handler.codec.http2.Http2PromisedRequestVerifier v4;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2FrameReader;
v4 := @parameter3: io.netty.handler.codec.http2.Http2PromisedRequestVerifier;
v5 := @parameter4: boolean;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: void <init>(io.netty.handler.codec.http2.Http2Connection,io.netty.handler.codec.http2.Http2ConnectionEncoder,io.netty.handler.codec.http2.Http2FrameReader,io.netty.handler.codec.http2.Http2PromisedRequestVerifier,boolean,boolean)>(v1, v2, v3, v4, v5, 1);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Connection, io.netty.handler.codec.http2.Http2ConnectionEncoder, io.netty.handler.codec.http2.Http2FrameReader, io.netty.handler.codec.http2.Http2PromisedRequestVerifier, boolean, boolean)
{
io.netty.handler.codec.http2.Http2FrameReader v3;
io.netty.handler.codec.http2.Http2ConnectionEncoder v2;
io.netty.handler.codec.http2.DefaultHttp2LocalFlowController v20;
java.lang.String v10;
boolean v5, v6, v8;
io.netty.handler.codec.http2.Http2Connection$Endpoint v17, v19, v21;
io.netty.handler.codec.http2.Http2PromisedRequestVerifier v4;
io.netty.handler.codec.http2.Http2FrameWriter v23;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener v7;
java.lang.IllegalArgumentException v9;
io.netty.handler.codec.http2.Http2FlowController v18, v22;
io.netty.handler.codec.http2.Http2Connection v1, v12;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v13;
java.lang.Object v11, v14, v15, v16;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionEncoder;
v3 := @parameter2: io.netty.handler.codec.http2.Http2FrameReader;
v4 := @parameter3: io.netty.handler.codec.http2.Http2PromisedRequestVerifier;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v7 = new io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener;
specialinvoke v7.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$PrefaceFrameListener: void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder)>(v0);
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener internalFrameListener> = v7;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: boolean autoAckPing> = v6;
if v5 == 0 goto label1;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2SettingsReceivedConsumer settingsReceivedConsumer> = null;
goto label3;
label1:
v8 = v2 instanceof io.netty.handler.codec.http2.Http2SettingsReceivedConsumer;
if v8 != 0 goto label2;
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(class "Lio/netty/handler/codec/http2/Http2SettingsReceivedConsumer;") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("disabling autoAckSettings requires the encoder to be a \u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
label2:
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2SettingsReceivedConsumer settingsReceivedConsumer> = v2;
label3:
v11 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "connection");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection> = v11;
v12 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v13 = interfaceinvoke v12.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$PropertyKey newKey()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection$PropertyKey contentLengthKey> = v13;
v14 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "frameReader");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameReader frameReader> = v14;
v15 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "encoder");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2ConnectionEncoder encoder> = v15;
v16 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v4, "requestVerifier");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2PromisedRequestVerifier requestVerifier> = v16;
v17 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v18 = interfaceinvoke v17.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2FlowController flowController()>();
if v18 != null goto label4;
v19 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v20 = new io.netty.handler.codec.http2.DefaultHttp2LocalFlowController;
specialinvoke v20.<io.netty.handler.codec.http2.DefaultHttp2LocalFlowController: void <init>(io.netty.handler.codec.http2.Http2Connection)>(v1);
interfaceinvoke v19.<io.netty.handler.codec.http2.Http2Connection$Endpoint: void flowController(io.netty.handler.codec.http2.Http2FlowController)>(v20);
label4:
v21 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v22 = interfaceinvoke v21.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2FlowController flowController()>();
v23 = interfaceinvoke v2.<io.netty.handler.codec.http2.Http2ConnectionEncoder: io.netty.handler.codec.http2.Http2FrameWriter frameWriter()>();
interfaceinvoke v22.<io.netty.handler.codec.http2.Http2LocalFlowController: io.netty.handler.codec.http2.Http2LocalFlowController frameWriter(io.netty.handler.codec.http2.Http2FrameWriter)>(v23);
return;
}
public void lifecycleManager(io.netty.handler.codec.http2.Http2LifecycleManager)
{
io.netty.handler.codec.http2.Http2LifecycleManager v1;
java.lang.Object v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2LifecycleManager;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "lifecycleManager");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager> = v2;
return;
}
public io.netty.handler.codec.http2.Http2Connection connection()
{
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
return v1;
}
public final io.netty.handler.codec.http2.Http2LocalFlowController flowController()
{
io.netty.handler.codec.http2.Http2Connection$Endpoint v2;
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.Http2FlowController v3;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v3 = interfaceinvoke v2.<io.netty.handler.codec.http2.Http2Connection$Endpoint: io.netty.handler.codec.http2.Http2FlowController flowController()>();
return v3;
}
public void frameListener(io.netty.handler.codec.http2.Http2FrameListener)
{
java.lang.Object v2;
io.netty.handler.codec.http2.Http2FrameListener v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameListener;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "listener");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener> = v2;
return;
}
public io.netty.handler.codec.http2.Http2FrameListener frameListener()
{
io.netty.handler.codec.http2.Http2FrameListener v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
return v1;
}
public boolean prefaceReceived()
{
java.lang.Class v2;
io.netty.handler.codec.http2.Http2FrameListener v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener internalFrameListener>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if class "Lio/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder$FrameReadListener;" != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public void decodeFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http2.Http2FrameReader v4;
io.netty.handler.codec.http2.Http2FrameListener v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameReader frameReader>;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener internalFrameListener>;
interfaceinvoke v4.<io.netty.handler.codec.http2.Http2FrameReader: void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)>(v1, v2, v5);
return;
}
public io.netty.handler.codec.http2.Http2Settings localSettings()
{
io.netty.handler.codec.http2.Http2FrameReader v2;
io.netty.handler.codec.http2.Http2FrameSizePolicy v5;
long v11, v13;
int v10, v12, v7;
boolean v15, v18;
io.netty.handler.codec.http2.Http2Connection$Endpoint v17, v9;
io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration v4;
io.netty.handler.codec.http2.Http2FrameReader$Configuration v3;
io.netty.handler.codec.http2.Http2Settings v1;
io.netty.handler.codec.http2.Http2Connection v14, v16, v8;
io.netty.handler.codec.http2.Http2LocalFlowController v6;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 = new io.netty.handler.codec.http2.Http2Settings;
specialinvoke v1.<io.netty.handler.codec.http2.Http2Settings: void <init>()>();
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameReader frameReader>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http2.Http2FrameReader: io.netty.handler.codec.http2.Http2FrameReader$Configuration configuration()>();
v4 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2FrameReader$Configuration: io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration headersConfiguration()>();
v5 = interfaceinvoke v3.<io.netty.handler.codec.http2.Http2FrameReader$Configuration: io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy()>();
v6 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LocalFlowController flowController()>();
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2LocalFlowController: int initialWindowSize()>();
virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: io.netty.handler.codec.http2.Http2Settings initialWindowSize(int)>(v7);
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v9 = interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint remote()>();
v10 = interfaceinvoke v9.<io.netty.handler.codec.http2.Http2Connection$Endpoint: int maxActiveStreams()>();
virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: io.netty.handler.codec.http2.Http2Settings maxConcurrentStreams(long)>(v10);
v11 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration: long maxHeaderTableSize()>();
virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: io.netty.handler.codec.http2.Http2Settings headerTableSize(long)>(v11);
v12 = interfaceinvoke v5.<io.netty.handler.codec.http2.Http2FrameSizePolicy: int maxFrameSize()>();
virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: io.netty.handler.codec.http2.Http2Settings maxFrameSize(int)>(v12);
v13 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2HeadersDecoder$Configuration: long maxHeaderListSize()>();
virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: io.netty.handler.codec.http2.Http2Settings maxHeaderListSize(long)>(v13);
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v15 = interfaceinvoke v14.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
if v15 != 0 goto label1;
v16 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v17 = interfaceinvoke v16.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Connection$Endpoint local()>();
v18 = interfaceinvoke v17.<io.netty.handler.codec.http2.Http2Connection$Endpoint: boolean allowPushTo()>();
virtualinvoke v1.<io.netty.handler.codec.http2.Http2Settings: io.netty.handler.codec.http2.Http2Settings pushEnabled(boolean)>(v18);
label1:
return v1;
}
public void close()
{
io.netty.handler.codec.http2.Http2FrameReader v1;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameReader frameReader>;
interfaceinvoke v1.<io.netty.handler.codec.http2.Http2FrameReader: void close()>();
return;
}
protected long calculateMaxHeaderListSizeGoAway(long)
{
long v1, v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: long;
v2 = staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: long calculateMaxHeaderListSizeGoAway(long)>(v1);
return v2;
}
private int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream)
{
int v3;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.Http2LocalFlowController v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2LocalFlowController flowController()>();
v3 = interfaceinvoke v2.<io.netty.handler.codec.http2.Http2LocalFlowController: int unconsumedBytes(io.netty.handler.codec.http2.Http2Stream)>(v1);
return v3;
}
void onGoAwayRead0(io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2Connection v6;
io.netty.buffer.ByteBuf v4;
int v2;
long v3;
io.netty.handler.codec.http2.Http2FrameListener v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.buffer.ByteBuf;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v5.<io.netty.handler.codec.http2.Http2FrameListener: void onGoAwayRead(io.netty.channel.ChannelHandlerContext,int,long,io.netty.buffer.ByteBuf)>(v1, v2, v3, v4);
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: void goAwayReceived(int,long,io.netty.buffer.ByteBuf)>(v2, v3, v4);
return;
}
void onUnknownFrame0(io.netty.channel.ChannelHandlerContext, byte, int, io.netty.handler.codec.http2.Http2Flags, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.channel.ChannelHandlerContext v1;
byte v2;
io.netty.buffer.ByteBuf v5;
io.netty.handler.codec.http2.Http2Flags v4;
int v3;
io.netty.handler.codec.http2.Http2FrameListener v6;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: byte;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Flags;
v5 := @parameter4: io.netty.buffer.ByteBuf;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2FrameListener listener>;
interfaceinvoke v6.<io.netty.handler.codec.http2.Http2FrameListener: void onUnknownFrame(io.netty.channel.ChannelHandlerContext,byte,int,io.netty.handler.codec.http2.Http2Flags,io.netty.buffer.ByteBuf)>(v1, v2, v3, v4, v5);
return;
}
private void verifyContentLength(io.netty.handler.codec.http2.Http2Stream, int, boolean) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v10;
io.netty.handler.codec.http2.Http2Connection v6;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v11, v4, v9;
int v2, v8;
io.netty.handler.codec.http2.Http2Stream v1;
java.lang.Object v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder v0;
boolean v3, v7;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection$PropertyKey contentLengthKey>;
v5 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v4);
if v5 == null goto label5;
label1:
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection connection>;
v7 = interfaceinvoke v6.<io.netty.handler.codec.http2.Http2Connection: boolean isServer()>();
v8 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: int id()>();
virtualinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder$ContentLength: void increaseReceivedBytes(boolean,int,int,boolean)>(v7, v8, v2, v3);
label2:
if v3 == 0 goto label5;
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection$PropertyKey contentLengthKey>;
interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v9);
goto label5;
label3:
v10 := @caughtexception;
if v3 == 0 goto label4;
v11 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.handler.codec.http2.Http2Connection$PropertyKey contentLengthKey>;
interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v11);
label4:
throw v10;
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
static void <clinit>()
{
io.netty.util.internal.logging.InternalLogger v0;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http2/DefaultHttp2ConnectionDecoder;");
<io.netty.handler.codec.http2.DefaultHttp2ConnectionDecoder: io.netty.util.internal.logging.InternalLogger logger> = v0;
return;
}
}