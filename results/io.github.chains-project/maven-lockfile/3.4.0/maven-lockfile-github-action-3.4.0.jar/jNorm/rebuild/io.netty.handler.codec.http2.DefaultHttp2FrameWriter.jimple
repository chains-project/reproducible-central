public class io.netty.handler.codec.http2.DefaultHttp2FrameWriter extends java.lang.Object implements io.netty.handler.codec.http2.Http2FrameWriter, io.netty.handler.codec.http2.Http2FrameSizePolicy, io.netty.handler.codec.http2.Http2FrameWriter$Configuration
{
private static final java.lang.String STREAM_ID;
private static final java.lang.String STREAM_DEPENDENCY;
private static final io.netty.buffer.ByteBuf ZERO_BUFFER;
private final io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder;
private int maxFrameSize;
public void <init>()
{
io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder v1;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 = new io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder;
specialinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder: void <init>()>();
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder)>(v1);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector)
{
io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder v2;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector;
v2 = new io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder;
specialinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder: void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector)>(v1);
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder)>(v2);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector, boolean)
{
io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder v3;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector;
v2 := @parameter1: boolean;
v3 = new io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder;
specialinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2HeadersEncoder: void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder$SensitivityDetector,boolean)>(v1, v2);
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder)>(v3);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2HeadersEncoder)
{
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.handler.codec.http2.Http2HeadersEncoder v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.handler.codec.http2.Http2HeadersEncoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder> = v1;
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize> = 16384;
return;
}
public io.netty.handler.codec.http2.Http2FrameWriter$Configuration configuration()
{
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
return v0;
}
public io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration headersConfiguration()
{
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.handler.codec.http2.Http2HeadersEncoder v1;
io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2HeadersEncoder: io.netty.handler.codec.http2.Http2HeadersEncoder$Configuration configuration()>();
return v2;
}
public io.netty.handler.codec.http2.Http2FrameSizePolicy frameSizePolicy()
{
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
return v0;
}
public void maxFrameSize(int) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v4;
io.netty.handler.codec.http2.Http2Exception v6;
int v1;
io.netty.handler.codec.http2.Http2Error v3;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
java.lang.Integer v5;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: int;
v2 = staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: boolean isMaxFrameSizeValid(int)>(v1);
if v2 != 0 goto label1;
v3 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error FRAME_SIZE_ERROR>;
v4 = newarray (java.lang.Object)[1];
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v4[0] = v5;
v6 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v3, "Invalid MAX_FRAME_SIZE specified in sent settings: %d", v4);
throw v6;
label1:
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize> = v1;
return;
}
public int maxFrameSize()
{
int v1;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
return v1;
}
public void close()
{
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
return;
}
public io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, int, boolean, io.netty.channel.ChannelPromise)
{
io.netty.util.concurrent.EventExecutor v9;
java.lang.Throwable v61, v62;
io.netty.channel.Channel v8;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v7;
io.netty.buffer.ByteBufAllocator v14, v23, v30, v46;
io.netty.channel.ChannelPromise v17, v20, v25, v27, v33, v38, v51, v53, v55, v6, v60, v63;
boolean v48, v49, v5;
io.netty.handler.codec.http2.Http2Flags v12;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v10, v16, v19, v24, v26, v3, v31, v37, v47, v52, v54, v57, v59;
int v11, v13, v15, v18, v2, v21, v22, v28, v29, v32, v34, v35, v36, v39, v4, v40, v41, v42, v43, v44, v45, v50, v56, v58;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: io.netty.channel.ChannelPromise;
v7 = new io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v6, v8, v9);
v10 = null;
label01:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamId(int,java.lang.String)>(v2, "Stream ID");
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void verifyPadding(int)>(v4);
v11 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v12 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v12.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
virtualinvoke v12.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfStream(boolean)>(0);
virtualinvoke v12.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags paddingPresent(boolean)>(0);
v13 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
if v11 <= v13 goto label03;
v14 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v10 = interfaceinvoke v14.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(9);
v15 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v10, v15, 0, v12, v2);
label02:
v16 = virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retainedSlice()>();
v17 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v16, v17);
v18 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v19 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v18);
v20 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v19, v20);
v21 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v11 = v11 - v21;
v22 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
if v11 > v22 goto label02;
label03:
if v4 != 0 goto label05;
if v10 == null goto label04;
virtualinvoke v10.<io.netty.buffer.ByteBuf: boolean release()>();
v10 = null;
label04:
v23 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v24 = interfaceinvoke v23.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(9);
virtualinvoke v12.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfStream(boolean)>(v5);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v24, v11, 0, v12, v2);
v25 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v24, v25);
v26 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v11);
v3 = null;
v27 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v26, v27);
goto label25;
label05:
v28 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
if v11 == v28 goto label06;
if v10 == null goto label11;
virtualinvoke v10.<io.netty.buffer.ByteBuf: boolean release()>();
v10 = null;
goto label11;
label06:
v29 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v11 = v11 - v29;
if v10 != null goto label07;
v30 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v31 = interfaceinvoke v30.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(9);
v32 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v31, v32, 0, v12, v2);
goto label08;
label07:
v31 = virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice()>();
v10 = null;
label08:
v33 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v31, v33);
v34 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v35 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
if v34 == v35 goto label09;
v36 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v37 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v36);
goto label10;
label09:
v37 = v3;
label10:
v3 = null;
v38 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v37, v38);
label11:
v39 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v40 = staticinvoke <java.lang.Math: int min(int,int)>(v11, v39);
v41 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v42 = v41 - 1;
v43 = v42 - v40;
v44 = staticinvoke <java.lang.Math: int max(int,int)>(0, v43);
v45 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v44);
v4 = v4 - v45;
v11 = v11 - v40;
v46 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v47 = interfaceinvoke v46.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(10);
if v5 == 0 goto label12;
if v11 != 0 goto label12;
if v4 != 0 goto label12;
v48 = 1;
goto label13;
label12:
v48 = 0;
label13:
virtualinvoke v12.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfStream(boolean)>(v48);
if v45 <= 0 goto label14;
v49 = 1;
goto label15;
label14:
v49 = 0;
label15:
virtualinvoke v12.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags paddingPresent(boolean)>(v49);
v50 = v45 + v40;
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v47, v50, 0, v12, v2);
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void writePaddingLength(io.netty.buffer.ByteBuf,int)>(v47, v45);
v51 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v47, v51);
if v3 == null goto label17;
if v11 != 0 goto label16;
v52 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readSlice(int)>(v40);
v3 = null;
v53 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v52, v53);
goto label17;
label16:
v54 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v40);
v55 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v54, v55);
label17:
v56 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int paddingBytes(int)>(v45);
if v56 <= 0 goto label18;
v57 = <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.buffer.ByteBuf ZERO_BUFFER>;
v58 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int paddingBytes(int)>(v45);
v59 = virtualinvoke v57.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(0, v58);
v60 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v59, v60);
label18:
if v11 != 0 goto label11;
if v4 != 0 goto label11;
label19:
goto label25;
label20:
v61 := @caughtexception;
if v10 == null goto label21;
virtualinvoke v10.<io.netty.buffer.ByteBuf: boolean release()>();
label21:
if v3 == null goto label22;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
label22:
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v61);
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
goto label24;
label23:
v62 := @caughtexception;
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v61);
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
throw v62;
label24:
return v7;
label25:
v63 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
return v63;
catch java.lang.Throwable from label01 to label19 with label20;
catch java.lang.Throwable from label21 to label22 with label23;
}
public io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelFuture v7;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v6;
io.netty.handler.codec.http2.Http2Headers v3;
int v2, v4;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: io.netty.channel.ChannelPromise;
v7 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.channel.ChannelFuture writeHeadersInternal(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,boolean,int,short,boolean,io.netty.channel.ChannelPromise)>(v1, v2, v3, v4, v5, 0, 0, 0, 0, v6);
return v7;
}
public io.netty.channel.ChannelFuture writeHeaders(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, short, boolean, int, boolean, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelFuture v10;
io.netty.channel.ChannelHandlerContext v1;
short v5;
io.netty.channel.ChannelPromise v9;
io.netty.handler.codec.http2.Http2Headers v3;
int v2, v4, v7;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
boolean v6, v8;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: short;
v6 := @parameter5: boolean;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 := @parameter8: io.netty.channel.ChannelPromise;
v10 = specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.channel.ChannelFuture writeHeadersInternal(io.netty.channel.ChannelHandlerContext,int,io.netty.handler.codec.http2.Http2Headers,int,boolean,boolean,int,short,boolean,io.netty.channel.ChannelPromise)>(v1, v2, v3, v7, v8, 1, v4, v5, v6, v9);
return v10;
}
public io.netty.channel.ChannelFuture writePriority(io.netty.channel.ChannelHandlerContext, int, int, short, boolean, io.netty.channel.ChannelPromise)
{
java.lang.Throwable v13;
io.netty.handler.codec.http2.Http2Flags v9;
io.netty.buffer.ByteBufAllocator v7;
long v10;
io.netty.channel.ChannelFuture v12;
io.netty.channel.ChannelHandlerContext v1;
short v4;
io.netty.buffer.ByteBuf v8;
io.netty.channel.ChannelPromise v14, v6;
int v11, v2, v3;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: short;
v5 := @parameter4: boolean;
v6 := @parameter5: io.netty.channel.ChannelPromise;
label1:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamId(int,java.lang.String)>(v2, "Stream ID");
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamOrConnectionId(int,java.lang.String)>(v3, "Stream Dependency");
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyWeight(short)>(v4);
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v8 = interfaceinvoke v7.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(14);
v9 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v9.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v8, 5, 2, v9, v2);
if v5 == 0 goto label2;
v10 = 2147483648L | v3;
goto label3;
label2:
v10 = v3;
label3:
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v10);
v11 = v4 - 1;
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v11);
v12 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v8, v6);
label4:
return v12;
label5:
v13 := @caughtexception;
v14 = interfaceinvoke v6.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v13);
return v14;
catch java.lang.Throwable from label1 to label4 with label5;
}
public io.netty.channel.ChannelFuture writeRstStream(io.netty.channel.ChannelHandlerContext, int, long, io.netty.channel.ChannelPromise)
{
java.lang.Throwable v9;
io.netty.handler.codec.http2.Http2Flags v7;
io.netty.buffer.ByteBufAllocator v5;
long v3;
io.netty.channel.ChannelFuture v8;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v6;
io.netty.channel.ChannelPromise v10, v4;
int v2;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.channel.ChannelPromise;
label1:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamId(int,java.lang.String)>(v2, "Stream ID");
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyErrorCode(long)>(v3);
v5 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v6 = interfaceinvoke v5.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(13);
v7 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v7.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v6, 4, 3, v7, v2);
virtualinvoke v6.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v3);
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v6, v4);
label2:
return v8;
label3:
v9 := @caughtexception;
v10 = interfaceinvoke v4.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v9);
return v10;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.channel.ChannelFuture writeSettings(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2Settings, io.netty.channel.ChannelPromise)
{
java.lang.Throwable v18;
io.netty.buffer.ByteBufAllocator v6;
java.lang.Iterable v10;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v8;
io.netty.channel.ChannelPromise v19, v3;
int v16, v4, v5, v7;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
boolean v12;
io.netty.handler.codec.http2.Http2Flags v9;
java.util.Iterator v11;
char v14;
io.netty.channel.ChannelFuture v17;
io.netty.handler.codec.http2.Http2Settings v2;
java.lang.Object v13, v15;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Settings;
v3 := @parameter2: io.netty.channel.ChannelPromise;
label1:
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "settings");
v4 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Settings: int size()>();
v5 = 6 * v4;
v6 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v7 = 9 + v5;
v8 = interfaceinvoke v6.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(v7);
v9 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v9.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v8, v5, 4, v9, 0);
v10 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Settings: java.lang.Iterable entries()>();
v11 = interfaceinvoke v10.<java.lang.Iterable: java.util.Iterator iterator()>();
label2:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label3;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = interfaceinvoke v13.<io.netty.util.collection.CharObjectMap$PrimitiveEntry: char key()>();
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeChar(int)>(v14);
v15 = interfaceinvoke v13.<io.netty.util.collection.CharObjectMap$PrimitiveEntry: java.lang.Object value()>();
v16 = virtualinvoke v15.<java.lang.Long: int intValue()>();
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v16);
goto label2;
label3:
v17 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v8, v3);
label4:
return v17;
label5:
v18 := @caughtexception;
v19 = interfaceinvoke v3.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v18);
return v19;
catch java.lang.Throwable from label1 to label4 with label5;
}
public io.netty.channel.ChannelFuture writeSettingsAck(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
java.lang.Throwable v8;
io.netty.handler.codec.http2.Http2Flags v5, v6;
io.netty.buffer.ByteBufAllocator v3;
io.netty.channel.ChannelFuture v7;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v4;
io.netty.channel.ChannelPromise v2, v9;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
label1:
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v4 = interfaceinvoke v3.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(9);
v5 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v5.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags ack(boolean)>(1);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v4, 0, 4, v6, 0);
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v4, v2);
label2:
return v7;
label3:
v8 := @caughtexception;
v9 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v8);
return v9;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.channel.ChannelFuture writePing(io.netty.channel.ChannelHandlerContext, boolean, long, io.netty.channel.ChannelPromise)
{
io.netty.handler.codec.http2.Http2Flags v5, v6;
io.netty.buffer.ByteBufAllocator v7;
long v3;
io.netty.channel.ChannelFuture v9;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v8;
io.netty.channel.ChannelPromise v4;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: boolean;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.channel.ChannelPromise;
if v2 == 0 goto label1;
v5 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v5.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags ack(boolean)>(1);
goto label2;
label1:
v6 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v6.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
label2:
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v8 = interfaceinvoke v7.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(17);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v8, 8, 6, v6, 0);
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeLong(long)>(v3);
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v8, v4);
return v9;
}
public io.netty.channel.ChannelFuture writePushPromise(io.netty.channel.ChannelHandlerContext, int, int, io.netty.handler.codec.http2.Http2Headers, int, io.netty.channel.ChannelPromise)
{
io.netty.buffer.ByteBufAllocator v11, v26;
io.netty.channel.ChannelPromise v28, v29, v34, v39, v6;
io.netty.handler.codec.http2.Http2HeadersEncoder v12;
io.netty.handler.codec.http2.Http2Exception v36;
boolean v14, v22, v23, v35;
io.netty.handler.codec.http2.Http2Flags v13, v15;
io.netty.handler.codec.http2.Http2Headers v4;
io.netty.util.concurrent.EventExecutor v10;
java.lang.Throwable v37, v38;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v21, v27, v31, v33, v7;
int v16, v17, v18, v19, v2, v20, v24, v25, v3, v30, v32, v5;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.channel.Channel v9;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v8;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Headers;
v5 := @parameter4: int;
v6 := @parameter5: io.netty.channel.ChannelPromise;
v7 = null;
v8 = new io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v10 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v6, v9, v10);
label01:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamId(int,java.lang.String)>(v2, "Stream ID");
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamId(int,java.lang.String)>(v3, "Promised Stream ID");
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void verifyPadding(int)>(v5);
v11 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v7 = interfaceinvoke v11.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer()>();
v12 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder>;
interfaceinvoke v12.<io.netty.handler.codec.http2.Http2HeadersEncoder: void encodeHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBuf)>(v2, v4, v7);
v13 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v13.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
if v5 <= 0 goto label02;
v14 = 1;
goto label03;
label02:
v14 = 0;
label03:
v15 = virtualinvoke v13.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags paddingPresent(boolean)>(v14);
v16 = 4 + v5;
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v18 = v17 - v16;
v19 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int readableBytes()>();
v20 = staticinvoke <java.lang.Math: int min(int,int)>(v19, v18);
v21 = virtualinvoke v7.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v20);
v22 = virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v22 != 0 goto label04;
v23 = 1;
goto label05;
label04:
v23 = 0;
label05:
virtualinvoke v15.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfHeaders(boolean)>(v23);
v24 = virtualinvoke v21.<io.netty.buffer.ByteBuf: int readableBytes()>();
v25 = v24 + v16;
v26 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v27 = interfaceinvoke v26.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(14);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v27, v25, 5, v15, v2);
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void writePaddingLength(io.netty.buffer.ByteBuf,int)>(v27, v5);
virtualinvoke v27.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v3);
v28 = virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v27, v28);
v29 = virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v21, v29);
v30 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int paddingBytes(int)>(v5);
if v30 <= 0 goto label06;
v31 = <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.buffer.ByteBuf ZERO_BUFFER>;
v32 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int paddingBytes(int)>(v5);
v33 = virtualinvoke v31.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(0, v32);
v34 = virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v33, v34);
label06:
v35 = virtualinvoke v15.<io.netty.handler.codec.http2.Http2Flags: boolean endOfHeaders()>();
if v35 != 0 goto label07;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.channel.ChannelFuture writeContinuationFrames(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator)>(v1, v2, v7, v8);
label07:
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
goto label14;
label08:
v36 := @caughtexception;
virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v36);
label09:
if v7 == null goto label14;
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
goto label14;
label10:
v37 := @caughtexception;
virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v37);
virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v37);
label11:
if v7 == null goto label14;
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
goto label14;
label12:
v38 := @caughtexception;
if v7 == null goto label13;
virtualinvoke v7.<io.netty.buffer.ByteBuf: boolean release()>();
label13:
throw v38;
label14:
v39 = virtualinvoke v8.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
return v39;
catch io.netty.handler.codec.http2.Http2Exception from label01 to label07 with label08;
catch java.lang.Throwable from label01 to label07 with label10;
catch java.lang.Throwable from label08 to label09 with label12;
catch java.lang.Throwable from label10 to label11 with label12;
}
public io.netty.channel.ChannelFuture writeGoAway(io.netty.channel.ChannelHandlerContext, int, long, io.netty.buffer.ByteBuf, io.netty.channel.ChannelPromise)
{
io.netty.util.concurrent.EventExecutor v8;
java.lang.Throwable v15, v16, v18;
io.netty.buffer.ByteBufAllocator v11;
long v3;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v12, v4;
io.netty.channel.ChannelPromise v14, v17, v19, v5;
int v10, v2, v9;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.handler.codec.http2.Http2Flags v13;
io.netty.channel.Channel v7;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 := @parameter3: io.netty.buffer.ByteBuf;
v5 := @parameter4: io.netty.channel.ChannelPromise;
v6 = new io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v5, v7, v8);
label01:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamOrConnectionId(int,java.lang.String)>(v2, "Last Stream ID");
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyErrorCode(long)>(v3);
v9 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readableBytes()>();
v10 = 8 + v9;
v11 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v12 = interfaceinvoke v11.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(17);
v13 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v13.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v12, v10, 7, v13, 0);
virtualinvoke v12.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v2);
virtualinvoke v12.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v3);
v14 = virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v12, v14);
label02:
goto label08;
label03:
v15 := @caughtexception;
label04:
virtualinvoke v4.<io.netty.buffer.ByteBuf: boolean release()>();
label05:
virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v15);
virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
goto label07;
label06:
v16 := @caughtexception;
virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v15);
virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
throw v16;
label07:
return v6;
label08:
v17 = virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v4, v17);
label09:
goto label11;
label10:
v18 := @caughtexception;
virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v18);
label11:
v19 = virtualinvoke v6.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
return v19;
catch java.lang.Throwable from label01 to label02 with label03;
catch java.lang.Throwable from label04 to label05 with label06;
catch java.lang.Throwable from label08 to label09 with label10;
}
public io.netty.channel.ChannelFuture writeWindowUpdate(io.netty.channel.ChannelHandlerContext, int, int, io.netty.channel.ChannelPromise)
{
java.lang.Throwable v9;
io.netty.handler.codec.http2.Http2Flags v7;
io.netty.buffer.ByteBufAllocator v5;
io.netty.channel.ChannelFuture v8;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v6;
io.netty.channel.ChannelPromise v10, v4;
int v2, v3;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.channel.ChannelPromise;
label1:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamOrConnectionId(int,java.lang.String)>(v2, "Stream ID");
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyWindowSizeIncrement(int)>(v3);
v5 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v6 = interfaceinvoke v5.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(13);
v7 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v7.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v6, 4, 8, v7, v2);
virtualinvoke v6.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v3);
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v6, v4);
label2:
return v8;
label3:
v9 := @caughtexception;
v10 = interfaceinvoke v4.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v9);
return v10;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.channel.ChannelFuture writeFrame(io.netty.channel.ChannelHandlerContext, byte, int, io.netty.handler.codec.http2.Http2Flags, io.netty.buffer.ByteBuf, io.netty.channel.ChannelPromise)
{
io.netty.util.concurrent.EventExecutor v9;
java.lang.Throwable v14, v15, v17;
io.netty.buffer.ByteBufAllocator v10;
io.netty.channel.ChannelHandlerContext v1;
byte v2;
io.netty.buffer.ByteBuf v11, v5;
io.netty.channel.ChannelPromise v13, v16, v18, v6;
int v12, v3;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.handler.codec.http2.Http2Flags v4;
io.netty.channel.Channel v8;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v7;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: byte;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Flags;
v5 := @parameter4: io.netty.buffer.ByteBuf;
v6 := @parameter5: io.netty.channel.ChannelPromise;
v7 = new io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v6, v8, v9);
label01:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamOrConnectionId(int,java.lang.String)>(v3, "Stream ID");
v10 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v11 = interfaceinvoke v10.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(9);
v12 = virtualinvoke v5.<io.netty.buffer.ByteBuf: int readableBytes()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v11, v12, v2, v4, v3);
v13 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v11, v13);
label02:
goto label08;
label03:
v14 := @caughtexception;
label04:
virtualinvoke v5.<io.netty.buffer.ByteBuf: boolean release()>();
label05:
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v14);
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
goto label07;
label06:
v15 := @caughtexception;
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v14);
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
throw v15;
label07:
return v7;
label08:
v16 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v5, v16);
label09:
goto label11;
label10:
v17 := @caughtexception;
virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v17);
label11:
v18 = virtualinvoke v7.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
return v18;
catch java.lang.Throwable from label01 to label02 with label03;
catch java.lang.Throwable from label04 to label05 with label06;
catch java.lang.Throwable from label08 to label09 with label10;
}
private io.netty.channel.ChannelFuture writeHeadersInternal(io.netty.channel.ChannelHandlerContext, int, io.netty.handler.codec.http2.Http2Headers, int, boolean, boolean, int, short, boolean, io.netty.channel.ChannelPromise)
{
io.netty.buffer.ByteBufAllocator v15, v33;
io.netty.channel.ChannelPromise v10, v37, v38, v43, v48;
io.netty.handler.codec.http2.Http2HeadersEncoder v16;
io.netty.handler.codec.http2.Http2Exception v45;
boolean v20, v29, v30, v44, v5, v6, v9;
io.netty.handler.codec.http2.Http2Flags v17, v18, v19, v21;
io.netty.handler.codec.http2.Http2Headers v3;
io.netty.util.concurrent.EventExecutor v14;
java.lang.Throwable v46, v47;
long v35;
io.netty.channel.ChannelHandlerContext v1;
short v8;
io.netty.buffer.ByteBuf v11, v28, v34, v40, v42;
int v2, v22, v23, v24, v25, v26, v27, v31, v32, v36, v39, v4, v41, v7;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
io.netty.channel.Channel v13;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v12;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Headers;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: int;
v8 := @parameter7: short;
v9 := @parameter8: boolean;
v10 := @parameter9: io.netty.channel.ChannelPromise;
v11 = null;
v12 = new io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v13 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v14 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
specialinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void <init>(io.netty.channel.ChannelPromise,io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v10, v13, v14);
label01:
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamId(int,java.lang.String)>(v2, "Stream ID");
if v6 == 0 goto label02;
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyStreamOrConnectionId(int,java.lang.String)>(v7, "Stream Dependency");
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void verifyPadding(int)>(v4);
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void verifyWeight(short)>(v8);
label02:
v15 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v11 = interfaceinvoke v15.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer()>();
v16 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.handler.codec.http2.Http2HeadersEncoder headersEncoder>;
interfaceinvoke v16.<io.netty.handler.codec.http2.Http2HeadersEncoder: void encodeHeaders(int,io.netty.handler.codec.http2.Http2Headers,io.netty.buffer.ByteBuf)>(v2, v3, v11);
v17 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v17.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
v18 = virtualinvoke v17.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfStream(boolean)>(v5);
v19 = virtualinvoke v18.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags priorityPresent(boolean)>(v6);
if v4 <= 0 goto label03;
v20 = 1;
goto label04;
label03:
v20 = 0;
label04:
v21 = virtualinvoke v19.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags paddingPresent(boolean)>(v20);
v22 = virtualinvoke v21.<io.netty.handler.codec.http2.Http2Flags: int getNumPriorityBytes()>();
v23 = v4 + v22;
v24 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v25 = v24 - v23;
v26 = virtualinvoke v11.<io.netty.buffer.ByteBuf: int readableBytes()>();
v27 = staticinvoke <java.lang.Math: int min(int,int)>(v26, v25);
v28 = virtualinvoke v11.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v27);
v29 = virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v29 != 0 goto label05;
v30 = 1;
goto label06;
label05:
v30 = 0;
label06:
virtualinvoke v21.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfHeaders(boolean)>(v30);
v31 = virtualinvoke v28.<io.netty.buffer.ByteBuf: int readableBytes()>();
v32 = v31 + v23;
v33 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v34 = interfaceinvoke v33.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(15);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v34, v32, 1, v21, v2);
staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: void writePaddingLength(io.netty.buffer.ByteBuf,int)>(v34, v4);
if v6 == 0 goto label09;
if v9 == 0 goto label07;
v35 = 2147483648L | v7;
goto label08;
label07:
v35 = v7;
label08:
virtualinvoke v34.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v35);
v36 = v8 - 1;
virtualinvoke v34.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v36);
label09:
v37 = virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v34, v37);
v38 = virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v28, v38);
v39 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int paddingBytes(int)>(v4);
if v39 <= 0 goto label10;
v40 = <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.buffer.ByteBuf ZERO_BUFFER>;
v41 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int paddingBytes(int)>(v4);
v42 = virtualinvoke v40.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(0, v41);
v43 = virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v42, v43);
label10:
v44 = virtualinvoke v21.<io.netty.handler.codec.http2.Http2Flags: boolean endOfHeaders()>();
if v44 != 0 goto label11;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.channel.ChannelFuture writeContinuationFrames(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator)>(v1, v2, v11, v12);
label11:
virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean release()>();
goto label18;
label12:
v45 := @caughtexception;
virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v45);
label13:
if v11 == null goto label18;
virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean release()>();
goto label18;
label14:
v46 := @caughtexception;
virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v46);
virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v46);
label15:
if v11 == null goto label18;
virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean release()>();
goto label18;
label16:
v47 := @caughtexception;
if v11 == null goto label17;
virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean release()>();
label17:
throw v47;
label18:
v48 = virtualinvoke v12.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise doneAllocatingPromises()>();
return v48;
catch io.netty.handler.codec.http2.Http2Exception from label01 to label11 with label12;
catch java.lang.Throwable from label01 to label11 with label14;
catch java.lang.Throwable from label12 to label13 with label16;
catch java.lang.Throwable from label14 to label15 with label16;
}
private io.netty.channel.ChannelFuture writeContinuationFrames(io.netty.channel.ChannelHandlerContext, int, io.netty.buffer.ByteBuf, io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator)
{
io.netty.buffer.ByteBufAllocator v11, v20;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v12, v16, v18, v3;
io.netty.channel.ChannelPromise v19, v21, v22;
int v10, v13, v14, v15, v2, v8, v9;
io.netty.handler.codec.http2.DefaultHttp2FrameWriter v0;
boolean v17, v23, v7;
io.netty.handler.codec.http2.Http2Flags v5, v6;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameWriter;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v5 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v5.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
v6 = v5;
v7 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v7 == 0 goto label4;
v8 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v10 = staticinvoke <java.lang.Math: int min(int,int)>(v8, v9);
v11 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v12 = interfaceinvoke v11.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(10);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v12, v10, 9, v5, v2);
label1:
v13 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int readableBytes()>();
v14 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: int maxFrameSize>;
v15 = staticinvoke <java.lang.Math: int min(int,int)>(v13, v14);
v16 = virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v15);
v17 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v17 == 0 goto label2;
v18 = virtualinvoke v12.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
v19 = virtualinvoke v4.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v18, v19);
goto label3;
label2:
v6 = virtualinvoke v6.<io.netty.handler.codec.http2.Http2Flags: io.netty.handler.codec.http2.Http2Flags endOfHeaders(boolean)>(1);
virtualinvoke v12.<io.netty.buffer.ByteBuf: boolean release()>();
v20 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v12 = interfaceinvoke v20.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(10);
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeaderInternal(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v12, v15, 9, v6, v2);
v21 = virtualinvoke v4.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v12, v21);
label3:
v22 = virtualinvoke v4.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise newPromise()>();
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v16, v22);
v23 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v23 != 0 goto label1;
label4:
return v4;
}
private static int paddingBytes(int)
{
int v0, v1;
v0 := @parameter0: int;
v1 = v0 - 1;
return v1;
}
private static void writePaddingLength(io.netty.buffer.ByteBuf, int)
{
int v1, v2;
io.netty.buffer.ByteBuf v0;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
if v1 <= 0 goto label1;
v2 = v1 - 1;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v2);
label1:
return;
}
private static void verifyStreamId(int, java.lang.String)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v0, v1);
return;
}
private static void verifyStreamOrConnectionId(int, java.lang.String)
{
int v0;
java.lang.String v1;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v0, v1);
return;
}
private static void verifyWeight(short)
{
short v0;
java.lang.String v2;
java.lang.IllegalArgumentException v1;
v0 := @parameter0: short;
if v0 < 1 goto label1;
if v0 <= 256 goto label2;
label1:
v1 = new java.lang.IllegalArgumentException;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (short)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid weight: \u0001");
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v2);
throw v1;
label2:
return;
}
private static void verifyErrorCode(long)
{
byte v1, v2;
long v0;
java.lang.String v4;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: long;
v1 = v0 cmp 0L;
if v1 < 0 goto label1;
v2 = v0 cmp 4294967295L;
if v2 <= 0 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid errorCode: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label2:
return;
}
private static void verifyWindowSizeIncrement(int)
{
int v0;
v0 := @parameter0: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v0, "windowSizeIncrement");
return;
}
static void <clinit>()
{
io.netty.buffer.ByteBuf v0, v1, v2, v3;
v0 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf directBuffer(int)>(255);
v1 = virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeZero(int)>(255);
v2 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf unreleasableBuffer(io.netty.buffer.ByteBuf)>(v1);
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf asReadOnly()>();
<io.netty.handler.codec.http2.DefaultHttp2FrameWriter: io.netty.buffer.ByteBuf ZERO_BUFFER> = v3;
return;
}
}