public class io.netty.handler.codec.http2.Http2ServerUpgradeCodec extends java.lang.Object implements io.netty.handler.codec.http.HttpServerUpgradeHandler$UpgradeCodec
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final java.util.List REQUIRED_UPGRADE_HEADERS;
private static final io.netty.channel.ChannelHandler[] EMPTY_HANDLERS;
private final java.lang.String handlerName;
private final io.netty.handler.codec.http2.Http2ConnectionHandler connectionHandler;
private final io.netty.channel.ChannelHandler[] handlers;
private final io.netty.handler.codec.http2.Http2FrameReader frameReader;
private io.netty.handler.codec.http2.Http2Settings settings;
public void <init>(io.netty.handler.codec.http2.Http2ConnectionHandler)
{
io.netty.channel.ChannelHandler[] v2;
io.netty.handler.codec.http2.Http2ConnectionHandler v1;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.handler.codec.http2.Http2ConnectionHandler;
v2 = <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] EMPTY_HANDLERS>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: void <init>(java.lang.String,io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandler[])>(null, v1, v2);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2MultiplexCodec)
{
io.netty.handler.codec.http2.Http2MultiplexCodec v1;
io.netty.channel.ChannelHandler[] v2;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.handler.codec.http2.Http2MultiplexCodec;
v2 = <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] EMPTY_HANDLERS>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: void <init>(java.lang.String,io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandler[])>(null, v1, v2);
return;
}
public void <init>(java.lang.String, io.netty.handler.codec.http2.Http2ConnectionHandler)
{
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
java.lang.String v1;
io.netty.channel.ChannelHandler[] v3;
io.netty.handler.codec.http2.Http2ConnectionHandler v2;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionHandler;
v3 = <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] EMPTY_HANDLERS>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: void <init>(java.lang.String,io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandler[])>(v1, v2, v3);
return;
}
public void <init>(java.lang.String, io.netty.handler.codec.http2.Http2MultiplexCodec)
{
io.netty.handler.codec.http2.Http2MultiplexCodec v2;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
java.lang.String v1;
io.netty.channel.ChannelHandler[] v3;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.http2.Http2MultiplexCodec;
v3 = <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] EMPTY_HANDLERS>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: void <init>(java.lang.String,io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandler[])>(v1, v2, v3);
return;
}
public transient void <init>(io.netty.handler.codec.http2.Http2FrameCodec, io.netty.channel.ChannelHandler[])
{
io.netty.handler.codec.http2.Http2FrameCodec v1;
io.netty.channel.ChannelHandler[] v2;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.handler.codec.http2.Http2FrameCodec;
v2 := @parameter1: io.netty.channel.ChannelHandler[];
specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: void <init>(java.lang.String,io.netty.handler.codec.http2.Http2ConnectionHandler,io.netty.channel.ChannelHandler[])>(null, v1, v2);
return;
}
private transient void <init>(java.lang.String, io.netty.handler.codec.http2.Http2ConnectionHandler, io.netty.channel.ChannelHandler[])
{
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
java.lang.String v1;
io.netty.channel.ChannelHandler[] v3;
io.netty.handler.codec.http2.Http2ConnectionHandler v2;
io.netty.handler.codec.http2.DefaultHttp2FrameReader v4;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.http2.Http2ConnectionHandler;
v3 := @parameter2: io.netty.channel.ChannelHandler[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: java.lang.String handlerName> = v1;
v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2ConnectionHandler connectionHandler> = v2;
v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] handlers> = v3;
v4 = new io.netty.handler.codec.http2.DefaultHttp2FrameReader;
specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2FrameReader: void <init>()>();
v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2FrameReader frameReader> = v4;
return;
}
public java.util.Collection requiredUpgradeHeaders()
{
java.util.List v1;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 = <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: java.util.List REQUIRED_UPGRADE_HEADERS>;
return v1;
}
public boolean prepareUpgradeResponse(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpRequest, io.netty.handler.codec.http.HttpHeaders)
{
java.lang.Throwable v13;
io.netty.handler.codec.http.HttpHeaders v3, v4;
java.lang.CharSequence v5, v9;
java.lang.IllegalArgumentException v8;
io.netty.handler.codec.http.FullHttpRequest v2;
io.netty.handler.codec.http2.Http2Settings v12;
io.netty.channel.ChannelHandlerContext v1;
java.util.List v6;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
io.netty.util.internal.logging.InternalLogger v14;
int v7;
java.lang.Object v11;
java.lang.String v10;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.FullHttpRequest;
v3 := @parameter2: io.netty.handler.codec.http.HttpHeaders;
label1:
v4 = interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v5 = <io.netty.handler.codec.http2.Http2CodecUtil: java.lang.CharSequence HTTP_UPGRADE_SETTINGS_HEADER>;
v6 = virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.CharSequence)>(v5);
v7 = interfaceinvoke v6.<java.util.List: int size()>();
if v7 == 1 goto label2;
v8 = new java.lang.IllegalArgumentException;
v9 = <io.netty.handler.codec.http2.Http2CodecUtil: java.lang.CharSequence HTTP_UPGRADE_SETTINGS_HEADER>;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("There must be 1 and only 1 \u0001 header.");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v8;
label2:
v11 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(0);
v12 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2Settings decodeSettingsHeader(io.netty.channel.ChannelHandlerContext,java.lang.CharSequence)>(v1, v11);
v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2Settings settings> = v12;
label3:
return 1;
label4:
v13 := @caughtexception;
v14 = <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v14.<io.netty.util.internal.logging.InternalLogger: void info(java.lang.String,java.lang.Throwable)>("Error during upgrade to HTTP/2", v13);
return 0;
catch java.lang.Throwable from label1 to label3 with label4;
}
public void upgradeTo(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http.FullHttpRequest)
{
io.netty.channel.ChannelHandlerContext v1, v10;
io.netty.handler.codec.http2.Http2Exception v20;
int v13, v14;
java.lang.String v11, v4, v5;
io.netty.channel.ChannelPipeline v15, v3, v8;
io.netty.channel.ChannelHandler[] v12, v16, v7;
io.netty.handler.codec.http.FullHttpRequest v2;
io.netty.handler.codec.http2.Http2ConnectionHandler v18, v6, v9;
io.netty.handler.codec.http2.Http2Settings v19;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
io.netty.channel.ChannelHandler v17;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http.FullHttpRequest;
label1:
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v5 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: java.lang.String handlerName>;
v6 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2ConnectionHandler connectionHandler>;
interfaceinvoke v3.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v4, v5, v6);
v7 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] handlers>;
if v7 == null goto label3;
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v9 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2ConnectionHandler connectionHandler>;
v10 = interfaceinvoke v8.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandlerContext context(io.netty.channel.ChannelHandler)>(v9);
v11 = interfaceinvoke v10.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v12 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] handlers>;
v13 = lengthof v12;
v14 = v13 - 1;
label2:
if v14 < 0 goto label3;
v15 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v16 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] handlers>;
v17 = v16[v14];
interfaceinvoke v15.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v11, null, v17);
v14 = v14 - 1;
goto label2;
label3:
v18 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2ConnectionHandler connectionHandler>;
v19 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2Settings settings>;
virtualinvoke v18.<io.netty.handler.codec.http2.Http2ConnectionHandler: void onHttpServerUpgrade(io.netty.handler.codec.http2.Http2Settings)>(v19);
label4:
goto label6;
label5:
v20 := @caughtexception;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v20);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close()>();
label6:
return;
catch io.netty.handler.codec.http2.Http2Exception from label1 to label4 with label5;
}
private io.netty.handler.codec.http2.Http2Settings decodeSettingsHeader(io.netty.channel.ChannelHandlerContext, java.lang.CharSequence) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Throwable v11;
java.lang.CharSequence v2;
java.nio.CharBuffer v4;
io.netty.buffer.ByteBufAllocator v3;
io.netty.handler.codec.http2.Http2Settings v10;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v6, v8, v9;
java.nio.charset.Charset v5;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
io.netty.handler.codec.base64.Base64Dialect v7;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.CharSequence;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v4 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(v2);
v5 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v6 = staticinvoke <io.netty.buffer.ByteBufUtil: io.netty.buffer.ByteBuf encodeString(io.netty.buffer.ByteBufAllocator,java.nio.CharBuffer,java.nio.charset.Charset)>(v3, v4, v5);
label1:
v7 = <io.netty.handler.codec.base64.Base64Dialect: io.netty.handler.codec.base64.Base64Dialect URL_SAFE>;
v8 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf decode(io.netty.buffer.ByteBuf,io.netty.handler.codec.base64.Base64Dialect)>(v6, v7);
v9 = staticinvoke <io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.buffer.ByteBuf createSettingsFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)>(v1, v8);
v10 = specialinvoke v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2Settings decodeSettings(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)>(v1, v9);
label2:
virtualinvoke v6.<io.netty.buffer.ByteBuf: boolean release()>();
return v10;
label3:
v11 := @caughtexception;
virtualinvoke v6.<io.netty.buffer.ByteBuf: boolean release()>();
throw v11;
catch java.lang.Throwable from label1 to label2 with label3;
}
private io.netty.handler.codec.http2.Http2Settings decodeSettings(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.Http2Settings v3;
java.lang.Throwable v6;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http2.Http2FrameReader v4;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec v0;
io.netty.handler.codec.http2.Http2ServerUpgradeCodec$1 v5;
v0 := @this: io.netty.handler.codec.http2.Http2ServerUpgradeCodec;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
label1:
v3 = new io.netty.handler.codec.http2.Http2Settings;
specialinvoke v3.<io.netty.handler.codec.http2.Http2Settings: void <init>()>();
v4 = v0.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.handler.codec.http2.Http2FrameReader frameReader>;
v5 = new io.netty.handler.codec.http2.Http2ServerUpgradeCodec$1;
specialinvoke v5.<io.netty.handler.codec.http2.Http2ServerUpgradeCodec$1: void <init>(io.netty.handler.codec.http2.Http2ServerUpgradeCodec,io.netty.handler.codec.http2.Http2Settings)>(v0, v3);
interfaceinvoke v4.<io.netty.handler.codec.http2.Http2FrameReader: void readFrame(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,io.netty.handler.codec.http2.Http2FrameListener)>(v1, v2, v5);
label2:
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
return v3;
label3:
v6 := @caughtexception;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
throw v6;
catch java.lang.Throwable from label1 to label2 with label3;
}
private static io.netty.buffer.ByteBuf createSettingsFrame(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf)
{
io.netty.handler.codec.http2.Http2Flags v7;
io.netty.buffer.ByteBufAllocator v2;
io.netty.channel.ChannelHandlerContext v0;
io.netty.buffer.ByteBuf v1, v5;
int v3, v4, v6;
v0 := @parameter0: io.netty.channel.ChannelHandlerContext;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = interfaceinvoke v0.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v4 = 9 + v3;
v5 = interfaceinvoke v2.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(v4);
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = new io.netty.handler.codec.http2.Http2Flags;
specialinvoke v7.<io.netty.handler.codec.http2.Http2Flags: void <init>()>();
staticinvoke <io.netty.handler.codec.http2.Http2CodecUtil: void writeFrameHeader(io.netty.buffer.ByteBuf,int,byte,io.netty.handler.codec.http2.Http2Flags,int)>(v5, v6, 4, v7, 0);
virtualinvoke v5.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v1);
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
return v5;
}
static void <clinit>()
{
java.util.List v2;
java.lang.CharSequence v1;
io.netty.util.internal.logging.InternalLogger v0;
io.netty.channel.ChannelHandler[] v3;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/http2/Http2ServerUpgradeCodec;");
<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = <io.netty.handler.codec.http2.Http2CodecUtil: java.lang.CharSequence HTTP_UPGRADE_SETTINGS_HEADER>;
v2 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v1);
<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: java.util.List REQUIRED_UPGRADE_HEADERS> = v2;
v3 = newarray (io.netty.channel.ChannelHandler)[0];
<io.netty.handler.codec.http2.Http2ServerUpgradeCodec: io.netty.channel.ChannelHandler[] EMPTY_HANDLERS> = v3;
return;
}
}