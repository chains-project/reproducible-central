class io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1 extends java.lang.Object implements java.lang.Runnable
{
final io.netty.channel.ChannelHandlerContext val$finalCtx;
final io.netty.util.concurrent.Promise val$promise;
final io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0;
void <init>(io.netty.handler.codec.http2.Http2StreamChannelBootstrap, io.netty.channel.ChannelHandlerContext, io.netty.util.concurrent.Promise)
{
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1 v0;
io.netty.handler.codec.http2.Http2StreamChannelBootstrap v1;
io.netty.util.concurrent.Promise v3;
v0 := @this: io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1;
v1 := @parameter0: io.netty.handler.codec.http2.Http2StreamChannelBootstrap;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v3 := @parameter2: io.netty.util.concurrent.Promise;
v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0> = v1;
v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.channel.ChannelHandlerContext val$finalCtx> = v2;
v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.util.concurrent.Promise val$promise> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1 v0;
io.netty.util.concurrent.Promise v6, v7;
java.nio.channels.ClosedChannelException v8;
io.netty.channel.Channel v2;
io.netty.channel.ChannelHandlerContext v5;
io.netty.handler.codec.http2.Http2StreamChannelBootstrap v1, v4;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1;
v1 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0>;
v2 = v1.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap: io.netty.channel.Channel channel>;
v3 = interfaceinvoke v2.<io.netty.channel.Channel: boolean isActive()>();
if v3 == 0 goto label1;
v4 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.handler.codec.http2.Http2StreamChannelBootstrap this$0>;
v5 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.channel.ChannelHandlerContext val$finalCtx>;
v6 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.util.concurrent.Promise val$promise>;
virtualinvoke v4.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap: void open0(io.netty.channel.ChannelHandlerContext,io.netty.util.concurrent.Promise)>(v5, v6);
goto label2;
label1:
v7 = v0.<io.netty.handler.codec.http2.Http2StreamChannelBootstrap$1: io.netty.util.concurrent.Promise val$promise>;
v8 = new java.nio.channels.ClosedChannelException;
specialinvoke v8.<java.nio.channels.ClosedChannelException: void <init>()>();
interfaceinvoke v7.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v8);
label2:
return;
}
}