class io.netty.handler.codec.serialization.CachingClassResolver extends java.lang.Object implements io.netty.handler.codec.serialization.ClassResolver
{
private final java.util.Map classCache;
private final io.netty.handler.codec.serialization.ClassResolver delegate;
void <init>(io.netty.handler.codec.serialization.ClassResolver, java.util.Map)
{
io.netty.handler.codec.serialization.CachingClassResolver v0;
io.netty.handler.codec.serialization.ClassResolver v1;
java.util.Map v2;
v0 := @this: io.netty.handler.codec.serialization.CachingClassResolver;
v1 := @parameter0: io.netty.handler.codec.serialization.ClassResolver;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.serialization.CachingClassResolver: io.netty.handler.codec.serialization.ClassResolver delegate> = v1;
v0.<io.netty.handler.codec.serialization.CachingClassResolver: java.util.Map classCache> = v2;
return;
}
public java.lang.Class resolve(java.lang.String) throws java.lang.ClassNotFoundException
{
java.util.Map v2, v6;
io.netty.handler.codec.serialization.CachingClassResolver v0;
java.lang.Class v5;
java.lang.Object v3;
io.netty.handler.codec.serialization.ClassResolver v4;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.serialization.CachingClassResolver;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.handler.codec.serialization.CachingClassResolver: java.util.Map classCache>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
return v3;
label1:
v4 = v0.<io.netty.handler.codec.serialization.CachingClassResolver: io.netty.handler.codec.serialization.ClassResolver delegate>;
v5 = interfaceinvoke v4.<io.netty.handler.codec.serialization.ClassResolver: java.lang.Class resolve(java.lang.String)>(v1);
v6 = v0.<io.netty.handler.codec.serialization.CachingClassResolver: java.util.Map classCache>;
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v5);
return v5;
}
}