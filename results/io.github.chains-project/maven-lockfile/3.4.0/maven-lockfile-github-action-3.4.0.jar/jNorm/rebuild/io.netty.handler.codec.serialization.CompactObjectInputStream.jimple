class io.netty.handler.codec.serialization.CompactObjectInputStream extends java.io.ObjectInputStream
{
private final io.netty.handler.codec.serialization.ClassResolver classResolver;
void <init>(java.io.InputStream, io.netty.handler.codec.serialization.ClassResolver) throws java.io.IOException
{
io.netty.handler.codec.serialization.CompactObjectInputStream v0;
io.netty.handler.codec.serialization.ClassResolver v2;
java.io.InputStream v1;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectInputStream;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: io.netty.handler.codec.serialization.ClassResolver;
specialinvoke v0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(v1);
v0.<io.netty.handler.codec.serialization.CompactObjectInputStream: io.netty.handler.codec.serialization.ClassResolver classResolver> = v2;
return;
}
protected void readStreamHeader() throws java.io.IOException
{
io.netty.handler.codec.serialization.CompactObjectInputStream v0;
short v2;
java.io.StreamCorruptedException v3;
byte v1;
java.lang.String v4;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectInputStream;
v1 = virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectInputStream: byte readByte()>();
v2 = v1 & 255;
if v2 == 5 goto label1;
v3 = new java.io.StreamCorruptedException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (short)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unsupported version: \u0001");
specialinvoke v3.<java.io.StreamCorruptedException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
return;
}
protected java.io.ObjectStreamClass readClassDescriptor() throws java.io.IOException, java.lang.ClassNotFoundException
{
java.io.StreamCorruptedException v8;
java.io.ObjectStreamClass v3, v7;
java.io.EOFException v2;
io.netty.handler.codec.serialization.CompactObjectInputStream v0;
int v1;
java.lang.Class v6;
io.netty.handler.codec.serialization.ClassResolver v5;
java.lang.String v4, v9;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectInputStream;
v1 = virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectInputStream: int read()>();
if v1 >= 0 goto label1;
v2 = new java.io.EOFException;
specialinvoke v2.<java.io.EOFException: void <init>()>();
throw v2;
label1:
lookupswitch(v1)
{
case 0: goto label2;
case 1: goto label3;
default: goto label4;
};
label2:
v3 = specialinvoke v0.<java.io.ObjectInputStream: java.io.ObjectStreamClass readClassDescriptor()>();
return v3;
label3:
v4 = virtualinvoke v0.<io.netty.handler.codec.serialization.CompactObjectInputStream: java.lang.String readUTF()>();
v5 = v0.<io.netty.handler.codec.serialization.CompactObjectInputStream: io.netty.handler.codec.serialization.ClassResolver classResolver>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.serialization.ClassResolver: java.lang.Class resolve(java.lang.String)>(v4);
v7 = staticinvoke <java.io.ObjectStreamClass: java.io.ObjectStreamClass lookupAny(java.lang.Class)>(v6);
return v7;
label4:
v8 = new java.io.StreamCorruptedException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected class descriptor type: \u0001");
specialinvoke v8.<java.io.StreamCorruptedException: void <init>(java.lang.String)>(v9);
throw v8;
}
protected java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
{
io.netty.handler.codec.serialization.CompactObjectInputStream v0;
java.io.ObjectStreamClass v1;
java.lang.Class v4;
java.lang.ClassNotFoundException v5;
io.netty.handler.codec.serialization.ClassResolver v2;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.serialization.CompactObjectInputStream;
v1 := @parameter0: java.io.ObjectStreamClass;
label1:
v2 = v0.<io.netty.handler.codec.serialization.CompactObjectInputStream: io.netty.handler.codec.serialization.ClassResolver classResolver>;
v3 = virtualinvoke v1.<java.io.ObjectStreamClass: java.lang.String getName()>();
v4 = interfaceinvoke v2.<io.netty.handler.codec.serialization.ClassResolver: java.lang.Class resolve(java.lang.String)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
v4 = specialinvoke v0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>(v1);
label4:
return v4;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
}