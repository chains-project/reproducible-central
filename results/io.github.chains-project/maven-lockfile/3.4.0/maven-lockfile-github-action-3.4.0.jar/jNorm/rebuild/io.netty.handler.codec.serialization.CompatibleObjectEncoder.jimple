public class io.netty.handler.codec.serialization.CompatibleObjectEncoder extends io.netty.handler.codec.MessageToByteEncoder
{
private final int resetInterval;
private int writtenObjects;
public void <init>()
{
io.netty.handler.codec.serialization.CompatibleObjectEncoder v0;
v0 := @this: io.netty.handler.codec.serialization.CompatibleObjectEncoder;
specialinvoke v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: void <init>(int)>(16);
return;
}
public void <init>(int)
{
int v1, v2;
io.netty.handler.codec.serialization.CompatibleObjectEncoder v0;
v0 := @this: io.netty.handler.codec.serialization.CompatibleObjectEncoder;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "resetInterval");
v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: int resetInterval> = v2;
return;
}
protected java.io.ObjectOutputStream newObjectOutputStream(java.io.OutputStream) throws java.lang.Exception
{
java.io.OutputStream v1;
java.io.ObjectOutputStream v2;
io.netty.handler.codec.serialization.CompatibleObjectEncoder v0;
v0 := @this: io.netty.handler.codec.serialization.CompatibleObjectEncoder;
v1 := @parameter0: java.io.OutputStream;
v2 = new java.io.ObjectOutputStream;
specialinvoke v2.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(v1);
return v2;
}
protected void encode(io.netty.channel.ChannelHandlerContext, java.io.Serializable, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
java.lang.Throwable v12;
io.netty.buffer.ByteBufOutputStream v4;
java.io.Serializable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v3;
int v10, v11, v6, v7, v8, v9;
java.io.ObjectOutputStream v5;
io.netty.handler.codec.serialization.CompatibleObjectEncoder v0;
v0 := @this: io.netty.handler.codec.serialization.CompatibleObjectEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.io.Serializable;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = new io.netty.buffer.ByteBufOutputStream;
specialinvoke v4.<io.netty.buffer.ByteBufOutputStream: void <init>(io.netty.buffer.ByteBuf)>(v3);
v5 = virtualinvoke v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: java.io.ObjectOutputStream newObjectOutputStream(java.io.OutputStream)>(v4);
label1:
v6 = v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: int resetInterval>;
if v6 == 0 goto label2;
v7 = v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: int writtenObjects>;
v8 = v7 + 1;
v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: int writtenObjects> = v8;
v9 = v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: int writtenObjects>;
v10 = v0.<io.netty.handler.codec.serialization.CompatibleObjectEncoder: int resetInterval>;
v11 = v9 % v10;
if v11 != 0 goto label2;
virtualinvoke v5.<java.io.ObjectOutputStream: void reset()>();
label2:
virtualinvoke v5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(v2);
virtualinvoke v5.<java.io.ObjectOutputStream: void flush()>();
label3:
virtualinvoke v5.<java.io.ObjectOutputStream: void close()>();
goto label5;
label4:
v12 := @caughtexception;
virtualinvoke v5.<java.io.ObjectOutputStream: void close()>();
throw v12;
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
}