public final class io.netty.handler.codec.socks.SocksCmdRequest extends io.netty.handler.codec.socks.SocksRequest
{
private final io.netty.handler.codec.socks.SocksCmdType cmdType;
private final io.netty.handler.codec.socks.SocksAddressType addressType;
private final java.lang.String host;
private final int port;
public void <init>(io.netty.handler.codec.socks.SocksCmdType, io.netty.handler.codec.socks.SocksAddressType, java.lang.String, int)
{
io.netty.handler.codec.socks.SocksCmdType v1;
int[] v6;
int v13, v4, v7, v8;
java.lang.String v11, v12, v15, v18, v20, v3;
boolean v16, v9;
io.netty.handler.codec.socks.SocksAddressType v2;
java.lang.IllegalArgumentException v10, v14, v17, v19;
io.netty.handler.codec.socks.SocksRequestType v5;
io.netty.handler.codec.socks.SocksCmdRequest v0;
v0 := @this: io.netty.handler.codec.socks.SocksCmdRequest;
v1 := @parameter0: io.netty.handler.codec.socks.SocksCmdType;
v2 := @parameter1: io.netty.handler.codec.socks.SocksAddressType;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: int;
v5 = <io.netty.handler.codec.socks.SocksRequestType: io.netty.handler.codec.socks.SocksRequestType CMD>;
specialinvoke v0.<io.netty.handler.codec.socks.SocksRequest: void <init>(io.netty.handler.codec.socks.SocksRequestType)>(v5);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "cmdType");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "addressType");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "host");
v6 = <io.netty.handler.codec.socks.SocksCmdRequest$1: int[] $SwitchMap$io$netty$handler$codec$socks$SocksAddressType>;
v7 = virtualinvoke v2.<io.netty.handler.codec.socks.SocksAddressType: int ordinal()>();
v8 = v6[v7];
tableswitch(v8)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label4;
case 4: goto label5;
default: goto label5;
};
label1:
v9 = staticinvoke <io.netty.util.NetUtil: boolean isValidIpV4Address(java.lang.String)>(v3);
if v9 != 0 goto label5;
v10 = new java.lang.IllegalArgumentException;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid IPv4 address");
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v10;
label2:
v12 = staticinvoke <java.net.IDN: java.lang.String toASCII(java.lang.String)>(v3);
v13 = virtualinvoke v12.<java.lang.String: int length()>();
if v13 <= 255 goto label3;
v14 = new java.lang.IllegalArgumentException;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v3, v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 IDN: \u0001 exceeds 255 char limit");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v14;
label3:
v3 = v12;
goto label5;
label4:
v16 = staticinvoke <io.netty.util.NetUtil: boolean isValidIpV6Address(java.lang.String)>(v3);
if v16 != 0 goto label5;
v17 = new java.lang.IllegalArgumentException;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a valid IPv6 address");
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v18);
throw v17;
label5:
if v4 <= 0 goto label6;
if v4 < 65536 goto label7;
label6:
v19 = new java.lang.IllegalArgumentException;
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not in bounds 0 < x < 65536");
specialinvoke v19.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v20);
throw v19;
label7:
v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksCmdType cmdType> = v1;
v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksAddressType addressType> = v2;
v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host> = v3;
v0.<io.netty.handler.codec.socks.SocksCmdRequest: int port> = v4;
return;
}
public io.netty.handler.codec.socks.SocksCmdType cmdType()
{
io.netty.handler.codec.socks.SocksCmdType v1;
io.netty.handler.codec.socks.SocksCmdRequest v0;
v0 := @this: io.netty.handler.codec.socks.SocksCmdRequest;
v1 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksCmdType cmdType>;
return v1;
}
public io.netty.handler.codec.socks.SocksAddressType addressType()
{
io.netty.handler.codec.socks.SocksAddressType v1;
io.netty.handler.codec.socks.SocksCmdRequest v0;
v0 := @this: io.netty.handler.codec.socks.SocksCmdRequest;
v1 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksAddressType addressType>;
return v1;
}
public java.lang.String host()
{
io.netty.handler.codec.socks.SocksAddressType v1, v2;
java.lang.String v3, v4;
io.netty.handler.codec.socks.SocksCmdRequest v0;
v0 := @this: io.netty.handler.codec.socks.SocksCmdRequest;
v1 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksAddressType addressType>;
v2 = <io.netty.handler.codec.socks.SocksAddressType: io.netty.handler.codec.socks.SocksAddressType DOMAIN>;
if v1 != v2 goto label1;
v3 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host>;
v4 = staticinvoke <java.net.IDN: java.lang.String toUnicode(java.lang.String)>(v3);
goto label2;
label1:
v4 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host>;
label2:
return v4;
}
public int port()
{
int v1;
io.netty.handler.codec.socks.SocksCmdRequest v0;
v0 := @this: io.netty.handler.codec.socks.SocksCmdRequest;
v1 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: int port>;
return v1;
}
public void encodeAsByteBuf(io.netty.buffer.ByteBuf)
{
byte[] v13, v21;
io.netty.handler.codec.socks.SocksCmdType v4;
byte v3, v5, v7;
io.netty.buffer.ByteBuf v1;
java.nio.charset.Charset v18;
int[] v8;
int v10, v11, v14, v16, v19, v22;
java.lang.String v12, v15, v17, v20;
io.netty.handler.codec.socks.SocksProtocolVersion v2;
io.netty.handler.codec.socks.SocksAddressType v6, v9;
io.netty.handler.codec.socks.SocksCmdRequest v0;
v0 := @this: io.netty.handler.codec.socks.SocksCmdRequest;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksProtocolVersion protocolVersion()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.socks.SocksProtocolVersion: byte byteValue()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v3);
v4 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksCmdType cmdType>;
v5 = virtualinvoke v4.<io.netty.handler.codec.socks.SocksCmdType: byte byteValue()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v5);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(0);
v6 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksAddressType addressType>;
v7 = virtualinvoke v6.<io.netty.handler.codec.socks.SocksAddressType: byte byteValue()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v7);
v8 = <io.netty.handler.codec.socks.SocksCmdRequest$1: int[] $SwitchMap$io$netty$handler$codec$socks$SocksAddressType>;
v9 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: io.netty.handler.codec.socks.SocksAddressType addressType>;
v10 = virtualinvoke v9.<io.netty.handler.codec.socks.SocksAddressType: int ordinal()>();
v11 = v8[v10];
tableswitch(v11)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
v12 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host>;
v13 = staticinvoke <io.netty.util.NetUtil: byte[] createByteArrayFromIpAddressString(java.lang.String)>(v12);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v13);
v14 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: int port>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v14);
goto label4;
label2:
v15 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host>;
v16 = virtualinvoke v15.<java.lang.String: int length()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v16);
v17 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host>;
v18 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset)>(v17, v18);
v19 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: int port>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v19);
goto label4;
label3:
v20 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: java.lang.String host>;
v21 = staticinvoke <io.netty.util.NetUtil: byte[] createByteArrayFromIpAddressString(java.lang.String)>(v20);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v21);
v22 = v0.<io.netty.handler.codec.socks.SocksCmdRequest: int port>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v22);
label4:
return;
}
}