public class io.netty.handler.codec.socksx.v4.Socks4ClientDecoder extends io.netty.handler.codec.ReplayingDecoder
{
public void <init>()
{
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State v1;
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder v0;
v0 := @this: io.netty.handler.codec.socksx.v4.Socks4ClientDecoder;
v1 = <io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State START>;
specialinvoke v0.<io.netty.handler.codec.ReplayingDecoder: void <init>(java.lang.Object)>(v1);
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: void setSingleDecode(boolean)>(1);
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
short v8;
byte v11;
io.netty.buffer.ByteBuf v19, v2;
int[] v4;
int v13, v14, v18, v20, v6, v7;
java.lang.String v10, v15;
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State v17;
io.netty.handler.codec.DecoderException v9;
io.netty.handler.codec.socksx.v4.Socks4CommandStatus v12;
java.lang.Exception v21;
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder v0;
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse v16;
java.util.List v3;
java.lang.Object v5;
v0 := @this: io.netty.handler.codec.socksx.v4.Socks4ClientDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
label1:
v4 = <io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$1: int[] $SwitchMap$io$netty$handler$codec$socksx$v4$Socks4ClientDecoder$State>;
v5 = virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: java.lang.Object state()>();
v6 = virtualinvoke v5.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State: int ordinal()>();
v7 = v4[v6];
tableswitch(v7)
{
case 1: goto label2;
case 2: goto label4;
case 3: goto label5;
default: goto label8;
};
label2:
v8 = virtualinvoke v2.<io.netty.buffer.ByteBuf: short readUnsignedByte()>();
if v8 == 0 goto label3;
v9 = new io.netty.handler.codec.DecoderException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (short)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported reply version: \u0001 (expected: 0)");
specialinvoke v9.<io.netty.handler.codec.DecoderException: void <init>(java.lang.String)>(v10);
throw v9;
label3:
v11 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte readByte()>();
v12 = staticinvoke <io.netty.handler.codec.socksx.v4.Socks4CommandStatus: io.netty.handler.codec.socksx.v4.Socks4CommandStatus valueOf(byte)>(v11);
v13 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readUnsignedShort()>();
v14 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readInt()>();
v15 = staticinvoke <io.netty.util.NetUtil: java.lang.String intToIpAddress(int)>(v14);
v16 = new io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse;
specialinvoke v16.<io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse: void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandStatus,java.lang.String,int)>(v12, v15, v13);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v16);
v17 = <io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State SUCCESS>;
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: void checkpoint(java.lang.Object)>(v17);
label4:
v18 = virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: int actualReadableBytes()>();
if v18 <= 0 goto label8;
v19 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v18);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v19);
goto label8;
label5:
v20 = virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: int actualReadableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v20);
label6:
goto label8;
label7:
v21 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: void fail(java.util.List,java.lang.Exception)>(v3, v21);
label8:
return;
catch java.lang.Exception from label1 to label6 with label7;
}
private void fail(java.util.List, java.lang.Exception)
{
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State v8;
io.netty.handler.codec.DecoderException v4;
io.netty.handler.codec.socksx.v4.Socks4CommandStatus v6;
java.lang.Exception v2;
io.netty.handler.codec.socksx.v4.Socks4ClientDecoder v0;
io.netty.handler.codec.DecoderResult v7;
io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse v5;
java.util.List v1;
boolean v3;
v0 := @this: io.netty.handler.codec.socksx.v4.Socks4ClientDecoder;
v1 := @parameter0: java.util.List;
v2 := @parameter1: java.lang.Exception;
v3 = v2 instanceof io.netty.handler.codec.DecoderException;
if v3 != 0 goto label1;
v4 = new io.netty.handler.codec.DecoderException;
specialinvoke v4.<io.netty.handler.codec.DecoderException: void <init>(java.lang.Throwable)>(v2);
v2 = v4;
label1:
v5 = new io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse;
v6 = <io.netty.handler.codec.socksx.v4.Socks4CommandStatus: io.netty.handler.codec.socksx.v4.Socks4CommandStatus REJECTED_OR_FAILED>;
specialinvoke v5.<io.netty.handler.codec.socksx.v4.DefaultSocks4CommandResponse: void <init>(io.netty.handler.codec.socksx.v4.Socks4CommandStatus)>(v6);
v7 = staticinvoke <io.netty.handler.codec.DecoderResult: io.netty.handler.codec.DecoderResult failure(java.lang.Throwable)>(v2);
interfaceinvoke v5.<io.netty.handler.codec.socksx.v4.Socks4CommandResponse: void setDecoderResult(io.netty.handler.codec.DecoderResult)>(v7);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
v8 = <io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State: io.netty.handler.codec.socksx.v4.Socks4ClientDecoder$State FAILURE>;
virtualinvoke v0.<io.netty.handler.codec.socksx.v4.Socks4ClientDecoder: void checkpoint(java.lang.Object)>(v8);
return;
}
}