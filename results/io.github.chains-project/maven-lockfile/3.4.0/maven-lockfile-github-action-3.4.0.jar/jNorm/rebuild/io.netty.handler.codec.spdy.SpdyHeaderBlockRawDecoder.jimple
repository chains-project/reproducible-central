public class io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder extends io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder
{
private static final int LENGTH_FIELD_SIZE;
private final int maxHeaderSize;
private io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state;
private io.netty.buffer.ByteBuf cumulation;
private int headerSize;
private int numHeaders;
private int length;
private java.lang.String name;
public void <init>(io.netty.handler.codec.spdy.SpdyVersion, int)
{
io.netty.handler.codec.spdy.SpdyVersion v1;
int v2;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State v3;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockDecoder: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "spdyVersion");
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize> = v2;
v3 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v3;
return;
}
private static int readLengthField(io.netty.buffer.ByteBuf)
{
int v1, v2;
io.netty.buffer.ByteBuf v0;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v2 = staticinvoke <io.netty.handler.codec.spdy.SpdyCodecUtil: int getSignedInt(io.netty.buffer.ByteBuf,int)>(v0, v1);
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(4);
return v2;
}
void decode(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, io.netty.handler.codec.spdy.SpdyHeadersFrame) throws java.lang.Exception
{
io.netty.handler.codec.spdy.SpdyHeadersFrame v3;
io.netty.buffer.ByteBufAllocator v1;
io.netty.buffer.ByteBuf v10, v11, v13, v2, v4, v7, v8, v9;
int v6;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder v0;
boolean v12, v5;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.handler.codec.spdy.SpdyHeadersFrame;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "headerBlock");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "frame");
v4 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
if v4 != null goto label1;
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void decodeHeaderBlock(io.netty.buffer.ByteBuf,io.netty.handler.codec.spdy.SpdyHeadersFrame)>(v2, v3);
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v5 == 0 goto label3;
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(v6);
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation> = v7;
v8 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v2);
goto label3;
label1:
v9 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
virtualinvoke v9.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v2);
v10 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
virtualinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void decodeHeaderBlock(io.netty.buffer.ByteBuf,io.netty.handler.codec.spdy.SpdyHeadersFrame)>(v10, v3);
v11 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
v12 = virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v12 == 0 goto label2;
v13 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
virtualinvoke v13.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf discardReadBytes()>();
goto label3;
label2:
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void releaseBuffer()>();
label3:
return;
}
protected void decodeHeaderBlock(io.netty.buffer.ByteBuf, io.netty.handler.codec.spdy.SpdyHeadersFrame) throws java.lang.Exception
{
byte[] v35, v77;
io.netty.handler.codec.spdy.SpdyHeadersFrame v2;
byte v80, v84, v89;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State v101, v102, v11, v111, v112, v113, v13, v14, v18, v27, v31, v40, v41, v48, v5, v52, v59, v60, v69, v73, v81, v90, v96, v97, v98;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder v0;
java.lang.Error v115;
java.lang.String v36, v38, v56, v91, v94;
int[] v4;
boolean v3, v39, v54;
io.netty.buffer.ByteBuf v1;
int v10, v100, v103, v104, v105, v106, v107, v108, v109, v110, v114, v12, v15, v16, v17, v19, v20, v21, v22, v23, v24, v25, v26, v28, v29, v30, v32, v33, v34, v42, v43, v44, v45, v46, v47, v49, v50, v51, v53, v57, v58, v6, v61, v62, v63, v64, v65, v66, v67, v68, v7, v70, v71, v72, v74, v75, v76, v78, v79, v8, v82, v83, v85, v86, v87, v88, v9, v92, v99;
java.lang.IllegalArgumentException v95;
io.netty.handler.codec.spdy.SpdyHeaders v37, v55, v93;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: io.netty.handler.codec.spdy.SpdyHeadersFrame;
label01:
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v3 == 0 goto label41;
v4 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$1: int[] $SwitchMap$io$netty$handler$codec$spdy$SpdyHeaderBlockRawDecoder$State>;
v5 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state>;
v6 = virtualinvoke v5.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: int ordinal()>();
v7 = v4[v6];
tableswitch(v7)
{
case 1: goto label02;
case 2: goto label06;
case 3: goto label11;
case 4: goto label14;
case 5: goto label15;
case 6: goto label23;
case 7: goto label36;
case 8: goto label38;
case 9: goto label39;
default: goto label40;
};
label02:
v8 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v8 >= 4 goto label03;
return;
label03:
v9 = staticinvoke <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int readLengthField(io.netty.buffer.ByteBuf)>(v1);
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders> = v9;
v10 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders>;
if v10 >= 0 goto label04;
v11 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v11;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label01;
label04:
v12 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders>;
if v12 != 0 goto label05;
v13 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v13;
goto label01;
label05:
v14 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v14;
goto label01;
label06:
v15 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v15 >= 4 goto label07;
return;
label07:
v16 = staticinvoke <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int readLengthField(io.netty.buffer.ByteBuf)>(v1);
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length> = v16;
v17 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v17 > 0 goto label08;
v18 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v18;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label01;
label08:
v19 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v20 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize>;
if v19 > v20 goto label09;
v21 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize>;
v22 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize>;
v23 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v24 = v22 - v23;
if v21 <= v24 goto label10;
label09:
v25 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize>;
v26 = v25 + 1;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize> = v26;
v27 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_NAME>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v27;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setTruncated()>();
goto label01;
label10:
v28 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize>;
v29 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v30 = v28 + v29;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize> = v30;
v31 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v31;
goto label01;
label11:
v32 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v33 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v32 >= v33 goto label12;
return;
label12:
v34 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v35 = newarray (byte)[v34];
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readBytes(byte[])>(v35);
v36 = new java.lang.String;
specialinvoke v36.<java.lang.String: void <init>(byte[],java.lang.String)>(v35, "UTF-8");
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name> = v36;
v37 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v38 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name>;
v39 = interfaceinvoke v37.<io.netty.handler.codec.spdy.SpdyHeaders: boolean contains(java.lang.Object)>(v38);
if v39 == 0 goto label13;
v40 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v40;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label01;
label13:
v41 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v41;
goto label01;
label14:
v42 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v43 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v44 = staticinvoke <java.lang.Math: int min(int,int)>(v42, v43);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v44);
v45 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v46 = v45 - v44;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length> = v46;
v47 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v47 != 0 goto label01;
v48 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v48;
goto label01;
label15:
v49 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v49 >= 4 goto label16;
return;
label16:
v50 = staticinvoke <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int readLengthField(io.netty.buffer.ByteBuf)>(v1);
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length> = v50;
v51 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v51 >= 0 goto label17;
v52 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v52;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label01;
label17:
v53 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v53 != 0 goto label20;
v54 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: boolean isTruncated()>();
if v54 != 0 goto label18;
v55 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v56 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name>;
interfaceinvoke v55.<io.netty.handler.codec.spdy.SpdyHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v56, "");
label18:
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name> = null;
v57 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders>;
v58 = v57 - 1;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders> = v58;
if v58 != 0 goto label19;
v59 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v59;
goto label01;
label19:
v60 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v60;
goto label01;
label20:
v61 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v62 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize>;
if v61 > v62 goto label21;
v63 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize>;
v64 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize>;
v65 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v66 = v64 - v65;
if v63 <= v66 goto label22;
label21:
v67 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int maxHeaderSize>;
v68 = v67 + 1;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize> = v68;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name> = null;
v69 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_VALUE>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v69;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setTruncated()>();
goto label01;
label22:
v70 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize>;
v71 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v72 = v70 + v71;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize> = v72;
v73 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v73;
goto label01;
label23:
v74 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v75 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v74 >= v75 goto label24;
return;
label24:
v76 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v77 = newarray (byte)[v76];
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readBytes(byte[])>(v77);
v78 = 0;
v79 = 0;
v80 = v77[0];
if v80 != 0 goto label25;
v81 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v81;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label01;
label25:
v82 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v78 >= v82 goto label34;
label26:
v83 = lengthof v77;
if v78 >= v83 goto label27;
v84 = v77[v78];
if v84 == 0 goto label27;
v78 = v78 + 1;
goto label26;
label27:
v85 = lengthof v77;
if v78 >= v85 goto label29;
v86 = v78 + 1;
v87 = lengthof v77;
if v86 == v87 goto label28;
v88 = v78 + 1;
v89 = v77[v88];
if v89 != 0 goto label29;
label28:
v90 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v90;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label34;
label29:
v91 = new java.lang.String;
v92 = v78 - v79;
specialinvoke v91.<java.lang.String: void <init>(byte[],int,int,java.lang.String)>(v77, v79, v92, "UTF-8");
label30:
v93 = interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeaders headers()>();
v94 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name>;
interfaceinvoke v93.<io.netty.handler.codec.spdy.SpdyHeaders: io.netty.handler.codec.Headers add(java.lang.Object,java.lang.Object)>(v94, v91);
label31:
goto label33;
label32:
v95 := @caughtexception;
v96 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v96;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label34;
label33:
v78 = v78 + 1;
v79 = v78;
goto label25;
label34:
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name> = null;
v97 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state>;
v98 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
if v97 == v98 goto label01;
v99 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders>;
v100 = v99 - 1;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders> = v100;
if v100 != 0 goto label35;
v101 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v101;
goto label01;
label35:
v102 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v102;
goto label01;
label36:
v103 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v104 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v105 = staticinvoke <java.lang.Math: int min(int,int)>(v103, v104);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v105);
v106 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
v107 = v106 - v105;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length> = v107;
v108 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int length>;
if v108 != 0 goto label01;
v109 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders>;
v110 = v109 - 1;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int numHeaders> = v110;
if v110 != 0 goto label37;
v111 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v111;
goto label01;
label37:
v112 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v112;
goto label01;
label38:
v113 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v113;
interfaceinvoke v2.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
goto label01;
label39:
v114 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v114);
return;
label40:
v115 = new java.lang.Error;
specialinvoke v115.<java.lang.Error: void <init>(java.lang.String)>("Shouldn\'t reach here.");
throw v115;
label41:
return;
catch java.lang.IllegalArgumentException from label30 to label31 with label32;
}
void endHeaderBlock(io.netty.handler.codec.spdy.SpdyHeadersFrame) throws java.lang.Exception
{
io.netty.handler.codec.spdy.SpdyHeadersFrame v1;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State v2, v3, v4;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyHeadersFrame;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state>;
v3 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK>;
if v2 == v3 goto label1;
interfaceinvoke v1.<io.netty.handler.codec.spdy.SpdyHeadersFrame: io.netty.handler.codec.spdy.SpdyHeadersFrame setInvalid()>();
label1:
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void releaseBuffer()>();
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: int headerSize> = 0;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: java.lang.String name> = null;
v4 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS>;
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State state> = v4;
return;
}
void end()
{
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: void releaseBuffer()>();
return;
}
private void releaseBuffer()
{
io.netty.buffer.ByteBuf v1, v2;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder;
v1 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder: io.netty.buffer.ByteBuf cumulation> = null;
label1:
return;
}
}