public final class io.netty.handler.codec.spdy.SpdyHttpCodec extends io.netty.channel.CombinedChannelDuplexHandler
{
public void <init>(io.netty.handler.codec.spdy.SpdyVersion, int)
{
io.netty.handler.codec.spdy.SpdyHttpEncoder v4;
io.netty.handler.codec.spdy.SpdyVersion v1;
int v2;
io.netty.handler.codec.spdy.SpdyHttpCodec v0;
io.netty.handler.codec.spdy.SpdyHttpDecoder v3;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpCodec;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
v3 = new io.netty.handler.codec.spdy.SpdyHttpDecoder;
specialinvoke v3.<io.netty.handler.codec.spdy.SpdyHttpDecoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion,int)>(v1, v2);
v4 = new io.netty.handler.codec.spdy.SpdyHttpEncoder;
specialinvoke v4.<io.netty.handler.codec.spdy.SpdyHttpEncoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion)>(v1);
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v3, v4);
return;
}
public void <init>(io.netty.handler.codec.spdy.SpdyVersion, int, boolean)
{
io.netty.handler.codec.spdy.SpdyHttpEncoder v5;
io.netty.handler.codec.spdy.SpdyVersion v1;
int v2;
io.netty.handler.codec.spdy.SpdyHttpCodec v0;
boolean v3;
io.netty.handler.codec.spdy.SpdyHttpDecoder v4;
v0 := @this: io.netty.handler.codec.spdy.SpdyHttpCodec;
v1 := @parameter0: io.netty.handler.codec.spdy.SpdyVersion;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 = new io.netty.handler.codec.spdy.SpdyHttpDecoder;
specialinvoke v4.<io.netty.handler.codec.spdy.SpdyHttpDecoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion,int,boolean)>(v1, v2, v3);
v5 = new io.netty.handler.codec.spdy.SpdyHttpEncoder;
specialinvoke v5.<io.netty.handler.codec.spdy.SpdyHttpEncoder: void <init>(io.netty.handler.codec.spdy.SpdyVersion)>(v1);
specialinvoke v0.<io.netty.channel.CombinedChannelDuplexHandler: void <init>(io.netty.channel.ChannelInboundHandler,io.netty.channel.ChannelOutboundHandler)>(v4, v5);
return;
}
}