public class io.netty.handler.codec.string.LineEncoder extends io.netty.handler.codec.MessageToMessageEncoder
{
private final java.nio.charset.Charset charset;
private final byte[] lineSeparator;
public void <init>()
{
io.netty.handler.codec.string.LineSeparator v1;
java.nio.charset.Charset v2;
io.netty.handler.codec.string.LineEncoder v0;
v0 := @this: io.netty.handler.codec.string.LineEncoder;
v1 = <io.netty.handler.codec.string.LineSeparator: io.netty.handler.codec.string.LineSeparator DEFAULT>;
v2 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
specialinvoke v0.<io.netty.handler.codec.string.LineEncoder: void <init>(io.netty.handler.codec.string.LineSeparator,java.nio.charset.Charset)>(v1, v2);
return;
}
public void <init>(io.netty.handler.codec.string.LineSeparator)
{
io.netty.handler.codec.string.LineSeparator v1;
java.nio.charset.Charset v2;
io.netty.handler.codec.string.LineEncoder v0;
v0 := @this: io.netty.handler.codec.string.LineEncoder;
v1 := @parameter0: io.netty.handler.codec.string.LineSeparator;
v2 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
specialinvoke v0.<io.netty.handler.codec.string.LineEncoder: void <init>(io.netty.handler.codec.string.LineSeparator,java.nio.charset.Charset)>(v1, v2);
return;
}
public void <init>(java.nio.charset.Charset)
{
io.netty.handler.codec.string.LineSeparator v2;
java.nio.charset.Charset v1;
io.netty.handler.codec.string.LineEncoder v0;
v0 := @this: io.netty.handler.codec.string.LineEncoder;
v1 := @parameter0: java.nio.charset.Charset;
v2 = <io.netty.handler.codec.string.LineSeparator: io.netty.handler.codec.string.LineSeparator DEFAULT>;
specialinvoke v0.<io.netty.handler.codec.string.LineEncoder: void <init>(io.netty.handler.codec.string.LineSeparator,java.nio.charset.Charset)>(v2, v1);
return;
}
public void <init>(io.netty.handler.codec.string.LineSeparator, java.nio.charset.Charset)
{
io.netty.handler.codec.string.LineSeparator v1;
byte[] v6;
java.nio.charset.Charset v2;
io.netty.handler.codec.string.LineEncoder v0;
java.lang.Object v3, v4;
java.lang.String v5;
v0 := @this: io.netty.handler.codec.string.LineEncoder;
v1 := @parameter0: io.netty.handler.codec.string.LineSeparator;
v2 := @parameter1: java.nio.charset.Charset;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageEncoder: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "charset");
v0.<io.netty.handler.codec.string.LineEncoder: java.nio.charset.Charset charset> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "lineSeparator");
v5 = virtualinvoke v4.<io.netty.handler.codec.string.LineSeparator: java.lang.String value()>();
v6 = virtualinvoke v5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v2);
v0.<io.netty.handler.codec.string.LineEncoder: byte[] lineSeparator> = v6;
return;
}
protected void encode(io.netty.channel.ChannelHandlerContext, java.lang.CharSequence, java.util.List) throws java.lang.Exception
{
byte[] v10, v7;
java.lang.CharSequence v2;
java.nio.CharBuffer v5;
io.netty.buffer.ByteBufAllocator v4;
io.netty.handler.codec.string.LineEncoder v0;
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v9;
java.nio.charset.Charset v6;
int v8;
v0 := @this: io.netty.handler.codec.string.LineEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: java.util.List;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v5 = staticinvoke <java.nio.CharBuffer: java.nio.CharBuffer wrap(java.lang.CharSequence)>(v2);
v6 = v0.<io.netty.handler.codec.string.LineEncoder: java.nio.charset.Charset charset>;
v7 = v0.<io.netty.handler.codec.string.LineEncoder: byte[] lineSeparator>;
v8 = lengthof v7;
v9 = staticinvoke <io.netty.buffer.ByteBufUtil: io.netty.buffer.ByteBuf encodeString(io.netty.buffer.ByteBufAllocator,java.nio.CharBuffer,java.nio.charset.Charset,int)>(v4, v5, v6, v8);
v10 = v0.<io.netty.handler.codec.string.LineEncoder: byte[] lineSeparator>;
virtualinvoke v9.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v10);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v9);
return;
}
}