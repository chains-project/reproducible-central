public final class io.netty.handler.proxy.HttpProxyHandler extends io.netty.handler.proxy.ProxyHandler
{
private static final java.lang.String PROTOCOL;
private static final java.lang.String AUTH_BASIC;
private final io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper codecWrapper;
private final java.lang.String username;
private final java.lang.String password;
private final java.lang.CharSequence authorization;
private final io.netty.handler.codec.http.HttpHeaders outboundHeaders;
private final boolean ignoreDefaultPortsInConnectHostHeader;
private io.netty.handler.codec.http.HttpResponseStatus status;
private io.netty.handler.codec.http.HttpHeaders inboundHeaders;
public void <init>(java.net.SocketAddress)
{
io.netty.handler.proxy.HttpProxyHandler v0;
java.net.SocketAddress v1;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: java.net.SocketAddress;
specialinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: void <init>(java.net.SocketAddress,io.netty.handler.codec.http.HttpHeaders)>(v1, null);
return;
}
public void <init>(java.net.SocketAddress, io.netty.handler.codec.http.HttpHeaders)
{
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.net.SocketAddress v1;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: io.netty.handler.codec.http.HttpHeaders;
specialinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: void <init>(java.net.SocketAddress,io.netty.handler.codec.http.HttpHeaders,boolean)>(v1, v2, 0);
return;
}
public void <init>(java.net.SocketAddress, io.netty.handler.codec.http.HttpHeaders, boolean)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.net.SocketAddress v1;
io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper v4;
io.netty.handler.proxy.HttpProxyHandler v0;
boolean v3;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: io.netty.handler.codec.http.HttpHeaders;
v3 := @parameter2: boolean;
specialinvoke v0.<io.netty.handler.proxy.ProxyHandler: void <init>(java.net.SocketAddress)>(v1);
v4 = new io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper;
specialinvoke v4.<io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper: void <init>()>();
v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper codecWrapper> = v4;
v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String username> = null;
v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String password> = null;
v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.CharSequence authorization> = null;
v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders outboundHeaders> = v2;
v0.<io.netty.handler.proxy.HttpProxyHandler: boolean ignoreDefaultPortsInConnectHostHeader> = v3;
return;
}
public void <init>(java.net.SocketAddress, java.lang.String, java.lang.String)
{
java.net.SocketAddress v1;
io.netty.handler.proxy.HttpProxyHandler v0;
java.lang.String v2, v3;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: void <init>(java.net.SocketAddress,java.lang.String,java.lang.String,io.netty.handler.codec.http.HttpHeaders)>(v1, v2, v3, null);
return;
}
public void <init>(java.net.SocketAddress, java.lang.String, java.lang.String, io.netty.handler.codec.http.HttpHeaders)
{
io.netty.handler.codec.http.HttpHeaders v4;
java.net.SocketAddress v1;
io.netty.handler.proxy.HttpProxyHandler v0;
java.lang.String v2, v3;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
specialinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: void <init>(java.net.SocketAddress,java.lang.String,java.lang.String,io.netty.handler.codec.http.HttpHeaders,boolean)>(v1, v2, v3, v4, 0);
return;
}
public void <init>(java.net.SocketAddress, java.lang.String, java.lang.String, io.netty.handler.codec.http.HttpHeaders, boolean)
{
java.lang.Throwable v13, v18;
io.netty.handler.codec.http.HttpHeaders v4;
java.net.SocketAddress v1;
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.util.AsciiString v14;
io.netty.buffer.ByteBuf v11, v12;
java.nio.charset.Charset v10, v15;
io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper v6;
java.lang.String v16, v17, v2, v3, v9;
boolean v5;
java.lang.Object v7, v8;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.netty.handler.codec.http.HttpHeaders;
v5 := @parameter4: boolean;
specialinvoke v0.<io.netty.handler.proxy.ProxyHandler: void <init>(java.net.SocketAddress)>(v1);
v6 = new io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper;
specialinvoke v6.<io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper: void <init>()>();
v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper codecWrapper> = v6;
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "username");
v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String username> = v7;
v8 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "password");
v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String password> = v8;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
v10 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v11 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf copiedBuffer(java.lang.CharSequence,java.nio.charset.Charset)>(v9, v10);
label1:
v12 = staticinvoke <io.netty.handler.codec.base64.Base64: io.netty.buffer.ByteBuf encode(io.netty.buffer.ByteBuf,boolean)>(v11, 0);
label2:
virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean release()>();
goto label4;
label3:
v13 := @caughtexception;
virtualinvoke v11.<io.netty.buffer.ByteBuf: boolean release()>();
throw v13;
label4:
v14 = new io.netty.util.AsciiString;
v15 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v16 = virtualinvoke v12.<io.netty.buffer.ByteBuf: java.lang.String toString(java.nio.charset.Charset)>(v15);
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Basic \u0001");
specialinvoke v14.<io.netty.util.AsciiString: void <init>(java.lang.CharSequence)>(v17);
v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.CharSequence authorization> = v14;
label5:
virtualinvoke v12.<io.netty.buffer.ByteBuf: boolean release()>();
goto label7;
label6:
v18 := @caughtexception;
virtualinvoke v12.<io.netty.buffer.ByteBuf: boolean release()>();
throw v18;
label7:
v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders outboundHeaders> = v4;
v0.<io.netty.handler.proxy.HttpProxyHandler: boolean ignoreDefaultPortsInConnectHostHeader> = v5;
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch java.lang.Throwable from label4 to label5 with label6;
}
public java.lang.String protocol()
{
io.netty.handler.proxy.HttpProxyHandler v0;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
return "http";
}
public java.lang.String authScheme()
{
io.netty.handler.proxy.HttpProxyHandler v0;
java.lang.String v2;
java.lang.CharSequence v1;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 = v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.CharSequence authorization>;
if v1 == null goto label1;
v2 = "basic";
goto label2;
label1:
v2 = "none";
label2:
return v2;
}
public java.lang.String username()
{
io.netty.handler.proxy.HttpProxyHandler v0;
java.lang.String v1;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 = v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String username>;
return v1;
}
public java.lang.String password()
{
io.netty.handler.proxy.HttpProxyHandler v0;
java.lang.String v1;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 = v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String password>;
return v1;
}
protected void addCodec(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper v4;
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.channel.ChannelPipeline v2;
java.lang.String v3;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v4 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper codecWrapper>;
interfaceinvoke v2.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addBefore(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v3, null, v4);
return;
}
protected void removeEncoder(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper v2;
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.handler.codec.http.HttpClientCodec v3;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper codecWrapper>;
v3 = v2.<io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper: io.netty.handler.codec.http.HttpClientCodec codec>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpClientCodec: void removeOutboundHandler()>();
return;
}
protected void removeDecoder(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper v2;
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.handler.codec.http.HttpClientCodec v3;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper codecWrapper>;
v3 = v2.<io.netty.handler.proxy.HttpProxyHandler$HttpClientCodecWrapper: io.netty.handler.codec.http.HttpClientCodec codec>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpClientCodec: void removeInboundHandler()>();
return;
}
protected java.lang.Object newInitialMessage(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpVersion v9;
io.netty.handler.codec.http.HttpHeaders v12, v15, v18, v19, v20;
java.net.SocketAddress v2;
io.netty.handler.codec.http.DefaultFullHttpRequest v8;
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.util.AsciiString v13, v16;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v11;
int v4;
java.lang.String v3, v5, v7;
boolean v6;
java.lang.CharSequence v14, v17;
io.netty.handler.codec.http.HttpMethod v10;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = virtualinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: java.net.SocketAddress destinationAddress()>();
v3 = staticinvoke <io.netty.handler.codec.http.HttpUtil: java.lang.String formatHostnameForHttp(java.net.InetSocketAddress)>(v2);
v4 = virtualinvoke v2.<java.net.InetSocketAddress: int getPort()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v3, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
v6 = v0.<io.netty.handler.proxy.HttpProxyHandler: boolean ignoreDefaultPortsInConnectHostHeader>;
if v6 == 0 goto label2;
if v4 == 80 goto label1;
if v4 != 443 goto label2;
label1:
v7 = v3;
goto label3;
label2:
v7 = v5;
label3:
v8 = new io.netty.handler.codec.http.DefaultFullHttpRequest;
v9 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v10 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod CONNECT>;
v11 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v8.<io.netty.handler.codec.http.DefaultFullHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.buffer.ByteBuf,boolean)>(v9, v10, v5, v11, 0);
v12 = interfaceinvoke v8.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v13 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
virtualinvoke v12.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v13, v7);
v14 = v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.CharSequence authorization>;
if v14 == null goto label4;
v15 = interfaceinvoke v8.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v16 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString PROXY_AUTHORIZATION>;
v17 = v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.CharSequence authorization>;
virtualinvoke v15.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v16, v17);
label4:
v18 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders outboundHeaders>;
if v18 == null goto label5;
v19 = interfaceinvoke v8.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v20 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders outboundHeaders>;
virtualinvoke v19.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v20);
label5:
return v8;
}
protected boolean handleResponse(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v13, v20, v8;
io.netty.handler.proxy.HttpProxyHandler v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException v11, v16, v5;
int v15;
java.lang.String v12, v18, v19, v6;
boolean v3, v9;
io.netty.handler.codec.http.HttpResponseStatus v10, v14, v17, v4, v7;
java.lang.Object v2;
v0 := @this: io.netty.handler.proxy.HttpProxyHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v3 == 0 goto label2;
v4 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpResponseStatus status>;
if v4 == null goto label1;
v5 = new io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException;
v6 = virtualinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String exceptionMessage(java.lang.String)>("too many responses");
specialinvoke v5.<io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpHeaders)>(v6, null);
throw v5;
label1:
v7 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpResponseStatus status> = v7;
v8 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders inboundHeaders> = v8;
label2:
v9 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v9 == 0 goto label4;
v10 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpResponseStatus status>;
if v10 != null goto label3;
v11 = new io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException;
v12 = virtualinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String exceptionMessage(java.lang.String)>("missing response");
v13 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders inboundHeaders>;
specialinvoke v11.<io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpHeaders)>(v12, v13);
throw v11;
label3:
v14 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpResponseStatus status>;
v15 = virtualinvoke v14.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v15 == 200 goto label4;
v16 = new io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException;
v17 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpResponseStatus status>;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.HttpResponseStatus)>(v17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("status: \u0001");
v19 = virtualinvoke v0.<io.netty.handler.proxy.HttpProxyHandler: java.lang.String exceptionMessage(java.lang.String)>(v18);
v20 = v0.<io.netty.handler.proxy.HttpProxyHandler: io.netty.handler.codec.http.HttpHeaders inboundHeaders>;
specialinvoke v16.<io.netty.handler.proxy.HttpProxyHandler$HttpProxyConnectException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpHeaders)>(v19, v20);
throw v16;
label4:
return v9;
}
}