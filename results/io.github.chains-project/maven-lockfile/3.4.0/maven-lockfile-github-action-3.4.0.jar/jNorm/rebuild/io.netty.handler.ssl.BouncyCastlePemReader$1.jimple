class io.netty.handler.ssl.BouncyCastlePemReader$1 extends java.lang.Object implements java.security.PrivilegedAction
{
void <init>()
{
io.netty.handler.ssl.BouncyCastlePemReader$1 v0;
v0 := @this: io.netty.handler.ssl.BouncyCastlePemReader$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Void run()
{
java.lang.Throwable v9;
io.netty.handler.ssl.BouncyCastlePemReader$1 v0;
java.lang.Object[] v6;
java.lang.Class[] v4;
java.lang.reflect.Constructor v5;
io.netty.util.internal.logging.InternalLogger v10, v8;
java.lang.Class v1, v3;
java.lang.Object v7;
java.lang.ClassLoader v2;
v0 := @this: io.netty.handler.ssl.BouncyCastlePemReader$1;
label1:
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v3 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.bouncycastle.jce.provider.BouncyCastleProvider", 1, v2);
staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("org.bouncycastle.openssl.PEMParser", 1, v2);
v4 = newarray (java.lang.Class)[0];
v5 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Constructor getConstructor(java.lang.Class[])>(v4);
v6 = newarray (java.lang.Object)[0];
v7 = virtualinvoke v5.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v6);
staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: java.security.Provider access$002(java.security.Provider)>(v7);
v8 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v8.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("Bouncy Castle provider available");
staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: boolean access$202(boolean)>(1);
label2:
goto label4;
label3:
v9 := @caughtexception;
v10 = <io.netty.handler.ssl.BouncyCastlePemReader: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v10.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Cannot load Bouncy Castle provider", v9);
staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: java.lang.Throwable access$302(java.lang.Throwable)>(v9);
staticinvoke <io.netty.handler.ssl.BouncyCastlePemReader: boolean access$202(boolean)>(1);
label4:
return null;
catch java.lang.Throwable from label1 to label2 with label3;
}
}