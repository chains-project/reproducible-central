public final class io.netty.handler.ssl.CipherSuiteConverter extends java.lang.Object
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final java.util.regex.Pattern JAVA_CIPHERSUITE_PATTERN;
private static final java.util.regex.Pattern OPENSSL_CIPHERSUITE_PATTERN;
private static final java.util.regex.Pattern JAVA_AES_CBC_PATTERN;
private static final java.util.regex.Pattern JAVA_AES_PATTERN;
private static final java.util.regex.Pattern OPENSSL_AES_CBC_PATTERN;
private static final java.util.regex.Pattern OPENSSL_AES_PATTERN;
private static final java.util.concurrent.ConcurrentMap j2o;
private static final java.util.concurrent.ConcurrentMap o2j;
private static final java.util.Map j2oTls13;
private static final java.util.Map o2jTls13;
static void clearCache()
{
java.util.concurrent.ConcurrentMap v0, v1;
v0 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o>;
interfaceinvoke v0.<java.util.concurrent.ConcurrentMap: void clear()>();
v1 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap o2j>;
interfaceinvoke v1.<java.util.concurrent.ConcurrentMap: void clear()>();
return;
}
static boolean isJ2OCached(java.lang.String, java.lang.String)
{
java.lang.Object v3;
java.lang.String v0, v1;
boolean v4;
java.util.concurrent.ConcurrentMap v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
v4 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v3);
return v4;
}
static boolean isO2JCached(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.Object v4, v5;
java.lang.String v0, v1, v2;
boolean v6;
java.util.concurrent.ConcurrentMap v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap o2j>;
v4 = interfaceinvoke v3.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
if v4 != null goto label1;
return 0;
label1:
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v6 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v5);
return v6;
}
public static java.lang.String toOpenSsl(java.lang.String, boolean)
{
java.lang.Object v3;
java.lang.String v0, v4;
boolean v1;
java.util.concurrent.ConcurrentMap v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label1;
return v3;
label1:
v4 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String cacheFromJava(java.lang.String,boolean)>(v0, v1);
return v4;
}
private static java.lang.String cacheFromJava(java.lang.String, boolean)
{
java.util.HashMap v8;
java.util.concurrent.ConcurrentMap v11, v6;
io.netty.util.internal.logging.InternalLogger v12;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v0, v10, v4, v5, v7, v9;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.Map j2oTls13>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label3;
if v1 == 0 goto label1;
v4 = v3;
goto label2;
label1:
v4 = v0;
label2:
return v4;
label3:
v5 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toOpenSslUncached(java.lang.String,boolean)>(v0, v1);
if v5 != null goto label4;
return null;
label4:
v6 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o>;
interfaceinvoke v6.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v0, v5);
v7 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(4);
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>(int)>(4);
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", v7);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("SSL_\u0001");
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SSL", v9);
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("TLS_\u0001");
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS", v10);
v11 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap o2j>;
interfaceinvoke v11.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v8);
v12 = <io.netty.handler.ssl.CipherSuiteConverter: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v12.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cipher suite mapping: {} => {}", v0, v5);
return v5;
}
static java.lang.String toOpenSslUncached(java.lang.String, boolean)
{
java.util.regex.Matcher v6;
java.util.Map v2;
java.lang.String v0, v10, v11, v12, v13, v15, v17, v18, v4, v8, v9;
boolean v1, v14, v16, v7;
java.lang.Object v3;
java.util.regex.Pattern v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.Map j2oTls13>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label3;
if v1 == 0 goto label1;
v4 = v3;
goto label2;
label1:
v4 = v0;
label2:
return v4;
label3:
v5 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern JAVA_CIPHERSUITE_PATTERN>;
v6 = virtualinvoke v5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v7 = virtualinvoke v6.<java.util.regex.Matcher: boolean matches()>();
if v7 != 0 goto label4;
return null;
label4:
v8 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v9 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toOpenSslHandshakeAlgo(java.lang.String)>(v8);
v10 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(2);
v11 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toOpenSslBulkCipher(java.lang.String)>(v10);
v12 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(3);
v13 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toOpenSslHmacAlgo(java.lang.String)>(v12);
v14 = virtualinvoke v9.<java.lang.String: boolean isEmpty()>();
if v14 == 0 goto label5;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v11, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001-\u0001");
return v15;
label5:
v16 = virtualinvoke v11.<java.lang.String: boolean contains(java.lang.CharSequence)>("CHACHA20");
if v16 == 0 goto label6;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001-\u0001");
return v17;
label6:
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v9, v11, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001-\u0001-\u0001");
return v18;
}
private static java.lang.String toOpenSslHandshakeAlgo(java.lang.String)
{
int v2, v3, v7, v8;
java.lang.String v0, v11, v4, v9;
boolean v1, v10, v5, v6;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: boolean endsWith(java.lang.String)>("_EXPORT");
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
v3 = v2 - 7;
v0 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v3);
label1:
v4 = "RSA";
v5 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v5 == 0 goto label2;
v0 = "";
goto label3;
label2:
v6 = virtualinvoke v0.<java.lang.String: boolean endsWith(java.lang.String)>("_anon");
if v6 == 0 goto label3;
v7 = virtualinvoke v0.<java.lang.String: int length()>();
v8 = v7 - 5;
v9 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(0, v8);
v0 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("A\u0001");
label3:
if v1 == 0 goto label5;
v10 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v10 == 0 goto label4;
v0 = "EXP";
goto label5;
label4:
v0 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("EXP-\u0001");
label5:
v11 = virtualinvoke v0.<java.lang.String: java.lang.String replace(char,char)>(95, 45);
return v11;
}
private static java.lang.String toOpenSslBulkCipher(java.lang.String)
{
java.util.regex.Matcher v3, v7;
java.lang.String v0, v10, v12, v14, v16, v18, v20, v22, v5, v9;
boolean v1, v11, v13, v15, v17, v19, v21, v4, v8;
java.util.regex.Pattern v2, v6;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>("AES_");
if v1 == 0 goto label2;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern JAVA_AES_CBC_PATTERN>;
v3 = virtualinvoke v2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v4 = virtualinvoke v3.<java.util.regex.Matcher: boolean matches()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v3.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>("$1$2");
return v5;
label1:
v6 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern JAVA_AES_PATTERN>;
v7 = virtualinvoke v6.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v8 = virtualinvoke v7.<java.util.regex.Matcher: boolean matches()>();
if v8 == 0 goto label2;
v9 = virtualinvoke v7.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>("$1$2-$3");
return v9;
label2:
v10 = "3DES_EDE_CBC";
v11 = virtualinvoke v10.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v11 == 0 goto label3;
return "DES-CBC3";
label3:
v12 = "RC4_128";
v13 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v13 != 0 goto label4;
v14 = "RC4_40";
v15 = virtualinvoke v14.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v15 == 0 goto label5;
label4:
return "RC4";
label5:
v16 = "DES40_CBC";
v17 = virtualinvoke v16.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v17 != 0 goto label6;
v18 = "DES_CBC_40";
v19 = virtualinvoke v18.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v19 == 0 goto label7;
label6:
return "DES-CBC";
label7:
v20 = "RC2_CBC_40";
v21 = virtualinvoke v20.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v21 == 0 goto label8;
return "RC2-CBC";
label8:
v22 = virtualinvoke v0.<java.lang.String: java.lang.String replace(char,char)>(95, 45);
return v22;
}
private static java.lang.String toOpenSslHmacAlgo(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
return v0;
}
public static java.lang.String toJava(java.lang.String, java.lang.String)
{
java.lang.Object v3, v4, v5;
java.lang.String v0, v1;
java.util.concurrent.ConcurrentMap v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap o2j>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v0);
if v3 != null goto label1;
v3 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.util.Map cacheFromOpenSsl(java.lang.String)>(v0);
if v3 != null goto label1;
return null;
label1:
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v4 != null goto label3;
v5 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>("");
if v5 != null goto label2;
return null;
label2:
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_\u0001");
label3:
return v4;
}
private static java.util.Map cacheFromOpenSsl(java.lang.String)
{
java.util.HashMap v6;
java.util.concurrent.ConcurrentMap v7, v8, v9;
io.netty.util.internal.logging.InternalLogger v10, v11;
java.util.Map v1;
java.lang.Object v2;
java.lang.String v0, v3, v4, v5;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.Map o2jTls13>;
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v2 == null goto label1;
return v2;
label1:
v3 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toJavaUncached0(java.lang.String,boolean)>(v0, 0);
if v3 != null goto label2;
return null;
label2:
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("SSL_\u0001");
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("TLS_\u0001");
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>(int)>(4);
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("", v3);
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("SSL", v4);
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS", v5);
v7 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap o2j>;
interfaceinvoke v7.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v0, v6);
v8 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o>;
interfaceinvoke v8.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v5, v0);
v9 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o>;
interfaceinvoke v9.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v4, v0);
v10 = <io.netty.handler.ssl.CipherSuiteConverter: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v10.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cipher suite mapping: {} => {}", v5, v0);
v11 = <io.netty.handler.ssl.CipherSuiteConverter: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v11.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("Cipher suite mapping: {} => {}", v4, v0);
return v6;
}
static java.lang.String toJavaUncached(java.lang.String)
{
java.lang.String v0, v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toJavaUncached0(java.lang.String,boolean)>(v0, 1);
return v1;
}
private static java.lang.String toJavaUncached0(java.lang.String, boolean)
{
java.util.regex.Matcher v6;
java.util.Map v2;
java.lang.String v0, v11, v13, v14, v15, v16, v17, v18, v20, v8;
boolean v1, v10, v12, v19, v7, v9;
java.lang.Object v3, v4;
java.util.regex.Pattern v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v1 == 0 goto label1;
v2 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.Map o2jTls13>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label1;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>("TLS");
return v4;
label1:
v5 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern OPENSSL_CIPHERSUITE_PATTERN>;
v6 = virtualinvoke v5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v7 = virtualinvoke v6.<java.util.regex.Matcher: boolean matches()>();
if v7 != 0 goto label2;
return null;
label2:
v8 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(1);
if v8 != null goto label3;
v8 = "";
v9 = 0;
goto label6;
label3:
v10 = virtualinvoke v8.<java.lang.String: boolean startsWith(java.lang.String)>("EXP-");
if v10 == 0 goto label4;
v8 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int)>(4);
v9 = 1;
goto label6;
label4:
v11 = "EXP";
v12 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v12 == 0 goto label5;
v8 = "";
v9 = 1;
goto label6;
label5:
v9 = 0;
label6:
v13 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toJavaHandshakeAlgo(java.lang.String,boolean)>(v8, v9);
v14 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(2);
v15 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toJavaBulkCipher(java.lang.String,boolean)>(v14, v9);
v16 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(3);
v17 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toJavaHmacAlgo(java.lang.String)>(v16);
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v13, v15, v17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_WITH_\u0001_\u0001");
v19 = virtualinvoke v15.<java.lang.String: boolean contains(java.lang.CharSequence)>("CHACHA20");
if v19 == 0 goto label7;
v20 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_SHA256");
goto label8;
label7:
v20 = v18;
label8:
return v20;
}
private static java.lang.String toJavaHandshakeAlgo(java.lang.String, boolean)
{
java.lang.String v0, v3, v5, v7, v8;
boolean v1, v2, v4, v6;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label1;
v0 = "RSA";
goto label3;
label1:
v3 = "ADH";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v4 == 0 goto label2;
v0 = "DH_anon";
goto label3;
label2:
v5 = "AECDH";
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v6 == 0 goto label3;
v0 = "ECDH_anon";
label3:
v7 = virtualinvoke v0.<java.lang.String: java.lang.String replace(char,char)>(45, 95);
if v1 == 0 goto label4;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_EXPORT");
return v8;
label4:
return v7;
}
private static java.lang.String toJavaBulkCipher(java.lang.String, boolean)
{
java.util.regex.Matcher v4, v8;
java.lang.String v0, v10, v11, v13, v15, v17, v19, v6;
boolean v1, v12, v14, v16, v18, v2, v5, v9;
java.util.regex.Pattern v3, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>("AES");
if v2 == 0 goto label2;
v3 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern OPENSSL_AES_CBC_PATTERN>;
v4 = virtualinvoke v3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v5 = virtualinvoke v4.<java.util.regex.Matcher: boolean matches()>();
if v5 == 0 goto label1;
v6 = virtualinvoke v4.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>("$1_$2_CBC");
return v6;
label1:
v7 = <io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern OPENSSL_AES_PATTERN>;
v8 = virtualinvoke v7.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v9 = virtualinvoke v8.<java.util.regex.Matcher: boolean matches()>();
if v9 == 0 goto label2;
v10 = virtualinvoke v8.<java.util.regex.Matcher: java.lang.String replaceFirst(java.lang.String)>("$1_$2_$3");
return v10;
label2:
v11 = "DES-CBC3";
v12 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v12 == 0 goto label3;
return "3DES_EDE_CBC";
label3:
v13 = "RC4";
v14 = virtualinvoke v13.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v14 == 0 goto label5;
if v1 == 0 goto label4;
return "RC4_40";
label4:
return "RC4_128";
label5:
v15 = "DES-CBC";
v16 = virtualinvoke v15.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v16 == 0 goto label7;
if v1 == 0 goto label6;
return "DES_CBC_40";
label6:
return "DES_CBC";
label7:
v17 = "RC2-CBC";
v18 = virtualinvoke v17.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v18 == 0 goto label9;
if v1 == 0 goto label8;
return "RC2_CBC_40";
label8:
return "RC2_CBC";
label9:
v19 = virtualinvoke v0.<java.lang.String: java.lang.String replace(char,char)>(45, 95);
return v19;
}
private static java.lang.String toJavaHmacAlgo(java.lang.String)
{
java.lang.String v0;
v0 := @parameter0: java.lang.String;
return v0;
}
static void convertToCipherStrings(java.lang.Iterable, java.lang.StringBuilder, java.lang.StringBuilder, boolean)
{
java.lang.Iterable v0;
int v13, v14, v16, v17, v18, v19, v20, v21;
java.lang.String v10, v7;
boolean v11, v12, v3, v5, v8;
java.util.Iterator v4;
java.lang.IllegalArgumentException v15, v9;
java.lang.Object v6;
java.lang.StringBuilder v1, v2;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: java.lang.StringBuilder;
v3 := @parameter3: boolean;
v4 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label6;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
if v6 == null goto label6;
v7 = staticinvoke <io.netty.handler.ssl.CipherSuiteConverter: java.lang.String toOpenSsl(java.lang.String,boolean)>(v6, v3);
if v7 != null goto label2;
v7 = v6;
label2:
v8 = staticinvoke <io.netty.handler.ssl.OpenSsl: boolean isCipherSuiteAvailable(java.lang.String)>(v7);
if v8 != 0 goto label3;
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported cipher suite: \u0001(\u0001)");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
label3:
v11 = staticinvoke <io.netty.handler.ssl.SslUtils: boolean isTLSv13Cipher(java.lang.String)>(v7);
if v11 != 0 goto label4;
v12 = staticinvoke <io.netty.handler.ssl.SslUtils: boolean isTLSv13Cipher(java.lang.String)>(v6);
if v12 == 0 goto label5;
label4:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
goto label1;
label5:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v7);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
goto label1;
label6:
v13 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
if v13 != 0 goto label7;
v14 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
if v14 != 0 goto label7;
v15 = new java.lang.IllegalArgumentException;
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("empty cipher suites");
throw v15;
label7:
v16 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
if v16 <= 0 goto label8;
v17 = virtualinvoke v1.<java.lang.StringBuilder: int length()>();
v18 = v17 - 1;
virtualinvoke v1.<java.lang.StringBuilder: void setLength(int)>(v18);
label8:
v19 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
if v19 <= 0 goto label9;
v20 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v21 = v20 - 1;
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v21);
label9:
return;
}
private void <init>()
{
io.netty.handler.ssl.CipherSuiteConverter v0;
v0 := @this: io.netty.handler.ssl.CipherSuiteConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.HashMap v11, v9;
java.util.concurrent.ConcurrentMap v7, v8;
java.util.Map v10, v12, v13, v14, v15, v16, v17, v18;
io.netty.util.internal.logging.InternalLogger v0;
java.util.regex.Pattern v1, v2, v3, v4, v5, v6;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/ssl/CipherSuiteConverter;");
<io.netty.handler.ssl.CipherSuiteConverter: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(?:TLS|SSL)_((?:(?!_WITH_).)+)_WITH_(.*)_(.*)$");
<io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern JAVA_CIPHERSUITE_PATTERN> = v1;
v2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(?:((?:(?:EXP-)?(?:(?:DHE|EDH|ECDH|ECDHE|SRP|RSA)-(?:DSS|RSA|ECDSA|PSK)|(?:ADH|AECDH|KRB5|PSK|SRP)))|EXP)-)?(.*)-(.*)$");
<io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern OPENSSL_CIPHERSUITE_PATTERN> = v2;
v3 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(AES)_([0-9]+)_CBC$");
<io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern JAVA_AES_CBC_PATTERN> = v3;
v4 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(AES)_([0-9]+)_(.*)$");
<io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern JAVA_AES_PATTERN> = v4;
v5 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(AES)([0-9]+)$");
<io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern OPENSSL_AES_CBC_PATTERN> = v5;
v6 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(AES)([0-9]+)-(.*)$");
<io.netty.handler.ssl.CipherSuiteConverter: java.util.regex.Pattern OPENSSL_AES_PATTERN> = v6;
v7 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
<io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap j2o> = v7;
v8 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
<io.netty.handler.ssl.CipherSuiteConverter: java.util.concurrent.ConcurrentMap o2j> = v8;
v9 = new java.util.HashMap;
specialinvoke v9.<java.util.HashMap: void <init>()>();
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS_AES_128_GCM_SHA256", "AEAD-AES128-GCM-SHA256");
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS_AES_256_GCM_SHA384", "AEAD-AES256-GCM-SHA384");
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS_CHACHA20_POLY1305_SHA256", "AEAD-CHACHA20-POLY1305-SHA256");
v10 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v9);
<io.netty.handler.ssl.CipherSuiteConverter: java.util.Map j2oTls13> = v10;
v11 = new java.util.HashMap;
specialinvoke v11.<java.util.HashMap: void <init>()>();
v12 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TLS", "TLS_AES_128_GCM_SHA256");
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS_AES_128_GCM_SHA256", v12);
v13 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TLS", "TLS_AES_256_GCM_SHA384");
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS_AES_256_GCM_SHA384", v13);
v14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TLS", "TLS_CHACHA20_POLY1305_SHA256");
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("TLS_CHACHA20_POLY1305_SHA256", v14);
v15 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TLS", "TLS_AES_128_GCM_SHA256");
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AEAD-AES128-GCM-SHA256", v15);
v16 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TLS", "TLS_AES_256_GCM_SHA384");
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AEAD-AES256-GCM-SHA384", v16);
v17 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("TLS", "TLS_CHACHA20_POLY1305_SHA256");
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("AEAD-CHACHA20-POLY1305-SHA256", v17);
v18 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v11);
<io.netty.handler.ssl.CipherSuiteConverter: java.util.Map o2jTls13> = v18;
return;
}
}