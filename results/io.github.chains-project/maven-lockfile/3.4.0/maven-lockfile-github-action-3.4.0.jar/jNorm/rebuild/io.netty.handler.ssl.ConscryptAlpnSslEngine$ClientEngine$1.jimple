class io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1 extends org.conscrypt.HandshakeListener
{
final io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine this$0;
void <init>(io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine)
{
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine v1;
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1 v0;
v0 := @this: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1;
v1 := @parameter0: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine;
v0.<io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine this$0> = v1;
specialinvoke v0.<org.conscrypt.HandshakeListener: void <init>()>();
return;
}
public void onHandshakeFinished() throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine v1;
io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1 v0;
v0 := @this: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1;
v1 = v0.<io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine$1: io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine this$0>;
specialinvoke v1.<io.netty.handler.ssl.ConscryptAlpnSslEngine$ClientEngine: void selectProtocol()>();
return;
}
}