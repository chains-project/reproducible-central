public abstract class io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory extends java.lang.Object implements io.netty.handler.ssl.JdkApplicationProtocolNegotiator$SslEngineWrapperFactory
{
public void <init>()
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory v0;
v0 := @this: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public final javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, boolean)
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory v0;
io.netty.buffer.ByteBufAllocator v4;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v2;
boolean v3;
javax.net.ssl.SSLEngine v1, v5;
v0 := @this: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory;
v1 := @parameter0: javax.net.ssl.SSLEngine;
v2 := @parameter1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v3 := @parameter2: boolean;
v4 = <io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBufAllocator DEFAULT>;
v5 = virtualinvoke v0.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$AllocatorAwareSslEngineWrapperFactory: javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine,io.netty.buffer.ByteBufAllocator,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,boolean)>(v1, v4, v2, v3);
return v5;
}
abstract javax.net.ssl.SSLEngine wrapSslEngine(javax.net.ssl.SSLEngine, io.netty.buffer.ByteBufAllocator, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, boolean);
}