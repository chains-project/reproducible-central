class io.netty.handler.ssl.JettyNpnSslEngine$2 extends java.lang.Object implements org.eclipse.jetty.npn.NextProtoNego$ClientProvider
{
final io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector;
final io.netty.handler.ssl.JettyNpnSslEngine this$0;
void <init>(io.netty.handler.ssl.JettyNpnSslEngine, io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector)
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector v2;
io.netty.handler.ssl.JettyNpnSslEngine v1;
io.netty.handler.ssl.JettyNpnSslEngine$2 v0;
v0 := @this: io.netty.handler.ssl.JettyNpnSslEngine$2;
v1 := @parameter0: io.netty.handler.ssl.JettyNpnSslEngine;
v2 := @parameter1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector;
v0.<io.netty.handler.ssl.JettyNpnSslEngine$2: io.netty.handler.ssl.JettyNpnSslEngine this$0> = v1;
v0.<io.netty.handler.ssl.JettyNpnSslEngine$2: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean supports()
{
io.netty.handler.ssl.JettyNpnSslEngine$2 v0;
v0 := @this: io.netty.handler.ssl.JettyNpnSslEngine$2;
return 1;
}
public void unsupported()
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector v1;
io.netty.handler.ssl.JettyNpnSslEngine$2 v0;
v0 := @this: io.netty.handler.ssl.JettyNpnSslEngine$2;
v1 = v0.<io.netty.handler.ssl.JettyNpnSslEngine$2: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector>;
interfaceinvoke v1.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector: void unsupported()>();
return;
}
public java.lang.String selectProtocol(java.util.List)
{
java.lang.Throwable v4;
java.util.List v1;
io.netty.handler.ssl.JettyNpnSslEngine$2 v0;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector v2;
java.lang.String v3;
v0 := @this: io.netty.handler.ssl.JettyNpnSslEngine$2;
v1 := @parameter0: java.util.List;
label1:
v2 = v0.<io.netty.handler.ssl.JettyNpnSslEngine$2: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector val$protocolSelector>;
v3 = interfaceinvoke v2.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector: java.lang.String select(java.util.List)>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v4);
return null;
catch java.lang.Throwable from label1 to label2 with label3;
}
}