public final class io.netty.handler.ssl.OpenSslServerContext extends io.netty.handler.ssl.OpenSslContext
{
private final io.netty.handler.ssl.OpenSslServerSessionContext sessionContext;
public void <init>(java.io.File, java.io.File) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.OpenSslServerContext v0;
java.io.File v1, v2;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,java.io.File,java.lang.String)>(v1, v2, null);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v4;
io.netty.handler.ssl.OpenSslServerContext v0;
java.lang.String v3;
io.netty.handler.ssl.ApplicationProtocolConfig v5;
java.io.File v1, v2;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
v5 = <io.netty.handler.ssl.ApplicationProtocolConfig: io.netty.handler.ssl.ApplicationProtocolConfig DISABLED>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(v1, v2, v3, null, v4, v5, 0L, 0L);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, java.lang.Iterable, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v8;
long v6, v7;
java.io.File v1, v2;
java.lang.Iterable v4;
io.netty.handler.ssl.OpenSslServerContext v0;
java.lang.String v3;
io.netty.handler.ssl.ApplicationProtocolConfig v5;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: io.netty.handler.ssl.ApplicationProtocolConfig;
v6 := @parameter5: long;
v7 := @parameter6: long;
v8 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(v1, v2, v3, v4, v8, v5, v6, v7);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, java.lang.Iterable, java.lang.Iterable, long, long) throws javax.net.ssl.SSLException
{
long v6, v7;
java.io.File v1, v2;
java.lang.Iterable v4, v5;
io.netty.handler.ssl.OpenSslServerContext v0;
java.lang.String v3;
io.netty.handler.ssl.ApplicationProtocolConfig v8;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: long;
v7 := @parameter6: long;
v8 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.ApplicationProtocolConfig toApplicationProtocolConfig(java.lang.Iterable)>(v5);
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,java.io.File,java.lang.String,java.lang.Iterable,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(v1, v2, v3, v4, v8, v6, v7);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.TrustManagerFactory v4;
long v7, v8;
java.io.File v1, v2;
java.lang.Iterable v5;
io.netty.handler.ssl.OpenSslServerContext v0;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v9;
java.lang.String v3;
io.netty.handler.ssl.ApplicationProtocolConfig v6;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: javax.net.ssl.TrustManagerFactory;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: io.netty.handler.ssl.ApplicationProtocolConfig;
v7 := @parameter6: long;
v8 := @parameter7: long;
v9 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig)>(v6);
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,java.io.File,java.lang.String,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(v1, v2, v3, v4, v5, v9, v7, v8);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.TrustManagerFactory v4;
long v7, v8;
java.io.File v1, v2;
java.lang.Iterable v5;
io.netty.handler.ssl.OpenSslServerContext v0;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v6;
java.lang.String v3;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: javax.net.ssl.TrustManagerFactory;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator;
v7 := @parameter6: long;
v8 := @parameter7: long;
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(null, v4, v1, v2, v3, null, v5, null, v6, v7, v8);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
long v7, v8;
java.io.File v1, v2;
java.lang.Iterable v4;
io.netty.handler.ssl.CipherSuiteFilter v5;
io.netty.handler.ssl.OpenSslServerContext v0;
java.lang.String v3;
io.netty.handler.ssl.ApplicationProtocolConfig v6;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: io.netty.handler.ssl.CipherSuiteFilter;
v6 := @parameter5: io.netty.handler.ssl.ApplicationProtocolConfig;
v7 := @parameter6: long;
v8 := @parameter7: long;
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(null, null, v1, v2, v3, null, v4, v5, v6, v7, v8);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
long v10, v11;
java.io.File v1, v3, v4;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.OpenSslServerContext v0;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v12;
java.lang.String v5;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.ApplicationProtocolConfig;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig)>(v9);
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(v1, v2, v3, v4, v5, v6, v7, v8, v12, v10, v11);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.TrustManagerFactory v4;
long v8, v9;
java.io.File v1, v2;
java.lang.Iterable v5;
io.netty.handler.ssl.CipherSuiteFilter v6;
io.netty.handler.ssl.OpenSslServerContext v0;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v10;
java.lang.String v3;
io.netty.handler.ssl.ApplicationProtocolConfig v7;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: javax.net.ssl.TrustManagerFactory;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: io.netty.handler.ssl.CipherSuiteFilter;
v7 := @parameter6: io.netty.handler.ssl.ApplicationProtocolConfig;
v8 := @parameter7: long;
v9 := @parameter8: long;
v10 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig)>(v7);
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(null, v4, v1, v2, v3, null, v5, v6, v10, v8, v9);
return;
}
public void <init>(java.io.File, java.io.File, java.lang.String, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.TrustManagerFactory v4;
long v8, v9;
java.io.File v1, v2;
java.lang.Iterable v5;
io.netty.handler.ssl.CipherSuiteFilter v6;
io.netty.handler.ssl.OpenSslServerContext v0;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v7;
java.lang.String v3;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.File;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: javax.net.ssl.TrustManagerFactory;
v5 := @parameter4: java.lang.Iterable;
v6 := @parameter5: io.netty.handler.ssl.CipherSuiteFilter;
v7 := @parameter6: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator;
v8 := @parameter7: long;
v9 := @parameter8: long;
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long)>(null, v4, v1, v2, v3, null, v5, v6, v7, v8, v9);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
long v10, v11;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.ClientAuth v15;
java.lang.String v16, v5;
java.util.Map$Entry[] v17;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.io.File v1, v3, v4;
io.netty.handler.ssl.OpenSslServerContext v0;
java.security.PrivateKey v14;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v9;
java.security.cert.X509Certificate[] v12, v13;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v1);
v13 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v3);
v14 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String)>(v4, v5);
v15 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
v16 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v17 = newarray (java.util.Map$Entry)[0];
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[])>(v12, v2, v13, v14, v5, v6, v7, v8, v9, v10, v11, v15, null, 0, 0, v16, v17);
return;
}
transient void <init>(java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long, io.netty.handler.ssl.ClientAuth, java.lang.String[], boolean, boolean, java.lang.String, java.util.Map$Entry[]) throws javax.net.ssl.SSLException
{
java.lang.String[] v13;
long v10, v11;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.ClientAuth v12;
java.lang.String v16, v5;
java.util.Map$Entry[] v17;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
boolean v14, v15;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
io.netty.handler.ssl.OpenSslServerContext v0;
java.security.PrivateKey v4;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v18;
java.security.cert.X509Certificate[] v1, v3;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.security.cert.X509Certificate[];
v4 := @parameter3: java.security.PrivateKey;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.ApplicationProtocolConfig;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 := @parameter11: io.netty.handler.ssl.ClientAuth;
v13 := @parameter12: java.lang.String[];
v14 := @parameter13: boolean;
v15 := @parameter14: boolean;
v16 := @parameter15: java.lang.String;
v17 := @parameter16: java.util.Map$Entry[];
v18 = staticinvoke <io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig)>(v9);
specialinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,long,long,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.lang.String,java.util.Map$Entry[])>(v1, v2, v3, v4, v5, v6, v7, v8, v18, v10, v11, v12, v13, v14, v15, v16, v17);
return;
}
private transient void <init>(java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator, long, long, io.netty.handler.ssl.ClientAuth, java.lang.String[], boolean, boolean, java.lang.String, java.util.Map$Entry[]) throws javax.net.ssl.SSLException
{
java.lang.Throwable v21;
java.lang.String[] v13;
long v10, v11, v18;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.OpenSslServerSessionContext v20;
io.netty.handler.ssl.ClientAuth v12;
java.lang.String v16, v5;
java.util.Map$Entry[] v17;
boolean v14, v15;
javax.net.ssl.TrustManagerFactory v2;
io.netty.handler.ssl.OpenSslEngineMap v19;
javax.net.ssl.KeyManagerFactory v6;
io.netty.handler.ssl.OpenSslServerContext v0;
java.security.PrivateKey v4;
io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator v9;
java.security.cert.X509Certificate[] v1, v3;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.security.cert.X509Certificate[];
v4 := @parameter3: java.security.PrivateKey;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 := @parameter11: io.netty.handler.ssl.ClientAuth;
v13 := @parameter12: java.lang.String[];
v14 := @parameter13: boolean;
v15 := @parameter14: boolean;
v16 := @parameter15: java.lang.String;
v17 := @parameter16: java.util.Map$Entry[];
specialinvoke v0.<io.netty.handler.ssl.OpenSslContext: void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.util.Map$Entry[])>(v7, v8, v9, 1, v3, v12, v13, v14, v15, v17);
label1:
staticinvoke <io.netty.handler.ssl.OpenSslKeyMaterialProvider: void validateKeyMaterialSupported(java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String)>(v3, v4, v5);
v18 = v0.<io.netty.handler.ssl.OpenSslServerContext: long ctx>;
v19 = v0.<io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslEngineMap engineMap>;
v20 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String,long,long)>(v0, v18, v19, v1, v2, v3, v4, v5, v6, v16, v10, v11);
v0.<io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext sessionContext> = v20;
label2:
goto label4;
label3:
v21 := @caughtexception;
virtualinvoke v0.<io.netty.handler.ssl.OpenSslServerContext: boolean release()>();
throw v21;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.handler.ssl.OpenSslServerSessionContext sessionContext()
{
io.netty.handler.ssl.OpenSslServerSessionContext v1;
io.netty.handler.ssl.OpenSslServerContext v0;
v0 := @this: io.netty.handler.ssl.OpenSslServerContext;
v1 = v0.<io.netty.handler.ssl.OpenSslServerContext: io.netty.handler.ssl.OpenSslServerSessionContext sessionContext>;
return v1;
}
}