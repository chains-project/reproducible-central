final class io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback extends java.lang.Object implements io.netty.internal.tcnative.CertificateCallback
{
private final io.netty.handler.ssl.OpenSslEngineMap engineMap;
private final io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder;
void <init>(io.netty.handler.ssl.OpenSslEngineMap, io.netty.handler.ssl.OpenSslKeyMaterialManager)
{
io.netty.handler.ssl.OpenSslEngineMap v1;
io.netty.handler.ssl.OpenSslKeyMaterialManager v2;
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback;
v1 := @parameter0: io.netty.handler.ssl.OpenSslEngineMap;
v2 := @parameter1: io.netty.handler.ssl.OpenSslKeyMaterialManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback: io.netty.handler.ssl.OpenSslEngineMap engineMap> = v1;
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback: io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder> = v2;
return;
}
public void handle(long, byte[], byte[][]) throws java.lang.Exception
{
java.lang.Throwable v16;
byte[] v14, v2;
java.lang.Object[] v8;
javax.security.auth.x500.X500Principal v13;
io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback v0;
java.lang.String[] v7;
long v1;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v5;
javax.security.auth.x500.X500Principal[] v9;
int v10, v11, v12;
boolean v17;
io.netty.handler.ssl.OpenSslEngineMap v4;
io.netty.handler.ssl.OpenSslKeyMaterialManager v15;
java.util.Set v6;
byte[][] v3;
javax.net.ssl.SSLException v18;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback;
v1 := @parameter0: long;
v2 := @parameter1: byte[];
v3 := @parameter2: byte[][];
v4 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback: io.netty.handler.ssl.OpenSslEngineMap engineMap>;
v5 = interfaceinvoke v4.<io.netty.handler.ssl.OpenSslEngineMap: io.netty.handler.ssl.ReferenceCountedOpenSslEngine get(long)>(v1);
if v5 != null goto label1;
return;
label1:
v6 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback: java.util.Set supportedClientKeyTypes(byte[])>(v2);
v7 = newarray (java.lang.String)[0];
v8 = interfaceinvoke v6.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v7);
if v3 != null goto label2;
v9 = null;
goto label4;
label2:
v10 = lengthof v3;
v9 = newarray (javax.security.auth.x500.X500Principal)[v10];
v11 = 0;
label3:
v12 = lengthof v3;
if v11 >= v12 goto label4;
v13 = new javax.security.auth.x500.X500Principal;
v14 = v3[v11];
specialinvoke v13.<javax.security.auth.x500.X500Principal: void <init>(byte[])>(v14);
v9[v11] = v13;
v11 = v11 + 1;
goto label3;
label4:
v15 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback: io.netty.handler.ssl.OpenSslKeyMaterialManager keyManagerHolder>;
virtualinvoke v15.<io.netty.handler.ssl.OpenSslKeyMaterialManager: void setKeyMaterialClientSide(io.netty.handler.ssl.ReferenceCountedOpenSslEngine,java.lang.String[],javax.security.auth.x500.X500Principal[])>(v5, v8, v9);
label5:
goto label8;
label6:
v16 := @caughtexception;
virtualinvoke v5.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void initHandshakeException(java.lang.Throwable)>(v16);
v17 = v16 instanceof java.lang.Exception;
if v17 == 0 goto label7;
throw v16;
label7:
v18 = new javax.net.ssl.SSLException;
specialinvoke v18.<javax.net.ssl.SSLException: void <init>(java.lang.Throwable)>(v16);
throw v18;
label8:
return;
catch java.lang.Throwable from label1 to label5 with label6;
}
private static java.util.Set supportedClientKeyTypes(byte[])
{
byte[] v0;
java.util.Set v1;
java.util.HashSet v2;
byte v6;
int v3, v4, v5;
java.lang.String v7;
v0 := @parameter0: byte[];
if v0 != null goto label1;
v1 = <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: java.util.Set SUPPORTED_KEY_TYPES>;
return v1;
label1:
v2 = new java.util.HashSet;
v3 = lengthof v0;
specialinvoke v2.<java.util.HashSet: void <init>(int)>(v3);
v4 = lengthof v0;
v5 = 0;
label2:
if v5 >= v4 goto label4;
v6 = v0[v5];
v7 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext$OpenSslClientCertificateCallback: java.lang.String clientKeyType(byte)>(v6);
if v7 == null goto label3;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v7);
label3:
v5 = v5 + 1;
goto label2;
label4:
return v2;
}
private static java.lang.String clientKeyType(byte)
{
byte v0;
v0 := @parameter0: byte;
lookupswitch(v0)
{
case 1: goto label1;
case 3: goto label2;
case 64: goto label3;
case 65: goto label4;
case 66: goto label5;
default: goto label6;
};
label1:
return "RSA";
label2:
return "DH_RSA";
label3:
return "EC";
label4:
return "EC_RSA";
label5:
return "EC_EC";
label6:
return null;
}
}