final class io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
private final io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine;
private final long ssl;
private final io.netty.internal.tcnative.ResultCallback resultCallback;
void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine, long, io.netty.internal.tcnative.ResultCallback)
{
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v1;
long v2;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener v0;
io.netty.internal.tcnative.ResultCallback v3;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener;
v1 := @parameter0: io.netty.handler.ssl.ReferenceCountedOpenSslEngine;
v2 := @parameter1: long;
v3 := @parameter2: io.netty.internal.tcnative.ResultCallback;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine> = v1;
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: long ssl> = v2;
v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: io.netty.internal.tcnative.ResultCallback resultCallback> = v3;
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
java.lang.Throwable v2;
byte[] v4;
java.security.SignatureException v7;
long v10, v6;
io.netty.internal.tcnative.ResultCallback v5, v9;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v8;
java.lang.Object v3;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener v0;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
if v2 != null goto label4;
label1:
v3 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
v4 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslContext: byte[] verifyResult(byte[])>(v3);
v5 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: io.netty.internal.tcnative.ResultCallback resultCallback>;
v6 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: long ssl>;
interfaceinvoke v5.<io.netty.internal.tcnative.ResultCallback: void onSuccess(long,java.lang.Object)>(v6, v4);
label2:
return;
label3:
v7 := @caughtexception;
v2 = v7;
v8 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine>;
virtualinvoke v8.<io.netty.handler.ssl.ReferenceCountedOpenSslEngine: void initHandshakeException(java.lang.Throwable)>(v7);
label4:
v9 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: io.netty.internal.tcnative.ResultCallback resultCallback>;
v10 = v0.<io.netty.handler.ssl.ReferenceCountedOpenSslContext$AsyncPrivateKeyMethod$ResultCallbackListener: long ssl>;
interfaceinvoke v9.<io.netty.internal.tcnative.ResultCallback: void onError(long,java.lang.Throwable)>(v10, v2);
return;
catch java.security.SignatureException from label1 to label2 with label3;
}
}