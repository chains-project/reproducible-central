class io.netty.handler.ssl.SslHandler$10 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.util.concurrent.Future val$timeoutFuture;
final io.netty.channel.ChannelHandlerContext val$ctx;
final io.netty.channel.ChannelPromise val$promise;
final io.netty.handler.ssl.SslHandler this$0;
void <init>(io.netty.handler.ssl.SslHandler, io.netty.util.concurrent.Future, io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelHandlerContext v3;
io.netty.channel.ChannelPromise v4;
io.netty.handler.ssl.SslHandler$10 v0;
io.netty.handler.ssl.SslHandler v1;
io.netty.util.concurrent.Future v2;
v0 := @this: io.netty.handler.ssl.SslHandler$10;
v1 := @parameter0: io.netty.handler.ssl.SslHandler;
v2 := @parameter1: io.netty.util.concurrent.Future;
v3 := @parameter2: io.netty.channel.ChannelHandlerContext;
v4 := @parameter3: io.netty.channel.ChannelPromise;
v0.<io.netty.handler.ssl.SslHandler$10: io.netty.handler.ssl.SslHandler this$0> = v1;
v0.<io.netty.handler.ssl.SslHandler$10: io.netty.util.concurrent.Future val$timeoutFuture> = v2;
v0.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelHandlerContext val$ctx> = v3;
v0.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelPromise val$promise> = v4;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.util.concurrent.EventExecutor v16;
io.netty.handler.ssl.SslHandler$10$2 v22;
io.netty.handler.ssl.SslHandler$10$1 v17;
io.netty.util.concurrent.ScheduledFuture v19;
long v5;
io.netty.channel.ChannelHandlerContext v15, v7, v8;
byte v6;
io.netty.channel.ChannelPromise v11, v9;
io.netty.handler.ssl.SslHandler$10 v0;
boolean v14;
io.netty.channel.ChannelFuture v1, v10;
java.util.concurrent.TimeUnit v18;
io.netty.handler.ssl.SslHandler v12, v20, v4;
io.netty.handler.ssl.SslHandler$LazyChannelPromise v13, v21;
io.netty.util.concurrent.Future v2, v3;
v0 := @this: io.netty.handler.ssl.SslHandler$10;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.util.concurrent.Future val$timeoutFuture>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.util.concurrent.Future val$timeoutFuture>;
interfaceinvoke v3.<io.netty.util.concurrent.Future: boolean cancel(boolean)>(0);
label1:
v4 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.handler.ssl.SslHandler this$0>;
v5 = v4.<io.netty.handler.ssl.SslHandler: long closeNotifyReadTimeoutMillis>;
v6 = v5 cmp 0L;
if v6 > 0 goto label2;
v7 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelHandlerContext val$ctx>;
v8 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelHandlerContext val$ctx>;
v9 = interfaceinvoke v8.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v10 = interfaceinvoke v7.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v9);
v11 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelPromise val$promise>;
staticinvoke <io.netty.handler.ssl.SslHandler: void addCloseListener(io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise)>(v10, v11);
goto label5;
label2:
v12 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.handler.ssl.SslHandler this$0>;
v13 = v12.<io.netty.handler.ssl.SslHandler: io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise>;
v14 = virtualinvoke v13.<io.netty.handler.ssl.SslHandler$LazyChannelPromise: boolean isDone()>();
if v14 != 0 goto label3;
v15 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.channel.ChannelHandlerContext val$ctx>;
v16 = interfaceinvoke v15.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v17 = new io.netty.handler.ssl.SslHandler$10$1;
specialinvoke v17.<io.netty.handler.ssl.SslHandler$10$1: void <init>(io.netty.handler.ssl.SslHandler$10,long)>(v0, v5);
v18 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v19 = interfaceinvoke v16.<io.netty.util.concurrent.EventExecutor: io.netty.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(v17, v5, v18);
goto label4;
label3:
v19 = null;
label4:
v20 = v0.<io.netty.handler.ssl.SslHandler$10: io.netty.handler.ssl.SslHandler this$0>;
v21 = v20.<io.netty.handler.ssl.SslHandler: io.netty.handler.ssl.SslHandler$LazyChannelPromise sslClosePromise>;
v22 = new io.netty.handler.ssl.SslHandler$10$2;
specialinvoke v22.<io.netty.handler.ssl.SslHandler$10$2: void <init>(io.netty.handler.ssl.SslHandler$10,io.netty.util.concurrent.Future)>(v0, v19);
virtualinvoke v21.<io.netty.handler.ssl.SslHandler$LazyChannelPromise: io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)>(v22);
label5:
return;
}
}