final class io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue extends io.netty.channel.AbstractCoalescingBufferQueue
{
final io.netty.handler.ssl.SslHandler this$0;
void <init>(io.netty.handler.ssl.SslHandler, io.netty.channel.Channel, int)
{
io.netty.channel.Channel v2;
io.netty.handler.ssl.SslHandler v1;
int v3;
io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue v0;
v0 := @this: io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue;
v1 := @parameter0: io.netty.handler.ssl.SslHandler;
v2 := @parameter1: io.netty.channel.Channel;
v3 := @parameter2: int;
v0.<io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue: io.netty.handler.ssl.SslHandler this$0> = v1;
specialinvoke v0.<io.netty.channel.AbstractCoalescingBufferQueue: void <init>(io.netty.channel.Channel,int)>(v2, v3);
return;
}
protected io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue v0;
io.netty.buffer.ByteBuf v12, v2, v3, v9;
io.netty.handler.ssl.SslHandler v4;
int v5, v7, v8;
boolean v10, v11, v6;
v0 := @this: io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue: io.netty.handler.ssl.SslHandler this$0>;
v5 = v4.<io.netty.handler.ssl.SslHandler: int wrapDataSize>;
v6 = v2 instanceof io.netty.buffer.CompositeByteBuf;
if v6 == 0 goto label3;
v7 = virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: int numComponents()>();
if v7 == 0 goto label1;
v8 = v7 - 1;
v9 = virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.ByteBuf internalComponent(int)>(v8);
v10 = staticinvoke <io.netty.handler.ssl.SslHandler: boolean attemptCopyToCumulation(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int)>(v9, v3, v5);
if v10 != 0 goto label2;
label1:
virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf)>(1, v3);
label2:
return v2;
label3:
v11 = staticinvoke <io.netty.handler.ssl.SslHandler: boolean attemptCopyToCumulation(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf,int)>(v2, v3, v5);
if v11 == 0 goto label4;
v12 = v2;
goto label5;
label4:
v12 = virtualinvoke v0.<io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue: io.netty.buffer.ByteBuf copyAndCompose(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v1, v2, v3);
label5:
return v12;
}
protected io.netty.buffer.ByteBuf composeFirst(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf)
{
java.lang.Throwable v9;
io.netty.buffer.ByteBufAllocator v1;
io.netty.handler.ssl.SslHandler$SslEngineType v5;
io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue v0;
io.netty.buffer.ByteBuf v2;
io.netty.handler.ssl.SslHandler v4;
int v7, v8;
boolean v3, v6;
v0 := @this: io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = v2 instanceof io.netty.buffer.CompositeByteBuf;
if v3 == 0 goto label6;
v4 = v0.<io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue: io.netty.handler.ssl.SslHandler this$0>;
v5 = v4.<io.netty.handler.ssl.SslHandler: io.netty.handler.ssl.SslHandler$SslEngineType engineType>;
v6 = v5.<io.netty.handler.ssl.SslHandler$SslEngineType: boolean wantsDirectBuffer>;
if v6 == 0 goto label1;
v7 = virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: int readableBytes()>();
v2 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int)>(v7);
goto label2;
label1:
v8 = virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: int readableBytes()>();
v2 = interfaceinvoke v1.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(v8);
label2:
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v2);
label3:
goto label5;
label4:
v9 := @caughtexception;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v9);
label5:
virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: boolean release()>();
label6:
return v2;
catch java.lang.Throwable from label2 to label3 with label4;
}
protected io.netty.buffer.ByteBuf removeEmptyValue()
{
io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue v0;
v0 := @this: io.netty.handler.ssl.SslHandler$SslHandlerCoalescingBufferQueue;
return null;
}
}