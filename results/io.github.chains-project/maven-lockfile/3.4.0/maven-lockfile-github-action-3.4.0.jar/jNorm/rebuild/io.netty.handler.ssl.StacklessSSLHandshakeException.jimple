final class io.netty.handler.ssl.StacklessSSLHandshakeException extends javax.net.ssl.SSLHandshakeException
{
private static final long serialVersionUID;
private void <init>(java.lang.String)
{
io.netty.handler.ssl.StacklessSSLHandshakeException v0;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.StacklessSSLHandshakeException;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>(v1);
return;
}
public java.lang.Throwable fillInStackTrace()
{
io.netty.handler.ssl.StacklessSSLHandshakeException v0;
v0 := @this: io.netty.handler.ssl.StacklessSSLHandshakeException;
return v0;
}
static io.netty.handler.ssl.StacklessSSLHandshakeException newInstance(java.lang.String, java.lang.Class, java.lang.String)
{
java.lang.Throwable v4;
io.netty.handler.ssl.StacklessSSLHandshakeException v3;
java.lang.Class v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.lang.String;
v3 = new io.netty.handler.ssl.StacklessSSLHandshakeException;
specialinvoke v3.<io.netty.handler.ssl.StacklessSSLHandshakeException: void <init>(java.lang.String)>(v0);
v4 = staticinvoke <io.netty.util.internal.ThrowableUtil: java.lang.Throwable unknownStackTrace(java.lang.Throwable,java.lang.Class,java.lang.String)>(v3, v1, v2);
return v4;
}
}