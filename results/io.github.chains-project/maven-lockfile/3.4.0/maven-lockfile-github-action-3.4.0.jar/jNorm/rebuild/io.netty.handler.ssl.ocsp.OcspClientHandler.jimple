public abstract class io.netty.handler.ssl.ocsp.OcspClientHandler extends io.netty.channel.ChannelInboundHandlerAdapter
{
private final io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine;
protected void <init>(io.netty.handler.ssl.ReferenceCountedOpenSslEngine)
{
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v1;
io.netty.handler.ssl.ocsp.OcspClientHandler v0;
java.lang.Object v2;
v0 := @this: io.netty.handler.ssl.ocsp.OcspClientHandler;
v1 := @parameter0: io.netty.handler.ssl.ReferenceCountedOpenSslEngine;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "engine");
v0.<io.netty.handler.ssl.ocsp.OcspClientHandler: io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine> = v2;
return;
}
protected abstract boolean verify(io.netty.channel.ChannelHandlerContext, io.netty.handler.ssl.ReferenceCountedOpenSslEngine) throws java.lang.Exception;
public void userEventTriggered(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
javax.net.ssl.SSLHandshakeException v8;
io.netty.handler.ssl.ocsp.OcspClientHandler v0;
io.netty.channel.ChannelPipeline v4;
io.netty.handler.ssl.ReferenceCountedOpenSslEngine v6;
io.netty.channel.ChannelHandlerContext v1;
java.lang.Object v2;
boolean v3, v5, v7;
v0 := @this: io.netty.handler.ssl.ocsp.OcspClientHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.ssl.SslHandshakeCompletionEvent;
if v3 == 0 goto label1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v4.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
v5 = virtualinvoke v2.<io.netty.handler.ssl.SslHandshakeCompletionEvent: boolean isSuccess()>();
if v5 == 0 goto label1;
v6 = v0.<io.netty.handler.ssl.ocsp.OcspClientHandler: io.netty.handler.ssl.ReferenceCountedOpenSslEngine engine>;
v7 = virtualinvoke v0.<io.netty.handler.ssl.ocsp.OcspClientHandler: boolean verify(io.netty.channel.ChannelHandlerContext,io.netty.handler.ssl.ReferenceCountedOpenSslEngine)>(v1, v6);
if v7 != 0 goto label1;
v8 = new javax.net.ssl.SSLHandshakeException;
specialinvoke v8.<javax.net.ssl.SSLHandshakeException: void <init>(java.lang.String)>("Bad OCSP response");
throw v8;
label1:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireUserEventTriggered(java.lang.Object)>(v2);
return;
}
}