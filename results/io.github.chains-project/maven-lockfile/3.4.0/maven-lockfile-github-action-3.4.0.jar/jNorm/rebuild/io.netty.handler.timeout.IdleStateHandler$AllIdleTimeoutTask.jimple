final class io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask extends io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask
{
final io.netty.handler.timeout.IdleStateHandler this$0;
void <init>(io.netty.handler.timeout.IdleStateHandler, io.netty.channel.ChannelHandlerContext)
{
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.timeout.IdleStateHandler v1;
io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask v0;
v0 := @this: io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask;
v1 := @parameter0: io.netty.handler.timeout.IdleStateHandler;
v2 := @parameter1: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0> = v1;
specialinvoke v0.<io.netty.handler.timeout.IdleStateHandler$AbstractIdleTask: void <init>(io.netty.channel.ChannelHandlerContext)>(v2);
return;
}
protected void run(io.netty.channel.ChannelHandlerContext)
{
byte v14;
io.netty.handler.timeout.IdleState v27;
boolean v22, v25, v5;
io.netty.handler.timeout.IdleStateEvent v28;
java.lang.Throwable v30;
long v11, v12, v13, v18, v3, v7, v9;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask v0;
java.util.concurrent.TimeUnit v19, v33;
io.netty.handler.timeout.IdleStateHandler v10, v15, v16, v17, v2, v21, v23, v24, v26, v29, v31, v32, v4, v6, v8;
io.netty.util.concurrent.Future v20, v34;
v0 := @this: io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v3 = v2.<io.netty.handler.timeout.IdleStateHandler: long allIdleTimeNanos>;
v4 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v5 = v4.<io.netty.handler.timeout.IdleStateHandler: boolean reading>;
if v5 != 0 goto label1;
v6 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v7 = virtualinvoke v6.<io.netty.handler.timeout.IdleStateHandler: long ticksInNanos()>();
v8 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v9 = v8.<io.netty.handler.timeout.IdleStateHandler: long lastReadTime>;
v10 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v11 = v10.<io.netty.handler.timeout.IdleStateHandler: long lastWriteTime>;
v12 = staticinvoke <java.lang.Math: long max(long,long)>(v9, v11);
v13 = v7 - v12;
v3 = v3 - v13;
label1:
v14 = v3 cmp 0L;
if v14 > 0 goto label7;
v15 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v16 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v17 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v18 = v17.<io.netty.handler.timeout.IdleStateHandler: long allIdleTimeNanos>;
v19 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
v20 = virtualinvoke v16.<io.netty.handler.timeout.IdleStateHandler: io.netty.util.concurrent.Future schedule(io.netty.channel.ChannelHandlerContext,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(v1, v0, v18, v19);
v15.<io.netty.handler.timeout.IdleStateHandler: io.netty.util.concurrent.Future allIdleTimeout> = v20;
v21 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v22 = v21.<io.netty.handler.timeout.IdleStateHandler: boolean firstAllIdleEvent>;
v23 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v23.<io.netty.handler.timeout.IdleStateHandler: boolean firstAllIdleEvent> = 0;
label2:
v24 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v25 = specialinvoke v24.<io.netty.handler.timeout.IdleStateHandler: boolean hasOutputChanged(io.netty.channel.ChannelHandlerContext,boolean)>(v1, v22);
if v25 == 0 goto label4;
label3:
return;
label4:
v26 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v27 = <io.netty.handler.timeout.IdleState: io.netty.handler.timeout.IdleState ALL_IDLE>;
v28 = virtualinvoke v26.<io.netty.handler.timeout.IdleStateHandler: io.netty.handler.timeout.IdleStateEvent newIdleStateEvent(io.netty.handler.timeout.IdleState,boolean)>(v27, v22);
v29 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
virtualinvoke v29.<io.netty.handler.timeout.IdleStateHandler: void channelIdle(io.netty.channel.ChannelHandlerContext,io.netty.handler.timeout.IdleStateEvent)>(v1, v28);
label5:
goto label8;
label6:
v30 := @caughtexception;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v30);
goto label8;
label7:
v31 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v32 = v0.<io.netty.handler.timeout.IdleStateHandler$AllIdleTimeoutTask: io.netty.handler.timeout.IdleStateHandler this$0>;
v33 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
v34 = virtualinvoke v32.<io.netty.handler.timeout.IdleStateHandler: io.netty.util.concurrent.Future schedule(io.netty.channel.ChannelHandlerContext,java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(v1, v0, v3, v33);
v31.<io.netty.handler.timeout.IdleStateHandler: io.netty.util.concurrent.Future allIdleTimeout> = v34;
label8:
return;
catch java.lang.Throwable from label2 to label3 with label6;
catch java.lang.Throwable from label4 to label5 with label6;
}
}