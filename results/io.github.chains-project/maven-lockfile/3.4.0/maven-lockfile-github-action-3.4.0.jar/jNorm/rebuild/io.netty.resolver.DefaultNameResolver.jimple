public class io.netty.resolver.DefaultNameResolver extends io.netty.resolver.InetNameResolver
{
public void <init>(io.netty.util.concurrent.EventExecutor)
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.resolver.DefaultNameResolver v0;
v0 := @this: io.netty.resolver.DefaultNameResolver;
v1 := @parameter0: io.netty.util.concurrent.EventExecutor;
specialinvoke v0.<io.netty.resolver.InetNameResolver: void <init>(io.netty.util.concurrent.EventExecutor)>(v1);
return;
}
protected void doResolve(java.lang.String, io.netty.util.concurrent.Promise) throws java.lang.Exception
{
java.net.InetAddress v3;
io.netty.util.concurrent.Promise v2;
io.netty.resolver.DefaultNameResolver v0;
java.lang.String v1;
java.net.UnknownHostException v4;
v0 := @this: io.netty.resolver.DefaultNameResolver;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.util.concurrent.Promise;
label1:
v3 = staticinvoke <io.netty.util.internal.SocketUtils: java.net.InetAddress addressByName(java.lang.String)>(v1);
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v3);
label2:
goto label4;
label3:
v4 := @caughtexception;
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v4);
label4:
return;
catch java.net.UnknownHostException from label1 to label2 with label3;
}
protected void doResolveAll(java.lang.String, io.netty.util.concurrent.Promise) throws java.lang.Exception
{
java.util.List v4;
io.netty.util.concurrent.Promise v2;
io.netty.resolver.DefaultNameResolver v0;
java.net.InetAddress[] v3;
java.lang.String v1;
java.net.UnknownHostException v5;
v0 := @this: io.netty.resolver.DefaultNameResolver;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.util.concurrent.Promise;
label1:
v3 = staticinvoke <io.netty.util.internal.SocketUtils: java.net.InetAddress[] allAddressesByName(java.lang.String)>(v1);
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v4);
label2:
goto label4;
label3:
v5 := @caughtexception;
interfaceinvoke v2.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v5);
label4:
return;
catch java.net.UnknownHostException from label1 to label2 with label3;
}
}