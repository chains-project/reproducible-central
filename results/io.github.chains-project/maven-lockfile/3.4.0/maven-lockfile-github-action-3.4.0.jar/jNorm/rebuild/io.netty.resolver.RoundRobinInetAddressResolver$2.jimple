class io.netty.resolver.RoundRobinInetAddressResolver$2 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.util.concurrent.Promise val$promise;
final io.netty.resolver.RoundRobinInetAddressResolver this$0;
void <init>(io.netty.resolver.RoundRobinInetAddressResolver, io.netty.util.concurrent.Promise)
{
io.netty.resolver.RoundRobinInetAddressResolver v1;
io.netty.resolver.RoundRobinInetAddressResolver$2 v0;
io.netty.util.concurrent.Promise v2;
v0 := @this: io.netty.resolver.RoundRobinInetAddressResolver$2;
v1 := @parameter0: io.netty.resolver.RoundRobinInetAddressResolver;
v2 := @parameter1: io.netty.util.concurrent.Promise;
v0.<io.netty.resolver.RoundRobinInetAddressResolver$2: io.netty.resolver.RoundRobinInetAddressResolver this$0> = v1;
v0.<io.netty.resolver.RoundRobinInetAddressResolver$2: io.netty.util.concurrent.Promise val$promise> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v11;
io.netty.util.concurrent.Promise v10, v8, v9;
io.netty.resolver.RoundRobinInetAddressResolver$2 v0;
java.util.ArrayList v5;
int v6, v7;
java.lang.Object v3;
io.netty.util.concurrent.Future v1;
boolean v2, v4;
v0 := @this: io.netty.resolver.RoundRobinInetAddressResolver$2;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
v4 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>(java.util.Collection)>(v3);
v6 = interfaceinvoke v3.<java.util.List: int size()>();
v7 = staticinvoke <io.netty.resolver.RoundRobinInetAddressResolver: int randomIndex(int)>(v6);
staticinvoke <java.util.Collections: void rotate(java.util.List,int)>(v5, v7);
v8 = v0.<io.netty.resolver.RoundRobinInetAddressResolver$2: io.netty.util.concurrent.Promise val$promise>;
interfaceinvoke v8.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v5);
goto label3;
label1:
v9 = v0.<io.netty.resolver.RoundRobinInetAddressResolver$2: io.netty.util.concurrent.Promise val$promise>;
interfaceinvoke v9.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(v3);
goto label3;
label2:
v10 = v0.<io.netty.resolver.RoundRobinInetAddressResolver$2: io.netty.util.concurrent.Promise val$promise>;
v11 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
interfaceinvoke v10.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v11);
label3:
return;
}
}