class io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1 extends io.netty.resolver.dns.Cache
{
final io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache this$0;
void <init>(io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache)
{
io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache v1;
io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1 v0;
v0 := @this: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1;
v1 := @parameter0: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache;
v0.<io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache this$0> = v1;
specialinvoke v0.<io.netty.resolver.dns.Cache: void <init>()>();
return;
}
protected boolean shouldReplaceAll(java.net.InetSocketAddress)
{
io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1 v0;
java.net.InetSocketAddress v1;
v0 := @this: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1;
v1 := @parameter0: java.net.InetSocketAddress;
return 0;
}
protected boolean equals(java.net.InetSocketAddress, java.net.InetSocketAddress)
{
io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1 v0;
java.net.InetSocketAddress v1, v2;
int v3;
java.lang.String v4, v5, v7, v8;
boolean v6, v9;
v0 := @this: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1;
v1 := @parameter0: java.net.InetSocketAddress;
v2 := @parameter1: java.net.InetSocketAddress;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v3 < 7 goto label1;
v4 = virtualinvoke v1.<java.net.InetSocketAddress: java.lang.String getHostString()>();
v5 = virtualinvoke v2.<java.net.InetSocketAddress: java.lang.String getHostString()>();
v6 = virtualinvoke v4.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v5);
return v6;
label1:
v7 = virtualinvoke v1.<java.net.InetSocketAddress: java.lang.String getHostName()>();
v8 = virtualinvoke v2.<java.net.InetSocketAddress: java.lang.String getHostName()>();
v9 = virtualinvoke v7.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v8);
return v9;
}
protected void sortEntries(java.lang.String, java.util.List)
{
java.util.List v2;
io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache v3, v5;
io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1 v0;
java.lang.String v1;
java.util.Comparator v4, v6;
v0 := @this: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 = v0.<io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache this$0>;
v4 = v3.<io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache: java.util.Comparator comparator>;
if v4 == null goto label1;
v5 = v0.<io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache$1: io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache this$0>;
v6 = v5.<io.netty.resolver.dns.DefaultAuthoritativeDnsServerCache: java.util.Comparator comparator>;
staticinvoke <java.util.Collections: void sort(java.util.List,java.util.Comparator)>(v2, v6);
label1:
return;
}
}