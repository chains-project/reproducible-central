final class io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry extends java.lang.Object implements io.netty.resolver.dns.DnsCacheEntry
{
private final java.lang.String hostname;
private final java.net.InetAddress address;
private final java.lang.Throwable cause;
private final int hash;
void <init>(java.lang.String, java.net.InetAddress)
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
java.net.InetAddress v2;
int v3;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.net.InetAddress;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.String hostname> = v1;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address> = v2;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause> = null;
v3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(v0);
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash> = v3;
return;
}
void <init>(java.lang.String, java.lang.Throwable)
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
java.lang.Throwable v2;
int v3;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.String hostname> = v1;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause> = v2;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address> = null;
v3 = staticinvoke <java.lang.System: int identityHashCode(java.lang.Object)>(v0);
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash> = v3;
return;
}
private void <init>(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry)
{
java.lang.Throwable v3, v5, v6;
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0, v1;
java.net.InetAddress v4;
int v7;
java.lang.String v2;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 := @parameter0: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.String hostname>;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.String hostname> = v2;
v3 = v1.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause>;
if v3 != null goto label1;
v4 = v1.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address>;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address> = v4;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause> = null;
goto label2;
label1:
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address> = null;
v5 = v1.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause>;
v6 = staticinvoke <io.netty.resolver.dns.DefaultDnsCache: java.lang.Throwable copyThrowable(java.lang.Throwable)>(v5);
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause> = v6;
label2:
v7 = v1.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash>;
v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash> = v7;
return;
}
public java.net.InetAddress address()
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
java.net.InetAddress v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address>;
return v1;
}
public java.lang.Throwable cause()
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
java.lang.Throwable v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause>;
return v1;
}
java.lang.String hostname()
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.String hostname>;
return v1;
}
public java.lang.String toString()
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
java.lang.Throwable v1, v3;
java.net.InetAddress v5;
java.lang.String v2, v4, v6;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause>;
if v1 == null goto label1;
v2 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.String hostname>;
v3 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Throwable)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/\u0001");
return v4;
label1:
v5 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.net.InetAddress address>;
v6 = virtualinvoke v5.<java.net.InetAddress: java.lang.String toString()>();
return v6;
}
public int hashCode()
{
int v1;
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash>;
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0;
int v3, v4;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
if v2 == 0 goto label1;
v3 = v1.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash>;
v4 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: int hash>;
if v3 != v4 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
io.netty.resolver.dns.DnsCacheEntry copyIfNeeded()
{
io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry v0, v2;
java.lang.Throwable v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: java.lang.Throwable cause>;
if v1 != null goto label1;
return v0;
label1:
v2 = new io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry;
specialinvoke v2.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: void <init>(io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry)>(v0);
return v2;
}
}