final class io.netty.resolver.dns.DnsAddressDecoder extends java.lang.Object
{
private static final int INADDRSZ4;
private static final int INADDRSZ6;
static java.net.InetAddress decodeAddress(io.netty.handler.codec.dns.DnsRecord, java.lang.String, boolean)
{
byte[] v6;
io.netty.handler.codec.dns.DnsRecord v0;
java.lang.Error v11;
java.net.UnknownHostException v10;
java.net.InetAddress v9;
io.netty.buffer.ByteBuf v4;
int v5, v7;
java.lang.String v1, v8;
boolean v2, v3;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecord;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 = v0 instanceof io.netty.handler.codec.dns.DnsRawRecord;
if v3 != 0 goto label1;
return null;
label1:
v4 = interfaceinvoke v0.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
v5 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v5 == 4 goto label2;
if v5 == 16 goto label2;
return null;
label2:
v6 = newarray (byte)[v5];
v7 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf getBytes(int,byte[])>(v7, v6);
label3:
if v2 == 0 goto label4;
v8 = staticinvoke <java.net.IDN: java.lang.String toUnicode(java.lang.String)>(v1);
goto label5;
label4:
v8 = v1;
label5:
v9 = staticinvoke <java.net.InetAddress: java.net.InetAddress getByAddress(java.lang.String,byte[])>(v8, v6);
label6:
return v9;
label7:
v10 := @caughtexception;
v11 = new java.lang.Error;
specialinvoke v11.<java.lang.Error: void <init>(java.lang.Throwable)>(v10);
throw v11;
catch java.net.UnknownHostException from label3 to label6 with label7;
}
private void <init>()
{
io.netty.resolver.dns.DnsAddressDecoder v0;
v0 := @this: io.netty.resolver.dns.DnsAddressDecoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}