public class io.netty.resolver.dns.DnsAddressResolverGroup extends io.netty.resolver.AddressResolverGroup
{
private final io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder;
private final java.util.concurrent.ConcurrentMap resolvesInProgress;
private final java.util.concurrent.ConcurrentMap resolveAllsInProgress;
public void <init>(io.netty.resolver.dns.DnsNameResolverBuilder)
{
io.netty.resolver.dns.DnsNameResolverBuilder v1, v4;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
java.util.concurrent.ConcurrentMap v2, v3;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolverBuilder;
specialinvoke v0.<io.netty.resolver.AddressResolverGroup: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolvesInProgress> = v2;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolveAllsInProgress> = v3;
v4 = virtualinvoke v1.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder copy()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder> = v4;
return;
}
public void <init>(java.lang.Class, io.netty.resolver.dns.DnsServerAddressStreamProvider)
{
io.netty.resolver.dns.DnsNameResolverBuilder v5, v6, v7;
io.netty.resolver.dns.DnsServerAddressStreamProvider v2;
java.util.concurrent.ConcurrentMap v3, v4;
java.lang.Class v1;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: io.netty.resolver.dns.DnsServerAddressStreamProvider;
specialinvoke v0.<io.netty.resolver.AddressResolverGroup: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolvesInProgress> = v3;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolveAllsInProgress> = v4;
v5 = new io.netty.resolver.dns.DnsNameResolverBuilder;
specialinvoke v5.<io.netty.resolver.dns.DnsNameResolverBuilder: void <init>()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder> = v5;
v6 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder>;
v7 = virtualinvoke v6.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder channelType(java.lang.Class)>(v1);
virtualinvoke v7.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder nameServerProvider(io.netty.resolver.dns.DnsServerAddressStreamProvider)>(v2);
return;
}
public void <init>(io.netty.channel.ChannelFactory, io.netty.resolver.dns.DnsServerAddressStreamProvider)
{
io.netty.resolver.dns.DnsNameResolverBuilder v5, v6, v7;
io.netty.resolver.dns.DnsServerAddressStreamProvider v2;
java.util.concurrent.ConcurrentMap v3, v4;
io.netty.channel.ChannelFactory v1;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: io.netty.channel.ChannelFactory;
v2 := @parameter1: io.netty.resolver.dns.DnsServerAddressStreamProvider;
specialinvoke v0.<io.netty.resolver.AddressResolverGroup: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolvesInProgress> = v3;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent: java.util.concurrent.ConcurrentMap newConcurrentHashMap()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolveAllsInProgress> = v4;
v5 = new io.netty.resolver.dns.DnsNameResolverBuilder;
specialinvoke v5.<io.netty.resolver.dns.DnsNameResolverBuilder: void <init>()>();
v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder> = v5;
v6 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder>;
v7 = virtualinvoke v6.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder channelFactory(io.netty.channel.ChannelFactory)>(v1);
virtualinvoke v7.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder nameServerProvider(io.netty.resolver.dns.DnsServerAddressStreamProvider)>(v2);
return;
}
protected final io.netty.resolver.AddressResolver newResolver(io.netty.util.concurrent.EventExecutor) throws java.lang.Exception
{
io.netty.util.concurrent.EventExecutor v1;
io.netty.resolver.AddressResolver v13;
java.lang.IllegalStateException v3;
io.netty.resolver.dns.DnsNameResolverBuilder v11, v7, v9;
io.netty.resolver.dns.DnsServerAddressStreamProvider v12;
io.netty.channel.EventLoop v8;
io.netty.channel.ChannelFactory v10;
java.lang.String v4, v5, v6;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
boolean v2;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: io.netty.util.concurrent.EventExecutor;
v2 = v1 instanceof io.netty.channel.EventLoop;
if v2 != 0 goto label1;
v3 = new java.lang.IllegalStateException;
v4 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v1);
v5 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Class)>(class "Lio/netty/channel/EventLoop;");
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported executor type: \u0001 (expected: \u0001");
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder>;
v8 = v7.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.channel.EventLoop eventLoop>;
if v8 == null goto label2;
v1 = v8;
label2:
v9 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder>;
v10 = virtualinvoke v9.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.channel.ChannelFactory channelFactory()>();
v11 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder>;
v12 = virtualinvoke v11.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsServerAddressStreamProvider nameServerProvider()>();
v13 = virtualinvoke v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.AddressResolver newResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider)>(v1, v10, v12);
return v13;
}
protected io.netty.resolver.AddressResolver newResolver(io.netty.channel.EventLoop, io.netty.channel.ChannelFactory, io.netty.resolver.dns.DnsServerAddressStreamProvider) throws java.lang.Exception
{
io.netty.resolver.dns.InflightNameResolver v4;
io.netty.resolver.AddressResolver v8;
io.netty.resolver.NameResolver v5;
io.netty.resolver.dns.DnsServerAddressStreamProvider v3;
io.netty.channel.EventLoop v1;
java.util.concurrent.ConcurrentMap v6, v7;
io.netty.channel.ChannelFactory v2;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: io.netty.channel.EventLoop;
v2 := @parameter1: io.netty.channel.ChannelFactory;
v3 := @parameter2: io.netty.resolver.dns.DnsServerAddressStreamProvider;
v4 = new io.netty.resolver.dns.InflightNameResolver;
v5 = virtualinvoke v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.NameResolver newNameResolver(io.netty.channel.EventLoop,io.netty.channel.ChannelFactory,io.netty.resolver.dns.DnsServerAddressStreamProvider)>(v1, v2, v3);
v6 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolvesInProgress>;
v7 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: java.util.concurrent.ConcurrentMap resolveAllsInProgress>;
specialinvoke v4.<io.netty.resolver.dns.InflightNameResolver: void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver,java.util.concurrent.ConcurrentMap,java.util.concurrent.ConcurrentMap)>(v1, v5, v6, v7);
v8 = virtualinvoke v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.AddressResolver newAddressResolver(io.netty.channel.EventLoop,io.netty.resolver.NameResolver)>(v1, v4);
return v8;
}
protected io.netty.resolver.NameResolver newNameResolver(io.netty.channel.EventLoop, io.netty.channel.ChannelFactory, io.netty.resolver.dns.DnsServerAddressStreamProvider) throws java.lang.Exception
{
io.netty.resolver.dns.DnsNameResolverBuilder v4, v5, v6, v7, v8;
io.netty.resolver.dns.DnsNameResolver v9;
io.netty.resolver.dns.DnsServerAddressStreamProvider v3;
io.netty.channel.EventLoop v1;
io.netty.channel.ChannelFactory v2;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: io.netty.channel.EventLoop;
v2 := @parameter1: io.netty.channel.ChannelFactory;
v3 := @parameter2: io.netty.resolver.dns.DnsServerAddressStreamProvider;
v4 = v0.<io.netty.resolver.dns.DnsAddressResolverGroup: io.netty.resolver.dns.DnsNameResolverBuilder dnsResolverBuilder>;
v5 = virtualinvoke v4.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder copy()>();
v6 = virtualinvoke v5.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder eventLoop(io.netty.channel.EventLoop)>(v1);
v7 = virtualinvoke v6.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder channelFactory(io.netty.channel.ChannelFactory)>(v2);
v8 = virtualinvoke v7.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolverBuilder nameServerProvider(io.netty.resolver.dns.DnsServerAddressStreamProvider)>(v3);
v9 = virtualinvoke v8.<io.netty.resolver.dns.DnsNameResolverBuilder: io.netty.resolver.dns.DnsNameResolver build()>();
return v9;
}
protected io.netty.resolver.AddressResolver newAddressResolver(io.netty.channel.EventLoop, io.netty.resolver.NameResolver) throws java.lang.Exception
{
io.netty.resolver.InetSocketAddressResolver v3;
io.netty.resolver.NameResolver v2;
io.netty.channel.EventLoop v1;
io.netty.resolver.dns.DnsAddressResolverGroup v0;
v0 := @this: io.netty.resolver.dns.DnsAddressResolverGroup;
v1 := @parameter0: io.netty.channel.EventLoop;
v2 := @parameter1: io.netty.resolver.NameResolver;
v3 = new io.netty.resolver.InetSocketAddressResolver;
specialinvoke v3.<io.netty.resolver.InetSocketAddressResolver: void <init>(io.netty.util.concurrent.EventExecutor,io.netty.resolver.NameResolver)>(v1, v2);
return v3;
}
}