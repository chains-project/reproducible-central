class io.netty.resolver.dns.DnsNameResolver$4 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.resolver.dns.DnsNameResolver this$0;
void <init>(io.netty.resolver.dns.DnsNameResolver)
{
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.resolver.dns.DnsNameResolver$4 v0;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$4;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v0.<io.netty.resolver.dns.DnsNameResolver$4: io.netty.resolver.dns.DnsNameResolver this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
java.lang.Throwable v2;
io.netty.resolver.dns.DnsNameResolver v3;
io.netty.resolver.dns.DnsNameResolver$4 v0;
io.netty.util.concurrent.Promise v4;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$4;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
if v2 == null goto label1;
v3 = v0.<io.netty.resolver.dns.DnsNameResolver$4: io.netty.resolver.dns.DnsNameResolver this$0>;
v4 = v3.<io.netty.resolver.dns.DnsNameResolver: io.netty.util.concurrent.Promise channelReadyPromise>;
interfaceinvoke v4.<io.netty.util.concurrent.Promise: boolean tryFailure(java.lang.Throwable)>(v2);
label1:
return;
}
}