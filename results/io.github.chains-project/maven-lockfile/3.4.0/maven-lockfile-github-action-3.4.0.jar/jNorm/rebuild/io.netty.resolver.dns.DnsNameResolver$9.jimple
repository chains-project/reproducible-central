class io.netty.resolver.dns.DnsNameResolver$9 extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
final java.lang.String val$hostname;
final io.netty.resolver.dns.DnsNameResolver this$0;
void <init>(io.netty.resolver.dns.DnsNameResolver, java.lang.String)
{
io.netty.resolver.dns.DnsNameResolver v1;
java.lang.String v2;
io.netty.resolver.dns.DnsNameResolver$9 v0;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$9;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: java.lang.String;
v0.<io.netty.resolver.dns.DnsNameResolver$9: io.netty.resolver.dns.DnsNameResolver this$0> = v1;
v0.<io.netty.resolver.dns.DnsNameResolver$9: java.lang.String val$hostname> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
io.netty.resolver.dns.DnsNameResolver v2;
io.netty.resolver.dns.DnsNameResolver$9 v0;
java.util.Map v3;
java.lang.String v4;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$9;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.resolver.dns.DnsNameResolver$9: io.netty.resolver.dns.DnsNameResolver this$0>;
v3 = v2.<io.netty.resolver.dns.DnsNameResolver: java.util.Map inflightLookups>;
v4 = v0.<io.netty.resolver.dns.DnsNameResolver$9: java.lang.String val$hostname>;
interfaceinvoke v3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v4);
return;
}
}