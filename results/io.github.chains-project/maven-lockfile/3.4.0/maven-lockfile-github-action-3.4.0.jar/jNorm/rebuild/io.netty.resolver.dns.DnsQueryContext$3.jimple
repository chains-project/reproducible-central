class io.netty.resolver.dns.DnsQueryContext$3 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.channel.ChannelFuture val$writeFuture;
final io.netty.resolver.dns.DnsQueryContext this$0;
void <init>(io.netty.resolver.dns.DnsQueryContext, io.netty.channel.ChannelFuture)
{
io.netty.resolver.dns.DnsQueryContext v1;
io.netty.resolver.dns.DnsQueryContext$3 v0;
io.netty.channel.ChannelFuture v2;
v0 := @this: io.netty.resolver.dns.DnsQueryContext$3;
v1 := @parameter0: io.netty.resolver.dns.DnsQueryContext;
v2 := @parameter1: io.netty.channel.ChannelFuture;
v0.<io.netty.resolver.dns.DnsQueryContext$3: io.netty.resolver.dns.DnsQueryContext this$0> = v1;
v0.<io.netty.resolver.dns.DnsQueryContext$3: io.netty.channel.ChannelFuture val$writeFuture> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.resolver.dns.DnsQueryContext$3 v0;
io.netty.resolver.dns.DnsQueryContext v2;
io.netty.channel.ChannelFuture v1, v3;
v0 := @this: io.netty.resolver.dns.DnsQueryContext$3;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.resolver.dns.DnsQueryContext$3: io.netty.resolver.dns.DnsQueryContext this$0>;
v3 = v0.<io.netty.resolver.dns.DnsQueryContext$3: io.netty.channel.ChannelFuture val$writeFuture>;
specialinvoke v2.<io.netty.resolver.dns.DnsQueryContext: void onQueryWriteCompletion(io.netty.channel.ChannelFuture)>(v3);
return;
}
}