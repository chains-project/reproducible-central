final class io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream extends java.lang.Object implements io.netty.resolver.dns.DnsServerAddressStream
{
private final java.net.InetSocketAddress replaced;
private final io.netty.resolver.dns.DnsServerAddressStream originalStream;
private final java.util.List resolvedAddresses;
private java.util.Iterator resolved;
final io.netty.resolver.dns.DnsResolveContext this$0;
void <init>(io.netty.resolver.dns.DnsResolveContext, java.net.InetSocketAddress, java.util.List, io.netty.resolver.dns.DnsServerAddressStream)
{
io.netty.resolver.dns.DnsResolveContext v1;
java.util.List v3;
java.util.Iterator v5;
io.netty.resolver.dns.DnsServerAddressStream v4;
io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream v0;
java.net.InetSocketAddress v2;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream;
v1 := @parameter0: io.netty.resolver.dns.DnsResolveContext;
v2 := @parameter1: java.net.InetSocketAddress;
v3 := @parameter2: java.util.List;
v4 := @parameter3: io.netty.resolver.dns.DnsServerAddressStream;
v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsResolveContext this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.net.InetSocketAddress replaced> = v2;
v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.List resolvedAddresses> = v3;
v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsServerAddressStream originalStream> = v4;
v5 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.Iterator resolved> = v5;
return;
}
public java.net.InetSocketAddress next()
{
java.util.Iterator v1, v9;
io.netty.resolver.dns.DnsServerAddressStream v4;
io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream v0;
java.net.InetSocketAddress v10, v3, v5, v6;
java.util.List v8;
boolean v2, v7;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream;
v1 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.Iterator resolved>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label1;
v3 = specialinvoke v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.net.InetSocketAddress nextResolved0()>();
return v3;
label1:
v4 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsServerAddressStream originalStream>;
v5 = interfaceinvoke v4.<io.netty.resolver.dns.DnsServerAddressStream: java.net.InetSocketAddress next()>();
v6 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.net.InetSocketAddress replaced>;
v7 = virtualinvoke v5.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>(v6);
if v7 == 0 goto label2;
v8 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.List resolvedAddresses>;
v9 = interfaceinvoke v8.<java.util.List: java.util.Iterator iterator()>();
v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.Iterator resolved> = v9;
v10 = specialinvoke v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.net.InetSocketAddress nextResolved0()>();
return v10;
label2:
return v5;
}
private java.net.InetSocketAddress nextResolved0()
{
io.netty.resolver.dns.DnsResolveContext v1;
io.netty.resolver.dns.DnsNameResolver v2;
java.util.Iterator v3;
io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream v0;
java.lang.Object v4;
java.net.InetSocketAddress v5;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream;
v1 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsResolveContext this$0>;
v2 = v1.<io.netty.resolver.dns.DnsResolveContext: io.netty.resolver.dns.DnsNameResolver parent>;
v3 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.Iterator resolved>;
v4 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v2.<io.netty.resolver.dns.DnsNameResolver: java.net.InetSocketAddress newRedirectServerAddress(java.net.InetAddress)>(v4);
return v5;
}
public int size()
{
java.util.List v3;
io.netty.resolver.dns.DnsServerAddressStream v1;
int v2, v4, v5, v6;
io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream v0;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream;
v1 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsServerAddressStream originalStream>;
v2 = interfaceinvoke v1.<io.netty.resolver.dns.DnsServerAddressStream: int size()>();
v3 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.List resolvedAddresses>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
v5 = v2 + v4;
v6 = v5 - 1;
return v6;
}
public io.netty.resolver.dns.DnsServerAddressStream duplicate()
{
io.netty.resolver.dns.DnsResolveContext v2;
java.util.List v4;
io.netty.resolver.dns.DnsServerAddressStream v5, v6;
io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream v0, v1;
java.net.InetSocketAddress v3;
v0 := @this: io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream;
v1 = new io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream;
v2 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsResolveContext this$0>;
v3 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.net.InetSocketAddress replaced>;
v4 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: java.util.List resolvedAddresses>;
v5 = v0.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: io.netty.resolver.dns.DnsServerAddressStream originalStream>;
v6 = interfaceinvoke v5.<io.netty.resolver.dns.DnsServerAddressStream: io.netty.resolver.dns.DnsServerAddressStream duplicate()>();
specialinvoke v1.<io.netty.resolver.dns.DnsResolveContext$CombinedDnsServerAddressStream: void <init>(io.netty.resolver.dns.DnsResolveContext,java.net.InetSocketAddress,java.util.List,io.netty.resolver.dns.DnsServerAddressStream)>(v2, v3, v4, v6);
return v1;
}
}