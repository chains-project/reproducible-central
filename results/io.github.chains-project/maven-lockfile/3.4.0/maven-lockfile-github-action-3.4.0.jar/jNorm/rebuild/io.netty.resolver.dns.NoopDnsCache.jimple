public final class io.netty.resolver.dns.NoopDnsCache extends java.lang.Object implements io.netty.resolver.dns.DnsCache
{
public static final io.netty.resolver.dns.NoopDnsCache INSTANCE;
private void <init>()
{
io.netty.resolver.dns.NoopDnsCache v0;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void clear()
{
io.netty.resolver.dns.NoopDnsCache v0;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
return;
}
public boolean clear(java.lang.String)
{
io.netty.resolver.dns.NoopDnsCache v0;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
v1 := @parameter0: java.lang.String;
return 0;
}
public java.util.List get(java.lang.String, io.netty.handler.codec.dns.DnsRecord[])
{
java.util.List v3;
io.netty.handler.codec.dns.DnsRecord[] v2;
io.netty.resolver.dns.NoopDnsCache v0;
java.lang.String v1;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord[];
v3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v3;
}
public io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.net.InetAddress, long, io.netty.channel.EventLoop)
{
java.net.InetAddress v3;
io.netty.resolver.dns.NoopDnsCache$NoopDnsCacheEntry v6;
io.netty.handler.codec.dns.DnsRecord[] v2;
io.netty.resolver.dns.NoopDnsCache v0;
long v4;
java.lang.String v1;
io.netty.channel.EventLoop v5;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord[];
v3 := @parameter2: java.net.InetAddress;
v4 := @parameter3: long;
v5 := @parameter4: io.netty.channel.EventLoop;
v6 = new io.netty.resolver.dns.NoopDnsCache$NoopDnsCacheEntry;
specialinvoke v6.<io.netty.resolver.dns.NoopDnsCache$NoopDnsCacheEntry: void <init>(java.net.InetAddress)>(v3);
return v6;
}
public io.netty.resolver.dns.DnsCacheEntry cache(java.lang.String, io.netty.handler.codec.dns.DnsRecord[], java.lang.Throwable, io.netty.channel.EventLoop)
{
java.lang.Throwable v3;
io.netty.handler.codec.dns.DnsRecord[] v2;
io.netty.resolver.dns.NoopDnsCache v0;
java.lang.String v1;
io.netty.channel.EventLoop v4;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.handler.codec.dns.DnsRecord[];
v3 := @parameter2: java.lang.Throwable;
v4 := @parameter3: io.netty.channel.EventLoop;
return null;
}
public java.lang.String toString()
{
io.netty.resolver.dns.NoopDnsCache v0;
java.lang.Class v1;
java.lang.String v2;
v0 := @this: io.netty.resolver.dns.NoopDnsCache;
v1 = class "Lio/netty/resolver/dns/NoopDnsCache;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
return v2;
}
static void <clinit>()
{
io.netty.resolver.dns.NoopDnsCache v0;
v0 = new io.netty.resolver.dns.NoopDnsCache;
specialinvoke v0.<io.netty.resolver.dns.NoopDnsCache: void <init>()>();
<io.netty.resolver.dns.NoopDnsCache: io.netty.resolver.dns.NoopDnsCache INSTANCE> = v0;
return;
}
}