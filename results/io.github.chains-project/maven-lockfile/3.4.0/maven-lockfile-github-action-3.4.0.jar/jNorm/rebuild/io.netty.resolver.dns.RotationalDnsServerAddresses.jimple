final class io.netty.resolver.dns.RotationalDnsServerAddresses extends io.netty.resolver.dns.DefaultDnsServerAddresses
{
private static final java.util.concurrent.atomic.AtomicIntegerFieldUpdater startIdxUpdater;
private volatile int startIdx;
void <init>(java.util.List)
{
java.util.List v1;
io.netty.resolver.dns.RotationalDnsServerAddresses v0;
v0 := @this: io.netty.resolver.dns.RotationalDnsServerAddresses;
v1 := @parameter0: java.util.List;
specialinvoke v0.<io.netty.resolver.dns.DefaultDnsServerAddresses: void <init>(java.lang.String,java.util.List)>("rotational", v1);
return;
}
public io.netty.resolver.dns.DnsServerAddressStream stream()
{
java.util.concurrent.atomic.AtomicIntegerFieldUpdater v5;
java.util.List v3, v8;
io.netty.resolver.dns.RotationalDnsServerAddresses v0;
io.netty.resolver.dns.SequentialDnsServerAddressStream v7;
int v1, v2, v4;
boolean v6;
v0 := @this: io.netty.resolver.dns.RotationalDnsServerAddresses;
label1:
v1 = v0.<io.netty.resolver.dns.RotationalDnsServerAddresses: int startIdx>;
v2 = v1 + 1;
v3 = v0.<io.netty.resolver.dns.RotationalDnsServerAddresses: java.util.List addresses>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 < v4 goto label2;
v2 = 0;
label2:
v5 = <io.netty.resolver.dns.RotationalDnsServerAddresses: java.util.concurrent.atomic.AtomicIntegerFieldUpdater startIdxUpdater>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicIntegerFieldUpdater: boolean compareAndSet(java.lang.Object,int,int)>(v0, v1, v2);
if v6 == 0 goto label1;
v7 = new io.netty.resolver.dns.SequentialDnsServerAddressStream;
v8 = v0.<io.netty.resolver.dns.RotationalDnsServerAddresses: java.util.List addresses>;
specialinvoke v7.<io.netty.resolver.dns.SequentialDnsServerAddressStream: void <init>(java.util.List,int)>(v8, v1);
return v7;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicIntegerFieldUpdater v0;
v0 = staticinvoke <java.util.concurrent.atomic.AtomicIntegerFieldUpdater: java.util.concurrent.atomic.AtomicIntegerFieldUpdater newUpdater(java.lang.Class,java.lang.String)>(class "Lio/netty/resolver/dns/RotationalDnsServerAddresses;", "startIdx");
<io.netty.resolver.dns.RotationalDnsServerAddresses: java.util.concurrent.atomic.AtomicIntegerFieldUpdater startIdxUpdater> = v0;
return;
}
}