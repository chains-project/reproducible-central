final class io.netty.resolver.dns.SequentialDnsServerAddressStream extends java.lang.Object implements io.netty.resolver.dns.DnsServerAddressStream
{
private final java.util.List addresses;
private int i;
void <init>(java.util.List, int)
{
int v2;
java.util.List v1;
io.netty.resolver.dns.SequentialDnsServerAddressStream v0;
v0 := @this: io.netty.resolver.dns.SequentialDnsServerAddressStream;
v1 := @parameter0: java.util.List;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: java.util.List addresses> = v1;
v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: int i> = v2;
return;
}
public java.net.InetSocketAddress next()
{
java.util.List v2, v5;
io.netty.resolver.dns.SequentialDnsServerAddressStream v0;
int v1, v4, v6;
java.lang.Object v3;
v0 := @this: io.netty.resolver.dns.SequentialDnsServerAddressStream;
v1 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: int i>;
v2 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: java.util.List addresses>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
v4 = v1 + 1;
v5 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: java.util.List addresses>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
if v4 >= v6 goto label1;
v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: int i> = v4;
goto label2;
label1:
v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: int i> = 0;
label2:
return v3;
}
public int size()
{
int v2;
java.util.List v1;
io.netty.resolver.dns.SequentialDnsServerAddressStream v0;
v0 := @this: io.netty.resolver.dns.SequentialDnsServerAddressStream;
v1 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: java.util.List addresses>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public io.netty.resolver.dns.SequentialDnsServerAddressStream duplicate()
{
java.util.List v2;
io.netty.resolver.dns.SequentialDnsServerAddressStream v0, v1;
int v3;
v0 := @this: io.netty.resolver.dns.SequentialDnsServerAddressStream;
v1 = new io.netty.resolver.dns.SequentialDnsServerAddressStream;
v2 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: java.util.List addresses>;
v3 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: int i>;
specialinvoke v1.<io.netty.resolver.dns.SequentialDnsServerAddressStream: void <init>(java.util.List,int)>(v2, v3);
return v1;
}
public java.lang.String toString()
{
java.util.List v2;
io.netty.resolver.dns.SequentialDnsServerAddressStream v0;
int v1;
java.lang.String v3;
v0 := @this: io.netty.resolver.dns.SequentialDnsServerAddressStream;
v1 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: int i>;
v2 = v0.<io.netty.resolver.dns.SequentialDnsServerAddressStream: java.util.List addresses>;
v3 = staticinvoke <io.netty.resolver.dns.SequentialDnsServerAddressStream: java.lang.String toString(java.lang.String,int,java.util.Collection)>("sequential", v1, v2);
return v3;
}
static java.lang.String toString(java.lang.String, int, java.util.Collection)
{
int v1, v15, v16, v4, v5, v6, v7, v8;
java.lang.String v0, v17;
boolean v12;
java.util.Iterator v11;
java.util.Collection v2;
java.lang.Object v13;
java.lang.StringBuilder v10, v14, v3, v9;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: java.util.Collection;
v3 = new java.lang.StringBuilder;
v4 = virtualinvoke v0.<java.lang.String: int length()>();
v5 = v4 + 2;
v6 = interfaceinvoke v2.<java.util.Collection: int size()>();
v7 = v6 * 16;
v8 = v5 + v7;
specialinvoke v3.<java.lang.StringBuilder: void <init>(int)>(v8);
v9 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v0);
v10 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(index: ");
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v1);
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", addrs: (");
v11 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label2;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v13);
virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
goto label1;
label2:
v15 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
v16 = v15 - 2;
virtualinvoke v3.<java.lang.StringBuilder: void setLength(int)>(v16);
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("))");
v17 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v17;
}
}