final class io.netty.resolver.dns.TcpDnsQueryContext extends io.netty.resolver.dns.DnsQueryContext
{
private final io.netty.channel.Channel channel;
void <init>(io.netty.resolver.dns.DnsNameResolver, io.netty.channel.Channel, java.net.InetSocketAddress, io.netty.handler.codec.dns.DnsQuestion, io.netty.handler.codec.dns.DnsRecord[], io.netty.util.concurrent.Promise)
{
io.netty.channel.Channel v2;
io.netty.resolver.dns.DnsNameResolver v1;
io.netty.handler.codec.dns.DnsRecord[] v5;
io.netty.util.concurrent.Promise v6;
io.netty.handler.codec.dns.DnsQuestion v4;
io.netty.resolver.dns.TcpDnsQueryContext v0;
java.net.InetSocketAddress v3;
v0 := @this: io.netty.resolver.dns.TcpDnsQueryContext;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver;
v2 := @parameter1: io.netty.channel.Channel;
v3 := @parameter2: java.net.InetSocketAddress;
v4 := @parameter3: io.netty.handler.codec.dns.DnsQuestion;
v5 := @parameter4: io.netty.handler.codec.dns.DnsRecord[];
v6 := @parameter5: io.netty.util.concurrent.Promise;
specialinvoke v0.<io.netty.resolver.dns.DnsQueryContext: void <init>(io.netty.resolver.dns.DnsNameResolver,java.net.InetSocketAddress,io.netty.handler.codec.dns.DnsQuestion,io.netty.handler.codec.dns.DnsRecord[],io.netty.util.concurrent.Promise)>(v1, v3, v4, v5, v6);
v0.<io.netty.resolver.dns.TcpDnsQueryContext: io.netty.channel.Channel channel> = v2;
return;
}
protected io.netty.handler.codec.dns.DnsQuery newQuery(int)
{
int v1;
io.netty.resolver.dns.TcpDnsQueryContext v0;
io.netty.handler.codec.dns.DefaultDnsQuery v2;
v0 := @this: io.netty.resolver.dns.TcpDnsQueryContext;
v1 := @parameter0: int;
v2 = new io.netty.handler.codec.dns.DefaultDnsQuery;
specialinvoke v2.<io.netty.handler.codec.dns.DefaultDnsQuery: void <init>(int)>(v1);
return v2;
}
protected io.netty.channel.Channel channel()
{
io.netty.channel.Channel v1;
io.netty.resolver.dns.TcpDnsQueryContext v0;
v0 := @this: io.netty.resolver.dns.TcpDnsQueryContext;
v1 = v0.<io.netty.resolver.dns.TcpDnsQueryContext: io.netty.channel.Channel channel>;
return v1;
}
protected java.lang.String protocol()
{
io.netty.resolver.dns.TcpDnsQueryContext v0;
v0 := @this: io.netty.resolver.dns.TcpDnsQueryContext;
return "TCP";
}
}