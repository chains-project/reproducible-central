public final class io.netty.util.CharsetUtil extends java.lang.Object
{
public static final java.nio.charset.Charset UTF_16;
public static final java.nio.charset.Charset UTF_16BE;
public static final java.nio.charset.Charset UTF_16LE;
public static final java.nio.charset.Charset UTF_8;
public static final java.nio.charset.Charset ISO_8859_1;
public static final java.nio.charset.Charset US_ASCII;
private static final java.nio.charset.Charset[] CHARSETS;
public static java.nio.charset.Charset[] values()
{
java.nio.charset.Charset[] v0;
v0 = <io.netty.util.CharsetUtil: java.nio.charset.Charset[] CHARSETS>;
return v0;
}
public static java.nio.charset.CharsetEncoder getEncoder(java.nio.charset.Charset)
{
java.nio.charset.Charset v0;
java.nio.charset.CharsetEncoder v1;
v0 := @parameter0: java.nio.charset.Charset;
v1 = staticinvoke <io.netty.util.CharsetUtil: java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset)>(v0);
return v1;
}
public static java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset, java.nio.charset.CodingErrorAction, java.nio.charset.CodingErrorAction)
{
java.nio.charset.Charset v0;
java.nio.charset.CharsetEncoder v3, v4;
java.nio.charset.CodingErrorAction v1, v2;
v0 := @parameter0: java.nio.charset.Charset;
v1 := @parameter1: java.nio.charset.CodingErrorAction;
v2 := @parameter2: java.nio.charset.CodingErrorAction;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "charset");
v3 = virtualinvoke v0.<java.nio.charset.Charset: java.nio.charset.CharsetEncoder newEncoder()>();
v4 = virtualinvoke v3.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>(v1);
virtualinvoke v4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(v2);
return v3;
}
public static java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset, java.nio.charset.CodingErrorAction)
{
java.nio.charset.Charset v0;
java.nio.charset.CharsetEncoder v2;
java.nio.charset.CodingErrorAction v1;
v0 := @parameter0: java.nio.charset.Charset;
v1 := @parameter1: java.nio.charset.CodingErrorAction;
v2 = staticinvoke <io.netty.util.CharsetUtil: java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction)>(v0, v1, v1);
return v2;
}
public static java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset)
{
io.netty.util.internal.InternalThreadLocalMap v1;
java.nio.charset.Charset v0;
java.nio.charset.CharsetEncoder v10, v4, v6;
java.nio.charset.CodingErrorAction v5, v7, v8, v9;
java.util.Map v2;
java.lang.Object v3;
v0 := @parameter0: java.nio.charset.Charset;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "charset");
v1 = staticinvoke <io.netty.util.internal.InternalThreadLocalMap: io.netty.util.internal.InternalThreadLocalMap get()>();
v2 = virtualinvoke v1.<io.netty.util.internal.InternalThreadLocalMap: java.util.Map charsetEncoderCache()>();
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder reset()>();
v5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
v6 = virtualinvoke v4.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onMalformedInput(java.nio.charset.CodingErrorAction)>(v5);
v7 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
virtualinvoke v6.<java.nio.charset.CharsetEncoder: java.nio.charset.CharsetEncoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(v7);
return v3;
label1:
v8 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
v9 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
v10 = staticinvoke <io.netty.util.CharsetUtil: java.nio.charset.CharsetEncoder encoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction)>(v0, v8, v9);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v10);
return v10;
}
public static java.nio.charset.CharsetDecoder getDecoder(java.nio.charset.Charset)
{
java.nio.charset.CharsetDecoder v1;
java.nio.charset.Charset v0;
v0 := @parameter0: java.nio.charset.Charset;
v1 = staticinvoke <io.netty.util.CharsetUtil: java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset)>(v0);
return v1;
}
public static java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset, java.nio.charset.CodingErrorAction, java.nio.charset.CodingErrorAction)
{
java.nio.charset.Charset v0;
java.nio.charset.CodingErrorAction v1, v2;
java.nio.charset.CharsetDecoder v3, v4;
v0 := @parameter0: java.nio.charset.Charset;
v1 := @parameter1: java.nio.charset.CodingErrorAction;
v2 := @parameter2: java.nio.charset.CodingErrorAction;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "charset");
v3 = virtualinvoke v0.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();
v4 = virtualinvoke v3.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>(v1);
virtualinvoke v4.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(v2);
return v3;
}
public static java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset, java.nio.charset.CodingErrorAction)
{
java.nio.charset.CharsetDecoder v2;
java.nio.charset.Charset v0;
java.nio.charset.CodingErrorAction v1;
v0 := @parameter0: java.nio.charset.Charset;
v1 := @parameter1: java.nio.charset.CodingErrorAction;
v2 = staticinvoke <io.netty.util.CharsetUtil: java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction)>(v0, v1, v1);
return v2;
}
public static java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset)
{
io.netty.util.internal.InternalThreadLocalMap v1;
java.nio.charset.CharsetDecoder v10, v4, v6;
java.nio.charset.Charset v0;
java.nio.charset.CodingErrorAction v5, v7, v8, v9;
java.util.Map v2;
java.lang.Object v3;
v0 := @parameter0: java.nio.charset.Charset;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "charset");
v1 = staticinvoke <io.netty.util.internal.InternalThreadLocalMap: io.netty.util.internal.InternalThreadLocalMap get()>();
v2 = virtualinvoke v1.<io.netty.util.internal.InternalThreadLocalMap: java.util.Map charsetDecoderCache()>();
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder reset()>();
v5 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
v6 = virtualinvoke v4.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onMalformedInput(java.nio.charset.CodingErrorAction)>(v5);
v7 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
virtualinvoke v6.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(v7);
return v3;
label1:
v8 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
v9 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPLACE>;
v10 = staticinvoke <io.netty.util.CharsetUtil: java.nio.charset.CharsetDecoder decoder(java.nio.charset.Charset,java.nio.charset.CodingErrorAction,java.nio.charset.CodingErrorAction)>(v0, v8, v9);
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v10);
return v10;
}
private void <init>()
{
io.netty.util.CharsetUtil v0;
v0 := @this: io.netty.util.CharsetUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.nio.charset.Charset v0, v1, v10, v11, v12, v2, v3, v4, v5, v7, v8, v9;
java.nio.charset.Charset[] v6;
v0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16");
<io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_16> = v0;
v1 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16BE");
<io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_16BE> = v1;
v2 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-16LE");
<io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_16LE> = v2;
v3 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("UTF-8");
<io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8> = v3;
v4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("ISO-8859-1");
<io.netty.util.CharsetUtil: java.nio.charset.Charset ISO_8859_1> = v4;
v5 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset forName(java.lang.String)>("US-ASCII");
<io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII> = v5;
v6 = newarray (java.nio.charset.Charset)[6];
v7 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_16>;
v6[0] = v7;
v8 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_16BE>;
v6[1] = v8;
v9 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_16LE>;
v6[2] = v9;
v10 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v6[3] = v10;
v11 = <io.netty.util.CharsetUtil: java.nio.charset.Charset ISO_8859_1>;
v6[4] = v11;
v12 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v6[5] = v12;
<io.netty.util.CharsetUtil: java.nio.charset.Charset[] CHARSETS> = v6;
return;
}
}