final class io.netty.util.Recycler$BlockingMessageQueue extends java.lang.Object implements io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue
{
private final java.util.Queue deque;
private final int maxCapacity;
void <init>(int)
{
int v1;
io.netty.util.Recycler$BlockingMessageQueue v0;
java.util.ArrayDeque v2;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.util.Recycler$BlockingMessageQueue: int maxCapacity> = v1;
v2 = new java.util.ArrayDeque;
specialinvoke v2.<java.util.ArrayDeque: void <init>()>();
v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque> = v2;
return;
}
public synchronized boolean offer(java.lang.Object)
{
int v3, v4;
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v1;
java.util.Queue v2, v5;
boolean v6;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
v3 = interfaceinvoke v2.<java.util.Queue: int size()>();
v4 = v0.<io.netty.util.Recycler$BlockingMessageQueue: int maxCapacity>;
if v3 != v4 goto label1;
return 0;
label1:
v5 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
v6 = interfaceinvoke v5.<java.util.Queue: boolean offer(java.lang.Object)>(v1);
return v6;
}
public synchronized java.lang.Object poll()
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v2;
java.util.Queue v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object poll()>();
return v2;
}
public synchronized java.lang.Object peek()
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v2;
java.util.Queue v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
v2 = interfaceinvoke v1.<java.util.Queue: java.lang.Object peek()>();
return v2;
}
public synchronized int size()
{
int v2;
io.netty.util.Recycler$BlockingMessageQueue v0;
java.util.Queue v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
v2 = interfaceinvoke v1.<java.util.Queue: int size()>();
return v2;
}
public synchronized void clear()
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.util.Queue v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
interfaceinvoke v1.<java.util.Queue: void clear()>();
return;
}
public synchronized boolean isEmpty()
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.util.Queue v1;
boolean v2;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = v0.<io.netty.util.Recycler$BlockingMessageQueue: java.util.Queue deque>;
v2 = interfaceinvoke v1.<java.util.Queue: boolean isEmpty()>();
return v2;
}
public int capacity()
{
int v1;
io.netty.util.Recycler$BlockingMessageQueue v0;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = v0.<io.netty.util.Recycler$BlockingMessageQueue: int maxCapacity>;
return v1;
}
public boolean relaxedOffer(java.lang.Object)
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.util.Recycler$BlockingMessageQueue: boolean offer(java.lang.Object)>(v1);
return v2;
}
public java.lang.Object relaxedPoll()
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = virtualinvoke v0.<io.netty.util.Recycler$BlockingMessageQueue: java.lang.Object poll()>();
return v1;
}
public java.lang.Object relaxedPeek()
{
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 = virtualinvoke v0.<io.netty.util.Recycler$BlockingMessageQueue: java.lang.Object peek()>();
return v1;
}
public int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int)
{
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer v1;
int v2, v3;
io.netty.util.Recycler$BlockingMessageQueue v0;
java.lang.Object v4;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer;
v2 := @parameter1: int;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = virtualinvoke v0.<io.netty.util.Recycler$BlockingMessageQueue: java.lang.Object poll()>();
if v4 == null goto label2;
interfaceinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer: void accept(java.lang.Object)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v3;
}
public int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier, int)
{
java.lang.UnsupportedOperationException v3;
int v2;
io.netty.util.Recycler$BlockingMessageQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier;
v2 := @parameter1: int;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer)
{
java.lang.UnsupportedOperationException v2;
io.netty.util.Recycler$BlockingMessageQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public int fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier)
{
java.lang.UnsupportedOperationException v2;
io.netty.util.Recycler$BlockingMessageQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public void drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition)
{
java.lang.UnsupportedOperationException v4;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer v1;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition v3;
io.netty.util.Recycler$BlockingMessageQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy v2;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer;
v2 := @parameter1: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy;
v3 := @parameter2: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
}
public void fill(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition)
{
java.lang.UnsupportedOperationException v4;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition v3;
io.netty.util.Recycler$BlockingMessageQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy v2;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier v1;
v0 := @this: io.netty.util.Recycler$BlockingMessageQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Supplier;
v2 := @parameter1: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy;
v3 := @parameter2: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
}
}