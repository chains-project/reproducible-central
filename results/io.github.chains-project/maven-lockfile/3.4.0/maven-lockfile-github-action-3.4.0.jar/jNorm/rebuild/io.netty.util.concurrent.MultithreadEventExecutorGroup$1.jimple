class io.netty.util.concurrent.MultithreadEventExecutorGroup$1 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.util.concurrent.MultithreadEventExecutorGroup this$0;
void <init>(io.netty.util.concurrent.MultithreadEventExecutorGroup)
{
io.netty.util.concurrent.MultithreadEventExecutorGroup v1;
io.netty.util.concurrent.MultithreadEventExecutorGroup$1 v0;
v0 := @this: io.netty.util.concurrent.MultithreadEventExecutorGroup$1;
v1 := @parameter0: io.netty.util.concurrent.MultithreadEventExecutorGroup;
v0.<io.netty.util.concurrent.MultithreadEventExecutorGroup$1: io.netty.util.concurrent.MultithreadEventExecutorGroup this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
io.netty.util.concurrent.MultithreadEventExecutorGroup v2, v5, v8;
io.netty.util.concurrent.Promise v9;
io.netty.util.concurrent.EventExecutor[] v6;
io.netty.util.concurrent.MultithreadEventExecutorGroup$1 v0;
java.util.concurrent.atomic.AtomicInteger v3;
int v4, v7;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.util.concurrent.MultithreadEventExecutorGroup$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.util.concurrent.MultithreadEventExecutorGroup$1: io.netty.util.concurrent.MultithreadEventExecutorGroup this$0>;
v3 = v2.<io.netty.util.concurrent.MultithreadEventExecutorGroup: java.util.concurrent.atomic.AtomicInteger terminatedChildren>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
v5 = v0.<io.netty.util.concurrent.MultithreadEventExecutorGroup$1: io.netty.util.concurrent.MultithreadEventExecutorGroup this$0>;
v6 = v5.<io.netty.util.concurrent.MultithreadEventExecutorGroup: io.netty.util.concurrent.EventExecutor[] children>;
v7 = lengthof v6;
if v4 != v7 goto label1;
v8 = v0.<io.netty.util.concurrent.MultithreadEventExecutorGroup$1: io.netty.util.concurrent.MultithreadEventExecutorGroup this$0>;
v9 = v8.<io.netty.util.concurrent.MultithreadEventExecutorGroup: io.netty.util.concurrent.Promise terminationFuture>;
interfaceinvoke v9.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(null);
label1:
return;
}
}