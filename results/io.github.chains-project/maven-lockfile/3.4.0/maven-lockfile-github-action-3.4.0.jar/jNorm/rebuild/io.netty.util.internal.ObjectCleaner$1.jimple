class io.netty.util.internal.ObjectCleaner$1 extends java.lang.Object implements java.lang.Runnable
{
void <init>()
{
io.netty.util.internal.ObjectCleaner$1 v0;
v0 := @this: io.netty.util.internal.ObjectCleaner$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.lang.Throwable v8;
java.util.concurrent.atomic.AtomicBoolean v10, v13;
java.lang.ref.ReferenceQueue v4;
java.lang.Thread v15;
int v5;
boolean v1, v12, v14, v3;
java.util.Set v11, v2, v9;
java.lang.ref.Reference v6;
java.lang.InterruptedException v7;
io.netty.util.internal.ObjectCleaner$1 v0;
v0 := @this: io.netty.util.internal.ObjectCleaner$1;
v1 = 0;
label01:
v2 = <io.netty.util.internal.ObjectCleaner: java.util.Set LIVE_SET>;
v3 = interfaceinvoke v2.<java.util.Set: boolean isEmpty()>();
if v3 != 0 goto label10;
label02:
v4 = <io.netty.util.internal.ObjectCleaner: java.lang.ref.ReferenceQueue REFERENCE_QUEUE>;
v5 = <io.netty.util.internal.ObjectCleaner: int REFERENCE_QUEUE_POLL_TIMEOUT_MS>;
v6 = virtualinvoke v4.<java.lang.ref.ReferenceQueue: java.lang.ref.Reference remove(long)>(v5);
label03:
goto label05;
label04:
v7 := @caughtexception;
v1 = 1;
goto label01;
label05:
if v6 == null goto label01;
label06:
virtualinvoke v6.<io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference: void cleanup()>();
label07:
goto label09;
label08:
v8 := @caughtexception;
label09:
v9 = <io.netty.util.internal.ObjectCleaner: java.util.Set LIVE_SET>;
interfaceinvoke v9.<java.util.Set: boolean remove(java.lang.Object)>(v6);
goto label01;
label10:
v10 = <io.netty.util.internal.ObjectCleaner: java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING>;
virtualinvoke v10.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(0);
v11 = <io.netty.util.internal.ObjectCleaner: java.util.Set LIVE_SET>;
v12 = interfaceinvoke v11.<java.util.Set: boolean isEmpty()>();
if v12 != 0 goto label11;
v13 = <io.netty.util.internal.ObjectCleaner: java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING>;
v14 = virtualinvoke v13.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v14 != 0 goto label01;
label11:
if v1 == 0 goto label12;
v15 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v15.<java.lang.Thread: void interrupt()>();
label12:
return;
catch java.lang.InterruptedException from label02 to label03 with label04;
catch java.lang.Throwable from label06 to label07 with label08;
}
}