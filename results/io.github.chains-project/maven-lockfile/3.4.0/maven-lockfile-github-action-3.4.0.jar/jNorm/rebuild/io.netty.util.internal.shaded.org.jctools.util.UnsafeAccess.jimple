public class io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess extends java.lang.Object
{
public static final boolean SUPPORTS_GET_AND_SET_REF;
public static final boolean SUPPORTS_GET_AND_ADD_LONG;
public static final sun.misc.Unsafe UNSAFE;
public void <init>()
{
io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static sun.misc.Unsafe getUnsafe()
{
java.lang.Object[] v7;
java.lang.Class[] v5;
java.lang.RuntimeException v9;
java.lang.reflect.Field v1;
java.lang.reflect.Constructor v6;
java.lang.Exception v3, v8;
java.lang.Class v0, v4;
java.lang.Object v2;
label1:
v0 = class "Lsun/misc/Unsafe;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("theUnsafe");
virtualinvoke v1.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(null);
label2:
goto label7;
label3:
v3 := @caughtexception;
label4:
v4 = class "Lsun/misc/Unsafe;";
v5 = newarray (java.lang.Class)[0];
v6 = virtualinvoke v4.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v5);
virtualinvoke v6.<java.lang.reflect.Constructor: void setAccessible(boolean)>(1);
v7 = newarray (java.lang.Object)[0];
virtualinvoke v6.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v7);
label5:
goto label7;
label6:
v8 := @caughtexception;
v9 = new java.lang.RuntimeException;
specialinvoke v9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v8);
throw v9;
label7:
return v2;
catch java.lang.Exception from label1 to label2 with label3;
catch java.lang.Exception from label4 to label5 with label6;
}
private static boolean hasGetAndSetSupport()
{
java.lang.Class[] v1;
java.lang.Class v0, v2;
java.lang.Exception v3;
label1:
v0 = class "Lsun/misc/Unsafe;";
v1 = newarray (java.lang.Class)[3];
v1[0] = class "Ljava/lang/Object;";
v2 = <java.lang.Long: java.lang.Class TYPE>;
v1[1] = v2;
v1[2] = class "Ljava/lang/Object;";
virtualinvoke v0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getAndSetObject", v1);
label2:
return 1;
label3:
v3 := @caughtexception;
return 0;
catch java.lang.Exception from label1 to label2 with label3;
}
private static boolean hasGetAndAddLongSupport()
{
java.lang.Class[] v1;
java.lang.Class v0, v2, v3;
java.lang.Exception v4;
label1:
v0 = class "Lsun/misc/Unsafe;";
v1 = newarray (java.lang.Class)[3];
v1[0] = class "Ljava/lang/Object;";
v2 = <java.lang.Long: java.lang.Class TYPE>;
v1[1] = v2;
v3 = <java.lang.Long: java.lang.Class TYPE>;
v1[2] = v3;
virtualinvoke v0.<java.lang.Class: java.lang.reflect.Method getMethod(java.lang.String,java.lang.Class[])>("getAndAddLong", v1);
label2:
return 1;
label3:
v4 := @caughtexception;
return 0;
catch java.lang.Exception from label1 to label2 with label3;
}
public static long fieldOffset(java.lang.Class, java.lang.String) throws java.lang.RuntimeException
{
sun.misc.Unsafe v2;
java.lang.NoSuchFieldException v5;
java.lang.Class v0;
long v4;
java.lang.RuntimeException v6;
java.lang.String v1;
java.lang.reflect.Field v3;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
label1:
v2 = <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE>;
v3 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>(v1);
v4 = virtualinvoke v2.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.RuntimeException;
specialinvoke v6.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v5);
throw v6;
catch java.lang.NoSuchFieldException from label1 to label2 with label3;
}
static void <clinit>()
{
sun.misc.Unsafe v0;
boolean v1, v2;
v0 = staticinvoke <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe getUnsafe()>();
<io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: sun.misc.Unsafe UNSAFE> = v0;
v1 = staticinvoke <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: boolean hasGetAndSetSupport()>();
<io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: boolean SUPPORTS_GET_AND_SET_REF> = v1;
v2 = staticinvoke <io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: boolean hasGetAndAddLongSupport()>();
<io.netty.util.internal.shaded.org.jctools.util.UnsafeAccess: boolean SUPPORTS_GET_AND_ADD_LONG> = v2;
return;
}
}