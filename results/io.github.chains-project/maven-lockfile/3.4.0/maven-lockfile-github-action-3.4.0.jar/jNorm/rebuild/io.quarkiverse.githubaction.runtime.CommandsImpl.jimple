public class io.quarkiverse.githubaction.runtime.CommandsImpl extends java.lang.Object implements io.quarkiverse.githubaction.Commands
{
private static final org.jboss.logging.Logger LOG;
private java.util.Map env;
private java.lang.String currentStopCommandsMarker;
public void <init>(java.util.Map)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.util.Map v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.util.Map env> = v1;
return;
}
public void setOutput(java.lang.String, java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v2, v3;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001=\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void appendEnvFile(java.lang.String,java.lang.String)>("GITHUB_OUTPUT", v3);
return;
}
public void debug(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v2;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("::debug::\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v2);
return;
}
public void notice(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void notice(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>(v1, null, null, null, null, null, null);
return;
}
public void notice(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.Integer v4, v5, v6, v7;
java.lang.String v1, v2, v3;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Integer;
v5 := @parameter4: java.lang.Integer;
v6 := @parameter5: java.lang.Integer;
v7 := @parameter6: java.lang.Integer;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>("notice", v1, v2, v3, v4, v5, v6, v7);
return;
}
public void warning(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void warning(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>(v1, null, null, null, null, null, null);
return;
}
public void warning(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.Integer v4, v5, v6, v7;
java.lang.String v1, v2, v3;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Integer;
v5 := @parameter4: java.lang.Integer;
v6 := @parameter5: java.lang.Integer;
v7 := @parameter6: java.lang.Integer;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>("warning", v1, v2, v3, v4, v5, v6, v7);
return;
}
public void error(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void error(java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>(v1, null, null, null, null, null, null);
return;
}
public void error(java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.Integer v4, v5, v6, v7;
java.lang.String v1, v2, v3;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Integer;
v5 := @parameter4: java.lang.Integer;
v6 := @parameter5: java.lang.Integer;
v7 := @parameter6: java.lang.Integer;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void message(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.Integer,java.lang.Integer,java.lang.Integer,java.lang.Integer)>("error", v1, v2, v3, v4, v5, v6, v7);
return;
}
public void group(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v2;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("::group::\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v2);
return;
}
public void echo(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v1);
return;
}
public void endGroup()
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>("::endgroup::");
return;
}
public void addMask(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v2;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("::add-mask::\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v2);
return;
}
public void stopCommands()
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v2, v3, v4;
java.util.UUID v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 = staticinvoke <java.util.UUID: java.util.UUID randomUUID()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.UUID)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("stopCommandsMarker-\u0001");
v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.lang.String currentStopCommandsMarker> = v2;
v3 = v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.lang.String currentStopCommandsMarker>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("::stop-commands::\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v4);
return;
}
public void pursueCommands()
{
java.lang.IllegalStateException v2;
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v3, v4;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 = v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.lang.String currentStopCommandsMarker>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot pursue commands if no stop commands marker is defined");
throw v2;
label1:
v3 = v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.lang.String currentStopCommandsMarker>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("::\u0001::");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v4);
v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.lang.String currentStopCommandsMarker> = null;
return;
}
public void echoOn()
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>("::echo::on");
return;
}
public void echoOff()
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>("::echo::off");
return;
}
public void saveState(java.lang.String, java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v2, v3;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001=\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void appendEnvFile(java.lang.String,java.lang.String)>("GITHUB_STATE", v3);
return;
}
public void environmentVariable(java.lang.String, java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1, v2, v4, v5, v6, v7;
boolean v3;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v2.<java.lang.String: boolean contains(java.lang.CharSequence)>("\n");
if v3 != 0 goto label1;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001=\u0001");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void appendEnvFile(java.lang.String,java.lang.String)>("GITHUB_ENV", v4);
goto label2;
label1:
v5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v6 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v1, v5, v2, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001<<EOF\u0001\u0001\u0001EOF");
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void appendEnvFile(java.lang.String,java.lang.String)>("GITHUB_ENV", v7);
label2:
return;
}
public void jobSummary(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
java.nio.file.OpenOption[] v2;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 = newarray (java.nio.file.OpenOption)[0];
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void writeEnvFile(java.lang.String,java.lang.String,java.nio.file.OpenOption[])>("GITHUB_STEP_SUMMARY", v1, v2);
return;
}
public void appendJobSummary(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void appendEnvFile(java.lang.String,java.lang.String)>("GITHUB_STEP_SUMMARY", v1);
return;
}
public void removeJobSummary()
{
java.lang.IllegalStateException v3;
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.io.IOException v2;
java.nio.file.Path v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
label1:
v1 = specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.nio.file.Path getEnvFilePath(java.lang.String)>("GITHUB_STEP_SUMMARY");
staticinvoke <java.nio.file.Files: boolean deleteIfExists(java.nio.file.Path)>(v1);
label2:
goto label4;
label3:
v2 := @caughtexception;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to delete job summary", v2);
throw v3;
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void systemPath(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void appendEnvFile(java.lang.String,java.lang.String)>("GITHUB_PATH", v1);
return;
}
private void message(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.Integer, java.lang.Integer, java.lang.Integer, java.lang.Integer)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.Integer v5, v6, v7, v8;
java.util.function.Function v20;
java.util.LinkedHashMap v11;
java.lang.String v1, v10, v13, v14, v15, v16, v2, v24, v3, v4;
java.util.stream.Collector v22;
boolean v12, v17;
java.util.Set v18;
java.util.stream.Stream v19, v21;
java.lang.Object v23;
java.lang.StringBuilder v9;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Integer;
v6 := @parameter5: java.lang.Integer;
v7 := @parameter6: java.lang.Integer;
v8 := @parameter7: java.lang.Integer;
v9 = new java.lang.StringBuilder;
specialinvoke v9.<java.lang.StringBuilder: void <init>()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("::\u0001");
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
v11 = new java.util.LinkedHashMap;
specialinvoke v11.<java.util.LinkedHashMap: void <init>()>();
if v4 == null goto label1;
v12 = virtualinvoke v4.<java.lang.String: boolean isBlank()>();
if v12 != 0 goto label1;
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("file", v4);
label1:
if v5 == null goto label2;
v13 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v5);
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("line", v13);
label2:
if v6 == null goto label3;
v14 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v6);
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("endLine", v14);
label3:
if v7 == null goto label4;
v15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v7);
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("col", v15);
label4:
if v8 == null goto label5;
v16 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v8);
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("endColumn", v16);
label5:
if v3 == null goto label6;
v17 = virtualinvoke v3.<java.lang.String: boolean isBlank()>();
if v17 != 0 goto label6;
interfaceinvoke v11.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("title", v3);
label6:
v18 = interfaceinvoke v11.<java.util.Map: java.util.Set keySet()>();
v19 = interfaceinvoke v18.<java.util.Set: java.util.stream.Stream stream()>();
v20 = staticinvoke <io.quarkiverse.githubaction.runtime.CommandsImpl$lambda_message_0__1: java.util.function.Function bootstrap$(java.util.Map)>(v11);
v21 = interfaceinvoke v19.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v20);
v22 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(",", " ", "");
v23 = interfaceinvoke v21.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v22);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v23);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("::");
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
v24 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void command(java.lang.String)>(v24);
return;
}
private void command(java.lang.String)
{
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.io.PrintStream v2;
java.lang.String v1;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke v2.<java.io.PrintStream: void println(java.lang.String)>(v1);
return;
}
private void appendEnvFile(java.lang.String, java.lang.String)
{
java.nio.file.OpenOption[] v3;
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.nio.file.StandardOpenOption v4, v5;
java.lang.String v1, v2;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = newarray (java.nio.file.OpenOption)[2];
v4 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption CREATE>;
v3[0] = v4;
v5 = <java.nio.file.StandardOpenOption: java.nio.file.StandardOpenOption APPEND>;
v3[1] = v5;
specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: void writeEnvFile(java.lang.String,java.lang.String,java.nio.file.OpenOption[])>(v1, v2, v3);
return;
}
private transient void writeEnvFile(java.lang.String, java.lang.String, java.nio.file.OpenOption[])
{
org.jboss.logging.Logger v7;
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.io.IOException v8;
java.io.UncheckedIOException v9;
java.nio.file.OpenOption[] v3;
java.lang.String v1, v10, v2, v5, v6;
java.nio.file.Path v4;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.nio.file.OpenOption[];
v4 = specialinvoke v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.nio.file.Path getEnvFilePath(java.lang.String)>(v1);
label1:
v5 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
staticinvoke <java.nio.file.Files: java.nio.file.Path writeString(java.nio.file.Path,java.lang.CharSequence,java.nio.file.OpenOption[])>(v4, v6, v3);
v7 = <io.quarkiverse.githubaction.runtime.CommandsImpl: org.jboss.logging.Logger LOG>;
virtualinvoke v7.<org.jboss.logging.Logger: void debugf(java.lang.String,java.lang.Object,java.lang.Object)>("Wrote %s in environment file %s", v2, v4);
label2:
goto label4;
label3:
v8 := @caughtexception;
v9 = new java.io.UncheckedIOException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.nio.file.Path)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to write content to file \u0001 at path \u0001");
specialinvoke v9.<java.io.UncheckedIOException: void <init>(java.lang.String,java.io.IOException)>(v10, v8);
throw v9;
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
private java.nio.file.Path getEnvFilePath(java.lang.String)
{
java.lang.IllegalStateException v5;
io.quarkiverse.githubaction.runtime.CommandsImpl v0;
java.lang.String[] v7;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1, v6;
java.nio.file.Path v8;
boolean v4;
v0 := @this: io.quarkiverse.githubaction.runtime.CommandsImpl;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.quarkiverse.githubaction.runtime.CommandsImpl: java.util.Map env>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = virtualinvoke v3.<java.lang.String: boolean isBlank()>();
if v4 == 0 goto label2;
label1:
v5 = new java.lang.IllegalStateException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No path defined for environment file \u0001");
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
throw v5;
label2:
v7 = newarray (java.lang.String)[0];
v8 = staticinvoke <java.nio.file.Paths: java.nio.file.Path get(java.lang.String,java.lang.String[])>(v3, v7);
return v8;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkiverse/githubaction/runtime/CommandsImpl;");
<io.quarkiverse.githubaction.runtime.CommandsImpl: org.jboss.logging.Logger LOG> = v0;
return;
}
}