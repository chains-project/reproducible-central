public interface  io.quarkus.arc.InjectableContext extends java.lang.Object implements jakarta.enterprise.context.spi.AlterableContext
{
public abstract void destroy();
public abstract io.quarkus.arc.InjectableContext$ContextState getState();
public io.quarkus.arc.InjectableContext$ContextState getStateIfActive()
{
io.quarkus.arc.InjectableContext v0;
boolean v1;
io.quarkus.arc.InjectableContext$ContextState v2;
v0 := @this: io.quarkus.arc.InjectableContext;
v1 = interfaceinvoke v0.<io.quarkus.arc.InjectableContext: boolean isActive()>();
if v1 == 0 goto label1;
v2 = interfaceinvoke v0.<io.quarkus.arc.InjectableContext: io.quarkus.arc.InjectableContext$ContextState getState()>();
goto label2;
label1:
v2 = null;
label2:
return v2;
}
public java.lang.Object getIfActive(jakarta.enterprise.context.spi.Contextual, java.util.function.Function)
{
io.quarkus.arc.InjectableContext v0;
java.lang.Object v4, v5, v6;
jakarta.enterprise.context.spi.Contextual v1;
java.util.function.Function v2;
boolean v3;
v0 := @this: io.quarkus.arc.InjectableContext;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
v2 := @parameter1: java.util.function.Function;
v3 = interfaceinvoke v0.<io.quarkus.arc.InjectableContext: boolean isActive()>();
if v3 != 0 goto label1;
return null;
label1:
v4 = interfaceinvoke v0.<io.quarkus.arc.InjectableContext: java.lang.Object get(jakarta.enterprise.context.spi.Contextual)>(v1);
if v4 == null goto label2;
return v4;
label2:
v5 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
v6 = interfaceinvoke v0.<io.quarkus.arc.InjectableContext: java.lang.Object get(jakarta.enterprise.context.spi.Contextual,jakarta.enterprise.context.spi.CreationalContext)>(v1, v5);
return v6;
}
public void destroy(io.quarkus.arc.InjectableContext$ContextState)
{
java.lang.IllegalStateException v8;
java.util.Iterator v4;
io.quarkus.arc.InjectableContext v0;
java.util.Set v3;
java.lang.Exception v7;
io.quarkus.arc.InjectableContext$ContextState v1;
java.util.Map v2;
java.lang.Object v6;
java.lang.String v9;
boolean v5;
v0 := @this: io.quarkus.arc.InjectableContext;
v1 := @parameter0: io.quarkus.arc.InjectableContext$ContextState;
v2 = interfaceinvoke v1.<io.quarkus.arc.InjectableContext$ContextState: java.util.Map getContextualInstances()>();
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set keySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label5;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
label2:
interfaceinvoke v0.<io.quarkus.arc.InjectableContext: void destroy(jakarta.enterprise.context.spi.Contextual)>(v6);
label3:
goto label1;
label4:
v7 := @caughtexception;
v8 = new java.lang.IllegalStateException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.quarkus.arc.InjectableBean)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to destroy contextual instance of \u0001");
specialinvoke v8.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v9, v7);
throw v8;
label5:
return;
catch java.lang.Exception from label2 to label3 with label4;
}
public boolean isNormal()
{
io.quarkus.arc.InjectableContext v0;
java.lang.Class v1;
boolean v2;
v0 := @this: io.quarkus.arc.InjectableContext;
v1 = interfaceinvoke v0.<io.quarkus.arc.InjectableContext: java.lang.Class getScope()>();
v2 = virtualinvoke v1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljakarta/enterprise/context/NormalScope;");
return v2;
}
}