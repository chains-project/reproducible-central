public interface  io.quarkus.arc.InjectableInstance extends java.lang.Object implements jakarta.enterprise.inject.Instance
{
public abstract io.quarkus.arc.InstanceHandle getHandle();
public abstract java.lang.Iterable handles();
public abstract transient io.quarkus.arc.InjectableInstance select(java.lang.'annotation'.Annotation[]);
public abstract transient io.quarkus.arc.InjectableInstance select(java.lang.Class, java.lang.'annotation'.Annotation[]);
public abstract transient io.quarkus.arc.InjectableInstance select(jakarta.enterprise.util.TypeLiteral, java.lang.'annotation'.Annotation[]);
public abstract void clearCache();
public abstract java.util.Iterator iterator();
public java.lang.Object orElse(java.lang.Object)
{
java.lang.Object v1, v3;
io.quarkus.arc.InjectableInstance v0;
boolean v2;
v0 := @this: io.quarkus.arc.InjectableInstance;
v1 := @parameter0: java.lang.Object;
v2 = interfaceinvoke v0.<io.quarkus.arc.InjectableInstance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = interfaceinvoke v0.<io.quarkus.arc.InjectableInstance: java.lang.Object get()>();
goto label2;
label1:
v3 = v1;
label2:
return v3;
}
public java.lang.Object orNull()
{
java.lang.Object v1;
io.quarkus.arc.InjectableInstance v0;
v0 := @this: io.quarkus.arc.InjectableInstance;
v1 = interfaceinvoke v0.<io.quarkus.arc.InjectableInstance: java.lang.Object orElse(java.lang.Object)>(null);
return v1;
}
}