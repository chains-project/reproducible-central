class io.quarkus.arc.impl.ArcCDIProvider$ArcCDI extends jakarta.enterprise.inject.spi.CDI
{
private final jakarta.enterprise.inject.Instance instanceDelegate;
public void <init>()
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
io.quarkus.arc.ArcContainer v1;
jakarta.enterprise.inject.Instance v3;
jakarta.enterprise.inject.spi.BeanManager v2;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
specialinvoke v0.<jakarta.enterprise.inject.spi.CDI: void <init>()>();
v1 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcContainer: jakarta.enterprise.inject.spi.BeanManager beanManager()>();
v3 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.BeanManager: jakarta.enterprise.inject.Instance createInstance()>();
v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate> = v3;
return;
}
public transient jakarta.enterprise.inject.Instance select(java.lang.'annotation'.Annotation[])
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
java.lang.'annotation'.Annotation[] v1;
jakarta.enterprise.inject.Instance v2, v3;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v3 = interfaceinvoke v2.<jakarta.enterprise.inject.Instance: jakarta.enterprise.inject.Instance select(java.lang.'annotation'.Annotation[])>(v1);
return v3;
}
public transient jakarta.enterprise.inject.Instance select(java.lang.Class, java.lang.'annotation'.Annotation[])
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
java.lang.Class v1;
java.lang.'annotation'.Annotation[] v2;
jakarta.enterprise.inject.Instance v3, v4;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: jakarta.enterprise.inject.Instance select(java.lang.Class,java.lang.'annotation'.Annotation[])>(v1, v2);
return v4;
}
public transient jakarta.enterprise.inject.Instance select(jakarta.enterprise.util.TypeLiteral, java.lang.'annotation'.Annotation[])
{
jakarta.enterprise.util.TypeLiteral v1;
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
java.lang.'annotation'.Annotation[] v2;
jakarta.enterprise.inject.Instance v3, v4;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 := @parameter0: jakarta.enterprise.util.TypeLiteral;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: jakarta.enterprise.inject.Instance select(jakarta.enterprise.util.TypeLiteral,java.lang.'annotation'.Annotation[])>(v1, v2);
return v4;
}
public boolean isUnsatisfied()
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v1;
boolean v2;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isUnsatisfied()>();
return v2;
}
public boolean isAmbiguous()
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v1;
boolean v2;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isAmbiguous()>();
return v2;
}
public void destroy(java.lang.Object)
{
java.lang.Object v1;
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v2;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
interfaceinvoke v2.<jakarta.enterprise.inject.Instance: void destroy(java.lang.Object)>(v1);
return;
}
public jakarta.enterprise.inject.Instance$Handle getHandle()
{
jakarta.enterprise.inject.Instance$Handle v2;
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v1;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: jakarta.enterprise.inject.Instance$Handle getHandle()>();
return v2;
}
public java.lang.Iterable handles()
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v1;
java.lang.Iterable v2;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: java.lang.Iterable handles()>();
return v2;
}
public java.util.Iterator iterator()
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
java.util.Iterator v2;
jakarta.enterprise.inject.Instance v1;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: java.util.Iterator iterator()>();
return v2;
}
public java.lang.Object get()
{
java.lang.Object v2;
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v1;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
return v2;
}
public jakarta.enterprise.inject.spi.BeanManager getBeanManager()
{
io.quarkus.arc.ArcContainer v1;
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.spi.BeanManager v2;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcContainer: jakarta.enterprise.inject.spi.BeanManager beanManager()>();
return v2;
}
void destroy()
{
io.quarkus.arc.impl.ArcCDIProvider$ArcCDI v0;
jakarta.enterprise.inject.Instance v1;
v0 := @this: io.quarkus.arc.impl.ArcCDIProvider$ArcCDI;
v1 = v0.<io.quarkus.arc.impl.ArcCDIProvider$ArcCDI: jakarta.enterprise.inject.Instance instanceDelegate>;
virtualinvoke v1.<io.quarkus.arc.impl.InstanceImpl: void destroy()>();
return;
}
}