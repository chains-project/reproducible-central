public class io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler extends java.lang.Object implements io.quarkus.arc.AsyncObserverExceptionHandler
{
private static final org.jboss.logging.Logger LOG;
public void <init>()
{
io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler v0;
v0 := @this: io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void handle(java.lang.Throwable, jakarta.enterprise.inject.spi.ObserverMethod, jakarta.enterprise.inject.spi.EventContext)
{
java.lang.Throwable v1;
io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler v0;
org.jboss.logging.Logger v4, v8;
jakarta.enterprise.inject.spi.ObserverMethod v2;
jakarta.enterprise.inject.spi.EventContext v3;
java.lang.reflect.Type v10, v6;
java.lang.String v11, v7;
jakarta.enterprise.inject.spi.EventMetadata v5, v9;
v0 := @this: io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: jakarta.enterprise.inject.spi.ObserverMethod;
v3 := @parameter2: jakarta.enterprise.inject.spi.EventContext;
v4 = <io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler: org.jboss.logging.Logger LOG>;
v5 = interfaceinvoke v3.<jakarta.enterprise.inject.spi.EventContext: jakarta.enterprise.inject.spi.EventMetadata getMetadata()>();
v6 = interfaceinvoke v5.<jakarta.enterprise.inject.spi.EventMetadata: java.lang.reflect.Type getType()>();
v7 = interfaceinvoke v6.<java.lang.reflect.Type: java.lang.String getTypeName()>();
virtualinvoke v4.<org.jboss.logging.Logger: void errorf(java.lang.String,java.lang.Object,java.lang.Object)>("Failure occurred while notifying an async %s for event of type %s \n- please enable debug logging to see the full stack trace", v2, v7);
v8 = <io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler: org.jboss.logging.Logger LOG>;
v9 = interfaceinvoke v3.<jakarta.enterprise.inject.spi.EventContext: jakarta.enterprise.inject.spi.EventMetadata getMetadata()>();
v10 = interfaceinvoke v9.<jakarta.enterprise.inject.spi.EventMetadata: java.lang.reflect.Type getType()>();
v11 = interfaceinvoke v10.<java.lang.reflect.Type: java.lang.String getTypeName()>();
virtualinvoke v8.<org.jboss.logging.Logger: void debugf(java.lang.Throwable,java.lang.String,java.lang.Object,java.lang.Object)>(v1, "Failure occurred while notifying an async %s for event of type %s", v2, v11);
return;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/arc/impl/DefaultAsyncObserverExceptionHandler;");
<io.quarkus.arc.impl.DefaultAsyncObserverExceptionHandler: org.jboss.logging.Logger LOG> = v0;
return;
}
}