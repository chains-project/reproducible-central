public class io.quarkus.arc.impl.InjectionPointImpl extends java.lang.Object implements jakarta.enterprise.inject.spi.InjectionPoint
{
private final java.lang.reflect.Type requiredType;
private final java.util.Set qualifiers;
private final io.quarkus.arc.InjectableBean bean;
private final jakarta.enterprise.inject.spi.Annotated annotated;
private final java.lang.reflect.Member member;
private final boolean isTransient;
public void <init>(java.lang.reflect.Type, java.lang.reflect.Type, java.util.Set, io.quarkus.arc.InjectableBean, java.util.Set, java.lang.reflect.Member, int, boolean)
{
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedFieldImpl v13;
io.quarkus.arc.impl.InjectionPointImpl$AnnotatedParameterImpl v11;
java.lang.reflect.Member v6;
io.quarkus.arc.InjectableBean v4;
java.util.Set v3, v5, v9;
io.quarkus.arc.impl.InjectionPointImpl v0;
java.lang.reflect.Type v1, v2;
int v7;
boolean v10, v12, v8;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: java.lang.reflect.Type;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: io.quarkus.arc.InjectableBean;
v5 := @parameter4: java.util.Set;
v6 := @parameter5: java.lang.reflect.Member;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.InjectionPointImpl: java.lang.reflect.Type requiredType> = v2;
v9 = staticinvoke <io.quarkus.arc.impl.CollectionHelpers: java.util.Set toImmutableSmallSet(java.util.Set)>(v3);
v0.<io.quarkus.arc.impl.InjectionPointImpl: java.util.Set qualifiers> = v9;
v0.<io.quarkus.arc.impl.InjectionPointImpl: io.quarkus.arc.InjectableBean bean> = v4;
v10 = v6 instanceof java.lang.reflect.Executable;
if v10 == 0 goto label1;
v11 = new io.quarkus.arc.impl.InjectionPointImpl$AnnotatedParameterImpl;
specialinvoke v11.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedParameterImpl: void <init>(java.lang.reflect.Type,java.util.Set,int,java.lang.reflect.Executable)>(v1, v5, v7, v6);
v0.<io.quarkus.arc.impl.InjectionPointImpl: jakarta.enterprise.inject.spi.Annotated annotated> = v11;
goto label3;
label1:
v12 = v6 instanceof java.lang.reflect.Field;
if v12 == 0 goto label2;
v13 = new io.quarkus.arc.impl.InjectionPointImpl$AnnotatedFieldImpl;
specialinvoke v13.<io.quarkus.arc.impl.InjectionPointImpl$AnnotatedFieldImpl: void <init>(java.lang.reflect.Type,java.util.Set,java.lang.reflect.Field)>(v1, v5, v6);
v0.<io.quarkus.arc.impl.InjectionPointImpl: jakarta.enterprise.inject.spi.Annotated annotated> = v13;
goto label3;
label2:
v0.<io.quarkus.arc.impl.InjectionPointImpl: jakarta.enterprise.inject.spi.Annotated annotated> = null;
label3:
v0.<io.quarkus.arc.impl.InjectionPointImpl: java.lang.reflect.Member member> = v6;
v0.<io.quarkus.arc.impl.InjectionPointImpl: boolean isTransient> = v8;
return;
}
public java.lang.reflect.Type getType()
{
io.quarkus.arc.impl.InjectionPointImpl v0;
java.lang.reflect.Type v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl: java.lang.reflect.Type requiredType>;
return v1;
}
public java.util.Set getQualifiers()
{
io.quarkus.arc.impl.InjectionPointImpl v0;
java.util.Set v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl: java.util.Set qualifiers>;
return v1;
}
public jakarta.enterprise.inject.spi.Bean getBean()
{
io.quarkus.arc.InjectableBean v1;
io.quarkus.arc.impl.InjectionPointImpl v0;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl: io.quarkus.arc.InjectableBean bean>;
return v1;
}
public java.lang.reflect.Member getMember()
{
io.quarkus.arc.impl.InjectionPointImpl v0;
java.lang.reflect.Member v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl: java.lang.reflect.Member member>;
return v1;
}
public jakarta.enterprise.inject.spi.Annotated getAnnotated()
{
io.quarkus.arc.impl.InjectionPointImpl v0;
jakarta.enterprise.inject.spi.Annotated v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl: jakarta.enterprise.inject.spi.Annotated annotated>;
return v1;
}
public boolean isDelegate()
{
io.quarkus.arc.impl.InjectionPointImpl v0;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
return 0;
}
public boolean isTransient()
{
io.quarkus.arc.impl.InjectionPointImpl v0;
boolean v1;
v0 := @this: io.quarkus.arc.impl.InjectionPointImpl;
v1 = v0.<io.quarkus.arc.impl.InjectionPointImpl: boolean isTransient>;
return v1;
}
}