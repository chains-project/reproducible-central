class io.quarkus.arc.impl.RequestContext extends java.lang.Object implements io.quarkus.arc.ManagedContext
{
private static final org.jboss.logging.Logger LOG;
private final io.quarkus.arc.CurrentContext currentContext;
private final io.quarkus.arc.impl.EventImpl$Notifier initializedNotifier;
private final io.quarkus.arc.impl.EventImpl$Notifier beforeDestroyedNotifier;
private final io.quarkus.arc.impl.EventImpl$Notifier destroyedNotifier;
public void <init>(io.quarkus.arc.CurrentContext, io.quarkus.arc.impl.EventImpl$Notifier, io.quarkus.arc.impl.EventImpl$Notifier, io.quarkus.arc.impl.EventImpl$Notifier)
{
io.quarkus.arc.CurrentContext v1;
io.quarkus.arc.impl.EventImpl$Notifier v2, v3, v4;
io.quarkus.arc.impl.RequestContext v0;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: io.quarkus.arc.CurrentContext;
v2 := @parameter1: io.quarkus.arc.impl.EventImpl$Notifier;
v3 := @parameter2: io.quarkus.arc.impl.EventImpl$Notifier;
v4 := @parameter3: io.quarkus.arc.impl.EventImpl$Notifier;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext> = v1;
v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.impl.EventImpl$Notifier initializedNotifier> = v2;
v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.impl.EventImpl$Notifier beforeDestroyedNotifier> = v3;
v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.impl.EventImpl$Notifier destroyedNotifier> = v4;
return;
}
public java.lang.Class getScope()
{
io.quarkus.arc.impl.RequestContext v0;
v0 := @this: io.quarkus.arc.impl.RequestContext;
return class "Ljakarta/enterprise/context/RequestScoped;";
}
public java.lang.Object getIfActive(jakarta.enterprise.context.spi.Contextual, java.util.function.Function)
{
jakarta.enterprise.context.spi.Contextual v1;
java.lang.IllegalArgumentException v4;
java.util.function.Function v2;
io.quarkus.arc.InjectableContext$ContextState v6;
io.quarkus.arc.CurrentContext v5;
java.util.Map v12, v7;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Object v11, v13, v8, v9;
boolean v3;
io.quarkus.arc.impl.ContextInstanceHandleImpl v10;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
v2 := @parameter1: java.util.function.Function;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Contextual must not be null");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "CreationalContext supplier must not be null");
v3 = staticinvoke <io.quarkus.arc.impl.Scopes: boolean scopeMatches(io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableBean)>(v0, v1);
if v3 != 0 goto label1;
v4 = staticinvoke <io.quarkus.arc.impl.Scopes: java.lang.IllegalArgumentException scopeDoesNotMatchException(io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableBean)>(v0, v1);
throw v4;
label1:
v5 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v6 = interfaceinvoke v5.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
if v6 != null goto label2;
return null;
label2:
v7 = v6.<io.quarkus.arc.impl.RequestContext$RequestContextState: java.util.Map map>;
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v8 != null goto label3;
v9 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
v10 = new io.quarkus.arc.impl.ContextInstanceHandleImpl;
v11 = interfaceinvoke v1.<jakarta.enterprise.context.spi.Contextual: java.lang.Object create(jakarta.enterprise.context.spi.CreationalContext)>(v9);
specialinvoke v10.<io.quarkus.arc.impl.ContextInstanceHandleImpl: void <init>(io.quarkus.arc.InjectableBean,java.lang.Object,jakarta.enterprise.context.spi.CreationalContext)>(v1, v11, v9);
v8 = v10;
v12 = v6.<io.quarkus.arc.impl.RequestContext$RequestContextState: java.util.Map map>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v10);
label3:
v13 = interfaceinvoke v8.<io.quarkus.arc.ContextInstanceHandle: java.lang.Object get()>();
return v13;
}
public java.lang.Object get(jakarta.enterprise.context.spi.Contextual, jakarta.enterprise.context.spi.CreationalContext)
{
jakarta.enterprise.context.ContextNotActiveException v6;
io.quarkus.arc.impl.RequestContext v0;
io.quarkus.arc.impl.CreationalContextImpl v4;
java.lang.Object v3, v5;
jakarta.enterprise.context.spi.CreationalContext v2;
jakarta.enterprise.context.spi.Contextual v1;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
v2 := @parameter1: jakarta.enterprise.context.spi.CreationalContext;
v3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "CreationalContext must not be null");
v4 = staticinvoke <io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl unwrap(jakarta.enterprise.context.spi.CreationalContext)>(v3);
v5 = virtualinvoke v0.<io.quarkus.arc.impl.RequestContext: java.lang.Object getIfActive(jakarta.enterprise.context.spi.Contextual,java.util.function.Function)>(v1, v4);
if v5 != null goto label1;
v6 = specialinvoke v0.<io.quarkus.arc.impl.RequestContext: jakarta.enterprise.context.ContextNotActiveException notActive()>();
throw v6;
label1:
return v5;
}
public java.lang.Object get(jakarta.enterprise.context.spi.Contextual)
{
jakarta.enterprise.context.spi.Contextual v1;
java.lang.IllegalArgumentException v3;
io.quarkus.arc.InjectableContext$ContextState v5;
io.quarkus.arc.CurrentContext v4;
jakarta.enterprise.context.ContextNotActiveException v6;
java.util.Map v7;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Object v8, v9;
boolean v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Contextual must not be null");
v2 = staticinvoke <io.quarkus.arc.impl.Scopes: boolean scopeMatches(io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableBean)>(v0, v1);
if v2 != 0 goto label1;
v3 = staticinvoke <io.quarkus.arc.impl.Scopes: java.lang.IllegalArgumentException scopeDoesNotMatchException(io.quarkus.arc.InjectableContext,io.quarkus.arc.InjectableBean)>(v0, v1);
throw v3;
label1:
v4 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v5 = interfaceinvoke v4.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
if v5 != null goto label2;
v6 = specialinvoke v0.<io.quarkus.arc.impl.RequestContext: jakarta.enterprise.context.ContextNotActiveException notActive()>();
throw v6;
label2:
v7 = v5.<io.quarkus.arc.impl.RequestContext$RequestContextState: java.util.Map map>;
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v8 != null goto label3;
v9 = null;
goto label4;
label3:
v9 = interfaceinvoke v8.<io.quarkus.arc.ContextInstanceHandle: java.lang.Object get()>();
label4:
return v9;
}
public boolean isActive()
{
io.quarkus.arc.CurrentContext v1;
io.quarkus.arc.impl.RequestContext v0;
boolean v3;
io.quarkus.arc.InjectableContext$ContextState v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v2 = interfaceinvoke v1.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
if v2 == null goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public void destroy(jakarta.enterprise.context.spi.Contextual)
{
io.quarkus.arc.CurrentContext v2;
jakarta.enterprise.context.ContextNotActiveException v4;
java.util.Map v5;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Object v6;
jakarta.enterprise.context.spi.Contextual v1;
io.quarkus.arc.InjectableContext$ContextState v3;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
v2 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v3 = interfaceinvoke v2.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
if v3 != null goto label1;
v4 = specialinvoke v0.<io.quarkus.arc.impl.RequestContext: jakarta.enterprise.context.ContextNotActiveException notActive()>();
throw v4;
label1:
v5 = v3.<io.quarkus.arc.impl.RequestContext$RequestContextState: java.util.Map map>;
v6 = interfaceinvoke v5.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
if v6 == null goto label2;
interfaceinvoke v6.<io.quarkus.arc.ContextInstanceHandle: void destroy()>();
label2:
return;
}
public void activate(io.quarkus.arc.InjectableContext$ContextState)
{
org.jboss.logging.Logger v13, v2;
java.util.function.Function v9;
io.quarkus.arc.InjectableContext$ContextState v1;
io.quarkus.arc.CurrentContext v16, v21;
java.lang.Thread v4;
int v14;
io.quarkus.arc.impl.EventImpl$Notifier v19;
java.lang.String v15, v24, v25;
java.util.stream.Collector v11;
boolean v20, v3;
java.util.concurrent.ConcurrentHashMap v18;
java.lang.IllegalArgumentException v22;
java.lang.StackTraceElement[] v5;
java.util.stream.Stream v10, v6, v7, v8;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Class v23;
java.lang.Object v12;
io.quarkus.arc.impl.RequestContext$RequestContextState v17;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: io.quarkus.arc.InjectableContext$ContextState;
v2 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
v3 = virtualinvoke v2.<org.jboss.logging.Logger: boolean isTraceEnabled()>();
if v3 == 0 goto label3;
v4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v5 = virtualinvoke v4.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();
v6 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(v5);
v7 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream skip(long)>(2L);
v8 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream limit(long)>(7L);
v9 = staticinvoke <io.quarkus.arc.impl.RequestContext$lambda_activate_0__2583: java.util.function.Function bootstrap$()>();
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v9);
v11 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v11);
v13 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
if v1 == null goto label1;
v14 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
v15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v14);
goto label2;
label1:
v15 = "new";
label2:
virtualinvoke v13.<org.jboss.logging.Logger: void tracef(java.lang.String,java.lang.Object,java.lang.Object)>("Activate %s %s\n\t...", v15, v12);
label3:
if v1 != null goto label4;
v16 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v17 = new io.quarkus.arc.impl.RequestContext$RequestContextState;
v18 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v18.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
specialinvoke v17.<io.quarkus.arc.impl.RequestContext$RequestContextState: void <init>(java.util.concurrent.ConcurrentMap)>(v18);
interfaceinvoke v16.<io.quarkus.arc.CurrentContext: void set(io.quarkus.arc.InjectableContext$ContextState)>(v17);
v19 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.impl.EventImpl$Notifier initializedNotifier>;
specialinvoke v0.<io.quarkus.arc.impl.RequestContext: void fireIfNotEmpty(io.quarkus.arc.impl.EventImpl$Notifier)>(v19);
goto label6;
label4:
v20 = v1 instanceof io.quarkus.arc.impl.RequestContext$RequestContextState;
if v20 == 0 goto label5;
v21 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
interfaceinvoke v21.<io.quarkus.arc.CurrentContext: void set(io.quarkus.arc.InjectableContext$ContextState)>(v1);
goto label6;
label5:
v22 = new java.lang.IllegalArgumentException;
v23 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v24 = virtualinvoke v23.<java.lang.Class: java.lang.String getName()>();
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v24) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid initial state: \u0001");
specialinvoke v22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v25);
throw v22;
label6:
return;
}
public io.quarkus.arc.InjectableContext$ContextState getState()
{
io.quarkus.arc.CurrentContext v1;
jakarta.enterprise.context.ContextNotActiveException v3;
io.quarkus.arc.impl.RequestContext v0;
io.quarkus.arc.InjectableContext$ContextState v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v2 = interfaceinvoke v1.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
if v2 != null goto label1;
v3 = specialinvoke v0.<io.quarkus.arc.impl.RequestContext: jakarta.enterprise.context.ContextNotActiveException notActive()>();
throw v3;
label1:
return v2;
}
public io.quarkus.arc.InjectableContext$ContextState getStateIfActive()
{
io.quarkus.arc.impl.RequestContext v0;
io.quarkus.arc.CurrentContext v1;
io.quarkus.arc.InjectableContext$ContextState v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v2 = interfaceinvoke v1.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
return v2;
}
public void deactivate()
{
org.jboss.logging.Logger v1, v12;
java.util.function.Function v8;
java.lang.StackTraceElement[] v4;
java.util.stream.Stream v5, v6, v7, v9;
io.quarkus.arc.CurrentContext v13;
java.lang.Thread v3;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Object v11;
java.util.stream.Collector v10;
boolean v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
v2 = virtualinvoke v1.<org.jboss.logging.Logger: boolean isTraceEnabled()>();
if v2 == 0 goto label1;
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v4 = virtualinvoke v3.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();
v5 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(v4);
v6 = interfaceinvoke v5.<java.util.stream.Stream: java.util.stream.Stream skip(long)>(2L);
v7 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream limit(long)>(7L);
v8 = staticinvoke <io.quarkus.arc.impl.RequestContext$lambda_deactivate_1__2584: java.util.function.Function bootstrap$()>();
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v8);
v10 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining()>();
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v10);
v12 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
virtualinvoke v12.<org.jboss.logging.Logger: void tracef(java.lang.String,java.lang.Object)>("Deactivate%s\n\t...", v11);
label1:
v13 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
interfaceinvoke v13.<io.quarkus.arc.CurrentContext: void remove()>();
return;
}
public void destroy()
{
io.quarkus.arc.impl.RequestContext v0;
io.quarkus.arc.CurrentContext v1;
io.quarkus.arc.InjectableContext$ContextState v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.CurrentContext currentContext>;
v2 = interfaceinvoke v1.<io.quarkus.arc.CurrentContext: io.quarkus.arc.InjectableContext$ContextState get()>();
virtualinvoke v0.<io.quarkus.arc.impl.RequestContext: void destroy(io.quarkus.arc.InjectableContext$ContextState)>(v2);
return;
}
public void destroy(io.quarkus.arc.InjectableContext$ContextState)
{
org.jboss.logging.Logger v13, v2;
java.util.function.Function v9;
io.quarkus.arc.InjectableContext$ContextState v1;
java.lang.Thread v4;
java.util.Map v19;
int v14;
io.quarkus.arc.impl.EventImpl$Notifier v18, v22;
java.util.function.BiConsumer v21;
java.lang.String v15, v25, v26;
java.util.stream.Collector v11;
boolean v16, v17, v20, v3;
java.lang.IllegalArgumentException v23;
java.lang.StackTraceElement[] v5;
java.util.stream.Stream v10, v6, v7, v8;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Class v24;
java.lang.Object v12;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: io.quarkus.arc.InjectableContext$ContextState;
v2 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
v3 = virtualinvoke v2.<org.jboss.logging.Logger: boolean isTraceEnabled()>();
if v3 == 0 goto label3;
v4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v5 = virtualinvoke v4.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();
v6 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(v5);
v7 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream skip(long)>(2L);
v8 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream limit(long)>(7L);
v9 = staticinvoke <io.quarkus.arc.impl.RequestContext$lambda_destroy_2__2586: java.util.function.Function bootstrap$()>();
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v9);
v11 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v11);
v13 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
if v1 == null goto label1;
v14 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
v15 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v14);
goto label2;
label1:
v15 = "";
label2:
virtualinvoke v13.<org.jboss.logging.Logger: void tracef(java.lang.String,java.lang.Object,java.lang.Object)>("Destroy %s%s\n\t...", v15, v12);
label3:
if v1 != null goto label4;
return;
label4:
v16 = v1 instanceof io.quarkus.arc.impl.RequestContext$RequestContextState;
if v16 == 0 goto label6;
v17 = virtualinvoke v1.<io.quarkus.arc.impl.RequestContext$RequestContextState: boolean invalidate()>();
if v17 == 0 goto label7;
v18 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.impl.EventImpl$Notifier beforeDestroyedNotifier>;
specialinvoke v0.<io.quarkus.arc.impl.RequestContext: void fireIfNotEmpty(io.quarkus.arc.impl.EventImpl$Notifier)>(v18);
v19 = v1.<io.quarkus.arc.impl.RequestContext$RequestContextState: java.util.Map map>;
v20 = interfaceinvoke v19.<java.util.Map: boolean isEmpty()>();
if v20 != 0 goto label5;
v21 = staticinvoke <io.quarkus.arc.impl.RequestContext$destroyContextElement__2585: java.util.function.BiConsumer bootstrap$(io.quarkus.arc.impl.RequestContext)>(v0);
interfaceinvoke v19.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v21);
interfaceinvoke v19.<java.util.Map: void clear()>();
label5:
v22 = v0.<io.quarkus.arc.impl.RequestContext: io.quarkus.arc.impl.EventImpl$Notifier destroyedNotifier>;
specialinvoke v0.<io.quarkus.arc.impl.RequestContext: void fireIfNotEmpty(io.quarkus.arc.impl.EventImpl$Notifier)>(v22);
goto label7;
label6:
v23 = new java.lang.IllegalArgumentException;
v24 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v25 = virtualinvoke v24.<java.lang.Class: java.lang.String getName()>();
v26 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v25) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid state implementation: \u0001");
specialinvoke v23.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v26);
throw v23;
label7:
return;
}
public void destroyContextElement(jakarta.enterprise.context.spi.Contextual, io.quarkus.arc.ContextInstanceHandle)
{
java.lang.IllegalStateException v4;
io.quarkus.arc.impl.RequestContext v0;
java.lang.Object v5;
java.lang.String v6;
io.quarkus.arc.ContextInstanceHandle v2;
jakarta.enterprise.context.spi.Contextual v1;
java.lang.Exception v3;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
v2 := @parameter1: io.quarkus.arc.ContextInstanceHandle;
label1:
interfaceinvoke v2.<io.quarkus.arc.ContextInstanceHandle: void destroy()>();
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalStateException;
v5 = interfaceinvoke v2.<io.quarkus.arc.ContextInstanceHandle: java.lang.Object get()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to destroy instance\u0001");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v6, v3);
throw v4;
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private void fireIfNotEmpty(io.quarkus.arc.impl.EventImpl$Notifier)
{
org.jboss.logging.Logger v5;
java.util.Set v7;
java.lang.Exception v4;
io.quarkus.arc.impl.EventImpl$Notifier v1;
io.quarkus.arc.impl.RequestContext v0;
java.lang.String v3, v8;
jakarta.enterprise.inject.spi.EventMetadata v6;
boolean v2;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 := @parameter0: io.quarkus.arc.impl.EventImpl$Notifier;
if v1 == null goto label4;
v2 = virtualinvoke v1.<io.quarkus.arc.impl.EventImpl$Notifier: boolean isEmpty()>();
if v2 != 0 goto label4;
label1:
v3 = virtualinvoke v0.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v1.<io.quarkus.arc.impl.EventImpl$Notifier: void notify(java.lang.Object)>(v3);
label2:
goto label4;
label3:
v4 := @caughtexception;
v5 = <io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG>;
v6 = v1.<io.quarkus.arc.impl.EventImpl$Notifier: jakarta.enterprise.inject.spi.EventMetadata eventMetadata>;
v7 = interfaceinvoke v6.<jakarta.enterprise.inject.spi.EventMetadata: java.util.Set getQualifiers()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.Set)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("An error occurred during delivery of the container lifecycle event for qualifiers \u0001");
virtualinvoke v5.<org.jboss.logging.Logger: void warn(java.lang.Object,java.lang.Throwable)>(v8, v4);
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private jakarta.enterprise.context.ContextNotActiveException notActive()
{
io.quarkus.arc.impl.RequestContext v0;
jakarta.enterprise.context.ContextNotActiveException v1;
v0 := @this: io.quarkus.arc.impl.RequestContext;
v1 = new jakarta.enterprise.context.ContextNotActiveException;
specialinvoke v1.<jakarta.enterprise.context.ContextNotActiveException: void <init>(java.lang.String)>("Request context is not active - you can activate the request context for a specific method using the @ActivateRequestContext interceptor binding");
return v1;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.String)>("io.quarkus.arc.requestContext");
<io.quarkus.arc.impl.RequestContext: org.jboss.logging.Logger LOG> = v0;
return;
}
}