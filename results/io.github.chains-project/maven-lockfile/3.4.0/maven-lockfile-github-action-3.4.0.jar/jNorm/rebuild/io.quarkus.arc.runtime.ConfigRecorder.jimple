public class io.quarkus.arc.runtime.ConfigRecorder extends java.lang.Object
{
public void <init>()
{
io.quarkus.arc.runtime.ConfigRecorder v0;
v0 := @this: io.quarkus.arc.runtime.ConfigRecorder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void validateConfigProperties(java.util.Set)
{
jakarta.enterprise.inject.spi.DeploymentException v41;
java.lang.Thread v3;
io.quarkus.arc.runtime.ConfigRecorder v0;
boolean v10, v15, v40, v45;
java.util.Set v1;
org.eclipse.microprofile.config.Config v2;
java.lang.Exception v32;
io.quarkus.runtime.configuration.ConfigurationException v42;
java.util.List v18, v20, v24, v26;
java.lang.reflect.Type v14;
java.lang.reflect.Type[] v22;
java.lang.StringBuilder v33, v34, v35, v37, v8;
java.lang.ClassLoader v4;
io.quarkus.arc.impl.ParameterizedTypeImpl v29;
java.util.ArrayList v7;
java.util.HashSet v6;
int v17, v19, v21, v23, v25;
java.lang.String v12, v30, v31, v36, v38, v39, v43;
java.util.Iterator v44, v9;
java.lang.reflect.TypeVariable[] v16;
java.lang.Class v13, v28, v5;
java.lang.Object v11, v27, v46;
v0 := @this: io.quarkus.arc.runtime.ConfigRecorder;
v1 := @parameter0: java.util.Set;
v2 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v4 = virtualinvoke v3.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
if v4 != null goto label01;
v5 = class "Lio/quarkus/arc/runtime/ConfigRecorder;";
v4 = virtualinvoke v5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
label01:
v6 = new java.util.HashSet;
specialinvoke v6.<java.util.HashSet: void <init>()>();
v7 = new java.util.ArrayList;
specialinvoke v7.<java.util.ArrayList: void <init>()>();
v8 = new java.lang.StringBuilder;
specialinvoke v8.<java.lang.StringBuilder: void <init>()>();
v9 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label02:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label10;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.lang.String getRawTypeName()>();
v13 = specialinvoke v0.<io.quarkus.arc.runtime.ConfigRecorder: java.lang.Class load(java.lang.String,java.lang.ClassLoader)>(v12, v4);
v14 = v13;
v15 = virtualinvoke v13.<java.lang.Class: boolean isArray()>();
if v15 != 0 goto label03;
v16 = virtualinvoke v13.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v17 = lengthof v16;
if v17 <= 0 goto label04;
if v13 == class "Ljava/util/Map;" goto label04;
if v13 == class "Ljava/util/List;" goto label04;
if v13 == class "Ljava/util/Set;" goto label04;
label03:
v14 = class "Ljava/lang/String;";
goto label07;
label04:
v18 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.util.List getActualTypeArgumentNames()>();
v19 = interfaceinvoke v18.<java.util.List: int size()>();
if v19 <= 0 goto label07;
v20 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.util.List getActualTypeArgumentNames()>();
v21 = interfaceinvoke v20.<java.util.List: int size()>();
v22 = newarray (java.lang.reflect.Type)[v21];
v23 = 0;
label05:
v24 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.util.List getActualTypeArgumentNames()>();
v25 = interfaceinvoke v24.<java.util.List: int size()>();
if v23 >= v25 goto label06;
v26 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.util.List getActualTypeArgumentNames()>();
v27 = interfaceinvoke v26.<java.util.List: java.lang.Object get(int)>(v23);
v28 = specialinvoke v0.<io.quarkus.arc.runtime.ConfigRecorder: java.lang.Class load(java.lang.String,java.lang.ClassLoader)>(v27, v4);
v22[v23] = v28;
v23 = v23 + 1;
goto label05;
label06:
v29 = new io.quarkus.arc.impl.ParameterizedTypeImpl;
specialinvoke v29.<io.quarkus.arc.impl.ParameterizedTypeImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type[])>(v13, v22);
v14 = v29;
label07:
v30 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.lang.String getName()>();
v31 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.lang.String getDefaultValue()>();
staticinvoke <io.smallrye.config.inject.ConfigProducerUtil: java.lang.Object getValue(java.lang.String,java.lang.reflect.Type,java.lang.String,org.eclipse.microprofile.config.Config)>(v30, v14, v31, v2);
label08:
goto label02;
label09:
v32 := @caughtexception;
v33 = virtualinvoke v8.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("Failed to load config value of type ");
v34 = virtualinvoke v33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v14);
v35 = virtualinvoke v34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" for: ");
v36 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.lang.String getName()>();
v37 = virtualinvoke v35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v36);
v38 = staticinvoke <java.lang.System: java.lang.String lineSeparator()>();
virtualinvoke v37.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v38);
v39 = virtualinvoke v11.<io.quarkus.arc.runtime.ConfigRecorder$ConfigValidationMetadata: java.lang.String getName()>();
interfaceinvoke v6.<java.util.Set: boolean add(java.lang.Object)>(v39);
interfaceinvoke v7.<java.util.List: boolean add(java.lang.Object)>(v32);
goto label02;
label10:
v40 = interfaceinvoke v6.<java.util.Set: boolean isEmpty()>();
if v40 != 0 goto label13;
v41 = new jakarta.enterprise.inject.spi.DeploymentException;
v42 = new io.quarkus.runtime.configuration.ConfigurationException;
v43 = virtualinvoke v8.<java.lang.StringBuilder: java.lang.String toString()>();
specialinvoke v42.<io.quarkus.runtime.configuration.ConfigurationException: void <init>(java.lang.String,java.util.Set)>(v43, v6);
specialinvoke v41.<jakarta.enterprise.inject.spi.DeploymentException: void <init>(java.lang.Throwable)>(v42);
v44 = interfaceinvoke v7.<java.util.List: java.util.Iterator iterator()>();
label11:
v45 = interfaceinvoke v44.<java.util.Iterator: boolean hasNext()>();
if v45 == 0 goto label12;
v46 = interfaceinvoke v44.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v41.<jakarta.enterprise.inject.spi.DeploymentException: void addSuppressed(java.lang.Throwable)>(v46);
goto label11;
label12:
throw v41;
label13:
return;
catch java.lang.Exception from label07 to label08 with label09;
}
public void registerConfigProperties(java.util.Set)
{
io.smallrye.config.ConfigValidationException v3;
jakarta.enterprise.inject.spi.DeploymentException v4;
io.quarkus.arc.runtime.ConfigRecorder v0;
java.util.Set v1;
java.lang.String v5;
org.eclipse.microprofile.config.Config v2;
v0 := @this: io.quarkus.arc.runtime.ConfigRecorder;
v1 := @parameter0: java.util.Set;
label1:
v2 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
staticinvoke <io.smallrye.config.ConfigMappings: void registerConfigProperties(io.smallrye.config.SmallRyeConfig,java.util.Set)>(v2, v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new jakarta.enterprise.inject.spi.DeploymentException;
v5 = virtualinvoke v3.<io.smallrye.config.ConfigValidationException: java.lang.String getMessage()>();
specialinvoke v4.<jakarta.enterprise.inject.spi.DeploymentException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v3);
throw v4;
label4:
return;
catch io.smallrye.config.ConfigValidationException from label1 to label2 with label3;
}
private java.lang.Class load(java.lang.String, java.lang.ClassLoader)
{
java.lang.IllegalStateException v25;
byte v3;
int v4;
io.quarkus.arc.runtime.ConfigRecorder v0;
java.lang.String v1, v26;
boolean v10, v11, v12, v13, v5, v6, v7, v8, v9;
java.lang.Class v14, v15, v16, v17, v18, v19, v20, v21, v22, v23;
java.lang.ClassNotFoundException v24;
java.lang.ClassLoader v2;
v0 := @this: io.quarkus.arc.runtime.ConfigRecorder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.ClassLoader;
v3 = -1;
v4 = virtualinvoke v1.<java.lang.String: int hashCode()>();
lookupswitch(v4)
{
case -1325958191: goto label07;
case 104431: goto label04;
case 3039496: goto label02;
case 3052374: goto label08;
case 3327612: goto label05;
case 3625364: goto label09;
case 64711720: goto label01;
case 97526364: goto label06;
case 109413500: goto label03;
default: goto label10;
};
label01:
v5 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("boolean");
if v5 == 0 goto label10;
v3 = 0;
goto label10;
label02:
v6 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("byte");
if v6 == 0 goto label10;
v3 = 1;
goto label10;
label03:
v7 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("short");
if v7 == 0 goto label10;
v3 = 2;
goto label10;
label04:
v8 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("int");
if v8 == 0 goto label10;
v3 = 3;
goto label10;
label05:
v9 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("long");
if v9 == 0 goto label10;
v3 = 4;
goto label10;
label06:
v10 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("float");
if v10 == 0 goto label10;
v3 = 5;
goto label10;
label07:
v11 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("double");
if v11 == 0 goto label10;
v3 = 6;
goto label10;
label08:
v12 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("char");
if v12 == 0 goto label10;
v3 = 7;
goto label10;
label09:
v13 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("void");
if v13 == 0 goto label10;
v3 = 8;
label10:
tableswitch(v3)
{
case 0: goto label11;
case 1: goto label12;
case 2: goto label13;
case 3: goto label14;
case 4: goto label15;
case 5: goto label16;
case 6: goto label17;
case 7: goto label18;
case 8: goto label19;
default: goto label20;
};
label11:
v14 = <java.lang.Boolean: java.lang.Class TYPE>;
return v14;
label12:
v15 = <java.lang.Byte: java.lang.Class TYPE>;
return v15;
label13:
v16 = <java.lang.Short: java.lang.Class TYPE>;
return v16;
label14:
v17 = <java.lang.Integer: java.lang.Class TYPE>;
return v17;
label15:
v18 = <java.lang.Long: java.lang.Class TYPE>;
return v18;
label16:
v19 = <java.lang.Float: java.lang.Class TYPE>;
return v19;
label17:
v20 = <java.lang.Double: java.lang.Class TYPE>;
return v20;
label18:
v21 = <java.lang.Character: java.lang.Class TYPE>;
return v21;
label19:
v22 = <java.lang.Void: java.lang.Class TYPE>;
return v22;
label20:
v23 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v1, 1, v2);
label21:
return v23;
label22:
v24 := @caughtexception;
v25 = new java.lang.IllegalStateException;
v26 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to load the config property type: \u0001");
specialinvoke v25.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v26, v24);
throw v25;
catch java.lang.ClassNotFoundException from label20 to label21 with label22;
}
}