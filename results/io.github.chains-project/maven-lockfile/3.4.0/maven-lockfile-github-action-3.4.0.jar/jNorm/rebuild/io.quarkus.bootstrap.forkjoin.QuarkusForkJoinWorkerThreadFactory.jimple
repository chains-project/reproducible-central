public final class io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory extends java.lang.Object implements java.util.concurrent.ForkJoinPool$ForkJoinWorkerThreadFactory
{
public void <init>()
{
io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory v0;
v0 := @this: io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.concurrent.ForkJoinWorkerThread newThread(java.util.concurrent.ForkJoinPool)
{
io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory v0;
java.util.concurrent.ForkJoinPool v1;
io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread v2;
v0 := @this: io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThreadFactory;
v1 := @parameter0: java.util.concurrent.ForkJoinPool;
v2 = new io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread;
specialinvoke v2.<io.quarkus.bootstrap.forkjoin.QuarkusForkJoinWorkerThread: void <init>(java.util.concurrent.ForkJoinPool)>(v1);
return v2;
}
}