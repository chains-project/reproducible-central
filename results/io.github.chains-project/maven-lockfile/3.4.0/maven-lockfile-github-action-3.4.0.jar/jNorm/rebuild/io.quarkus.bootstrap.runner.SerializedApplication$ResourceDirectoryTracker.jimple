class io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker extends java.lang.Object
{
private final java.util.Map result;
private final java.util.Map overrides;
private void <init>()
{
java.util.HashMap v1, v2;
io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker v0;
v0 := @this: io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map result> = v1;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map overrides> = v2;
return;
}
void addResourceDir(java.lang.String, io.quarkus.bootstrap.runner.JarResource)
{
io.quarkus.bootstrap.runner.ClassLoadingResource v7;
io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker v0;
io.quarkus.bootstrap.runner.JarResource[] v6;
java.util.Map v12, v3, v5, v9;
java.lang.Object v10, v4;
java.lang.String v1;
io.quarkus.bootstrap.runner.JarResource v13, v2;
java.util.LinkedHashSet v11;
boolean v8;
v0 := @this: io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.quarkus.bootstrap.runner.JarResource;
v3 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map result>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v4 != null goto label1;
v5 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map result>;
v6 = newarray (io.quarkus.bootstrap.runner.JarResource)[1];
v6[0] = v2;
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v6);
goto label3;
label1:
v7 = v4[0];
v8 = virtualinvoke v7.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v8 != 0 goto label3;
v9 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map overrides>;
v10 = interfaceinvoke v9.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v10 != null goto label2;
v11 = new java.util.LinkedHashSet;
specialinvoke v11.<java.util.LinkedHashSet: void <init>(int)>(2);
interfaceinvoke v11.<java.util.Set: boolean add(java.lang.Object)>(v7);
interfaceinvoke v11.<java.util.Set: boolean add(java.lang.Object)>(v2);
v12 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map overrides>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v11);
v13 = <io.quarkus.bootstrap.runner.SerializedApplication: io.quarkus.bootstrap.runner.JarResource SENTINEL>;
v4[0] = v13;
goto label3;
label2:
interfaceinvoke v10.<java.util.Set: boolean add(java.lang.Object)>(v2);
label3:
return;
}
java.util.Map getResult()
{
java.util.Map v1, v3;
java.util.function.BiConsumer v2;
io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker v0;
v0 := @this: io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker;
v1 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map overrides>;
v2 = staticinvoke <io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker$addToResult__3304: java.util.function.BiConsumer bootstrap$(io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker)>(v0);
interfaceinvoke v1.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v2);
v3 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map result>;
return v3;
}
public void addToResult(java.lang.String, java.util.Set)
{
java.lang.Object[] v5;
io.quarkus.bootstrap.runner.ClassLoadingResource[] v4;
java.util.Map v3;
java.util.Set v2;
java.lang.String v1;
io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker v0;
v0 := @this: io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Set;
v3 = v0.<io.quarkus.bootstrap.runner.SerializedApplication$ResourceDirectoryTracker: java.util.Map result>;
v4 = <io.quarkus.bootstrap.runner.SerializedApplication: io.quarkus.bootstrap.runner.ClassLoadingResource[] EMPTY_ARRAY>;
v5 = interfaceinvoke v2.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v4);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v5);
return;
}
}