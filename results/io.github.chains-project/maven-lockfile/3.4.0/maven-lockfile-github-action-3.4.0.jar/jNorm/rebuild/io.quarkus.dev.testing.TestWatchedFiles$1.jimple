class io.quarkus.dev.testing.TestWatchedFiles$1 extends java.lang.Object implements java.util.function.BiConsumer
{
final java.util.function.Consumer val$watchedFilesListener;
void <init>(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.quarkus.dev.testing.TestWatchedFiles$1 v0;
v0 := @this: io.quarkus.dev.testing.TestWatchedFiles$1;
v1 := @parameter0: java.util.function.Consumer;
v0.<io.quarkus.dev.testing.TestWatchedFiles$1: java.util.function.Consumer val$watchedFilesListener> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void accept(java.util.Map, java.util.List)
{
java.util.function.Consumer v3;
java.util.List v2;
java.util.Map v1;
io.quarkus.dev.testing.TestWatchedFiles$1 v0;
v0 := @this: io.quarkus.dev.testing.TestWatchedFiles$1;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: java.util.List;
v3 = v0.<io.quarkus.dev.testing.TestWatchedFiles$1: java.util.function.Consumer val$watchedFilesListener>;
interfaceinvoke v3.<java.util.function.Consumer: void accept(java.lang.Object)>(v1);
return;
}
}