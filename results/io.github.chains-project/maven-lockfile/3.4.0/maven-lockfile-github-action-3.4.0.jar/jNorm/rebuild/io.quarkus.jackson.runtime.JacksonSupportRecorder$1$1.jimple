class io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1 extends java.lang.Object implements io.quarkus.jackson.runtime.JacksonSupport
{
final io.quarkus.jackson.runtime.JacksonSupportRecorder$1 this$1;
void <init>(io.quarkus.jackson.runtime.JacksonSupportRecorder$1)
{
io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1 v0;
io.quarkus.jackson.runtime.JacksonSupportRecorder$1 v1;
v0 := @this: io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1;
v1 := @parameter0: io.quarkus.jackson.runtime.JacksonSupportRecorder$1;
v0.<io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1: io.quarkus.jackson.runtime.JacksonSupportRecorder$1 this$1> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.util.Optional configuredNamingStrategy()
{
java.lang.Object[] v12;
io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1 v0;
java.lang.reflect.Constructor v11;
io.quarkus.jackson.runtime.JacksonSupportRecorder$1 v1, v4;
java.lang.Thread v7;
boolean v3;
java.lang.Class[] v10;
java.lang.RuntimeException v16;
java.lang.Exception v15;
java.util.Optional v14, v17, v2, v5;
java.lang.Class v9;
java.lang.Object v13, v6;
java.lang.ClassLoader v8;
v0 := @this: io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1;
v1 = v0.<io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1: io.quarkus.jackson.runtime.JacksonSupportRecorder$1 this$1>;
v2 = v1.<io.quarkus.jackson.runtime.JacksonSupportRecorder$1: java.util.Optional val$propertyNamingStrategyClassName>;
v3 = virtualinvoke v2.<java.util.Optional: boolean isPresent()>();
if v3 == 0 goto label4;
label1:
v4 = v0.<io.quarkus.jackson.runtime.JacksonSupportRecorder$1$1: io.quarkus.jackson.runtime.JacksonSupportRecorder$1 this$1>;
v5 = v4.<io.quarkus.jackson.runtime.JacksonSupportRecorder$1: java.util.Optional val$propertyNamingStrategyClassName>;
v6 = virtualinvoke v5.<java.util.Optional: java.lang.Object get()>();
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v8 = virtualinvoke v7.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v9 = staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>(v6, 1, v8);
v10 = newarray (java.lang.Class)[0];
v11 = virtualinvoke v9.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v10);
v12 = newarray (java.lang.Object)[0];
v13 = virtualinvoke v11.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v12);
v14 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v13);
label2:
return v14;
label3:
v15 := @caughtexception;
v16 = new java.lang.RuntimeException;
specialinvoke v16.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v15);
throw v16;
label4:
v17 = staticinvoke <java.util.Optional: java.util.Optional empty()>();
return v17;
catch java.lang.Exception from label1 to label2 with label3;
}
}