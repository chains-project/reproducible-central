public class io.quarkus.runtime.configuration.PropertiesUtil extends java.lang.Object
{
private void <init>()
{
io.quarkus.runtime.configuration.PropertiesUtil v0;
v0 := @this: io.quarkus.runtime.configuration.PropertiesUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static boolean isPropertyInRoot(java.util.Set, io.quarkus.runtime.configuration.NameIterator)
{
int v5, v7, v8;
java.lang.String v11, v13, v6;
boolean v10, v12, v14, v15, v16, v3;
java.util.Iterator v2;
java.util.Set v0;
io.quarkus.runtime.configuration.NameIterator v1, v9;
java.lang.Object v4;
v0 := @parameter0: java.util.Set;
v1 := @parameter1: io.quarkus.runtime.configuration.NameIterator;
v2 = interfaceinvoke v0.<java.util.Set: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label6;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v4.<java.lang.String: int length()>();
if v5 != 0 goto label2;
return 1;
label2:
v6 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getName()>();
v7 = virtualinvoke v6.<java.lang.String: int length()>();
v8 = virtualinvoke v4.<java.lang.String: int length()>();
if v7 <= v8 goto label1;
v9 = new io.quarkus.runtime.configuration.NameIterator;
specialinvoke v9.<io.quarkus.runtime.configuration.NameIterator: void <init>(java.lang.String)>(v4);
label3:
v10 = virtualinvoke v9.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v10 == 0 goto label1;
v11 = virtualinvoke v9.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getNextSegment()>();
v12 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v12 != 0 goto label4;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void goToStart()>();
goto label1;
label4:
v13 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getNextSegment()>();
v14 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v13);
if v14 != 0 goto label5;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void goToStart()>();
goto label1;
label5:
virtualinvoke v9.<io.quarkus.runtime.configuration.NameIterator: void next()>();
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void next()>();
v15 = virtualinvoke v9.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v15 != 0 goto label3;
v16 = virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v16 == 0 goto label3;
virtualinvoke v1.<io.quarkus.runtime.configuration.NameIterator: void goToStart()>();
return 1;
label6:
return 0;
}
public static boolean isPropertyQuarkusCompoundName(io.quarkus.runtime.configuration.NameIterator)
{
io.quarkus.runtime.configuration.NameIterator v0;
java.lang.String v2;
boolean v1, v3;
v0 := @parameter0: io.quarkus.runtime.configuration.NameIterator;
v1 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: boolean hasNext()>();
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.NameIterator: java.lang.String getNextSegment()>();
v3 = virtualinvoke v2.<java.lang.String: boolean startsWith(java.lang.String)>("quarkus.");
return v3;
label1:
return 0;
}
public static void filterUnknown(java.util.Set, io.smallrye.config.KeyMap)
{
java.util.HashSet v2;
java.util.Iterator v3;
java.util.Set v0;
io.smallrye.config.KeyMap v1;
java.lang.Object v5;
boolean v4, v6;
v0 := @parameter0: java.util.Set;
v1 := @parameter1: io.smallrye.config.KeyMap;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = interfaceinvoke v0.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v1.<io.smallrye.config.KeyMap: boolean hasRootValue(java.lang.String)>(v5);
if v6 == 0 goto label1;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
interfaceinvoke v0.<java.util.Set: boolean removeAll(java.util.Collection)>(v2);
return;
}
}