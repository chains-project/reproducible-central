class io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1 extends java.lang.Object implements java.util.function.Consumer
{
final io.quarkus.runtime.logging.LogMetricsHandlerRecorder this$0;
void <init>(io.quarkus.runtime.logging.LogMetricsHandlerRecorder)
{
io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1 v0;
io.quarkus.runtime.logging.LogMetricsHandlerRecorder v1;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1;
v1 := @parameter0: io.quarkus.runtime.logging.LogMetricsHandlerRecorder;
v0.<io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1: io.quarkus.runtime.logging.LogMetricsHandlerRecorder this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void accept(io.quarkus.runtime.metrics.MetricsFactory)
{
io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1 v0;
io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder v6, v7, v9;
java.util.Iterator v3;
java.util.NavigableMap v10;
java.lang.Integer v12;
java.util.function.Supplier v14;
io.quarkus.runtime.metrics.MetricsFactory v1;
java.util.List v2;
int v11;
java.lang.Object v13, v5;
java.lang.String v8;
boolean v4;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1;
v1 := @parameter0: io.quarkus.runtime.metrics.MetricsFactory;
v2 = <io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.List STANDARD_LEVELS>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v1.<io.quarkus.runtime.metrics.MetricsFactory: io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder builder(java.lang.String)>("log.total");
v7 = interfaceinvoke v6.<io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder: io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder description(java.lang.String)>("Number of log events, per log level. Non-standard levels are counted with the lower standard level.");
v8 = virtualinvoke v5.<org.jboss.logmanager.Level: java.lang.String getName()>();
v9 = interfaceinvoke v7.<io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder: io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder tag(java.lang.String,java.lang.String)>("level", v8);
v10 = <io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.NavigableMap COUNTERS>;
v11 = virtualinvoke v5.<org.jboss.logmanager.Level: int intValue()>();
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
v13 = interfaceinvoke v10.<java.util.NavigableMap: java.lang.Object get(java.lang.Object)>(v12);
virtualinvoke v13.<java.lang.Object: java.lang.Class getClass()>();
v14 = staticinvoke <io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1$sum__3027: java.util.function.Supplier bootstrap$(java.util.concurrent.atomic.LongAdder)>(v13);
interfaceinvoke v9.<io.quarkus.runtime.metrics.MetricsFactory$MetricBuilder: void buildCounter(java.util.function.Supplier)>(v14);
goto label1;
label2:
return;
}
}