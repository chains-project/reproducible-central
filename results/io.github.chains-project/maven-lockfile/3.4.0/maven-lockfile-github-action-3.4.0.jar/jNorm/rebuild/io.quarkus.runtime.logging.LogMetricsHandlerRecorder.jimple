public class io.quarkus.runtime.logging.LogMetricsHandlerRecorder extends java.lang.Object
{
static final java.lang.String METRIC_NAME;
static final java.lang.String METRIC_DESCRIPTION;
static final java.util.List STANDARD_LEVELS;
static final java.util.NavigableMap COUNTERS;
public void <init>()
{
io.quarkus.runtime.logging.LogMetricsHandlerRecorder v0;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandlerRecorder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void initCounters()
{
java.util.concurrent.atomic.LongAdder v5;
java.util.Iterator v2;
java.util.NavigableMap v6;
java.lang.Integer v8;
java.util.List v1;
int v7;
java.lang.Object v4;
io.quarkus.runtime.logging.LogMetricsHandlerRecorder v0;
boolean v3;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandlerRecorder;
v1 = <io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.List STANDARD_LEVELS>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = new java.util.concurrent.atomic.LongAdder;
specialinvoke v5.<java.util.concurrent.atomic.LongAdder: void <init>()>();
v6 = <io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.NavigableMap COUNTERS>;
v7 = virtualinvoke v4.<org.jboss.logmanager.Level: int intValue()>();
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
interfaceinvoke v6.<java.util.NavigableMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v8, v5);
goto label1;
label2:
return;
}
public java.util.function.Consumer registerMetrics()
{
io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1 v1;
io.quarkus.runtime.logging.LogMetricsHandlerRecorder v0;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandlerRecorder;
v1 = new io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1;
specialinvoke v1.<io.quarkus.runtime.logging.LogMetricsHandlerRecorder$1: void <init>(io.quarkus.runtime.logging.LogMetricsHandlerRecorder)>(v0);
return v1;
}
public io.quarkus.runtime.RuntimeValue getLogHandler()
{
io.quarkus.runtime.RuntimeValue v1;
java.util.Optional v4;
io.quarkus.runtime.logging.LogMetricsHandlerRecorder v0;
java.util.NavigableMap v3;
io.quarkus.runtime.logging.LogMetricsHandler v2;
v0 := @this: io.quarkus.runtime.logging.LogMetricsHandlerRecorder;
v1 = new io.quarkus.runtime.RuntimeValue;
v2 = new io.quarkus.runtime.logging.LogMetricsHandler;
v3 = <io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.NavigableMap COUNTERS>;
specialinvoke v2.<io.quarkus.runtime.logging.LogMetricsHandler: void <init>(java.util.NavigableMap)>(v3);
v4 = staticinvoke <java.util.Optional: java.util.Optional of(java.lang.Object)>(v2);
specialinvoke v1.<io.quarkus.runtime.RuntimeValue: void <init>(java.lang.Object)>(v4);
return v1;
}
static void <clinit>()
{
org.jboss.logmanager.Level[] v0;
java.util.List v7;
java.util.TreeMap v8;
org.jboss.logmanager.Level v1, v2, v3, v4, v5, v6;
v0 = newarray (org.jboss.logmanager.Level)[6];
v1 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level FATAL>;
v0[0] = v1;
v2 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level ERROR>;
v0[1] = v2;
v3 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level WARN>;
v0[2] = v3;
v4 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level INFO>;
v0[3] = v4;
v5 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level DEBUG>;
v0[4] = v5;
v6 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level TRACE>;
v0[5] = v6;
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v0);
<io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.List STANDARD_LEVELS> = v7;
v8 = new java.util.TreeMap;
specialinvoke v8.<java.util.TreeMap: void <init>()>();
<io.quarkus.runtime.logging.LogMetricsHandlerRecorder: java.util.NavigableMap COUNTERS> = v8;
return;
}
}