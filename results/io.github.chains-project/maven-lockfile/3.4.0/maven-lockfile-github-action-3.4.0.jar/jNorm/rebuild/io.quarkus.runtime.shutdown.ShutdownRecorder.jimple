public class io.quarkus.runtime.shutdown.ShutdownRecorder extends java.lang.Object
{
private static final org.jboss.logging.Logger log;
private static volatile java.util.List shutdownListeners;
private static volatile java.util.Optional waitTime;
final io.quarkus.runtime.shutdown.ShutdownConfig shutdownConfig;
public void <init>(io.quarkus.runtime.shutdown.ShutdownConfig)
{
io.quarkus.runtime.shutdown.ShutdownRecorder v0;
io.quarkus.runtime.shutdown.ShutdownConfig v1;
v0 := @this: io.quarkus.runtime.shutdown.ShutdownRecorder;
v1 := @parameter0: io.quarkus.runtime.shutdown.ShutdownConfig;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.runtime.shutdown.ShutdownRecorder: io.quarkus.runtime.shutdown.ShutdownConfig shutdownConfig> = v1;
return;
}
public void setListeners(java.util.List)
{
io.quarkus.runtime.shutdown.ShutdownRecorder v0;
io.quarkus.runtime.shutdown.ShutdownConfig v2;
java.util.List v1;
java.util.Optional v3;
v0 := @this: io.quarkus.runtime.shutdown.ShutdownRecorder;
v1 := @parameter0: java.util.List;
<io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.List shutdownListeners> = v1;
v2 = v0.<io.quarkus.runtime.shutdown.ShutdownRecorder: io.quarkus.runtime.shutdown.ShutdownConfig shutdownConfig>;
v3 = v2.<io.quarkus.runtime.shutdown.ShutdownConfig: java.util.Optional timeout>;
<io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.Optional waitTime> = v3;
return;
}
public static void runShutdown()
{
java.lang.Throwable v26;
org.jboss.logging.Logger v1, v25, v27;
long v22;
int v12, v4;
boolean v15, v19, v24, v7;
java.util.Iterator v14, v6;
java.util.concurrent.TimeUnit v23;
java.util.concurrent.CountDownLatch v10, v2;
java.util.List v0, v11, v13, v3, v5;
java.util.Optional v18, v20;
java.lang.Object v16, v21, v8;
io.quarkus.runtime.shutdown.ShutdownRecorder$LatchShutdownNotification v17, v9;
v0 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.List shutdownListeners>;
if v0 != null goto label1;
return;
label1:
v1 = <io.quarkus.runtime.shutdown.ShutdownRecorder: org.jboss.logging.Logger log>;
virtualinvoke v1.<org.jboss.logging.Logger: void debug(java.lang.Object)>("Attempting to gracefully shutdown.");
label2:
v2 = new java.util.concurrent.CountDownLatch;
v3 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.List shutdownListeners>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
specialinvoke v2.<java.util.concurrent.CountDownLatch: void <init>(int)>(v4);
v5 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.List shutdownListeners>;
v6 = interfaceinvoke v5.<java.util.List: java.util.Iterator iterator()>();
label3:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label4;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = new io.quarkus.runtime.shutdown.ShutdownRecorder$LatchShutdownNotification;
specialinvoke v9.<io.quarkus.runtime.shutdown.ShutdownRecorder$LatchShutdownNotification: void <init>(java.util.concurrent.CountDownLatch)>(v2);
interfaceinvoke v8.<io.quarkus.runtime.shutdown.ShutdownListener: void preShutdown(io.quarkus.runtime.shutdown.ShutdownListener$ShutdownNotification)>(v9);
goto label3;
label4:
virtualinvoke v2.<java.util.concurrent.CountDownLatch: void await()>();
v10 = new java.util.concurrent.CountDownLatch;
v11 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.List shutdownListeners>;
v12 = interfaceinvoke v11.<java.util.List: int size()>();
specialinvoke v10.<java.util.concurrent.CountDownLatch: void <init>(int)>(v12);
v13 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.List shutdownListeners>;
v14 = interfaceinvoke v13.<java.util.List: java.util.Iterator iterator()>();
label5:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label6;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = new io.quarkus.runtime.shutdown.ShutdownRecorder$LatchShutdownNotification;
specialinvoke v17.<io.quarkus.runtime.shutdown.ShutdownRecorder$LatchShutdownNotification: void <init>(java.util.concurrent.CountDownLatch)>(v10);
interfaceinvoke v16.<io.quarkus.runtime.shutdown.ShutdownListener: void shutdown(io.quarkus.runtime.shutdown.ShutdownListener$ShutdownNotification)>(v17);
goto label5;
label6:
v18 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.Optional waitTime>;
v19 = virtualinvoke v18.<java.util.Optional: boolean isPresent()>();
if v19 == 0 goto label9;
v20 = <io.quarkus.runtime.shutdown.ShutdownRecorder: java.util.Optional waitTime>;
v21 = virtualinvoke v20.<java.util.Optional: java.lang.Object get()>();
v22 = virtualinvoke v21.<java.time.Duration: long toMillis()>();
v23 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v24 = virtualinvoke v10.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(v22, v23);
if v24 != 0 goto label9;
v25 = <io.quarkus.runtime.shutdown.ShutdownRecorder: org.jboss.logging.Logger log>;
virtualinvoke v25.<org.jboss.logging.Logger: void error(java.lang.Object)>("Timed out waiting for graceful shutdown, shutting down anyway.");
label7:
goto label9;
label8:
v26 := @caughtexception;
v27 = <io.quarkus.runtime.shutdown.ShutdownRecorder: org.jboss.logging.Logger log>;
virtualinvoke v27.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>("Graceful shutdown failed", v26);
label9:
return;
catch java.lang.Throwable from label2 to label7 with label8;
}
static void <clinit>()
{
org.jboss.logging.Logger v0;
v0 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.Class)>(class "Lio/quarkus/runtime/shutdown/ShutdownRecorder;");
<io.quarkus.runtime.shutdown.ShutdownRecorder: org.jboss.logging.Logger log> = v0;
return;
}
}