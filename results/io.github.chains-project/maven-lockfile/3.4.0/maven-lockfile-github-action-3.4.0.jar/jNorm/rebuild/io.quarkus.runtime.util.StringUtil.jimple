public final class io.quarkus.runtime.util.StringUtil extends java.lang.Object
{
private void <init>()
{
io.quarkus.runtime.util.StringUtil v0;
v0 := @this: io.quarkus.runtime.util.StringUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.Iterator camelHumpsIterator(java.lang.String)
{
io.quarkus.runtime.util.StringUtil$1 v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new io.quarkus.runtime.util.StringUtil$1;
specialinvoke v1.<io.quarkus.runtime.util.StringUtil$1: void <init>(java.lang.String)>(v0);
return v1;
}
public static java.util.Iterator lowerCase(java.util.Iterator)
{
io.quarkus.runtime.util.StringUtil$2 v1;
java.util.Iterator v0;
v0 := @parameter0: java.util.Iterator;
v1 = new io.quarkus.runtime.util.StringUtil$2;
specialinvoke v1.<io.quarkus.runtime.util.StringUtil$2: void <init>(java.util.Iterator)>(v0);
return v1;
}
public static java.lang.String join(java.lang.String, java.util.Iterator)
{
java.util.Iterator v1;
java.lang.Object v4, v6;
java.lang.StringBuilder v2;
java.lang.String v0, v7;
boolean v3, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.Iterator;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
label1:
v5 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v0);
v6 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
goto label1;
label2:
v7 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v7;
}
public static java.lang.String join(java.util.Iterator)
{
java.util.Iterator v0;
java.lang.Object v3, v5;
java.lang.StringBuilder v1;
java.lang.String v6;
boolean v2, v4;
v0 := @parameter0: java.util.Iterator;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = interfaceinvoke v0.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v0.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
label1:
v4 = interfaceinvoke v0.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v0.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
goto label1;
label2:
v6 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v6;
}
public static java.util.Iterator lowerCaseFirst(java.util.Iterator)
{
io.quarkus.runtime.util.StringUtil$3 v1;
java.util.Iterator v0;
v0 := @parameter0: java.util.Iterator;
v1 = new io.quarkus.runtime.util.StringUtil$3;
specialinvoke v1.<io.quarkus.runtime.util.StringUtil$3: void <init>(java.util.Iterator)>(v0);
return v1;
}
public static transient java.util.Iterator withoutSuffix(java.util.Iterator, java.lang.String[])
{
io.quarkus.runtime.util.StringUtil$4 v2;
java.lang.String[] v1;
java.util.Iterator v0;
v0 := @parameter0: java.util.Iterator;
v1 := @parameter1: java.lang.String[];
v2 = new io.quarkus.runtime.util.StringUtil$4;
specialinvoke v2.<io.quarkus.runtime.util.StringUtil$4: void <init>(java.util.Iterator,java.lang.String[])>(v0, v1);
return v2;
}
public static transient java.util.List withoutSuffix(java.util.List, java.lang.Object[])
{
java.lang.Object[] v1;
int v10, v11, v12, v15, v16, v17, v2, v3, v4, v5, v6, v7, v8;
boolean v14;
java.util.List v0, v18;
java.lang.Object v13, v9;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.lang.Object[];
v2 = interfaceinvoke v0.<java.util.List: int size()>();
v3 = lengthof v1;
if v2 >= v3 goto label1;
return v0;
label1:
v4 = 0;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label4;
v6 = interfaceinvoke v0.<java.util.List: int size()>();
v7 = v6 - v4;
v8 = v7 - 1;
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(v8);
v10 = lengthof v1;
v11 = v10 - v4;
v12 = v11 - 1;
v13 = v1[v12];
v14 = virtualinvoke v9.<java.lang.Object: boolean equals(java.lang.Object)>(v13);
if v14 != 0 goto label3;
return v0;
label3:
v4 = v4 + 1;
goto label2;
label4:
v15 = interfaceinvoke v0.<java.util.List: int size()>();
v16 = lengthof v1;
v17 = v15 - v16;
v18 = interfaceinvoke v0.<java.util.List: java.util.List subList(int,int)>(0, v17);
return v18;
}
public static java.util.List toList(java.util.Iterator)
{
java.util.List v1;
java.util.Iterator v0;
v0 := @parameter0: java.util.Iterator;
v1 = staticinvoke <io.quarkus.runtime.util.StringUtil: java.util.List toList(java.util.Iterator,int)>(v0, 0);
return v1;
}
private static java.util.List toList(java.util.Iterator, int)
{
java.util.Iterator v0;
java.lang.String[] v6;
java.util.List v5, v7;
int v1, v4;
java.lang.Object v3;
boolean v2;
v0 := @parameter0: java.util.Iterator;
v1 := @parameter1: int;
v2 = interfaceinvoke v0.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label1;
v3 = interfaceinvoke v0.<java.util.Iterator: java.lang.Object next()>();
v4 = v1 + 1;
v5 = staticinvoke <io.quarkus.runtime.util.StringUtil: java.util.List toList(java.util.Iterator,int)>(v0, v4);
interfaceinvoke v5.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v1, v3);
return v5;
label1:
v6 = newarray (java.lang.String)[v1];
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v6);
return v7;
}
private static transient boolean arrayContains(java.lang.Object, java.lang.Object[])
{
java.lang.Object[] v1;
int v2, v3;
java.lang.Object v0, v4;
boolean v5;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v0);
if v5 == 0 goto label2;
return 1;
label2:
v3 = v3 + 1;
goto label1;
label3:
return 0;
}
public static java.lang.String hyphenate(java.lang.String)
{
java.util.Iterator v1, v2;
java.lang.String v0, v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.quarkus.runtime.util.StringUtil: java.util.Iterator camelHumpsIterator(java.lang.String)>(v0);
v2 = staticinvoke <io.quarkus.runtime.util.StringUtil: java.util.Iterator lowerCase(java.util.Iterator)>(v1);
v3 = staticinvoke <io.quarkus.runtime.util.StringUtil: java.lang.String join(java.lang.String,java.util.Iterator)>("-", v2);
return v3;
}
public static boolean isNullOrEmpty(java.lang.String)
{
java.lang.String v0;
boolean v1, v2;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v1 == 0 goto label2;
label1:
v2 = 1;
goto label3;
label2:
v2 = 0;
label3:
return v2;
}
}