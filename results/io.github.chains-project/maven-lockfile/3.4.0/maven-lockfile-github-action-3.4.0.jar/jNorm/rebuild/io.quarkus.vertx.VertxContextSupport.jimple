public final class io.quarkus.vertx.VertxContextSupport extends java.lang.Object
{
private void <init>()
{
io.quarkus.vertx.VertxContextSupport v0;
v0 := @this: io.quarkus.vertx.VertxContextSupport;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Object subscribeAndAwait(java.util.function.Supplier) throws java.lang.Throwable
{
java.util.function.Consumer v3;
io.smallrye.mutiny.groups.UniAwait v5;
io.smallrye.mutiny.groups.UniCreate v2;
java.lang.Object v6;
io.vertx.core.Context v1;
java.util.function.Supplier v0;
io.smallrye.mutiny.Uni v4;
v0 := @parameter0: java.util.function.Supplier;
v1 = staticinvoke <io.quarkus.vertx.VertxContextSupport: io.vertx.core.Context getContext()>();
staticinvoke <io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle: void setContextSafe(io.vertx.core.Context,boolean)>(v1, 1);
v2 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v3 = staticinvoke <io.quarkus.vertx.VertxContextSupport$lambda_subscribeAndAwait_0__896: java.util.function.Consumer bootstrap$(io.vertx.core.Context,java.util.function.Supplier)>(v1, v0);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni emitter(java.util.function.Consumer)>(v3);
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v6 = virtualinvoke v5.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v6;
}
private static io.vertx.core.Context getContext()
{
java.lang.IllegalStateException v5;
java.lang.Object v2;
io.vertx.core.Context v0, v3;
java.util.function.Supplier v1;
boolean v4;
v0 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
if v0 != null goto label1;
v1 = staticinvoke <io.quarkus.vertx.core.runtime.VertxCoreRecorder: java.util.function.Supplier getVertx()>();
v2 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
v3 = staticinvoke <io.smallrye.common.vertx.VertxContext: io.vertx.core.Context getOrCreateDuplicatedContext(io.vertx.core.Vertx)>(v2);
goto label3;
label1:
v4 = staticinvoke <io.vertx.core.Context: boolean isOnEventLoopThread()>();
if v4 == 0 goto label2;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("VertxContextSupport#subscribeAndAwait() must not be called on an event loop!");
throw v5;
label2:
v3 = staticinvoke <io.smallrye.common.vertx.VertxContext: io.vertx.core.Context getOrCreateDuplicatedContext(io.vertx.core.Context)>(v0);
label3:
return v3;
}
}