class io.quarkus.vertx.core.runtime.VertxCoreRecorder$13 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
final java.util.concurrent.atomic.AtomicInteger val$threadCount;
final io.quarkus.runtime.LaunchMode val$launchMode;
final java.util.Optional val$nonDevModeTccl;
final io.quarkus.vertx.core.runtime.VertxCoreRecorder this$0;
void <init>(io.quarkus.vertx.core.runtime.VertxCoreRecorder, java.util.concurrent.atomic.AtomicInteger, io.quarkus.runtime.LaunchMode, java.util.Optional)
{
java.util.concurrent.atomic.AtomicInteger v2;
io.quarkus.runtime.LaunchMode v3;
java.util.Optional v4;
io.quarkus.vertx.core.runtime.VertxCoreRecorder$13 v0;
io.quarkus.vertx.core.runtime.VertxCoreRecorder v1;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$13;
v1 := @parameter0: io.quarkus.vertx.core.runtime.VertxCoreRecorder;
v2 := @parameter1: java.util.concurrent.atomic.AtomicInteger;
v3 := @parameter2: io.quarkus.runtime.LaunchMode;
v4 := @parameter3: java.util.Optional;
v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: io.quarkus.vertx.core.runtime.VertxCoreRecorder this$0> = v1;
v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: java.util.concurrent.atomic.AtomicInteger val$threadCount> = v2;
v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: io.quarkus.runtime.LaunchMode val$launchMode> = v3;
v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: java.util.Optional val$nonDevModeTccl> = v4;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Thread newThread(java.lang.Runnable)
{
io.vertx.core.impl.VertxThread v7;
io.quarkus.runtime.LaunchMode v5;
java.lang.Runnable v1;
java.util.concurrent.atomic.AtomicInteger v2;
int v3;
java.util.Optional v6;
io.quarkus.vertx.core.runtime.VertxCoreRecorder$13 v0;
java.lang.String v4;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$13;
v1 := @parameter0: java.lang.Runnable;
v2 = v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: java.util.concurrent.atomic.AtomicInteger val$threadCount>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("executor-thread-\u0001");
v5 = v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: io.quarkus.runtime.LaunchMode val$launchMode>;
v6 = v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$13: java.util.Optional val$nonDevModeTccl>;
v7 = staticinvoke <io.quarkus.vertx.core.runtime.VertxCoreRecorder: io.vertx.core.impl.VertxThread createVertxThread(java.lang.Runnable,java.lang.String,boolean,long,java.util.concurrent.TimeUnit,io.quarkus.runtime.LaunchMode,java.util.Optional)>(v1, v4, 1, 0L, null, v5, v6);
virtualinvoke v7.<io.vertx.core.impl.VertxThread: void setDaemon(boolean)>(1);
return v7;
}
}