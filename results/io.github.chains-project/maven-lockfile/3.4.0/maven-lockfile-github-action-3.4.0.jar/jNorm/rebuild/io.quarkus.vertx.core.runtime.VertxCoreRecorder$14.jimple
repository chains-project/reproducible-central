class io.quarkus.vertx.core.runtime.VertxCoreRecorder$14 extends java.lang.Object implements org.jboss.threads.ContextHandler
{
final io.quarkus.vertx.core.runtime.VertxCoreRecorder this$0;
void <init>(io.quarkus.vertx.core.runtime.VertxCoreRecorder)
{
io.quarkus.vertx.core.runtime.VertxCoreRecorder$14 v0;
io.quarkus.vertx.core.runtime.VertxCoreRecorder v1;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$14;
v1 := @parameter0: io.quarkus.vertx.core.runtime.VertxCoreRecorder;
v0.<io.quarkus.vertx.core.runtime.VertxCoreRecorder$14: io.quarkus.vertx.core.runtime.VertxCoreRecorder this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object captureContext()
{
io.quarkus.vertx.core.runtime.VertxCoreRecorder$14 v0;
io.vertx.core.Context v1;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$14;
v1 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
return v1;
}
public void runWith(java.lang.Runnable, java.lang.Object)
{
java.lang.Throwable v8;
io.vertx.core.Context v3;
java.lang.Runnable v1;
java.util.concurrent.ConcurrentMap v4, v6, v7;
java.lang.Object v2;
io.quarkus.vertx.core.runtime.VertxCoreRecorder$14 v0;
boolean v5;
v0 := @this: io.quarkus.vertx.core.runtime.VertxCoreRecorder$14;
v1 := @parameter0: java.lang.Runnable;
v2 := @parameter1: java.lang.Object;
v3 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
if v2 == null goto label5;
if v2 == v3 goto label5;
v4 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: java.util.concurrent.ConcurrentMap localContextData()>();
v5 = interfaceinvoke v4.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>("io.quarkus.vertx.cdi-current-context");
if v5 == 0 goto label1;
v2 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.ContextInternal duplicate()>();
v6 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: java.util.concurrent.ConcurrentMap localContextData()>();
interfaceinvoke v6.<java.util.concurrent.ConcurrentMap: void putAll(java.util.Map)>(v4);
v7 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: java.util.concurrent.ConcurrentMap localContextData()>();
interfaceinvoke v7.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>("io.quarkus.vertx.cdi-current-context");
staticinvoke <io.quarkus.vertx.core.runtime.context.VertxContextSafetyToggle: void setContextSafe(io.vertx.core.Context,boolean)>(v2, 1);
label1:
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.ContextInternal beginDispatch()>();
label2:
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label3:
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: void endDispatch(io.vertx.core.impl.ContextInternal)>(v3);
goto label6;
label4:
v8 := @caughtexception;
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: void endDispatch(io.vertx.core.impl.ContextInternal)>(v3);
throw v8;
label5:
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
}