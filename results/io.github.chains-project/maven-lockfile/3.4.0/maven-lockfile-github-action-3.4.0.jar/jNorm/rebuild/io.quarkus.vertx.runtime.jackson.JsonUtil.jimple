public final class io.quarkus.vertx.runtime.jackson.JsonUtil extends java.lang.Object
{
public static final java.util.Base64$Encoder BASE64_ENCODER;
public static final java.util.Base64$Decoder BASE64_DECODER;
public void <init>()
{
io.quarkus.vertx.runtime.jackson.JsonUtil v0;
v0 := @this: io.quarkus.vertx.runtime.jackson.JsonUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Object wrapJsonValue(java.lang.Object)
{
byte[] v11;
java.util.Base64$Encoder v10, v8;
io.vertx.core.json.JsonArray v4;
java.time.format.DateTimeFormatter v6;
io.vertx.core.json.JsonObject v2;
java.lang.Object v0;
boolean v1, v12, v3, v5, v7, v9;
v0 := @parameter0: java.lang.Object;
if v0 != null goto label1;
return null;
label1:
v1 = v0 instanceof java.util.Map;
if v1 == 0 goto label2;
v2 = new io.vertx.core.json.JsonObject;
specialinvoke v2.<io.vertx.core.json.JsonObject: void <init>(java.util.Map)>(v0);
v0 = v2;
goto label7;
label2:
v3 = v0 instanceof java.util.List;
if v3 == 0 goto label3;
v4 = new io.vertx.core.json.JsonArray;
specialinvoke v4.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v0);
v0 = v4;
goto label7;
label3:
v5 = v0 instanceof java.time.Instant;
if v5 == 0 goto label4;
v6 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v0 = virtualinvoke v6.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v0);
goto label7;
label4:
v7 = v0 instanceof byte[];
if v7 == 0 goto label5;
v8 = <io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v0 = virtualinvoke v8.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v0);
goto label7;
label5:
v9 = v0 instanceof io.vertx.core.buffer.Buffer;
if v9 == 0 goto label6;
v10 = <io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v11 = interfaceinvoke v0.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
v0 = virtualinvoke v10.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v11);
goto label7;
label6:
v12 = v0 instanceof java.lang.Enum;
if v12 == 0 goto label7;
v0 = virtualinvoke v0.<java.lang.Enum: java.lang.String name()>();
label7:
return v0;
}
public static java.lang.Object checkAndCopy(java.lang.Object)
{
java.lang.IllegalStateException v15;
io.vertx.core.json.JsonObject v8;
java.lang.String v17;
boolean v1, v11, v12, v13, v14, v2, v3, v4, v5, v6, v7, v9;
io.vertx.core.json.JsonArray v10;
java.lang.Class v16;
java.lang.Object v0;
v0 := @parameter0: java.lang.Object;
if v0 == null goto label6;
v1 = v0 instanceof java.lang.Number;
if v1 != 0 goto label6;
v2 = v0 instanceof java.lang.Boolean;
if v2 != 0 goto label6;
v3 = v0 instanceof java.lang.String;
if v3 != 0 goto label6;
v4 = v0 instanceof java.lang.Character;
if v4 != 0 goto label6;
v5 = v0 instanceof java.lang.CharSequence;
if v5 == 0 goto label1;
v0 = virtualinvoke v0.<java.lang.Object: java.lang.String toString()>();
goto label6;
label1:
v6 = v0 instanceof io.vertx.core.shareddata.Shareable;
if v6 == 0 goto label2;
v0 = interfaceinvoke v0.<io.vertx.core.shareddata.Shareable: io.vertx.core.shareddata.Shareable copy()>();
goto label6;
label2:
v7 = v0 instanceof java.util.Map;
if v7 == 0 goto label3;
v8 = new io.vertx.core.json.JsonObject;
specialinvoke v8.<io.vertx.core.json.JsonObject: void <init>(java.util.Map)>(v0);
v0 = virtualinvoke v8.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject copy()>();
goto label6;
label3:
v9 = v0 instanceof java.util.List;
if v9 == 0 goto label4;
v10 = new io.vertx.core.json.JsonArray;
specialinvoke v10.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v0);
v0 = virtualinvoke v10.<io.vertx.core.json.JsonArray: io.vertx.core.json.JsonArray copy()>();
goto label6;
label4:
v11 = v0 instanceof io.vertx.core.buffer.Buffer;
if v11 == 0 goto label5;
v0 = interfaceinvoke v0.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer copy()>();
goto label6;
label5:
v12 = v0 instanceof byte[];
if v12 != 0 goto label6;
v13 = v0 instanceof java.time.Instant;
if v13 != 0 goto label6;
v14 = v0 instanceof java.lang.Enum;
if v14 != 0 goto label6;
v15 = new java.lang.IllegalStateException;
v16 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Illegal type in Json: \u0001");
specialinvoke v15.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v17);
throw v15;
label6:
return v0;
}
static void <clinit>()
{
java.util.Base64$Decoder v4, v7;
java.util.Base64$Encoder v3, v5, v6;
java.lang.String v0, v1;
boolean v2;
v0 = "legacy";
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("vertx.json.base64");
v2 = virtualinvoke v0.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v1);
if v2 == 0 goto label1;
v3 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getEncoder()>();
<io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER> = v3;
v4 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getDecoder()>();
<io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Decoder BASE64_DECODER> = v4;
goto label2;
label1:
v5 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getUrlEncoder()>();
v6 = virtualinvoke v5.<java.util.Base64$Encoder: java.util.Base64$Encoder withoutPadding()>();
<io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER> = v6;
v7 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getUrlDecoder()>();
<io.quarkus.vertx.runtime.jackson.JsonUtil: java.util.Base64$Decoder BASE64_DECODER> = v7;
label2:
return;
}
}