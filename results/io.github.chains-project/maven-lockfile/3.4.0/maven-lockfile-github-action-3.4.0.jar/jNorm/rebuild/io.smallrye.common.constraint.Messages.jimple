interface  io.smallrye.common.constraint.Messages extends java.lang.Object
{
public static final io.smallrye.common.constraint.Messages log;
public abstract java.lang.IllegalArgumentException nullParam(java.lang.String);
public abstract java.lang.IllegalArgumentException paramLessThan(java.lang.String, long);
public abstract java.lang.IllegalArgumentException paramLessThan(java.lang.String, double);
public abstract java.lang.IllegalArgumentException paramLessThan(java.lang.String, java.lang.Object);
public abstract java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, long);
public abstract java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, double);
public abstract java.lang.IllegalArgumentException paramGreaterThan(java.lang.String, java.lang.Object);
public abstract java.lang.ArrayIndexOutOfBoundsException arrayOffsetGreaterThanLength(int, int);
public abstract java.lang.ArrayIndexOutOfBoundsException arrayOffsetLengthGreaterThanLength(int, int, int);
public abstract java.lang.IllegalArgumentException nullArrayParam(int, java.lang.String);
public abstract java.lang.IllegalArgumentException emptyParam(java.lang.String);
public abstract java.lang.String unexpectedNullValue();
public abstract java.lang.String expectedLockHold(java.lang.Object);
public abstract java.lang.String expectedLockNotHold(java.lang.Object);
public abstract java.lang.String expectedBoolean(boolean);
public abstract java.lang.IllegalStateException unreachableCode();
public abstract java.lang.IllegalStateException impossibleSwitchCase(java.lang.Object);
public abstract java.lang.UnsupportedOperationException unsupported(java.lang.String, java.lang.String);
static void <clinit>()
{
java.lang.Object v0;
v0 = staticinvoke <org.jboss.logging.Messages: java.lang.Object getBundle(java.lang.Class)>(class "Lio/smallrye/common/constraint/Messages;");
<io.smallrye.common.constraint.Messages: io.smallrye.common.constraint.Messages log> = v0;
return;
}
}