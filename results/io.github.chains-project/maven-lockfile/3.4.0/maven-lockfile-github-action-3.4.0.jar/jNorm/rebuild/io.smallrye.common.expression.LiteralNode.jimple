class io.smallrye.common.expression.LiteralNode extends io.smallrye.common.expression.Node
{
static final io.smallrye.common.expression.LiteralNode DOLLAR;
static final io.smallrye.common.expression.LiteralNode CLOSE_BRACE;
static final io.smallrye.common.expression.LiteralNode FILE_SEP;
static final io.smallrye.common.expression.LiteralNode COLON;
static final io.smallrye.common.expression.LiteralNode NEWLINE;
static final io.smallrye.common.expression.LiteralNode CARRIAGE_RETURN;
static final io.smallrye.common.expression.LiteralNode TAB;
static final io.smallrye.common.expression.LiteralNode BACKSPACE;
static final io.smallrye.common.expression.LiteralNode FORM_FEED;
static final io.smallrye.common.expression.LiteralNode BACKSLASH;
private final java.lang.String literalValue;
private final int start;
private final int end;
private java.lang.String toString;
void <init>(java.lang.String, int, int)
{
io.smallrye.common.expression.LiteralNode v0;
int v2, v3;
java.lang.String v1;
v0 := @this: io.smallrye.common.expression.LiteralNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.smallrye.common.expression.Node: void <init>()>();
v0.<io.smallrye.common.expression.LiteralNode: java.lang.String literalValue> = v1;
v0.<io.smallrye.common.expression.LiteralNode: int start> = v2;
v0.<io.smallrye.common.expression.LiteralNode: int end> = v3;
return;
}
void <init>(java.lang.String)
{
int v2;
java.lang.String v1;
io.smallrye.common.expression.LiteralNode v0;
v0 := @this: io.smallrye.common.expression.LiteralNode;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
specialinvoke v0.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String,int,int)>(v1, 0, v2);
return;
}
void emit(io.smallrye.common.expression.ResolveContext, io.smallrye.common.function.ExceptionBiConsumer) throws java.lang.Exception
{
io.smallrye.common.function.ExceptionBiConsumer v2;
io.smallrye.common.expression.ResolveContext v1;
io.smallrye.common.expression.LiteralNode v0;
int v5, v6;
java.lang.StringBuilder v3;
java.lang.String v4;
v0 := @this: io.smallrye.common.expression.LiteralNode;
v1 := @parameter0: io.smallrye.common.expression.ResolveContext;
v2 := @parameter1: io.smallrye.common.function.ExceptionBiConsumer;
v3 = virtualinvoke v1.<io.smallrye.common.expression.ResolveContext: java.lang.StringBuilder getStringBuilder()>();
v4 = v0.<io.smallrye.common.expression.LiteralNode: java.lang.String literalValue>;
v5 = v0.<io.smallrye.common.expression.LiteralNode: int start>;
v6 = v0.<io.smallrye.common.expression.LiteralNode: int end>;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v4, v5, v6);
return;
}
void catalog(java.util.HashSet)
{
java.util.HashSet v1;
io.smallrye.common.expression.LiteralNode v0;
v0 := @this: io.smallrye.common.expression.LiteralNode;
v1 := @parameter0: java.util.HashSet;
return;
}
public java.lang.String toString()
{
io.smallrye.common.expression.LiteralNode v0;
int v4, v5;
java.lang.String v1, v2, v3;
v0 := @this: io.smallrye.common.expression.LiteralNode;
v1 = v0.<io.smallrye.common.expression.LiteralNode: java.lang.String toString>;
if v1 == null goto label1;
v2 = v1;
goto label2;
label1:
v3 = v0.<io.smallrye.common.expression.LiteralNode: java.lang.String literalValue>;
v4 = v0.<io.smallrye.common.expression.LiteralNode: int start>;
v5 = v0.<io.smallrye.common.expression.LiteralNode: int end>;
v2 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int,int)>(v4, v5);
v0.<io.smallrye.common.expression.LiteralNode: java.lang.String toString> = v2;
label2:
return v2;
}
static void <clinit>()
{
io.smallrye.common.expression.LiteralNode v0, v1, v10, v2, v4, v5, v6, v7, v8, v9;
java.lang.String v3;
v0 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v0.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("$");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode DOLLAR> = v0;
v1 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v1.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("}");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode CLOSE_BRACE> = v1;
v2 = new io.smallrye.common.expression.LiteralNode;
v3 = <java.io.File: java.lang.String separator>;
specialinvoke v2.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>(v3);
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode FILE_SEP> = v2;
v4 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v4.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>(":");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode COLON> = v4;
v5 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v5.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("\n");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode NEWLINE> = v5;
v6 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v6.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("\r");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode CARRIAGE_RETURN> = v6;
v7 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v7.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("\t");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode TAB> = v7;
v8 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v8.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("\u0008");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode BACKSPACE> = v8;
v9 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v9.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("\f");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode FORM_FEED> = v9;
v10 = new io.smallrye.common.expression.LiteralNode;
specialinvoke v10.<io.smallrye.common.expression.LiteralNode: void <init>(java.lang.String)>("\\");
<io.smallrye.common.expression.LiteralNode: io.smallrye.common.expression.LiteralNode BACKSLASH> = v10;
return;
}
}