public interface  io.smallrye.common.function.ExceptionBinaryOperator extends java.lang.Object implements io.smallrye.common.function.ExceptionBiFunction
{
public io.smallrye.common.function.ExceptionBinaryOperator andThen(io.smallrye.common.function.ExceptionUnaryOperator)
{
io.smallrye.common.function.ExceptionUnaryOperator v1;
io.smallrye.common.function.ExceptionBinaryOperator v0, v2;
v0 := @this: io.smallrye.common.function.ExceptionBinaryOperator;
v1 := @parameter0: io.smallrye.common.function.ExceptionUnaryOperator;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionBinaryOperator$lambda_andThen_0__3173: io.smallrye.common.function.ExceptionBinaryOperator bootstrap$(io.smallrye.common.function.ExceptionBinaryOperator,io.smallrye.common.function.ExceptionUnaryOperator)>(v0, v1);
return v2;
}
}