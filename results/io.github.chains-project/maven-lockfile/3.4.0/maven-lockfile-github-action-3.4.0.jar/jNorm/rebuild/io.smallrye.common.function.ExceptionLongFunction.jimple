public interface  io.smallrye.common.function.ExceptionLongFunction extends java.lang.Object
{
public abstract java.lang.Object apply(long) throws java.lang.Exception;
public io.smallrye.common.function.ExceptionLongFunction andThen(io.smallrye.common.function.ExceptionFunction)
{
io.smallrye.common.function.ExceptionFunction v1;
io.smallrye.common.function.ExceptionLongFunction v0, v2;
v0 := @this: io.smallrye.common.function.ExceptionLongFunction;
v1 := @parameter0: io.smallrye.common.function.ExceptionFunction;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionLongFunction$lambda_andThen_0__3161: io.smallrye.common.function.ExceptionLongFunction bootstrap$(io.smallrye.common.function.ExceptionLongFunction,io.smallrye.common.function.ExceptionFunction)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionFunction compose(io.smallrye.common.function.ExceptionToLongFunction)
{
io.smallrye.common.function.ExceptionFunction v2;
io.smallrye.common.function.ExceptionLongFunction v0;
io.smallrye.common.function.ExceptionToLongFunction v1;
v0 := @this: io.smallrye.common.function.ExceptionLongFunction;
v1 := @parameter0: io.smallrye.common.function.ExceptionToLongFunction;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("before", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionLongFunction$lambda_compose_1__3162: io.smallrye.common.function.ExceptionFunction bootstrap$(io.smallrye.common.function.ExceptionLongFunction,io.smallrye.common.function.ExceptionToLongFunction)>(v0, v1);
return v2;
}
}