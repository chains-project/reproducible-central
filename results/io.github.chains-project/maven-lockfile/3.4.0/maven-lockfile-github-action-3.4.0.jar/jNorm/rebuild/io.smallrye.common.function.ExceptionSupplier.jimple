public interface  io.smallrye.common.function.ExceptionSupplier extends java.lang.Object
{
public abstract java.lang.Object get() throws java.lang.Exception;
public io.smallrye.common.function.ExceptionRunnable andThen(io.smallrye.common.function.ExceptionConsumer)
{
io.smallrye.common.function.ExceptionSupplier v0;
io.smallrye.common.function.ExceptionRunnable v2;
io.smallrye.common.function.ExceptionConsumer v1;
v0 := @this: io.smallrye.common.function.ExceptionSupplier;
v1 := @parameter0: io.smallrye.common.function.ExceptionConsumer;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionSupplier$lambda_andThen_0__3193: io.smallrye.common.function.ExceptionRunnable bootstrap$(io.smallrye.common.function.ExceptionSupplier,io.smallrye.common.function.ExceptionConsumer)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionSupplier andThen(io.smallrye.common.function.ExceptionFunction)
{
io.smallrye.common.function.ExceptionFunction v1;
io.smallrye.common.function.ExceptionSupplier v0, v2;
v0 := @this: io.smallrye.common.function.ExceptionSupplier;
v1 := @parameter0: io.smallrye.common.function.ExceptionFunction;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionSupplier$lambda_andThen_1__3194: io.smallrye.common.function.ExceptionSupplier bootstrap$(io.smallrye.common.function.ExceptionSupplier,io.smallrye.common.function.ExceptionFunction)>(v0, v1);
return v2;
}
}