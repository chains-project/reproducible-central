public interface  io.smallrye.common.function.ExceptionToLongBiFunction extends java.lang.Object
{
public abstract long apply(java.lang.Object, java.lang.Object) throws java.lang.Exception;
public io.smallrye.common.function.ExceptionBiFunction andThen(io.smallrye.common.function.ExceptionLongFunction)
{
io.smallrye.common.function.ExceptionBiFunction v2;
io.smallrye.common.function.ExceptionLongFunction v1;
io.smallrye.common.function.ExceptionToLongBiFunction v0;
v0 := @this: io.smallrye.common.function.ExceptionToLongBiFunction;
v1 := @parameter0: io.smallrye.common.function.ExceptionLongFunction;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <io.smallrye.common.function.ExceptionToLongBiFunction$lambda_andThen_0__3181: io.smallrye.common.function.ExceptionBiFunction bootstrap$(io.smallrye.common.function.ExceptionToLongBiFunction,io.smallrye.common.function.ExceptionLongFunction)>(v0, v1);
return v2;
}
}