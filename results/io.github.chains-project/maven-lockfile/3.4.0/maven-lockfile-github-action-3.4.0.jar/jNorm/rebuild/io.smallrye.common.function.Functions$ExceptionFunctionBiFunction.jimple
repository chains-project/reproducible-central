class io.smallrye.common.function.Functions$ExceptionFunctionBiFunction extends java.lang.Object implements io.smallrye.common.function.ExceptionBiFunction
{
static final io.smallrye.common.function.ExceptionBiFunction INSTANCE;
private void <init>()
{
io.smallrye.common.function.Functions$ExceptionFunctionBiFunction v0;
v0 := @this: io.smallrye.common.function.Functions$ExceptionFunctionBiFunction;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object apply(io.smallrye.common.function.ExceptionFunction, java.lang.Object) throws java.lang.Exception
{
io.smallrye.common.function.ExceptionFunction v1;
java.lang.Object v2, v3;
io.smallrye.common.function.Functions$ExceptionFunctionBiFunction v0;
v0 := @this: io.smallrye.common.function.Functions$ExceptionFunctionBiFunction;
v1 := @parameter0: io.smallrye.common.function.ExceptionFunction;
v2 := @parameter1: java.lang.Object;
v3 = interfaceinvoke v1.<io.smallrye.common.function.ExceptionFunction: java.lang.Object apply(java.lang.Object)>(v2);
return v3;
}
static void <clinit>()
{
io.smallrye.common.function.Functions$ExceptionFunctionBiFunction v0;
v0 = new io.smallrye.common.function.Functions$ExceptionFunctionBiFunction;
specialinvoke v0.<io.smallrye.common.function.Functions$ExceptionFunctionBiFunction: void <init>()>();
<io.smallrye.common.function.Functions$ExceptionFunctionBiFunction: io.smallrye.common.function.ExceptionBiFunction INSTANCE> = v0;
return;
}
}