public final class io.smallrye.config.ConfigMappingProvider$Builder extends java.lang.Object
{
final java.util.Set types;
final java.util.Map roots;
final java.util.List ignored;
boolean validateUnknown;
void <init>()
{
java.util.HashSet v1;
io.smallrye.config.ConfigMappingProvider$Builder v0;
java.util.HashMap v2;
java.util.ArrayList v3;
v0 := @this: io.smallrye.config.ConfigMappingProvider$Builder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>()>();
v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.Set types> = v1;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.Map roots> = v2;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.List ignored> = v3;
v0.<io.smallrye.config.ConfigMappingProvider$Builder: boolean validateUnknown> = 1;
return;
}
public io.smallrye.config.ConfigMappingProvider$Builder addRoot(java.lang.String, java.lang.Class)
{
io.smallrye.config.ConfigMappingProvider$Builder v0;
java.util.Set v3;
java.util.function.Function v5;
java.util.Map v4;
java.lang.Class v2, v7;
java.lang.Object v6;
java.lang.String v1;
v0 := @this: io.smallrye.config.ConfigMappingProvider$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Class;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("path", v1);
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("type", v2);
v3 = v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.Set types>;
interfaceinvoke v3.<java.util.Set: boolean add(java.lang.Object)>(v2);
v4 = v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.Map roots>;
v5 = staticinvoke <io.smallrye.config.ConfigMappingProvider$Builder$lambda_addRoot_0__3074: java.util.function.Function bootstrap$()>();
v6 = interfaceinvoke v4.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v1, v5);
v7 = staticinvoke <io.smallrye.config.ConfigMappingLoader: java.lang.Class getConfigMappingClass(java.lang.Class)>(v2);
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v7);
return v0;
}
public io.smallrye.config.ConfigMappingProvider$Builder addIgnored(java.lang.String)
{
java.util.List v2;
io.smallrye.config.ConfigMappingProvider$Builder v0;
java.lang.String[] v3;
java.lang.String v1;
v0 := @this: io.smallrye.config.ConfigMappingProvider$Builder;
v1 := @parameter0: java.lang.String;
staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("path", v1);
v2 = v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.List ignored>;
v3 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v3);
return v0;
}
public io.smallrye.config.ConfigMappingProvider$Builder validateUnknown(boolean)
{
io.smallrye.config.ConfigMappingProvider$Builder v0;
boolean v1;
v0 := @this: io.smallrye.config.ConfigMappingProvider$Builder;
v1 := @parameter0: boolean;
v0.<io.smallrye.config.ConfigMappingProvider$Builder: boolean validateUnknown> = v1;
return v0;
}
public io.smallrye.config.ConfigMappingProvider build()
{
java.util.Iterator v3;
io.smallrye.config.ConfigMappingProvider$Builder v0;
io.smallrye.config.ConfigMappingClass v6;
java.util.Set v2;
java.lang.Object v5;
io.smallrye.config.ConfigMappingProvider v7;
boolean v1, v4;
v0 := @this: io.smallrye.config.ConfigMappingProvider$Builder;
v1 = 1;
v2 = v0.<io.smallrye.config.ConfigMappingProvider$Builder: java.util.Set types>;
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = staticinvoke <io.smallrye.config.ConfigMappingClass: io.smallrye.config.ConfigMappingClass getConfigurationClass(java.lang.Class)>(v5);
if v6 != null goto label1;
v1 = 0;
label2:
if v1 == 0 goto label3;
v0.<io.smallrye.config.ConfigMappingProvider$Builder: boolean validateUnknown> = 0;
label3:
v7 = new io.smallrye.config.ConfigMappingProvider;
specialinvoke v7.<io.smallrye.config.ConfigMappingProvider: void <init>(io.smallrye.config.ConfigMappingProvider$Builder)>(v0);
return v7;
}
}