final class io.smallrye.config.ConfigSourceMap$EntrySet$Itr extends java.lang.Object implements java.util.Iterator
{
private final java.util.Iterator iterator;
final io.smallrye.config.ConfigSourceMap$EntrySet this$1;
void <init>(io.smallrye.config.ConfigSourceMap$EntrySet, java.util.Iterator)
{
io.smallrye.config.ConfigSourceMap$EntrySet$Itr v0;
java.util.Iterator v2;
io.smallrye.config.ConfigSourceMap$EntrySet v1;
v0 := @this: io.smallrye.config.ConfigSourceMap$EntrySet$Itr;
v1 := @parameter0: io.smallrye.config.ConfigSourceMap$EntrySet;
v2 := @parameter1: java.util.Iterator;
v0.<io.smallrye.config.ConfigSourceMap$EntrySet$Itr: io.smallrye.config.ConfigSourceMap$EntrySet this$1> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.ConfigSourceMap$EntrySet$Itr: java.util.Iterator iterator> = v2;
return;
}
public boolean hasNext()
{
io.smallrye.config.ConfigSourceMap$EntrySet$Itr v0;
java.util.Iterator v1;
boolean v2;
v0 := @this: io.smallrye.config.ConfigSourceMap$EntrySet$Itr;
v1 = v0.<io.smallrye.config.ConfigSourceMap$EntrySet$Itr: java.util.Iterator iterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.util.Map$Entry next()
{
org.eclipse.microprofile.config.spi.ConfigSource v6;
io.smallrye.config.ConfigSourceMap$EntrySet$Itr v0;
java.util.Iterator v1;
java.util.AbstractMap$SimpleImmutableEntry v3;
io.smallrye.config.ConfigSourceMap$EntrySet v4;
io.smallrye.config.ConfigSourceMap v5;
java.lang.Object v2;
java.lang.String v7;
v0 := @this: io.smallrye.config.ConfigSourceMap$EntrySet$Itr;
v1 = v0.<io.smallrye.config.ConfigSourceMap$EntrySet$Itr: java.util.Iterator iterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v3 = new java.util.AbstractMap$SimpleImmutableEntry;
v4 = v0.<io.smallrye.config.ConfigSourceMap$EntrySet$Itr: io.smallrye.config.ConfigSourceMap$EntrySet this$1>;
v5 = v4.<io.smallrye.config.ConfigSourceMap$EntrySet: io.smallrye.config.ConfigSourceMap this$0>;
v6 = v5.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v7 = interfaceinvoke v6.<org.eclipse.microprofile.config.spi.ConfigSource: java.lang.String getValue(java.lang.String)>(v2);
specialinvoke v3.<java.util.AbstractMap$SimpleImmutableEntry: void <init>(java.lang.Object,java.lang.Object)>(v2, v7);
return v3;
}
}