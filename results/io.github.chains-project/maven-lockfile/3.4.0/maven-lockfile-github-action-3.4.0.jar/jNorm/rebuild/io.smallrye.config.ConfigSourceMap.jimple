public class io.smallrye.config.ConfigSourceMap extends java.util.AbstractMap implements java.util.Map, java.io.Serializable
{
private static final long serialVersionUID;
private final org.eclipse.microprofile.config.spi.ConfigSource delegate;
private transient io.smallrye.config.ConfigSourceMap$Values values;
private transient io.smallrye.config.ConfigSourceMap$EntrySet entrySet;
public void <init>(org.eclipse.microprofile.config.spi.ConfigSource)
{
org.eclipse.microprofile.config.spi.ConfigSource v1;
java.lang.Object v2;
io.smallrye.config.ConfigSourceMap v0;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 := @parameter0: org.eclipse.microprofile.config.spi.ConfigSource;
specialinvoke v0.<java.util.AbstractMap: void <init>()>();
v2 = staticinvoke <io.smallrye.common.constraint.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("delegate", v1);
v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate> = v2;
return;
}
public int size()
{
org.eclipse.microprofile.config.spi.ConfigSource v1;
io.smallrye.config.ConfigSourceMap v0;
int v3;
java.util.Set v2;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 = v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v2 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.ConfigSource: java.util.Set getPropertyNames()>();
v3 = interfaceinvoke v2.<java.util.Set: int size()>();
return v3;
}
public boolean isEmpty()
{
org.eclipse.microprofile.config.spi.ConfigSource v1;
io.smallrye.config.ConfigSourceMap v0;
java.util.Set v2;
boolean v3;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 = v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v2 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.ConfigSource: java.util.Set getPropertyNames()>();
v3 = interfaceinvoke v2.<java.util.Set: boolean isEmpty()>();
return v3;
}
public boolean containsKey(java.lang.Object)
{
org.eclipse.microprofile.config.spi.ConfigSource v2;
io.smallrye.config.ConfigSourceMap v0;
java.util.Set v3;
java.lang.Object v1;
boolean v4;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v3 = interfaceinvoke v2.<org.eclipse.microprofile.config.spi.ConfigSource: java.util.Set getPropertyNames()>();
v4 = interfaceinvoke v3.<java.util.Set: boolean contains(java.lang.Object)>(v1);
return v4;
}
public java.lang.String get(java.lang.Object)
{
org.eclipse.microprofile.config.spi.ConfigSource v3;
io.smallrye.config.ConfigSourceMap v0;
java.lang.Object v1;
java.lang.String v4;
boolean v2;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.lang.String;
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v4 = interfaceinvoke v3.<org.eclipse.microprofile.config.spi.ConfigSource: java.lang.String getValue(java.lang.String)>(v1);
goto label2;
label1:
v4 = null;
label2:
return v4;
}
public java.util.Set keySet()
{
java.util.Set v2;
org.eclipse.microprofile.config.spi.ConfigSource v1;
io.smallrye.config.ConfigSourceMap v0;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 = v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v2 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.ConfigSource: java.util.Set getPropertyNames()>();
return v2;
}
public java.util.Collection values()
{
io.smallrye.config.ConfigSourceMap$Values v1, v2;
io.smallrye.config.ConfigSourceMap v0;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 = v0.<io.smallrye.config.ConfigSourceMap: io.smallrye.config.ConfigSourceMap$Values values>;
if v1 != null goto label1;
v2 = new io.smallrye.config.ConfigSourceMap$Values;
specialinvoke v2.<io.smallrye.config.ConfigSourceMap$Values: void <init>(io.smallrye.config.ConfigSourceMap)>(v0);
v0.<io.smallrye.config.ConfigSourceMap: io.smallrye.config.ConfigSourceMap$Values values> = v2;
return v2;
label1:
return v1;
}
public java.util.Set entrySet()
{
io.smallrye.config.ConfigSourceMap$EntrySet v1, v2;
io.smallrye.config.ConfigSourceMap v0;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 = v0.<io.smallrye.config.ConfigSourceMap: io.smallrye.config.ConfigSourceMap$EntrySet entrySet>;
if v1 != null goto label1;
v2 = new io.smallrye.config.ConfigSourceMap$EntrySet;
specialinvoke v2.<io.smallrye.config.ConfigSourceMap$EntrySet: void <init>(io.smallrye.config.ConfigSourceMap)>(v0);
v0.<io.smallrye.config.ConfigSourceMap: io.smallrye.config.ConfigSourceMap$EntrySet entrySet> = v2;
return v2;
label1:
return v1;
}
public void forEach(java.util.function.BiConsumer)
{
org.eclipse.microprofile.config.spi.ConfigSource v6;
java.util.Iterator v3;
java.util.Set v2;
io.smallrye.config.ConfigSourceMap v0;
java.util.function.BiConsumer v1;
java.lang.Object v5;
java.lang.String v7;
boolean v4;
v0 := @this: io.smallrye.config.ConfigSourceMap;
v1 := @parameter0: java.util.function.BiConsumer;
v2 = virtualinvoke v0.<io.smallrye.config.ConfigSourceMap: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = v0.<io.smallrye.config.ConfigSourceMap: org.eclipse.microprofile.config.spi.ConfigSource delegate>;
v7 = interfaceinvoke v6.<org.eclipse.microprofile.config.spi.ConfigSource: java.lang.String getValue(java.lang.String)>(v5);
interfaceinvoke v1.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v5, v7);
goto label1;
label2:
return;
}
}