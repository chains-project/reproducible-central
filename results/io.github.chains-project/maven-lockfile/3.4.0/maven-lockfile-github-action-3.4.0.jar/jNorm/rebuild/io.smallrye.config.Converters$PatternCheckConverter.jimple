final class io.smallrye.config.Converters$PatternCheckConverter extends java.lang.Object implements org.eclipse.microprofile.config.spi.Converter, java.io.Serializable
{
private static final long serialVersionUID;
private final org.eclipse.microprofile.config.spi.Converter delegate;
private final java.util.regex.Pattern pattern;
void <init>(org.eclipse.microprofile.config.spi.Converter, java.util.regex.Pattern)
{
io.smallrye.config.Converters$PatternCheckConverter v0;
java.util.regex.Pattern v2;
org.eclipse.microprofile.config.spi.Converter v1;
v0 := @this: io.smallrye.config.Converters$PatternCheckConverter;
v1 := @parameter0: org.eclipse.microprofile.config.spi.Converter;
v2 := @parameter1: java.util.regex.Pattern;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.Converters$PatternCheckConverter: org.eclipse.microprofile.config.spi.Converter delegate> = v1;
v0.<io.smallrye.config.Converters$PatternCheckConverter: java.util.regex.Pattern pattern> = v2;
return;
}
public java.lang.Object convert(java.lang.String)
{
io.smallrye.config.Converters$PatternCheckConverter v0;
java.lang.IllegalArgumentException v9;
io.smallrye.config.ConfigMessages v7;
java.util.regex.Matcher v3;
org.eclipse.microprofile.config.spi.Converter v5;
java.lang.Object v6;
java.lang.String v1;
java.util.regex.Pattern v2, v8;
boolean v4;
v0 := @this: io.smallrye.config.Converters$PatternCheckConverter;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
return null;
label1:
v2 = v0.<io.smallrye.config.Converters$PatternCheckConverter: java.util.regex.Pattern pattern>;
v3 = virtualinvoke v2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v1);
v4 = virtualinvoke v3.<java.util.regex.Matcher: boolean matches()>();
if v4 == 0 goto label2;
v5 = v0.<io.smallrye.config.Converters$PatternCheckConverter: org.eclipse.microprofile.config.spi.Converter delegate>;
v6 = interfaceinvoke v5.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v1);
return v6;
label2:
v7 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v8 = v0.<io.smallrye.config.Converters$PatternCheckConverter: java.util.regex.Pattern pattern>;
v9 = interfaceinvoke v7.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException valueNotMatchPattern(java.util.regex.Pattern,java.lang.String)>(v8, v1);
throw v9;
}
}