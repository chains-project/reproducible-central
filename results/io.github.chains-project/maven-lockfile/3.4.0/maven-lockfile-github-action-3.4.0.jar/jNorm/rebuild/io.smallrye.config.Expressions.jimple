public final class io.smallrye.config.Expressions extends java.lang.Object
{
private static final java.lang.ThreadLocal ENABLE;
private void <init>()
{
java.lang.UnsupportedOperationException v1;
io.smallrye.config.Expressions v0;
v0 := @this: io.smallrye.config.Expressions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public static boolean isEnabled()
{
java.lang.Object v1;
java.lang.ThreadLocal v0;
boolean v2;
v0 = <io.smallrye.config.Expressions: java.lang.ThreadLocal ENABLE>;
v1 = virtualinvoke v0.<java.lang.ThreadLocal: java.lang.Object get()>();
if v1 != null goto label1;
v2 = 1;
goto label2;
label1:
v2 = virtualinvoke v1.<java.lang.Boolean: boolean booleanValue()>();
label2:
return v2;
}
public static void withoutExpansion(java.lang.Runnable)
{
java.lang.Runnable v0;
java.util.function.Supplier v1;
v0 := @parameter0: java.lang.Runnable;
v1 = staticinvoke <io.smallrye.config.Expressions$lambda_withoutExpansion_0__3107: java.util.function.Supplier bootstrap$(java.lang.Runnable)>(v0);
staticinvoke <io.smallrye.config.Expressions: java.lang.Object withoutExpansion(java.util.function.Supplier)>(v1);
return;
}
public static java.lang.Object withoutExpansion(java.util.function.Supplier)
{
java.lang.Throwable v6;
java.lang.ThreadLocal v2, v5, v7;
java.util.function.Supplier v0;
java.lang.Boolean v3;
java.lang.Object v4, v8;
boolean v1;
v0 := @parameter0: java.util.function.Supplier;
v1 = staticinvoke <io.smallrye.config.Expressions: boolean isEnabled()>();
if v1 == 0 goto label4;
v2 = <io.smallrye.config.Expressions: java.lang.ThreadLocal ENABLE>;
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
virtualinvoke v2.<java.lang.ThreadLocal: void set(java.lang.Object)>(v3);
label1:
v4 = interfaceinvoke v0.<java.util.function.Supplier: java.lang.Object get()>();
label2:
v5 = <io.smallrye.config.Expressions: java.lang.ThreadLocal ENABLE>;
virtualinvoke v5.<java.lang.ThreadLocal: void remove()>();
return v4;
label3:
v6 := @caughtexception;
v7 = <io.smallrye.config.Expressions: java.lang.ThreadLocal ENABLE>;
virtualinvoke v7.<java.lang.ThreadLocal: void remove()>();
throw v6;
label4:
v8 = interfaceinvoke v0.<java.util.function.Supplier: java.lang.Object get()>();
return v8;
catch java.lang.Throwable from label1 to label2 with label3;
}
static void <clinit>()
{
java.lang.ThreadLocal v0;
v0 = new java.lang.ThreadLocal;
specialinvoke v0.<java.lang.ThreadLocal: void <init>()>();
<io.smallrye.config.Expressions: java.lang.ThreadLocal ENABLE> = v0;
return;
}
}