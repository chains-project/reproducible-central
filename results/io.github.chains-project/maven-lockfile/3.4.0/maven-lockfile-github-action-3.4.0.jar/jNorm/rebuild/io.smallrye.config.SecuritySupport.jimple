class io.smallrye.config.SecuritySupport extends java.lang.Object
{
private void <init>()
{
io.smallrye.config.SecuritySupport v0;
v0 := @this: io.smallrye.config.SecuritySupport;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.lang.ClassLoader getContextClassLoader()
{
java.lang.Thread v1;
java.lang.Object v4;
java.lang.ClassLoader v2;
java.security.PrivilegedAction v3;
java.lang.SecurityManager v0;
v0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v0 != null goto label1;
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = virtualinvoke v1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
return v2;
label1:
v3 = staticinvoke <io.smallrye.config.SecuritySupport$lambda_getContextClassLoader_0__3152: java.security.PrivilegedAction bootstrap$()>();
v4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
return v4;
}
static void setAccessible(java.lang.reflect.AccessibleObject, boolean)
{
java.lang.reflect.AccessibleObject v0;
java.security.PrivilegedAction v3;
java.lang.SecurityManager v2;
boolean v1;
v0 := @parameter0: java.lang.reflect.AccessibleObject;
v1 := @parameter1: boolean;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 != null goto label1;
virtualinvoke v0.<java.lang.reflect.AccessibleObject: void setAccessible(boolean)>(v1);
goto label2;
label1:
v3 = staticinvoke <io.smallrye.config.SecuritySupport$lambda_setAccessible_1__3153: java.security.PrivilegedAction bootstrap$(java.lang.reflect.AccessibleObject,boolean)>(v0, v1);
staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
label2:
return;
}
static transient java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class, java.lang.Class[]) throws java.lang.NoSuchMethodException
{
java.security.PrivilegedActionException v6;
java.lang.Class[] v1;
java.lang.RuntimeException v9;
java.security.PrivilegedExceptionAction v4;
java.lang.reflect.Constructor v3;
java.lang.Exception v7;
java.lang.SecurityManager v2;
java.lang.Class v0;
java.lang.Object v5;
boolean v8;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.Class[];
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 != null goto label1;
v3 = virtualinvoke v0.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v1);
return v3;
label1:
v4 = staticinvoke <io.smallrye.config.SecuritySupport$lambda_getDeclaredConstructor_2__3154: java.security.PrivilegedExceptionAction bootstrap$(java.lang.Class,java.lang.Class[])>(v0, v1);
v5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedExceptionAction)>(v4);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = virtualinvoke v6.<java.security.PrivilegedActionException: java.lang.Exception getException()>();
v8 = v7 instanceof java.lang.NoSuchMethodException;
if v8 == 0 goto label4;
throw v7;
label4:
v9 = new java.lang.RuntimeException;
specialinvoke v9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v7);
throw v9;
catch java.security.PrivilegedActionException from label1 to label2 with label3;
}
}