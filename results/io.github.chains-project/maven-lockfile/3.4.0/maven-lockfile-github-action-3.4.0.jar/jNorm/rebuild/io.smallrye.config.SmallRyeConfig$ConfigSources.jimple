class io.smallrye.config.SmallRyeConfig$ConfigSources extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private final java.util.List profiles;
private final java.util.List sources;
private final io.smallrye.config.ConfigSourceInterceptorContext interceptorChain;
private final io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames propertyNames;
void <init>(io.smallrye.config.SmallRyeConfigBuilder)
{
boolean v12, v24;
java.util.Set v31;
io.smallrye.config.ConfigSourceInterceptor v14, v19, v6;
java.util.List v16, v17, v2, v27, v4, v9;
io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames v30;
io.smallrye.config.SmallRyeConfigSourceInterceptorContext v10, v15, v18, v20, v22, v26, v29, v5, v7;
io.smallrye.config.SmallRyeConfigSources v21, v8;
io.smallrye.config.PropertyNamesConfigSourceInterceptor v28;
java.util.ArrayList v3;
io.smallrye.config.SmallRyeConfig$ConfigSources v0;
java.util.Iterator v11, v23;
io.smallrye.config.SmallRyeConfigBuilder v1;
java.lang.Object v13, v25;
v0 := @this: io.smallrye.config.SmallRyeConfig$ConfigSources;
v1 := @parameter0: io.smallrye.config.SmallRyeConfigBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List buildSources(io.smallrye.config.SmallRyeConfigBuilder)>(v1);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List buildInterceptors(io.smallrye.config.SmallRyeConfigBuilder)>(v1);
v5 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v6 = <io.smallrye.config.ConfigSourceInterceptor: io.smallrye.config.ConfigSourceInterceptor EMPTY>;
specialinvoke v5.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v6, null);
v7 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v8 = new io.smallrye.config.SmallRyeConfigSources;
v9 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapSources(java.util.List)>(v2);
specialinvoke v8.<io.smallrye.config.SmallRyeConfigSources: void <init>(java.util.List)>(v9);
specialinvoke v7.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v8, v5);
v10 = v7;
v11 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label1:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label2;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v14 = virtualinvoke v13.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: io.smallrye.config.ConfigSourceInterceptor getInterceptor(io.smallrye.config.ConfigSourceInterceptorContext)>(v10);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v14);
v15 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
specialinvoke v15.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v14, v10);
v10 = v15;
goto label1;
label2:
v16 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List getProfiles(java.util.List)>(v3);
v17 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapLateSources(java.util.List,java.util.List,io.smallrye.config.ConfigSourceInterceptorContext,java.util.List,io.smallrye.config.SmallRyeConfigBuilder)>(v2, v3, v10, v16, v1);
v18 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v19 = <io.smallrye.config.ConfigSourceInterceptor: io.smallrye.config.ConfigSourceInterceptor EMPTY>;
specialinvoke v18.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v19, null);
v20 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v21 = new io.smallrye.config.SmallRyeConfigSources;
specialinvoke v21.<io.smallrye.config.SmallRyeConfigSources: void <init>(java.util.List)>(v17);
specialinvoke v20.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v21, v18);
v22 = v20;
v23 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label3:
v24 = interfaceinvoke v23.<java.util.Iterator: boolean hasNext()>();
if v24 == 0 goto label4;
v25 = interfaceinvoke v23.<java.util.Iterator: java.lang.Object next()>();
v26 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
specialinvoke v26.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v25, v22);
v22 = v26;
goto label3;
label4:
v27 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List getSources(java.util.List)>(v17);
v28 = new io.smallrye.config.PropertyNamesConfigSourceInterceptor;
specialinvoke v28.<io.smallrye.config.PropertyNamesConfigSourceInterceptor: void <init>()>();
v29 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
specialinvoke v29.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v28, v22);
v30 = new io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames;
specialinvoke v30.<io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames: void <init>(io.smallrye.config.SmallRyeConfig$ConfigSources,io.smallrye.config.PropertyNamesConfigSourceInterceptor)>(v0, v28);
v31 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.Set generateDottedProperties(java.util.List,io.smallrye.config.SmallRyeConfigSourceInterceptorContext)>(v27, v29);
virtualinvoke v30.<io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames: void add(java.util.Set)>(v31);
v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List profiles> = v16;
v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List sources> = v27;
v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: io.smallrye.config.ConfigSourceInterceptorContext interceptorChain> = v29;
v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames propertyNames> = v30;
return;
}
private static java.util.List buildSources(io.smallrye.config.SmallRyeConfigBuilder)
{
java.lang.Iterable v8;
java.util.ArrayList v1;
io.smallrye.config.KeyMap v17;
boolean v10, v12, v14, v5;
java.util.Iterator v4, v9;
io.smallrye.config.DefaultValuesConfigSource v16;
java.util.List v13, v15, v2, v3;
io.smallrye.config.SmallRyeConfigBuilder v0;
java.lang.Object v11, v6;
java.lang.ClassLoader v7;
v0 := @parameter0: io.smallrye.config.SmallRyeConfigBuilder;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List getSources()>();
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v3 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List getSourceProviders()>();
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.lang.ClassLoader getClassLoader()>();
v8 = interfaceinvoke v6.<org.eclipse.microprofile.config.spi.ConfigSourceProvider: java.lang.Iterable getConfigSources(java.lang.ClassLoader)>(v7);
v9 = interfaceinvoke v8.<java.lang.Iterable: java.util.Iterator iterator()>();
label2:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label1;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v11);
goto label2;
label3:
v12 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: boolean isAddDiscoveredSources()>();
if v12 == 0 goto label4;
v13 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List discoverSources()>();
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v13);
label4:
v14 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: boolean isAddDefaultSources()>();
if v14 == 0 goto label5;
v15 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List getDefaultSources()>();
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v15);
label5:
v16 = new io.smallrye.config.DefaultValuesConfigSource;
v17 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: io.smallrye.config.KeyMap getDefaultValues()>();
specialinvoke v16.<io.smallrye.config.DefaultValuesConfigSource: void <init>(io.smallrye.config.KeyMap)>(v17);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v16);
return v1;
}
private static java.util.List buildInterceptors(io.smallrye.config.SmallRyeConfigBuilder)
{
java.util.List v2, v4, v6;
io.smallrye.config.SmallRyeConfigBuilder v0;
boolean v3, v5;
java.util.ArrayList v1;
v0 := @parameter0: io.smallrye.config.SmallRyeConfigBuilder;
v1 = new java.util.ArrayList;
v2 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List getInterceptors()>();
specialinvoke v1.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v3 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: boolean isAddDiscoveredInterceptors()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List discoverInterceptors()>();
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v4);
label1:
v5 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: boolean isAddDefaultInterceptors()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List getDefaultInterceptors()>();
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v6);
label2:
interfaceinvoke v1.<java.util.List: void sort(java.util.Comparator)>(null);
return v1;
}
private static java.util.List mapSources(java.util.List)
{
java.util.List v0;
java.util.Iterator v2;
java.lang.Object v4;
io.smallrye.config.SmallRyeConfig$ConfigSourceWithPriority v6;
boolean v3, v5;
java.util.ArrayList v1;
v0 := @parameter0: java.util.List;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = v4 instanceof io.smallrye.config.ConfigurableConfigSource;
if v5 != 0 goto label1;
v6 = new io.smallrye.config.SmallRyeConfig$ConfigSourceWithPriority;
specialinvoke v6.<io.smallrye.config.SmallRyeConfig$ConfigSourceWithPriority: void <init>(org.eclipse.microprofile.config.spi.ConfigSource)>(v4);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label1;
label2:
interfaceinvoke v1.<java.util.List: void sort(java.util.Comparator)>(null);
staticinvoke <java.util.Collections: void reverse(java.util.List)>(v1);
return v1;
}
private static java.util.List getProfiles(java.util.List)
{
java.util.Iterator v1;
java.lang.String[] v5;
io.smallrye.config.ConfigSourceInterceptor v8;
java.util.List v0, v6, v7;
java.lang.Object v3;
boolean v2, v4;
v0 := @parameter0: java.util.List;
v1 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label1:
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v4 = v3 instanceof io.smallrye.config.ProfileConfigSourceInterceptor;
if v4 == 0 goto label1;
v5 = virtualinvoke v8.<io.smallrye.config.ProfileConfigSourceInterceptor: java.lang.String[] getProfiles()>();
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v5);
return v6;
label2:
v7 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v7;
}
private static java.util.List mapLateSources(java.util.List, java.util.List, io.smallrye.config.ConfigSourceInterceptorContext, java.util.List, io.smallrye.config.SmallRyeConfigBuilder)
{
io.smallrye.config.SmallRyeConfigSourceContext v28, v7;
io.smallrye.config.ConfigLogging v42;
boolean v10, v13, v23, v31, v34, v37, v39;
io.smallrye.config.ConfigValue v40;
io.smallrye.config.ConfigSourceInterceptor v18;
java.util.List v0, v1, v14, v15, v16, v29, v3, v35, v44, v45, v46, v8;
io.smallrye.config.SmallRyeConfigSourceInterceptorContext v17, v19, v21, v25;
io.smallrye.config.SmallRyeConfigSources v20;
java.util.ArrayList v27, v5, v6;
io.smallrye.config.ConfigSourceFactory v12, v33, v36;
int v26, v38;
java.lang.String v41, v43;
java.util.Iterator v22, v30, v9;
io.smallrye.config.SmallRyeConfigBuilder v4;
io.smallrye.config.ConfigSourceInterceptorContext v2;
java.lang.Object v11, v24, v32;
v0 := @parameter0: java.util.List;
v1 := @parameter1: java.util.List;
v2 := @parameter2: io.smallrye.config.ConfigSourceInterceptorContext;
v3 := @parameter3: java.util.List;
v4 := @parameter4: io.smallrye.config.SmallRyeConfigBuilder;
staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSourceWithPriority: void resetLoadPriority()>();
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>()>();
v7 = new io.smallrye.config.SmallRyeConfigSourceContext;
specialinvoke v7.<io.smallrye.config.SmallRyeConfigSourceContext: void <init>(io.smallrye.config.ConfigSourceInterceptorContext,java.util.List)>(v2, v3);
v8 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List getConfigurableSources(java.util.List)>(v0);
v9 = interfaceinvoke v8.<java.util.List: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v11.<io.smallrye.config.ConfigurableConfigSource: io.smallrye.config.ConfigSourceFactory getFactory()>();
v13 = v12 instanceof io.smallrye.config.ProfileConfigSourceFactory;
if v13 == 0 goto label1;
v14 = virtualinvoke v11.<io.smallrye.config.ConfigurableConfigSource: java.util.List getConfigSources(io.smallrye.config.ConfigSourceContext)>(v7);
interfaceinvoke v6.<java.util.List: boolean addAll(java.util.Collection)>(v14);
goto label1;
label2:
v15 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapSources(java.util.List)>(v6);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v15);
v16 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapSources(java.util.List)>(v0);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v16);
interfaceinvoke v5.<java.util.List: void sort(java.util.Comparator)>(null);
staticinvoke <java.util.Collections: void reverse(java.util.List)>(v5);
v17 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v18 = <io.smallrye.config.ConfigSourceInterceptor: io.smallrye.config.ConfigSourceInterceptor EMPTY>;
specialinvoke v17.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v18, null);
v19 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v20 = new io.smallrye.config.SmallRyeConfigSources;
specialinvoke v20.<io.smallrye.config.SmallRyeConfigSources: void <init>(java.util.List)>(v5);
specialinvoke v19.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v20, v17);
v21 = v19;
v22 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label3:
v23 = interfaceinvoke v22.<java.util.Iterator: boolean hasNext()>();
if v23 == 0 goto label4;
v24 = interfaceinvoke v22.<java.util.Iterator: java.lang.Object next()>();
v25 = new io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
specialinvoke v25.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: void <init>(io.smallrye.config.ConfigSourceInterceptor,io.smallrye.config.ConfigSourceInterceptorContext)>(v24, v21);
v21 = v25;
goto label3;
label4:
v26 = 0;
v27 = new java.util.ArrayList;
specialinvoke v27.<java.util.ArrayList: void <init>()>();
v28 = new io.smallrye.config.SmallRyeConfigSourceContext;
specialinvoke v28.<io.smallrye.config.SmallRyeConfigSourceContext: void <init>(io.smallrye.config.ConfigSourceInterceptorContext,java.util.List)>(v21, v3);
v29 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List getConfigurableSources(java.util.List)>(v0);
v30 = interfaceinvoke v29.<java.util.List: java.util.Iterator iterator()>();
label5:
v31 = interfaceinvoke v30.<java.util.Iterator: boolean hasNext()>();
if v31 == 0 goto label7;
v32 = interfaceinvoke v30.<java.util.Iterator: java.lang.Object next()>();
v33 = virtualinvoke v32.<io.smallrye.config.ConfigurableConfigSource: io.smallrye.config.ConfigSourceFactory getFactory()>();
v34 = v33 instanceof io.smallrye.config.ProfileConfigSourceFactory;
if v34 != 0 goto label5;
v35 = virtualinvoke v32.<io.smallrye.config.ConfigurableConfigSource: java.util.List getConfigSources(io.smallrye.config.ConfigSourceContext)>(v28);
v36 = virtualinvoke v32.<io.smallrye.config.ConfigurableConfigSource: io.smallrye.config.ConfigSourceFactory getFactory()>();
v37 = v36 instanceof io.smallrye.config.AbstractLocationConfigSourceFactory;
if v37 == 0 goto label6;
v38 = interfaceinvoke v35.<java.util.List: int size()>();
v26 = v26 + v38;
label6:
interfaceinvoke v27.<java.util.List: boolean addAll(java.util.Collection)>(v35);
goto label5;
label7:
if v26 != 0 goto label8;
v39 = virtualinvoke v4.<io.smallrye.config.SmallRyeConfigBuilder: boolean isAddDiscoveredSources()>();
if v39 == 0 goto label8;
v40 = interfaceinvoke v28.<io.smallrye.config.ConfigSourceContext: io.smallrye.config.ConfigValue getValue(java.lang.String)>("smallrye.config.locations");
if v40 == null goto label8;
v41 = virtualinvoke v40.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
if v41 == null goto label8;
v42 = <io.smallrye.config.ConfigLogging: io.smallrye.config.ConfigLogging log>;
v43 = virtualinvoke v40.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
interfaceinvoke v42.<io.smallrye.config.ConfigLogging: void configLocationsNotFound(java.lang.String,java.lang.String)>("smallrye.config.locations", v43);
label8:
interfaceinvoke v5.<java.util.List: void clear()>();
v44 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapSources(java.util.List)>(v27);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v44);
v45 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapSources(java.util.List)>(v6);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v45);
v46 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List mapSources(java.util.List)>(v0);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v46);
interfaceinvoke v5.<java.util.List: void sort(java.util.Comparator)>(null);
staticinvoke <java.util.Collections: void reverse(java.util.List)>(v5);
return v5;
}
private static java.util.List getSources(java.util.List)
{
org.eclipse.microprofile.config.spi.ConfigSource v5;
java.util.List v0, v6;
java.util.Iterator v2;
java.lang.Object v4;
boolean v3;
java.util.ArrayList v1;
v0 := @parameter0: java.util.List;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v4.<io.smallrye.config.SmallRyeConfig$ConfigSourceWithPriority: org.eclipse.microprofile.config.spi.ConfigSource getSource()>();
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v6;
}
private static java.util.List getConfigurableSources(java.util.List)
{
org.eclipse.microprofile.config.spi.ConfigSource v10;
java.util.Iterator v2;
java.util.function.ToIntFunction v6;
java.util.ArrayList v1;
java.util.List v0, v9;
java.lang.Object v4;
java.util.Comparator v7, v8;
boolean v3, v5;
v0 := @parameter0: java.util.List;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = v4 instanceof io.smallrye.config.ConfigurableConfigSource;
if v5 == 0 goto label1;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v10);
goto label1;
label2:
v6 = staticinvoke <io.smallrye.config.SmallRyeConfig$ConfigSources$getOrdinal__3073: java.util.function.ToIntFunction bootstrap$()>();
v7 = staticinvoke <java.util.Comparator: java.util.Comparator comparingInt(java.util.function.ToIntFunction)>(v6);
v8 = interfaceinvoke v7.<java.util.Comparator: java.util.Comparator reversed()>();
interfaceinvoke v1.<java.util.List: void sort(java.util.Comparator)>(v8);
v9 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v9;
}
private static java.util.Set generateDottedProperties(java.util.List, io.smallrye.config.SmallRyeConfigSourceInterceptorContext)
{
io.smallrye.config.SmallRyeConfigSourceInterceptorContext v1;
java.util.HashSet v12, v2, v21, v6;
java.lang.String v16, v25;
boolean v10, v14, v18, v20, v23, v4, v8;
java.util.Iterator v13, v17, v22, v3, v7;
java.util.Set v11;
java.util.List v0;
java.lang.Object v15, v19, v24, v5, v9;
v0 := @parameter0: java.util.List;
v1 := @parameter1: io.smallrye.config.SmallRyeConfigSourceInterceptorContext;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = virtualinvoke v1.<io.smallrye.config.SmallRyeConfigSourceInterceptorContext: java.util.Iterator iterateNames()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v6 = new java.util.HashSet;
specialinvoke v6.<java.util.HashSet: void <init>()>();
v7 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label3:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label4;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = v9 instanceof io.smallrye.config.EnvConfigSource;
if v10 == 0 goto label3;
v11 = interfaceinvoke v9.<org.eclipse.microprofile.config.spi.ConfigSource: java.util.Set getPropertyNames()>();
interfaceinvoke v6.<java.util.Set: boolean addAll(java.util.Collection)>(v11);
goto label3;
label4:
interfaceinvoke v2.<java.util.Set: boolean removeAll(java.util.Collection)>(v6);
v12 = new java.util.HashSet;
specialinvoke v12.<java.util.HashSet: void <init>()>();
v13 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label5:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label7;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String replaceNonAlphanumericByUnderscores(java.lang.String)>(v15);
v17 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label6:
v18 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v18 == 0 goto label5;
v19 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v20 = virtualinvoke v19.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v16);
if v20 == 0 goto label6;
interfaceinvoke v12.<java.util.Set: boolean add(java.lang.Object)>(v19);
goto label5;
label7:
interfaceinvoke v6.<java.util.Set: boolean removeAll(java.util.Collection)>(v12);
v21 = new java.util.HashSet;
specialinvoke v21.<java.util.HashSet: void <init>()>();
v22 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label8:
v23 = interfaceinvoke v22.<java.util.Iterator: boolean hasNext()>();
if v23 == 0 goto label9;
v24 = interfaceinvoke v22.<java.util.Iterator: java.lang.Object next()>();
v25 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String toLowerCaseAndDotted(java.lang.String)>(v24);
interfaceinvoke v21.<java.util.Set: boolean add(java.lang.Object)>(v25);
goto label8;
label9:
return v21;
}
java.util.List getProfiles()
{
io.smallrye.config.SmallRyeConfig$ConfigSources v0;
java.util.List v1;
v0 := @this: io.smallrye.config.SmallRyeConfig$ConfigSources;
v1 = v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List profiles>;
return v1;
}
java.util.List getSources()
{
io.smallrye.config.SmallRyeConfig$ConfigSources v0;
java.util.List v1;
v0 := @this: io.smallrye.config.SmallRyeConfig$ConfigSources;
v1 = v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: java.util.List sources>;
return v1;
}
io.smallrye.config.ConfigSourceInterceptorContext getInterceptorChain()
{
io.smallrye.config.SmallRyeConfig$ConfigSources v0;
io.smallrye.config.ConfigSourceInterceptorContext v1;
v0 := @this: io.smallrye.config.SmallRyeConfig$ConfigSources;
v1 = v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: io.smallrye.config.ConfigSourceInterceptorContext interceptorChain>;
return v1;
}
io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames getPropertyNames()
{
io.smallrye.config.SmallRyeConfig$ConfigSources v0;
io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames v1;
v0 := @this: io.smallrye.config.SmallRyeConfig$ConfigSources;
v1 = v0.<io.smallrye.config.SmallRyeConfig$ConfigSources: io.smallrye.config.SmallRyeConfig$ConfigSources$PropertyNames propertyNames>;
return v1;
}
}