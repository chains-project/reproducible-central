class io.smallrye.config.SmallRyeConfigBuilder$5 extends java.lang.Object implements io.smallrye.config.ConfigSourceInterceptorFactory
{
final io.smallrye.config.SmallRyeConfigBuilder this$0;
void <init>(io.smallrye.config.SmallRyeConfigBuilder)
{
io.smallrye.config.SmallRyeConfigBuilder$5 v0;
io.smallrye.config.SmallRyeConfigBuilder v1;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$5;
v1 := @parameter0: io.smallrye.config.SmallRyeConfigBuilder;
v0.<io.smallrye.config.SmallRyeConfigBuilder$5: io.smallrye.config.SmallRyeConfigBuilder this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.config.ConfigSourceInterceptor getInterceptor(io.smallrye.config.ConfigSourceInterceptorContext)
{
io.smallrye.config.SmallRyeConfigBuilder$5 v0;
java.util.List v5, v6, v9;
io.smallrye.config.SecretKeysHandlerConfigSourceInterceptor v7;
io.smallrye.config.SmallRyeConfigBuilder v2, v4, v8;
io.smallrye.config.ConfigSourceInterceptorContext v1;
boolean v3;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$5;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = v0.<io.smallrye.config.SmallRyeConfigBuilder$5: io.smallrye.config.SmallRyeConfigBuilder this$0>;
v3 = virtualinvoke v2.<io.smallrye.config.SmallRyeConfigBuilder: boolean isAddDiscoveredSecretKeysHandlers()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.config.SmallRyeConfigBuilder$5: io.smallrye.config.SmallRyeConfigBuilder this$0>;
v5 = v4.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List secretKeysHandlers>;
v6 = specialinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder$5: java.util.List discoverSecretKeysHandlers(io.smallrye.config.ConfigSourceInterceptorContext)>(v1);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v6);
label1:
v7 = new io.smallrye.config.SecretKeysHandlerConfigSourceInterceptor;
v8 = v0.<io.smallrye.config.SmallRyeConfigBuilder$5: io.smallrye.config.SmallRyeConfigBuilder this$0>;
v9 = v8.<io.smallrye.config.SmallRyeConfigBuilder: java.util.List secretKeysHandlers>;
specialinvoke v7.<io.smallrye.config.SecretKeysHandlerConfigSourceInterceptor: void <init>(java.util.List)>(v9);
return v7;
}
public java.util.OptionalInt getPriority()
{
io.smallrye.config.SmallRyeConfigBuilder$5 v0;
java.util.OptionalInt v1;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$5;
v1 = staticinvoke <java.util.OptionalInt: java.util.OptionalInt of(int)>(3310);
return v1;
}
private java.util.List getEnabledHandlers(io.smallrye.config.ConfigSourceInterceptorContext)
{
io.smallrye.config.SmallRyeConfigBuilder$5 v0;
io.smallrye.config.ConfigValue v2;
java.util.List v12, v5;
org.eclipse.microprofile.config.spi.Converter v6, v7, v9;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v11;
java.lang.String v10, v3;
boolean v4;
java.util.function.IntFunction v8;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$5;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = interfaceinvoke v1.<io.smallrye.config.ConfigSourceInterceptorContext: io.smallrye.config.ConfigValue proceed(java.lang.String)>("smallrye.config.secret-handlers");
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>("all");
if v4 == 0 goto label2;
label1:
v5 = staticinvoke <java.util.List: java.util.List of()>();
return v5;
label2:
v6 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter STRING_CONVERTER>;
v7 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newTrimmingConverter(org.eclipse.microprofile.config.spi.Converter)>(v6);
v8 = staticinvoke <io.smallrye.config.SmallRyeConfigBuilder$5$init__3148: java.util.function.IntFunction bootstrap$()>();
v9 = staticinvoke <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter newCollectionConverter(org.eclipse.microprofile.config.spi.Converter,java.util.function.IntFunction)>(v7, v8);
v10 = virtualinvoke v2.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
v11 = interfaceinvoke v9.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v10);
if v11 == null goto label3;
v12 = v11;
goto label4;
label3:
v12 = staticinvoke <java.util.List: java.util.List of()>();
label4:
return v12;
}
private java.util.List discoverSecretKeysHandlers(io.smallrye.config.ConfigSourceInterceptorContext)
{
io.smallrye.config.SmallRyeConfigBuilder$5 v0;
java.util.ArrayList v3;
java.lang.String v11, v20;
boolean v10, v12, v17, v19, v21, v8;
java.util.Iterator v16, v7;
java.util.ServiceLoader v15, v6;
io.smallrye.config.SmallRyeConfigBuilder$5$1 v22;
io.smallrye.config.SecretKeysHandler v23;
java.util.List v2;
io.smallrye.config.SmallRyeConfigBuilder v13, v4;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v18, v9;
java.lang.ClassLoader v14, v5;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$5;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = specialinvoke v0.<io.smallrye.config.SmallRyeConfigBuilder$5: java.util.List getEnabledHandlers(io.smallrye.config.ConfigSourceInterceptorContext)>(v1);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = v0.<io.smallrye.config.SmallRyeConfigBuilder$5: io.smallrye.config.SmallRyeConfigBuilder this$0>;
v5 = v4.<io.smallrye.config.SmallRyeConfigBuilder: java.lang.ClassLoader classLoader>;
v6 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lio/smallrye/config/SecretKeysHandler;", v5);
v7 = virtualinvoke v6.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v10 != 0 goto label2;
v11 = interfaceinvoke v9.<io.smallrye.config.SecretKeysHandler: java.lang.String getName()>();
v12 = interfaceinvoke v2.<java.util.List: boolean contains(java.lang.Object)>(v11);
if v12 == 0 goto label1;
label2:
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label1;
label3:
v13 = v0.<io.smallrye.config.SmallRyeConfigBuilder$5: io.smallrye.config.SmallRyeConfigBuilder this$0>;
v14 = v13.<io.smallrye.config.SmallRyeConfigBuilder: java.lang.ClassLoader classLoader>;
v15 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lio/smallrye/config/SecretKeysHandlerFactory;", v14);
v16 = virtualinvoke v15.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label4:
v17 = interfaceinvoke v16.<java.util.Iterator: boolean hasNext()>();
if v17 == 0 goto label6;
v18 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
v19 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v19 != 0 goto label5;
v20 = interfaceinvoke v18.<io.smallrye.config.SecretKeysHandlerFactory: java.lang.String getName()>();
v21 = interfaceinvoke v2.<java.util.List: boolean contains(java.lang.Object)>(v20);
if v21 == 0 goto label4;
label5:
v22 = new io.smallrye.config.SmallRyeConfigBuilder$5$1;
specialinvoke v22.<io.smallrye.config.SmallRyeConfigBuilder$5$1: void <init>(io.smallrye.config.SmallRyeConfigBuilder$5,io.smallrye.config.ConfigSourceInterceptorContext)>(v0, v1);
v23 = interfaceinvoke v18.<io.smallrye.config.SecretKeysHandlerFactory: io.smallrye.config.SecretKeysHandler getSecretKeysHandler(io.smallrye.config.ConfigSourceContext)>(v22);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v23);
goto label4;
label6:
return v3;
}
}