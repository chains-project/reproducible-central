class io.smallrye.config.SmallRyeConfigSources extends java.lang.Object implements io.smallrye.config.ConfigSourceInterceptor
{
private static final long serialVersionUID;
private final java.util.List configSources;
void <init>(java.util.List)
{
org.eclipse.microprofile.config.spi.ConfigSource v6;
java.util.Iterator v3;
io.smallrye.config.SmallRyeConfigSources v0;
io.smallrye.config.ConfigValueConfigSource v7;
java.util.ArrayList v2;
java.util.List v1;
java.lang.Object v5;
boolean v4;
v0 := @this: io.smallrye.config.SmallRyeConfigSources;
v1 := @parameter0: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<io.smallrye.config.SmallRyeConfig$ConfigSourceWithPriority: org.eclipse.microprofile.config.spi.ConfigSource getSource()>();
v7 = staticinvoke <io.smallrye.config.ConfigValueConfigSourceWrapper: io.smallrye.config.ConfigValueConfigSource wrap(org.eclipse.microprofile.config.spi.ConfigSource)>(v6);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v7);
goto label1;
label2:
v0.<io.smallrye.config.SmallRyeConfigSources: java.util.List configSources> = v2;
return;
}
public io.smallrye.config.ConfigValue getValue(io.smallrye.config.ConfigSourceInterceptorContext, java.lang.String)
{
io.smallrye.config.SmallRyeConfigSources v0;
io.smallrye.config.ConfigValue v11, v8;
io.smallrye.config.ConfigValue$ConfigValueBuilder v10, v9;
java.util.List v4, v6;
int v3, v5;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v7;
java.lang.String v2;
v0 := @this: io.smallrye.config.SmallRyeConfigSources;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 := @parameter1: java.lang.String;
v3 = 0;
v4 = v0.<io.smallrye.config.SmallRyeConfigSources: java.util.List configSources>;
v5 = interfaceinvoke v4.<java.util.List: int size()>();
label1:
if v3 >= v5 goto label3;
v6 = v0.<io.smallrye.config.SmallRyeConfigSources: java.util.List configSources>;
v7 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v3);
v8 = interfaceinvoke v7.<io.smallrye.config.ConfigValueConfigSource: io.smallrye.config.ConfigValue getConfigValue(java.lang.String)>(v2);
if v8 == null goto label2;
v9 = virtualinvoke v8.<io.smallrye.config.ConfigValue: io.smallrye.config.ConfigValue$ConfigValueBuilder 'from'()>();
v10 = virtualinvoke v9.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withConfigSourcePosition(int)>(v3);
v11 = virtualinvoke v10.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue build()>();
return v11;
label2:
v3 = v3 + 1;
goto label1;
label3:
return null;
}
public java.util.Iterator iterateNames(io.smallrye.config.ConfigSourceInterceptorContext)
{
java.util.Iterator v4, v8;
io.smallrye.config.SmallRyeConfigSources v0;
java.util.Set v7;
java.util.HashSet v2;
java.util.List v3;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v6;
boolean v5;
v0 := @this: io.smallrye.config.SmallRyeConfigSources;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = v0.<io.smallrye.config.SmallRyeConfigSources: java.util.List configSources>;
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<io.smallrye.config.ConfigValueConfigSource: java.util.Set getPropertyNames()>();
if v7 == null goto label1;
interfaceinvoke v2.<java.util.Set: boolean addAll(java.util.Collection)>(v7);
goto label1;
label2:
v8 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
return v8;
}
public java.util.Iterator iterateValues(io.smallrye.config.ConfigSourceInterceptorContext)
{
java.util.Iterator v4, v9;
java.util.Collection v8;
io.smallrye.config.SmallRyeConfigSources v0;
java.util.HashSet v2;
java.util.List v3;
java.util.Map v7;
io.smallrye.config.ConfigSourceInterceptorContext v1;
java.lang.Object v6;
boolean v5;
v0 := @this: io.smallrye.config.SmallRyeConfigSources;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = v0.<io.smallrye.config.SmallRyeConfigSources: java.util.List configSources>;
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<io.smallrye.config.ConfigValueConfigSource: java.util.Map getConfigValueProperties()>();
if v7 == null goto label1;
v8 = interfaceinvoke v7.<java.util.Map: java.util.Collection values()>();
interfaceinvoke v2.<java.util.Set: boolean addAll(java.util.Collection)>(v8);
goto label1;
label2:
v9 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
return v9;
}
}