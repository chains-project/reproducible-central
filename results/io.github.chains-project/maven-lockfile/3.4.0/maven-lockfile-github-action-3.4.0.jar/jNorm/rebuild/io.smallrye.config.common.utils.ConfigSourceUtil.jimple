public class io.smallrye.config.common.utils.ConfigSourceUtil extends java.lang.Object
{
public static final java.lang.String CONFIG_ORDINAL_KEY;
public static final java.lang.String CONFIG_ORDINAL_100;
private void <init>()
{
io.smallrye.config.common.utils.ConfigSourceUtil v0;
v0 := @this: io.smallrye.config.common.utils.ConfigSourceUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.Map propertiesToMap(java.util.Properties)
{
java.lang.Throwable v12;
java.util.Properties v0;
java.util.Iterator v3;
java.util.Set v2;
java.util.HashMap v1;
java.lang.Exception v11, v8;
java.lang.Object v5, v6, v9;
java.lang.String v10, v7;
boolean v4;
v0 := @parameter0: java.util.Properties;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
entermonitor v0;
label01:
v2 = virtualinvoke v0.<java.util.Properties: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label02:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label10;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
label03:
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v6);
label04:
goto label06;
label05:
v8 := @caughtexception;
goto label02;
label06:
v9 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
v10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v9);
label07:
goto label09;
label08:
v11 := @caughtexception;
goto label02;
label09:
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v10);
goto label02;
label10:
exitmonitor v0;
label11:
goto label13;
label12:
v12 := @caughtexception;
exitmonitor v0;
throw v12;
label13:
return v1;
catch java.lang.Exception from label03 to label04 with label05;
catch java.lang.Exception from label06 to label07 with label08;
catch java.lang.Throwable from label01 to label11 with label12;
}
public static java.util.Map urlToMap(java.net.URL) throws java.io.IOException
{
java.util.function.Consumer v2;
java.util.Properties v1;
java.net.URL v0;
java.util.Map v3;
v0 := @parameter0: java.net.URL;
v1 = new java.util.Properties;
specialinvoke v1.<java.util.Properties: void <init>()>();
v2 = staticinvoke <io.smallrye.config.common.utils.ConfigSourceUtil$lambda_urlToMap_0__3215: java.util.function.Consumer bootstrap$(java.util.Properties)>(v1);
staticinvoke <io.smallrye.common.classloader.ClassPathUtils: void consumeStream(java.net.URL,java.util.function.Consumer)>(v0, v2);
v3 = staticinvoke <io.smallrye.config.common.utils.ConfigSourceUtil: java.util.Map propertiesToMap(java.util.Properties)>(v1);
return v3;
}
public static int getOrdinalFromMap(java.util.Map, int)
{
java.util.Map v0;
int v1, v3;
java.lang.Object v2;
v0 := @parameter0: java.util.Map;
v1 := @parameter1: int;
v2 = interfaceinvoke v0.<java.util.Map: java.lang.Object get(java.lang.Object)>("config_ordinal");
if v2 != null goto label1;
v3 = v1;
goto label2;
label1:
v3 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v2);
label2:
return v3;
}
}