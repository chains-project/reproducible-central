public class io.smallrye.context.JdkSpecific extends java.lang.Object
{
private static final io.smallrye.context.impl.JdkSpecificImpl impl;
public void <init>()
{
io.smallrye.context.JdkSpecific v0;
v0 := @this: io.smallrye.context.JdkSpecific;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.concurrent.CompletionStage newCompletionStageWrapper(io.smallrye.context.SmallRyeThreadContext, java.util.concurrent.CompletionStage, java.util.concurrent.Executor)
{
java.util.concurrent.CompletionStage v1, v4;
java.util.concurrent.Executor v2;
io.smallrye.context.SmallRyeThreadContext v0;
io.smallrye.context.impl.JdkSpecificImpl v3;
v0 := @parameter0: io.smallrye.context.SmallRyeThreadContext;
v1 := @parameter1: java.util.concurrent.CompletionStage;
v2 := @parameter2: java.util.concurrent.Executor;
v3 = <io.smallrye.context.JdkSpecific: io.smallrye.context.impl.JdkSpecificImpl impl>;
v4 = virtualinvoke v3.<io.smallrye.context.impl.JdkSpecificImpl: java.util.concurrent.CompletionStage newCompletionStageWrapper(io.smallrye.context.SmallRyeThreadContext,java.util.concurrent.CompletionStage,java.util.concurrent.Executor)>(v0, v1, v2);
return v4;
}
public static java.util.concurrent.CompletableFuture newCompletableFutureWrapper(io.smallrye.context.SmallRyeThreadContext, java.util.concurrent.CompletableFuture, java.util.concurrent.Executor, int)
{
java.util.concurrent.Executor v2;
io.smallrye.context.SmallRyeThreadContext v0;
int v3;
java.util.concurrent.CompletableFuture v1, v5;
io.smallrye.context.impl.JdkSpecificImpl v4;
v0 := @parameter0: io.smallrye.context.SmallRyeThreadContext;
v1 := @parameter1: java.util.concurrent.CompletableFuture;
v2 := @parameter2: java.util.concurrent.Executor;
v3 := @parameter3: int;
v4 = <io.smallrye.context.JdkSpecific: io.smallrye.context.impl.JdkSpecificImpl impl>;
v5 = virtualinvoke v4.<io.smallrye.context.impl.JdkSpecificImpl: java.util.concurrent.CompletableFuture newCompletableFutureWrapper(io.smallrye.context.SmallRyeThreadContext,java.util.concurrent.CompletableFuture,java.util.concurrent.Executor,int)>(v0, v1, v2, v3);
return v5;
}
static void <clinit>()
{
io.smallrye.context.impl.JdkSpecificImpl v0;
v0 = new io.smallrye.context.impl.JdkSpecificImpl;
specialinvoke v0.<io.smallrye.context.impl.JdkSpecificImpl: void <init>()>();
<io.smallrye.context.JdkSpecific: io.smallrye.context.impl.JdkSpecificImpl impl> = v0;
return;
}
}