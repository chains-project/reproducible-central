public class io.smallrye.context.SmallRyeContextManager$Builder extends java.lang.Object implements org.eclipse.microprofile.context.spi.ContextManager$Builder
{
private java.lang.ClassLoader classLoader;
private boolean addDiscoveredThreadContextProviders;
private boolean addDiscoveredContextManagerExtensions;
private final java.util.List contextProviders;
private final java.util.List contextManagerExtensions;
private java.util.concurrent.ExecutorService defaultExecutorService;
private boolean registerOnProvider;
private boolean enableFastThreadContextProviders;
public void <init>()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
java.lang.Thread v1;
java.lang.ClassLoader v2;
java.util.ArrayList v3, v4;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = virtualinvoke v1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.lang.ClassLoader classLoader> = v2;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextProviders> = v3;
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextManagerExtensions> = v4;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean enableFastThreadContextProviders> = 1;
return;
}
public transient io.smallrye.context.SmallRyeContextManager$Builder withThreadContextProviders(org.eclipse.microprofile.context.spi.ThreadContextProvider[])
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
org.eclipse.microprofile.context.spi.ThreadContextProvider v4;
java.util.List v5;
org.eclipse.microprofile.context.spi.ThreadContextProvider[] v1;
int v2, v3;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 := @parameter0: org.eclipse.microprofile.context.spi.ThreadContextProvider[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextProviders>;
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public io.smallrye.context.SmallRyeContextManager$Builder addDiscoveredThreadContextProviders()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean addDiscoveredThreadContextProviders> = 1;
return v0;
}
private java.util.List discoverThreadContextProviders()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
java.util.function.Consumer v4;
java.util.ServiceLoader v3;
java.lang.ClassLoader v2;
java.util.ArrayList v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.lang.ClassLoader classLoader>;
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lorg/eclipse/microprofile/context/spi/ThreadContextProvider;", v2);
v4 = staticinvoke <io.smallrye.context.SmallRyeContextManager$Builder$lambda_discoverThreadContextProviders_0__1600: java.util.function.Consumer bootstrap$(java.util.List)>(v1);
virtualinvoke v3.<java.util.ServiceLoader: void forEach(java.util.function.Consumer)>(v4);
return v1;
}
public transient io.smallrye.context.SmallRyeContextManager$Builder withContextManagerExtensions(org.eclipse.microprofile.context.spi.ContextManagerExtension[])
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
java.util.List v5;
org.eclipse.microprofile.context.spi.ContextManagerExtension[] v1;
int v2, v3;
org.eclipse.microprofile.context.spi.ContextManagerExtension v4;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 := @parameter0: org.eclipse.microprofile.context.spi.ContextManagerExtension[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextManagerExtensions>;
interfaceinvoke v5.<java.util.List: boolean add(java.lang.Object)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public io.smallrye.context.SmallRyeContextManager$Builder addDiscoveredContextManagerExtensions()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean addDiscoveredContextManagerExtensions> = 1;
return v0;
}
private java.util.List discoverContextManagerExtensions()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
java.util.function.Consumer v4;
java.util.ServiceLoader v3;
java.lang.ClassLoader v2;
java.util.ArrayList v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.lang.ClassLoader classLoader>;
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lorg/eclipse/microprofile/context/spi/ContextManagerExtension;", v2);
v4 = staticinvoke <io.smallrye.context.SmallRyeContextManager$Builder$lambda_discoverContextManagerExtensions_1__1601: java.util.function.Consumer bootstrap$(java.util.List)>(v1);
virtualinvoke v3.<java.util.ServiceLoader: void forEach(java.util.function.Consumer)>(v4);
return v1;
}
public io.smallrye.context.SmallRyeContextManager$Builder forClassLoader(java.lang.ClassLoader)
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
java.lang.ClassLoader v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 := @parameter0: java.lang.ClassLoader;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.lang.ClassLoader classLoader> = v1;
return v0;
}
public io.smallrye.context.SmallRyeContextManager build()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
io.smallrye.context.SmallRyeContextManager v7;
java.util.List v2, v3, v5, v6, v8, v9;
java.lang.ClassLoader v12;
java.util.concurrent.ExecutorService v10;
boolean v1, v11, v13, v4;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean addDiscoveredThreadContextProviders>;
if v1 == 0 goto label1;
v2 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextProviders>;
v3 = specialinvoke v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List discoverThreadContextProviders()>();
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v3);
label1:
v4 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean addDiscoveredContextManagerExtensions>;
if v4 == 0 goto label2;
v5 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextManagerExtensions>;
v6 = specialinvoke v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List discoverContextManagerExtensions()>();
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v6);
label2:
v7 = new io.smallrye.context.SmallRyeContextManager;
v8 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextProviders>;
v9 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.List contextManagerExtensions>;
v10 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.concurrent.ExecutorService defaultExecutorService>;
v11 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean registerOnProvider>;
v12 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.lang.ClassLoader classLoader>;
v13 = v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean enableFastThreadContextProviders>;
specialinvoke v7.<io.smallrye.context.SmallRyeContextManager: void <init>(java.util.List,java.util.List,java.util.concurrent.ExecutorService,boolean,java.lang.ClassLoader,boolean)>(v8, v9, v10, v11, v12, v13);
return v7;
}
public io.smallrye.context.SmallRyeContextManager$Builder registerOnProvider()
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean registerOnProvider> = 1;
return v0;
}
public io.smallrye.context.SmallRyeContextManager$Builder withDefaultExecutorService(java.util.concurrent.ExecutorService)
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
java.util.concurrent.ExecutorService v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 := @parameter0: java.util.concurrent.ExecutorService;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: java.util.concurrent.ExecutorService defaultExecutorService> = v1;
return v0;
}
public io.smallrye.context.SmallRyeContextManager$Builder enableFastThreadContextProviders(boolean)
{
io.smallrye.context.SmallRyeContextManager$Builder v0;
boolean v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager$Builder;
v1 := @parameter0: boolean;
v0.<io.smallrye.context.SmallRyeContextManager$Builder: boolean enableFastThreadContextProviders> = v1;
return v0;
}
}