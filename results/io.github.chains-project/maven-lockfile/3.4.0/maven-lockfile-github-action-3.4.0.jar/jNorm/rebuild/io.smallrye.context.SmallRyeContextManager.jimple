public class io.smallrye.context.SmallRyeContextManager extends java.lang.Object implements org.eclipse.microprofile.context.spi.ContextManager
{
public static final java.lang.String NONE;
public static final java.lang.String[] NO_STRING;
public static final java.lang.String[] ALL_REMAINING_ARRAY;
private final java.util.List extensions;
private final java.util.Map providersByType;
private final java.lang.String[] allProviderTypes;
private final io.smallrye.context.impl.DefaultValues defaultValues;
private final java.util.concurrent.ExecutorService defaultExecutorService;
private io.smallrye.context.SmallRyeThreadContext allPropagatedThreadContext;
private io.smallrye.context.SmallRyeThreadContext allClearedThreadContext;
private io.smallrye.context.SmallRyeThreadContext defaultThreadContext;
private final boolean enableFastThreadContextProviders;
void <init>(java.util.List, java.util.List, java.util.concurrent.ExecutorService, boolean, java.lang.ClassLoader, boolean)
{
java.lang.IllegalStateException v15;
java.lang.Object[] v24;
java.lang.String[] v23;
java.util.HashMap v8;
java.util.ArrayList v25, v7;
java.util.Map v13, v16, v19, v20;
int v22;
java.lang.String v12, v18;
java.util.concurrent.ExecutorService v3;
boolean v10, v14, v29, v4, v6;
java.util.Iterator v28, v9;
io.smallrye.context.SmallRyeContextManagerProvider v27;
java.util.Set v21;
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.impl.DefaultValues v26;
java.util.List v1, v2;
java.lang.Object v11, v17, v30;
java.lang.ClassLoader v5;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 := @parameter0: java.util.List;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.util.concurrent.ExecutorService;
v4 := @parameter3: boolean;
v5 := @parameter4: java.lang.ClassLoader;
v6 := @parameter5: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.context.SmallRyeContextManager: java.util.concurrent.ExecutorService defaultExecutorService> = v3;
v0.<io.smallrye.context.SmallRyeContextManager: boolean enableFastThreadContextProviders> = v6;
v7 = new java.util.ArrayList;
specialinvoke v7.<java.util.ArrayList: void <init>(java.util.Collection)>(v1);
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType> = v8;
v9 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label3;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<org.eclipse.microprofile.context.spi.ThreadContextProvider: java.lang.String getThreadContextType()>();
v13 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
v14 = interfaceinvoke v13.<java.util.Map: boolean containsKey(java.lang.Object)>(v12);
if v14 == 0 goto label2;
v15 = new java.lang.IllegalStateException;
v16 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
v17 = interfaceinvoke v16.<java.util.Map: java.lang.Object get(java.lang.Object)>(v12);
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.Object,org.eclipse.microprofile.context.spi.ThreadContextProvider)>(v12, v17, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("ThreadContextProvider type already registered: \u0001 first instance: \u0001, second instance: \u0001");
specialinvoke v15.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v18);
throw v15;
label2:
v19 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
interfaceinvoke v19.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v11);
goto label1;
label3:
v20 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
v21 = interfaceinvoke v20.<java.util.Map: java.util.Set keySet()>();
v22 = interfaceinvoke v7.<java.util.List: int size()>();
v23 = newarray (java.lang.String)[v22];
v24 = interfaceinvoke v21.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v23);
v0.<io.smallrye.context.SmallRyeContextManager: java.lang.String[] allProviderTypes> = v24;
v25 = new java.util.ArrayList;
specialinvoke v25.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v0.<io.smallrye.context.SmallRyeContextManager: java.util.List extensions> = v25;
v26 = new io.smallrye.context.impl.DefaultValues;
specialinvoke v26.<io.smallrye.context.impl.DefaultValues: void <init>()>();
v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.impl.DefaultValues defaultValues> = v26;
if v4 == 0 goto label4;
v27 = staticinvoke <io.smallrye.context.SmallRyeContextManagerProvider: io.smallrye.context.SmallRyeContextManagerProvider instance()>();
virtualinvoke v27.<io.smallrye.context.SmallRyeContextManagerProvider: void registerContextManager(org.eclipse.microprofile.context.spi.ContextManager,java.lang.ClassLoader)>(v0, v5);
label4:
v28 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label5:
v29 = interfaceinvoke v28.<java.util.Iterator: boolean hasNext()>();
if v29 == 0 goto label6;
v30 = interfaceinvoke v28.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v30.<org.eclipse.microprofile.context.spi.ContextManagerExtension: void setup(org.eclipse.microprofile.context.spi.ContextManager)>(v0);
goto label5;
label6:
return;
}
public java.lang.String[] getAllProviderTypes()
{
java.lang.String[] v1;
io.smallrye.context.SmallRyeContextManager v0;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: java.lang.String[] allProviderTypes>;
return v1;
}
public io.smallrye.context.impl.ThreadContextProviderPlan getProviderPlan()
{
java.lang.String[] v1, v2, v3;
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.impl.ThreadContextProviderPlan v4;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: java.lang.String[] allProviderTypes>;
v2 = <io.smallrye.context.SmallRyeContextManager: java.lang.String[] NO_STRING>;
v3 = <io.smallrye.context.SmallRyeContextManager: java.lang.String[] NO_STRING>;
v4 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.impl.ThreadContextProviderPlan getProviderPlan(java.lang.String[],java.lang.String[],java.lang.String[])>(v1, v2, v3);
return v4;
}
private java.util.Set createContextSetFromStringArray(java.lang.String[])
{
java.lang.IllegalStateException v9;
java.lang.String[] v1;
io.smallrye.context.SmallRyeContextManager v0;
java.util.HashSet v2;
int v4, v5, v8;
java.lang.String v10, v11, v6;
boolean v3, v7;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 := @parameter0: java.lang.String[];
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = 0;
v4 = lengthof v1;
v5 = 0;
label1:
if v5 >= v4 goto label4;
v6 = v1[v5];
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>("None");
if v7 == 0 goto label2;
v3 = 1;
goto label3;
label2:
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v6);
label3:
v5 = v5 + 1;
goto label1;
label4:
if v3 == 0 goto label5;
v8 = interfaceinvoke v2.<java.util.Set: int size()>();
if v8 <= 0 goto label5;
v9 = new java.lang.IllegalStateException;
v10 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v1);
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot use \'None\' in conjunction with any other contexts, the offending context declaration used: \u0001");
specialinvoke v9.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v11);
throw v9;
label5:
return v2;
}
public io.smallrye.context.impl.ThreadContextProviderPlan getProviderPlan(java.lang.String[], java.lang.String[], java.lang.String[])
{
java.lang.IllegalStateException v13, v32;
java.util.Map v30, v39, v46;
boolean v10, v11, v12, v18, v19, v21, v23, v27, v29, v36, v38, v43, v45, v49, v7, v8, v9;
java.util.Set v4, v5, v6;
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.impl.ThreadContextProviderPlan v48;
java.lang.String[] v1, v2, v20, v22, v24, v3;
java.util.HashSet v25, v34, v41;
java.lang.String v14, v15, v16, v17, v33;
java.util.Iterator v26, v35, v42;
java.lang.Object v28, v31, v37, v40, v44, v47;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 := @parameter0: java.lang.String[];
v2 := @parameter1: java.lang.String[];
v3 := @parameter2: java.lang.String[];
v4 = specialinvoke v0.<io.smallrye.context.SmallRyeContextManager: java.util.Set createContextSetFromStringArray(java.lang.String[])>(v1);
v5 = specialinvoke v0.<io.smallrye.context.SmallRyeContextManager: java.util.Set createContextSetFromStringArray(java.lang.String[])>(v3);
v6 = specialinvoke v0.<io.smallrye.context.SmallRyeContextManager: java.util.Set createContextSetFromStringArray(java.lang.String[])>(v2);
v7 = interfaceinvoke v4.<java.util.Set: boolean removeAll(java.util.Collection)>(v6);
if v7 != 0 goto label01;
v8 = interfaceinvoke v4.<java.util.Set: boolean removeAll(java.util.Collection)>(v5);
if v8 != 0 goto label01;
v9 = interfaceinvoke v5.<java.util.Set: boolean removeAll(java.util.Collection)>(v4);
if v9 != 0 goto label01;
v10 = interfaceinvoke v5.<java.util.Set: boolean removeAll(java.util.Collection)>(v6);
if v10 != 0 goto label01;
v11 = interfaceinvoke v6.<java.util.Set: boolean removeAll(java.util.Collection)>(v4);
if v11 != 0 goto label01;
v12 = interfaceinvoke v6.<java.util.Set: boolean removeAll(java.util.Collection)>(v5);
if v12 == 0 goto label02;
label01:
v13 = new java.lang.IllegalStateException;
v14 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v1);
v15 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v3);
v16 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v2);
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v14, v15, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot use the same context in more than one of propagated (\u0001), cleared (\u0001), unchanged (\u0001)");
specialinvoke v13.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v17);
throw v13;
label02:
v18 = 0;
v19 = interfaceinvoke v4.<java.util.Set: boolean contains(java.lang.Object)>("Remaining");
if v19 == 0 goto label03;
interfaceinvoke v4.<java.util.Set: boolean remove(java.lang.Object)>("Remaining");
v20 = v0.<io.smallrye.context.SmallRyeContextManager: java.lang.String[] allProviderTypes>;
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v4, v20);
interfaceinvoke v4.<java.util.Set: boolean removeAll(java.util.Collection)>(v5);
interfaceinvoke v4.<java.util.Set: boolean removeAll(java.util.Collection)>(v6);
v18 = 1;
label03:
v21 = interfaceinvoke v6.<java.util.Set: boolean contains(java.lang.Object)>("Remaining");
if v21 == 0 goto label04;
interfaceinvoke v6.<java.util.Set: boolean remove(java.lang.Object)>("Remaining");
v22 = v0.<io.smallrye.context.SmallRyeContextManager: java.lang.String[] allProviderTypes>;
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v6, v22);
interfaceinvoke v6.<java.util.Set: boolean removeAll(java.util.Collection)>(v4);
interfaceinvoke v6.<java.util.Set: boolean removeAll(java.util.Collection)>(v5);
v18 = 1;
label04:
v23 = interfaceinvoke v5.<java.util.Set: boolean contains(java.lang.Object)>("Remaining");
if v23 != 0 goto label05;
if v18 != 0 goto label06;
label05:
interfaceinvoke v5.<java.util.Set: boolean remove(java.lang.Object)>("Remaining");
v24 = v0.<io.smallrye.context.SmallRyeContextManager: java.lang.String[] allProviderTypes>;
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v5, v24);
interfaceinvoke v5.<java.util.Set: boolean removeAll(java.util.Collection)>(v4);
interfaceinvoke v5.<java.util.Set: boolean removeAll(java.util.Collection)>(v6);
label06:
v25 = new java.util.HashSet;
specialinvoke v25.<java.util.HashSet: void <init>()>();
v26 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label07:
v27 = interfaceinvoke v26.<java.util.Iterator: boolean hasNext()>();
if v27 == 0 goto label09;
v28 = interfaceinvoke v26.<java.util.Iterator: java.lang.Object next()>();
v29 = virtualinvoke v28.<java.lang.String: boolean isEmpty()>();
if v29 != 0 goto label07;
v30 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
v31 = interfaceinvoke v30.<java.util.Map: java.lang.Object get(java.lang.Object)>(v28);
if v31 != null goto label08;
v32 = new java.lang.IllegalStateException;
v33 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v28) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing propagated provider type: \u0001");
specialinvoke v32.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v33);
throw v32;
label08:
interfaceinvoke v25.<java.util.Set: boolean add(java.lang.Object)>(v31);
goto label07;
label09:
v34 = new java.util.HashSet;
specialinvoke v34.<java.util.HashSet: void <init>()>();
v35 = interfaceinvoke v6.<java.util.Set: java.util.Iterator iterator()>();
label10:
v36 = interfaceinvoke v35.<java.util.Iterator: boolean hasNext()>();
if v36 == 0 goto label11;
v37 = interfaceinvoke v35.<java.util.Iterator: java.lang.Object next()>();
v38 = virtualinvoke v37.<java.lang.String: boolean isEmpty()>();
if v38 != 0 goto label10;
v39 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
v40 = interfaceinvoke v39.<java.util.Map: java.lang.Object get(java.lang.Object)>(v37);
if v40 == null goto label10;
interfaceinvoke v34.<java.util.Set: boolean add(java.lang.Object)>(v40);
goto label10;
label11:
v41 = new java.util.HashSet;
specialinvoke v41.<java.util.HashSet: void <init>()>();
v42 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
label12:
v43 = interfaceinvoke v42.<java.util.Iterator: boolean hasNext()>();
if v43 == 0 goto label13;
v44 = interfaceinvoke v42.<java.util.Iterator: java.lang.Object next()>();
v45 = virtualinvoke v44.<java.lang.String: boolean isEmpty()>();
if v45 != 0 goto label12;
v46 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.Map providersByType>;
v47 = interfaceinvoke v46.<java.util.Map: java.lang.Object get(java.lang.Object)>(v44);
if v47 == null goto label12;
interfaceinvoke v41.<java.util.Set: boolean add(java.lang.Object)>(v47);
goto label12;
label13:
v48 = new io.smallrye.context.impl.ThreadContextProviderPlan;
v49 = v0.<io.smallrye.context.SmallRyeContextManager: boolean enableFastThreadContextProviders>;
specialinvoke v48.<io.smallrye.context.impl.ThreadContextProviderPlan: void <init>(java.util.Set,java.util.Set,java.util.Set,boolean)>(v25, v34, v41, v49);
return v48;
}
public io.smallrye.context.SmallRyeManagedExecutor$Builder newManagedExecutorBuilder()
{
io.smallrye.context.SmallRyeManagedExecutor$Builder v1;
io.smallrye.context.SmallRyeContextManager v0;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = new io.smallrye.context.SmallRyeManagedExecutor$Builder;
specialinvoke v1.<io.smallrye.context.SmallRyeManagedExecutor$Builder: void <init>(io.smallrye.context.SmallRyeContextManager)>(v0);
return v1;
}
public io.smallrye.context.SmallRyeThreadContext$Builder newThreadContextBuilder()
{
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.SmallRyeThreadContext$Builder v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = new io.smallrye.context.SmallRyeThreadContext$Builder;
specialinvoke v1.<io.smallrye.context.SmallRyeThreadContext$Builder: void <init>(io.smallrye.context.SmallRyeContextManager)>(v0);
return v1;
}
public java.util.concurrent.ExecutorService getDefaultExecutorService()
{
io.smallrye.context.SmallRyeContextManager v0;
java.util.concurrent.ExecutorService v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.concurrent.ExecutorService defaultExecutorService>;
return v1;
}
public java.util.List getExtensions()
{
java.util.List v1;
io.smallrye.context.SmallRyeContextManager v0;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: java.util.List extensions>;
return v1;
}
public io.smallrye.context.impl.DefaultValues getDefaultValues()
{
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.impl.DefaultValues v1;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.impl.DefaultValues defaultValues>;
return v1;
}
public io.smallrye.context.SmallRyeThreadContext defaultThreadContext()
{
io.smallrye.context.SmallRyeThreadContext v1, v3, v4;
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.SmallRyeThreadContext$Builder v2;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext defaultThreadContext>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext$Builder newThreadContextBuilder()>();
v3 = virtualinvoke v2.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext build()>();
v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext defaultThreadContext> = v3;
label1:
v4 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext defaultThreadContext>;
return v4;
}
public io.smallrye.context.SmallRyeThreadContext allPropagatedThreadContext()
{
java.lang.String[] v3, v5, v7;
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.SmallRyeThreadContext$Builder v2, v4, v6, v8;
io.smallrye.context.SmallRyeThreadContext v1, v10, v9;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext allPropagatedThreadContext>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext$Builder newThreadContextBuilder()>();
v3 = newarray (java.lang.String)[1];
v3[0] = "Remaining";
v4 = virtualinvoke v2.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder propagated(java.lang.String[])>(v3);
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v4.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder cleared(java.lang.String[])>(v5);
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v6.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder unchanged(java.lang.String[])>(v7);
v9 = virtualinvoke v8.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext build()>();
v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext allPropagatedThreadContext> = v9;
label1:
v10 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext allPropagatedThreadContext>;
return v10;
}
public io.smallrye.context.SmallRyeThreadContext allClearedThreadContext()
{
java.lang.String[] v3, v5, v7;
io.smallrye.context.SmallRyeContextManager v0;
io.smallrye.context.SmallRyeThreadContext$Builder v2, v4, v6, v8;
io.smallrye.context.SmallRyeThreadContext v1, v10, v9;
v0 := @this: io.smallrye.context.SmallRyeContextManager;
v1 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext allClearedThreadContext>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext$Builder newThreadContextBuilder()>();
v3 = newarray (java.lang.String)[0];
v4 = virtualinvoke v2.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder propagated(java.lang.String[])>(v3);
v5 = newarray (java.lang.String)[1];
v5[0] = "Remaining";
v6 = virtualinvoke v4.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder cleared(java.lang.String[])>(v5);
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v6.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder unchanged(java.lang.String[])>(v7);
v9 = virtualinvoke v8.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext build()>();
v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext allClearedThreadContext> = v9;
label1:
v10 = v0.<io.smallrye.context.SmallRyeContextManager: io.smallrye.context.SmallRyeThreadContext allClearedThreadContext>;
return v10;
}
static void <clinit>()
{
java.lang.String[] v0, v1;
v0 = newarray (java.lang.String)[0];
<io.smallrye.context.SmallRyeContextManager: java.lang.String[] NO_STRING> = v0;
v1 = newarray (java.lang.String)[1];
v1[0] = "Remaining";
<io.smallrye.context.SmallRyeContextManager: java.lang.String[] ALL_REMAINING_ARRAY> = v1;
return;
}
}