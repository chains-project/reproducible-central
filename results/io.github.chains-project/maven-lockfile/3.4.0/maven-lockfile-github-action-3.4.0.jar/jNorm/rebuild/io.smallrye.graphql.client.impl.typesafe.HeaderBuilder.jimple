public class io.smallrye.graphql.client.impl.typesafe.HeaderBuilder extends java.lang.Object
{
private static final java.lang.String APPLICATION_JSON_UTF8;
private final java.lang.Class api;
private final io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method;
private final java.util.Map additionalHeaders;
private final java.lang.String configKey;
private final org.eclipse.microprofile.config.Config config;
public void <init>(java.lang.Class, io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, java.util.Map)
{
java.util.Map v3;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v2;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.Class v1;
java.lang.String v5;
org.eclipse.microprofile.config.Config v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: org.eclipse.microprofile.config.Config config> = v4;
v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.Class api> = v1;
v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method> = v2;
v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.util.Map additionalHeaders> = v3;
v5 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String configKey()>();
v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String configKey> = v5;
return;
}
private java.lang.String configKey()
{
java.lang.'annotation'.Annotation v2;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.Class v1, v5;
java.lang.String v3, v6, v7;
boolean v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.Class api>;
v2 = virtualinvoke v1.<java.lang.Class: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/graphql/client/typesafe/api/GraphQLClientApi;");
if v2 == null goto label1;
v3 = interfaceinvoke v2.<io.smallrye.graphql.client.typesafe.api.GraphQLClientApi: java.lang.String configKey()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 == 0 goto label2;
label1:
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.Class api>;
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
return v6;
label2:
v7 = interfaceinvoke v2.<io.smallrye.graphql.client.typesafe.api.GraphQLClientApi: java.lang.String configKey()>();
return v7;
}
public java.util.Map build()
{
java.util.function.Function v15;
java.util.LinkedHashMap v1;
java.util.Map v18, v19, v20;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v10, v2, v3, v7;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.util.function.BinaryOperator v13;
java.util.function.Consumer v17, v6, v9;
java.util.stream.Stream v12, v5, v8;
java.util.Optional v14, v16;
java.lang.Class v11, v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 = new java.util.LinkedHashMap;
specialinvoke v1.<java.util.LinkedHashMap: void <init>()>();
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: void addDefaultHeaders(java.util.Map)>(v1);
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
if v2 == null goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.Class api>;
v5 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream getResolvedAnnotations(java.lang.Class,java.lang.Class)>(v4, class "Lio/smallrye/graphql/client/typesafe/api/Header;");
v6 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$lambda_build_0__710: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.typesafe.HeaderBuilder,java.util.Map)>(v0, v1);
interfaceinvoke v5.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v6);
v7 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v8 = virtualinvoke v7.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream headerParameters()>();
v9 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$lambda_build_1__711: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.typesafe.HeaderBuilder,java.util.Map)>(v0, v1);
interfaceinvoke v8.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v9);
v10 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v11 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.Class api>;
v12 = virtualinvoke v10.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.util.stream.Stream getResolvedAnnotations(java.lang.Class,java.lang.Class)>(v11, class "Lio/smallrye/graphql/client/typesafe/api/AuthorizationHeader;");
v13 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$lambda_build_2__712: java.util.function.BinaryOperator bootstrap$()>();
v14 = interfaceinvoke v12.<java.util.stream.Stream: java.util.Optional reduce(java.util.function.BinaryOperator)>(v13);
v15 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$resolveAuthHeader__713: java.util.function.Function bootstrap$(io.smallrye.graphql.client.impl.typesafe.HeaderBuilder)>(v0);
v16 = virtualinvoke v14.<java.util.Optional: java.util.Optional map(java.util.function.Function)>(v15);
v17 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$lambda_build_3__714: java.util.function.Consumer bootstrap$(java.util.Map)>(v1);
virtualinvoke v16.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v17);
label1:
v18 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.util.Map additionalHeaders>;
if v18 == null goto label2;
v19 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.util.Map additionalHeaders>;
interfaceinvoke v1.<java.util.Map: void putAll(java.util.Map)>(v19);
label2:
v20 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.util.Map configuredCredentials()>();
interfaceinvoke v1.<java.util.Map: void putAll(java.util.Map)>(v20);
return v1;
}
private void addDefaultHeaders(java.util.Map)
{
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: java.util.Map;
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Accept", "application/json;charset=utf-8");
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("Content-Type", "application/json;charset=utf-8");
return;
}
private io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor resolve(io.smallrye.graphql.client.typesafe.api.Header)
{
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor v18, v8;
io.smallrye.graphql.client.typesafe.api.Header v1;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.String v12, v13, v16, v17, v19, v2, v20, v4, v7, v9;
boolean v10, v14, v3, v5;
java.lang.RuntimeException v11, v15, v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.typesafe.api.Header;
v2 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String method()>();
v3 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v3 != 0 goto label2;
v4 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String constant()>();
v5 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v5 != 0 goto label1;
v6 = new java.lang.RuntimeException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.typesafe.api.Header)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Header with \'method\' AND \'constant\' not allowed: \u0001");
specialinvoke v6.<java.lang.RuntimeException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
v8 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor resolveHeaderMethod(io.smallrye.graphql.client.typesafe.api.Header)>(v1);
return v8;
label2:
v9 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String constant()>();
v10 = virtualinvoke v9.<java.lang.String: boolean isEmpty()>();
if v10 == 0 goto label3;
v11 = new java.lang.RuntimeException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.typesafe.api.Header)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Header must have either \'method\' XOR \'constant\': \u0001");
specialinvoke v11.<java.lang.RuntimeException: void <init>(java.lang.String)>(v12);
throw v11;
label3:
v13 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String name()>();
v14 = virtualinvoke v13.<java.lang.String: boolean isEmpty()>();
if v14 == 0 goto label4;
v15 = new java.lang.RuntimeException;
v16 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String constant()>();
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Missing header name for constant \'\u0001\'");
specialinvoke v15.<java.lang.RuntimeException: void <init>(java.lang.String)>(v17);
throw v15;
label4:
v18 = new io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor;
v19 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String constant()>();
v20 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String name()>();
specialinvoke v18.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor: void <init>(java.lang.Object,java.lang.String)>(v19, v20);
return v18;
}
private io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor resolveHeaderMethod(io.smallrye.graphql.client.typesafe.api.Header)
{
io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver v4;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor v13;
java.lang.RuntimeException v8;
io.smallrye.graphql.client.typesafe.api.Header v1;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v2, v6;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.String v10, v11, v12, v14, v5, v9;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v3;
boolean v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.typesafe.api.Header;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v3 = virtualinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getDeclaringType()>();
v4 = new io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver;
v5 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String method()>();
specialinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.String)>(v3, v5);
v6 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodResolver: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation resolve()>();
v7 = virtualinvoke v6.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isStatic()>();
if v7 != 0 goto label1;
v8 = new java.lang.RuntimeException;
v9 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String method()>();
v10 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.String getTypeName()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("referenced header method \'\u0001\' in \u0001 is not static");
specialinvoke v8.<java.lang.RuntimeException: void <init>(java.lang.String)>(v11);
throw v8;
label1:
v12 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String callMethod(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v6);
v13 = new io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor;
v14 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String toHeaderName(io.smallrye.graphql.client.typesafe.api.Header,io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement)>(v1, v6);
specialinvoke v13.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor: void <init>(java.lang.Object,java.lang.String)>(v12, v14);
return v13;
}
private java.lang.String callMethod(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)
{
io.smallrye.graphql.client.GraphQLClientException v4;
java.lang.RuntimeException v5, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.Object v2;
java.lang.String v3, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
label1:
v2 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.Object invoke(java.lang.Object)>(null);
if v2 != null goto label2;
v3 = null;
goto label3;
label2:
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
label3:
return v3;
label4:
v4 := @caughtexception;
throw v4;
label5:
v5 := @caughtexception;
v6 = new java.lang.RuntimeException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("can\'t resolve header value from method \u0001");
specialinvoke v6.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch io.smallrye.graphql.client.GraphQLClientException from label1 to label3 with label4;
catch java.lang.RuntimeException from label1 to label3 with label5;
}
private java.lang.String toHeaderName(io.smallrye.graphql.client.typesafe.api.Header, io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement)
{
io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement v2;
io.smallrye.graphql.client.typesafe.api.Header v1;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.String v3, v5, v6, v8;
boolean v4, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.typesafe.api.Header;
v2 := @parameter1: io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement;
v3 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String name()>();
v4 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.Header: java.lang.String name()>();
return v5;
label1:
v6 = interfaceinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement: java.lang.String getName()>();
v7 = interfaceinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement: boolean isRenamed()>();
if v7 == 0 goto label2;
v8 = v6;
goto label3;
label2:
v8 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String camelToKebab(java.lang.String)>(v6);
label3:
return v8;
}
private io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor resolve(io.smallrye.graphql.client.impl.typesafe.reflection.ParameterInfo)
{
io.smallrye.graphql.client.typesafe.api.Header v3;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor v4;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
io.smallrye.graphql.client.impl.typesafe.reflection.ParameterInfo v1;
java.lang.Object v5;
java.lang.String v6;
java.lang.'annotation'.Annotation[] v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.ParameterInfo;
v2 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.ParameterInfo: java.lang.'annotation'.Annotation[] getAnnotations(java.lang.Class)>(class "Lio/smallrye/graphql/client/typesafe/api/Header;");
v3 = v2[0];
v4 = new io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor;
v5 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.ParameterInfo: java.lang.Object getValue()>();
v6 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String toHeaderName(io.smallrye.graphql.client.typesafe.api.Header,io.smallrye.graphql.client.impl.typesafe.reflection.NamedElement)>(v3, v1);
specialinvoke v4.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$HeaderDescriptor: void <init>(java.lang.Object,java.lang.String)>(v5, v6);
return v4;
}
private static java.lang.String camelToKebab(java.lang.String)
{
java.lang.String[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String)>("(?=\\p{javaUpperCase})");
v2 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.CharSequence[])>("-", v1);
return v2;
}
public java.lang.String resolveAuthHeader(io.smallrye.graphql.client.typesafe.api.AuthorizationHeader)
{
java.lang.UnsupportedOperationException v9;
io.smallrye.graphql.client.typesafe.api.AuthorizationHeader$Type v4;
int[] v3;
int v5, v6;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.String v2, v7, v8;
io.smallrye.graphql.client.typesafe.api.AuthorizationHeader v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.typesafe.api.AuthorizationHeader;
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String prefix(io.smallrye.graphql.client.typesafe.api.AuthorizationHeader)>(v1);
v3 = <io.smallrye.graphql.client.impl.typesafe.HeaderBuilder$1: int[] $SwitchMap$io$smallrye$graphql$client$typesafe$api$AuthorizationHeader$Type>;
v4 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.AuthorizationHeader: io.smallrye.graphql.client.typesafe.api.AuthorizationHeader$Type type()>();
v5 = virtualinvoke v4.<io.smallrye.graphql.client.typesafe.api.AuthorizationHeader$Type: int ordinal()>();
v6 = v3[v5];
lookupswitch(v6)
{
case 1: goto label1;
case 2: goto label2;
default: goto label3;
};
label1:
v7 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String basic(java.lang.String)>(v2);
return v7;
label2:
v8 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String bearer(java.lang.String)>(v2);
return v8;
label3:
v9 = new java.lang.UnsupportedOperationException;
specialinvoke v9.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("unreachable");
throw v9;
}
private java.lang.String prefix(io.smallrye.graphql.client.typesafe.api.AuthorizationHeader)
{
int v6, v7;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.String v2, v4, v8, v9;
io.smallrye.graphql.client.typesafe.api.AuthorizationHeader v1;
boolean v3, v5;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: io.smallrye.graphql.client.typesafe.api.AuthorizationHeader;
v2 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.AuthorizationHeader: java.lang.String confPrefix()>();
v3 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String configKey>;
goto label2;
label1:
v4 = interfaceinvoke v1.<io.smallrye.graphql.client.typesafe.api.AuthorizationHeader: java.lang.String confPrefix()>();
label2:
v5 = virtualinvoke v4.<java.lang.String: boolean endsWith(java.lang.String)>("*");
if v5 == 0 goto label3;
v6 = virtualinvoke v4.<java.lang.String: int length()>();
v7 = v6 - 1;
v8 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v7);
return v8;
label3:
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/");
return v9;
}
private java.lang.String basic(java.lang.String)
{
org.eclipse.microprofile.config.Config v2, v5;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.Object v4, v7;
java.lang.String v1, v3, v6, v8;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: org.eclipse.microprofile.config.Config config>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001username");
v4 = interfaceinvoke v2.<org.eclipse.microprofile.config.Config: java.lang.Object getValue(java.lang.String,java.lang.Class)>(v3, class "Ljava/lang/String;");
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: org.eclipse.microprofile.config.Config config>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001password");
v7 = interfaceinvoke v5.<org.eclipse.microprofile.config.Config: java.lang.Object getValue(java.lang.String,java.lang.Class)>(v6, class "Ljava/lang/String;");
v8 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String basic(java.lang.String,java.lang.String)>(v4, v7);
return v8;
}
private java.lang.String basic(java.lang.String, java.lang.String)
{
byte[] v6;
java.util.Base64$Encoder v4;
java.nio.charset.Charset v5;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.String v1, v2, v3, v7, v8;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
v4 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getEncoder()>();
v5 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v6 = virtualinvoke v3.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v5);
v7 = virtualinvoke v4.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v6);
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Basic \u0001");
return v8;
}
private java.lang.String bearer(java.lang.String)
{
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.Object v4;
java.lang.String v1, v3, v5;
org.eclipse.microprofile.config.Config v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: org.eclipse.microprofile.config.Config config>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001bearer");
v4 = interfaceinvoke v2.<org.eclipse.microprofile.config.Config: java.lang.Object getValue(java.lang.String,java.lang.Class)>(v3, class "Ljava/lang/String;");
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Bearer \u0001");
return v5;
}
private java.util.Map configuredCredentials()
{
org.eclipse.microprofile.config.Config v1, v5;
java.util.Map v14;
java.util.Optional v4, v8;
io.smallrye.graphql.client.impl.typesafe.HeaderBuilder v0;
java.lang.Object v11, v12;
java.lang.String v13, v2, v3, v6, v7;
boolean v10, v9;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.HeaderBuilder;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: org.eclipse.microprofile.config.Config config>;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String configKey>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/username");
v4 = interfaceinvoke v1.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v3, class "Ljava/lang/String;");
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: org.eclipse.microprofile.config.Config config>;
v6 = v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String configKey>;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/mp-graphql/password");
v8 = interfaceinvoke v5.<org.eclipse.microprofile.config.Config: java.util.Optional getOptionalValue(java.lang.String,java.lang.Class)>(v7, class "Ljava/lang/String;");
v9 = virtualinvoke v4.<java.util.Optional: boolean isPresent()>();
if v9 == 0 goto label1;
v10 = virtualinvoke v8.<java.util.Optional: boolean isPresent()>();
if v10 == 0 goto label1;
v11 = virtualinvoke v4.<java.util.Optional: java.lang.Object get()>();
v12 = virtualinvoke v8.<java.util.Optional: java.lang.Object get()>();
v13 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.HeaderBuilder: java.lang.String basic(java.lang.String,java.lang.String)>(v11, v12);
v14 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("Authorization", v13);
goto label2;
label1:
v14 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
label2:
return v14;
}
}