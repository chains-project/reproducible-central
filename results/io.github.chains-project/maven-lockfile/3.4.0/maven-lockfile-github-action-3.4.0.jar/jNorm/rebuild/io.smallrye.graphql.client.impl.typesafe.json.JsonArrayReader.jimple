class io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader extends io.smallrye.graphql.client.impl.typesafe.json.Reader
{
private java.lang.Class collectionType;
private io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo itemType;
static final boolean $assertionsDisabled;
void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, io.smallrye.graphql.client.impl.typesafe.json.Location, jakarta.json.JsonArray, io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)
{
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v4;
io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader v0;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
io.smallrye.graphql.client.impl.typesafe.json.Location v2;
jakarta.json.JsonArray v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: io.smallrye.graphql.client.impl.typesafe.json.Location;
v3 := @parameter2: jakarta.json.JsonArray;
v4 := @parameter3: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo;
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.Reader: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,io.smallrye.graphql.client.impl.typesafe.json.Location,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v1, v2, v3, v4);
return;
}
java.lang.Object read()
{
jakarta.json.JsonValue v2, v7;
java.util.function.Function v9;
java.util.stream.Stream v10, v8;
io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder v5;
io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader v0;
java.lang.Object v12;
java.util.stream.Collector v11;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v3;
io.smallrye.graphql.client.impl.typesafe.json.Location v1, v6;
boolean v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: jakarta.json.JsonValue value>;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v4 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isCollection()>();
staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.GraphQLClientValueHelper: void check(io.smallrye.graphql.client.impl.typesafe.json.Location,java.lang.Object,boolean)>(v1, v2, v4);
v5 = new io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder;
v6 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
specialinvoke v5.<io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder: void <init>(io.smallrye.graphql.client.impl.typesafe.json.Location)>(v6);
v7 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: jakarta.json.JsonValue value>;
v8 = interfaceinvoke v7.<jakarta.json.JsonArray: java.util.stream.Stream stream()>();
v9 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader$lambda_read_0__725: java.util.function.Function bootstrap$(io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader,io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder)>(v0, v5);
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v9);
v11 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: java.util.stream.Collector collector()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v11);
return v12;
}
private java.lang.Object readItem(io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder, jakarta.json.JsonValue)
{
jakarta.json.JsonValue v2;
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v10;
io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder v1;
io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader v0;
jakarta.json.JsonValue$ValueType v5, v6;
java.lang.Object v11;
java.lang.String v9;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v4;
io.smallrye.graphql.client.impl.typesafe.json.Location v3;
boolean v7;
io.smallrye.graphql.client.InvalidResponseException v8;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.json.IndexedLocationBuilder: io.smallrye.graphql.client.impl.typesafe.json.Location nextLocation()>();
v4 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getItemType()>();
v5 = interfaceinvoke v2.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v6 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
if v5 != v6 goto label1;
v7 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isNonNull()>();
if v7 == 0 goto label1;
v8 = new io.smallrye.graphql.client.InvalidResponseException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.json.Location)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid null \u0001");
specialinvoke v8.<io.smallrye.graphql.client.InvalidResponseException: void <init>(java.lang.String)>(v9);
throw v8;
label1:
v10 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo field>;
v11 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJson(io.smallrye.graphql.client.impl.typesafe.json.Location,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v3, v4, v2, v10);
return v11;
}
private java.util.stream.Collector collector()
{
java.lang.AssertionError v13;
io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader v0;
java.lang.String v14, v15;
java.util.stream.Collector v16, v5, v8;
boolean v11, v12, v2, v7, v9;
java.lang.Class v1, v10, v4, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader;
v1 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: java.lang.Class getCollectionType()>();
v2 = virtualinvoke v1.<java.lang.Class: boolean isArray()>();
if v2 == 0 goto label1;
v3 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getItemType()>();
v4 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.Class getRawType()>();
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.CollectionUtils: java.util.stream.Collector toArray(java.lang.Class)>(v4);
return v5;
label1:
v6 = class "Ljava/util/Set;";
v7 = virtualinvoke v6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v7 == 0 goto label2;
v8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toSet()>();
return v8;
label2:
v9 = <io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: boolean $assertionsDisabled>;
if v9 != 0 goto label3;
v10 = class "Ljava/util/List;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v11 != 0 goto label3;
v12 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(class "Ljava/util/Collection;");
if v12 != 0 goto label3;
v13 = new java.lang.AssertionError;
v14 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("collection type \u0001 not supported");
specialinvoke v13.<java.lang.AssertionError: void <init>(java.lang.Object)>(v15);
throw v13;
label3:
v16 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
return v16;
}
private java.lang.Class getCollectionType()
{
io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader v0;
java.lang.Class v1, v3, v4;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: java.lang.Class collectionType>;
if v1 != null goto label1;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v3 = virtualinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.Class getRawType()>();
v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: java.lang.Class collectionType> = v3;
label1:
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: java.lang.Class collectionType>;
return v4;
}
private io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getItemType()
{
io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader v0;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1, v2, v3, v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo itemType>;
if v1 != null goto label1;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v3 = virtualinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getItemType()>();
v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo itemType> = v3;
label1:
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo itemType>;
return v4;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/smallrye/graphql/client/impl/typesafe/json/JsonArrayReader;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.smallrye.graphql.client.impl.typesafe.json.JsonArrayReader: boolean $assertionsDisabled> = v2;
return;
}
}