class io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader extends io.smallrye.graphql.client.impl.typesafe.json.Reader
{
void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, io.smallrye.graphql.client.impl.typesafe.json.Location, jakarta.json.JsonObject, io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)
{
io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader v0;
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v4;
jakarta.json.JsonObject v3;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1;
io.smallrye.graphql.client.impl.typesafe.json.Location v2;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: io.smallrye.graphql.client.impl.typesafe.json.Location;
v3 := @parameter2: jakarta.json.JsonObject;
v4 := @parameter3: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo;
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.Reader: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,io.smallrye.graphql.client.impl.typesafe.json.Location,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v1, v2, v3, v4);
return;
}
java.lang.Object read()
{
jakarta.json.JsonValue v12, v2;
io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader v0;
java.util.Map v13;
java.lang.Class v10, v8;
java.lang.Object v14;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v3, v5, v9;
io.smallrye.graphql.client.impl.typesafe.json.Location v1;
boolean v11, v4, v6, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: jakarta.json.JsonValue value>;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v4 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isCollection()>();
if v4 != 0 goto label1;
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v6 = virtualinvoke v5.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isScalar()>();
if v6 != 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.GraphQLClientValueHelper: void check(io.smallrye.graphql.client.impl.typesafe.json.Location,java.lang.Object,boolean)>(v1, v2, v7);
v8 = class "Ljava/util/Map;";
v9 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v10 = virtualinvoke v9.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.Class getRawType()>();
v11 = virtualinvoke v8.<java.lang.Object: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label3;
v12 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: jakarta.json.JsonValue value>;
v13 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonUtils: java.util.Map toMap(jakarta.json.JsonObject)>(v12);
return v13;
label3:
v14 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: java.lang.Object readObject()>();
return v14;
}
private java.lang.Object readObject()
{
java.lang.Object[] v12;
java.util.function.Function v9;
io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader v0;
java.util.function.Consumer v6;
java.util.stream.Stream v10, v5, v8;
java.lang.Object v13, v3;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1, v4, v7;
boolean v2;
java.util.function.IntFunction v11;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v2 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isRecord()>();
if v2 != 0 goto label1;
v3 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: java.lang.Object newInstance()>();
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v5 = virtualinvoke v4.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.util.stream.Stream fields()>();
v6 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader$lambda_readObject_0__730: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader,java.lang.Object)>(v0, v3);
interfaceinvoke v5.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v6);
return v3;
label1:
v7 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v8 = virtualinvoke v7.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.util.stream.Stream fields()>();
v9 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader$lambda_readObject_1__728: java.util.function.Function bootstrap$(io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader)>(v0);
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v9);
v11 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader$lambda_readObject_2__729: java.util.function.IntFunction bootstrap$()>();
v12 = interfaceinvoke v10.<java.util.stream.Stream: java.lang.Object[] toArray(java.util.function.IntFunction)>(v11);
v13 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: java.lang.Object newInstance(java.lang.Object[])>(v12);
return v13;
}
private java.lang.Object newInstance(java.lang.Object[])
{
java.lang.Object[] v1;
java.lang.RuntimeException v8;
java.lang.Exception v4;
io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader v0;
java.lang.Object v3;
java.lang.String v7;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v2;
io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages v5;
io.smallrye.graphql.client.impl.typesafe.json.Location v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader;
v1 := @parameter0: java.lang.Object[];
label1:
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v3 = virtualinvoke v2.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: java.lang.Object newInstance(java.lang.Object[])>(v1);
label2:
return v3;
label3:
v4 := @caughtexception;
v5 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v6 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
v7 = virtualinvoke v6.<io.smallrye.graphql.client.impl.typesafe.json.Location: java.lang.String toString()>();
v8 = interfaceinvoke v5.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.lang.RuntimeException cannotInstantiateDomainObject(java.lang.String,java.lang.Throwable)>(v7, v4);
throw v8;
catch java.lang.Exception from label1 to label2 with label3;
}
private java.lang.Object newInstance()
{
io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader v0;
java.lang.Object v2;
java.lang.Object[] v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader;
v1 = newarray (java.lang.Object)[0];
v2 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader: java.lang.Object newInstance(java.lang.Object[])>(v1);
return v2;
}
private java.lang.Object buildValue(io.smallrye.graphql.client.impl.typesafe.json.Location, jakarta.json.JsonObject, io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)
{
java.util.function.Supplier v5;
io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader v0;
jakarta.json.JsonObject v2;
java.lang.String v10, v14, v9;
boolean v12;
io.smallrye.graphql.client.InvalidResponseException v13;
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v3;
java.util.Optional v4;
java.lang.Object v11, v16, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v15, v8;
io.smallrye.graphql.client.impl.typesafe.json.Location v1, v7;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.json.Location;
v2 := @parameter1: jakarta.json.JsonObject;
v3 := @parameter2: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo;
v4 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo: java.util.Optional getAlias()>();
virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonObjectReader$getName__731: java.util.function.Supplier bootstrap$(io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v3);
v6 = virtualinvoke v4.<java.util.Optional: java.lang.Object orElseGet(java.util.function.Supplier)>(v5);
v7 = new io.smallrye.graphql.client.impl.typesafe.json.Location;
v8 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getType()>();
v9 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.json.Location: java.lang.String getDescription()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
specialinvoke v7.<io.smallrye.graphql.client.impl.typesafe.json.Location: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,java.lang.String)>(v8, v10);
v11 = interfaceinvoke v2.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>(v6);
if v11 != null goto label2;
v12 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo: boolean isNonNull()>();
if v12 == 0 goto label1;
v13 = new io.smallrye.graphql.client.InvalidResponseException;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.json.Location)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("missing \u0001");
specialinvoke v13.<io.smallrye.graphql.client.InvalidResponseException: void <init>(java.lang.String)>(v14);
throw v13;
label1:
return null;
label2:
v15 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getType()>();
v16 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJson(io.smallrye.graphql.client.impl.typesafe.json.Location,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v7, v15, v11, v3);
return v16;
}
}