public final class io.smallrye.graphql.client.typesafe.api.TypesafeResponse extends io.smallrye.graphql.client.typesafe.api.ErrorOr
{
private java.util.Map transportMeta;
private jakarta.json.JsonObject extensions;
public static io.smallrye.graphql.client.typesafe.api.TypesafeResponse of(java.lang.Object)
{
java.lang.Object v0;
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v1;
v0 := @parameter0: java.lang.Object;
v1 = new io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
specialinvoke v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: void <init>(java.lang.Object,java.util.List)>(v0, null);
return v1;
}
public static io.smallrye.graphql.client.typesafe.api.TypesafeResponse ofErrors(java.util.List)
{
java.util.List v0, v6;
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v4;
java.lang.IllegalArgumentException v3;
java.lang.NullPointerException v1;
boolean v2;
java.util.ArrayList v5;
v0 := @parameter0: java.util.List;
if v0 != null goto label1;
v1 = new java.lang.NullPointerException;
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>("errors must not be null");
throw v1;
label1:
v2 = interfaceinvoke v0.<java.util.List: boolean isEmpty()>();
if v2 == 0 goto label2;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("errors must not be empty");
throw v3;
label2:
v4 = new io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>(java.util.Collection)>(v0);
v6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v5);
specialinvoke v4.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: void <init>(java.lang.Object,java.util.List)>(null, v6);
return v4;
}
private void <init>(java.lang.Object, java.util.List)
{
java.lang.Object v1;
java.util.List v2;
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.List;
specialinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: void <init>(java.lang.Object,java.util.List)>(v1, v2);
return;
}
private void <init>(io.smallrye.graphql.client.typesafe.api.TypesafeResponse, java.util.Map, jakarta.json.JsonObject)
{
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0, v1;
java.util.List v7;
java.util.Map v2;
jakarta.json.JsonObject v3;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 := @parameter0: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: jakarta.json.JsonObject;
v4 = virtualinvoke v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: boolean isPresent()>();
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.lang.Object get()>();
goto label2;
label1:
v5 = null;
label2:
v6 = virtualinvoke v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: boolean hasErrors()>();
if v6 == 0 goto label3;
v7 = virtualinvoke v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.List getErrors()>();
goto label4;
label3:
v7 = null;
label4:
specialinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: void <init>(java.lang.Object,java.util.List)>(v5, v7);
v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.Map transportMeta> = v2;
v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: jakarta.json.JsonObject extensions> = v3;
return;
}
public static io.smallrye.graphql.client.typesafe.api.TypesafeResponse withTransportMetaAndExtensions(io.smallrye.graphql.client.typesafe.api.TypesafeResponse, java.util.Map, jakarta.json.JsonObject)
{
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0, v3;
java.util.Map v1;
jakarta.json.JsonObject v2;
v0 := @parameter0: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 := @parameter1: java.util.Map;
v2 := @parameter2: jakarta.json.JsonObject;
v3 = new io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
specialinvoke v3.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: void <init>(io.smallrye.graphql.client.typesafe.api.TypesafeResponse,java.util.Map,jakarta.json.JsonObject)>(v0, v1, v2);
return v3;
}
public java.util.Map getTransportMeta()
{
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.Map transportMeta>;
return v1;
}
public jakarta.json.JsonObject getExtensions()
{
jakarta.json.JsonObject v1;
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: jakarta.json.JsonObject extensions>;
return v1;
}
public java.lang.String toString()
{
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0;
java.util.List v4;
java.util.Map v5;
jakarta.json.JsonObject v6;
java.lang.Object v2;
java.lang.String v3, v7;
boolean v1;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: boolean isPresent()>();
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.lang.Object get()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("value=\u0001");
goto label2;
label1:
v4 = virtualinvoke v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.List getErrors()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.List)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("errors=\u0001");
label2:
v5 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.Map transportMeta>;
v6 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: jakarta.json.JsonObject extensions>;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.util.Map,jakarta.json.JsonObject)>(v3, v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("TypesafeResponse(\u0001, transportMeta=\u0001, responseExtensions=\u0001)");
return v7;
}
public boolean equals(java.lang.Object)
{
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0;
java.util.Map v5, v6;
jakarta.json.JsonObject v8, v9;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v10, v11, v4, v7;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = specialinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: boolean equals(java.lang.Object)>(v1);
if v4 != 0 goto label4;
return 0;
label4:
v5 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.Map transportMeta>;
v6 = v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.Map transportMeta>;
v7 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v5, v6);
if v7 == 0 goto label5;
v8 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: jakarta.json.JsonObject extensions>;
v9 = v1.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: jakarta.json.JsonObject extensions>;
v10 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v8, v9);
if v10 == 0 goto label5;
v11 = 1;
goto label6;
label5:
v11 = 0;
label6:
return v11;
}
public int hashCode()
{
io.smallrye.graphql.client.typesafe.api.TypesafeResponse v0;
java.lang.Object[] v1;
java.util.Map v4;
int v2, v6;
jakarta.json.JsonObject v5;
java.lang.Integer v3;
v0 := @this: io.smallrye.graphql.client.typesafe.api.TypesafeResponse;
v1 = newarray (java.lang.Object)[3];
v2 = specialinvoke v0.<io.smallrye.graphql.client.typesafe.api.ErrorOr: int hashCode()>();
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v1[0] = v3;
v4 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: java.util.Map transportMeta>;
v1[1] = v4;
v5 = v0.<io.smallrye.graphql.client.typesafe.api.TypesafeResponse: jakarta.json.JsonObject extensions>;
v1[2] = v5;
v6 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v6;
}
}