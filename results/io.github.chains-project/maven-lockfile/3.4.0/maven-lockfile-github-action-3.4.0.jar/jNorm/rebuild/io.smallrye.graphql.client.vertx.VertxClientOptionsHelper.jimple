public class io.smallrye.graphql.client.vertx.VertxClientOptionsHelper extends java.lang.Object
{
public void <init>()
{
io.smallrye.graphql.client.vertx.VertxClientOptionsHelper v0;
v0 := @this: io.smallrye.graphql.client.vertx.VertxClientOptionsHelper;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void applyConfigToVertxOptions(io.vertx.core.http.HttpClientOptions, io.smallrye.graphql.client.impl.GraphQLClientConfiguration)
{
io.vertx.core.net.JksOptions v14, v16, v2, v4;
java.lang.Integer v30, v34, v35;
boolean v37;
io.vertx.core.net.ProxyOptions v26, v28;
java.security.KeyStore v20, v8;
io.vertx.core.buffer.Buffer v11, v23;
io.smallrye.graphql.client.impl.GraphQLClientConfiguration v1;
int v31, v36;
io.vertx.core.http.HttpClientOptions v0;
java.lang.String v12, v13, v15, v17, v18, v19, v21, v24, v25, v27, v29, v3, v32, v33, v5, v6, v7, v9;
char[] v10, v22;
v0 := @parameter0: io.vertx.core.http.HttpClientOptions;
v1 := @parameter1: io.smallrye.graphql.client.impl.GraphQLClientConfiguration;
v2 = virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.net.JksOptions getTrustStoreOptions()>();
if v2 != null goto label1;
v3 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getTrustStore()>();
if v3 == null goto label1;
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setSsl(boolean)>(1);
v4 = new io.vertx.core.net.JksOptions;
specialinvoke v4.<io.vertx.core.net.JksOptions: void <init>()>();
v5 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getTrustStore()>();
v6 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getTrustStoreType()>();
v7 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getTrustStorePassword()>();
v8 = staticinvoke <io.smallrye.graphql.client.vertx.ssl.SSLTools: java.security.KeyStore createKeyStore(java.lang.String,java.lang.String,java.lang.String)>(v5, v6, v7);
v9 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getTrustStorePassword()>();
v10 = virtualinvoke v9.<java.lang.String: char[] toCharArray()>();
v11 = staticinvoke <io.smallrye.graphql.client.vertx.ssl.SSLTools: io.vertx.core.buffer.Buffer asBuffer(java.security.KeyStore,char[])>(v8, v10);
virtualinvoke v4.<io.vertx.core.net.JksOptions: io.vertx.core.net.JksOptions setValue(io.vertx.core.buffer.Buffer)>(v11);
v12 = new java.lang.String;
v13 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getTrustStorePassword()>();
specialinvoke v12.<java.lang.String: void <init>(java.lang.String)>(v13);
virtualinvoke v4.<io.vertx.core.net.JksOptions: io.vertx.core.net.JksOptions setPassword(java.lang.String)>(v12);
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions)>(v4);
label1:
v14 = virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.net.JksOptions getKeyStoreOptions()>();
if v14 != null goto label2;
v15 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getKeyStore()>();
if v15 == null goto label2;
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setSsl(boolean)>(1);
v16 = new io.vertx.core.net.JksOptions;
specialinvoke v16.<io.vertx.core.net.JksOptions: void <init>()>();
v17 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getKeyStore()>();
v18 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getKeyStoreType()>();
v19 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getKeyStorePassword()>();
v20 = staticinvoke <io.smallrye.graphql.client.vertx.ssl.SSLTools: java.security.KeyStore createKeyStore(java.lang.String,java.lang.String,java.lang.String)>(v17, v18, v19);
v21 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getKeyStorePassword()>();
v22 = virtualinvoke v21.<java.lang.String: char[] toCharArray()>();
v23 = staticinvoke <io.smallrye.graphql.client.vertx.ssl.SSLTools: io.vertx.core.buffer.Buffer asBuffer(java.security.KeyStore,char[])>(v20, v22);
virtualinvoke v16.<io.vertx.core.net.JksOptions: io.vertx.core.net.JksOptions setValue(io.vertx.core.buffer.Buffer)>(v23);
v24 = new java.lang.String;
v25 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getKeyStorePassword()>();
specialinvoke v24.<java.lang.String: void <init>(java.lang.String)>(v25);
virtualinvoke v16.<io.vertx.core.net.JksOptions: io.vertx.core.net.JksOptions setPassword(java.lang.String)>(v24);
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions)>(v16);
label2:
v26 = virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.net.ProxyOptions getProxyOptions()>();
if v26 != null goto label3;
v27 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getProxyHost()>();
if v27 == null goto label3;
v28 = new io.vertx.core.net.ProxyOptions;
specialinvoke v28.<io.vertx.core.net.ProxyOptions: void <init>()>();
v29 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getProxyHost()>();
virtualinvoke v28.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyOptions setHost(java.lang.String)>(v29);
v30 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Integer getProxyPort()>();
v31 = virtualinvoke v30.<java.lang.Integer: int intValue()>();
virtualinvoke v28.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyOptions setPort(int)>(v31);
v32 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getProxyUsername()>();
virtualinvoke v28.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyOptions setUsername(java.lang.String)>(v32);
v33 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.String getProxyPassword()>();
virtualinvoke v28.<io.vertx.core.net.ProxyOptions: io.vertx.core.net.ProxyOptions setPassword(java.lang.String)>(v33);
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions)>(v28);
label3:
v34 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Integer getMaxRedirects()>();
if v34 == null goto label4;
v35 = virtualinvoke v1.<io.smallrye.graphql.client.impl.GraphQLClientConfiguration: java.lang.Integer getMaxRedirects()>();
v36 = virtualinvoke v35.<java.lang.Integer: int intValue()>();
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setMaxRedirects(int)>(v36);
label4:
v37 = virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: boolean isSsl()>();
if v37 == 0 goto label5;
virtualinvoke v0.<io.vertx.core.http.HttpClientOptions: io.vertx.core.http.HttpClientOptions setVerifyHost(boolean)>(0);
label5:
return;
}
}