public interface  io.smallrye.mutiny.Uni extends java.lang.Object
{
public static io.smallrye.mutiny.groups.UniCreate createFrom()
{
io.smallrye.mutiny.groups.UniCreate v0;
v0 = <io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.groups.UniCreate INSTANCE>;
return v0;
}
public java.lang.Object stage(java.util.function.Function)
{
java.lang.Object v2, v3;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v0;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stage");
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v0);
return v3;
}
public static io.smallrye.mutiny.groups.UniCombine combine()
{
io.smallrye.mutiny.groups.UniCombine v0;
v0 = <io.smallrye.mutiny.groups.UniCombine: io.smallrye.mutiny.groups.UniCombine INSTANCE>;
return v0;
}
public abstract io.smallrye.mutiny.groups.UniSubscribe subscribe();
public java.util.concurrent.CompletableFuture subscribeAsCompletionStage()
{
io.smallrye.mutiny.groups.UniSubscribe v1;
java.util.concurrent.CompletableFuture v2;
io.smallrye.mutiny.Uni v0;
v0 := @this: io.smallrye.mutiny.Uni;
v1 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v2 = virtualinvoke v1.<io.smallrye.mutiny.groups.UniSubscribe: java.util.concurrent.CompletableFuture asCompletionStage()>();
return v2;
}
public java.util.concurrent.CompletableFuture subscribeAsCompletionStage(io.smallrye.mutiny.Context)
{
io.smallrye.mutiny.groups.UniSubscribe v2;
java.util.concurrent.CompletableFuture v3;
io.smallrye.mutiny.Context v1;
io.smallrye.mutiny.Uni v0;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: java.util.concurrent.CompletableFuture asCompletionStage(io.smallrye.mutiny.Context)>(v1);
return v3;
}
public abstract io.smallrye.mutiny.groups.UniAwait await();
public io.smallrye.mutiny.groups.UniAwait awaitUsing(io.smallrye.mutiny.Context)
{
java.lang.UnsupportedOperationException v2;
io.smallrye.mutiny.Context v1;
io.smallrye.mutiny.Uni v0;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: io.smallrye.mutiny.Context;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Default method added to limit binary incompatibility");
throw v2;
}
public abstract io.smallrye.mutiny.groups.UniOnItem onItem();
public abstract io.smallrye.mutiny.groups.UniOnSubscribe onSubscription();
public abstract io.smallrye.mutiny.groups.UniOnItemOrFailure onItemOrFailure();
public abstract io.smallrye.mutiny.groups.UniOnFailure onFailure();
public abstract io.smallrye.mutiny.groups.UniOnFailure onFailure(java.util.function.Predicate);
public abstract io.smallrye.mutiny.groups.UniOnFailure onFailure(java.lang.Class);
public abstract io.smallrye.mutiny.groups.UniIfNoItem ifNoItem();
public abstract io.smallrye.mutiny.Uni emitOn(java.util.concurrent.Executor);
public abstract io.smallrye.mutiny.Uni runSubscriptionOn(java.util.concurrent.Executor);
public abstract io.smallrye.mutiny.groups.UniMemoize memoize();
public io.smallrye.mutiny.Uni map(java.util.function.Function)
{
java.lang.Object v3;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Function;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transform(java.util.function.Function)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni invoke(java.util.function.Consumer)
{
java.util.function.Consumer v1;
java.lang.Object v2;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v3;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni invoke(java.util.function.Consumer)>(v2);
return v4;
}
public io.smallrye.mutiny.Uni invoke(java.lang.Runnable)
{
java.lang.Object v2;
java.lang.Runnable v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v3;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni invoke(java.lang.Runnable)>(v2);
return v4;
}
public io.smallrye.mutiny.Uni call(java.util.function.Function)
{
java.util.function.Function v1;
io.smallrye.mutiny.Uni v0, v3;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Function;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni call(java.util.function.Function)>(v1);
return v3;
}
public io.smallrye.mutiny.Uni call(java.util.function.Supplier)
{
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v0, v3;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Supplier;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni call(java.util.function.Supplier)>(v1);
return v3;
}
public io.smallrye.mutiny.Uni flatMap(java.util.function.Function)
{
java.lang.Object v3;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Function;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transformToUni(java.util.function.Function)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni chain(java.util.function.Function)
{
java.lang.Object v2;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v3;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transformToUni(java.util.function.Function)>(v2);
return v4;
}
public io.smallrye.mutiny.Uni chain(java.util.function.Supplier)
{
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v0, v5;
io.smallrye.mutiny.groups.UniOnItem v3;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v4 = staticinvoke <io.smallrye.mutiny.Uni$lambda_chain_0__2627: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v2);
v5 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transformToUni(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni eventually(java.lang.Runnable)
{
io.smallrye.mutiny.groups.UniOnTerminate v2;
java.lang.Object v3;
java.lang.Runnable v1;
io.smallrye.mutiny.Uni v0, v4;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.lang.Runnable;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnTerminate onTermination()>();
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "action");
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnTerminate: io.smallrye.mutiny.Uni invoke(java.lang.Runnable)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni eventually(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnItemOrFailure v3;
java.util.function.BiFunction v4;
java.lang.Object v2;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v0, v5;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItemOrFailure onItemOrFailure()>();
v4 = staticinvoke <io.smallrye.mutiny.Uni$lambda_eventually_1__2628: java.util.function.BiFunction bootstrap$(java.util.function.Supplier)>(v2);
v5 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnItemOrFailure: io.smallrye.mutiny.Uni call(java.util.function.BiFunction)>(v4);
return v5;
}
public abstract io.smallrye.mutiny.groups.UniConvert convert();
public abstract io.smallrye.mutiny.Multi toMulti();
public abstract io.smallrye.mutiny.groups.UniRepeat repeat();
public abstract io.smallrye.mutiny.groups.UniOnTerminate onTermination();
public abstract io.smallrye.mutiny.groups.UniOnCancel onCancellation();
public io.smallrye.mutiny.Uni plug(java.util.function.Function)
{
java.lang.Object v2, v3, v4;
java.util.function.Function v1;
io.smallrye.mutiny.Uni v0, v5;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "operatorProvider");
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v0);
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "uni");
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni replaceWith(java.lang.Object)
{
java.lang.Object v1;
java.util.function.Function v3;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.lang.Object;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = staticinvoke <io.smallrye.mutiny.Uni$lambda_replaceWith_2__2629: java.util.function.Function bootstrap$(java.lang.Object)>(v1);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transform(java.util.function.Function)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni replaceWith(java.util.function.Supplier)
{
java.util.function.Function v3;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Supplier;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = staticinvoke <io.smallrye.mutiny.Uni$lambda_replaceWith_3__2630: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v1);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transform(java.util.function.Function)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni replaceWith(io.smallrye.mutiny.Uni)
{
java.util.function.Function v3;
io.smallrye.mutiny.Uni v0, v1, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = staticinvoke <io.smallrye.mutiny.Uni$lambda_replaceWith_4__2631: java.util.function.Function bootstrap$(io.smallrye.mutiny.Uni)>(v1);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transformToUni(java.util.function.Function)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni replaceWithNull()
{
java.util.function.Function v2;
io.smallrye.mutiny.Uni v0, v3;
io.smallrye.mutiny.groups.UniOnItem v1;
v0 := @this: io.smallrye.mutiny.Uni;
v1 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v2 = staticinvoke <io.smallrye.mutiny.Uni$lambda_replaceWithNull_5__2632: java.util.function.Function bootstrap$()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transform(java.util.function.Function)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni replaceWithVoid()
{
java.util.function.Function v2;
io.smallrye.mutiny.Uni v0, v3;
io.smallrye.mutiny.groups.UniOnItem v1;
v0 := @this: io.smallrye.mutiny.Uni;
v1 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v2 = staticinvoke <io.smallrye.mutiny.Uni$lambda_replaceWithVoid_6__2633: java.util.function.Function bootstrap$()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.Uni transform(java.util.function.Function)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni replaceIfNullWith(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnNull v3;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.Supplier;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.groups.UniOnNull ifNull()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnNull: io.smallrye.mutiny.Uni continueWith(java.util.function.Supplier)>(v1);
return v4;
}
public io.smallrye.mutiny.Uni replaceIfNullWith(java.lang.Object)
{
io.smallrye.mutiny.groups.UniOnNull v3;
java.lang.Object v1;
io.smallrye.mutiny.Uni v0, v4;
io.smallrye.mutiny.groups.UniOnItem v2;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.lang.Object;
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.groups.UniOnNull ifNull()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnNull: io.smallrye.mutiny.Uni continueWith(java.lang.Object)>(v1);
return v4;
}
public abstract io.smallrye.mutiny.Uni log(java.lang.String);
public abstract io.smallrye.mutiny.Uni log();
public static io.smallrye.mutiny.groups.UniJoin join()
{
io.smallrye.mutiny.groups.UniJoin v0;
v0 = <io.smallrye.mutiny.groups.UniJoin: io.smallrye.mutiny.groups.UniJoin SHARED_INSTANCE>;
return v0;
}
public io.smallrye.mutiny.Uni withContext(java.util.function.BiFunction)
{
java.lang.UnsupportedOperationException v2;
io.smallrye.mutiny.Uni v0;
java.util.function.BiFunction v1;
v0 := @this: io.smallrye.mutiny.Uni;
v1 := @parameter0: java.util.function.BiFunction;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Default method added to limit binary incompatibility");
throw v2;
}
public io.smallrye.mutiny.Uni attachContext()
{
io.smallrye.mutiny.Uni v0, v2;
java.util.function.BiFunction v1;
v0 := @this: io.smallrye.mutiny.Uni;
v1 = staticinvoke <io.smallrye.mutiny.Uni$lambda_attachContext_8__2634: java.util.function.BiFunction bootstrap$()>();
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.Uni withContext(java.util.function.BiFunction)>(v1);
return v2;
}
}