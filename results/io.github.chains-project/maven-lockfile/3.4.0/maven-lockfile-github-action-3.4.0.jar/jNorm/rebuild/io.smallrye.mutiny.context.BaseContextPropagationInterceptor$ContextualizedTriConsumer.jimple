class io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer extends java.lang.Object implements io.smallrye.mutiny.tuples.Functions$TriConsumer, io.smallrye.context.impl.Contextualized
{
private final java.util.concurrent.Executor executor;
private final io.smallrye.mutiny.tuples.Functions$TriConsumer consumer;
void <init>(java.util.concurrent.Executor, io.smallrye.mutiny.tuples.Functions$TriConsumer)
{
io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer v0;
java.util.concurrent.Executor v1;
io.smallrye.mutiny.tuples.Functions$TriConsumer v2;
v0 := @this: io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer;
v1 := @parameter0: java.util.concurrent.Executor;
v2 := @parameter1: io.smallrye.mutiny.tuples.Functions$TriConsumer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer: java.util.concurrent.Executor executor> = v1;
v0.<io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer: io.smallrye.mutiny.tuples.Functions$TriConsumer consumer> = v2;
return;
}
public void accept(java.lang.Object, java.lang.Object, java.lang.Object)
{
java.util.concurrent.Executor v4;
java.lang.Object v1, v2, v3;
io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer v0;
java.lang.Runnable v5;
v0 := @this: io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer: java.util.concurrent.Executor executor>;
v5 = staticinvoke <io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer$lambda_accept_0__1615: java.lang.Runnable bootstrap$(io.smallrye.mutiny.context.BaseContextPropagationInterceptor$ContextualizedTriConsumer,java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v1, v2, v3);
interfaceinvoke v4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(v5);
return;
}
}