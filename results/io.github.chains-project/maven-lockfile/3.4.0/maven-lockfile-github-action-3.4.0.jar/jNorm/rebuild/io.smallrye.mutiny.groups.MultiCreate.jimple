public class io.smallrye.mutiny.groups.MultiCreate extends java.lang.Object
{
public static final io.smallrye.mutiny.groups.MultiCreate INSTANCE;
private void <init>()
{
io.smallrye.mutiny.groups.MultiCreate v0;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.mutiny.Multi converter(io.smallrye.mutiny.converters.MultiConverter, java.lang.Object)
{
io.smallrye.mutiny.converters.MultiConverter v1;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
io.smallrye.mutiny.Multi v3, v4;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: io.smallrye.mutiny.converters.MultiConverter;
v2 := @parameter1: java.lang.Object;
v3 = interfaceinvoke v1.<io.smallrye.mutiny.converters.MultiConverter: io.smallrye.mutiny.Multi 'from'(java.lang.Object)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v3);
return v4;
}
public io.smallrye.mutiny.Multi completionStage(java.util.concurrent.CompletionStage)
{
java.util.concurrent.CompletionStage v1;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
java.util.function.Supplier v3;
io.smallrye.mutiny.Multi v4;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.concurrent.CompletionStage;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stage");
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_completionStage_0__2984: java.util.function.Supplier bootstrap$(java.util.concurrent.CompletionStage)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi completionStage(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Multi completionStage(java.util.function.Supplier)
{
java.util.function.Consumer v4;
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.subscription.BackPressureStrategy v5;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v6;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_completionStage_3__2985: java.util.function.Consumer bootstrap$(java.util.function.Supplier)>(v3);
v5 = <io.smallrye.mutiny.subscription.BackPressureStrategy: io.smallrye.mutiny.subscription.BackPressureStrategy LATEST>;
v6 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi emitter(java.util.function.Consumer,io.smallrye.mutiny.subscription.BackPressureStrategy)>(v4, v5);
return v6;
}
public io.smallrye.mutiny.Multi safePublisher(java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher v1;
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.groups.MultiCreate$1 v4;
java.lang.Object v2;
io.smallrye.mutiny.Multi v5;
boolean v3;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "publisher");
v3 = v1 instanceof io.smallrye.mutiny.Multi;
if v3 == 0 goto label1;
return v1;
label1:
v4 = new io.smallrye.mutiny.groups.MultiCreate$1;
specialinvoke v4.<io.smallrye.mutiny.groups.MultiCreate$1: void <init>(io.smallrye.mutiny.groups.MultiCreate,java.util.concurrent.Flow$Publisher)>(v0, v2);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi publisher(java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher v1;
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.groups.MultiCreate$2 v4;
java.lang.Object v2;
io.smallrye.mutiny.Multi v5;
boolean v3;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "publisher");
v3 = v1 instanceof io.smallrye.mutiny.Multi;
if v3 == 0 goto label1;
return v1;
label1:
v4 = new io.smallrye.mutiny.groups.MultiCreate$2;
specialinvoke v4.<io.smallrye.mutiny.groups.MultiCreate$2: void <init>(io.smallrye.mutiny.groups.MultiCreate,java.util.concurrent.Flow$Publisher)>(v0, v2);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi uni(io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
io.smallrye.mutiny.Multi v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "uni");
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.Multi toMulti()>();
return v3;
}
public io.smallrye.mutiny.Multi item(java.util.function.Supplier)
{
java.util.function.Consumer v4;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_item_4__2986: java.util.function.Consumer bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi emitter(java.util.function.Consumer)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi items(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.builders.StreamBasedMulti v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.builders.StreamBasedMulti;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.builders.StreamBasedMulti: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi item(java.lang.Object)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v1;
java.util.function.Supplier v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_item_5__2987: java.util.function.Supplier bootstrap$(java.lang.Object)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi item(java.util.function.Supplier)>(v2);
return v3;
}
public final transient io.smallrye.mutiny.Multi items(java.lang.Object[])
{
java.lang.Object[] v1;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v3;
io.smallrye.mutiny.Multi v4;
io.smallrye.mutiny.operators.multi.builders.CollectionBasedMulti v2;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.lang.Object[];
v2 = new io.smallrye.mutiny.operators.multi.builders.CollectionBasedMulti;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "items");
specialinvoke v2.<io.smallrye.mutiny.operators.multi.builders.CollectionBasedMulti: void <init>(java.lang.Object[])>(v3);
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v2);
return v4;
}
public io.smallrye.mutiny.Multi iterable(java.lang.Iterable)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v3;
io.smallrye.mutiny.operators.multi.builders.IterableBasedMulti v2;
io.smallrye.mutiny.Multi v4;
java.lang.Iterable v1;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.lang.Iterable;
v2 = new io.smallrye.mutiny.operators.multi.builders.IterableBasedMulti;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "iterable");
specialinvoke v2.<io.smallrye.mutiny.operators.multi.builders.IterableBasedMulti: void <init>(java.lang.Iterable)>(v3);
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v2);
return v4;
}
public io.smallrye.mutiny.Multi items(java.util.stream.Stream)
{
java.util.stream.Stream v1;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
java.util.function.Supplier v3;
io.smallrye.mutiny.Multi v4;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.stream.Stream;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "items");
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_items_6__2988: java.util.function.Supplier bootstrap$(java.util.stream.Stream)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi items(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Multi optional(java.util.Optional)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.util.Optional v1;
java.lang.Object v2;
java.util.function.Supplier v3;
io.smallrye.mutiny.Multi v4;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.Optional;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "optional");
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_optional_7__2989: java.util.function.Supplier bootstrap$(java.util.Optional)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi item(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Multi optional(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3, v4;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_optional_8__2990: java.util.function.Supplier bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi item(java.util.function.Supplier)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi emitter(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.subscription.BackPressureStrategy v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Consumer;
v2 = <io.smallrye.mutiny.subscription.BackPressureStrategy: io.smallrye.mutiny.subscription.BackPressureStrategy BUFFER>;
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi emitter(java.util.function.Consumer,io.smallrye.mutiny.subscription.BackPressureStrategy)>(v1, v2);
return v3;
}
public io.smallrye.mutiny.Multi emitter(java.util.function.Consumer, int)
{
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti v5;
io.smallrye.mutiny.subscription.BackPressureStrategy v6;
io.smallrye.mutiny.Multi v8;
java.util.function.Consumer v1, v4;
io.smallrye.mutiny.groups.MultiCreate v0;
int v2, v7;
java.lang.Object v3;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: int;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "consumer");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v3);
v5 = new io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti;
v6 = <io.smallrye.mutiny.subscription.BackPressureStrategy: io.smallrye.mutiny.subscription.BackPressureStrategy BUFFER>;
v7 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: int positive(int,java.lang.String)>(v2, "bufferSize");
specialinvoke v5.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: void <init>(java.util.function.Consumer,io.smallrye.mutiny.subscription.BackPressureStrategy,int)>(v4, v6, v7);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v5);
return v8;
}
public io.smallrye.mutiny.Multi emitter(java.util.function.Consumer, io.smallrye.mutiny.subscription.BackPressureStrategy)
{
io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti v5;
io.smallrye.mutiny.subscription.BackPressureStrategy v2;
io.smallrye.mutiny.Multi v7;
java.util.function.Consumer v1, v4;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v3, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: io.smallrye.mutiny.subscription.BackPressureStrategy;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "consumer");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v3);
v5 = new io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti;
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "strategy");
specialinvoke v5.<io.smallrye.mutiny.operators.multi.builders.EmitterBasedMulti: void <init>(java.util.function.Consumer,io.smallrye.mutiny.subscription.BackPressureStrategy)>(v4, v6);
v7 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v5);
return v7;
}
public io.smallrye.mutiny.Multi deferred(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.builders.DeferredMulti v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.builders.DeferredMulti;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.builders.DeferredMulti: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi context(java.util.function.Function)
{
io.smallrye.mutiny.operators.multi.builders.DeferredMultiWithContext v4;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.builders.DeferredMultiWithContext;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.builders.DeferredMultiWithContext: void <init>(java.util.function.Function)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi failure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v2;
java.util.function.Supplier v3;
io.smallrye.mutiny.Multi v4;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.lang.Throwable;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "failure");
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_failure_9__2991: java.util.function.Supplier bootstrap$(java.lang.Throwable)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi failure(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Multi failure(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.operators.multi.builders.FailedMulti v4;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.builders.FailedMulti;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.builders.FailedMulti: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi nothing()
{
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.Multi v1, v2;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.NeverMulti: io.smallrye.mutiny.Multi never()>();
v2 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v1);
return v2;
}
public io.smallrye.mutiny.Multi empty()
{
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.Multi v1, v2;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.EmptyMulti: io.smallrye.mutiny.Multi empty()>();
v2 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v1);
return v2;
}
public io.smallrye.mutiny.groups.MultiTimePeriod ticks()
{
io.smallrye.mutiny.groups.MultiTimePeriod v1;
io.smallrye.mutiny.groups.MultiCreate v0;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 = new io.smallrye.mutiny.groups.MultiTimePeriod;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiTimePeriod: void <init>()>();
return v1;
}
public io.smallrye.mutiny.Multi range(int, int)
{
io.smallrye.mutiny.groups.MultiCreate v0, v4;
int v1, v2;
java.lang.IllegalArgumentException v3;
io.smallrye.mutiny.Multi v6;
java.lang.Iterable v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: int;
v2 := @parameter1: int;
if v2 > v1 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("end must be greater than start");
throw v3;
label1:
v4 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v5 = staticinvoke <io.smallrye.mutiny.groups.MultiCreate$lambda_range_10__2992: java.lang.Iterable bootstrap$(int,int)>(v1, v2);
v6 = virtualinvoke v4.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi iterable(java.lang.Iterable)>(v5);
return v6;
}
public io.smallrye.mutiny.groups.MultiResource resource(java.util.function.Supplier, java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiResource v7;
java.util.function.Function v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.groups.MultiCreate v0;
java.lang.Object v3, v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "resourceSupplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "streamSupplier");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v5);
v7 = new io.smallrye.mutiny.groups.MultiResource;
specialinvoke v7.<io.smallrye.mutiny.groups.MultiResource: void <init>(java.util.function.Supplier,java.util.function.Function)>(v4, v6);
return v7;
}
public io.smallrye.mutiny.groups.MultiResourceUni resourceFromUni(java.util.function.Supplier, java.util.function.Function)
{
java.util.function.Function v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.groups.MultiResourceUni v7;
java.lang.Object v3, v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "resourceSupplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "streamSupplier");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v5);
v7 = new io.smallrye.mutiny.groups.MultiResourceUni;
specialinvoke v7.<io.smallrye.mutiny.groups.MultiResourceUni: void <init>(java.util.function.Supplier,java.util.function.Function)>(v4, v6);
return v7;
}
public io.smallrye.mutiny.Multi generator(java.util.function.Supplier, java.util.function.BiFunction)
{
java.util.function.BiFunction v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.groups.MultiCreate v0;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti v7;
java.lang.Object v3, v5;
v0 := @this: io.smallrye.mutiny.groups.MultiCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.BiFunction;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "initialStateSupplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "generator");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.BiFunction decorate(java.util.function.BiFunction)>(v5);
v7 = new io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti;
specialinvoke v7.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti: void <init>(java.util.function.Supplier,java.util.function.BiFunction)>(v4, v6);
return v7;
}
static void <clinit>()
{
io.smallrye.mutiny.groups.MultiCreate v0;
v0 = new io.smallrye.mutiny.groups.MultiCreate;
specialinvoke v0.<io.smallrye.mutiny.groups.MultiCreate: void <init>()>();
<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.groups.MultiCreate INSTANCE> = v0;
return;
}
}