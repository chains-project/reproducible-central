public class io.smallrye.mutiny.groups.MultiOnCompletion extends java.lang.Object
{
private final io.smallrye.mutiny.Multi upstream;
public void <init>(io.smallrye.mutiny.Multi)
{
java.lang.Object v2;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi upstream> = v2;
return;
}
public io.smallrye.mutiny.Multi invoke(java.lang.Runnable)
{
io.smallrye.mutiny.groups.MultiOnCompletion v0;
io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke v4;
java.lang.Object v2;
java.lang.Runnable v1, v3;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "action");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.lang.Runnable decorate(java.lang.Runnable)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiOnCompletionInvoke: void <init>(io.smallrye.mutiny.Multi,java.lang.Runnable)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v6;
}
public io.smallrye.mutiny.Multi call(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.MultiOnCompletionCall v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiOnCompletionCall;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiOnCompletionCall: void <init>(io.smallrye.mutiny.Multi,java.util.function.Supplier)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v6;
}
public io.smallrye.mutiny.Multi failWith(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.lang.Throwable;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "failure");
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$lambda_failWith_0__2890: java.util.function.Supplier bootstrap$(java.lang.Throwable)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)
{
java.util.function.Consumer v4;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiIfEmpty: java.util.function.Consumer createMultiFromFailureSupplier(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi switchToEmitter(java.util.function.Consumer)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi fail()
{
java.util.function.Supplier v1;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$init__2891: java.util.function.Supplier bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)>(v1);
return v2;
}
public io.smallrye.mutiny.Multi switchToEmitter(java.util.function.Consumer)
{
java.util.function.Consumer v1, v3;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.lang.Object v2;
java.util.function.Supplier v4;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "consumer");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$lambda_switchToEmitter_1__2892: java.util.function.Supplier bootstrap$(java.util.function.Consumer)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi switchTo(java.util.function.Supplier)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi switchTo(java.util.concurrent.Flow$Publisher)
{
java.util.concurrent.Flow$Publisher v1;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$lambda_switchTo_2__2893: java.util.function.Supplier bootstrap$(java.util.concurrent.Flow$Publisher)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi switchTo(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi switchTo(java.util.function.Supplier)
{
io.smallrye.mutiny.operators.multi.MultiSwitchOnCompletion v4;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiSwitchOnCompletion;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiSwitchOnCompletion: void <init>(io.smallrye.mutiny.Multi,java.util.function.Supplier)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v6;
}
public final transient io.smallrye.mutiny.Multi continueWith(java.lang.Object[])
{
java.lang.Object[] v1;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.lang.Object[];
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "items");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object[] doesNotContainNull(java.lang.Object[],java.lang.String)>(v1, "items");
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$lambda_continueWith_3__2894: java.util.function.Supplier bootstrap$(java.lang.Object[])>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi continueWith(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi continueWith(java.lang.Iterable)
{
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Multi v3;
java.lang.Iterable v1;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.lang.Iterable;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "items");
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Iterable doesNotContainNull(java.lang.Iterable,java.lang.String)>(v1, "items");
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$lambda_continueWith_4__2895: java.util.function.Supplier bootstrap$(java.lang.Iterable)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi continueWith(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi continueWith(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOnCompletion v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3, v4;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnCompletion$lambda_continueWith_5__2896: java.util.function.Supplier bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi switchTo(java.util.function.Supplier)>(v4);
return v5;
}
public io.smallrye.mutiny.groups.MultiIfEmpty ifEmpty()
{
io.smallrye.mutiny.groups.MultiIfEmpty v1;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.groups.MultiOnCompletion v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOnCompletion;
v1 = new io.smallrye.mutiny.groups.MultiIfEmpty;
v2 = v0.<io.smallrye.mutiny.groups.MultiOnCompletion: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiIfEmpty: void <init>(io.smallrye.mutiny.Multi)>(v2);
return v1;
}
}