public class io.smallrye.mutiny.groups.MultiOnItem extends java.lang.Object
{
private final io.smallrye.mutiny.Multi upstream;
public void <init>(io.smallrye.mutiny.Multi)
{
java.lang.Object v2;
io.smallrye.mutiny.groups.MultiOnItem v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream> = v2;
return;
}
public io.smallrye.mutiny.Multi transform(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
io.smallrye.mutiny.operators.multi.MultiMapOp v4;
java.lang.Object v2;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiMapOp;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiMapOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.Function)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v6;
}
public io.smallrye.mutiny.Multi invoke(java.util.function.Consumer)
{
java.util.function.Consumer v1, v3;
io.smallrye.mutiny.groups.MultiOnItem v0;
io.smallrye.mutiny.operators.multi.MultiOnItemInvoke v4;
java.lang.Object v2;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiOnItemInvoke;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v6;
}
public io.smallrye.mutiny.Multi invoke(java.lang.Runnable)
{
java.util.function.Consumer v3;
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.lang.Runnable v1;
io.smallrye.mutiny.Multi v4;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_invoke_0__2876: java.util.function.Consumer bootstrap$(java.lang.Runnable)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi invoke(java.util.function.Consumer)>(v3);
return v4;
}
public io.smallrye.mutiny.Multi call(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v1, v3, v4;
io.smallrye.mutiny.Multi v6;
io.smallrye.mutiny.groups.MultiFlatten v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "action");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_call_2__2877: java.util.function.Function bootstrap$(java.util.function.Function)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.groups.MultiFlatten transformToUni(java.util.function.Function)>(v4);
v6 = virtualinvoke v5.<io.smallrye.mutiny.groups.MultiFlatten: io.smallrye.mutiny.Multi concatenate()>();
return v6;
}
public io.smallrye.mutiny.Multi call(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "action");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_call_3__2878: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi call(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.Multi disjoint()
{
io.smallrye.mutiny.groups.MultiOnItem v0, v2;
java.util.function.Function v3;
io.smallrye.mutiny.Multi v1, v4;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnItem onItem()>();
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_disjoint_4__2879: java.util.function.Function bootstrap$()>();
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi transformToMultiAndConcatenate(java.util.function.Function)>(v3);
return v4;
}
public io.smallrye.mutiny.groups.MultiFlatten transformToMulti(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Multi v5;
io.smallrye.mutiny.groups.MultiFlatten v4;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.groups.MultiFlatten;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.groups.MultiFlatten: void <init>(io.smallrye.mutiny.Multi,java.util.function.Function,int,boolean)>(v5, v3, 1, 0);
return v4;
}
public io.smallrye.mutiny.Multi transformToMultiAndConcatenate(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.util.function.Function v1;
io.smallrye.mutiny.Multi v3;
io.smallrye.mutiny.groups.MultiFlatten v2;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.groups.MultiFlatten transformToMulti(java.util.function.Function)>(v1);
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiFlatten: io.smallrye.mutiny.Multi concatenate()>();
return v3;
}
public io.smallrye.mutiny.Multi transformToMultiAndMerge(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.util.function.Function v1;
io.smallrye.mutiny.Multi v3;
io.smallrye.mutiny.groups.MultiFlatten v2;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.groups.MultiFlatten transformToMulti(java.util.function.Function)>(v1);
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiFlatten: io.smallrye.mutiny.Multi merge()>();
return v3;
}
public io.smallrye.mutiny.Multi transformToIterable(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v1, v3, v4;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_transformToIterable_5__2880: java.util.function.Function bootstrap$(java.util.function.Function)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi transformToMultiAndConcatenate(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.groups.MultiFlatten transformToUni(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v1, v3, v4;
io.smallrye.mutiny.Multi v6;
io.smallrye.mutiny.groups.MultiFlatten v5;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_transformToUni_6__2881: java.util.function.Function bootstrap$(java.util.function.Function)>(v3);
v5 = new io.smallrye.mutiny.groups.MultiFlatten;
v6 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v5.<io.smallrye.mutiny.groups.MultiFlatten: void <init>(io.smallrye.mutiny.Multi,java.util.function.Function,int,boolean)>(v6, v4, 1, 0);
return v5;
}
public io.smallrye.mutiny.Multi transformToUniAndConcatenate(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.util.function.Function v1;
io.smallrye.mutiny.Multi v3;
io.smallrye.mutiny.groups.MultiFlatten v2;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.groups.MultiFlatten transformToUni(java.util.function.Function)>(v1);
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiFlatten: io.smallrye.mutiny.Multi concatenate()>();
return v3;
}
public io.smallrye.mutiny.Multi transformToUniAndMerge(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.util.function.Function v1;
io.smallrye.mutiny.Multi v3;
io.smallrye.mutiny.groups.MultiFlatten v2;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.groups.MultiFlatten transformToUni(java.util.function.Function)>(v1);
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiFlatten: io.smallrye.mutiny.Multi merge()>();
return v3;
}
public io.smallrye.mutiny.Multi ignore()
{
io.smallrye.mutiny.operators.multi.MultiIgnoreOp v1;
io.smallrye.mutiny.groups.MultiOnItem v0;
io.smallrye.mutiny.Multi v2, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 = new io.smallrye.mutiny.operators.multi.MultiIgnoreOp;
v2 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.operators.multi.MultiIgnoreOp: void <init>(io.smallrye.mutiny.Multi)>(v2);
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v1);
return v3;
}
public io.smallrye.mutiny.Uni ignoreAsUni()
{
io.smallrye.mutiny.groups.MultiOnItem v0;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi ignore()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.Uni toUni()>();
return v2;
}
public io.smallrye.mutiny.Multi castTo(java.lang.Class)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Class v1;
java.util.function.Function v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.lang.Class;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "target");
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$cast__2882: java.util.function.Function bootstrap$(java.lang.Class)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi transform(java.util.function.Function)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi scan(java.util.function.Supplier, java.util.function.BiFunction)
{
java.util.function.BiFunction v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.Multi v8, v9;
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v3, v5;
io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp v7;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.BiFunction;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "initialStateProducer");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "accumulator");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.BiFunction decorate(java.util.function.BiFunction)>(v5);
v7 = new io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp;
v8 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v7.<io.smallrye.mutiny.operators.multi.MultiScanWithSeedOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.Supplier,java.util.function.BiFunction)>(v8, v4, v6);
v9 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v7);
return v9;
}
public io.smallrye.mutiny.Multi scan(java.util.function.BinaryOperator)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.MultiScanOp v4;
io.smallrye.mutiny.Multi v5, v6;
java.util.function.BinaryOperator v1, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.BinaryOperator;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "accumulator");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.BinaryOperator decorate(java.util.function.BinaryOperator)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiScanOp;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiScanOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.BiFunction)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v6;
}
public io.smallrye.mutiny.Multi failWith(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v1, v3, v4;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_failWith_7__2883: java.util.function.Function bootstrap$(java.util.function.Function)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi transformToUniAndConcatenate(java.util.function.Function)>(v4);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v5);
return v6;
}
public io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOnItem v0;
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5, v6;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItem;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItem$lambda_failWith_8__2884: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItem: io.smallrye.mutiny.Multi transformToUniAndConcatenate(java.util.function.Function)>(v4);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v5);
return v6;
}
}