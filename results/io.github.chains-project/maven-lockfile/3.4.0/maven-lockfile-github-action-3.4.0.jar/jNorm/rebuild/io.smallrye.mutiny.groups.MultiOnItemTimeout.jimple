public class io.smallrye.mutiny.groups.MultiOnItemTimeout extends java.lang.Object
{
private final io.smallrye.mutiny.Multi failure;
private final java.time.Duration timeout;
private final java.util.concurrent.ScheduledExecutorService executor;
public void <init>(io.smallrye.mutiny.Multi, java.time.Duration, java.util.concurrent.ScheduledExecutorService)
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
java.time.Duration v2, v5;
java.util.concurrent.ScheduledExecutorService v3;
java.lang.Object v4;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.time.Duration;
v3 := @parameter2: java.util.concurrent.ScheduledExecutorService;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi failure> = v4;
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v2, "timeout");
v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: java.time.Duration timeout> = v5;
v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: java.util.concurrent.ScheduledExecutorService executor> = v3;
return;
}
public io.smallrye.mutiny.groups.MultiOnItemTimeout on(java.util.concurrent.ScheduledExecutorService)
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0, v2;
java.time.Duration v4;
java.util.concurrent.ScheduledExecutorService v1;
java.lang.Object v5;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 := @parameter0: java.util.concurrent.ScheduledExecutorService;
v2 = new io.smallrye.mutiny.groups.MultiOnItemTimeout;
v3 = v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi failure>;
v4 = v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: java.time.Duration timeout>;
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "executor");
specialinvoke v2.<io.smallrye.mutiny.groups.MultiOnItemTimeout: void <init>(io.smallrye.mutiny.Multi,java.time.Duration,java.util.concurrent.ScheduledExecutorService)>(v3, v4, v5);
return v2;
}
public io.smallrye.mutiny.Multi fail()
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
java.util.function.Supplier v1;
io.smallrye.mutiny.Multi v2, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItemTimeout$init__2872: java.util.function.Supplier bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)>(v1);
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi failWith(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Multi v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 := @parameter0: java.lang.Throwable;
v2 = staticinvoke <io.smallrye.mutiny.groups.MultiOnItemTimeout$lambda_failWith_0__2873: java.util.function.Supplier bootstrap$(java.lang.Throwable)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Multi failWith(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Multi v5, v8;
io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout v4;
java.time.Duration v6;
java.util.concurrent.ScheduledExecutorService v7;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout;
v5 = v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi failure>;
v6 = v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: java.time.Duration timeout>;
v7 = v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: java.util.concurrent.ScheduledExecutorService executor>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout: void <init>(io.smallrye.mutiny.Multi,java.time.Duration,java.util.function.Supplier,java.util.concurrent.ScheduledExecutorService)>(v5, v6, v3, v7);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v8;
}
public io.smallrye.mutiny.Multi recoverWithCompletion()
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
io.smallrye.mutiny.groups.MultiOnFailure v2;
io.smallrye.mutiny.Multi v1, v3;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi fail()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiOnFailure: io.smallrye.mutiny.Multi recoverWithCompletion()>();
return v3;
}
public io.smallrye.mutiny.Multi recoverWithMulti(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
io.smallrye.mutiny.groups.MultiOnFailure v3;
java.util.function.Supplier v1;
io.smallrye.mutiny.Multi v2, v4;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 := @parameter0: java.util.function.Supplier;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi fail()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.MultiOnFailure: io.smallrye.mutiny.Multi recoverWithMulti(java.util.function.Supplier)>(v1);
return v4;
}
public io.smallrye.mutiny.Multi recoverWithMulti(io.smallrye.mutiny.Multi)
{
io.smallrye.mutiny.groups.MultiOnItemTimeout v0;
io.smallrye.mutiny.groups.MultiOnFailure v3;
io.smallrye.mutiny.Multi v1, v2, v4;
v0 := @this: io.smallrye.mutiny.groups.MultiOnItemTimeout;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOnItemTimeout: io.smallrye.mutiny.Multi fail()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.MultiOnFailure: io.smallrye.mutiny.Multi recoverWithMulti(io.smallrye.mutiny.Multi)>(v1);
return v4;
}
}