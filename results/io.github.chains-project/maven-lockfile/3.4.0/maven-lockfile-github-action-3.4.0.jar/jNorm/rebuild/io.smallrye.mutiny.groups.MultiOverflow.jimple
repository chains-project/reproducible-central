public class io.smallrye.mutiny.groups.MultiOverflow extends java.lang.Object
{
private final io.smallrye.mutiny.Multi upstream;
public void <init>(io.smallrye.mutiny.Multi)
{
java.lang.Object v2;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream> = v2;
return;
}
public io.smallrye.mutiny.Multi bufferUnconditionally()
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v1;
io.smallrye.mutiny.Multi v2, v3;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v2 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v2, null, null);
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: io.smallrye.mutiny.Multi bufferUnconditionally()>();
return v3;
}
public io.smallrye.mutiny.Multi buffer()
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v1;
io.smallrye.mutiny.Multi v2, v3;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v2 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v2, null, null);
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: io.smallrye.mutiny.Multi buffer()>();
return v3;
}
public io.smallrye.mutiny.Multi buffer(int)
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v2;
int v1;
io.smallrye.mutiny.Multi v3, v4;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 := @parameter0: int;
v2 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v3 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v2.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v3, null, null);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiOverflowStrategy: io.smallrye.mutiny.Multi buffer(int)>(v1);
return v4;
}
public io.smallrye.mutiny.Multi drop()
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v1;
io.smallrye.mutiny.Multi v2, v3;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v2 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v2, null, null);
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: io.smallrye.mutiny.Multi drop()>();
return v3;
}
public io.smallrye.mutiny.Multi dropPreviousItems()
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v1;
io.smallrye.mutiny.Multi v2, v3;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v2 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v2, null, null);
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.MultiOverflowStrategy: io.smallrye.mutiny.Multi dropPreviousItems()>();
return v3;
}
public io.smallrye.mutiny.groups.MultiOverflowStrategy invoke(java.util.function.Consumer)
{
java.util.function.Consumer v1, v3;
io.smallrye.mutiny.groups.MultiOverflowStrategy v4;
java.lang.Object v2;
io.smallrye.mutiny.Multi v5;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "consumer");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v2);
v4 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v5 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v5, v3, null);
return v4;
}
public io.smallrye.mutiny.groups.MultiOverflowStrategy invoke(java.lang.Runnable)
{
java.util.function.Consumer v3;
io.smallrye.mutiny.groups.MultiOverflowStrategy v4;
java.lang.Object v2;
java.lang.Runnable v1;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "callback");
v3 = staticinvoke <io.smallrye.mutiny.groups.MultiOverflow$lambda_invoke_0__2863: java.util.function.Consumer bootstrap$(java.lang.Runnable)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.groups.MultiOverflowStrategy invoke(java.util.function.Consumer)>(v3);
return v4;
}
public io.smallrye.mutiny.groups.MultiOverflowStrategy call(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v5;
java.lang.Object v2;
java.util.function.Function v4;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.MultiOverflow$lambda_call_1__2864: java.util.function.Function bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.groups.MultiOverflowStrategy call(java.util.function.Function)>(v4);
return v5;
}
public io.smallrye.mutiny.groups.MultiOverflowStrategy call(java.util.function.Function)
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v4;
java.lang.Object v2;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Multi v5;
io.smallrye.mutiny.groups.MultiOverflow v0;
v0 := @this: io.smallrye.mutiny.groups.MultiOverflow;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.groups.MultiOverflowStrategy;
v5 = v0.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.Multi upstream>;
specialinvoke v4.<io.smallrye.mutiny.groups.MultiOverflowStrategy: void <init>(io.smallrye.mutiny.Multi,java.util.function.Consumer,java.util.function.Function)>(v5, null, v3);
return v4;
}
}