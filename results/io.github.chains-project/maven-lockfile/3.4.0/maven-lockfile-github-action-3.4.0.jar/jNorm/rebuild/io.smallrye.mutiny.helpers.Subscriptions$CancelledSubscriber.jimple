public class io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber extends java.lang.Object implements java.util.concurrent.Flow$Subscriber
{
public void <init>()
{
io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber v0;
v0 := @this: io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void onSubscribe(java.util.concurrent.Flow$Subscription)
{
java.lang.Object v2;
io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber v0;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber;
v1 := @parameter0: java.util.concurrent.Flow$Subscription;
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
interfaceinvoke v2.<java.util.concurrent.Flow$Subscription: void cancel()>();
return;
}
public void onNext(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber v0;
v0 := @this: io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber;
v1 := @parameter0: java.lang.Object;
return;
}
public void onError(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber v0;
v0 := @this: io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber;
v1 := @parameter0: java.lang.Throwable;
return;
}
public void onComplete()
{
io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber v0;
v0 := @this: io.smallrye.mutiny.helpers.Subscriptions$CancelledSubscriber;
return;
}
}