final class io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator extends java.lang.Object implements java.util.Iterator
{
final io.smallrye.mutiny.helpers.queues.SingletonQueue queue;
final java.util.concurrent.atomic.AtomicBoolean consumed;
public void <init>(io.smallrye.mutiny.helpers.queues.SingletonQueue)
{
java.util.concurrent.atomic.AtomicBoolean v2;
io.smallrye.mutiny.helpers.queues.SingletonQueue v1;
io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator;
v1 := @parameter0: io.smallrye.mutiny.helpers.queues.SingletonQueue;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: java.util.concurrent.atomic.AtomicBoolean consumed> = v2;
v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: io.smallrye.mutiny.helpers.queues.SingletonQueue queue> = v1;
return;
}
public boolean hasNext()
{
io.smallrye.mutiny.helpers.queues.SingletonQueue v1;
io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator v0;
java.util.concurrent.atomic.AtomicBoolean v3;
boolean v2, v4, v5;
v0 := @this: io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator;
v1 = v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: io.smallrye.mutiny.helpers.queues.SingletonQueue queue>;
v2 = virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.SingletonQueue: boolean isEmpty()>();
if v2 == 0 goto label1;
return 0;
label1:
v3 = v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: java.util.concurrent.atomic.AtomicBoolean consumed>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v4 != 0 goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public java.lang.Object next()
{
io.smallrye.mutiny.helpers.queues.SingletonQueue v3;
io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator v0;
java.util.concurrent.atomic.AtomicBoolean v1;
java.lang.Object v4;
boolean v2;
v0 := @this: io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator;
v1 = v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: java.util.concurrent.atomic.AtomicBoolean consumed>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: io.smallrye.mutiny.helpers.queues.SingletonQueue queue>;
v4 = virtualinvoke v3.<io.smallrye.mutiny.helpers.queues.SingletonQueue: java.lang.Object peek()>();
return v4;
label1:
return null;
}
public void remove()
{
io.smallrye.mutiny.helpers.queues.SingletonQueue v1;
io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator;
v1 = v0.<io.smallrye.mutiny.helpers.queues.SingletonQueue$SingletonIterator: io.smallrye.mutiny.helpers.queues.SingletonQueue queue>;
virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.SingletonQueue: java.lang.Object remove()>();
return;
}
}