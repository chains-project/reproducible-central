public class io.smallrye.mutiny.infrastructure.MutinyScheduler extends java.util.concurrent.ScheduledThreadPoolExecutor
{
private final java.util.concurrent.Executor executor;
public void <init>(java.util.concurrent.Executor)
{
io.smallrye.mutiny.infrastructure.MutinyScheduler v0;
java.util.concurrent.Executor v1;
v0 := @this: io.smallrye.mutiny.infrastructure.MutinyScheduler;
v1 := @parameter0: java.util.concurrent.Executor;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(1);
v0.<io.smallrye.mutiny.infrastructure.MutinyScheduler: java.util.concurrent.Executor executor> = v1;
return;
}
protected java.util.concurrent.RunnableScheduledFuture decorateTask(java.lang.Runnable, java.util.concurrent.RunnableScheduledFuture)
{
io.smallrye.mutiny.infrastructure.MutinyScheduler$DecoratedRunnableTask v3;
java.util.concurrent.Executor v4;
java.util.concurrent.RunnableScheduledFuture v2;
io.smallrye.mutiny.infrastructure.MutinyScheduler v0;
java.lang.Runnable v1;
v0 := @this: io.smallrye.mutiny.infrastructure.MutinyScheduler;
v1 := @parameter0: java.lang.Runnable;
v2 := @parameter1: java.util.concurrent.RunnableScheduledFuture;
v3 = new io.smallrye.mutiny.infrastructure.MutinyScheduler$DecoratedRunnableTask;
v4 = v0.<io.smallrye.mutiny.infrastructure.MutinyScheduler: java.util.concurrent.Executor executor>;
specialinvoke v3.<io.smallrye.mutiny.infrastructure.MutinyScheduler$DecoratedRunnableTask: void <init>(java.util.concurrent.RunnableScheduledFuture,java.util.concurrent.Executor)>(v2, v4);
return v3;
}
protected java.util.concurrent.RunnableScheduledFuture decorateTask(java.util.concurrent.Callable, java.util.concurrent.RunnableScheduledFuture)
{
io.smallrye.mutiny.infrastructure.MutinyScheduler$DecoratedRunnableTask v3;
java.util.concurrent.Executor v4;
java.util.concurrent.RunnableScheduledFuture v2;
java.util.concurrent.Callable v1;
io.smallrye.mutiny.infrastructure.MutinyScheduler v0;
v0 := @this: io.smallrye.mutiny.infrastructure.MutinyScheduler;
v1 := @parameter0: java.util.concurrent.Callable;
v2 := @parameter1: java.util.concurrent.RunnableScheduledFuture;
v3 = new io.smallrye.mutiny.infrastructure.MutinyScheduler$DecoratedRunnableTask;
v4 = v0.<io.smallrye.mutiny.infrastructure.MutinyScheduler: java.util.concurrent.Executor executor>;
specialinvoke v3.<io.smallrye.mutiny.infrastructure.MutinyScheduler$DecoratedRunnableTask: void <init>(java.util.concurrent.RunnableScheduledFuture,java.util.concurrent.Executor)>(v2, v4);
return v3;
}
}