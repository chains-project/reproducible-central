public abstract class io.smallrye.mutiny.operators.multi.AbstractMultiOperator extends io.smallrye.mutiny.operators.AbstractMulti implements io.smallrye.mutiny.Multi
{
protected final io.smallrye.mutiny.Multi upstream;
public void <init>(io.smallrye.mutiny.Multi)
{
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.AbstractMultiOperator v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.AbstractMultiOperator;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: io.smallrye.mutiny.Multi upstream> = v2;
return;
}
public io.smallrye.mutiny.Multi upstream()
{
io.smallrye.mutiny.operators.multi.AbstractMultiOperator v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.AbstractMultiOperator;
v1 = v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: io.smallrye.mutiny.Multi upstream>;
return v1;
}
}