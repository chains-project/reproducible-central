class io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
final io.smallrye.mutiny.operators.multi.MultiOnItemInvoke this$0;
public void <init>(io.smallrye.mutiny.operators.multi.MultiOnItemInvoke, io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
io.smallrye.mutiny.operators.multi.MultiOnItemInvoke v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiOnItemInvoke;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v0.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor: io.smallrye.mutiny.operators.multi.MultiOnItemInvoke this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
return;
}
public void onItem(java.lang.Object)
{
java.lang.Throwable v7;
io.smallrye.mutiny.operators.multi.MultiOnItemInvoke v5;
io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor v0;
io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription v3;
java.util.function.Consumer v6;
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v4;
java.util.concurrent.Flow$Subscription v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor: java.util.concurrent.Flow$Subscription getUpstreamSubscription()>();
v3 = <io.smallrye.mutiny.helpers.Subscriptions: io.smallrye.mutiny.helpers.Subscriptions$EmptySubscription CANCELLED>;
if v2 == v3 goto label5;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
label1:
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor: io.smallrye.mutiny.operators.multi.MultiOnItemInvoke this$0>;
v6 = v5.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke: java.util.function.Consumer callback>;
interfaceinvoke v6.<java.util.function.Consumer: void accept(java.lang.Object)>(v1);
label2:
goto label4;
label3:
v7 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnItemInvoke$MultiOnItemInvokeProcessor: void failAndCancel(java.lang.Throwable)>(v7);
return;
label4:
interfaceinvoke v4.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}