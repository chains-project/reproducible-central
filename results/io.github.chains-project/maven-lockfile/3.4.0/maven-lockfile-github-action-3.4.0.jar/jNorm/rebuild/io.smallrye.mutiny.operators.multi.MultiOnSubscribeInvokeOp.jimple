public final class io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final java.util.function.Consumer onSubscribe;
public void <init>(io.smallrye.mutiny.Multi, java.util.function.Consumer)
{
java.util.function.Consumer v2;
io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.function.Consumer;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp: java.util.function.Consumer onSubscribe> = v2;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v5;
java.lang.Object v3;
io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp v0;
io.smallrye.mutiny.Multi v4;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp$OnSubscribeSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = new io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp$OnSubscribeSubscriber;
v3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Subscriber must not be `null`");
specialinvoke v2.<io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp$OnSubscribeSubscriber: void <init>(io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp,io.smallrye.mutiny.subscription.MultiSubscriber)>(v0, v3);
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiOnSubscribeInvokeOp: io.smallrye.mutiny.Multi upstream>;
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
virtualinvoke v5.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
return;
}
}