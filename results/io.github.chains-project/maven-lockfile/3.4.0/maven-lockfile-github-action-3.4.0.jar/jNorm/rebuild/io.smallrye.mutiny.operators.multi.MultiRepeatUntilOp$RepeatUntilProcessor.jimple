final class io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor extends io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatProcessor
{
private boolean passed;
public void <init>(io.smallrye.mutiny.Multi, io.smallrye.mutiny.subscription.MultiSubscriber, long, java.util.function.Predicate, io.smallrye.mutiny.Uni)
{
java.util.function.Predicate v4;
io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor v0;
long v3;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v3 := @parameter2: long;
v4 := @parameter3: java.util.function.Predicate;
v5 := @parameter4: io.smallrye.mutiny.Uni;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatProcessor: void <init>(io.smallrye.mutiny.Multi,io.smallrye.mutiny.subscription.MultiSubscriber,long,java.util.function.Predicate,io.smallrye.mutiny.Uni)>(v1, v2, v3, v4, v5);
v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: boolean passed> = 1;
return;
}
public void onItem(java.lang.Object)
{
java.lang.Throwable v5;
java.util.function.Predicate v2;
io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor v0;
long v8, v9;
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v10, v6;
boolean v3, v4, v7;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: java.util.function.Predicate predicate>;
v3 = interfaceinvoke v2.<java.util.function.Predicate: boolean test(java.lang.Object)>(v1);
if v3 != 0 goto label2;
v4 = 1;
goto label3;
label2:
v4 = 0;
label3:
v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: boolean passed> = v4;
label4:
goto label6;
label5:
v5 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: void cancel()>();
v6 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v5);
return;
label6:
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: boolean passed>;
if v7 == 0 goto label7;
v8 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: long emitted>;
v9 = v8 + 1L;
v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: long emitted> = v9;
v10 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v10.<io.smallrye.mutiny.subscription.MultiSubscriber: void onNext(java.lang.Object)>(v1);
label7:
return;
catch java.lang.Throwable from label1 to label4 with label5;
}
public void onCompletion()
{
byte v2, v4;
io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor v0;
long v1, v3;
io.smallrye.mutiny.subscription.MultiSubscriber v6;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: long remaining>;
v2 = v1 cmp 9223372036854775807L;
if v2 == 0 goto label1;
v3 = v1 - 1L;
v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: long remaining> = v3;
label1:
v4 = v1 cmp 0L;
if v4 == 0 goto label2;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: boolean passed>;
if v5 == 0 goto label2;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: void subscribeNext()>();
goto label3;
label2:
v6 = v0.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp$RepeatUntilProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.MultiSubscriber: void onComplete()>();
label3:
return;
}
}