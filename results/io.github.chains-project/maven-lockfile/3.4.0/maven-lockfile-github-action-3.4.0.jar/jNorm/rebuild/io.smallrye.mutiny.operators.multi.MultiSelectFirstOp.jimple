public final class io.smallrye.mutiny.operators.multi.MultiSelectFirstOp extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final long numberOfItems;
public void <init>(io.smallrye.mutiny.Multi, long)
{
long v2, v3;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.operators.multi.MultiSelectFirstOp v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSelectFirstOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: long;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: long positiveOrZero(long,java.lang.String)>(v2, "numberOfItems");
v0.<io.smallrye.mutiny.operators.multi.MultiSelectFirstOp: long numberOfItems> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiSelectFirstOp$MultiSelectFirstProcessor v3;
long v4;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
io.smallrye.mutiny.operators.multi.MultiSelectFirstOp v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSelectFirstOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNullNpe(java.lang.Object,java.lang.String)>(v1, "subscriber");
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiSelectFirstOp: io.smallrye.mutiny.Multi upstream>;
v3 = new io.smallrye.mutiny.operators.multi.MultiSelectFirstOp$MultiSelectFirstProcessor;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiSelectFirstOp: long numberOfItems>;
specialinvoke v3.<io.smallrye.mutiny.operators.multi.MultiSelectFirstOp$MultiSelectFirstProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,long)>(v1, v4);
interfaceinvoke v2.<io.smallrye.mutiny.Multi: void subscribe(java.util.concurrent.Flow$Subscriber)>(v3);
return;
}
}