public final class io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final java.util.Comparator comparator;
public void <init>(io.smallrye.mutiny.Multi)
{
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp: void <init>(io.smallrye.mutiny.Multi,java.util.Comparator)>(v1, null);
return;
}
public void <init>(io.smallrye.mutiny.Multi, java.util.Comparator)
{
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp v0;
java.util.Comparator v2;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.Comparator;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp: java.util.Comparator comparator> = v2;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v3;
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp v0;
io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor v4;
java.util.Comparator v5;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNullNpe(java.lang.Object,java.lang.String)>(v1, "subscriber");
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp: io.smallrye.mutiny.Multi upstream>;
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v4 = new io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp: java.util.Comparator comparator>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiSkipRepetitionsOp$MultiSkipRepetitionsProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.Comparator)>(v1, v5);
virtualinvoke v3.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v4);
return;
}
}