public final class io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665 extends java.lang.Object implements java.lang.Runnable
{
java.util.concurrent.Flow$Subscription cap0;
long cap1;
public static java.lang.Runnable bootstrap$(java.util.concurrent.Flow$Subscription, long)
{
long v1;
io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665 v2;
java.util.concurrent.Flow$Subscription v0;
v0 := @parameter0: java.util.concurrent.Flow$Subscription;
v1 := @parameter1: long;
v2 = new io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665;
specialinvoke v2.<io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665: void <init>(java.util.concurrent.Flow$Subscription,long)>(v0, v1);
return v2;
}
public void <init>(java.util.concurrent.Flow$Subscription, long)
{
long v2;
io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665 v0;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665;
v1 := @parameter0: java.util.concurrent.Flow$Subscription;
v2 := @parameter1: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665: java.util.concurrent.Flow$Subscription cap0> = v1;
v0.<io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665: long cap1> = v2;
return;
}
public void run()
{
long v2;
io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665 v0;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665: java.util.concurrent.Flow$Subscription cap0>;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor$lambda_requestUpstream_0__2665: long cap1>;
staticinvoke <io.smallrye.mutiny.operators.multi.MultiSubscribeOnOp$SubscribeOnProcessor: void lambda$requestUpstream$0(java.util.concurrent.Flow$Subscription,long)>(v1, v2);
return;
}
}