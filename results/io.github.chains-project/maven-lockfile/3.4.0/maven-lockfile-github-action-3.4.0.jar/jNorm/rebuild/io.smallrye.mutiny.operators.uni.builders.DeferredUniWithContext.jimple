public class io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext extends io.smallrye.mutiny.operators.AbstractUni
{
private final java.util.function.Function mapper;
public void <init>(java.util.function.Function)
{
io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext v0;
java.util.function.Function v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext;
v1 := @parameter0: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractUni: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext: java.util.function.Function mapper> = v1;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
java.lang.Throwable v7;
io.smallrye.mutiny.subscription.UniSubscription v5, v8;
io.smallrye.mutiny.subscription.UniSubscriber v1;
io.smallrye.mutiny.Context v3;
java.util.function.Function v2;
java.lang.NullPointerException v6;
io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext v0;
java.lang.Object v4;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
label1:
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext: java.util.function.Function mapper>;
v3 = interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: io.smallrye.mutiny.Context context()>();
v4 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
if v4 != null goto label4;
v5 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v5);
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("The mapper returned `null`");
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v6);
label2:
return;
label3:
v7 := @caughtexception;
v8 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v8);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v7);
return;
label4:
staticinvoke <io.smallrye.mutiny.operators.AbstractUni: void subscribe(io.smallrye.mutiny.Uni,io.smallrye.mutiny.subscription.UniSubscriber)>(v4, v1);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}