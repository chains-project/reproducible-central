public class io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter extends io.smallrye.mutiny.operators.AbstractUni
{
private final java.util.function.Consumer consumer;
public void <init>(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter v0;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter;
v1 := @parameter0: java.util.function.Consumer;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractUni: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter: java.util.function.Consumer consumer> = v1;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
java.lang.Throwable v4;
java.util.function.Consumer v3;
io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter v2;
io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter v0;
io.smallrye.mutiny.subscription.UniSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
v2 = new io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter;
specialinvoke v2.<io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v1);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v2);
label1:
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter: java.util.function.Consumer consumer>;
interfaceinvoke v3.<java.util.function.Consumer: void accept(java.lang.Object)>(v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v2.<io.smallrye.mutiny.operators.uni.builders.DefaultUniEmitter: void fail(java.lang.Throwable)>(v4);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}