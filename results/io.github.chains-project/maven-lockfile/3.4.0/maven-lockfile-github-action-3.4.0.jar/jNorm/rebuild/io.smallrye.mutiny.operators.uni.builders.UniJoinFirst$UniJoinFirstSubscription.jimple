class io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription extends java.lang.Object implements io.smallrye.mutiny.subscription.UniSubscription
{
private final io.smallrye.mutiny.subscription.UniSubscriber subscriber;
private final java.util.concurrent.atomic.AtomicReferenceArray subscriptions;
private final java.util.concurrent.atomic.AtomicBoolean cancelled;
private java.util.concurrent.atomic.AtomicInteger nextSubscriptionIndex;
private final java.util.List failures;
final io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0;
public void <init>(io.smallrye.mutiny.operators.uni.builders.UniJoinFirst, io.smallrye.mutiny.subscription.UniSubscriber)
{
java.util.concurrent.atomic.AtomicBoolean v7;
io.smallrye.mutiny.subscription.UniSubscriber v2;
java.util.ArrayList v8;
java.util.concurrent.atomic.AtomicReferenceArray v3;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst v1, v4;
java.util.List v5, v9;
int v6;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 := @parameter0: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.concurrent.atomic.AtomicReferenceArray;
v4 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v5 = v4.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
specialinvoke v3.<java.util.concurrent.atomic.AtomicReferenceArray: void <init>(int)>(v6);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicReferenceArray subscriptions> = v3;
v7 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v7.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled> = v7;
v8 = new java.util.ArrayList;
specialinvoke v8.<java.util.ArrayList: void <init>()>();
v9 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>(v8);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.List failures> = v9;
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber> = v2;
return;
}
public void triggerSubscriptions()
{
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst v1, v11, v14, v4, v6;
java.util.concurrent.atomic.AtomicInteger v10;
int v12, v13, v16, v2, v3, v5, v8, v9;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
boolean v17;
java.util.List v15, v7;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v2 = v1.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: int concurrency>;
v3 = (int) -1;
if v2 == v3 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v5 = v4.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: int concurrency>;
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v7 = v6.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v8 = interfaceinvoke v7.<java.util.List: int size()>();
v9 = staticinvoke <java.lang.Math: int min(int,int)>(v5, v8);
v10 = new java.util.concurrent.atomic.AtomicInteger;
v11 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v12 = v11.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: int concurrency>;
v13 = v12 - 1;
specialinvoke v10.<java.util.concurrent.atomic.AtomicInteger: void <init>(int)>(v13);
v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicInteger nextSubscriptionIndex> = v10;
goto label2;
label1:
v14 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v15 = v14.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v9 = interfaceinvoke v15.<java.util.List: int size()>();
label2:
v16 = 0;
label3:
if v16 >= v9 goto label4;
v17 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: boolean trySubscribe(int)>(v16);
if v17 == 0 goto label4;
v16 = v16 + 1;
goto label3;
label4:
return;
}
private boolean trySubscribe(int)
{
java.util.concurrent.atomic.AtomicBoolean v2;
io.smallrye.mutiny.subscription.UniSubscriber v13;
io.smallrye.mutiny.Uni v11;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst v6;
int v1;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
boolean v3, v4, v5;
io.smallrye.mutiny.groups.UniOnSubscribe v9;
io.smallrye.mutiny.Context v14;
java.util.function.Consumer v10, v15, v16;
java.util.List v7;
io.smallrye.mutiny.groups.UniSubscribe v12;
java.lang.Object v8;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 := @parameter0: int;
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
v5 = v4;
if v4 == 0 goto label3;
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v7 = v6.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v8 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(v1);
v9 = interfaceinvoke v8.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnSubscribe onSubscription()>();
v10 = staticinvoke <io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription$lambda_trySubscribe_0__2735: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription,int)>(v0, v1);
v11 = virtualinvoke v9.<io.smallrye.mutiny.groups.UniOnSubscribe: io.smallrye.mutiny.Uni invoke(java.util.function.Consumer)>(v10);
v12 = interfaceinvoke v11.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v13 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
v14 = interfaceinvoke v13.<io.smallrye.mutiny.subscription.UniSubscriber: io.smallrye.mutiny.Context context()>();
v15 = staticinvoke <io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription$onItem__2736: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription)>(v0);
v16 = staticinvoke <io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription$onFailure__2737: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription)>(v0);
virtualinvoke v12.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(io.smallrye.mutiny.Context,java.util.function.Consumer,java.util.function.Consumer)>(v14, v15, v16);
label3:
return v5;
}
private void onSubscribe(int, io.smallrye.mutiny.subscription.UniSubscription)
{
io.smallrye.mutiny.subscription.UniSubscription v2;
int v1;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
java.util.concurrent.atomic.AtomicBoolean v3;
boolean v4;
java.util.concurrent.atomic.AtomicReferenceArray v5;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 := @parameter0: int;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscription;
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v4 != 0 goto label1;
v5 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicReferenceArray subscriptions>;
virtualinvoke v5.<java.util.concurrent.atomic.AtomicReferenceArray: void set(int,java.lang.Object)>(v1, v2);
goto label2;
label1:
interfaceinvoke v2.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label2:
return;
}
public void cancel()
{
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
java.util.concurrent.atomic.AtomicBoolean v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
virtualinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: void set(boolean)>(1);
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: void cancelSubscriptions()>();
return;
}
private void cancelSubscriptions()
{
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst v2;
java.util.List v3;
int v1, v4;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
java.lang.Object v6;
java.util.concurrent.atomic.AtomicReferenceArray v5;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 = 0;
label1:
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v3 = v2.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v1 >= v4 goto label3;
v5 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicReferenceArray subscriptions>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicReferenceArray: java.lang.Object get(int)>(v1);
if v6 == null goto label2;
interfaceinvoke v6.<io.smallrye.mutiny.subscription.UniSubscription: void cancel()>();
label2:
v1 = v1 + 1;
goto label1;
label3:
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
java.util.concurrent.atomic.AtomicBoolean v2;
java.lang.Object v1;
io.smallrye.mutiny.subscription.UniSubscriber v4;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v3 == 0 goto label1;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: void cancelSubscriptions()>();
v4 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
interfaceinvoke v4.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v1);
label1:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
java.util.concurrent.atomic.AtomicBoolean v18, v2, v9;
io.smallrye.mutiny.subscription.UniSubscriber v11, v20;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst v15, v23, v28, v5;
int[] v4;
java.util.concurrent.atomic.AtomicInteger v26;
int v14, v17, v24, v25, v27, v30, v7, v8;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription v0;
boolean v10, v19, v3;
io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$Mode v6;
io.smallrye.mutiny.CompositeException v21;
java.util.List v12, v13, v16, v22, v29;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v3 == 0 goto label1;
return;
label1:
v4 = <io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$1: int[] $SwitchMap$io$smallrye$mutiny$operators$uni$builders$UniJoinFirst$Mode>;
v5 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v6 = v5.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$Mode mode>;
v7 = virtualinvoke v6.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$Mode: int ordinal()>();
v8 = v4[v7];
lookupswitch(v8)
{
case 1: goto label2;
case 2: goto label3;
default: goto label5;
};
label2:
v9 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v10 = virtualinvoke v9.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v10 == 0 goto label5;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: void cancelSubscriptions()>();
v11 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
interfaceinvoke v11.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label5;
label3:
v12 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.List failures>;
interfaceinvoke v12.<java.util.List: boolean add(java.lang.Object)>(v1);
v13 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.List failures>;
v14 = interfaceinvoke v13.<java.util.List: int size()>();
v15 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v16 = v15.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v17 = interfaceinvoke v16.<java.util.List: int size()>();
if v14 != v17 goto label4;
v18 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v19 = virtualinvoke v18.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v19 == 0 goto label5;
v20 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.subscription.UniSubscriber subscriber>;
v21 = new io.smallrye.mutiny.CompositeException;
v22 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.List failures>;
specialinvoke v21.<io.smallrye.mutiny.CompositeException: void <init>(java.util.List)>(v22);
interfaceinvoke v20.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v21);
goto label5;
label4:
v23 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v24 = v23.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: int concurrency>;
v25 = (int) -1;
if v24 == v25 goto label5;
v26 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: java.util.concurrent.atomic.AtomicInteger nextSubscriptionIndex>;
v27 = virtualinvoke v26.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
v28 = v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: io.smallrye.mutiny.operators.uni.builders.UniJoinFirst this$0>;
v29 = v28.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst: java.util.List unis>;
v30 = interfaceinvoke v29.<java.util.List: int size()>();
if v27 >= v30 goto label5;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.builders.UniJoinFirst$UniJoinFirstSubscription: boolean trySubscribe(int)>(v27);
label5:
return;
}
}