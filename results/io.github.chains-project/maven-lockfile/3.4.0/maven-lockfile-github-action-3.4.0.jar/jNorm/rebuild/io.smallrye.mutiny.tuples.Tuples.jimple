public abstract class io.smallrye.mutiny.tuples.Tuples extends java.lang.Object
{
private void <init>()
{
io.smallrye.mutiny.tuples.Tuples v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuples;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static io.smallrye.mutiny.tuples.Tuple2 tuple2(java.util.List)
{
io.smallrye.mutiny.tuples.Tuple2 v9;
java.lang.IllegalArgumentException v3;
java.util.List v0;
int v2, v5;
java.lang.Object v1, v4, v7, v8;
java.lang.String v6;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 2 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 2 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = staticinvoke <io.smallrye.mutiny.tuples.Tuple2: io.smallrye.mutiny.tuples.Tuple2 of(java.lang.Object,java.lang.Object)>(v7, v8);
return v9;
}
public static io.smallrye.mutiny.tuples.Tuple3 tuple3(java.util.List)
{
io.smallrye.mutiny.tuples.Tuple3 v10;
java.lang.IllegalArgumentException v3;
java.util.List v0;
int v2, v5;
java.lang.Object v1, v4, v7, v8, v9;
java.lang.String v6;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 3 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 3 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = staticinvoke <io.smallrye.mutiny.tuples.Tuple3: io.smallrye.mutiny.tuples.Tuple3 of(java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9);
return v10;
}
public static io.smallrye.mutiny.tuples.Tuple4 tuple4(java.util.List)
{
io.smallrye.mutiny.tuples.Tuple4 v11;
java.lang.IllegalArgumentException v3;
java.util.List v0;
int v2, v5;
java.lang.Object v1, v10, v4, v7, v8, v9;
java.lang.String v6;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 4 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 4 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(3);
v11 = staticinvoke <io.smallrye.mutiny.tuples.Tuple4: io.smallrye.mutiny.tuples.Tuple4 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9, v10);
return v11;
}
public static io.smallrye.mutiny.tuples.Tuple5 tuple5(java.util.List)
{
io.smallrye.mutiny.tuples.Tuple5 v12;
java.lang.IllegalArgumentException v3;
java.util.List v0;
int v2, v5;
java.lang.Object v1, v10, v11, v4, v7, v8, v9;
java.lang.String v6;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 5 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 5 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(3);
v11 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(4);
v12 = staticinvoke <io.smallrye.mutiny.tuples.Tuple5: io.smallrye.mutiny.tuples.Tuple5 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9, v10, v11);
return v12;
}
public static io.smallrye.mutiny.tuples.Tuple6 tuple6(java.util.List)
{
io.smallrye.mutiny.tuples.Tuple6 v13;
java.lang.IllegalArgumentException v3;
java.util.List v0;
int v2, v5;
java.lang.Object v1, v10, v11, v12, v4, v7, v8, v9;
java.lang.String v6;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 6 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 6 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(3);
v11 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(4);
v12 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(5);
v13 = staticinvoke <io.smallrye.mutiny.tuples.Tuple6: io.smallrye.mutiny.tuples.Tuple6 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9, v10, v11, v12);
return v13;
}
public static io.smallrye.mutiny.tuples.Tuple7 tuple7(java.util.List)
{
io.smallrye.mutiny.tuples.Tuple7 v14;
java.lang.IllegalArgumentException v3;
java.util.List v0;
int v2, v5;
java.lang.Object v1, v10, v11, v12, v13, v4, v7, v8, v9;
java.lang.String v6;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 7 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 7 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(3);
v11 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(4);
v12 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(5);
v13 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(6);
v14 = staticinvoke <io.smallrye.mutiny.tuples.Tuple7: io.smallrye.mutiny.tuples.Tuple7 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9, v10, v11, v12, v13);
return v14;
}
public static io.smallrye.mutiny.tuples.Tuple8 tuple8(java.util.List)
{
int v2, v5;
java.lang.String v6;
java.lang.IllegalArgumentException v3;
io.smallrye.mutiny.tuples.Tuple8 v15;
java.util.List v0;
java.lang.Object v1, v10, v11, v12, v13, v14, v4, v7, v8, v9;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 8 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 8 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(3);
v11 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(4);
v12 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(5);
v13 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(6);
v14 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(7);
v15 = staticinvoke <io.smallrye.mutiny.tuples.Tuple8: io.smallrye.mutiny.tuples.Tuple8 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9, v10, v11, v12, v13, v14);
return v15;
}
public static io.smallrye.mutiny.tuples.Tuple9 tuple9(java.util.List)
{
int v2, v5;
java.lang.String v6;
java.lang.IllegalArgumentException v3;
io.smallrye.mutiny.tuples.Tuple9 v16;
java.util.List v0;
java.lang.Object v1, v10, v11, v12, v13, v14, v15, v4, v7, v8, v9;
v0 := @parameter0: java.util.List;
v1 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 == 9 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v0, "list");
v5 = interfaceinvoke v4.<java.util.List: int size()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot create a tuple from the given list, size must be 9 (actual size is \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v3;
label1:
v7 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(0);
v8 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(1);
v9 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(2);
v10 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(3);
v11 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(4);
v12 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(5);
v13 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(6);
v14 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(7);
v15 = interfaceinvoke v0.<java.util.List: java.lang.Object get(int)>(8);
v16 = staticinvoke <io.smallrye.mutiny.tuples.Tuple9: io.smallrye.mutiny.tuples.Tuple9 of(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v7, v8, v9, v10, v11, v12, v13, v14, v15);
return v16;
}
public static void ensureArity(java.util.List, int)
{
java.util.List v0;
int v1, v2, v4;
java.lang.String v5;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: java.util.List;
v1 := @parameter1: int;
v2 = interfaceinvoke v0.<java.util.List: int size()>();
if v2 == v1 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = interfaceinvoke v0.<java.util.List: int size()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot call combinator from list. Expected size: \u0001, Actual size: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
return;
}
}