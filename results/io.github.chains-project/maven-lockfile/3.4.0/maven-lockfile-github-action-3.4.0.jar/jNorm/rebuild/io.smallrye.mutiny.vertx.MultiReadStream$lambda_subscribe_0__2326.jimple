public final class io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326 extends java.lang.Object implements io.vertx.core.Handler
{
io.smallrye.mutiny.vertx.MultiReadStream cap0;
java.util.concurrent.Flow$Subscriber cap1;
public static io.vertx.core.Handler bootstrap$(io.smallrye.mutiny.vertx.MultiReadStream, java.util.concurrent.Flow$Subscriber)
{
io.smallrye.mutiny.vertx.MultiReadStream v0;
java.util.concurrent.Flow$Subscriber v1;
io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326 v2;
v0 := @parameter0: io.smallrye.mutiny.vertx.MultiReadStream;
v1 := @parameter1: java.util.concurrent.Flow$Subscriber;
v2 = new io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326;
specialinvoke v2.<io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326: void <init>(io.smallrye.mutiny.vertx.MultiReadStream,java.util.concurrent.Flow$Subscriber)>(v0, v1);
return v2;
}
public void <init>(io.smallrye.mutiny.vertx.MultiReadStream, java.util.concurrent.Flow$Subscriber)
{
io.smallrye.mutiny.vertx.MultiReadStream v1;
java.util.concurrent.Flow$Subscriber v2;
io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326 v0;
v0 := @this: io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326;
v1 := @parameter0: io.smallrye.mutiny.vertx.MultiReadStream;
v2 := @parameter1: java.util.concurrent.Flow$Subscriber;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326: io.smallrye.mutiny.vertx.MultiReadStream cap0> = v1;
v0.<io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326: java.util.concurrent.Flow$Subscriber cap1> = v2;
return;
}
public void handle(java.lang.Object)
{
java.util.concurrent.Flow$Subscriber v3;
io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326 v0;
io.smallrye.mutiny.vertx.MultiReadStream v2;
java.lang.Object v1;
v0 := @this: io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326: io.smallrye.mutiny.vertx.MultiReadStream cap0>;
v3 = v0.<io.smallrye.mutiny.vertx.MultiReadStream$lambda_subscribe_0__2326: java.util.concurrent.Flow$Subscriber cap1>;
specialinvoke v2.<io.smallrye.mutiny.vertx.MultiReadStream: void lambda$subscribe$0(java.util.concurrent.Flow$Subscriber,java.lang.Void)>(v3, v1);
return;
}
}