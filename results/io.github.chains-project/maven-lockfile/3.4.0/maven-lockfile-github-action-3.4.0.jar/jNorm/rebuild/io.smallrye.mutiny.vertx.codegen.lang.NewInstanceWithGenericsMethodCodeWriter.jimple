public class io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter extends java.lang.Object implements io.smallrye.mutiny.vertx.codegen.lang.ConditionalCodeWriter
{
public void <init>()
{
io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void generate(io.vertx.codegen.ClassModel, java.io.PrintWriter)
{
java.lang.String v13, v14, v15, v16, v17, v19, v24, v4, v5, v6, v7;
boolean v10, v18, v22;
io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter v0;
java.io.PrintWriter v2;
io.vertx.codegen.type.ClassTypeInfo v3;
java.util.Iterator v21, v9;
io.vertx.codegen.ClassModel v1;
java.util.List v20, v8;
java.lang.Class v12;
java.lang.Object v11, v23;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: java.io.PrintWriter;
v3 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
virtualinvoke v2.<java.io.PrintWriter: void println()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("  public static ");
v4 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genOptTypeParamsDecl(io.vertx.codegen.type.ClassTypeInfo,java.lang.String)>(v3, " ");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v4);
v5 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getSimpleName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v5);
v6 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genOptTypeParamsDecl(io.vertx.codegen.type.ClassTypeInfo,java.lang.String)>(v3, "");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v6);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(" newInstance(");
v7 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v7);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(" arg");
v8 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.util.List getParams()>();
v9 = interfaceinvoke v8.<java.util.List: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label2;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = class "Lio/smallrye/mutiny/vertx/TypeArg;";
v13 = virtualinvoke v12.<java.lang.Class: java.lang.String getName()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(", \u0001<");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v14);
v15 = virtualinvoke v11.<io.vertx.codegen.TypeParamInfo: java.lang.String getName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v15);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("> __typeArg_");
v16 = virtualinvoke v11.<io.vertx.codegen.TypeParamInfo: java.lang.String getName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v16);
goto label1;
label2:
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(") {");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("    return arg != null ? new ");
v17 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getSimpleName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v17);
v18 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isConcrete()>();
if v18 != 0 goto label3;
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("Impl");
label3:
v19 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genOptTypeParamsDecl(io.vertx.codegen.type.ClassTypeInfo,java.lang.String)>(v3, "");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v19);
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("(arg");
v20 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.util.List getParams()>();
v21 = interfaceinvoke v20.<java.util.List: java.util.Iterator iterator()>();
label4:
v22 = interfaceinvoke v21.<java.util.Iterator: boolean hasNext()>();
if v22 == 0 goto label5;
v23 = interfaceinvoke v21.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(", __typeArg_");
v24 = virtualinvoke v23.<io.vertx.codegen.TypeParamInfo: java.lang.String getName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v24);
goto label4;
label5:
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>(") : null;");
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>("  }");
virtualinvoke v2.<java.io.PrintWriter: void println()>();
return;
}
public boolean test(io.vertx.codegen.ClassModel)
{
io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter v0;
io.vertx.codegen.type.ClassTypeInfo v2;
java.util.List v3;
io.vertx.codegen.ClassModel v1;
boolean v4, v5;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.NewInstanceWithGenericsMethodCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v3 = virtualinvoke v2.<io.vertx.codegen.type.ClassTypeInfo: java.util.List getParams()>();
v4 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
}