public class io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator extends io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator
{
private final java.util.List cacheDecls;
private final java.util.Map methodTypeArgMap;
public void <init>(java.io.PrintWriter, java.util.List, java.util.Map)
{
java.io.PrintWriter v1;
java.util.List v2;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
java.util.Map v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: java.io.PrintWriter;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodGenerator: void <init>(java.io.PrintWriter)>(v1);
v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.List cacheDecls> = v2;
v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.Map methodTypeArgMap> = v3;
return;
}
public void generateDeclaration(io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v3, v4;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
io.vertx.codegen.MethodInfo v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.MethodInfo)>(v1);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v2);
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v3.<java.io.PrintWriter: void println(java.lang.String)>(";");
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println()>();
return;
}
public void generate(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v4;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v3;
io.vertx.codegen.MethodInfo v2;
io.vertx.codegen.ClassModel v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.MethodInfo)>(v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateBody(io.vertx.codegen.ClassModel,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v1, v3);
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println()>();
return;
}
private void generateBody(io.vertx.codegen.ClassModel, io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)
{
java.util.Map v48;
java.io.PrintWriter v12, v13, v16, v17, v21, v22, v24, v26, v27, v3, v30, v31, v32, v35, v36, v43, v44, v46, v47, v51, v53, v54, v57, v6, v64, v65, v7, v9;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
java.lang.String v15, v19, v23, v42, v45, v49, v50, v60, v63, v8;
io.vertx.codegen.type.ClassTypeInfo v41;
io.vertx.codegen.type.ClassKind v39, v40;
boolean v11, v20, v25, v5, v52, v59;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.vertx.codegen.type.TypeInfo v10, v14, v18, v37, v38;
io.vertx.codegen.ClassModel v1;
java.util.List v28, v33, v55, v58, v61;
int v29, v34, v56, v62;
io.vertx.codegen.MethodInfo v4;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v3 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v3.<java.io.PrintWriter: void println(java.lang.String)>(" { ");
v4 = virtualinvoke v2.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo getOriginalMethod()>();
v5 = virtualinvoke v2.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isFluent()>();
if v5 == 0 goto label02;
v6 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v6.<java.io.PrintWriter: void print(java.lang.String)>("    ");
v7 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v8 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.lang.String genInvokeDelegate(io.vertx.codegen.ClassModel,io.vertx.codegen.MethodInfo)>(v1, v4);
virtualinvoke v7.<java.io.PrintWriter: void print(java.lang.String)>(v8);
v9 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v9.<java.io.PrintWriter: void println(java.lang.String)>(";");
v10 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v11 = virtualinvoke v10.<io.vertx.codegen.type.TypeInfo: boolean isVariable()>();
if v11 == 0 goto label01;
v12 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v12.<java.io.PrintWriter: void print(java.lang.String)>("    return (");
v13 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v14 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v15 = virtualinvoke v14.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
virtualinvoke v13.<java.io.PrintWriter: void print(java.lang.String)>(v15);
v16 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v16.<java.io.PrintWriter: void println(java.lang.String)>(") this;");
goto label10;
label01:
v17 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v17.<java.io.PrintWriter: void println(java.lang.String)>("    return this;");
goto label10;
label02:
v18 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v19 = virtualinvoke v18.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
v20 = virtualinvoke v19.<java.lang.String: boolean equals(java.lang.Object)>("void");
if v20 == 0 goto label03;
v21 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v21.<java.io.PrintWriter: void print(java.lang.String)>("    ");
v22 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v23 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.lang.String genInvokeDelegate(io.vertx.codegen.ClassModel,io.vertx.codegen.MethodInfo)>(v1, v4);
virtualinvoke v22.<java.io.PrintWriter: void print(java.lang.String)>(v23);
v24 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v24.<java.io.PrintWriter: void println(java.lang.String)>(";");
goto label10;
label03:
v25 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: boolean isCacheReturn()>();
if v25 == 0 goto label04;
v26 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v26.<java.io.PrintWriter: void print(java.lang.String)>("    if (cached_");
v27 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v28 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.List cacheDecls>;
v29 = interfaceinvoke v28.<java.util.List: int size()>();
virtualinvoke v27.<java.io.PrintWriter: void print(int)>(v29);
v30 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v30.<java.io.PrintWriter: void println(java.lang.String)>(" != null) {");
v31 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v31.<java.io.PrintWriter: void print(java.lang.String)>("      return cached_");
v32 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v33 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.List cacheDecls>;
v34 = interfaceinvoke v33.<java.util.List: int size()>();
virtualinvoke v32.<java.io.PrintWriter: void print(int)>(v34);
v35 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v35.<java.io.PrintWriter: void println(java.lang.String)>(";");
v36 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v36.<java.io.PrintWriter: void println(java.lang.String)>("    }");
label04:
v37 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v38 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: io.vertx.codegen.type.TypeInfo getReturnType()>();
v39 = virtualinvoke v38.<io.vertx.codegen.type.TypeInfo: io.vertx.codegen.type.ClassKind getKind()>();
v40 = <io.vertx.codegen.type.ClassKind: io.vertx.codegen.type.ClassKind PRIMITIVE>;
if v39 != v40 goto label05;
v41 = virtualinvoke v37.<io.vertx.codegen.type.PrimitiveTypeInfo: io.vertx.codegen.type.ClassTypeInfo getBoxed()>();
v42 = virtualinvoke v41.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
goto label06;
label05:
v42 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genTranslatedTypeName(io.vertx.codegen.type.TypeInfo)>(v37);
label06:
v43 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v43.<java.io.PrintWriter: void print(java.lang.String)>("    ");
v44 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v45 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genTranslatedTypeName(io.vertx.codegen.type.TypeInfo)>(v37);
virtualinvoke v44.<java.io.PrintWriter: void print(java.lang.String)>(v45);
v46 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v46.<java.io.PrintWriter: void print(java.lang.String)>(" ret = ");
v47 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v48 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.Map methodTypeArgMap>;
v49 = virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.lang.String genInvokeDelegate(io.vertx.codegen.ClassModel,io.vertx.codegen.MethodInfo)>(v1, v4);
v50 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genConvReturn(java.util.Map,io.vertx.codegen.type.TypeInfo,io.vertx.codegen.MethodInfo,java.lang.String)>(v48, v37, v4, v49);
virtualinvoke v47.<java.io.PrintWriter: void print(java.lang.String)>(v50);
v51 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v51.<java.io.PrintWriter: void println(java.lang.String)>(";");
v52 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: boolean isCacheReturn()>();
if v52 == 0 goto label09;
v53 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v53.<java.io.PrintWriter: void print(java.lang.String)>("    cached_");
v54 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
v55 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.List cacheDecls>;
v56 = interfaceinvoke v55.<java.util.List: int size()>();
virtualinvoke v54.<java.io.PrintWriter: void print(int)>(v56);
v57 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v57.<java.io.PrintWriter: void println(java.lang.String)>(" = ret;");
v58 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.List cacheDecls>;
v59 = virtualinvoke v4.<io.vertx.codegen.MethodInfo: boolean isStaticMethod()>();
if v59 == 0 goto label07;
v60 = " static";
goto label08;
label07:
v60 = "";
label08:
v61 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.List cacheDecls>;
v62 = interfaceinvoke v61.<java.util.List: int size()>();
v63 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,int)>(v60, v42, v62) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("private\u0001 \u0001 cached_\u0001");
interfaceinvoke v58.<java.util.List: boolean add(java.lang.Object)>(v63);
label09:
v64 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v64.<java.io.PrintWriter: void println(java.lang.String)>("    return ret;");
label10:
v65 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v65.<java.io.PrintWriter: void println(java.lang.String)>("  }");
return;
}
private io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfo(io.vertx.codegen.MethodInfo)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v7;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
java.lang.String v4, v5;
io.vertx.codegen.MethodInfo v1, v3, v6;
boolean v8;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = new io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v3 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo copy()>();
v4 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("__\u0001");
v6 = virtualinvoke v3.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo setName(java.lang.String)>(v5);
v7 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind SIMPLE>;
v8 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: boolean isFluent()>();
specialinvoke v2.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind,boolean,boolean)>(v6, v1, v7, v8, 1);
return v2;
}
private io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.MethodInfo)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v4;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v2;
io.vertx.codegen.MethodInfo v1, v3;
boolean v5;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 = new io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v3 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: io.vertx.codegen.MethodInfo copy()>();
v4 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind SIMPLE>;
v5 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: boolean isFluent()>();
specialinvoke v2.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind,boolean)>(v3, v1, v4, v5);
return v2;
}
public java.lang.String genInvokeDelegate(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.util.Map v36;
boolean v15, v18, v21, v23, v3;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.vertx.codegen.type.TypeInfo v17, v22, v25;
io.vertx.codegen.ClassModel v1;
java.util.List v13;
java.lang.StringBuilder v11, v30, v31, v33, v34, v35, v4, v7, v8, v9;
int v12;
java.lang.String v10, v20, v24, v27, v29, v32, v37, v38, v39, v5, v6;
io.vertx.codegen.type.ClassTypeInfo v19, v26;
java.util.Iterator v14;
java.lang.Class v28;
java.lang.Object v16;
io.vertx.codegen.MethodInfo v2;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: boolean isStaticMethod()>();
if v3 == 0 goto label1;
v4 = new java.lang.StringBuilder;
v5 = virtualinvoke v1.<io.vertx.codegen.ClassModel: java.lang.String getIfaceFQCN()>();
v6 = staticinvoke <io.vertx.codegen.Helper: java.lang.String getNonGenericType(java.lang.String)>(v5);
specialinvoke v4.<java.lang.StringBuilder: void <init>(java.lang.String)>(v6);
v7 = v4;
goto label2;
label1:
v8 = new java.lang.StringBuilder;
specialinvoke v8.<java.lang.StringBuilder: void <init>(java.lang.String)>("delegate");
v7 = v8;
label2:
v9 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
v10 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
v11 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v10);
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
v12 = 0;
v13 = virtualinvoke v2.<io.vertx.codegen.MethodInfo: java.util.List getParams()>();
v14 = interfaceinvoke v13.<java.util.List: java.util.Iterator iterator()>();
label3:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label9;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
if v12 <= 0 goto label4;
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label4:
v17 = virtualinvoke v16.<io.vertx.codegen.ParamInfo: io.vertx.codegen.type.TypeInfo getType()>();
v18 = virtualinvoke v17.<io.vertx.codegen.type.TypeInfo: boolean isParameterized()>();
if v18 == 0 goto label7;
v19 = virtualinvoke v17.<io.vertx.codegen.type.TypeInfo: io.vertx.codegen.type.ClassTypeInfo getRaw()>();
v20 = virtualinvoke v19.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
v21 = virtualinvoke v20.<java.lang.String: boolean equals(java.lang.Object)>("java.util.concurrent.Flow$Publisher");
if v21 == 0 goto label7;
v22 = virtualinvoke v17.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.TypeInfo getArg(int)>(0);
v23 = virtualinvoke v22.<io.vertx.codegen.type.TypeInfo: boolean isVariable()>();
if v23 == 0 goto label5;
v24 = "java.util.function.Function.identity()";
goto label6;
label5:
v25 = virtualinvoke v17.<io.vertx.codegen.type.ParameterizedTypeInfo: io.vertx.codegen.type.TypeInfo getArg(int)>(0);
v26 = virtualinvoke v25.<io.vertx.codegen.type.TypeInfo: io.vertx.codegen.type.ClassTypeInfo getRaw()>();
v27 = virtualinvoke v26.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
v24 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v27) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("obj -> (\u0001)obj.getDelegate()");
label6:
v28 = class "Lio/smallrye/mutiny/vertx/ReadStreamSubscriber;";
v29 = virtualinvoke v28.<java.lang.Class: java.lang.String getName()>();
v30 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v29);
v31 = virtualinvoke v30.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".asReadStream(");
v32 = virtualinvoke v16.<io.vertx.codegen.ParamInfo: java.lang.String getName()>();
v33 = virtualinvoke v31.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v32);
v34 = virtualinvoke v33.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
v35 = virtualinvoke v34.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v24);
virtualinvoke v35.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(").resume()");
goto label8;
label7:
v36 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.util.Map methodTypeArgMap>;
v37 = virtualinvoke v16.<io.vertx.codegen.ParamInfo: java.lang.String getName()>();
v38 = staticinvoke <io.smallrye.mutiny.vertx.codegen.lang.CodeGenHelper: java.lang.String genConvParam(java.util.Map,io.vertx.codegen.type.TypeInfo,io.vertx.codegen.MethodInfo,java.lang.String)>(v36, v17, v2, v37);
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v38);
label8:
v12 = v12 + 1;
goto label3;
label9:
virtualinvoke v7.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
v39 = virtualinvoke v7.<java.lang.StringBuilder: java.lang.String toString()>();
return v39;
}
public void generateOther(io.vertx.codegen.ClassModel, io.vertx.codegen.MethodInfo)
{
java.io.PrintWriter v4;
io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator v0;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v3;
io.vertx.codegen.MethodInfo v2;
io.vertx.codegen.ClassModel v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 = specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor computeMethodInfoOther(io.vertx.codegen.MethodInfo)>(v2);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateJavadoc(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
virtualinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateMethodDeclaration(io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v3);
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: void generateBody(io.vertx.codegen.ClassModel,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor)>(v1, v3);
v4 = v0.<io.smallrye.mutiny.vertx.codegen.methods.SimpleMethodGenerator: java.io.PrintWriter writer>;
virtualinvoke v4.<java.io.PrintWriter: void println()>();
return;
}
}