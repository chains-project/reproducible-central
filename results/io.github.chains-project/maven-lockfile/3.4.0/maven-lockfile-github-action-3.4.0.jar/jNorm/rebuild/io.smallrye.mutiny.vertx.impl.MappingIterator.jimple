public class io.smallrye.mutiny.vertx.impl.MappingIterator extends java.lang.Object implements java.util.Iterator
{
private final java.util.Iterator iterator;
private final java.util.function.Function mapping;
public void <init>(java.util.Iterator, java.util.function.Function)
{
java.util.Iterator v1;
java.util.function.Function v2;
io.smallrye.mutiny.vertx.impl.MappingIterator v0;
v0 := @this: io.smallrye.mutiny.vertx.impl.MappingIterator;
v1 := @parameter0: java.util.Iterator;
v2 := @parameter1: java.util.function.Function;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.vertx.impl.MappingIterator: java.util.Iterator iterator> = v1;
v0.<io.smallrye.mutiny.vertx.impl.MappingIterator: java.util.function.Function mapping> = v2;
return;
}
public boolean hasNext()
{
java.util.Iterator v1;
boolean v2;
io.smallrye.mutiny.vertx.impl.MappingIterator v0;
v0 := @this: io.smallrye.mutiny.vertx.impl.MappingIterator;
v1 = v0.<io.smallrye.mutiny.vertx.impl.MappingIterator: java.util.Iterator iterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.lang.Object next()
{
java.util.Iterator v2;
java.lang.Object v3, v4;
java.util.function.Function v1;
io.smallrye.mutiny.vertx.impl.MappingIterator v0;
v0 := @this: io.smallrye.mutiny.vertx.impl.MappingIterator;
v1 = v0.<io.smallrye.mutiny.vertx.impl.MappingIterator: java.util.function.Function mapping>;
v2 = v0.<io.smallrye.mutiny.vertx.impl.MappingIterator: java.util.Iterator iterator>;
v3 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v4 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
return v4;
}
}