public interface  io.smallrye.stork.api.ServiceInstance extends java.lang.Object
{
public abstract long getId();
public abstract java.lang.String getHost();
public abstract int getPort();
public abstract java.util.Optional getPath();
public abstract boolean isSecure();
public io.smallrye.stork.api.Metadata getMetadata()
{
io.smallrye.stork.api.ServiceInstance v0;
io.smallrye.stork.api.Metadata v1;
v0 := @this: io.smallrye.stork.api.ServiceInstance;
v1 = staticinvoke <io.smallrye.stork.api.Metadata: io.smallrye.stork.api.Metadata empty()>();
return v1;
}
public java.util.Map getLabels()
{
io.smallrye.stork.api.ServiceInstance v0;
java.util.Map v1;
v0 := @this: io.smallrye.stork.api.ServiceInstance;
v1 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
return v1;
}
public boolean gatherStatistics()
{
io.smallrye.stork.api.ServiceInstance v0;
v0 := @this: io.smallrye.stork.api.ServiceInstance;
return 0;
}
public void recordStart(boolean)
{
io.smallrye.stork.api.ServiceInstance v0;
boolean v1;
v0 := @this: io.smallrye.stork.api.ServiceInstance;
v1 := @parameter0: boolean;
return;
}
public void recordReply()
{
io.smallrye.stork.api.ServiceInstance v0;
v0 := @this: io.smallrye.stork.api.ServiceInstance;
return;
}
public void recordEnd(java.lang.Throwable)
{
io.smallrye.stork.api.ServiceInstance v0;
java.lang.Throwable v1;
v0 := @this: io.smallrye.stork.api.ServiceInstance;
v1 := @parameter0: java.lang.Throwable;
return;
}
}