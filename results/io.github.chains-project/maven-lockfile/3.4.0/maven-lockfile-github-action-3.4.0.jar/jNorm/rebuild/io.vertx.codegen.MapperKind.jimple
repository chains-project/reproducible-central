public final enum class io.vertx.codegen.MapperKind extends java.lang.Enum
{
public static final enum io.vertx.codegen.MapperKind SELF;
public static final enum io.vertx.codegen.MapperKind STATIC_METHOD;
private static final io.vertx.codegen.MapperKind[] $VALUES;
public static io.vertx.codegen.MapperKind[] values()
{
java.lang.Object v1;
io.vertx.codegen.MapperKind[] v0;
v0 = <io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.vertx.codegen.MapperKind valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/vertx/codegen/MapperKind;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
io.vertx.codegen.MapperKind v0;
java.lang.String v1;
v0 := @this: io.vertx.codegen.MapperKind;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public static java.util.Map vars()
{
io.vertx.codegen.MapperKind[] v1;
int v2, v3;
io.vertx.codegen.MapperKind v4;
java.util.HashMap v0;
java.lang.String v5, v6;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
v1 = staticinvoke <io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<io.vertx.codegen.MapperKind: java.lang.String name()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("MAPPER_\u0001");
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
private static io.vertx.codegen.MapperKind[] $values()
{
io.vertx.codegen.MapperKind v1, v2;
io.vertx.codegen.MapperKind[] v0;
v0 = newarray (io.vertx.codegen.MapperKind)[2];
v1 = <io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind SELF>;
v0[0] = v1;
v2 = <io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind STATIC_METHOD>;
v0[1] = v2;
return v0;
}
static void <clinit>()
{
io.vertx.codegen.MapperKind v0, v1;
io.vertx.codegen.MapperKind[] v2;
v0 = new io.vertx.codegen.MapperKind;
specialinvoke v0.<io.vertx.codegen.MapperKind: void <init>(java.lang.String,int)>("SELF", 0);
<io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind SELF> = v0;
v1 = new io.vertx.codegen.MapperKind;
specialinvoke v1.<io.vertx.codegen.MapperKind: void <init>(java.lang.String,int)>("STATIC_METHOD", 1);
<io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind STATIC_METHOD> = v1;
v2 = staticinvoke <io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind[] $values()>();
<io.vertx.codegen.MapperKind: io.vertx.codegen.MapperKind[] $VALUES> = v2;
return;
}
}