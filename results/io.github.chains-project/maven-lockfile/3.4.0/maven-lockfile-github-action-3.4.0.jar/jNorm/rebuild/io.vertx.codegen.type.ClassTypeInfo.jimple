public class io.vertx.codegen.type.ClassTypeInfo extends io.vertx.codegen.type.TypeInfo
{
static final java.util.HashMap PRIMITIVES;
final io.vertx.codegen.type.ClassKind kind;
final java.lang.String name;
final java.lang.String simpleName;
final java.lang.String packageName;
final io.vertx.codegen.ModuleInfo module;
final boolean nullable;
final java.util.List params;
final io.vertx.codegen.type.DataObjectInfo dataObject;
public void <init>(io.vertx.codegen.type.ClassKind, java.lang.String, io.vertx.codegen.ModuleInfo, boolean, java.util.List, io.vertx.codegen.type.DataObjectInfo)
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.type.DataObjectInfo v6;
java.util.List v5;
io.vertx.codegen.ModuleInfo v3;
java.lang.String v2, v7, v8;
io.vertx.codegen.type.ClassKind v1;
boolean v4;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.ClassKind;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.codegen.ModuleInfo;
v4 := @parameter3: boolean;
v5 := @parameter4: java.util.List;
v6 := @parameter5: io.vertx.codegen.type.DataObjectInfo;
specialinvoke v0.<io.vertx.codegen.type.TypeInfo: void <init>()>();
v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.type.ClassKind kind> = v1;
v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name> = v2;
v7 = staticinvoke <io.vertx.codegen.Helper: java.lang.String getSimpleName(java.lang.String)>(v2);
v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String simpleName> = v7;
v8 = staticinvoke <io.vertx.codegen.Helper: java.lang.String getPackageName(java.lang.String)>(v2);
v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String packageName> = v8;
v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module> = v3;
v0.<io.vertx.codegen.type.ClassTypeInfo: boolean nullable> = v4;
v0.<io.vertx.codegen.type.ClassTypeInfo: java.util.List params> = v5;
v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.type.DataObjectInfo dataObject> = v6;
return;
}
public java.util.List getParams()
{
io.vertx.codegen.type.ClassTypeInfo v0;
java.util.List v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.util.List params>;
return v1;
}
public java.lang.String getModuleName()
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.ModuleInfo v1, v2;
java.lang.String v3;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
if v1 == null goto label1;
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
v3 = virtualinvoke v2.<io.vertx.codegen.ModuleInfo: java.lang.String getName()>();
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public io.vertx.codegen.ModuleInfo getModule()
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.ModuleInfo v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
return v1;
}
public boolean isNullable()
{
io.vertx.codegen.type.ClassTypeInfo v0;
boolean v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: boolean nullable>;
return v1;
}
public io.vertx.codegen.type.ClassKind getKind()
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.type.ClassKind v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.type.ClassKind kind>;
return v1;
}
public java.lang.String getPackageName()
{
io.vertx.codegen.type.ClassTypeInfo v0;
java.lang.String v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String packageName>;
return v1;
}
public java.lang.String getSimpleName(io.vertx.codegen.format.Case)
{
io.vertx.codegen.type.ClassTypeInfo v0;
java.util.List v4;
io.vertx.codegen.format.Case v1, v2;
java.lang.String v3, v5;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: io.vertx.codegen.format.Case;
v2 = <io.vertx.codegen.format.CamelCase: io.vertx.codegen.format.Case INSTANCE>;
v3 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String simpleName>;
v4 = virtualinvoke v2.<io.vertx.codegen.format.Case: java.util.List parse(java.lang.String)>(v3);
v5 = virtualinvoke v1.<io.vertx.codegen.format.Case: java.lang.String format(java.lang.Iterable)>(v4);
return v5;
}
public io.vertx.codegen.type.ClassTypeInfo getRaw()
{
io.vertx.codegen.type.ClassTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
return v0;
}
public void collectImports(java.util.Collection)
{
io.vertx.codegen.type.ClassTypeInfo v0;
java.util.Collection v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: java.util.Collection;
interfaceinvoke v1.<java.util.Collection: boolean add(java.lang.Object)>(v0);
return;
}
public io.vertx.codegen.type.DataObjectInfo getDataObject()
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.type.DataObjectInfo v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.type.DataObjectInfo dataObject>;
return v1;
}
public boolean equals(java.lang.Object)
{
io.vertx.codegen.type.ClassTypeInfo v0;
java.lang.Object v1;
java.lang.String v3, v4;
boolean v2, v5;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.vertx.codegen.type.ClassTypeInfo;
if v2 == 0 goto label1;
v3 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
v4 = v1.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
return v5;
label1:
return 0;
}
public java.lang.String format(boolean)
{
io.vertx.codegen.type.ClassTypeInfo v0;
java.lang.String v2;
boolean v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: boolean;
if v1 == 0 goto label1;
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
goto label2;
label1:
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String simpleName>;
label2:
return v2;
}
public java.lang.String translateName(java.lang.String)
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.ModuleInfo v2, v4;
java.lang.String v1, v3, v5;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
if v2 != null goto label1;
v3 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
goto label2;
label1:
v4 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
v5 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
v3 = virtualinvoke v4.<io.vertx.codegen.ModuleInfo: java.lang.String translateQualifiedName(java.lang.String,java.lang.String)>(v5, v1);
label2:
return v3;
}
public java.lang.String translatePackageName(java.lang.String)
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.ModuleInfo v2, v4;
java.lang.String v1, v3, v5;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
if v2 != null goto label1;
v3 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String packageName>;
goto label2;
label1:
v4 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
v5 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String packageName>;
v3 = virtualinvoke v4.<io.vertx.codegen.ModuleInfo: java.lang.String translateQualifiedName(java.lang.String,java.lang.String)>(v5, v1);
label2:
return v3;
}
public java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.ModuleInfo v2, v4;
java.lang.String v3, v5;
io.vertx.codegen.type.TypeNameTranslator v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.TypeNameTranslator;
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
if v2 != null goto label1;
v3 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
goto label2;
label1:
v4 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
v5 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String name>;
v3 = interfaceinvoke v1.<io.vertx.codegen.type.TypeNameTranslator: java.lang.String translate(io.vertx.codegen.ModuleInfo,java.lang.String)>(v4, v5);
label2:
return v3;
}
public java.lang.String translatePackageName(io.vertx.codegen.type.TypeNameTranslator)
{
io.vertx.codegen.type.ClassTypeInfo v0;
io.vertx.codegen.ModuleInfo v2, v4;
java.lang.String v3, v5;
io.vertx.codegen.type.TypeNameTranslator v1;
v0 := @this: io.vertx.codegen.type.ClassTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.TypeNameTranslator;
v2 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
if v2 != null goto label1;
v3 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String packageName>;
goto label2;
label1:
v4 = v0.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.ModuleInfo module>;
v5 = v0.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String packageName>;
v3 = interfaceinvoke v1.<io.vertx.codegen.type.TypeNameTranslator: java.lang.String translate(io.vertx.codegen.ModuleInfo,java.lang.String)>(v4, v5);
label2:
return v3;
}
static void <clinit>()
{
io.vertx.codegen.type.ClassTypeInfo v7;
java.lang.Class[] v1;
java.util.HashMap v0, v6;
java.util.List v9;
int v2, v3;
java.lang.Class v4;
java.lang.String v5;
io.vertx.codegen.type.ClassKind v8;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
<io.vertx.codegen.type.ClassTypeInfo: java.util.HashMap PRIMITIVES> = v0;
v1 = newarray (java.lang.Class)[8];
v1[0] = class "Ljava/lang/Boolean;";
v1[1] = class "Ljava/lang/Byte;";
v1[2] = class "Ljava/lang/Short;";
v1[3] = class "Ljava/lang/Integer;";
v1[4] = class "Ljava/lang/Long;";
v1[5] = class "Ljava/lang/Float;";
v1[6] = class "Ljava/lang/Double;";
v1[7] = class "Ljava/lang/Character;";
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = <io.vertx.codegen.type.ClassTypeInfo: java.util.HashMap PRIMITIVES>;
v7 = new io.vertx.codegen.type.ClassTypeInfo;
v8 = <io.vertx.codegen.type.ClassKind: io.vertx.codegen.type.ClassKind BOXED_PRIMITIVE>;
v9 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
specialinvoke v7.<io.vertx.codegen.type.ClassTypeInfo: void <init>(io.vertx.codegen.type.ClassKind,java.lang.String,io.vertx.codegen.ModuleInfo,boolean,java.util.List,io.vertx.codegen.type.DataObjectInfo)>(v8, v5, null, 0, v9, null);
virtualinvoke v6.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v7);
v3 = v3 + 1;
goto label1;
label2:
return;
}
}