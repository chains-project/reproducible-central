class io.vertx.codegen.type.TypeUse$MirrorTypeInternal extends java.lang.Object implements io.vertx.codegen.type.TypeUse$TypeInternal
{
final javax.lang.model.type.TypeMirror mirror;
private void <init>(javax.lang.model.type.TypeMirror)
{
io.vertx.codegen.type.TypeUse$MirrorTypeInternal v0;
javax.lang.model.type.TypeMirror v1;
v0 := @this: io.vertx.codegen.type.TypeUse$MirrorTypeInternal;
v1 := @parameter0: javax.lang.model.type.TypeMirror;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.type.TypeUse$MirrorTypeInternal: javax.lang.model.type.TypeMirror mirror> = v1;
return;
}
public java.lang.String rawName()
{
io.vertx.codegen.type.TypeUse$MirrorTypeInternal v0;
javax.lang.model.element.Element v5;
javax.lang.model.type.TypeKind v2, v3;
javax.lang.model.type.TypeMirror v1, v4;
java.lang.String v7;
javax.lang.model.element.Name v6;
v0 := @this: io.vertx.codegen.type.TypeUse$MirrorTypeInternal;
v1 = v0.<io.vertx.codegen.type.TypeUse$MirrorTypeInternal: javax.lang.model.type.TypeMirror mirror>;
v2 = interfaceinvoke v1.<javax.lang.model.type.TypeMirror: javax.lang.model.type.TypeKind getKind()>();
v3 = <javax.lang.model.type.TypeKind: javax.lang.model.type.TypeKind DECLARED>;
if v2 != v3 goto label1;
v4 = v0.<io.vertx.codegen.type.TypeUse$MirrorTypeInternal: javax.lang.model.type.TypeMirror mirror>;
v5 = interfaceinvoke v4.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();
v6 = interfaceinvoke v5.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();
v7 = virtualinvoke v6.<java.lang.Object: java.lang.String toString()>();
return v7;
label1:
return null;
}
public boolean isNullable()
{
java.util.Iterator v3;
io.vertx.codegen.type.TypeUse$MirrorTypeInternal v0;
javax.lang.model.element.Element v7;
java.util.List v2;
javax.lang.model.type.TypeMirror v1;
javax.lang.model.type.DeclaredType v6;
java.lang.Object v5;
java.lang.String v10, v9;
boolean v11, v4;
javax.lang.model.element.Name v8;
v0 := @this: io.vertx.codegen.type.TypeUse$MirrorTypeInternal;
v1 = v0.<io.vertx.codegen.type.TypeUse$MirrorTypeInternal: javax.lang.model.type.TypeMirror mirror>;
v2 = interfaceinvoke v1.<javax.lang.model.type.TypeMirror: java.util.List getAnnotationMirrors()>();
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<javax.lang.model.element.AnnotationMirror: javax.lang.model.type.DeclaredType getAnnotationType()>();
v7 = interfaceinvoke v6.<javax.lang.model.type.DeclaredType: javax.lang.model.element.Element asElement()>();
v8 = interfaceinvoke v7.<javax.lang.model.element.TypeElement: javax.lang.model.element.Name getQualifiedName()>();
v9 = virtualinvoke v8.<java.lang.Object: java.lang.String toString()>();
v10 = <io.vertx.codegen.type.TypeUse: java.lang.String NULLABLE>;
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label1;
return 1;
label2:
return 0;
}
public io.vertx.codegen.type.TypeUse$TypeInternal getArgAt(int)
{
java.util.List v3;
javax.lang.model.type.TypeMirror v2;
int v1;
io.vertx.codegen.type.TypeUse$MirrorTypeInternal v0, v4;
java.lang.Object v5;
v0 := @this: io.vertx.codegen.type.TypeUse$MirrorTypeInternal;
v1 := @parameter0: int;
v2 = v0.<io.vertx.codegen.type.TypeUse$MirrorTypeInternal: javax.lang.model.type.TypeMirror mirror>;
v3 = interfaceinvoke v2.<javax.lang.model.type.DeclaredType: java.util.List getTypeArguments()>();
v4 = new io.vertx.codegen.type.TypeUse$MirrorTypeInternal;
v5 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v1);
specialinvoke v4.<io.vertx.codegen.type.TypeUse$MirrorTypeInternal: void <init>(javax.lang.model.type.TypeMirror)>(v5);
return v4;
}
}