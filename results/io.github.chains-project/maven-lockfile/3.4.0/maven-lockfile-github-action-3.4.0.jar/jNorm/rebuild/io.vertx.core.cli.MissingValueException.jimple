public class io.vertx.core.cli.MissingValueException extends io.vertx.core.cli.CLIException
{
private final io.vertx.core.cli.Option option;
private final io.vertx.core.cli.Argument argument;
public void <init>(io.vertx.core.cli.Option)
{
io.vertx.core.cli.Option v1;
io.vertx.core.cli.MissingValueException v0;
java.lang.String v2, v3;
v0 := @this: io.vertx.core.cli.MissingValueException;
v1 := @parameter0: io.vertx.core.cli.Option;
v2 = virtualinvoke v1.<io.vertx.core.cli.Option: java.lang.String getName()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The option \'\u0001\' requires a value");
specialinvoke v0.<io.vertx.core.cli.CLIException: void <init>(java.lang.String)>(v3);
v0.<io.vertx.core.cli.MissingValueException: io.vertx.core.cli.Argument argument> = null;
v0.<io.vertx.core.cli.MissingValueException: io.vertx.core.cli.Option option> = v1;
return;
}
public void <init>(io.vertx.core.cli.Argument)
{
int v4;
io.vertx.core.cli.MissingValueException v0;
java.lang.String v2, v5;
io.vertx.core.cli.Argument v1;
java.io.Serializable v3;
v0 := @this: io.vertx.core.cli.MissingValueException;
v1 := @parameter0: io.vertx.core.cli.Argument;
v2 = virtualinvoke v1.<io.vertx.core.cli.Argument: java.lang.String getArgName()>();
if v2 == null goto label1;
v3 = virtualinvoke v1.<io.vertx.core.cli.Argument: java.lang.String getArgName()>();
goto label2;
label1:
v4 = virtualinvoke v1.<io.vertx.core.cli.Argument: int getIndex()>();
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
label2:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.io.Serializable)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The argument \'\u0001\' is required");
specialinvoke v0.<io.vertx.core.cli.CLIException: void <init>(java.lang.String)>(v5);
v0.<io.vertx.core.cli.MissingValueException: io.vertx.core.cli.Option option> = null;
v0.<io.vertx.core.cli.MissingValueException: io.vertx.core.cli.Argument argument> = v1;
return;
}
public io.vertx.core.cli.Option getOption()
{
io.vertx.core.cli.Option v1;
io.vertx.core.cli.MissingValueException v0;
v0 := @this: io.vertx.core.cli.MissingValueException;
v1 = v0.<io.vertx.core.cli.MissingValueException: io.vertx.core.cli.Option option>;
return v1;
}
public io.vertx.core.cli.Argument getArgument()
{
io.vertx.core.cli.MissingValueException v0;
io.vertx.core.cli.Argument v1;
v0 := @this: io.vertx.core.cli.MissingValueException;
v1 = v0.<io.vertx.core.cli.MissingValueException: io.vertx.core.cli.Argument argument>;
return v1;
}
}