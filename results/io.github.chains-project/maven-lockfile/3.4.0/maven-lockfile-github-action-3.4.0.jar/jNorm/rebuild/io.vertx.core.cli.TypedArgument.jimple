public class io.vertx.core.cli.TypedArgument extends io.vertx.core.cli.Argument
{
protected java.lang.Class type;
protected io.vertx.core.cli.converters.Converter converter;
public void <init>(io.vertx.core.cli.TypedArgument)
{
java.lang.Class v2;
io.vertx.core.cli.converters.Converter v3;
io.vertx.core.cli.TypedArgument v0, v1;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: io.vertx.core.cli.TypedArgument;
specialinvoke v0.<io.vertx.core.cli.Argument: void <init>(io.vertx.core.cli.Argument)>(v1);
v2 = virtualinvoke v1.<io.vertx.core.cli.TypedArgument: java.lang.Class getType()>();
v0.<io.vertx.core.cli.TypedArgument: java.lang.Class type> = v2;
v3 = virtualinvoke v1.<io.vertx.core.cli.TypedArgument: io.vertx.core.cli.converters.Converter getConverter()>();
v0.<io.vertx.core.cli.TypedArgument: io.vertx.core.cli.converters.Converter converter> = v3;
return;
}
public void <init>()
{
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
specialinvoke v0.<io.vertx.core.cli.Argument: void <init>()>();
return;
}
public java.lang.Class getType()
{
java.lang.Class v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 = v0.<io.vertx.core.cli.TypedArgument: java.lang.Class type>;
return v1;
}
public io.vertx.core.cli.TypedArgument setType(java.lang.Class)
{
java.lang.Class v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: java.lang.Class;
v0.<io.vertx.core.cli.TypedArgument: java.lang.Class type> = v1;
return v0;
}
public io.vertx.core.cli.converters.Converter getConverter()
{
io.vertx.core.cli.converters.Converter v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 = v0.<io.vertx.core.cli.TypedArgument: io.vertx.core.cli.converters.Converter converter>;
return v1;
}
public io.vertx.core.cli.TypedArgument setConverter(io.vertx.core.cli.converters.Converter)
{
io.vertx.core.cli.converters.Converter v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: io.vertx.core.cli.converters.Converter;
v0.<io.vertx.core.cli.TypedArgument: io.vertx.core.cli.converters.Converter converter> = v1;
return v0;
}
public void ensureValidity()
{
java.lang.Class v1;
java.lang.IllegalArgumentException v2;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
specialinvoke v0.<io.vertx.core.cli.Argument: void ensureValidity()>();
v1 = v0.<io.vertx.core.cli.TypedArgument: java.lang.Class type>;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Type must not be null");
throw v2;
label1:
return;
}
public io.vertx.core.cli.TypedArgument setArgName(java.lang.String)
{
java.lang.String v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setArgName(java.lang.String)>(v1);
return v0;
}
public io.vertx.core.cli.TypedArgument setDefaultValue(java.lang.String)
{
java.lang.String v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setDefaultValue(java.lang.String)>(v1);
return v0;
}
public io.vertx.core.cli.TypedArgument setDescription(java.lang.String)
{
java.lang.String v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setDescription(java.lang.String)>(v1);
return v0;
}
public io.vertx.core.cli.TypedArgument setHidden(boolean)
{
boolean v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: boolean;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setHidden(boolean)>(v1);
return v0;
}
public io.vertx.core.cli.TypedArgument setIndex(int)
{
int v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: int;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setIndex(int)>(v1);
return v0;
}
public io.vertx.core.cli.TypedArgument setRequired(boolean)
{
boolean v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: boolean;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setRequired(boolean)>(v1);
return v0;
}
public io.vertx.core.cli.TypedArgument setMultiValued(boolean)
{
boolean v1;
io.vertx.core.cli.TypedArgument v0;
v0 := @this: io.vertx.core.cli.TypedArgument;
v1 := @parameter0: boolean;
specialinvoke v0.<io.vertx.core.cli.Argument: io.vertx.core.cli.Argument setMultiValued(boolean)>(v1);
return v0;
}
}