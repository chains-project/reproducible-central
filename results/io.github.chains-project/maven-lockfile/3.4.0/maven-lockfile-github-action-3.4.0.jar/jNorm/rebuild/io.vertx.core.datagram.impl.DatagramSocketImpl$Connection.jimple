class io.vertx.core.datagram.impl.DatagramSocketImpl$Connection extends io.vertx.core.net.impl.ConnectionBase
{
final io.vertx.core.datagram.impl.DatagramSocketImpl this$0;
public void <init>(io.vertx.core.datagram.impl.DatagramSocketImpl, io.vertx.core.impl.ContextInternal, io.netty.channel.ChannelHandlerContext)
{
io.vertx.core.datagram.impl.DatagramSocketImpl v1;
io.netty.channel.ChannelHandlerContext v3;
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
io.vertx.core.impl.ContextInternal v2;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
v1 := @parameter0: io.vertx.core.datagram.impl.DatagramSocketImpl;
v2 := @parameter1: io.vertx.core.impl.ContextInternal;
v3 := @parameter2: io.netty.channel.ChannelHandlerContext;
v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0> = v1;
specialinvoke v0.<io.vertx.core.net.impl.ConnectionBase: void <init>(io.vertx.core.impl.ContextInternal,io.netty.channel.ChannelHandlerContext)>(v2, v3);
return;
}
public io.vertx.core.spi.metrics.NetworkMetrics metrics()
{
io.vertx.core.datagram.impl.DatagramSocketImpl v1;
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
io.vertx.core.spi.metrics.DatagramSocketMetrics v2;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
v1 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v2 = v1.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.spi.metrics.DatagramSocketMetrics metrics>;
return v2;
}
protected void handleInterestedOpsChanged()
{
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
return;
}
protected void handleException(java.lang.Throwable)
{
io.vertx.core.datagram.impl.DatagramSocketImpl v2, v3;
java.lang.Throwable v1, v5;
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
io.vertx.core.Handler v4;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<io.vertx.core.net.impl.ConnectionBase: void handleException(java.lang.Throwable)>(v1);
v2 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
entermonitor v2;
label1:
v3 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v4 = v3.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.Handler exceptionHandler>;
exitmonitor v2;
label2:
goto label4;
label3:
v5 := @caughtexception;
exitmonitor v2;
throw v5;
label4:
if v4 == null goto label5;
interfaceinvoke v4.<io.vertx.core.Handler: void handle(java.lang.Object)>(v1);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
protected void handleClosed()
{
io.vertx.core.datagram.impl.DatagramSocketImpl v1, v2, v4;
java.lang.Throwable v6;
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
io.vertx.core.impl.ContextInternal v7;
io.vertx.core.spi.metrics.DatagramSocketMetrics v5;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
specialinvoke v0.<io.vertx.core.net.impl.ConnectionBase: void handleClosed()>();
v1 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
entermonitor v1;
label1:
v2 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v3 = v2.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.Handler endHandler>;
v4 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v5 = v4.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.spi.metrics.DatagramSocketMetrics metrics>;
exitmonitor v1;
label2:
goto label4;
label3:
v6 := @caughtexception;
exitmonitor v1;
throw v6;
label4:
if v5 == null goto label5;
interfaceinvoke v5.<io.vertx.core.spi.metrics.DatagramSocketMetrics: void close()>();
label5:
if v3 == null goto label6;
v7 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.impl.ContextInternal context>;
interfaceinvoke v7.<io.vertx.core.impl.ContextInternal: void emit(java.lang.Object,io.vertx.core.Handler)>(null, v3);
label6:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void handleMessage(java.lang.Object)
{
java.net.SocketAddress v6;
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
io.vertx.core.datagram.impl.DatagramPacketImpl v5;
io.vertx.core.buffer.Buffer v7;
java.lang.Object v1, v3;
boolean v2, v4;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.channel.socket.DatagramPacket;
if v2 == 0 goto label2;
v3 = virtualinvoke v1.<io.netty.channel.socket.DatagramPacket: java.lang.Object content()>();
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isDirect()>();
if v4 == 0 goto label1;
v3 = staticinvoke <io.vertx.core.net.impl.VertxHandler: io.netty.buffer.ByteBuf safeBuffer(io.netty.buffer.ByteBuf)>(v3);
label1:
v5 = new io.vertx.core.datagram.impl.DatagramPacketImpl;
v6 = virtualinvoke v1.<io.netty.channel.socket.DatagramPacket: java.net.SocketAddress sender()>();
v7 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v3);
specialinvoke v5.<io.vertx.core.datagram.impl.DatagramPacketImpl: void <init>(java.net.InetSocketAddress,io.vertx.core.buffer.Buffer)>(v6, v7);
virtualinvoke v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: void handlePacket(io.vertx.core.datagram.DatagramPacket)>(v5);
label2:
return;
}
void handlePacket(io.vertx.core.datagram.DatagramPacket)
{
io.vertx.core.datagram.impl.DatagramSocketImpl v10, v13, v16, v17, v2, v3, v5;
java.lang.Throwable v19;
io.vertx.core.datagram.impl.DatagramSocketImpl$Connection v0;
io.vertx.core.impl.ContextInternal v20;
long v11, v14;
byte v12, v15;
int v9;
io.vertx.core.spi.metrics.DatagramSocketMetrics v4, v6;
io.vertx.core.net.SocketAddress v7;
io.vertx.core.buffer.Buffer v8;
io.vertx.core.datagram.DatagramPacket v1;
io.vertx.core.Handler v18;
v0 := @this: io.vertx.core.datagram.impl.DatagramSocketImpl$Connection;
v1 := @parameter0: io.vertx.core.datagram.DatagramPacket;
v2 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
entermonitor v2;
label1:
v3 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v4 = v3.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.spi.metrics.DatagramSocketMetrics metrics>;
if v4 == null goto label2;
v5 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v6 = v5.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.spi.metrics.DatagramSocketMetrics metrics>;
v7 = interfaceinvoke v1.<io.vertx.core.datagram.DatagramPacket: io.vertx.core.net.SocketAddress sender()>();
v8 = interfaceinvoke v1.<io.vertx.core.datagram.DatagramPacket: io.vertx.core.buffer.Buffer data()>();
v9 = interfaceinvoke v8.<io.vertx.core.buffer.Buffer: int length()>();
interfaceinvoke v6.<io.vertx.core.spi.metrics.DatagramSocketMetrics: void bytesRead(java.lang.Object,io.vertx.core.net.SocketAddress,long)>(null, v7, v9);
label2:
v10 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v11 = v10.<io.vertx.core.datagram.impl.DatagramSocketImpl: long demand>;
v12 = v11 cmp 0L;
if v12 <= 0 goto label4;
v13 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v14 = v13.<io.vertx.core.datagram.impl.DatagramSocketImpl: long demand>;
v15 = v14 cmp 9223372036854775807L;
if v15 == 0 goto label3;
v16 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
staticinvoke <io.vertx.core.datagram.impl.DatagramSocketImpl: long access$310(io.vertx.core.datagram.impl.DatagramSocketImpl)>(v16);
label3:
v17 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.datagram.impl.DatagramSocketImpl this$0>;
v18 = v17.<io.vertx.core.datagram.impl.DatagramSocketImpl: io.vertx.core.Handler packetHandler>;
goto label5;
label4:
v18 = null;
label5:
exitmonitor v2;
label6:
goto label8;
label7:
v19 := @caughtexception;
exitmonitor v2;
throw v19;
label8:
if v18 == null goto label9;
v20 = v0.<io.vertx.core.datagram.impl.DatagramSocketImpl$Connection: io.vertx.core.impl.ContextInternal context>;
interfaceinvoke v20.<io.vertx.core.impl.ContextInternal: void emit(java.lang.Object,io.vertx.core.Handler)>(v1, v18);
label9:
return;
catch java.lang.Throwable from label1 to label6 with label7;
}
}