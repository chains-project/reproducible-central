public class io.vertx.core.dns.DnsClientOptions extends java.lang.Object
{
public static final int DEFAULT_PORT;
public static final java.lang.String DEFAULT_HOST;
public static final long DEFAULT_QUERY_TIMEOUT;
public static final boolean DEFAULT_LOG_ENABLED;
public static final io.netty.handler.logging.ByteBufFormat DEFAULT_LOG_ACTIVITY_FORMAT;
public static final boolean DEFAULT_RECURSION_DESIRED;
private int port;
private java.lang.String host;
private long queryTimeout;
private boolean logActivity;
private io.netty.handler.logging.ByteBufFormat activityLogFormat;
private boolean recursionDesired;
public void <init>()
{
io.netty.handler.logging.ByteBufFormat v3;
int v1;
io.vertx.core.dns.DnsClientOptions v0;
java.lang.String v2;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = (int) -1;
v0.<io.vertx.core.dns.DnsClientOptions: int port> = v1;
v2 = <io.vertx.core.dns.DnsClientOptions: java.lang.String DEFAULT_HOST>;
v0.<io.vertx.core.dns.DnsClientOptions: java.lang.String host> = v2;
v0.<io.vertx.core.dns.DnsClientOptions: long queryTimeout> = 5000L;
v0.<io.vertx.core.dns.DnsClientOptions: boolean logActivity> = 0;
v3 = <io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat DEFAULT_LOG_ACTIVITY_FORMAT>;
v0.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat> = v3;
v0.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired> = 1;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.netty.handler.logging.ByteBufFormat v4;
int v2;
io.vertx.core.dns.DnsClientOptions v0;
io.vertx.core.json.JsonObject v1;
java.lang.String v3;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = (int) -1;
v0.<io.vertx.core.dns.DnsClientOptions: int port> = v2;
v3 = <io.vertx.core.dns.DnsClientOptions: java.lang.String DEFAULT_HOST>;
v0.<io.vertx.core.dns.DnsClientOptions: java.lang.String host> = v3;
v0.<io.vertx.core.dns.DnsClientOptions: long queryTimeout> = 5000L;
v0.<io.vertx.core.dns.DnsClientOptions: boolean logActivity> = 0;
v4 = <io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat DEFAULT_LOG_ACTIVITY_FORMAT>;
v0.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat> = v4;
v0.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired> = 1;
staticinvoke <io.vertx.core.dns.DnsClientOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.core.dns.DnsClientOptions)>(v1, v0);
return;
}
public void <init>(io.vertx.core.dns.DnsClientOptions)
{
io.vertx.core.dns.DnsClientOptions v0, v1;
long v7;
io.netty.handler.logging.ByteBufFormat v4, v9;
int v2, v5;
java.lang.String v3, v6;
boolean v10, v8;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: io.vertx.core.dns.DnsClientOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = (int) -1;
v0.<io.vertx.core.dns.DnsClientOptions: int port> = v2;
v3 = <io.vertx.core.dns.DnsClientOptions: java.lang.String DEFAULT_HOST>;
v0.<io.vertx.core.dns.DnsClientOptions: java.lang.String host> = v3;
v0.<io.vertx.core.dns.DnsClientOptions: long queryTimeout> = 5000L;
v0.<io.vertx.core.dns.DnsClientOptions: boolean logActivity> = 0;
v4 = <io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat DEFAULT_LOG_ACTIVITY_FORMAT>;
v0.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat> = v4;
v0.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired> = 1;
v5 = v1.<io.vertx.core.dns.DnsClientOptions: int port>;
v0.<io.vertx.core.dns.DnsClientOptions: int port> = v5;
v6 = v1.<io.vertx.core.dns.DnsClientOptions: java.lang.String host>;
v0.<io.vertx.core.dns.DnsClientOptions: java.lang.String host> = v6;
v7 = v1.<io.vertx.core.dns.DnsClientOptions: long queryTimeout>;
v0.<io.vertx.core.dns.DnsClientOptions: long queryTimeout> = v7;
v8 = v1.<io.vertx.core.dns.DnsClientOptions: boolean logActivity>;
v0.<io.vertx.core.dns.DnsClientOptions: boolean logActivity> = v8;
v9 = v1.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat>;
v0.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat> = v9;
v10 = v1.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired>;
v0.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired> = v10;
return;
}
public int getPort()
{
int v1;
io.vertx.core.dns.DnsClientOptions v0;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = v0.<io.vertx.core.dns.DnsClientOptions: int port>;
return v1;
}
public io.vertx.core.dns.DnsClientOptions setPort(int)
{
int v1, v2;
io.vertx.core.dns.DnsClientOptions v0;
java.lang.String v4;
java.lang.IllegalArgumentException v3;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: int;
if v1 >= 1 goto label1;
v2 = (int) -1;
if v1 == v2 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("DNS client port \u0001 must be > 0 or equal to DEFAULT_PORT");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v0.<io.vertx.core.dns.DnsClientOptions: int port> = v1;
return v0;
}
public java.lang.String getHost()
{
io.vertx.core.dns.DnsClientOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = v0.<io.vertx.core.dns.DnsClientOptions: java.lang.String host>;
return v1;
}
public io.vertx.core.dns.DnsClientOptions setHost(java.lang.String)
{
io.vertx.core.dns.DnsClientOptions v0;
java.lang.String v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.dns.DnsClientOptions: java.lang.String host> = v1;
return v0;
}
public long getQueryTimeout()
{
io.vertx.core.dns.DnsClientOptions v0;
long v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = v0.<io.vertx.core.dns.DnsClientOptions: long queryTimeout>;
return v1;
}
public io.vertx.core.dns.DnsClientOptions setQueryTimeout(long)
{
byte v2;
io.vertx.core.dns.DnsClientOptions v0;
long v1;
java.lang.IllegalArgumentException v3;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: long;
v2 = v1 cmp 1L;
if v2 >= 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("queryTimeout must be > 0");
throw v3;
label1:
v0.<io.vertx.core.dns.DnsClientOptions: long queryTimeout> = v1;
return v0;
}
public boolean getLogActivity()
{
io.vertx.core.dns.DnsClientOptions v0;
boolean v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = v0.<io.vertx.core.dns.DnsClientOptions: boolean logActivity>;
return v1;
}
public io.netty.handler.logging.ByteBufFormat getActivityLogFormat()
{
io.vertx.core.dns.DnsClientOptions v0;
io.netty.handler.logging.ByteBufFormat v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = v0.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat>;
return v1;
}
public io.vertx.core.dns.DnsClientOptions setLogActivity(boolean)
{
io.vertx.core.dns.DnsClientOptions v0;
boolean v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.dns.DnsClientOptions: boolean logActivity> = v1;
return v0;
}
public io.vertx.core.dns.DnsClientOptions setActivityLogFormat(io.netty.handler.logging.ByteBufFormat)
{
io.vertx.core.dns.DnsClientOptions v0;
io.netty.handler.logging.ByteBufFormat v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: io.netty.handler.logging.ByteBufFormat;
v0.<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat activityLogFormat> = v1;
return v0;
}
public boolean isRecursionDesired()
{
io.vertx.core.dns.DnsClientOptions v0;
boolean v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = v0.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired>;
return v1;
}
public io.vertx.core.dns.DnsClientOptions setRecursionDesired(boolean)
{
io.vertx.core.dns.DnsClientOptions v0;
boolean v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.dns.DnsClientOptions: boolean recursionDesired> = v1;
return v0;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.dns.DnsClientOptions v0;
io.vertx.core.json.JsonObject v1;
v0 := @this: io.vertx.core.dns.DnsClientOptions;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.core.dns.DnsClientOptionsConverter: void toJson(io.vertx.core.dns.DnsClientOptions,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
static void <clinit>()
{
io.netty.handler.logging.ByteBufFormat v0;
<io.vertx.core.dns.DnsClientOptions: java.lang.String DEFAULT_HOST> = null;
v0 = <io.netty.handler.logging.ByteBufFormat: io.netty.handler.logging.ByteBufFormat SIMPLE>;
<io.vertx.core.dns.DnsClientOptions: io.netty.handler.logging.ByteBufFormat DEFAULT_LOG_ACTIVITY_FORMAT> = v0;
return;
}
}