class io.vertx.core.dns.impl.DnsClientImpl$1 extends io.netty.channel.SimpleChannelInboundHandler
{
final io.vertx.core.dns.impl.DnsClientImpl this$0;
void <init>(io.vertx.core.dns.impl.DnsClientImpl)
{
io.vertx.core.dns.impl.DnsClientImpl$1 v0;
io.vertx.core.dns.impl.DnsClientImpl v1;
v0 := @this: io.vertx.core.dns.impl.DnsClientImpl$1;
v1 := @parameter0: io.vertx.core.dns.impl.DnsClientImpl;
v0.<io.vertx.core.dns.impl.DnsClientImpl$1: io.vertx.core.dns.impl.DnsClientImpl this$0> = v1;
specialinvoke v0.<io.netty.channel.SimpleChannelInboundHandler: void <init>()>();
return;
}
protected void channelRead0(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.dns.DnsResponse) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v4;
io.netty.handler.codec.dns.DnsResponse v2;
io.netty.util.collection.LongObjectMap v6;
io.vertx.core.dns.impl.DnsClientImpl v5, v7;
io.vertx.core.dns.impl.DnsClientImpl$1 v0;
long v10;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.dns.DnsSection v3;
int v8;
java.lang.Object v11;
java.lang.String v9;
v0 := @this: io.vertx.core.dns.impl.DnsClientImpl$1;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.dns.DnsResponse;
v3 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v4 = interfaceinvoke v2.<io.netty.handler.codec.dns.DnsResponse: io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection)>(v3);
v5 = v0.<io.vertx.core.dns.impl.DnsClientImpl$1: io.vertx.core.dns.impl.DnsClientImpl this$0>;
v6 = v5.<io.vertx.core.dns.impl.DnsClientImpl: io.netty.util.collection.LongObjectMap inProgressMap>;
v7 = v0.<io.vertx.core.dns.impl.DnsClientImpl$1: io.vertx.core.dns.impl.DnsClientImpl this$0>;
v8 = interfaceinvoke v2.<io.netty.handler.codec.dns.DnsResponse: int id()>();
v9 = virtualinvoke v4.<io.netty.handler.codec.dns.DefaultDnsQuestion: java.lang.String name()>();
v10 = specialinvoke v7.<io.vertx.core.dns.impl.DnsClientImpl: long dnsMessageId(int,java.lang.String)>(v8, v9);
v11 = interfaceinvoke v6.<io.netty.util.collection.LongObjectMap: java.lang.Object get(long)>(v10);
if v11 == null goto label1;
virtualinvoke v11.<io.vertx.core.dns.impl.DnsClientImpl$Query: void handle(io.netty.handler.codec.dns.DnsResponse)>(v2);
label1:
return;
}
}