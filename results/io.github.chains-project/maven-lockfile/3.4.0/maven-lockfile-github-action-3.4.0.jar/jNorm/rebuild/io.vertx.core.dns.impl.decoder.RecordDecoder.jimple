public class io.vertx.core.dns.impl.decoder.RecordDecoder extends java.lang.Object
{
private static final io.vertx.core.impl.logging.Logger log;
public static final java.util.function.Function MX;
public static final java.util.function.Function DOMAIN;
public static final java.util.function.Function A;
public static final java.util.function.Function AAAA;
public static final java.util.function.Function SRV;
public static final java.util.function.Function SOA;
public static final java.util.function.Function TXT;
private static final java.util.Map decoders;
public void <init>()
{
io.vertx.core.dns.impl.decoder.RecordDecoder v0;
v0 := @this: io.vertx.core.dns.impl.decoder.RecordDecoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.util.function.Function address(int)
{
int v0;
java.util.function.Function v1;
v0 := @parameter0: int;
v1 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder$lambda_address_5__934: java.util.function.Function bootstrap$(int)>(v0);
return v1;
}
static java.lang.String readName(io.netty.buffer.ByteBuf)
{
short v10, v12, v4, v6;
io.netty.buffer.ByteBuf v0;
java.nio.charset.Charset v15;
int v1, v11, v13, v14, v18, v19, v2, v20, v21, v8, v9;
java.lang.String v16, v22;
boolean v5, v7;
java.lang.StringBuilder v17, v3;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = (int) -1;
v2 = v1;
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short readUnsignedByte()>();
label1:
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v5 == 0 goto label7;
if v4 == 0 goto label7;
v6 = v4 & 192;
if v6 != 192 goto label2;
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
if v7 == 0 goto label5;
v8 = (int) -1;
if v2 != v8 goto label4;
v9 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v2 = v9 + 1;
label4:
v10 = v4 & 63;
v11 = v10 << 8;
v12 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short readUnsignedByte()>();
v13 = v11 | v12;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v13);
goto label6;
label5:
v14 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v15 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v16 = virtualinvoke v0.<io.netty.buffer.ByteBuf: java.lang.String toString(int,int,java.nio.charset.Charset)>(v14, v4, v15);
v17 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v16);
virtualinvoke v17.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v4);
label6:
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short readUnsignedByte()>();
goto label1;
label7:
v18 = (int) -1;
if v2 == v18 goto label8;
virtualinvoke v0.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v2);
label8:
v19 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v19 != 0 goto label9;
return null;
label9:
v20 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
v21 = v20 - 1;
v22 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, v21);
return v22;
}
static java.lang.String getName(io.netty.buffer.ByteBuf, int)
{
short v10, v4, v6, v8;
io.netty.buffer.ByteBuf v0;
java.nio.charset.Charset v12;
int v1, v11, v15, v16, v17, v3, v5, v9;
java.lang.String v13, v18;
boolean v7;
java.lang.StringBuilder v14, v2;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: int;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = v1 + 1;
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v1);
label1:
v5 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
if v5 <= v3 goto label6;
if v4 == 0 goto label6;
v6 = v4 & 192;
if v6 != 192 goto label2;
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
if v7 == 0 goto label4;
v8 = v4 & 63;
v9 = v8 << 8;
v10 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v3);
v11 = v9 | v10;
goto label5;
label4:
v12 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v13 = virtualinvoke v0.<io.netty.buffer.ByteBuf: java.lang.String toString(int,int,java.nio.charset.Charset)>(v3, v4, v12);
v14 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v13);
virtualinvoke v14.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
v11 = v3 + v4;
label5:
v3 = v11 + 1;
v4 = virtualinvoke v0.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v11);
goto label1;
label6:
v15 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
if v15 != 0 goto label7;
return null;
label7:
v16 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v17 = v16 - 1;
v18 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String substring(int,int)>(0, v17);
return v18;
}
public static java.lang.Object decode(io.netty.handler.codec.dns.DnsRecord)
{
io.vertx.core.impl.logging.Logger v8;
java.lang.Throwable v10;
io.netty.handler.codec.dns.DnsRecord v0;
java.lang.IllegalStateException v4;
io.netty.handler.codec.dns.DnsRecordType v1;
java.lang.Exception v7;
java.util.Map v2;
java.lang.Object v3, v6;
java.lang.String v5, v9;
v0 := @parameter0: io.netty.handler.codec.dns.DnsRecord;
v1 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsRecord: io.netty.handler.codec.dns.DnsRecordType type()>();
v2 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = new java.lang.IllegalStateException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.dns.DnsRecordType)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unsupported resource record type [id: \u0001].");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = null;
label2:
v6 = interfaceinvoke v3.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v0);
label3:
goto label5;
label4:
v7 := @caughtexception;
v8 = <io.vertx.core.dns.impl.decoder.RecordDecoder: io.vertx.core.impl.logging.Logger log>;
v9 = virtualinvoke v7.<java.lang.Exception: java.lang.String getMessage()>();
v10 = virtualinvoke v7.<java.lang.Exception: java.lang.Throwable getCause()>();
interfaceinvoke v8.<io.vertx.core.impl.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>(v9, v10);
label5:
return v6;
catch java.lang.Exception from label2 to label3 with label4;
}
static void <clinit>()
{
java.util.Map v12, v15, v18, v21, v24, v27, v30, v33, v9;
io.vertx.core.impl.logging.Logger v0;
java.util.HashMap v8;
java.util.function.Function v1, v11, v14, v17, v2, v20, v23, v26, v29, v3, v32, v35, v4, v5, v6, v7;
io.netty.handler.codec.dns.DnsRecordType v10, v13, v16, v19, v22, v25, v28, v31, v34;
v0 = staticinvoke <io.vertx.core.impl.logging.LoggerFactory: io.vertx.core.impl.logging.Logger getLogger(java.lang.Class)>(class "Lio/vertx/core/dns/impl/decoder/RecordDecoder;");
<io.vertx.core.dns.impl.decoder.RecordDecoder: io.vertx.core.impl.logging.Logger log> = v0;
v1 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder$lambda_static_0__935: java.util.function.Function bootstrap$()>();
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function MX> = v1;
v2 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder$lambda_static_1__936: java.util.function.Function bootstrap$()>();
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function DOMAIN> = v2;
v3 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function address(int)>(4);
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function A> = v3;
v4 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function address(int)>(16);
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function AAAA> = v4;
v5 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder$lambda_static_2__937: java.util.function.Function bootstrap$()>();
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function SRV> = v5;
v6 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder$lambda_static_3__938: java.util.function.Function bootstrap$()>();
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function SOA> = v6;
v7 = staticinvoke <io.vertx.core.dns.impl.decoder.RecordDecoder$lambda_static_4__939: java.util.function.Function bootstrap$()>();
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function TXT> = v7;
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
<io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders> = v8;
v9 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v10 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType A>;
v11 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function A>;
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v11);
v12 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v13 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType AAAA>;
v14 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function AAAA>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v13, v14);
v15 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v16 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType MX>;
v17 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function MX>;
interfaceinvoke v15.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v17);
v18 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v19 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType TXT>;
v20 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function TXT>;
interfaceinvoke v18.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v19, v20);
v21 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v22 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType SRV>;
v23 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function SRV>;
interfaceinvoke v21.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v22, v23);
v24 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v25 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType NS>;
v26 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function DOMAIN>;
interfaceinvoke v24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v25, v26);
v27 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v28 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType CNAME>;
v29 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function DOMAIN>;
interfaceinvoke v27.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v28, v29);
v30 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v31 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType PTR>;
v32 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function DOMAIN>;
interfaceinvoke v30.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v31, v32);
v33 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.Map decoders>;
v34 = <io.netty.handler.codec.dns.DnsRecordType: io.netty.handler.codec.dns.DnsRecordType SOA>;
v35 = <io.vertx.core.dns.impl.decoder.RecordDecoder: java.util.function.Function SOA>;
interfaceinvoke v33.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v34, v35);
return;
}
}