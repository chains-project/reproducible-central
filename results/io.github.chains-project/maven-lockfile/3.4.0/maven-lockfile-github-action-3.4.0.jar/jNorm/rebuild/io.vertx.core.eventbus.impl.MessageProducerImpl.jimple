public class io.vertx.core.eventbus.impl.MessageProducerImpl extends java.lang.Object implements io.vertx.core.eventbus.MessageProducer
{
private final io.vertx.core.Vertx vertx;
private final io.vertx.core.eventbus.impl.EventBusImpl bus;
private final boolean send;
private final java.lang.String address;
private io.vertx.core.eventbus.DeliveryOptions options;
public void <init>(io.vertx.core.Vertx, java.lang.String, boolean, io.vertx.core.eventbus.DeliveryOptions)
{
io.vertx.core.eventbus.DeliveryOptions v4;
io.vertx.core.eventbus.EventBus v5;
io.vertx.core.Vertx v1;
java.lang.String v2;
boolean v3;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 := @parameter0: io.vertx.core.Vertx;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: io.vertx.core.eventbus.DeliveryOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.Vertx vertx> = v1;
v5 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.eventbus.EventBus eventBus()>();
v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.impl.EventBusImpl bus> = v5;
v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: java.lang.String address> = v2;
v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: boolean send> = v3;
v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.DeliveryOptions options> = v4;
return;
}
public synchronized io.vertx.core.eventbus.MessageProducer deliveryOptions(io.vertx.core.eventbus.DeliveryOptions)
{
io.vertx.core.eventbus.DeliveryOptions v1;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 := @parameter0: io.vertx.core.eventbus.DeliveryOptions;
v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.DeliveryOptions options> = v1;
return v0;
}
public io.vertx.core.Future write(java.lang.Object)
{
io.vertx.core.impl.future.PromiseInternal v4;
io.vertx.core.Vertx v2;
io.vertx.core.impl.ContextInternal v3;
java.lang.Object v1;
io.vertx.core.Future v5;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.Vertx vertx>;
v3 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.ContextInternal getOrCreateContext()>();
v4 = interfaceinvoke v3.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise()>();
specialinvoke v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: void write(java.lang.Object,io.vertx.core.Promise)>(v1, v4);
v5 = interfaceinvoke v4.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v5;
}
public void write(java.lang.Object, io.vertx.core.Handler)
{
io.vertx.core.impl.future.PromiseInternal v3;
io.vertx.core.Vertx v4;
io.vertx.core.impl.ContextInternal v5;
java.lang.Object v1;
io.vertx.core.Handler v2;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.Handler;
v3 = null;
if v2 == null goto label1;
v4 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.Vertx vertx>;
v5 = interfaceinvoke v4.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.ContextInternal getOrCreateContext()>();
v3 = interfaceinvoke v5.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise(io.vertx.core.Handler)>(v2);
label1:
specialinvoke v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: void write(java.lang.Object,io.vertx.core.Promise)>(v1, v3);
return;
}
private void write(java.lang.Object, io.vertx.core.Promise)
{
io.vertx.core.eventbus.impl.EventBusImpl v11, v3;
io.vertx.core.eventbus.DeliveryOptions v12, v6, v8;
io.vertx.core.Promise v2;
io.vertx.core.MultiMap v7;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
io.vertx.core.eventbus.impl.MessageImpl v10;
java.lang.Object v1;
java.lang.String v5, v9;
boolean v4;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.Promise;
v3 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.impl.EventBusImpl bus>;
v4 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: boolean send>;
v5 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: java.lang.String address>;
v6 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.DeliveryOptions options>;
v7 = virtualinvoke v6.<io.vertx.core.eventbus.DeliveryOptions: io.vertx.core.MultiMap getHeaders()>();
v8 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.DeliveryOptions options>;
v9 = virtualinvoke v8.<io.vertx.core.eventbus.DeliveryOptions: java.lang.String getCodecName()>();
v10 = virtualinvoke v3.<io.vertx.core.eventbus.impl.EventBusImpl: io.vertx.core.eventbus.impl.MessageImpl createMessage(boolean,java.lang.String,io.vertx.core.MultiMap,java.lang.Object,java.lang.String)>(v4, v5, v7, v1, v9);
v11 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.impl.EventBusImpl bus>;
v12 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.eventbus.DeliveryOptions options>;
virtualinvoke v11.<io.vertx.core.eventbus.impl.EventBusImpl: void sendOrPubInternal(io.vertx.core.eventbus.impl.MessageImpl,io.vertx.core.eventbus.DeliveryOptions,io.vertx.core.eventbus.impl.ReplyHandler,io.vertx.core.Promise)>(v10, v12, null, v2);
return;
}
public java.lang.String address()
{
java.lang.String v1;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: java.lang.String address>;
return v1;
}
public io.vertx.core.Future close()
{
io.vertx.core.Vertx v1;
io.vertx.core.Context v2;
io.vertx.core.Future v3;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 = v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.Vertx vertx>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.Context getOrCreateContext()>();
v3 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.Future succeededFuture()>();
return v3;
}
public void close(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.core.Future v2;
io.vertx.core.eventbus.impl.MessageProducerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageProducerImpl;
v1 := @parameter0: io.vertx.core.Handler;
v2 = virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageProducerImpl: io.vertx.core.Future close()>();
if v1 == null goto label1;
interfaceinvoke v2.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v1);
label1:
return;
}
}