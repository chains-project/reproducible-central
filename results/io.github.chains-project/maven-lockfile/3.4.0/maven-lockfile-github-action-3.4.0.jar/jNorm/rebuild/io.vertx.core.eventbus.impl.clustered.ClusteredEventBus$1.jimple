class io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1 extends java.lang.Object implements io.vertx.core.Handler
{
int size;
final io.vertx.core.parsetools.RecordParser val$parser;
final io.vertx.core.net.NetSocket val$socket;
final io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0;
void <init>(io.vertx.core.eventbus.impl.clustered.ClusteredEventBus, io.vertx.core.parsetools.RecordParser, io.vertx.core.net.NetSocket)
{
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1 v0;
int v4;
io.vertx.core.parsetools.RecordParser v2;
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus v1;
io.vertx.core.net.NetSocket v3;
v0 := @this: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1;
v1 := @parameter0: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus;
v2 := @parameter1: io.vertx.core.parsetools.RecordParser;
v3 := @parameter2: io.vertx.core.net.NetSocket;
v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0> = v1;
v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.parsetools.RecordParser val$parser> = v2;
v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.net.NetSocket val$socket> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = (int) -1;
v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: int size> = v4;
return;
}
public void handle(io.vertx.core.buffer.Buffer)
{
io.vertx.core.spi.metrics.EventBusMetrics v12, v14;
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1 v0;
io.vertx.core.eventbus.impl.CodecManager v10;
int v16, v18, v2, v3, v4, v6;
io.vertx.core.parsetools.RecordParser v17, v5;
java.lang.String v15;
boolean v19;
io.vertx.core.eventbus.MessageCodec v20, v21;
io.vertx.core.buffer.Buffer v1, v23;
io.vertx.core.eventbus.impl.clustered.ClusteredEventBus v11, v13, v24, v8, v9;
io.vertx.core.eventbus.impl.clustered.ClusteredMessage v7;
io.vertx.core.net.NetSocket v22;
v0 := @this: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: int size>;
v3 = (int) -1;
if v2 != v3 goto label1;
v4 = interfaceinvoke v1.<io.vertx.core.buffer.Buffer: int getInt(int)>(0);
v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: int size> = v4;
v5 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.parsetools.RecordParser val$parser>;
v6 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: int size>;
interfaceinvoke v5.<io.vertx.core.parsetools.RecordParser: void fixedSizeMode(int)>(v6);
goto label5;
label1:
v7 = new io.vertx.core.eventbus.impl.clustered.ClusteredMessage;
v8 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0>;
specialinvoke v7.<io.vertx.core.eventbus.impl.clustered.ClusteredMessage: void <init>(io.vertx.core.eventbus.impl.EventBusImpl)>(v8);
v9 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0>;
v10 = v9.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus: io.vertx.core.eventbus.impl.CodecManager codecManager>;
virtualinvoke v7.<io.vertx.core.eventbus.impl.clustered.ClusteredMessage: void readFromWire(io.vertx.core.buffer.Buffer,io.vertx.core.eventbus.impl.CodecManager)>(v1, v10);
v11 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0>;
v12 = v11.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus: io.vertx.core.spi.metrics.EventBusMetrics metrics>;
if v12 == null goto label2;
v13 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0>;
v14 = v13.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus: io.vertx.core.spi.metrics.EventBusMetrics metrics>;
v15 = virtualinvoke v7.<io.vertx.core.eventbus.impl.clustered.ClusteredMessage: java.lang.String address()>();
v16 = interfaceinvoke v1.<io.vertx.core.buffer.Buffer: int length()>();
interfaceinvoke v14.<io.vertx.core.spi.metrics.EventBusMetrics: void messageRead(java.lang.String,int)>(v15, v16);
label2:
v17 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.parsetools.RecordParser val$parser>;
interfaceinvoke v17.<io.vertx.core.parsetools.RecordParser: void fixedSizeMode(int)>(4);
v18 = (int) -1;
v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: int size> = v18;
v19 = virtualinvoke v7.<io.vertx.core.eventbus.impl.clustered.ClusteredMessage: boolean hasFailure()>();
if v19 == 0 goto label3;
virtualinvoke v7.<io.vertx.core.eventbus.impl.clustered.ClusteredMessage: void internalError()>();
goto label5;
label3:
v20 = virtualinvoke v7.<io.vertx.core.eventbus.impl.clustered.ClusteredMessage: io.vertx.core.eventbus.MessageCodec codec()>();
v21 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec PING_MESSAGE_CODEC>;
if v20 != v21 goto label4;
v22 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.net.NetSocket val$socket>;
v23 = <io.vertx.core.eventbus.impl.clustered.ClusteredEventBus: io.vertx.core.buffer.Buffer PONG>;
interfaceinvoke v22.<io.vertx.core.net.NetSocket: io.vertx.core.Future write(java.lang.Object)>(v23);
goto label5;
label4:
v24 = v0.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus$1: io.vertx.core.eventbus.impl.clustered.ClusteredEventBus this$0>;
virtualinvoke v24.<io.vertx.core.eventbus.impl.clustered.ClusteredEventBus: io.vertx.core.eventbus.ReplyException deliverMessageLocally(io.vertx.core.eventbus.impl.MessageImpl)>(v7);
label5:
return;
}
}