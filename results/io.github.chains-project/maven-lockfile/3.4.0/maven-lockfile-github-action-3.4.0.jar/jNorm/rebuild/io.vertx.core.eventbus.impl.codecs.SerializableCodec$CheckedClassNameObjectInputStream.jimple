class io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream extends java.io.ObjectInputStream
{
final io.vertx.core.eventbus.impl.codecs.SerializableCodec this$0;
void <init>(io.vertx.core.eventbus.impl.codecs.SerializableCodec, java.io.InputStream) throws java.io.IOException
{
io.vertx.core.eventbus.impl.codecs.SerializableCodec v1;
io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream v0;
java.io.InputStream v2;
v0 := @this: io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream;
v1 := @parameter0: io.vertx.core.eventbus.impl.codecs.SerializableCodec;
v2 := @parameter1: java.io.InputStream;
v0.<io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream: io.vertx.core.eventbus.impl.codecs.SerializableCodec this$0> = v1;
specialinvoke v0.<java.io.ObjectInputStream: void <init>(java.io.InputStream)>(v2);
return;
}
protected java.lang.Class resolveClass(java.io.ObjectStreamClass) throws java.io.IOException, java.lang.ClassNotFoundException
{
io.vertx.core.eventbus.impl.codecs.SerializableCodec v3;
java.io.ObjectStreamClass v1;
io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream v0;
java.io.InvalidClassException v6;
io.vertx.core.eventbus.impl.CodecManager v4;
java.lang.Class v8;
java.lang.String v2, v7;
boolean v5;
v0 := @this: io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream;
v1 := @parameter0: java.io.ObjectStreamClass;
v2 = virtualinvoke v1.<java.io.ObjectStreamClass: java.lang.String getName()>();
v3 = v0.<io.vertx.core.eventbus.impl.codecs.SerializableCodec$CheckedClassNameObjectInputStream: io.vertx.core.eventbus.impl.codecs.SerializableCodec this$0>;
v4 = v3.<io.vertx.core.eventbus.impl.codecs.SerializableCodec: io.vertx.core.eventbus.impl.CodecManager codecManager>;
v5 = virtualinvoke v4.<io.vertx.core.eventbus.impl.CodecManager: boolean acceptSerializable(java.lang.String)>(v2);
if v5 != 0 goto label1;
v6 = new java.io.InvalidClassException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class not allowed: \u0001");
specialinvoke v6.<java.io.InvalidClassException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
v8 = specialinvoke v0.<java.io.ObjectInputStream: java.lang.Class resolveClass(java.io.ObjectStreamClass)>(v1);
return v8;
}
}