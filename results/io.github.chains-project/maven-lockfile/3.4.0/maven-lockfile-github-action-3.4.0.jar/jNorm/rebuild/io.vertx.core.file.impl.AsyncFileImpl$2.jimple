class io.vertx.core.file.impl.AsyncFileImpl$2 extends java.lang.Object implements java.nio.channels.CompletionHandler
{
long pos;
final long val$position;
final java.nio.ByteBuffer val$buff;
final io.vertx.core.buffer.Buffer val$writeBuff;
final int val$offset;
final io.vertx.core.Promise val$promise;
final io.vertx.core.file.impl.AsyncFileImpl this$0;
void <init>(io.vertx.core.file.impl.AsyncFileImpl, long, java.nio.ByteBuffer, io.vertx.core.buffer.Buffer, int, io.vertx.core.Promise)
{
io.vertx.core.file.impl.AsyncFileImpl v1;
io.vertx.core.Promise v6;
long v2, v7;
io.vertx.core.file.impl.AsyncFileImpl$2 v0;
java.nio.ByteBuffer v3;
io.vertx.core.buffer.Buffer v4;
int v5;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$2;
v1 := @parameter0: io.vertx.core.file.impl.AsyncFileImpl;
v2 := @parameter1: long;
v3 := @parameter2: java.nio.ByteBuffer;
v4 := @parameter3: io.vertx.core.buffer.Buffer;
v5 := @parameter4: int;
v6 := @parameter5: io.vertx.core.Promise;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.file.impl.AsyncFileImpl this$0> = v1;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: long val$position> = v2;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: java.nio.ByteBuffer val$buff> = v3;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.buffer.Buffer val$writeBuff> = v4;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: int val$offset> = v5;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.Promise val$promise> = v6;
specialinvoke v0.<java.lang.Object: void <init>()>();
v7 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: long val$position>;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: long pos> = v7;
return;
}
private void done()
{
io.vertx.core.Promise v6;
io.vertx.core.file.impl.AsyncFileImpl$2 v0;
java.nio.ByteBuffer v1, v4, v5;
io.vertx.core.buffer.Buffer v2, v7;
int v3;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$2;
v1 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: java.nio.ByteBuffer val$buff>;
virtualinvoke v1.<java.nio.ByteBuffer: java.nio.ByteBuffer flip()>();
v2 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.buffer.Buffer val$writeBuff>;
v3 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: int val$offset>;
v4 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: java.nio.ByteBuffer val$buff>;
interfaceinvoke v2.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer setBytes(int,java.nio.ByteBuffer)>(v3, v4);
v5 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: java.nio.ByteBuffer val$buff>;
virtualinvoke v5.<java.nio.ByteBuffer: java.nio.ByteBuffer compact()>();
v6 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.Promise val$promise>;
v7 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.buffer.Buffer val$writeBuff>;
interfaceinvoke v6.<io.vertx.core.Promise: void complete(java.lang.Object)>(v7);
return;
}
public void completed(java.lang.Integer, java.lang.Object)
{
io.vertx.core.file.impl.AsyncFileImpl v10;
long v14, v7, v9;
java.lang.Integer v1;
java.nio.ByteBuffer v13, v5;
int v12, v3, v4, v8;
boolean v6;
io.vertx.core.Promise v15;
io.vertx.core.file.impl.AsyncFileImpl$2 v0;
io.vertx.core.buffer.Buffer v11;
java.lang.Object v2;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$2;
v1 := @parameter0: java.lang.Integer;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v4 = (int) -1;
if v3 != v4 goto label1;
specialinvoke v0.<io.vertx.core.file.impl.AsyncFileImpl$2: void done()>();
goto label3;
label1:
v5 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: java.nio.ByteBuffer val$buff>;
v6 = virtualinvoke v5.<java.nio.ByteBuffer: boolean hasRemaining()>();
if v6 == 0 goto label2;
v7 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: long pos>;
v8 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v9 = v7 + v8;
v0.<io.vertx.core.file.impl.AsyncFileImpl$2: long pos> = v9;
v10 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.file.impl.AsyncFileImpl this$0>;
v11 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.buffer.Buffer val$writeBuff>;
v12 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: int val$offset>;
v13 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: java.nio.ByteBuffer val$buff>;
v14 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: long pos>;
v15 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.Promise val$promise>;
specialinvoke v10.<io.vertx.core.file.impl.AsyncFileImpl: void doRead(io.vertx.core.buffer.Buffer,int,java.nio.ByteBuffer,long,io.vertx.core.Promise)>(v11, v12, v13, v14, v15);
goto label3;
label2:
specialinvoke v0.<io.vertx.core.file.impl.AsyncFileImpl$2: void done()>();
label3:
return;
}
public void failed(java.lang.Throwable, java.lang.Object)
{
java.lang.Throwable v1;
io.vertx.core.Promise v3;
java.lang.Object v2;
io.vertx.core.file.impl.AsyncFileImpl$2 v0;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$2;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.vertx.core.file.impl.AsyncFileImpl$2: io.vertx.core.Promise val$promise>;
interfaceinvoke v3.<io.vertx.core.Promise: void fail(java.lang.Throwable)>(v1);
return;
}
}