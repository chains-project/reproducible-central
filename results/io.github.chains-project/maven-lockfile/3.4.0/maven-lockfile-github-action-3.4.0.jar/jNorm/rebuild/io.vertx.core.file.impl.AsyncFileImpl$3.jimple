class io.vertx.core.file.impl.AsyncFileImpl$3 extends java.lang.Object implements java.nio.channels.CompletionHandler
{
void <init>()
{
io.vertx.core.file.impl.AsyncFileImpl$3 v0;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void completed(java.nio.channels.FileLock, io.vertx.core.impl.future.PromiseInternal)
{
io.vertx.core.file.impl.AsyncFileLockImpl v3;
io.vertx.core.impl.VertxInternal v5;
io.vertx.core.impl.future.PromiseInternal v2;
io.vertx.core.impl.ContextInternal v4;
io.vertx.core.file.impl.AsyncFileImpl$3 v0;
java.nio.channels.FileLock v1;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$3;
v1 := @parameter0: java.nio.channels.FileLock;
v2 := @parameter1: io.vertx.core.impl.future.PromiseInternal;
v3 = new io.vertx.core.file.impl.AsyncFileLockImpl;
v4 = interfaceinvoke v2.<io.vertx.core.impl.future.PromiseInternal: io.vertx.core.impl.ContextInternal context()>();
v5 = interfaceinvoke v4.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.VertxInternal owner()>();
specialinvoke v3.<io.vertx.core.file.impl.AsyncFileLockImpl: void <init>(io.vertx.core.impl.VertxInternal,java.nio.channels.FileLock)>(v5, v1);
interfaceinvoke v2.<io.vertx.core.impl.future.PromiseInternal: void complete(java.lang.Object)>(v3);
return;
}
public void failed(java.lang.Throwable, io.vertx.core.impl.future.PromiseInternal)
{
java.lang.Throwable v1;
io.vertx.core.impl.future.PromiseInternal v2;
io.vertx.core.file.impl.AsyncFileImpl$3 v0;
io.vertx.core.file.FileSystemException v3;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$3;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: io.vertx.core.impl.future.PromiseInternal;
v3 = new io.vertx.core.file.FileSystemException;
specialinvoke v3.<io.vertx.core.file.FileSystemException: void <init>(java.lang.Throwable)>(v1);
interfaceinvoke v2.<io.vertx.core.impl.future.PromiseInternal: void fail(java.lang.Throwable)>(v3);
return;
}
}