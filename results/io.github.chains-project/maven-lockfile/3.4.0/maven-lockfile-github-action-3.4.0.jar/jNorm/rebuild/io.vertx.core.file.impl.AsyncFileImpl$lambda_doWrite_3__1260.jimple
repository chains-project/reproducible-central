public final class io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260 extends java.lang.Object implements io.vertx.core.Handler
{
io.vertx.core.file.impl.AsyncFileImpl cap0;
io.vertx.core.Handler cap1;
public static io.vertx.core.Handler bootstrap$(io.vertx.core.file.impl.AsyncFileImpl, io.vertx.core.Handler)
{
io.vertx.core.file.impl.AsyncFileImpl v0;
io.vertx.core.Handler v1;
io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260 v2;
v0 := @parameter0: io.vertx.core.file.impl.AsyncFileImpl;
v1 := @parameter1: io.vertx.core.Handler;
v2 = new io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260;
specialinvoke v2.<io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260: void <init>(io.vertx.core.file.impl.AsyncFileImpl,io.vertx.core.Handler)>(v0, v1);
return v2;
}
public void <init>(io.vertx.core.file.impl.AsyncFileImpl, io.vertx.core.Handler)
{
io.vertx.core.file.impl.AsyncFileImpl v1;
io.vertx.core.Handler v2;
io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260 v0;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260;
v1 := @parameter0: io.vertx.core.file.impl.AsyncFileImpl;
v2 := @parameter1: io.vertx.core.Handler;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260: io.vertx.core.file.impl.AsyncFileImpl cap0> = v1;
v0.<io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260: io.vertx.core.Handler cap1> = v2;
return;
}
public void handle(java.lang.Object)
{
io.vertx.core.file.impl.AsyncFileImpl v2;
io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260 v0;
java.lang.Object v1;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260: io.vertx.core.file.impl.AsyncFileImpl cap0>;
v3 = v0.<io.vertx.core.file.impl.AsyncFileImpl$lambda_doWrite_3__1260: io.vertx.core.Handler cap1>;
specialinvoke v2.<io.vertx.core.file.impl.AsyncFileImpl: void lambda$doWrite$3(io.vertx.core.Handler,io.vertx.core.AsyncResult)>(v3, v1);
return;
}
}