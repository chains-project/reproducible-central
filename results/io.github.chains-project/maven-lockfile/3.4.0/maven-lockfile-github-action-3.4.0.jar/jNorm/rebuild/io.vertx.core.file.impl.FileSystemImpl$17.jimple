class io.vertx.core.file.impl.FileSystemImpl$17 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$path;
final io.vertx.core.buffer.Buffer val$data;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, io.vertx.core.buffer.Buffer)
{
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemImpl$17 v0;
io.vertx.core.buffer.Buffer v3;
java.lang.String v2;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$17;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.core.buffer.Buffer;
v0.<io.vertx.core.file.impl.FileSystemImpl$17: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$17: java.lang.String val$path> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$17: io.vertx.core.buffer.Buffer val$data> = v3;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public java.lang.Void perform()
{
byte[] v7;
io.vertx.core.file.impl.FileSystemImpl$17 v0;
io.vertx.core.impl.VertxInternal v2;
java.io.IOException v9;
io.vertx.core.file.FileSystemException v10;
java.io.File v4;
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.buffer.Buffer v6;
java.nio.file.OpenOption[] v8;
java.lang.String v11, v12, v3;
java.nio.file.Path v5;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$17;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$17: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$17: java.lang.String val$path>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = v0.<io.vertx.core.file.impl.FileSystemImpl$17: io.vertx.core.buffer.Buffer val$data>;
v7 = interfaceinvoke v6.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
v8 = newarray (java.nio.file.OpenOption)[0];
staticinvoke <java.nio.file.Files: java.nio.file.Path write(java.nio.file.Path,byte[],java.nio.file.OpenOption[])>(v5, v7, v8);
label2:
return null;
label3:
v9 := @caughtexception;
v10 = new io.vertx.core.file.FileSystemException;
v11 = v0.<io.vertx.core.file.impl.FileSystemImpl$17: java.lang.String val$path>;
v12 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileAccessErrorMessage(java.lang.String,java.lang.String)>("write", v11);
specialinvoke v10.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v12, v9);
throw v10;
catch java.io.IOException from label1 to label2 with label3;
}
}