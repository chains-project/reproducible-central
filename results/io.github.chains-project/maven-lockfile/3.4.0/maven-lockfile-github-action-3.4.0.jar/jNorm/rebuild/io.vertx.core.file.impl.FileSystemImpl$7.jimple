class io.vertx.core.file.impl.FileSystemImpl$7 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$path;
final boolean val$followLinks;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, boolean)
{
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemImpl$7 v0;
java.lang.String v2;
boolean v3;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$7;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v0.<io.vertx.core.file.impl.FileSystemImpl$7: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$7: java.lang.String val$path> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$7: boolean val$followLinks> = v3;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public io.vertx.core.file.FileProps perform()
{
io.vertx.core.file.impl.FileSystemImpl$7 v0;
io.vertx.core.file.FileSystemException v13;
java.nio.file.LinkOption v10;
java.lang.String v14, v15, v3;
java.nio.file.Path v5;
boolean v6;
io.vertx.core.impl.VertxInternal v2;
java.nio.file.LinkOption[] v7, v9;
java.io.IOException v12;
java.nio.file.attribute.BasicFileAttributes v8;
java.io.File v4;
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FilePropsImpl v11;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$7;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$7: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$7: java.lang.String val$path>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = v0.<io.vertx.core.file.impl.FileSystemImpl$7: boolean val$followLinks>;
if v6 == 0 goto label2;
v7 = newarray (java.nio.file.LinkOption)[0];
v8 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(v5, class "Ljava/nio/file/attribute/BasicFileAttributes;", v7);
goto label3;
label2:
v9 = newarray (java.nio.file.LinkOption)[1];
v10 = <java.nio.file.LinkOption: java.nio.file.LinkOption NOFOLLOW_LINKS>;
v9[0] = v10;
v8 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.BasicFileAttributes readAttributes(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(v5, class "Ljava/nio/file/attribute/BasicFileAttributes;", v9);
label3:
v11 = new io.vertx.core.file.impl.FilePropsImpl;
specialinvoke v11.<io.vertx.core.file.impl.FilePropsImpl: void <init>(java.nio.file.attribute.BasicFileAttributes)>(v8);
label4:
return v11;
label5:
v12 := @caughtexception;
v13 = new io.vertx.core.file.FileSystemException;
v14 = v0.<io.vertx.core.file.impl.FileSystemImpl$7: java.lang.String val$path>;
v15 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileAccessErrorMessage(java.lang.String,java.lang.String)>("analyse", v14);
specialinvoke v13.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v15, v12);
throw v13;
catch java.io.IOException from label1 to label4 with label5;
}
}