public interface  io.vertx.core.http.ServerWebSocket extends java.lang.Object implements io.vertx.core.http.WebSocketBase
{
public abstract io.vertx.core.http.ServerWebSocket exceptionHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket handler(io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket pause();
public abstract io.vertx.core.http.ServerWebSocket resume();
public abstract io.vertx.core.http.ServerWebSocket fetch(long);
public abstract io.vertx.core.http.ServerWebSocket endHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket setWriteQueueMaxSize(int);
public abstract io.vertx.core.http.ServerWebSocket drainHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket writeFrame(io.vertx.core.http.WebSocketFrame, io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket writeFinalTextFrame(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket writeFinalBinaryFrame(io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket writeBinaryMessage(io.vertx.core.buffer.Buffer, io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket writeTextMessage(java.lang.String, io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket closeHandler(io.vertx.core.Handler);
public abstract io.vertx.core.http.ServerWebSocket frameHandler(io.vertx.core.Handler);
public abstract java.lang.String scheme();
public abstract java.lang.String host();
public abstract java.lang.String uri();
public abstract java.lang.String path();
public abstract java.lang.String query();
public abstract void accept();
public abstract void reject();
public abstract void reject(int);
public abstract void setHandshake(io.vertx.core.Future, io.vertx.core.Handler);
public abstract io.vertx.core.Future setHandshake(io.vertx.core.Future);
public abstract io.vertx.core.Future close();
public abstract javax.net.ssl.SSLSession sslSession();
}