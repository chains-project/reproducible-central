public class io.vertx.core.http.StreamPriority extends java.lang.Object
{
public static final int DEFAULT_DEPENDENCY;
public static final short DEFAULT_WEIGHT;
public static final boolean DEFAULT_EXCLUSIVE;
private short weight;
private int dependency;
private boolean exclusive;
public void <init>()
{
io.vertx.core.http.StreamPriority v0;
v0 := @this: io.vertx.core.http.StreamPriority;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.StreamPriority: short weight> = 16;
v0.<io.vertx.core.http.StreamPriority: int dependency> = 0;
v0.<io.vertx.core.http.StreamPriority: boolean exclusive> = 0;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.http.StreamPriority v0;
java.lang.Integer v2, v3, v5, v6;
short v4;
int v7;
java.lang.Boolean v8, v9;
io.vertx.core.json.JsonObject v1;
boolean v10;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(16);
v3 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>("weight", v2);
v4 = virtualinvoke v3.<java.lang.Integer: short shortValue()>();
v0.<io.vertx.core.http.StreamPriority: short weight> = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
v6 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>("dependency", v5);
v7 = virtualinvoke v6.<java.lang.Integer: int intValue()>();
v0.<io.vertx.core.http.StreamPriority: int dependency> = v7;
v8 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v9 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>("exclusive", v8);
v10 = virtualinvoke v9.<java.lang.Boolean: boolean booleanValue()>();
v0.<io.vertx.core.http.StreamPriority: boolean exclusive> = v10;
return;
}
public void <init>(io.vertx.core.http.StreamPriority)
{
short v2;
io.vertx.core.http.StreamPriority v0, v1;
int v3;
boolean v4;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 := @parameter0: io.vertx.core.http.StreamPriority;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1.<io.vertx.core.http.StreamPriority: short weight>;
v0.<io.vertx.core.http.StreamPriority: short weight> = v2;
v3 = v1.<io.vertx.core.http.StreamPriority: int dependency>;
v0.<io.vertx.core.http.StreamPriority: int dependency> = v3;
v4 = v1.<io.vertx.core.http.StreamPriority: boolean exclusive>;
v0.<io.vertx.core.http.StreamPriority: boolean exclusive> = v4;
return;
}
public short getWeight()
{
short v1;
io.vertx.core.http.StreamPriority v0;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 = v0.<io.vertx.core.http.StreamPriority: short weight>;
return v1;
}
public io.vertx.core.http.StreamPriority setWeight(short)
{
short v1;
io.vertx.core.http.StreamPriority v0;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 := @parameter0: short;
v0.<io.vertx.core.http.StreamPriority: short weight> = v1;
return v0;
}
public int getDependency()
{
int v1;
io.vertx.core.http.StreamPriority v0;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 = v0.<io.vertx.core.http.StreamPriority: int dependency>;
return v1;
}
public io.vertx.core.http.StreamPriority setDependency(int)
{
int v1;
io.vertx.core.http.StreamPriority v0;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 := @parameter0: int;
v0.<io.vertx.core.http.StreamPriority: int dependency> = v1;
return v0;
}
public boolean isExclusive()
{
io.vertx.core.http.StreamPriority v0;
boolean v1;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 = v0.<io.vertx.core.http.StreamPriority: boolean exclusive>;
return v1;
}
public io.vertx.core.http.StreamPriority setExclusive(boolean)
{
io.vertx.core.http.StreamPriority v0;
boolean v1;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 := @parameter0: boolean;
v0.<io.vertx.core.http.StreamPriority: boolean exclusive> = v1;
return v0;
}
public int hashCode()
{
io.vertx.core.http.StreamPriority v0;
short v2, v8;
int v3, v4, v5, v6, v7, v9;
boolean v1;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 = v0.<io.vertx.core.http.StreamPriority: boolean exclusive>;
if v1 == 0 goto label1;
v2 = 1231;
goto label2;
label1:
v2 = 1237;
label2:
v3 = 31 + v2;
v4 = 31 * v3;
v5 = v0.<io.vertx.core.http.StreamPriority: int dependency>;
v6 = v4 + v5;
v7 = 31 * v6;
v8 = v0.<io.vertx.core.http.StreamPriority: short weight>;
v9 = v7 + v8;
return v9;
}
public boolean equals(java.lang.Object)
{
io.vertx.core.http.StreamPriority v0;
short v8, v9;
int v6, v7;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v4, v5;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
return 0;
label3:
v4 = v0.<io.vertx.core.http.StreamPriority: boolean exclusive>;
v5 = v1.<io.vertx.core.http.StreamPriority: boolean exclusive>;
if v4 == v5 goto label4;
return 0;
label4:
v6 = v0.<io.vertx.core.http.StreamPriority: int dependency>;
v7 = v1.<io.vertx.core.http.StreamPriority: int dependency>;
if v6 == v7 goto label5;
return 0;
label5:
v8 = v0.<io.vertx.core.http.StreamPriority: short weight>;
v9 = v1.<io.vertx.core.http.StreamPriority: short weight>;
if v8 == v9 goto label6;
return 0;
label6:
return 1;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.http.StreamPriority v0;
java.lang.Integer v5;
short v2;
java.lang.Short v3;
int v4;
java.lang.Boolean v7;
io.vertx.core.json.JsonObject v1;
boolean v6;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
v2 = v0.<io.vertx.core.http.StreamPriority: short weight>;
v3 = staticinvoke <java.lang.Short: java.lang.Short valueOf(short)>(v2);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("weight", v3);
v4 = v0.<io.vertx.core.http.StreamPriority: int dependency>;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("dependency", v5);
v6 = v0.<io.vertx.core.http.StreamPriority: boolean exclusive>;
v7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("exclusive", v7);
return v1;
}
public java.lang.String toString()
{
short v1;
io.vertx.core.http.StreamPriority v0;
int v2;
java.lang.String v4;
boolean v3;
v0 := @this: io.vertx.core.http.StreamPriority;
v1 = v0.<io.vertx.core.http.StreamPriority: short weight>;
v2 = v0.<io.vertx.core.http.StreamPriority: int dependency>;
v3 = v0.<io.vertx.core.http.StreamPriority: boolean exclusive>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (short,int,boolean)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("StreamPriority [weight=\u0001, dependency=\u0001, exclusive=\u0001]");
return v4;
}
}