public class io.vertx.core.http.impl.Http1xOrH2CHandler extends io.netty.channel.ChannelInboundHandlerAdapter
{
public static final java.lang.String HTTP_2_PREFACE;
private static final byte[] HTTP_2_PREFACE_ARRAY;
private int current;
public void <init>()
{
io.vertx.core.http.impl.Http1xOrH2CHandler v0;
v0 := @this: io.vertx.core.http.impl.Http1xOrH2CHandler;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void <init>()>();
v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current> = 0;
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
byte[] v13, v19, v4;
io.vertx.core.http.impl.Http1xOrH2CHandler v0;
io.netty.channel.ChannelHandlerContext v1;
byte v12, v16;
int v10, v11, v14, v15, v17, v18, v20, v21, v22, v3, v5, v6, v7, v8, v9;
java.lang.Object v2;
v0 := @this: io.vertx.core.http.impl.Http1xOrH2CHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v4 = <io.vertx.core.http.impl.Http1xOrH2CHandler: byte[] HTTP_2_PREFACE_ARRAY>;
v5 = lengthof v4;
v6 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
v7 = v5 - v6;
v8 = staticinvoke <java.lang.Math: int min(int,int)>(v3, v7);
v9 = 0;
label1:
if v9 >= v8 goto label3;
v10 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v11 = v10 + v9;
v12 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(v11);
v13 = <io.vertx.core.http.impl.Http1xOrH2CHandler: byte[] HTTP_2_PREFACE_ARRAY>;
v14 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
v15 = v14 + v9;
v16 = v13[v15];
if v12 == v16 goto label2;
specialinvoke v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: void end(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean)>(v1, v2, 0);
return;
label2:
v9 = v9 + 1;
goto label1;
label3:
v17 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
v18 = v17 + v9;
v19 = <io.vertx.core.http.impl.Http1xOrH2CHandler: byte[] HTTP_2_PREFACE_ARRAY>;
v20 = lengthof v19;
if v18 != v20 goto label4;
specialinvoke v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: void end(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean)>(v1, v2, 1);
goto label5;
label4:
v21 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
v22 = v21 + v8;
v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current> = v22;
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
label5:
return;
}
private void end(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, boolean)
{
byte[] v9;
io.netty.channel.ChannelPipeline v11;
io.vertx.core.http.impl.Http1xOrH2CHandler v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v8;
int v10, v4, v5, v6, v7;
boolean v3;
v0 := @this: io.vertx.core.http.impl.Http1xOrH2CHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: boolean;
v4 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
if v4 <= 0 goto label1;
v5 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = v5 + v6;
v8 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf buffer(int)>(v7);
v9 = <io.vertx.core.http.impl.Http1xOrH2CHandler: byte[] HTTP_2_PREFACE_ARRAY>;
v10 = v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: int current>;
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[],int,int)>(v9, 0, v10);
virtualinvoke v8.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v2);
virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean release()>();
v2 = v8;
label1:
virtualinvoke v0.<io.vertx.core.http.impl.Http1xOrH2CHandler: void configure(io.netty.channel.ChannelHandlerContext,boolean)>(v1, v3);
v11 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v11.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelRead(java.lang.Object)>(v2);
return;
}
protected void configure(io.netty.channel.ChannelHandlerContext, boolean)
{
io.netty.channel.ChannelHandlerContext v1;
io.vertx.core.http.impl.Http1xOrH2CHandler v0;
boolean v2;
v0 := @this: io.vertx.core.http.impl.Http1xOrH2CHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: boolean;
return;
}
public void exceptionCaught(io.netty.channel.ChannelHandlerContext, java.lang.Throwable) throws java.lang.Exception
{
io.netty.channel.Channel v3;
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.vertx.core.http.impl.Http1xOrH2CHandler v0;
v0 := @this: io.vertx.core.http.impl.Http1xOrH2CHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Throwable;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
interfaceinvoke v3.<io.netty.channel.Channel: io.netty.channel.ChannelFuture close()>();
return;
}
static void <clinit>()
{
byte[] v1;
java.lang.String v0;
v0 = "PRI * HTTP/2.0\r\n\r\nSM\r\n\r\n";
v1 = virtualinvoke v0.<java.lang.String: byte[] getBytes()>();
<io.vertx.core.http.impl.Http1xOrH2CHandler: byte[] HTTP_2_PREFACE_ARRAY> = v1;
return;
}
}