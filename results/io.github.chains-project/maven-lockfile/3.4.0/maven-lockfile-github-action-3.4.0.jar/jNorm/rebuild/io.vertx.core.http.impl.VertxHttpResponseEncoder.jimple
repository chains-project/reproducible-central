final class io.vertx.core.http.impl.VertxHttpResponseEncoder extends io.netty.handler.codec.http.HttpResponseEncoder
{
void <init>()
{
io.vertx.core.http.impl.VertxHttpResponseEncoder v0;
v0 := @this: io.vertx.core.http.impl.VertxHttpResponseEncoder;
specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: void <init>()>();
return;
}
protected void encodeHeaders(io.netty.handler.codec.http.HttpHeaders, io.netty.buffer.ByteBuf)
{
io.vertx.core.http.impl.VertxHttpResponseEncoder v0;
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.buffer.ByteBuf v2;
boolean v3;
v0 := @this: io.vertx.core.http.impl.VertxHttpResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = v1 instanceof io.vertx.core.http.impl.headers.HeadersMultiMap;
if v3 == 0 goto label1;
virtualinvoke v1.<io.vertx.core.http.impl.headers.HeadersMultiMap: void encode(io.netty.buffer.ByteBuf)>(v2);
goto label2;
label1:
specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: void encodeHeaders(io.netty.handler.codec.http.HttpHeaders,io.netty.buffer.ByteBuf)>(v1, v2);
label2:
return;
}
public boolean acceptOutboundMessage(java.lang.Object) throws java.lang.Exception
{
io.vertx.core.http.impl.VertxHttpResponseEncoder v0;
io.netty.buffer.ByteBuf v2;
java.lang.Class v4;
java.lang.Object v1;
boolean v5;
io.netty.handler.codec.http.LastHttpContent v3;
v0 := @this: io.vertx.core.http.impl.VertxHttpResponseEncoder;
v1 := @parameter0: java.lang.Object;
v2 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
if v1 == v2 goto label1;
v3 = <io.netty.handler.codec.http.LastHttpContent: io.netty.handler.codec.http.LastHttpContent EMPTY_LAST_CONTENT>;
if v1 != v3 goto label2;
label1:
return 1;
label2:
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v4 == class "Lio/vertx/core/http/impl/AssembledFullHttpResponse;" goto label3;
if v4 == class "Lio/netty/handler/codec/http/DefaultFullHttpResponse;" goto label3;
if v4 == class "Lio/vertx/core/http/impl/AssembledHttpResponse;" goto label3;
if v4 == class "Lio/netty/handler/codec/http/DefaultHttpContent;" goto label3;
if v4 == class "Lio/vertx/core/http/impl/AssembledLastHttpContent;" goto label3;
if v4 != class "Lio/netty/channel/DefaultFileRegion;" goto label4;
label3:
return 1;
label4:
v5 = specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: boolean acceptOutboundMessage(java.lang.Object)>(v1);
return v5;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.vertx.core.http.impl.VertxHttpResponseEncoder v0;
io.netty.channel.ChannelHandlerContext v1;
v0 := @this: io.vertx.core.http.impl.VertxHttpResponseEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
return;
}
protected boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse)
{
io.vertx.core.http.impl.VertxHttpResponseEncoder v0;
io.netty.handler.codec.http.HttpResponse v1;
boolean v2, v3, v4, v5;
v0 := @this: io.vertx.core.http.impl.VertxHttpResponseEncoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpResponse;
v2 = v1 instanceof io.vertx.core.http.impl.AssembledHttpResponse;
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<io.vertx.core.http.impl.AssembledHttpResponse: boolean head()>();
if v3 != 0 goto label2;
label1:
v4 = specialinvoke v0.<io.netty.handler.codec.http.HttpResponseEncoder: boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpResponse)>(v1);
if v4 == 0 goto label3;
label2:
v5 = 1;
goto label4;
label3:
v5 = 0;
label4:
return v5;
}
}