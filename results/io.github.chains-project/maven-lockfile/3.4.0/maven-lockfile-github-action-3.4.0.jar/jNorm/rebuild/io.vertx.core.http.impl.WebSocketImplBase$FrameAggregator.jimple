class io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator extends java.lang.Object implements io.vertx.core.Handler
{
private io.vertx.core.Handler textMessageHandler;
private io.vertx.core.Handler binaryMessageHandler;
private io.vertx.core.buffer.Buffer textMessageBuffer;
private io.vertx.core.buffer.Buffer binaryMessageBuffer;
final io.vertx.core.http.impl.WebSocketImplBase this$0;
private void <init>(io.vertx.core.http.impl.WebSocketImplBase)
{
io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator v0;
io.vertx.core.http.impl.WebSocketImplBase v1;
v0 := @this: io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator;
v1 := @parameter0: io.vertx.core.http.impl.WebSocketImplBase;
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void handle(io.vertx.core.http.impl.ws.WebSocketFrameInternal)
{
io.vertx.core.http.WebSocketFrameType v3;
io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator v0;
io.vertx.core.buffer.Buffer v10, v6, v7, v9;
int[] v2;
int v11, v4, v5, v8;
io.vertx.core.http.impl.ws.WebSocketFrameInternal v1;
v0 := @this: io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator;
v1 := @parameter0: io.vertx.core.http.impl.ws.WebSocketFrameInternal;
v2 = <io.vertx.core.http.impl.WebSocketImplBase$1: int[] $SwitchMap$io$vertx$core$http$WebSocketFrameType>;
v3 = interfaceinvoke v1.<io.vertx.core.http.impl.ws.WebSocketFrameInternal: io.vertx.core.http.WebSocketFrameType type()>();
v4 = virtualinvoke v3.<io.vertx.core.http.WebSocketFrameType: int ordinal()>();
v5 = v2[v4];
tableswitch(v5)
{
case 1: goto label2;
case 2: goto label1;
case 3: goto label5;
case 4: goto label3;
default: goto label5;
};
label1:
specialinvoke v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: void handleTextFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)>(v1);
goto label5;
label2:
specialinvoke v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: void handleBinaryFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)>(v1);
goto label5;
label3:
v6 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
if v6 == null goto label4;
v7 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
v8 = interfaceinvoke v7.<io.vertx.core.buffer.Buffer: int length()>();
if v8 <= 0 goto label4;
specialinvoke v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: void handleTextFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)>(v1);
goto label5;
label4:
v9 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
if v9 == null goto label5;
v10 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
v11 = interfaceinvoke v10.<io.vertx.core.buffer.Buffer: int length()>();
if v11 <= 0 goto label5;
specialinvoke v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: void handleBinaryFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)>(v1);
label5:
return;
}
private void handleTextFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)
{
java.lang.IllegalStateException v19;
io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator v0;
io.netty.buffer.ByteBuf v2;
int v11, v12, v13, v14, v16, v7, v9;
java.lang.String v17, v22;
io.vertx.core.http.impl.WebSocketImplBase v15, v18, v8;
boolean v20;
io.vertx.core.buffer.Buffer v10, v21, v3, v4, v5, v6;
io.vertx.core.http.impl.ws.WebSocketFrameInternal v1;
io.vertx.core.Handler v23, v24;
v0 := @this: io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator;
v1 := @parameter0: io.vertx.core.http.impl.ws.WebSocketFrameInternal;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.ws.WebSocketFrameInternal: io.netty.buffer.ByteBuf getBinaryData()>();
v3 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v2);
v4 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
if v4 != null goto label1;
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer> = v3;
goto label2;
label1:
v5 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
interfaceinvoke v5.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer)>(v3);
label2:
v6 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
v7 = interfaceinvoke v6.<io.vertx.core.buffer.Buffer: int length()>();
v8 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0>;
v9 = v8.<io.vertx.core.http.impl.WebSocketImplBase: int maxWebSocketMessageSize>;
if v7 <= v9 goto label3;
v10 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
v11 = interfaceinvoke v10.<io.vertx.core.buffer.Buffer: int length()>();
v12 = interfaceinvoke v3.<io.vertx.core.buffer.Buffer: int length()>();
v13 = v11 - v12;
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer> = null;
v14 = interfaceinvoke v3.<io.vertx.core.buffer.Buffer: int length()>();
v15 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0>;
v16 = v15.<io.vertx.core.http.impl.WebSocketImplBase: int maxWebSocketMessageSize>;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v14, v13, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot process text frame of size \u0001, it would cause message buffer (size \u0001) to overflow max message size of \u0001");
v18 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0>;
v19 = new java.lang.IllegalStateException;
specialinvoke v19.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v17);
virtualinvoke v18.<io.vertx.core.http.impl.WebSocketImplBase: void handleException(java.lang.Throwable)>(v19);
return;
label3:
v20 = interfaceinvoke v1.<io.vertx.core.http.impl.ws.WebSocketFrameInternal: boolean isFinal()>();
if v20 == 0 goto label4;
v21 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer>;
v22 = interfaceinvoke v21.<io.vertx.core.buffer.Buffer: java.lang.String toString()>();
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer textMessageBuffer> = null;
v23 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.Handler textMessageHandler>;
if v23 == null goto label4;
v24 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.Handler textMessageHandler>;
interfaceinvoke v24.<io.vertx.core.Handler: void handle(java.lang.Object)>(v22);
label4:
return;
}
private void handleBinaryFrame(io.vertx.core.http.impl.ws.WebSocketFrameInternal)
{
java.lang.IllegalStateException v19;
io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator v0;
io.netty.buffer.ByteBuf v2;
int v11, v12, v13, v14, v16, v7, v9;
java.lang.String v17;
io.vertx.core.http.impl.WebSocketImplBase v15, v18, v8;
boolean v20;
io.vertx.core.buffer.Buffer v10, v21, v22, v3, v4, v5, v6;
io.vertx.core.http.impl.ws.WebSocketFrameInternal v1;
io.vertx.core.Handler v23, v24;
v0 := @this: io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator;
v1 := @parameter0: io.vertx.core.http.impl.ws.WebSocketFrameInternal;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.ws.WebSocketFrameInternal: io.netty.buffer.ByteBuf getBinaryData()>();
v3 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v2);
v4 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
if v4 != null goto label1;
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer> = v3;
goto label2;
label1:
v5 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
interfaceinvoke v5.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer)>(v3);
label2:
v6 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
v7 = interfaceinvoke v6.<io.vertx.core.buffer.Buffer: int length()>();
v8 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0>;
v9 = v8.<io.vertx.core.http.impl.WebSocketImplBase: int maxWebSocketMessageSize>;
if v7 <= v9 goto label3;
v10 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
v11 = interfaceinvoke v10.<io.vertx.core.buffer.Buffer: int length()>();
v12 = interfaceinvoke v3.<io.vertx.core.buffer.Buffer: int length()>();
v13 = v11 - v12;
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer> = null;
v14 = interfaceinvoke v3.<io.vertx.core.buffer.Buffer: int length()>();
v15 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0>;
v16 = v15.<io.vertx.core.http.impl.WebSocketImplBase: int maxWebSocketMessageSize>;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v14, v13, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot process binary frame of size \u0001, it would cause message buffer (size \u0001) to overflow max message size of \u0001");
v18 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.http.impl.WebSocketImplBase this$0>;
v19 = new java.lang.IllegalStateException;
specialinvoke v19.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v17);
virtualinvoke v18.<io.vertx.core.http.impl.WebSocketImplBase: void handleException(java.lang.Throwable)>(v19);
return;
label3:
v20 = interfaceinvoke v1.<io.vertx.core.http.impl.ws.WebSocketFrameInternal: boolean isFinal()>();
if v20 == 0 goto label4;
v21 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer>;
v22 = interfaceinvoke v21.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer copy()>();
v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.buffer.Buffer binaryMessageBuffer> = null;
v23 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.Handler binaryMessageHandler>;
if v23 == null goto label4;
v24 = v0.<io.vertx.core.http.impl.WebSocketImplBase$FrameAggregator: io.vertx.core.Handler binaryMessageHandler>;
interfaceinvoke v24.<io.vertx.core.Handler: void handle(java.lang.Object)>(v22);
label4:
return;
}
}