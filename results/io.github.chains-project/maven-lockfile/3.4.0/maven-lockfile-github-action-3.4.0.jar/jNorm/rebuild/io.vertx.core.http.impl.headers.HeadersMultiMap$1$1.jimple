class io.vertx.core.http.impl.headers.HeadersMultiMap$1$1 extends java.lang.Object implements java.util.Map$Entry
{
final io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry val$next;
final io.vertx.core.http.impl.headers.HeadersMultiMap$1 this$1;
void <init>(io.vertx.core.http.impl.headers.HeadersMultiMap$1, io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry)
{
io.vertx.core.http.impl.headers.HeadersMultiMap$1 v1;
io.vertx.core.http.impl.headers.HeadersMultiMap$1$1 v0;
io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersMultiMap$1$1;
v1 := @parameter0: io.vertx.core.http.impl.headers.HeadersMultiMap$1;
v2 := @parameter1: io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry;
v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: io.vertx.core.http.impl.headers.HeadersMultiMap$1 this$1> = v1;
v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry val$next> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.String getKey()
{
io.vertx.core.http.impl.headers.HeadersMultiMap$1$1 v0;
java.lang.CharSequence v2;
java.lang.String v3;
io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersMultiMap$1$1;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry val$next>;
v2 = v1.<io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry: java.lang.CharSequence key>;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
return v3;
}
public java.lang.String getValue()
{
io.vertx.core.http.impl.headers.HeadersMultiMap$1$1 v0;
java.lang.CharSequence v2;
java.lang.String v3;
io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersMultiMap$1$1;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry val$next>;
v2 = v1.<io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry: java.lang.CharSequence value>;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
return v3;
}
public java.lang.String setValue(java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersMultiMap$1$1 v0;
java.lang.CharSequence v3;
java.lang.String v1, v4;
io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersMultiMap$1$1;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry val$next>;
v3 = virtualinvoke v2.<io.vertx.core.http.impl.headers.HeadersMultiMap$MapEntry: java.lang.CharSequence setValue(java.lang.CharSequence)>(v1);
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
return v4;
}
public java.lang.String toString()
{
io.vertx.core.http.impl.headers.HeadersMultiMap$1$1 v0;
java.lang.String v1, v2, v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersMultiMap$1$1;
v1 = virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: java.lang.String getKey()>();
v2 = virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersMultiMap$1$1: java.lang.String getValue()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001=\u0001");
return v3;
}
}