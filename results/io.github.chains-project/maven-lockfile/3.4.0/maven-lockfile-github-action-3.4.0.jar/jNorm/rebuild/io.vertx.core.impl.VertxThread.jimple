public class io.vertx.core.impl.VertxThread extends io.netty.util.concurrent.FastThreadLocalThread
{
private final boolean worker;
final io.vertx.core.impl.btc.ThreadInfo info;
io.vertx.core.impl.ContextInternal context;
java.lang.ClassLoader topLevelTCCL;
public void <init>(java.lang.Runnable, java.lang.String, boolean, long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v5;
io.vertx.core.impl.VertxThread v0;
long v4;
java.lang.String v2;
io.vertx.core.impl.btc.ThreadInfo v6;
java.lang.Runnable v1;
boolean v3;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 := @parameter0: java.lang.Runnable;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: long;
v5 := @parameter4: java.util.concurrent.TimeUnit;
specialinvoke v0.<io.netty.util.concurrent.FastThreadLocalThread: void <init>(java.lang.Runnable,java.lang.String)>(v1, v2);
v0.<io.vertx.core.impl.VertxThread: boolean worker> = v3;
v6 = new io.vertx.core.impl.btc.ThreadInfo;
specialinvoke v6.<io.vertx.core.impl.btc.ThreadInfo: void <init>(java.util.concurrent.TimeUnit,long)>(v5, v4);
v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.btc.ThreadInfo info> = v6;
return;
}
io.vertx.core.impl.ContextInternal context()
{
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.impl.VertxThread v0;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.ContextInternal context>;
return v1;
}
void executeStart()
{
io.vertx.core.impl.VertxThread v0;
io.vertx.core.impl.ContextInternal v1;
long v3;
io.vertx.core.impl.btc.ThreadInfo v2;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.ContextInternal context>;
if v1 != null goto label1;
v2 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.btc.ThreadInfo info>;
v3 = staticinvoke <java.lang.System: long nanoTime()>();
v2.<io.vertx.core.impl.btc.ThreadInfo: long startTime> = v3;
label1:
return;
}
void executeEnd()
{
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.impl.VertxThread v0;
io.vertx.core.impl.btc.ThreadInfo v2;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.ContextInternal context>;
if v1 != null goto label1;
v2 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.btc.ThreadInfo info>;
v2.<io.vertx.core.impl.btc.ThreadInfo: long startTime> = 0L;
label1:
return;
}
public long startTime()
{
io.vertx.core.impl.VertxThread v0;
long v2;
io.vertx.core.impl.btc.ThreadInfo v1;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.btc.ThreadInfo info>;
v2 = v1.<io.vertx.core.impl.btc.ThreadInfo: long startTime>;
return v2;
}
public boolean isWorker()
{
io.vertx.core.impl.VertxThread v0;
boolean v1;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: boolean worker>;
return v1;
}
public long maxExecTime()
{
io.vertx.core.impl.VertxThread v0;
long v2;
io.vertx.core.impl.btc.ThreadInfo v1;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.btc.ThreadInfo info>;
v2 = v1.<io.vertx.core.impl.btc.ThreadInfo: long maxExecTime>;
return v2;
}
public java.util.concurrent.TimeUnit maxExecTimeUnit()
{
java.util.concurrent.TimeUnit v2;
io.vertx.core.impl.VertxThread v0;
io.vertx.core.impl.btc.ThreadInfo v1;
v0 := @this: io.vertx.core.impl.VertxThread;
v1 = v0.<io.vertx.core.impl.VertxThread: io.vertx.core.impl.btc.ThreadInfo info>;
v2 = v1.<io.vertx.core.impl.btc.ThreadInfo: java.util.concurrent.TimeUnit maxExecTimeUnit>;
return v2;
}
}