public class io.vertx.core.impl.WorkerContext extends io.vertx.core.impl.ContextBase
{
private java.util.concurrent.Executor executor;
void <init>(io.vertx.core.impl.VertxInternal, io.vertx.core.impl.WorkerPool, io.vertx.core.impl.WorkerPool, io.vertx.core.impl.Deployment, io.vertx.core.impl.CloseFuture, java.lang.ClassLoader)
{
io.netty.channel.EventLoopGroup v7;
io.vertx.core.impl.VertxInternal v1;
io.vertx.core.impl.WorkerPool v2, v3;
io.netty.channel.EventLoop v8;
io.vertx.core.impl.Deployment v4;
io.vertx.core.impl.CloseFuture v5;
io.vertx.core.impl.WorkerContext v0;
java.lang.ClassLoader v6;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.VertxInternal;
v2 := @parameter1: io.vertx.core.impl.WorkerPool;
v3 := @parameter2: io.vertx.core.impl.WorkerPool;
v4 := @parameter3: io.vertx.core.impl.Deployment;
v5 := @parameter4: io.vertx.core.impl.CloseFuture;
v6 := @parameter5: java.lang.ClassLoader;
v7 = interfaceinvoke v1.<io.vertx.core.impl.VertxInternal: io.netty.channel.EventLoopGroup getEventLoopGroup()>();
v8 = interfaceinvoke v7.<io.netty.channel.EventLoopGroup: io.netty.channel.EventLoop next()>();
specialinvoke v0.<io.vertx.core.impl.ContextBase: void <init>(io.vertx.core.impl.VertxInternal,io.netty.channel.EventLoop,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.WorkerPool,io.vertx.core.impl.Deployment,io.vertx.core.impl.CloseFuture,java.lang.ClassLoader)>(v1, v8, v2, v3, v4, v5, v6);
return;
}
protected void runOnContext(io.vertx.core.impl.ContextInternal, io.vertx.core.Handler)
{
java.util.concurrent.RejectedExecutionException v3;
io.vertx.core.impl.WorkerContext v0;
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: io.vertx.core.Handler;
label1:
specialinvoke v0.<io.vertx.core.impl.WorkerContext: void run(io.vertx.core.impl.ContextInternal,java.lang.Object,io.vertx.core.Handler)>(v1, null, v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.util.concurrent.RejectedExecutionException from label1 to label2 with label3;
}
protected void execute(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.Handler)
{
io.vertx.core.impl.WorkerContext v0;
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.impl.TaskQueue v4;
java.lang.Object v2;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.impl.WorkerContext: io.vertx.core.impl.TaskQueue orderedTasks>;
specialinvoke v0.<io.vertx.core.impl.WorkerContext: void execute(io.vertx.core.impl.TaskQueue,java.lang.Object,io.vertx.core.Handler)>(v4, v2, v3);
return;
}
protected void emit(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.Handler)
{
io.vertx.core.impl.WorkerContext v0;
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.impl.TaskQueue v4;
java.lang.Object v2;
io.vertx.core.Handler v3, v5;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.impl.WorkerContext: io.vertx.core.impl.TaskQueue orderedTasks>;
v5 = staticinvoke <io.vertx.core.impl.WorkerContext$lambda_emit_0__1458: io.vertx.core.Handler bootstrap$(io.vertx.core.impl.ContextInternal,io.vertx.core.Handler)>(v1, v3);
specialinvoke v0.<io.vertx.core.impl.WorkerContext: void execute(io.vertx.core.impl.TaskQueue,java.lang.Object,io.vertx.core.Handler)>(v4, v2, v5);
return;
}
protected void execute(io.vertx.core.impl.ContextInternal, java.lang.Runnable)
{
io.vertx.core.impl.WorkerContext v0;
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.Handler v3;
java.lang.Runnable v2;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Runnable;
v3 = staticinvoke <io.vertx.core.impl.WorkerContext$run__1459: io.vertx.core.Handler bootstrap$()>();
virtualinvoke v0.<io.vertx.core.impl.WorkerContext: void execute(io.vertx.core.impl.ContextInternal,java.lang.Object,io.vertx.core.Handler)>(v0, v2, v3);
return;
}
public boolean isEventLoopContext()
{
io.vertx.core.impl.WorkerContext v0;
v0 := @this: io.vertx.core.impl.WorkerContext;
return 0;
}
public boolean isWorkerContext()
{
io.vertx.core.impl.WorkerContext v0;
v0 := @this: io.vertx.core.impl.WorkerContext;
return 1;
}
public java.util.concurrent.Executor executor()
{
java.util.concurrent.Executor v1, v2, v3;
io.vertx.core.impl.WorkerContext v0;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 = v0.<io.vertx.core.impl.WorkerContext: java.util.concurrent.Executor executor>;
if v1 != null goto label1;
v2 = staticinvoke <io.vertx.core.impl.WorkerContext$lambda_executor_2__1460: java.util.concurrent.Executor bootstrap$(io.vertx.core.impl.WorkerContext)>(v0);
v0.<io.vertx.core.impl.WorkerContext: java.util.concurrent.Executor executor> = v2;
label1:
v3 = v0.<io.vertx.core.impl.WorkerContext: java.util.concurrent.Executor executor>;
return v3;
}
private void run(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.Handler)
{
java.util.concurrent.Executor v4;
io.vertx.core.impl.WorkerContext v0;
io.vertx.core.impl.ContextInternal v1;
java.lang.Object v2;
io.vertx.core.Handler v3;
java.lang.Runnable v5;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v3, "Task handler must not be null");
v4 = virtualinvoke v0.<io.vertx.core.impl.WorkerContext: java.util.concurrent.Executor executor()>();
v5 = staticinvoke <io.vertx.core.impl.WorkerContext$lambda_run_3__1461: java.lang.Runnable bootstrap$(io.vertx.core.impl.ContextInternal,java.lang.Object,io.vertx.core.Handler)>(v1, v2, v3);
interfaceinvoke v4.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(v5);
return;
}
private void execute(io.vertx.core.impl.TaskQueue, java.lang.Object, io.vertx.core.Handler)
{
io.vertx.core.impl.WorkerPool v5, v9;
java.lang.Runnable v8;
io.vertx.core.spi.metrics.PoolMetrics v6;
io.vertx.core.impl.WorkerContext v0;
io.vertx.core.impl.TaskQueue v1;
java.lang.Object v2, v7;
io.vertx.core.Handler v3;
java.util.concurrent.ExecutorService v10;
boolean v4;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 := @parameter0: io.vertx.core.impl.TaskQueue;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
v4 = staticinvoke <io.vertx.core.Context: boolean isOnWorkerThread()>();
if v4 == 0 goto label1;
interfaceinvoke v3.<io.vertx.core.Handler: void handle(java.lang.Object)>(v2);
goto label4;
label1:
v5 = v0.<io.vertx.core.impl.WorkerContext: io.vertx.core.impl.WorkerPool workerPool>;
v6 = virtualinvoke v5.<io.vertx.core.impl.WorkerPool: io.vertx.core.spi.metrics.PoolMetrics metrics()>();
if v6 == null goto label2;
v7 = interfaceinvoke v6.<io.vertx.core.spi.metrics.PoolMetrics: java.lang.Object submitted()>();
goto label3;
label2:
v7 = null;
label3:
v8 = staticinvoke <io.vertx.core.impl.WorkerContext$lambda_execute_4__1462: java.lang.Runnable bootstrap$(io.vertx.core.spi.metrics.PoolMetrics,java.lang.Object,io.vertx.core.Handler,java.lang.Object)>(v6, v7, v3, v2);
v9 = v0.<io.vertx.core.impl.WorkerContext: io.vertx.core.impl.WorkerPool workerPool>;
v10 = virtualinvoke v9.<io.vertx.core.impl.WorkerPool: java.util.concurrent.ExecutorService executor()>();
virtualinvoke v1.<io.vertx.core.impl.TaskQueue: void execute(java.lang.Runnable,java.util.concurrent.Executor)>(v8, v10);
label4:
return;
}
public boolean inThread()
{
io.vertx.core.impl.WorkerContext v0;
boolean v1;
v0 := @this: io.vertx.core.impl.WorkerContext;
v1 = staticinvoke <io.vertx.core.Context: boolean isOnWorkerThread()>();
return v1;
}
}