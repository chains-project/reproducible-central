class io.vertx.core.impl.future.Composition extends io.vertx.core.impl.future.Operation implements io.vertx.core.impl.future.Listener
{
private final java.util.function.Function successMapper;
private final java.util.function.Function failureMapper;
void <init>(io.vertx.core.impl.ContextInternal, java.util.function.Function, java.util.function.Function)
{
io.vertx.core.impl.ContextInternal v1;
java.util.function.Function v2, v3;
io.vertx.core.impl.future.Composition v0;
v0 := @this: io.vertx.core.impl.future.Composition;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: java.util.function.Function;
specialinvoke v0.<io.vertx.core.impl.future.Operation: void <init>(io.vertx.core.impl.ContextInternal)>(v1);
v0.<io.vertx.core.impl.future.Composition: java.util.function.Function successMapper> = v2;
v0.<io.vertx.core.impl.future.Composition: java.util.function.Function failureMapper> = v3;
return;
}
public void onSuccess(java.lang.Object)
{
java.lang.Throwable v4;
java.lang.Object v1, v3;
io.vertx.core.impl.future.Listener v5;
java.util.function.Function v2;
io.vertx.core.impl.future.Composition v0;
v0 := @this: io.vertx.core.impl.future.Composition;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<io.vertx.core.impl.future.Composition: java.util.function.Function successMapper>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.future.Composition: boolean tryFail(java.lang.Throwable)>(v4);
return;
label4:
v5 = specialinvoke v0.<io.vertx.core.impl.future.Composition: io.vertx.core.impl.future.Listener newListener()>();
interfaceinvoke v3.<io.vertx.core.impl.future.FutureInternal: void addListener(io.vertx.core.impl.future.Listener)>(v5);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1, v4;
java.lang.Object v3;
io.vertx.core.impl.future.Listener v5;
java.util.function.Function v2;
io.vertx.core.impl.future.Composition v0;
v0 := @this: io.vertx.core.impl.future.Composition;
v1 := @parameter0: java.lang.Throwable;
label1:
v2 = v0.<io.vertx.core.impl.future.Composition: java.util.function.Function failureMapper>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.future.Composition: boolean tryFail(java.lang.Throwable)>(v4);
return;
label4:
v5 = specialinvoke v0.<io.vertx.core.impl.future.Composition: io.vertx.core.impl.future.Listener newListener()>();
interfaceinvoke v3.<io.vertx.core.impl.future.FutureInternal: void addListener(io.vertx.core.impl.future.Listener)>(v5);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private io.vertx.core.impl.future.Listener newListener()
{
io.vertx.core.impl.future.Composition v0;
io.vertx.core.impl.future.Composition$1 v1;
v0 := @this: io.vertx.core.impl.future.Composition;
v1 = new io.vertx.core.impl.future.Composition$1;
specialinvoke v1.<io.vertx.core.impl.future.Composition$1: void <init>(io.vertx.core.impl.future.Composition)>(v0);
return v1;
}
}