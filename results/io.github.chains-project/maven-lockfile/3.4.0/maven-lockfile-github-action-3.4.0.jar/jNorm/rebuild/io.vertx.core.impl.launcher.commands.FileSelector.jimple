public final class io.vertx.core.impl.launcher.commands.FileSelector extends java.lang.Object
{
public void <init>()
{
io.vertx.core.impl.launcher.commands.FileSelector v0;
v0 := @this: io.vertx.core.impl.launcher.commands.FileSelector;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static boolean separatorPatternStartSlashMismatch(java.lang.String, java.lang.String, java.lang.String)
{
java.lang.String v0, v1, v2;
boolean v3, v4, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>(v2);
v4 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>(v2);
if v3 == v4 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public static boolean matchPath(java.lang.String, java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean matchPath(java.lang.String,java.lang.String,boolean)>(v0, v1, 1);
return v2;
}
public static boolean matchPath(java.lang.String, java.lang.String, boolean)
{
java.lang.String v0, v1, v3;
boolean v2, v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 = <java.io.File: java.lang.String separator>;
v4 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean matchPath(java.lang.String,java.lang.String,java.lang.String,boolean)>(v0, v1, v3, v2);
return v4;
}
protected static boolean matchPath(java.lang.String, java.lang.String, java.lang.String, boolean)
{
java.lang.String v0, v1, v2;
boolean v3, v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: boolean;
v4 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean matchPathPattern(java.lang.String,java.lang.String,java.lang.String,boolean)>(v0, v1, v2, v3);
return v4;
}
private static boolean matchPathPattern(java.lang.String, java.lang.String, java.lang.String, boolean)
{
java.lang.String[] v5, v6;
java.lang.String v0, v1, v2;
boolean v3, v4, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: boolean;
v4 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean separatorPatternStartSlashMismatch(java.lang.String,java.lang.String,java.lang.String)>(v0, v1, v2);
if v4 == 0 goto label1;
return 0;
label1:
v5 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: java.lang.String[] tokenizePathToString(java.lang.String,java.lang.String)>(v0, v2);
v6 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: java.lang.String[] tokenizePathToString(java.lang.String,java.lang.String)>(v1, v2);
v7 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean matchPathPattern(java.lang.String[],java.lang.String[],boolean)>(v5, v6, v3);
return v7;
}
private static boolean matchPathPattern(java.lang.String[], java.lang.String[], boolean)
{
boolean v10, v12, v15, v17, v19, v2, v22, v27, v44, v48;
java.lang.String[] v0, v1;
int v13, v20, v23, v24, v25, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v41, v42, v45, v46, v5, v6, v7, v8;
java.lang.String v11, v14, v16, v18, v21, v26, v40, v43, v47, v9;
v0 := @parameter0: java.lang.String[];
v1 := @parameter1: java.lang.String[];
v2 := @parameter2: boolean;
v3 = 0;
v4 = lengthof v0;
v5 = v4 - 1;
v6 = 0;
v7 = lengthof v1;
v8 = v7 - 1;
label01:
if v3 > v5 goto label03;
if v6 > v8 goto label03;
v9 = v0[v3];
v10 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>("**");
if v10 != 0 goto label03;
v11 = v1[v6];
v12 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean match(java.lang.String,java.lang.String,boolean)>(v9, v11, v2);
if v12 != 0 goto label02;
return 0;
label02:
v3 = v3 + 1;
v6 = v6 + 1;
goto label01;
label03:
if v6 <= v8 goto label07;
v13 = v3;
label04:
if v13 > v5 goto label06;
v14 = v0[v13];
v15 = virtualinvoke v14.<java.lang.String: boolean equals(java.lang.Object)>("**");
if v15 != 0 goto label05;
return 0;
label05:
v13 = v13 + 1;
goto label04;
label06:
return 1;
label07:
if v3 <= v5 goto label08;
return 0;
label08:
if v3 > v5 goto label10;
if v6 > v8 goto label10;
v16 = v0[v5];
v17 = virtualinvoke v16.<java.lang.String: boolean equals(java.lang.Object)>("**");
if v17 != 0 goto label10;
v18 = v1[v8];
v19 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean match(java.lang.String,java.lang.String,boolean)>(v16, v18, v2);
if v19 != 0 goto label09;
return 0;
label09:
v5 = v5 - 1;
v8 = v8 - 1;
goto label08;
label10:
if v6 <= v8 goto label14;
v20 = v3;
label11:
if v20 > v5 goto label13;
v21 = v0[v20];
v22 = virtualinvoke v21.<java.lang.String: boolean equals(java.lang.Object)>("**");
if v22 != 0 goto label12;
return 0;
label12:
v20 = v20 + 1;
goto label11;
label13:
return 1;
label14:
if v3 == v5 goto label25;
if v6 > v8 goto label25;
v23 = (int) -1;
v24 = v23;
v25 = v3 + 1;
label15:
if v25 > v5 goto label17;
v26 = v0[v25];
v27 = virtualinvoke v26.<java.lang.String: boolean equals(java.lang.Object)>("**");
if v27 == 0 goto label16;
v24 = v25;
goto label17;
label16:
v25 = v25 + 1;
goto label15;
label17:
v28 = v3 + 1;
if v24 != v28 goto label18;
v3 = v3 + 1;
goto label14;
label18:
v29 = v24 - v3;
v30 = v29 - 1;
v31 = v8 - v6;
v32 = v31 + 1;
v33 = (int) -1;
v34 = v33;
v35 = 0;
label19:
v36 = v32 - v30;
if v35 > v36 goto label23;
v37 = 0;
label20:
if v37 >= v30 goto label21;
v38 = v3 + v37;
v39 = v38 + 1;
v40 = v0[v39];
v41 = v6 + v35;
v42 = v41 + v37;
v43 = v1[v42];
v44 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean match(java.lang.String,java.lang.String,boolean)>(v40, v43, v2);
if v44 == 0 goto label22;
v37 = v37 + 1;
goto label20;
label21:
v34 = v6 + v35;
goto label23;
label22:
v35 = v35 + 1;
goto label19;
label23:
v45 = (int) -1;
if v34 != v45 goto label24;
return 0;
label24:
v3 = v24;
v6 = v34 + v30;
goto label14;
label25:
v46 = v3;
label26:
if v46 > v5 goto label28;
v47 = v0[v46];
v48 = virtualinvoke v47.<java.lang.String: boolean equals(java.lang.Object)>("**");
if v48 != 0 goto label27;
return 0;
label27:
v46 = v46 + 1;
goto label26;
label28:
return 1;
}
public static boolean match(java.lang.String, java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean match(java.lang.String,java.lang.String,boolean)>(v0, v1, 1);
return v2;
}
public static boolean match(java.lang.String, java.lang.String, boolean)
{
char[] v3, v4;
java.lang.String v0, v1;
boolean v2, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 = virtualinvoke v0.<java.lang.String: char[] toCharArray()>();
v4 = virtualinvoke v1.<java.lang.String: char[] toCharArray()>();
v5 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean match(char[],char[],boolean)>(v3, v4, v2);
return v5;
}
private static boolean match(char[], char[], boolean)
{
boolean v16, v19, v2, v20, v23, v24, v45, v47, v9;
int v10, v11, v13, v25, v26, v27, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v42, v43, v46, v5, v6, v7, v8;
char v12, v14, v15, v17, v18, v21, v22, v28, v41, v44;
char[] v0, v1;
v0 := @parameter0: char[];
v1 := @parameter1: char[];
v2 := @parameter2: boolean;
v3 = 0;
v4 = lengthof v0;
v5 = v4 - 1;
v6 = 0;
v7 = lengthof v1;
v8 = v7 - 1;
v9 = 0;
v10 = lengthof v0;
v11 = 0;
label01:
if v11 >= v10 goto label03;
v12 = v0[v11];
if v12 != 42 goto label02;
v9 = 1;
goto label03;
label02:
v11 = v11 + 1;
goto label01;
label03:
if v9 != 0 goto label08;
if v5 == v8 goto label04;
return 0;
label04:
v13 = 0;
label05:
if v13 > v5 goto label07;
v14 = v0[v13];
if v14 == 63 goto label06;
v15 = v1[v13];
v16 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean equals(char,char,boolean)>(v14, v15, v2);
if v16 != 0 goto label06;
return 0;
label06:
v13 = v13 + 1;
goto label05;
label07:
return 1;
label08:
if v5 != 0 goto label09;
return 1;
label09:
v17 = v0[v3];
if v17 == 42 goto label11;
if v6 > v8 goto label11;
if v17 == 63 goto label10;
v18 = v1[v6];
v19 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean equals(char,char,boolean)>(v17, v18, v2);
if v19 != 0 goto label10;
return 0;
label10:
v3 = v3 + 1;
v6 = v6 + 1;
goto label09;
label11:
if v6 <= v8 goto label12;
v20 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean checkOnlyStartsLeft(char[],int,int)>(v0, v3, v5);
return v20;
label12:
v21 = v0[v5];
if v21 == 42 goto label14;
if v6 > v8 goto label14;
if v21 == 63 goto label13;
v22 = v1[v8];
v23 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean equals(char,char,boolean)>(v21, v22, v2);
if v23 != 0 goto label13;
return 0;
label13:
v5 = v5 - 1;
v8 = v8 - 1;
goto label12;
label14:
if v6 <= v8 goto label15;
v24 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean checkOnlyStartsLeft(char[],int,int)>(v0, v3, v5);
return v24;
label15:
if v3 == v5 goto label27;
if v6 > v8 goto label27;
v25 = (int) -1;
v26 = v25;
v27 = v3 + 1;
label16:
if v27 > v5 goto label18;
v28 = v0[v27];
if v28 != 42 goto label17;
v26 = v27;
goto label18;
label17:
v27 = v27 + 1;
goto label16;
label18:
v29 = v3 + 1;
if v26 != v29 goto label19;
v3 = v3 + 1;
goto label15;
label19:
v30 = v26 - v3;
v31 = v30 - 1;
v32 = v8 - v6;
v33 = v32 + 1;
v34 = (int) -1;
v35 = v34;
v36 = 0;
label20:
v37 = v33 - v31;
if v36 > v37 goto label25;
v38 = 0;
label21:
if v38 >= v31 goto label23;
v39 = v3 + v38;
v40 = v39 + 1;
v41 = v0[v40];
if v41 == 63 goto label22;
v42 = v6 + v36;
v43 = v42 + v38;
v44 = v1[v43];
v45 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean equals(char,char,boolean)>(v41, v44, v2);
if v45 == 0 goto label24;
label22:
v38 = v38 + 1;
goto label21;
label23:
v35 = v6 + v36;
goto label25;
label24:
v36 = v36 + 1;
goto label20;
label25:
v46 = (int) -1;
if v35 != v46 goto label26;
return 0;
label26:
v3 = v26;
v6 = v35 + v31;
goto label15;
label27:
v47 = staticinvoke <io.vertx.core.impl.launcher.commands.FileSelector: boolean checkOnlyStartsLeft(char[],int,int)>(v0, v3, v5);
return v47;
}
private static boolean checkOnlyStartsLeft(char[], int, int)
{
int v1, v2, v3;
char[] v0;
char v4;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = v1;
label1:
if v3 > v2 goto label3;
v4 = v0[v3];
if v4 == 42 goto label2;
return 0;
label2:
v3 = v3 + 1;
goto label1;
label3:
return 1;
}
private static boolean equals(char, char, boolean)
{
char v0, v1, v3, v4, v5, v6;
boolean v2;
v0 := @parameter0: char;
v1 := @parameter1: char;
v2 := @parameter2: boolean;
if v0 != v1 goto label1;
return 1;
label1:
if v2 != 0 goto label3;
v3 = staticinvoke <java.lang.Character: char toUpperCase(char)>(v0);
v4 = staticinvoke <java.lang.Character: char toUpperCase(char)>(v1);
if v3 == v4 goto label2;
v5 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v0);
v6 = staticinvoke <java.lang.Character: char toLowerCase(char)>(v1);
if v5 != v6 goto label3;
label2:
return 1;
label3:
return 0;
}
private static java.lang.String[] tokenizePathToString(java.lang.String, java.lang.String)
{
java.lang.Object[] v7;
java.lang.String[] v6;
java.util.ArrayList v2;
java.util.StringTokenizer v3;
java.lang.String v0, v1, v5;
boolean v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = new java.util.StringTokenizer;
specialinvoke v3.<java.util.StringTokenizer: void <init>(java.lang.String,java.lang.String)>(v0, v1);
label1:
v4 = virtualinvoke v3.<java.util.StringTokenizer: boolean hasMoreTokens()>();
if v4 == 0 goto label2;
v5 = virtualinvoke v3.<java.util.StringTokenizer: java.lang.String nextToken()>();
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
v6 = newarray (java.lang.String)[0];
v7 = interfaceinvoke v2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v6);
return v7;
}
}