public class io.vertx.core.impl.launcher.commands.ListCommand extends io.vertx.core.spi.launcher.DefaultCommand
{
private static final java.util.regex.Pattern PS;
private static final java.util.regex.Pattern FAT_JAR_EXTRACTION;
private static final java.util.regex.Pattern VERTICLE_EXTRACTION;
public void <init>()
{
io.vertx.core.impl.launcher.commands.ListCommand v0;
v0 := @this: io.vertx.core.impl.launcher.commands.ListCommand;
specialinvoke v0.<io.vertx.core.spi.launcher.DefaultCommand: void <init>()>();
return;
}
public void run()
{
java.io.PrintStream v1, v11, v13, v6, v8;
java.lang.Exception v12, v7;
java.util.ArrayList v2;
io.vertx.core.impl.launcher.commands.ListCommand v0;
java.lang.InterruptedException v4, v9;
java.lang.Thread v10, v5;
boolean v3;
v0 := @this: io.vertx.core.impl.launcher.commands.ListCommand;
v1 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
virtualinvoke v1.<java.io.PrintStream: void println(java.lang.String)>("Listing vert.x applications...");
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = staticinvoke <io.vertx.core.impl.launcher.commands.ExecUtils: boolean isWindows()>();
if v3 != 0 goto label5;
label1:
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("sh");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("-c");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("ps ax | grep \"vertx.id=\"");
specialinvoke v0.<io.vertx.core.impl.launcher.commands.ListCommand: void dumpFoundVertxApplications(java.util.List)>(v2);
label2:
goto label9;
label3:
v4 := @caughtexception;
v5 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v5.<java.lang.Thread: void interrupt()>();
v6 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
virtualinvoke v4.<java.lang.InterruptedException: void printStackTrace(java.io.PrintStream)>(v6);
goto label9;
label4:
v7 := @caughtexception;
v8 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
virtualinvoke v7.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>(v8);
goto label9;
label5:
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("WMIC");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("PROCESS");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("WHERE");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("CommandLine like \'%java.exe%\'");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("GET");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("CommandLine");
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>("/VALUE");
specialinvoke v0.<io.vertx.core.impl.launcher.commands.ListCommand: void dumpFoundVertxApplications(java.util.List)>(v2);
label6:
goto label9;
label7:
v9 := @caughtexception;
v10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v10.<java.lang.Thread: void interrupt()>();
v11 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
virtualinvoke v9.<java.lang.InterruptedException: void printStackTrace(java.io.PrintStream)>(v11);
goto label9;
label8:
v12 := @caughtexception;
v13 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
virtualinvoke v12.<java.lang.Exception: void printStackTrace(java.io.PrintStream)>(v13);
label9:
return;
catch java.lang.InterruptedException from label1 to label2 with label3;
catch java.lang.Exception from label1 to label2 with label4;
catch java.lang.InterruptedException from label5 to label6 with label7;
catch java.lang.Exception from label5 to label6 with label8;
}
private void dumpFoundVertxApplications(java.util.List) throws java.io.IOException, java.lang.InterruptedException
{
java.lang.Throwable v16;
io.vertx.core.impl.launcher.commands.ListCommand v0;
java.util.regex.Matcher v10;
java.lang.ProcessBuilder v3;
java.lang.String v12, v13, v15, v8;
boolean v11, v2;
java.io.PrintStream v14, v17;
java.lang.Process v4;
java.io.InputStreamReader v6;
java.util.List v1;
java.io.BufferedReader v5;
java.util.regex.Pattern v9;
java.io.InputStream v7;
v0 := @this: io.vertx.core.impl.launcher.commands.ListCommand;
v1 := @parameter0: java.util.List;
v2 = 1;
v3 = new java.lang.ProcessBuilder;
specialinvoke v3.<java.lang.ProcessBuilder: void <init>(java.util.List)>(v1);
v4 = virtualinvoke v3.<java.lang.ProcessBuilder: java.lang.Process start()>();
v5 = new java.io.BufferedReader;
v6 = new java.io.InputStreamReader;
v7 = virtualinvoke v4.<java.lang.Process: java.io.InputStream getInputStream()>();
specialinvoke v6.<java.io.InputStreamReader: void <init>(java.io.InputStream)>(v7);
specialinvoke v5.<java.io.BufferedReader: void <init>(java.io.Reader)>(v6);
label1:
v8 = virtualinvoke v5.<java.io.BufferedReader: java.lang.String readLine()>();
if v8 == null goto label2;
v9 = <io.vertx.core.impl.launcher.commands.ListCommand: java.util.regex.Pattern PS>;
v10 = virtualinvoke v9.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v8);
v11 = virtualinvoke v10.<java.util.regex.Matcher: boolean find()>();
if v11 == 0 goto label1;
v12 = virtualinvoke v10.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v13 = staticinvoke <io.vertx.core.impl.launcher.commands.ListCommand: java.lang.String extractApplicationDetails(java.lang.String)>(v8);
v14 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v12, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\t\u0001");
virtualinvoke v14.<java.io.PrintStream: void println(java.lang.String)>(v15);
v2 = 0;
goto label1;
label2:
virtualinvoke v4.<java.lang.Process: int waitFor()>();
label3:
virtualinvoke v5.<java.io.BufferedReader: void close()>();
goto label5;
label4:
v16 := @caughtexception;
throw v16;
label5:
if v2 == 0 goto label6;
v17 = v0.<io.vertx.core.impl.launcher.commands.ListCommand: java.io.PrintStream out>;
virtualinvoke v17.<java.io.PrintStream: void println(java.lang.String)>("No vert.x application found.");
label6:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
protected static java.lang.String extractApplicationDetails(java.lang.String)
{
java.util.regex.Matcher v2, v6;
java.lang.String v0, v4, v8;
java.util.regex.Pattern v1, v5;
boolean v3, v7;
v0 := @parameter0: java.lang.String;
v1 = <io.vertx.core.impl.launcher.commands.ListCommand: java.util.regex.Pattern FAT_JAR_EXTRACTION>;
v2 = virtualinvoke v1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v3 = virtualinvoke v2.<java.util.regex.Matcher: boolean find()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v2.<java.util.regex.Matcher: java.lang.String group(int)>(1);
return v4;
label1:
v5 = <io.vertx.core.impl.launcher.commands.ListCommand: java.util.regex.Pattern VERTICLE_EXTRACTION>;
v6 = virtualinvoke v5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v7 = virtualinvoke v6.<java.util.regex.Matcher: boolean find()>();
if v7 == 0 goto label2;
v8 = virtualinvoke v6.<java.util.regex.Matcher: java.lang.String group(int)>(1);
return v8;
label2:
return "";
}
static void <clinit>()
{
java.util.regex.Pattern v0, v1, v2;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-Dvertx.id=(.*)\\s*");
<io.vertx.core.impl.launcher.commands.ListCommand: java.util.regex.Pattern PS> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("-jar (\\S*)");
<io.vertx.core.impl.launcher.commands.ListCommand: java.util.regex.Pattern FAT_JAR_EXTRACTION> = v1;
v2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("run (\\S*)");
<io.vertx.core.impl.launcher.commands.ListCommand: java.util.regex.Pattern VERTICLE_EXTRACTION> = v2;
return;
}
}