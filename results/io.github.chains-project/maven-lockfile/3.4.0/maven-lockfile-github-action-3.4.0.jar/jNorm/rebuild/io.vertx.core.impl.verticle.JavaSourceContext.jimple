public class io.vertx.core.impl.verticle.JavaSourceContext extends java.lang.Object
{
private final java.lang.String className;
private final java.io.File sourceRoot;
public void <init>(java.io.File)
{
java.lang.String[] v4;
io.vertx.core.impl.verticle.JavaSourceContext v0;
int v14, v17, v18, v5, v6;
java.lang.String v11, v12, v13, v16, v19, v2, v7, v8;
javax.tools.JavaFileObject$Kind v15;
boolean v9;
java.lang.RuntimeException v10;
java.io.File v1, v3;
v0 := @this: io.vertx.core.impl.verticle.JavaSourceContext;
v1 := @parameter0: java.io.File;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.vertx.core.impl.verticle.JavaSourceContext: java.lang.String parsePackage(java.io.File)>(v1);
v3 = virtualinvoke v1.<java.io.File: java.io.File getParentFile()>();
if v2 == null goto label3;
v4 = virtualinvoke v2.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
v5 = lengthof v4;
v6 = v5 - 1;
label1:
if v6 < 0 goto label3;
v7 = v4[v6];
v8 = virtualinvoke v3.<java.io.File: java.lang.String getName()>();
v9 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v9 != 0 goto label2;
v10 = new java.lang.RuntimeException;
v11 = virtualinvoke v3.<java.io.File: java.lang.String getName()>();
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Package structure does not match directory structure: \u0001 != \u0001");
specialinvoke v10.<java.lang.RuntimeException: void <init>(java.lang.String)>(v12);
throw v10;
label2:
v3 = virtualinvoke v3.<java.io.File: java.io.File getParentFile()>();
v6 = v6 - 1;
goto label1;
label3:
v0.<io.vertx.core.impl.verticle.JavaSourceContext: java.io.File sourceRoot> = v3;
v13 = virtualinvoke v1.<java.io.File: java.lang.String getName()>();
v14 = virtualinvoke v13.<java.lang.String: int length()>();
v15 = <javax.tools.JavaFileObject$Kind: javax.tools.JavaFileObject$Kind SOURCE>;
v16 = v15.<javax.tools.JavaFileObject$Kind: java.lang.String extension>;
v17 = virtualinvoke v16.<java.lang.String: int length()>();
v18 = v14 - v17;
v19 = virtualinvoke v13.<java.lang.String: java.lang.String substring(int,int)>(0, v18);
if v2 == null goto label4;
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v19) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
label4:
v0.<io.vertx.core.impl.verticle.JavaSourceContext: java.lang.String className> = v19;
return;
}
public java.io.File getSourceRoot()
{
java.io.File v1;
io.vertx.core.impl.verticle.JavaSourceContext v0;
v0 := @this: io.vertx.core.impl.verticle.JavaSourceContext;
v1 = v0.<io.vertx.core.impl.verticle.JavaSourceContext: java.io.File sourceRoot>;
return v1;
}
public java.lang.String getClassName()
{
java.lang.String v1;
io.vertx.core.impl.verticle.JavaSourceContext v0;
v0 := @this: io.vertx.core.impl.verticle.JavaSourceContext;
v1 = v0.<io.vertx.core.impl.verticle.JavaSourceContext: java.lang.String className>;
return v1;
}
private static java.lang.String parsePackage(java.io.File)
{
byte[] v3;
java.lang.String[] v6;
java.nio.charset.Charset v4;
int v12, v13, v14, v15, v7, v8;
java.lang.String v1, v10, v16, v17, v5, v9;
java.nio.file.Path v2;
boolean v11;
java.io.IOException v18;
java.lang.RuntimeException v19;
java.io.File v0;
v0 := @parameter0: java.io.File;
label1:
v1 = new java.lang.String;
v2 = virtualinvoke v0.<java.io.File: java.nio.file.Path toPath()>();
v3 = staticinvoke <java.nio.file.Files: byte[] readAllBytes(java.nio.file.Path)>(v2);
v4 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v3, v4);
v5 = virtualinvoke v1.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("//.*|(\"(?:\\\\[^\"]|\\\\\"|.)*?\")|(?s)/\\*.*?\\*/", "$1 ");
v6 = virtualinvoke v5.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\r?\\n");
v7 = lengthof v6;
v8 = 0;
label2:
if v8 >= v7 goto label6;
v9 = v6[v8];
v10 = virtualinvoke v9.<java.lang.String: java.lang.String trim()>();
v11 = virtualinvoke v10.<java.lang.String: boolean isEmpty()>();
if v11 != 0 goto label5;
v12 = virtualinvoke v10.<java.lang.String: int indexOf(java.lang.String)>("package ");
v13 = (int) -1;
if v12 == v13 goto label4;
v14 = virtualinvoke v10.<java.lang.String: int indexOf(int,int)>(32, v12);
v15 = virtualinvoke v10.<java.lang.String: int indexOf(int,int)>(59, v12);
v16 = virtualinvoke v10.<java.lang.String: java.lang.String substring(int,int)>(v14, v15);
v17 = virtualinvoke v16.<java.lang.String: java.lang.String trim()>();
label3:
return v17;
label4:
return null;
label5:
v8 = v8 + 1;
goto label2;
label6:
return null;
label7:
v18 := @caughtexception;
v19 = new java.lang.RuntimeException;
specialinvoke v19.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v18);
throw v19;
catch java.io.IOException from label1 to label3 with label7;
catch java.io.IOException from label5 to label6 with label7;
}
}