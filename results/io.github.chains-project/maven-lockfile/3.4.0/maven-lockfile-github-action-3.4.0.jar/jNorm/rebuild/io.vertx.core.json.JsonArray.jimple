public class io.vertx.core.json.JsonArray extends java.lang.Object implements java.lang.Iterable, io.vertx.core.shareddata.ClusterSerializable, io.vertx.core.shareddata.Shareable
{
private java.util.List list;
public void <init>(java.lang.String)
{
io.vertx.core.json.JsonArray v0;
java.util.List v3;
io.vertx.core.json.DecodeException v4;
java.lang.String v1, v5;
java.lang.NullPointerException v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
specialinvoke v0.<io.vertx.core.json.JsonArray: void fromJson(java.lang.String)>(v1);
v3 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
if v3 != null goto label2;
v4 = new io.vertx.core.json.DecodeException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid JSON array: \u0001");
specialinvoke v4.<io.vertx.core.json.DecodeException: void <init>(java.lang.String)>(v5);
throw v4;
label2:
return;
}
public void <init>()
{
io.vertx.core.json.JsonArray v0;
java.util.ArrayList v1;
v0 := @this: io.vertx.core.json.JsonArray;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<io.vertx.core.json.JsonArray: java.util.List list> = v1;
return;
}
public void <init>(java.util.List)
{
io.vertx.core.json.JsonArray v0;
java.util.List v1;
java.lang.NullPointerException v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
v0.<io.vertx.core.json.JsonArray: java.util.List list> = v1;
return;
}
public void <init>(io.vertx.core.buffer.Buffer)
{
io.vertx.core.json.JsonArray v0;
java.util.List v3;
io.vertx.core.buffer.Buffer v1;
io.vertx.core.json.DecodeException v4;
java.lang.String v5;
java.lang.NullPointerException v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>()>();
throw v2;
label1:
specialinvoke v0.<io.vertx.core.json.JsonArray: void fromBuffer(io.vertx.core.buffer.Buffer)>(v1);
v3 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
if v3 != null goto label2;
v4 = new io.vertx.core.json.DecodeException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.vertx.core.buffer.Buffer)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid JSON array: \u0001");
specialinvoke v4.<io.vertx.core.json.DecodeException: void <init>(java.lang.String)>(v5);
throw v4;
label2:
return;
}
public static transient io.vertx.core.json.JsonArray of(java.lang.Object[])
{
java.lang.Object[] v0;
java.util.ArrayList v4;
io.vertx.core.json.JsonArray v2, v3;
int v1, v5, v6, v7;
java.lang.Object v8;
v0 := @parameter0: java.lang.Object[];
v1 = lengthof v0;
if v1 != 0 goto label1;
v2 = new io.vertx.core.json.JsonArray;
specialinvoke v2.<io.vertx.core.json.JsonArray: void <init>()>();
return v2;
label1:
v3 = new io.vertx.core.json.JsonArray;
v4 = new java.util.ArrayList;
v5 = lengthof v0;
specialinvoke v4.<java.util.ArrayList: void <init>(int)>(v5);
specialinvoke v3.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v4);
v6 = 0;
label2:
v7 = lengthof v0;
if v6 >= v7 goto label3;
v8 = v0[v6];
virtualinvoke v3.<io.vertx.core.json.JsonArray: io.vertx.core.json.JsonArray add(java.lang.Object)>(v8);
v6 = v6 + 1;
goto label2;
label3:
return v3;
}
public java.lang.String getString(int)
{
byte[] v12;
int v1;
java.lang.String v13, v15, v16, v6, v9;
boolean v10, v14, v4, v7;
java.util.Base64$Encoder v11, v8;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
java.time.format.DateTimeFormatter v5;
java.lang.Object v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof java.time.Instant;
if v4 == 0 goto label2;
v5 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v6 = virtualinvoke v5.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v3);
return v6;
label2:
v7 = v3 instanceof byte[];
if v7 == 0 goto label3;
v8 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v9 = virtualinvoke v8.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v3);
return v9;
label3:
v10 = v3 instanceof io.vertx.core.buffer.Buffer;
if v10 == 0 goto label4;
v11 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v12 = interfaceinvoke v3.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
v13 = virtualinvoke v11.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v12);
return v13;
label4:
v14 = v3 instanceof java.lang.Enum;
if v14 == 0 goto label5;
v15 = virtualinvoke v3.<java.lang.Enum: java.lang.String name()>();
return v15;
label5:
v16 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
return v16;
}
public java.lang.Number getNumber(int)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public java.lang.Integer getInteger(int)
{
java.lang.Integer v6;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1, v5;
java.lang.Object v3;
java.lang.Number v7;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof java.lang.Integer;
if v4 == 0 goto label2;
return v7;
label2:
v5 = virtualinvoke v3.<java.lang.Number: int intValue()>();
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
return v6;
}
public java.lang.Long getLong(int)
{
long v5;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
java.lang.Long v6;
int v1;
java.lang.Object v3;
java.lang.Number v7;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof java.lang.Long;
if v4 == 0 goto label2;
return v7;
label2:
v5 = virtualinvoke v3.<java.lang.Number: long longValue()>();
v6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v5);
return v6;
}
public java.lang.Double getDouble(int)
{
java.lang.Double v6;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3;
java.lang.Number v7;
boolean v4;
double v5;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof java.lang.Double;
if v4 == 0 goto label2;
return v7;
label2:
v5 = virtualinvoke v3.<java.lang.Number: double doubleValue()>();
v6 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v5);
return v6;
}
public java.lang.Float getFloat(int)
{
java.lang.Float v6;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
float v5;
java.lang.Object v3;
java.lang.Number v7;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof java.lang.Float;
if v4 == 0 goto label2;
return v7;
label2:
v5 = virtualinvoke v3.<java.lang.Number: float floatValue()>();
v6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v5);
return v6;
}
public java.lang.Boolean getBoolean(int)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v3;
}
public io.vertx.core.json.JsonObject getJsonObject(int)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
io.vertx.core.json.JsonObject v5;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
v4 = v3 instanceof java.util.Map;
if v4 == 0 goto label1;
v5 = new io.vertx.core.json.JsonObject;
specialinvoke v5.<io.vertx.core.json.JsonObject: void <init>(java.util.Map)>(v3);
v3 = v5;
label1:
return v3;
}
public io.vertx.core.json.JsonArray getJsonArray(int)
{
io.vertx.core.json.JsonArray v0, v5;
java.util.List v2;
int v1;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
v4 = v3 instanceof java.util.List;
if v4 == 0 goto label1;
v5 = new io.vertx.core.json.JsonArray;
specialinvoke v5.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v3);
v3 = v5;
label1:
return v3;
}
public byte[] getBinary(int)
{
byte[] v6, v8;
java.util.Base64$Decoder v7;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3;
boolean v4, v5;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof byte[];
if v4 == 0 goto label2;
return v3;
label2:
v5 = v3 instanceof io.vertx.core.buffer.Buffer;
if v5 == 0 goto label3;
v6 = interfaceinvoke v3.<io.vertx.core.buffer.Buffer: byte[] getBytes()>();
return v6;
label3:
v7 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
v8 = virtualinvoke v7.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v3);
return v8;
}
public io.vertx.core.buffer.Buffer getBuffer(int)
{
byte[] v8;
java.util.Base64$Decoder v7;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
io.vertx.core.buffer.Buffer v6, v9;
int v1;
java.lang.Object v3;
boolean v4, v5;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof io.vertx.core.buffer.Buffer;
if v4 == 0 goto label2;
return v3;
label2:
v5 = v3 instanceof byte[];
if v5 == 0 goto label3;
v6 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v3);
return v6;
label3:
v7 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
v8 = virtualinvoke v7.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v3);
v9 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v8);
return v9;
}
public java.time.Instant getInstant(int)
{
java.time.Instant v7;
java.time.temporal.TemporalAccessor v6;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
java.time.format.DateTimeFormatter v5;
int v1;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v3 instanceof java.time.Instant;
if v4 == 0 goto label2;
return v3;
label2:
v5 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v6 = virtualinvoke v5.<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>(v3);
v7 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(v6);
return v7;
}
public java.lang.Object getValue(int)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3, v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
v4 = staticinvoke <io.vertx.core.json.impl.JsonUtil: java.lang.Object wrapJsonValue(java.lang.Object)>(v3);
return v4;
}
public boolean hasNull(int)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
if v3 != null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public io.vertx.core.json.JsonArray addNull()
{
io.vertx.core.json.JsonArray v0;
java.util.List v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(null);
return v0;
}
public io.vertx.core.json.JsonArray add(java.lang.Object)
{
io.vertx.core.json.JsonArray v0;
java.lang.Object v1;
java.util.List v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public io.vertx.core.json.JsonArray add(int, java.lang.Object)
{
io.vertx.core.json.JsonArray v0;
java.util.List v3;
int v1;
java.lang.Object v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v3.<java.util.List: void add(int,java.lang.Object)>(v1, v2);
return v0;
}
public io.vertx.core.json.JsonArray addAll(io.vertx.core.json.JsonArray)
{
io.vertx.core.json.JsonArray v0, v1;
java.util.List v2, v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: io.vertx.core.json.JsonArray;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = v1.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v3);
return v0;
}
public io.vertx.core.json.JsonArray setNull(int)
{
int v1;
io.vertx.core.json.JsonArray v0;
java.util.List v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v2.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v1, null);
return v0;
}
public io.vertx.core.json.JsonArray set(int, java.lang.Object)
{
io.vertx.core.json.JsonArray v0;
java.util.List v3;
int v1;
java.lang.Object v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v3.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v1, v2);
return v0;
}
public boolean contains(java.lang.Object)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
java.lang.Object v1;
boolean v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: boolean contains(java.lang.Object)>(v1);
return v3;
}
public boolean remove(java.lang.Object)
{
io.vertx.core.json.JsonArray v0;
java.util.List v4, v7, v9;
int v3, v5;
java.lang.Object v1, v2, v6;
boolean v8;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <io.vertx.core.json.impl.JsonUtil: java.lang.Object wrapJsonValue(java.lang.Object)>(v1);
v3 = 0;
label1:
v4 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v5 = interfaceinvoke v4.<java.util.List: int size()>();
if v3 >= v5 goto label4;
v6 = virtualinvoke v0.<io.vertx.core.json.JsonArray: java.lang.Object getValue(int)>(v3);
if v2 != null goto label2;
if v6 != null goto label3;
v7 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v7.<java.util.List: java.lang.Object remove(int)>(v3);
return 1;
label2:
v8 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(v6);
if v8 == 0 goto label3;
v9 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v9.<java.util.List: java.lang.Object remove(int)>(v3);
return 1;
label3:
v3 = v3 + 1;
goto label1;
label4:
return 0;
}
public java.lang.Object remove(int)
{
io.vertx.core.json.JsonArray v0;
java.util.List v2;
int v1;
java.lang.Object v3, v4;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object remove(int)>(v1);
v4 = staticinvoke <io.vertx.core.json.impl.JsonUtil: java.lang.Object wrapJsonValue(java.lang.Object)>(v3);
return v4;
}
public int size()
{
int v2;
io.vertx.core.json.JsonArray v0;
java.util.List v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public boolean isEmpty()
{
io.vertx.core.json.JsonArray v0;
java.util.List v1;
boolean v2;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v2 = interfaceinvoke v1.<java.util.List: boolean isEmpty()>();
return v2;
}
public java.util.List getList()
{
io.vertx.core.json.JsonArray v0;
java.util.List v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
return v1;
}
public io.vertx.core.json.JsonArray clear()
{
io.vertx.core.json.JsonArray v0;
java.util.List v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
interfaceinvoke v1.<java.util.List: void clear()>();
return v0;
}
public java.util.Iterator iterator()
{
io.vertx.core.json.JsonArray v0;
io.vertx.core.json.JsonArray$Iter v1;
java.util.List v2;
java.util.Iterator v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = new io.vertx.core.json.JsonArray$Iter;
v2 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
specialinvoke v1.<io.vertx.core.json.JsonArray$Iter: void <init>(java.util.Iterator)>(v3);
return v1;
}
public java.lang.String encode()
{
io.vertx.core.json.JsonArray v0;
java.lang.String v2;
io.vertx.core.spi.json.JsonCodec v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.json.JsonCodec: java.lang.String toString(java.lang.Object,boolean)>(v0, 0);
return v2;
}
public io.vertx.core.buffer.Buffer toBuffer()
{
io.vertx.core.json.JsonArray v0;
io.vertx.core.buffer.Buffer v2;
io.vertx.core.spi.json.JsonCodec v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.json.JsonCodec: io.vertx.core.buffer.Buffer toBuffer(java.lang.Object,boolean)>(v0, 0);
return v2;
}
public java.lang.String encodePrettily()
{
io.vertx.core.json.JsonArray v0;
java.lang.String v2;
io.vertx.core.spi.json.JsonCodec v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v2 = interfaceinvoke v1.<io.vertx.core.spi.json.JsonCodec: java.lang.String toString(java.lang.Object,boolean)>(v0, 1);
return v2;
}
public io.vertx.core.json.JsonArray copy()
{
io.vertx.core.json.JsonArray v0, v2;
java.util.function.Function v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.function.Function DEFAULT_CLONER>;
v2 = virtualinvoke v0.<io.vertx.core.json.JsonArray: io.vertx.core.json.JsonArray copy(java.util.function.Function)>(v1);
return v2;
}
public io.vertx.core.json.JsonArray copy(java.util.function.Function)
{
java.util.Iterator v6;
java.util.function.Function v1;
java.util.ArrayList v2;
io.vertx.core.json.JsonArray v0, v10;
java.util.List v3, v5;
int v4;
java.lang.Object v8, v9;
boolean v7;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.util.function.Function;
v2 = new java.util.ArrayList;
v3 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(v4);
v5 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v6 = interfaceinvoke v5.<java.util.List: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label2;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = staticinvoke <io.vertx.core.json.impl.JsonUtil: java.lang.Object deepCopy(java.lang.Object,java.util.function.Function)>(v8, v1);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label1;
label2:
v10 = new io.vertx.core.json.JsonArray;
specialinvoke v10.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v2);
return v10;
}
public java.util.stream.Stream stream()
{
io.vertx.core.json.JsonArray v0;
java.util.stream.Stream v2;
java.util.Iterator v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = virtualinvoke v0.<io.vertx.core.json.JsonArray: java.util.Iterator iterator()>();
v2 = staticinvoke <io.vertx.core.json.impl.JsonUtil: java.util.stream.Stream asStream(java.util.Iterator)>(v1);
return v2;
}
public java.lang.String toString()
{
io.vertx.core.json.JsonArray v0;
java.lang.String v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = virtualinvoke v0.<io.vertx.core.json.JsonArray: java.lang.String encode()>();
return v1;
}
public boolean equals(java.lang.Object)
{
byte v20, v27;
boolean v10, v11, v14, v15, v16, v17, v21, v22, v23, v24, v28, v29, v34, v35;
long v25, v26;
int v4, v5, v6, v7;
java.lang.String v32, v33;
double v18, v19;
io.vertx.core.json.JsonArray v0;
java.lang.Class v12, v13, v2, v3, v30, v31;
java.lang.Object v1, v8, v9;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label01;
return 0;
label01:
if v0 != v1 goto label02;
return 1;
label02:
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label03;
return 0;
label03:
v4 = virtualinvoke v0.<io.vertx.core.json.JsonArray: int size()>();
v5 = virtualinvoke v1.<io.vertx.core.json.JsonArray: int size()>();
if v4 == v5 goto label04;
return 0;
label04:
v6 = 0;
label05:
v7 = virtualinvoke v0.<io.vertx.core.json.JsonArray: int size()>();
if v6 >= v7 goto label12;
v8 = virtualinvoke v0.<io.vertx.core.json.JsonArray: java.lang.Object getValue(int)>(v6);
v9 = virtualinvoke v1.<io.vertx.core.json.JsonArray: java.lang.Object getValue(int)>(v6);
if v8 == v9 goto label11;
v10 = v8 instanceof java.lang.Number;
if v10 == 0 goto label09;
v11 = v9 instanceof java.lang.Number;
if v11 == 0 goto label09;
v12 = virtualinvoke v8.<java.lang.Object: java.lang.Class getClass()>();
v13 = virtualinvoke v9.<java.lang.Object: java.lang.Class getClass()>();
if v12 == v13 goto label09;
v14 = v8 instanceof java.lang.Float;
if v14 != 0 goto label06;
v15 = v8 instanceof java.lang.Double;
if v15 != 0 goto label06;
v16 = v9 instanceof java.lang.Float;
if v16 != 0 goto label06;
v17 = v9 instanceof java.lang.Double;
if v17 == 0 goto label07;
label06:
v18 = virtualinvoke v8.<java.lang.Number: double doubleValue()>();
v19 = virtualinvoke v9.<java.lang.Number: double doubleValue()>();
v20 = v18 cmpl v19;
if v20 == 0 goto label11;
label07:
v21 = v8 instanceof java.lang.Integer;
if v21 != 0 goto label08;
v22 = v8 instanceof java.lang.Long;
if v22 != 0 goto label08;
v23 = v9 instanceof java.lang.Integer;
if v23 != 0 goto label08;
v24 = v9 instanceof java.lang.Long;
if v24 == 0 goto label09;
label08:
v25 = virtualinvoke v8.<java.lang.Number: long longValue()>();
v26 = virtualinvoke v9.<java.lang.Number: long longValue()>();
v27 = v25 cmp v26;
if v27 == 0 goto label11;
label09:
v28 = v8 instanceof java.lang.CharSequence;
if v28 == 0 goto label10;
v29 = v9 instanceof java.lang.CharSequence;
if v29 == 0 goto label10;
v30 = virtualinvoke v8.<java.lang.Object: java.lang.Class getClass()>();
v31 = virtualinvoke v9.<java.lang.Object: java.lang.Class getClass()>();
if v30 == v31 goto label10;
v32 = virtualinvoke v8.<java.lang.Object: java.lang.String toString()>();
v33 = virtualinvoke v9.<java.lang.Object: java.lang.String toString()>();
v34 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v32, v33);
if v34 != 0 goto label11;
label10:
v35 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v8, v9);
if v35 != 0 goto label11;
return 0;
label11:
v6 = v6 + 1;
goto label05;
label12:
return 1;
}
public int hashCode()
{
int v2;
io.vertx.core.json.JsonArray v0;
java.util.List v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 = v0.<io.vertx.core.json.JsonArray: java.util.List list>;
v2 = interfaceinvoke v1.<java.util.List: int hashCode()>();
return v2;
}
public void writeToBuffer(io.vertx.core.buffer.Buffer)
{
io.vertx.core.json.JsonArray v0;
io.vertx.core.buffer.Buffer v1, v2;
int v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = virtualinvoke v0.<io.vertx.core.json.JsonArray: io.vertx.core.buffer.Buffer toBuffer()>();
v3 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: int length()>();
interfaceinvoke v1.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendInt(int)>(v3);
interfaceinvoke v1.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendBuffer(io.vertx.core.buffer.Buffer)>(v2);
return;
}
public int readFromBuffer(int, io.vertx.core.buffer.Buffer)
{
io.vertx.core.json.JsonArray v0;
io.vertx.core.buffer.Buffer v2, v6;
int v1, v3, v4, v5, v7, v8;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: int;
v2 := @parameter1: io.vertx.core.buffer.Buffer;
v3 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: int getInt(int)>(v1);
v4 = v1 + 4;
v5 = v4 + v3;
v6 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer getBuffer(int,int)>(v4, v5);
specialinvoke v0.<io.vertx.core.json.JsonArray: void fromBuffer(io.vertx.core.buffer.Buffer)>(v6);
v7 = v1 + v3;
v8 = v7 + 4;
return v8;
}
private void fromJson(java.lang.String)
{
io.vertx.core.json.JsonArray v0;
io.vertx.core.spi.json.JsonCodec v2;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: java.lang.String;
v2 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v3 = interfaceinvoke v2.<io.vertx.core.spi.json.JsonCodec: java.lang.Object fromString(java.lang.String,java.lang.Class)>(v1, class "Ljava/util/List;");
v0.<io.vertx.core.json.JsonArray: java.util.List list> = v3;
return;
}
private void fromBuffer(io.vertx.core.buffer.Buffer)
{
io.vertx.core.json.JsonArray v0;
io.vertx.core.buffer.Buffer v1;
io.vertx.core.spi.json.JsonCodec v2;
java.lang.Object v3;
v0 := @this: io.vertx.core.json.JsonArray;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = <io.vertx.core.json.Json: io.vertx.core.spi.json.JsonCodec CODEC>;
v3 = interfaceinvoke v2.<io.vertx.core.spi.json.JsonCodec: java.lang.Object fromBuffer(io.vertx.core.buffer.Buffer,java.lang.Class)>(v1, class "Ljava/util/List;");
v0.<io.vertx.core.json.JsonArray: java.util.List list> = v3;
return;
}
}