class io.vertx.core.net.KeyManagerFactoryOptions extends java.lang.Object implements io.vertx.core.net.KeyCertOptions
{
private final javax.net.ssl.KeyManagerFactory keyManagerFactory;
void <init>(javax.net.ssl.KeyManagerFactory)
{
io.vertx.core.net.KeyManagerFactoryOptions v0;
int v4;
javax.net.ssl.KeyManagerFactory v1;
java.lang.IllegalArgumentException v5;
javax.net.ssl.KeyManager[] v2, v3;
v0 := @this: io.vertx.core.net.KeyManagerFactoryOptions;
v1 := @parameter0: javax.net.ssl.KeyManagerFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == null goto label1;
v2 = virtualinvoke v1.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
if v2 == null goto label1;
v3 = virtualinvoke v1.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
v4 = lengthof v3;
if v4 != 0 goto label2;
label1:
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("KeyManagerFactory is not present or is not initialized yet");
throw v5;
label2:
v0.<io.vertx.core.net.KeyManagerFactoryOptions: javax.net.ssl.KeyManagerFactory keyManagerFactory> = v1;
return;
}
void <init>(javax.net.ssl.X509KeyManager)
{
io.vertx.core.net.KeyManagerFactoryWrapper v2;
javax.net.ssl.X509KeyManager v1;
io.vertx.core.net.KeyManagerFactoryOptions v0;
v0 := @this: io.vertx.core.net.KeyManagerFactoryOptions;
v1 := @parameter0: javax.net.ssl.X509KeyManager;
v2 = new io.vertx.core.net.KeyManagerFactoryWrapper;
specialinvoke v2.<io.vertx.core.net.KeyManagerFactoryWrapper: void <init>(javax.net.ssl.KeyManager)>(v1);
specialinvoke v0.<io.vertx.core.net.KeyManagerFactoryOptions: void <init>(javax.net.ssl.KeyManagerFactory)>(v2);
return;
}
private void <init>(io.vertx.core.net.KeyManagerFactoryOptions)
{
javax.net.ssl.KeyManagerFactory v2;
io.vertx.core.net.KeyManagerFactoryOptions v0, v1;
v0 := @this: io.vertx.core.net.KeyManagerFactoryOptions;
v1 := @parameter0: io.vertx.core.net.KeyManagerFactoryOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1.<io.vertx.core.net.KeyManagerFactoryOptions: javax.net.ssl.KeyManagerFactory keyManagerFactory>;
v0.<io.vertx.core.net.KeyManagerFactoryOptions: javax.net.ssl.KeyManagerFactory keyManagerFactory> = v2;
return;
}
public io.vertx.core.net.KeyCertOptions copy()
{
io.vertx.core.net.KeyManagerFactoryOptions v0, v1;
v0 := @this: io.vertx.core.net.KeyManagerFactoryOptions;
v1 = new io.vertx.core.net.KeyManagerFactoryOptions;
specialinvoke v1.<io.vertx.core.net.KeyManagerFactoryOptions: void <init>(io.vertx.core.net.KeyManagerFactoryOptions)>(v0);
return v1;
}
public javax.net.ssl.KeyManagerFactory getKeyManagerFactory(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v1;
javax.net.ssl.KeyManagerFactory v2;
io.vertx.core.net.KeyManagerFactoryOptions v0;
v0 := @this: io.vertx.core.net.KeyManagerFactoryOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = v0.<io.vertx.core.net.KeyManagerFactoryOptions: javax.net.ssl.KeyManagerFactory keyManagerFactory>;
return v2;
}
public java.util.function.Function keyManagerMapper(io.vertx.core.Vertx)
{
io.vertx.core.net.KeyManagerFactoryOptions v0;
io.vertx.core.Vertx v1;
javax.net.ssl.KeyManagerFactory v2;
java.util.function.Function v6;
javax.net.ssl.KeyManager v4;
boolean v5;
javax.net.ssl.KeyManager[] v3;
v0 := @this: io.vertx.core.net.KeyManagerFactoryOptions;
v1 := @parameter0: io.vertx.core.Vertx;
v2 = v0.<io.vertx.core.net.KeyManagerFactoryOptions: javax.net.ssl.KeyManagerFactory keyManagerFactory>;
v3 = virtualinvoke v2.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
v4 = v3[0];
v5 = v4 instanceof javax.net.ssl.X509KeyManager;
if v5 == 0 goto label1;
v6 = staticinvoke <io.vertx.core.net.KeyManagerFactoryOptions$lambda_keyManagerMapper_0__1282: java.util.function.Function bootstrap$(io.vertx.core.net.KeyManagerFactoryOptions)>(v0);
goto label2;
label1:
v6 = null;
label2:
return v6;
}
}