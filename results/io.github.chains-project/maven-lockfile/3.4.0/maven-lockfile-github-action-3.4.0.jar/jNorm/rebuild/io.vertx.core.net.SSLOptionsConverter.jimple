public class io.vertx.core.net.SSLOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.net.SSLOptionsConverter v0;
v0 := @this: io.vertx.core.net.SSLOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.net.SSLOptions)
{
byte v6;
boolean v10, v11, v12, v13, v14, v16, v20, v24, v28, v3, v33, v37, v41, v43, v8, v9;
long v35;
java.lang.Iterable v0;
io.vertx.core.net.SSLOptions v1;
int v7;
java.util.LinkedHashSet v29;
java.util.Iterator v2;
java.util.concurrent.TimeUnit v39;
java.util.function.Consumer v18, v22, v26, v31;
java.lang.Object v15, v17, v19, v21, v23, v25, v27, v30, v32, v34, v36, v38, v4, v40, v42, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.net.SSLOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label17;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -2111278753: goto label03;
case -234786838: goto label05;
case -148579952: goto label08;
case -113000554: goto label06;
case 87518279: goto label04;
case 733368890: goto label07;
case 2004570385: goto label02;
default: goto label09;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("crlPaths");
if v8 == 0 goto label09;
v6 = 0;
goto label09;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("crlValues");
if v9 == 0 goto label09;
v6 = 1;
goto label09;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("enabledCipherSuites");
if v10 == 0 goto label09;
v6 = 2;
goto label09;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("enabledSecureTransportProtocols");
if v11 == 0 goto label09;
v6 = 3;
goto label09;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sslHandshakeTimeout");
if v12 == 0 goto label09;
v6 = 4;
goto label09;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sslHandshakeTimeoutUnit");
if v13 == 0 goto label09;
v6 = 5;
goto label09;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("useAlpn");
if v14 == 0 goto label09;
v6 = 6;
label09:
tableswitch(v6)
{
case 0: goto label10;
case 1: goto label11;
case 2: goto label12;
case 3: goto label13;
case 4: goto label14;
case 5: goto label15;
case 6: goto label16;
default: goto label01;
};
label10:
v15 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = v15 instanceof io.vertx.core.json.JsonArray;
if v16 == 0 goto label01;
v17 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v18 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_fromJson_0__1303: java.util.function.Consumer bootstrap$(io.vertx.core.net.SSLOptions)>(v1);
interfaceinvoke v17.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v18);
goto label01;
label11:
v19 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v20 = v19 instanceof io.vertx.core.json.JsonArray;
if v20 == 0 goto label01;
v21 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v22 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_fromJson_1__1302: java.util.function.Consumer bootstrap$(io.vertx.core.net.SSLOptions)>(v1);
interfaceinvoke v21.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v22);
goto label01;
label12:
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v24 = v23 instanceof io.vertx.core.json.JsonArray;
if v24 == 0 goto label01;
v25 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v26 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_fromJson_2__1301: java.util.function.Consumer bootstrap$(io.vertx.core.net.SSLOptions)>(v1);
interfaceinvoke v25.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v26);
goto label01;
label13:
v27 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v28 = v27 instanceof io.vertx.core.json.JsonArray;
if v28 == 0 goto label01;
v29 = new java.util.LinkedHashSet;
specialinvoke v29.<java.util.LinkedHashSet: void <init>()>();
v30 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v31 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_fromJson_3__1300: java.util.function.Consumer bootstrap$(java.util.LinkedHashSet)>(v29);
interfaceinvoke v30.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v31);
virtualinvoke v1.<io.vertx.core.net.SSLOptions: io.vertx.core.net.SSLOptions setEnabledSecureTransportProtocols(java.util.Set)>(v29);
goto label01;
label14:
v32 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v33 = v32 instanceof java.lang.Number;
if v33 == 0 goto label01;
v34 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v35 = virtualinvoke v34.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.net.SSLOptions: io.vertx.core.net.SSLOptions setSslHandshakeTimeout(long)>(v35);
goto label01;
label15:
v36 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v37 = v36 instanceof java.lang.String;
if v37 == 0 goto label01;
v38 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v39 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v38);
virtualinvoke v1.<io.vertx.core.net.SSLOptions: io.vertx.core.net.SSLOptions setSslHandshakeTimeoutUnit(java.util.concurrent.TimeUnit)>(v39);
goto label01;
label16:
v40 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v41 = v40 instanceof java.lang.Boolean;
if v41 == 0 goto label01;
v42 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v43 = virtualinvoke v42.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.SSLOptions: io.vertx.core.net.SSLOptions setUseAlpn(boolean)>(v43);
goto label01;
label17:
return;
}
static void toJson(io.vertx.core.net.SSLOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.SSLOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.net.SSLOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.net.SSLOptionsConverter: void toJson(io.vertx.core.net.SSLOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.net.SSLOptions, java.util.Map)
{
long v18;
io.vertx.core.net.SSLOptions v0;
java.lang.Long v19;
java.util.Map v1;
java.lang.Boolean v24;
java.lang.String v22;
boolean v23;
java.util.Set v10, v12, v14, v16;
java.util.concurrent.TimeUnit v20, v21;
java.util.function.Consumer v13, v17, v5, v9;
io.vertx.core.json.JsonArray v11, v15, v3, v7;
java.util.List v2, v4, v6, v8;
v0 := @parameter0: io.vertx.core.net.SSLOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.List getCrlPaths()>();
if v2 == null goto label1;
v3 = new io.vertx.core.json.JsonArray;
specialinvoke v3.<io.vertx.core.json.JsonArray: void <init>()>();
v4 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.List getCrlPaths()>();
v5 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_toJson_4__1307: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v3);
interfaceinvoke v4.<java.util.List: void forEach(java.util.function.Consumer)>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("crlPaths", v3);
label1:
v6 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.List getCrlValues()>();
if v6 == null goto label2;
v7 = new io.vertx.core.json.JsonArray;
specialinvoke v7.<io.vertx.core.json.JsonArray: void <init>()>();
v8 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.List getCrlValues()>();
v9 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_toJson_5__1306: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v7);
interfaceinvoke v8.<java.util.List: void forEach(java.util.function.Consumer)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("crlValues", v7);
label2:
v10 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.Set getEnabledCipherSuites()>();
if v10 == null goto label3;
v11 = new io.vertx.core.json.JsonArray;
specialinvoke v11.<io.vertx.core.json.JsonArray: void <init>()>();
v12 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.Set getEnabledCipherSuites()>();
v13 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_toJson_6__1305: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v11);
interfaceinvoke v12.<java.util.Set: void forEach(java.util.function.Consumer)>(v13);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enabledCipherSuites", v11);
label3:
v14 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.Set getEnabledSecureTransportProtocols()>();
if v14 == null goto label4;
v15 = new io.vertx.core.json.JsonArray;
specialinvoke v15.<io.vertx.core.json.JsonArray: void <init>()>();
v16 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.Set getEnabledSecureTransportProtocols()>();
v17 = staticinvoke <io.vertx.core.net.SSLOptionsConverter$lambda_toJson_7__1304: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v15);
interfaceinvoke v16.<java.util.Set: void forEach(java.util.function.Consumer)>(v17);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enabledSecureTransportProtocols", v15);
label4:
v18 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: long getSslHandshakeTimeout()>();
v19 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v18);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sslHandshakeTimeout", v19);
v20 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.concurrent.TimeUnit getSslHandshakeTimeoutUnit()>();
if v20 == null goto label5;
v21 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: java.util.concurrent.TimeUnit getSslHandshakeTimeoutUnit()>();
v22 = virtualinvoke v21.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sslHandshakeTimeoutUnit", v22);
label5:
v23 = virtualinvoke v0.<io.vertx.core.net.SSLOptions: boolean isUseAlpn()>();
v24 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v23);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("useAlpn", v24);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.net.SSLOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.net.SSLOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}