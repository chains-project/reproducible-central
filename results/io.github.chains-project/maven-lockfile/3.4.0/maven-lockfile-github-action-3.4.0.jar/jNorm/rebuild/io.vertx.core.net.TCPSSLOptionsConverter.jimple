public class io.vertx.core.net.TCPSSLOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.net.TCPSSLOptionsConverter v0;
v0 := @this: io.vertx.core.net.TCPSSLOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.net.TCPSSLOptions)
{
io.vertx.core.net.JksOptions v134, v66;
io.vertx.core.net.OpenSSLEngineOptions v70;
byte v6;
long v103;
io.vertx.core.net.PfxOptions v82, v86;
io.vertx.core.net.PemTrustOptions v78;
int v131, v143, v55, v7, v91, v95;
java.util.function.Consumer v38, v42, v46, v51;
java.lang.Object v100, v102, v104, v106, v108, v110, v112, v114, v116, v118, v120, v122, v124, v126, v128, v130, v132, v135, v136, v138, v140, v142, v35, v37, v39, v4, v41, v43, v45, v47, v5, v50, v52, v54, v56, v58, v60, v63, v64, v67, v68, v71, v72, v75, v76, v79, v80, v83, v84, v87, v88, v90, v92, v94, v96, v98;
java.util.LinkedHashSet v49;
io.vertx.core.net.PemKeyCertOptions v74;
io.vertx.core.net.JdkSSLEngineOptions v62;
boolean v10, v101, v105, v109, v11, v111, v113, v115, v117, v119, v12, v121, v123, v125, v127, v129, v13, v133, v137, v139, v14, v141, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v36, v40, v44, v48, v53, v57, v61, v65, v69, v73, v77, v8, v81, v85, v89, v9, v93, v97, v99;
io.vertx.core.net.TCPSSLOptions v1;
java.lang.Iterable v0;
java.util.Iterator v2;
java.util.concurrent.TimeUnit v107, v59;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.net.TCPSSLOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label57;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -2111278753: goto label03;
case -1841157539: goto label24;
case -1739168523: goto label26;
case -1507328495: goto label07;
case -1483928794: goto label20;
case -1140757027: goto label13;
case -445271622: goto label10;
case -306448415: goto label08;
case -234786838: goto label05;
case -167899019: goto label25;
case -148579952: goto label27;
case -113000554: goto label18;
case -33423565: goto label11;
case -22047385: goto label22;
case 114188: goto label17;
case 12878711: goto label15;
case 87518279: goto label04;
case 193763271: goto label21;
case 471527149: goto label06;
case 510979470: goto label28;
case 564550815: goto label16;
case 733368890: goto label19;
case 964734558: goto label12;
case 1505727777: goto label23;
case 1526710152: goto label14;
case 1682240124: goto label09;
case 2004570385: goto label02;
default: goto label29;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("crlPaths");
if v8 == 0 goto label29;
v6 = 0;
goto label29;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("crlValues");
if v9 == 0 goto label29;
v6 = 1;
goto label29;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("enabledCipherSuites");
if v10 == 0 goto label29;
v6 = 2;
goto label29;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("enabledSecureTransportProtocols");
if v11 == 0 goto label29;
v6 = 3;
goto label29;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("idleTimeout");
if v12 == 0 goto label29;
v6 = 4;
goto label29;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("idleTimeoutUnit");
if v13 == 0 goto label29;
v6 = 5;
goto label29;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("jdkSslEngineOptions");
if v14 == 0 goto label29;
v6 = 6;
goto label29;
label09:
v15 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("keyStoreOptions");
if v15 == 0 goto label29;
v6 = 7;
goto label29;
label10:
v16 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("openSslEngineOptions");
if v16 == 0 goto label29;
v6 = 8;
goto label29;
label11:
v17 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("pemKeyCertOptions");
if v17 == 0 goto label29;
v6 = 9;
goto label29;
label12:
v18 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("pemTrustOptions");
if v18 == 0 goto label29;
v6 = 10;
goto label29;
label13:
v19 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("pfxKeyCertOptions");
if v19 == 0 goto label29;
v6 = 11;
goto label29;
label14:
v20 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("pfxTrustOptions");
if v20 == 0 goto label29;
v6 = 12;
goto label29;
label15:
v21 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("readIdleTimeout");
if v21 == 0 goto label29;
v6 = 13;
goto label29;
label16:
v22 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("soLinger");
if v22 == 0 goto label29;
v6 = 14;
goto label29;
label17:
v23 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("ssl");
if v23 == 0 goto label29;
v6 = 15;
goto label29;
label18:
v24 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sslHandshakeTimeout");
if v24 == 0 goto label29;
v6 = 16;
goto label29;
label19:
v25 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sslHandshakeTimeoutUnit");
if v25 == 0 goto label29;
v6 = 17;
goto label29;
label20:
v26 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tcpCork");
if v26 == 0 goto label29;
v6 = 18;
goto label29;
label21:
v27 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tcpFastOpen");
if v27 == 0 goto label29;
v6 = 19;
goto label29;
label22:
v28 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tcpKeepAlive");
if v28 == 0 goto label29;
v6 = 20;
goto label29;
label23:
v29 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tcpNoDelay");
if v29 == 0 goto label29;
v6 = 21;
goto label29;
label24:
v30 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tcpQuickAck");
if v30 == 0 goto label29;
v6 = 22;
goto label29;
label25:
v31 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("tcpUserTimeout");
if v31 == 0 goto label29;
v6 = 23;
goto label29;
label26:
v32 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("trustStoreOptions");
if v32 == 0 goto label29;
v6 = 24;
goto label29;
label27:
v33 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("useAlpn");
if v33 == 0 goto label29;
v6 = 25;
goto label29;
label28:
v34 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("writeIdleTimeout");
if v34 == 0 goto label29;
v6 = 26;
label29:
tableswitch(v6)
{
case 0: goto label30;
case 1: goto label31;
case 2: goto label32;
case 3: goto label33;
case 4: goto label34;
case 5: goto label35;
case 6: goto label36;
case 7: goto label37;
case 8: goto label38;
case 9: goto label39;
case 10: goto label40;
case 11: goto label41;
case 12: goto label42;
case 13: goto label43;
case 14: goto label44;
case 15: goto label45;
case 16: goto label46;
case 17: goto label47;
case 18: goto label48;
case 19: goto label49;
case 20: goto label50;
case 21: goto label51;
case 22: goto label52;
case 23: goto label53;
case 24: goto label54;
case 25: goto label55;
case 26: goto label56;
default: goto label01;
};
label30:
v35 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v36 = v35 instanceof io.vertx.core.json.JsonArray;
if v36 == 0 goto label01;
v37 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v38 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_fromJson_0__1286: java.util.function.Consumer bootstrap$(io.vertx.core.net.TCPSSLOptions)>(v1);
interfaceinvoke v37.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v38);
goto label01;
label31:
v39 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v40 = v39 instanceof io.vertx.core.json.JsonArray;
if v40 == 0 goto label01;
v41 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v42 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_fromJson_1__1285: java.util.function.Consumer bootstrap$(io.vertx.core.net.TCPSSLOptions)>(v1);
interfaceinvoke v41.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v42);
goto label01;
label32:
v43 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v44 = v43 instanceof io.vertx.core.json.JsonArray;
if v44 == 0 goto label01;
v45 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v46 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_fromJson_2__1284: java.util.function.Consumer bootstrap$(io.vertx.core.net.TCPSSLOptions)>(v1);
interfaceinvoke v45.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v46);
goto label01;
label33:
v47 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v48 = v47 instanceof io.vertx.core.json.JsonArray;
if v48 == 0 goto label01;
v49 = new java.util.LinkedHashSet;
specialinvoke v49.<java.util.LinkedHashSet: void <init>()>();
v50 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v51 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_fromJson_3__1283: java.util.function.Consumer bootstrap$(java.util.LinkedHashSet)>(v49);
interfaceinvoke v50.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v51);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setEnabledSecureTransportProtocols(java.util.Set)>(v49);
goto label01;
label34:
v52 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v53 = v52 instanceof java.lang.Number;
if v53 == 0 goto label01;
v54 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v55 = virtualinvoke v54.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setIdleTimeout(int)>(v55);
goto label01;
label35:
v56 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v57 = v56 instanceof java.lang.String;
if v57 == 0 goto label01;
v58 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v59 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v58);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setIdleTimeoutUnit(java.util.concurrent.TimeUnit)>(v59);
goto label01;
label36:
v60 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v61 = v60 instanceof io.vertx.core.json.JsonObject;
if v61 == 0 goto label01;
v62 = new io.vertx.core.net.JdkSSLEngineOptions;
v63 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v62.<io.vertx.core.net.JdkSSLEngineOptions: void <init>(io.vertx.core.json.JsonObject)>(v63);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions)>(v62);
goto label01;
label37:
v64 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v65 = v64 instanceof io.vertx.core.json.JsonObject;
if v65 == 0 goto label01;
v66 = new io.vertx.core.net.JksOptions;
v67 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v66.<io.vertx.core.net.JksOptions: void <init>(io.vertx.core.json.JsonObject)>(v67);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setKeyStoreOptions(io.vertx.core.net.JksOptions)>(v66);
goto label01;
label38:
v68 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v69 = v68 instanceof io.vertx.core.json.JsonObject;
if v69 == 0 goto label01;
v70 = new io.vertx.core.net.OpenSSLEngineOptions;
v71 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v70.<io.vertx.core.net.OpenSSLEngineOptions: void <init>(io.vertx.core.json.JsonObject)>(v71);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions)>(v70);
goto label01;
label39:
v72 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v73 = v72 instanceof io.vertx.core.json.JsonObject;
if v73 == 0 goto label01;
v74 = new io.vertx.core.net.PemKeyCertOptions;
v75 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v74.<io.vertx.core.net.PemKeyCertOptions: void <init>(io.vertx.core.json.JsonObject)>(v75);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions)>(v74);
goto label01;
label40:
v76 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v77 = v76 instanceof io.vertx.core.json.JsonObject;
if v77 == 0 goto label01;
v78 = new io.vertx.core.net.PemTrustOptions;
v79 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v78.<io.vertx.core.net.PemTrustOptions: void <init>(io.vertx.core.json.JsonObject)>(v79);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions)>(v78);
goto label01;
label41:
v80 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v81 = v80 instanceof io.vertx.core.json.JsonObject;
if v81 == 0 goto label01;
v82 = new io.vertx.core.net.PfxOptions;
v83 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v82.<io.vertx.core.net.PfxOptions: void <init>(io.vertx.core.json.JsonObject)>(v83);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions)>(v82);
goto label01;
label42:
v84 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v85 = v84 instanceof io.vertx.core.json.JsonObject;
if v85 == 0 goto label01;
v86 = new io.vertx.core.net.PfxOptions;
v87 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v86.<io.vertx.core.net.PfxOptions: void <init>(io.vertx.core.json.JsonObject)>(v87);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions)>(v86);
goto label01;
label43:
v88 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v89 = v88 instanceof java.lang.Number;
if v89 == 0 goto label01;
v90 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v91 = virtualinvoke v90.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setReadIdleTimeout(int)>(v91);
goto label01;
label44:
v92 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v93 = v92 instanceof java.lang.Number;
if v93 == 0 goto label01;
v94 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v95 = virtualinvoke v94.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setSoLinger(int)>(v95);
goto label01;
label45:
v96 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v97 = v96 instanceof java.lang.Boolean;
if v97 == 0 goto label01;
v98 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v99 = virtualinvoke v98.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setSsl(boolean)>(v99);
goto label01;
label46:
v100 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v101 = v100 instanceof java.lang.Number;
if v101 == 0 goto label01;
v102 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v103 = virtualinvoke v102.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setSslHandshakeTimeout(long)>(v103);
goto label01;
label47:
v104 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v105 = v104 instanceof java.lang.String;
if v105 == 0 goto label01;
v106 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v107 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v106);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setSslHandshakeTimeoutUnit(java.util.concurrent.TimeUnit)>(v107);
goto label01;
label48:
v108 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v109 = v108 instanceof java.lang.Boolean;
if v109 == 0 goto label01;
v110 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v111 = virtualinvoke v110.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTcpCork(boolean)>(v111);
goto label01;
label49:
v112 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v113 = v112 instanceof java.lang.Boolean;
if v113 == 0 goto label01;
v114 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v115 = virtualinvoke v114.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTcpFastOpen(boolean)>(v115);
goto label01;
label50:
v116 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v117 = v116 instanceof java.lang.Boolean;
if v117 == 0 goto label01;
v118 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v119 = virtualinvoke v118.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTcpKeepAlive(boolean)>(v119);
goto label01;
label51:
v120 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v121 = v120 instanceof java.lang.Boolean;
if v121 == 0 goto label01;
v122 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v123 = virtualinvoke v122.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTcpNoDelay(boolean)>(v123);
goto label01;
label52:
v124 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v125 = v124 instanceof java.lang.Boolean;
if v125 == 0 goto label01;
v126 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v127 = virtualinvoke v126.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTcpQuickAck(boolean)>(v127);
goto label01;
label53:
v128 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v129 = v128 instanceof java.lang.Number;
if v129 == 0 goto label01;
v130 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v131 = virtualinvoke v130.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTcpUserTimeout(int)>(v131);
goto label01;
label54:
v132 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v133 = v132 instanceof io.vertx.core.json.JsonObject;
if v133 == 0 goto label01;
v134 = new io.vertx.core.net.JksOptions;
v135 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
specialinvoke v134.<io.vertx.core.net.JksOptions: void <init>(io.vertx.core.json.JsonObject)>(v135);
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setTrustStoreOptions(io.vertx.core.net.JksOptions)>(v134);
goto label01;
label55:
v136 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v137 = v136 instanceof java.lang.Boolean;
if v137 == 0 goto label01;
v138 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v139 = virtualinvoke v138.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setUseAlpn(boolean)>(v139);
goto label01;
label56:
v140 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v141 = v140 instanceof java.lang.Number;
if v141 == 0 goto label01;
v142 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v143 = virtualinvoke v142.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.TCPSSLOptions setWriteIdleTimeout(int)>(v143);
goto label01;
label57:
return;
}
static void toJson(io.vertx.core.net.TCPSSLOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.TCPSSLOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.net.TCPSSLOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter: void toJson(io.vertx.core.net.TCPSSLOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.net.TCPSSLOptions, java.util.Map)
{
io.vertx.core.net.JksOptions v26, v27, v67, v68;
java.lang.Integer v19, v45, v47, v66, v73;
io.vertx.core.net.OpenSSLEngineOptions v29, v30;
java.lang.Long v51;
java.util.Map v1;
io.vertx.core.json.JsonObject v25, v28, v31, v34, v37, v40, v43, v69;
java.util.Set v10, v12, v14, v16;
long v50;
io.vertx.core.net.PfxOptions v38, v39, v41, v42;
java.lang.String v22, v54;
io.vertx.core.net.PemTrustOptions v35, v36;
io.vertx.core.json.JsonArray v11, v15, v3, v7;
io.vertx.core.net.PemKeyCertOptions v32, v33;
io.vertx.core.net.JdkSSLEngineOptions v23, v24;
boolean v48, v55, v57, v59, v61, v63, v70;
io.vertx.core.net.TCPSSLOptions v0;
java.util.List v2, v4, v6, v8;
int v18, v44, v46, v65, v72;
java.lang.Boolean v49, v56, v58, v60, v62, v64, v71;
java.util.concurrent.TimeUnit v20, v21, v52, v53;
java.util.function.Consumer v13, v17, v5, v9;
v0 := @parameter0: io.vertx.core.net.TCPSSLOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.List getCrlPaths()>();
if v2 == null goto label01;
v3 = new io.vertx.core.json.JsonArray;
specialinvoke v3.<io.vertx.core.json.JsonArray: void <init>()>();
v4 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.List getCrlPaths()>();
v5 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_toJson_4__1290: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v3);
interfaceinvoke v4.<java.util.List: void forEach(java.util.function.Consumer)>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("crlPaths", v3);
label01:
v6 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.List getCrlValues()>();
if v6 == null goto label02;
v7 = new io.vertx.core.json.JsonArray;
specialinvoke v7.<io.vertx.core.json.JsonArray: void <init>()>();
v8 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.List getCrlValues()>();
v9 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_toJson_5__1289: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v7);
interfaceinvoke v8.<java.util.List: void forEach(java.util.function.Consumer)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("crlValues", v7);
label02:
v10 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.Set getEnabledCipherSuites()>();
if v10 == null goto label03;
v11 = new io.vertx.core.json.JsonArray;
specialinvoke v11.<io.vertx.core.json.JsonArray: void <init>()>();
v12 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.Set getEnabledCipherSuites()>();
v13 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_toJson_6__1288: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v11);
interfaceinvoke v12.<java.util.Set: void forEach(java.util.function.Consumer)>(v13);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enabledCipherSuites", v11);
label03:
v14 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.Set getEnabledSecureTransportProtocols()>();
if v14 == null goto label04;
v15 = new io.vertx.core.json.JsonArray;
specialinvoke v15.<io.vertx.core.json.JsonArray: void <init>()>();
v16 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.Set getEnabledSecureTransportProtocols()>();
v17 = staticinvoke <io.vertx.core.net.TCPSSLOptionsConverter$lambda_toJson_7__1287: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v15);
interfaceinvoke v16.<java.util.Set: void forEach(java.util.function.Consumer)>(v17);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("enabledSecureTransportProtocols", v15);
label04:
v18 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: int getIdleTimeout()>();
v19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v18);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("idleTimeout", v19);
v20 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();
if v20 == null goto label05;
v21 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.concurrent.TimeUnit getIdleTimeoutUnit()>();
v22 = virtualinvoke v21.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("idleTimeoutUnit", v22);
label05:
v23 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.JdkSSLEngineOptions getJdkSslEngineOptions()>();
if v23 == null goto label06;
v24 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.JdkSSLEngineOptions getJdkSslEngineOptions()>();
v25 = virtualinvoke v24.<io.vertx.core.net.JdkSSLEngineOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("jdkSslEngineOptions", v25);
label06:
v26 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.JksOptions getKeyStoreOptions()>();
if v26 == null goto label07;
v27 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.JksOptions getKeyStoreOptions()>();
v28 = virtualinvoke v27.<io.vertx.core.net.JksOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("keyStoreOptions", v28);
label07:
v29 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.OpenSSLEngineOptions getOpenSslEngineOptions()>();
if v29 == null goto label08;
v30 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.OpenSSLEngineOptions getOpenSslEngineOptions()>();
v31 = virtualinvoke v30.<io.vertx.core.net.OpenSSLEngineOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("openSslEngineOptions", v31);
label08:
v32 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PemKeyCertOptions getPemKeyCertOptions()>();
if v32 == null goto label09;
v33 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PemKeyCertOptions getPemKeyCertOptions()>();
v34 = virtualinvoke v33.<io.vertx.core.net.PemKeyCertOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pemKeyCertOptions", v34);
label09:
v35 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PemTrustOptions getPemTrustOptions()>();
if v35 == null goto label10;
v36 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PemTrustOptions getPemTrustOptions()>();
v37 = virtualinvoke v36.<io.vertx.core.net.PemTrustOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pemTrustOptions", v37);
label10:
v38 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PfxOptions getPfxKeyCertOptions()>();
if v38 == null goto label11;
v39 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PfxOptions getPfxKeyCertOptions()>();
v40 = virtualinvoke v39.<io.vertx.core.net.PfxOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pfxKeyCertOptions", v40);
label11:
v41 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PfxOptions getPfxTrustOptions()>();
if v41 == null goto label12;
v42 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.PfxOptions getPfxTrustOptions()>();
v43 = virtualinvoke v42.<io.vertx.core.net.PfxOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("pfxTrustOptions", v43);
label12:
v44 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: int getReadIdleTimeout()>();
v45 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v44);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("readIdleTimeout", v45);
v46 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: int getSoLinger()>();
v47 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v46);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("soLinger", v47);
v48 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isSsl()>();
v49 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v48);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("ssl", v49);
v50 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: long getSslHandshakeTimeout()>();
v51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v50);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sslHandshakeTimeout", v51);
v52 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.concurrent.TimeUnit getSslHandshakeTimeoutUnit()>();
if v52 == null goto label13;
v53 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: java.util.concurrent.TimeUnit getSslHandshakeTimeoutUnit()>();
v54 = virtualinvoke v53.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sslHandshakeTimeoutUnit", v54);
label13:
v55 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isTcpCork()>();
v56 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v55);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tcpCork", v56);
v57 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isTcpFastOpen()>();
v58 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v57);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tcpFastOpen", v58);
v59 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isTcpKeepAlive()>();
v60 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v59);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tcpKeepAlive", v60);
v61 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isTcpNoDelay()>();
v62 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v61);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tcpNoDelay", v62);
v63 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isTcpQuickAck()>();
v64 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v63);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tcpQuickAck", v64);
v65 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: int getTcpUserTimeout()>();
v66 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v65);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("tcpUserTimeout", v66);
v67 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.JksOptions getTrustStoreOptions()>();
if v67 == null goto label14;
v68 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: io.vertx.core.net.JksOptions getTrustStoreOptions()>();
v69 = virtualinvoke v68.<io.vertx.core.net.JksOptions: io.vertx.core.json.JsonObject toJson()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("trustStoreOptions", v69);
label14:
v70 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: boolean isUseAlpn()>();
v71 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v70);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("useAlpn", v71);
v72 = virtualinvoke v0.<io.vertx.core.net.TCPSSLOptions: int getWriteIdleTimeout()>();
v73 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v72);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("writeIdleTimeout", v73);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.net.TCPSSLOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.net.TCPSSLOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}