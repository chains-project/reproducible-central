class io.vertx.core.net.impl.VertxTrustManagerFactory$2 extends javax.net.ssl.TrustManagerFactorySpi
{
final javax.net.ssl.TrustManager[] val$tm;
void <init>(javax.net.ssl.TrustManager[])
{
io.vertx.core.net.impl.VertxTrustManagerFactory$2 v0;
javax.net.ssl.TrustManager[] v1;
v0 := @this: io.vertx.core.net.impl.VertxTrustManagerFactory$2;
v1 := @parameter0: javax.net.ssl.TrustManager[];
v0.<io.vertx.core.net.impl.VertxTrustManagerFactory$2: javax.net.ssl.TrustManager[] val$tm> = v1;
specialinvoke v0.<javax.net.ssl.TrustManagerFactorySpi: void <init>()>();
return;
}
protected void engineInit(java.security.KeyStore) throws java.security.KeyStoreException
{
java.security.KeyStore v1;
io.vertx.core.net.impl.VertxTrustManagerFactory$2 v0;
v0 := @this: io.vertx.core.net.impl.VertxTrustManagerFactory$2;
v1 := @parameter0: java.security.KeyStore;
return;
}
protected void engineInit(javax.net.ssl.ManagerFactoryParameters)
{
javax.net.ssl.ManagerFactoryParameters v1;
io.vertx.core.net.impl.VertxTrustManagerFactory$2 v0;
v0 := @this: io.vertx.core.net.impl.VertxTrustManagerFactory$2;
v1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;
return;
}
protected javax.net.ssl.TrustManager[] engineGetTrustManagers()
{
java.lang.Object v2;
io.vertx.core.net.impl.VertxTrustManagerFactory$2 v0;
javax.net.ssl.TrustManager[] v1;
v0 := @this: io.vertx.core.net.impl.VertxTrustManagerFactory$2;
v1 = v0.<io.vertx.core.net.impl.VertxTrustManagerFactory$2: javax.net.ssl.TrustManager[] val$tm>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
}