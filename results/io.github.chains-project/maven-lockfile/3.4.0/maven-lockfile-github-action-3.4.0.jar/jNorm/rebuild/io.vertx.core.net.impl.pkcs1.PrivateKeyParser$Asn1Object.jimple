class io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object extends java.lang.Object
{
protected final int type;
protected final int length;
protected final byte[] value;
protected final int tag;
public void <init>(int, int, byte[])
{
byte[] v3;
int v1, v2, v4;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: byte[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int tag> = v1;
v4 = v1 & 31;
v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int type> = v4;
v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int length> = v2;
v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: byte[] value> = v3;
return;
}
public int getType()
{
int v1;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int type>;
return v1;
}
public int getLength()
{
int v1;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int length>;
return v1;
}
public byte[] getValue()
{
byte[] v1;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: byte[] value>;
return v1;
}
public boolean isConstructed()
{
int v1, v2;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
boolean v3;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int tag>;
v2 = v1 & 32;
if v2 != 32 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser getParser() throws io.vertx.core.VertxException
{
io.vertx.core.VertxException v2;
byte[] v4;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser v3;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
boolean v1;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = virtualinvoke v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: boolean isConstructed()>();
if v1 != 0 goto label1;
v2 = new io.vertx.core.VertxException;
specialinvoke v2.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Invalid DER: can\'t parse primitive entity");
throw v2;
label1:
v3 = new io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser;
v4 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: byte[] value>;
specialinvoke v3.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$DerParser: void <init>(byte[])>(v4);
return v3;
}
public java.math.BigInteger getInteger() throws io.vertx.core.VertxException
{
io.vertx.core.VertxException v2;
byte[] v4;
int v1;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
java.math.BigInteger v3;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int type>;
if v1 == 2 goto label1;
v2 = new io.vertx.core.VertxException;
specialinvoke v2.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Invalid DER: object is not integer");
throw v2;
label1:
v3 = new java.math.BigInteger;
v4 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: byte[] value>;
specialinvoke v3.<java.math.BigInteger: void <init>(byte[])>(v4);
return v3;
}
public byte[] getObjectIdentifier() throws io.vertx.core.VertxException
{
io.vertx.core.VertxException v3;
byte[] v2;
int v1;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int type>;
lookupswitch(v1)
{
case 6: goto label1;
default: goto label2;
};
label1:
v2 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: byte[] value>;
return v2;
label2:
v3 = new io.vertx.core.VertxException;
specialinvoke v3.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Invalid DER: object is not an Object Identifier");
throw v3;
}
public java.lang.String getString() throws io.vertx.core.VertxException
{
io.vertx.core.VertxException v3, v4, v8;
byte[] v6;
int v1;
io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object v0;
java.lang.String v2, v5;
java.io.UnsupportedEncodingException v7;
v0 := @this: io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object;
v1 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: int type>;
tableswitch(v1)
{
case 12: goto label3;
case 13: goto label5;
case 14: goto label5;
case 15: goto label5;
case 16: goto label5;
case 17: goto label5;
case 18: goto label1;
case 19: goto label1;
case 20: goto label5;
case 21: goto label1;
case 22: goto label1;
case 23: goto label5;
case 24: goto label5;
case 25: goto label1;
case 26: goto label1;
case 27: goto label1;
case 28: goto label4;
case 29: goto label5;
case 30: goto label2;
default: goto label5;
};
label1:
v2 = "ISO-8859-1";
goto label6;
label2:
v2 = "UTF-16BE";
goto label6;
label3:
v2 = "UTF-8";
goto label6;
label4:
v3 = new io.vertx.core.VertxException;
specialinvoke v3.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Invalid DER: can\'t handle UCS-4 string");
throw v3;
label5:
v4 = new io.vertx.core.VertxException;
specialinvoke v4.<io.vertx.core.VertxException: void <init>(java.lang.String)>("Invalid DER: object is not a string");
throw v4;
label6:
v5 = new java.lang.String;
v6 = v0.<io.vertx.core.net.impl.pkcs1.PrivateKeyParser$Asn1Object: byte[] value>;
specialinvoke v5.<java.lang.String: void <init>(byte[],java.lang.String)>(v6, v2);
label7:
return v5;
label8:
v7 := @caughtexception;
v8 = new io.vertx.core.VertxException;
specialinvoke v8.<io.vertx.core.VertxException: void <init>(java.lang.Throwable)>(v7);
throw v8;
catch java.io.UnsupportedEncodingException from label6 to label7 with label8;
}
}