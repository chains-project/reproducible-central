class io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire extends io.vertx.core.net.impl.pool.PoolWaiter implements io.vertx.core.net.impl.pool.Executor$Action
{
public void <init>(io.vertx.core.impl.ContextInternal, io.vertx.core.net.impl.pool.PoolWaiter$Listener, int, io.vertx.core.Handler)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire v0;
int v3;
io.vertx.core.impl.ContextInternal v1;
io.vertx.core.Handler v4;
io.vertx.core.net.impl.pool.PoolWaiter$Listener v2;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: io.vertx.core.net.impl.pool.PoolWaiter$Listener;
v3 := @parameter2: int;
v4 := @parameter3: io.vertx.core.Handler;
specialinvoke v0.<io.vertx.core.net.impl.pool.PoolWaiter: void <init>(io.vertx.core.net.impl.pool.PoolWaiter$Listener,io.vertx.core.impl.ContextInternal,int,io.vertx.core.Handler)>(v2, v1, v3, v4);
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v18;
java.util.function.BiFunction v24, v4;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$6 v40;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$5 v39;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$2 v9;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1 v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$4 v29;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$3 v23;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v27, v7;
io.vertx.core.net.impl.pool.PoolWaiter$Listener v38;
boolean v2;
io.vertx.core.impl.ContextInternal v16;
java.util.function.Function v15;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire v0;
int v10, v11, v12, v13, v14, v19, v20, v22, v30, v31, v33, v34, v35, v36;
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ListImpl v25, v5;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot[] v21;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v32, v37;
java.lang.Object v17, v26, v6;
io.vertx.core.Handler v28, v8;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: boolean closed>;
if v2 == 0 goto label1;
v3 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1;
specialinvoke v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire)>(v0);
return v3;
label1:
v4 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: java.util.function.BiFunction selector>;
v5 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$ListImpl list>;
v6 = interfaceinvoke v4.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v0, v5);
if v6 == null goto label2;
staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int access$808(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)>(v6);
v7 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v8 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: io.vertx.core.Handler handler>;
specialinvoke v7.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot,io.vertx.core.Handler)>(v6, v8);
v9 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$2;
specialinvoke v9.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$2: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire,io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)>(v0, v7);
return v9;
label2:
v10 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int capacity>;
v11 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int maxCapacity>;
if v10 >= v11 goto label3;
v12 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int capacity>;
v13 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: int capacity>;
v14 = v12 + v13;
v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int capacity> = v14;
v15 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: java.util.function.Function contextProvider>;
v16 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: io.vertx.core.impl.ContextInternal context>;
v17 = interfaceinvoke v15.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v16);
v18 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot;
v19 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int size>;
v20 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: int capacity>;
specialinvoke v18.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool,io.vertx.core.impl.EventLoopContext,int,int)>(v1, v17, v19, v20);
v21 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot[] slots>;
v22 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int size>;
v21[v22] = v18;
staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool: int access$908(io.vertx.core.net.impl.pool.SimpleConnectionPool)>(v1);
v23 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$3;
specialinvoke v23.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$3: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire,io.vertx.core.net.impl.pool.SimpleConnectionPool,io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)>(v0, v1, v18);
return v23;
label3:
v24 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: java.util.function.BiFunction fallbackSelector>;
v25 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$ListImpl list>;
v26 = interfaceinvoke v24.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v0, v25);
if v26 == null goto label4;
staticinvoke <io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int access$808(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot)>(v26);
v27 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v28 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: io.vertx.core.Handler handler>;
specialinvoke v27.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot,io.vertx.core.Handler)>(v26, v28);
v29 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$4;
specialinvoke v29.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$4: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire,io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)>(v0, v27);
return v29;
label4:
v30 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int maxWaiters>;
v31 = (int) -1;
if v30 == v31 goto label5;
v32 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v33 = virtualinvoke v32.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size()>();
v34 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int requests>;
v35 = v33 + v34;
v36 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: int maxWaiters>;
if v35 >= v36 goto label7;
label5:
v37 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
virtualinvoke v37.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: void addLast(io.vertx.core.net.impl.pool.PoolWaiter)>(v0);
v38 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire: io.vertx.core.net.impl.pool.PoolWaiter$Listener listener>;
if v38 == null goto label6;
v39 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$5;
specialinvoke v39.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$5: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire)>(v0);
return v39;
label6:
return null;
label7:
v40 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$6;
specialinvoke v40.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire$6: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Acquire,io.vertx.core.net.impl.pool.SimpleConnectionPool)>(v0, v1);
return v40;
}
}