class io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel extends io.vertx.core.net.impl.pool.Task implements io.vertx.core.net.impl.pool.Executor$Action
{
private final io.vertx.core.net.impl.pool.PoolWaiter waiter;
private final io.vertx.core.Handler handler;
private boolean cancelled;
public void <init>(io.vertx.core.net.impl.pool.PoolWaiter, io.vertx.core.Handler)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel v0;
io.vertx.core.Handler v2;
io.vertx.core.net.impl.pool.PoolWaiter v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel;
v1 := @parameter0: io.vertx.core.net.impl.pool.PoolWaiter;
v2 := @parameter1: io.vertx.core.Handler;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.net.impl.pool.PoolWaiter waiter> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.Handler handler> = v2;
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel v0;
io.vertx.core.net.impl.pool.PoolWaiter v10, v5, v7, v8;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel$1 v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v4;
boolean v2, v6, v9;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: boolean closed>;
if v2 == 0 goto label1;
v3 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel$1;
specialinvoke v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel)>(v0);
return v3;
label1:
v4 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v5 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v6 = virtualinvoke v4.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: boolean remove(io.vertx.core.net.impl.pool.PoolWaiter)>(v5);
if v6 == 0 goto label2;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: boolean cancelled> = 1;
v7 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v7.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed> = 1;
goto label4;
label2:
v8 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v9 = v8.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed>;
if v9 != 0 goto label3;
v10 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v10.<io.vertx.core.net.impl.pool.PoolWaiter: boolean disposed> = 1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: boolean cancelled> = 1;
goto label4;
label3:
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: boolean cancelled> = 0;
label4:
return v0;
}
public void run()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel v0;
java.lang.Boolean v3;
io.vertx.core.Handler v1;
io.vertx.core.Future v4;
boolean v2;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: io.vertx.core.Handler handler>;
v2 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Cancel: boolean cancelled>;
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v2);
v4 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v3);
interfaceinvoke v1.<io.vertx.core.Handler: void handle(java.lang.Object)>(v4);
return;
}
}