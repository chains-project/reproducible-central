class io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2 extends io.vertx.core.net.impl.pool.Task
{
final io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease;
final io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] val$leases;
final io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess, io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl, io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[])
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2 v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] v3;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess;
v2 := @parameter1: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v3 := @parameter2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[];
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease> = v2;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] val$leases> = v3;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v12, v9;
io.vertx.core.Promise v10;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2 v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] v3, v4;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v1, v2, v7;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess v11, v8;
int v5, v6;
java.lang.Object v13;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl val$lease>;
virtualinvoke v2.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void emit()>();
label1:
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] val$leases>;
if v3 == null goto label3;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] val$leases>;
v5 = lengthof v4;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v4[v6];
virtualinvoke v7.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void emit()>();
v6 = v6 + 1;
goto label2;
label3:
v8 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v9 = v8.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v10 = v9.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: io.vertx.core.Promise result>;
v11 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v12 = v11.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v13 = v12.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
interfaceinvoke v10.<io.vertx.core.Promise: void complete(java.lang.Object)>(v13);
return;
}
}