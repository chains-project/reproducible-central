class io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl extends java.lang.Object implements io.vertx.core.net.impl.pool.Lease
{
private final io.vertx.core.Handler handler;
private final io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot;
private final java.lang.Object connection;
private boolean recycled;
public void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot, io.vertx.core.Handler)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
java.lang.Object v3;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot;
v2 := @parameter1: io.vertx.core.Handler;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: io.vertx.core.Handler handler> = v2;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot> = v1;
v3 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: java.lang.Object connection> = v3;
return;
}
public java.lang.Object get()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: java.lang.Object connection>;
return v1;
}
public void recycle()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: io.vertx.core.net.impl.pool.SimpleConnectionPool pool>;
specialinvoke v2.<io.vertx.core.net.impl.pool.SimpleConnectionPool: void recycle(io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)>(v0);
return;
}
void emit()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v0;
io.vertx.core.impl.EventLoopContext v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
io.vertx.core.Handler v4;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: io.vertx.core.impl.EventLoopContext context>;
v3 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v0);
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: io.vertx.core.Handler handler>;
virtualinvoke v2.<io.vertx.core.impl.EventLoopContext: void emit(java.lang.Object,io.vertx.core.Handler)>(v3, v4);
return;
}
}