class io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency extends java.lang.Object implements io.vertx.core.net.impl.pool.Executor$Action
{
private final io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot;
private final long concurrency;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot, long)
{
long v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v1;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot;
v2 := @parameter1: long;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: long concurrency> = v2;
return;
}
public io.vertx.core.net.impl.pool.Task execute(io.vertx.core.net.impl.pool.SimpleConnectionPool)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v12, v14, v2, v23, v27, v5, v8;
long v10, v13, v16, v19, v4, v6, v7, v9;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl v22;
byte v11;
int v15, v18, v21, v28, v29;
io.vertx.core.net.impl.pool.SimpleConnectionPool v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[] v20;
io.vertx.core.net.impl.pool.PoolWaiter v25;
io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency$1 v30;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters v17, v24;
java.lang.Object v3;
io.vertx.core.Handler v26;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool;
v2 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v3 = v2.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
if v3 == null goto label5;
v4 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: long concurrency>;
v5 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v6 = v5.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency>;
v7 = v4 - v6;
v8 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v9 = v8.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency>;
v10 = v9 + v7;
v8.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency> = v10;
v11 = v7 cmp 0L;
if v11 <= 0 goto label4;
v12 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v13 = v12.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: long concurrency>;
v14 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v15 = v14.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage>;
v16 = v13 - v15;
v17 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v18 = virtualinvoke v17.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: int size()>();
v19 = staticinvoke <java.lang.Math: long min(long,long)>(v16, v18);
if v19 <= 0 goto label3;
v20 = newarray (io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl)[v19];
v21 = 0;
label1:
if v21 >= v19 goto label2;
v22 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl;
v23 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v24 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters waiters>;
v25 = virtualinvoke v24.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Waiters: io.vertx.core.net.impl.pool.PoolWaiter poll()>();
v26 = v25.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.Handler handler>;
specialinvoke v22.<io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot,io.vertx.core.Handler)>(v23, v26);
v20[v21] = v22;
v21 = v21 + 1;
goto label1;
label2:
v27 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v28 = v27.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage>;
v29 = v28 + v19;
v27.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: int usage> = v29;
v30 = new io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency$1;
specialinvoke v30.<io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency$1: void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$SetConcurrency,io.vertx.core.net.impl.pool.SimpleConnectionPool$LeaseImpl[])>(v0, v20);
return v30;
label3:
return null;
label4:
return null;
label5:
return null;
}
}