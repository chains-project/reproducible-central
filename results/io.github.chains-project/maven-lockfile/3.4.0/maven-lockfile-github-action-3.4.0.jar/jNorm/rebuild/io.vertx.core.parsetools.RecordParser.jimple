public interface  io.vertx.core.parsetools.RecordParser extends java.lang.Object implements io.vertx.core.Handler, io.vertx.core.streams.ReadStream
{
public abstract void setOutput(io.vertx.core.Handler);
public static io.vertx.core.parsetools.RecordParser newDelimited(java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.parsetools.RecordParser v2;
java.lang.String v0;
io.vertx.core.Handler v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: io.vertx.core.Handler;
v2 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newDelimited(java.lang.String,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, null, v1);
return v2;
}
public static io.vertx.core.parsetools.RecordParser newDelimited(java.lang.String, io.vertx.core.streams.ReadStream)
{
io.vertx.core.streams.ReadStream v1;
io.vertx.core.parsetools.RecordParser v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: io.vertx.core.streams.ReadStream;
v2 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newDelimited(java.lang.String,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, v1, null);
return v2;
}
public static io.vertx.core.parsetools.RecordParser newDelimited(java.lang.String)
{
io.vertx.core.parsetools.RecordParser v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newDelimited(java.lang.String,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, null, null);
return v1;
}
public static io.vertx.core.parsetools.RecordParser newDelimited(io.vertx.core.buffer.Buffer)
{
io.vertx.core.parsetools.RecordParser v1;
io.vertx.core.buffer.Buffer v0;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
v1 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newDelimited(io.vertx.core.buffer.Buffer,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, null, null);
return v1;
}
public static io.vertx.core.parsetools.RecordParser newDelimited(io.vertx.core.buffer.Buffer, io.vertx.core.Handler)
{
io.vertx.core.parsetools.RecordParser v2;
io.vertx.core.Handler v1;
io.vertx.core.buffer.Buffer v0;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
v1 := @parameter1: io.vertx.core.Handler;
v2 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newDelimited(io.vertx.core.buffer.Buffer,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, null, v1);
return v2;
}
public static io.vertx.core.parsetools.RecordParser newDelimited(io.vertx.core.buffer.Buffer, io.vertx.core.streams.ReadStream)
{
io.vertx.core.streams.ReadStream v1;
io.vertx.core.parsetools.RecordParser v2;
io.vertx.core.buffer.Buffer v0;
v0 := @parameter0: io.vertx.core.buffer.Buffer;
v1 := @parameter1: io.vertx.core.streams.ReadStream;
v2 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newDelimited(io.vertx.core.buffer.Buffer,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, v1, null);
return v2;
}
public static io.vertx.core.parsetools.RecordParser newFixed(int)
{
int v0;
io.vertx.core.parsetools.RecordParser v1;
v0 := @parameter0: int;
v1 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newFixed(int,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, null, null);
return v1;
}
public static io.vertx.core.parsetools.RecordParser newFixed(int, io.vertx.core.Handler)
{
int v0;
io.vertx.core.parsetools.RecordParser v2;
io.vertx.core.Handler v1;
v0 := @parameter0: int;
v1 := @parameter1: io.vertx.core.Handler;
v2 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newFixed(int,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, null, v1);
return v2;
}
public static io.vertx.core.parsetools.RecordParser newFixed(int, io.vertx.core.streams.ReadStream)
{
int v0;
io.vertx.core.streams.ReadStream v1;
io.vertx.core.parsetools.RecordParser v2;
v0 := @parameter0: int;
v1 := @parameter1: io.vertx.core.streams.ReadStream;
v2 = staticinvoke <io.vertx.core.parsetools.impl.RecordParserImpl: io.vertx.core.parsetools.RecordParser newFixed(int,io.vertx.core.streams.ReadStream,io.vertx.core.Handler)>(v0, v1, null);
return v2;
}
public abstract void delimitedMode(java.lang.String);
public abstract void delimitedMode(io.vertx.core.buffer.Buffer);
public abstract void fixedSizeMode(int);
public abstract io.vertx.core.parsetools.RecordParser maxRecordSize(int);
public abstract void handle(io.vertx.core.buffer.Buffer);
public abstract io.vertx.core.parsetools.RecordParser exceptionHandler(io.vertx.core.Handler);
public abstract io.vertx.core.parsetools.RecordParser handler(io.vertx.core.Handler);
public abstract io.vertx.core.parsetools.RecordParser pause();
public abstract io.vertx.core.parsetools.RecordParser fetch(long);
public abstract io.vertx.core.parsetools.RecordParser resume();
public abstract io.vertx.core.parsetools.RecordParser endHandler(io.vertx.core.Handler);
}