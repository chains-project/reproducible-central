class io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler extends java.lang.Object implements io.vertx.core.Handler
{
io.vertx.core.Handler handler;
int depth;
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer;
final io.vertx.core.parsetools.impl.JsonParserImpl this$0;
private void <init>(io.vertx.core.parsetools.impl.JsonParserImpl)
{
io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler v0;
io.vertx.core.parsetools.impl.JsonParserImpl v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler;
v1 := @parameter0: io.vertx.core.parsetools.impl.JsonParserImpl;
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void handle(io.vertx.core.parsetools.impl.JsonEventImpl)
{
io.vertx.core.VertxException v41;
io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler v0;
int[] v8;
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v15, v19, v23, v28, v3, v31, v37, v6;
io.vertx.core.parsetools.JsonEventType v9;
int v10, v11, v12, v13, v18, v34, v35;
com.fasterxml.jackson.core.JsonToken v21, v22, v25, v26, v27, v33, v5;
java.lang.String v2, v39;
com.fasterxml.jackson.core.util.BufferRecycler v17;
java.lang.UnsupportedOperationException v38;
java.io.IOException v40;
io.vertx.core.parsetools.impl.JsonEventImpl v1;
com.fasterxml.jackson.core.JsonFactory v14;
com.fasterxml.jackson.core.io.IOContext v16;
java.lang.Object v30;
io.vertx.core.Handler v36;
java.util.ArrayDeque v20, v24, v29, v32, v4, v7;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler;
v1 := @parameter0: io.vertx.core.parsetools.impl.JsonEventImpl;
v2 = virtualinvoke v1.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.String fieldName()>();
if v2 == null goto label1;
v3 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v4 = v3.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
virtualinvoke v4.<java.util.ArrayDeque: boolean add(java.lang.Object)>(v5);
v6 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v7 = v6.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
virtualinvoke v7.<java.util.ArrayDeque: boolean add(java.lang.Object)>(v2);
label1:
v8 = <io.vertx.core.parsetools.impl.JsonParserImpl$1: int[] $SwitchMap$io$vertx$core$parsetools$JsonEventType>;
v9 = virtualinvoke v1.<io.vertx.core.parsetools.impl.JsonEventImpl: io.vertx.core.parsetools.JsonEventType type()>();
v10 = virtualinvoke v9.<io.vertx.core.parsetools.JsonEventType: int ordinal()>();
v11 = v8[v10];
tableswitch(v11)
{
case 1: goto label2;
case 2: goto label2;
case 3: goto label4;
case 4: goto label5;
case 5: goto label5;
default: goto label6;
};
label2:
v12 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: int depth>;
v13 = v12 + 1;
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: int depth> = v13;
if v12 != 0 goto label3;
v14 = new com.fasterxml.jackson.core.JsonFactory;
specialinvoke v14.<com.fasterxml.jackson.core.JsonFactory: void <init>()>();
v15 = new io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v16 = new com.fasterxml.jackson.core.io.IOContext;
v17 = virtualinvoke v14.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();
specialinvoke v16.<com.fasterxml.jackson.core.io.IOContext: void <init>(com.fasterxml.jackson.core.util.BufferRecycler,java.lang.Object,boolean)>(v17, v0, 1);
v18 = staticinvoke <com.fasterxml.jackson.core.JsonParser$Feature: int collectDefaults()>();
specialinvoke v15.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: void <init>(com.fasterxml.jackson.core.io.IOContext,int)>(v16, v18);
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer> = v15;
label3:
v19 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v20 = v19.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v21 = virtualinvoke v1.<io.vertx.core.parsetools.impl.JsonEventImpl: com.fasterxml.jackson.core.JsonToken token()>();
virtualinvoke v20.<java.util.ArrayDeque: boolean add(java.lang.Object)>(v21);
goto label8;
label4:
v22 = virtualinvoke v1.<io.vertx.core.parsetools.impl.JsonEventImpl: com.fasterxml.jackson.core.JsonToken token()>();
v23 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v24 = v23.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
virtualinvoke v24.<java.util.ArrayDeque: boolean add(java.lang.Object)>(v22);
v25 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;
if v22 == v25 goto label8;
v26 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;
if v22 == v26 goto label8;
v27 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v22 == v27 goto label8;
v28 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v29 = v28.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v30 = virtualinvoke v1.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value()>();
virtualinvoke v29.<java.util.ArrayDeque: boolean add(java.lang.Object)>(v30);
goto label8;
label5:
v31 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v32 = v31.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v33 = virtualinvoke v1.<io.vertx.core.parsetools.impl.JsonEventImpl: com.fasterxml.jackson.core.JsonToken token()>();
virtualinvoke v32.<java.util.ArrayDeque: boolean add(java.lang.Object)>(v33);
v34 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: int depth>;
v35 = v34 - 1;
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: int depth> = v35;
if v35 != 0 goto label8;
v36 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.Handler handler>;
interfaceinvoke v36.<io.vertx.core.Handler: void handle(java.lang.Object)>(null);
v37 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
virtualinvoke v37.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: void close()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer> = null;
goto label8;
label6:
v38 = new java.lang.UnsupportedOperationException;
v39 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.vertx.core.parsetools.impl.JsonEventImpl)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Not implemented \u0001");
specialinvoke v38.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v39);
throw v38;
label7:
v40 := @caughtexception;
v41 = new io.vertx.core.VertxException;
specialinvoke v41.<io.vertx.core.VertxException: void <init>(java.lang.Throwable)>(v40);
throw v41;
label8:
return;
catch java.io.IOException from label1 to label7 with label7;
}
java.lang.Object convert(java.lang.Class)
{
io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler v0;
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v2;
java.lang.Class v1;
java.lang.Object v3;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler;
v1 := @parameter0: java.lang.Class;
v2 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$BufferingHandler: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser buffer>;
v3 = staticinvoke <io.vertx.core.json.jackson.JacksonCodec: java.lang.Object fromParser(com.fasterxml.jackson.core.JsonParser,java.lang.Class)>(v2, v1);
return v3;
}
}