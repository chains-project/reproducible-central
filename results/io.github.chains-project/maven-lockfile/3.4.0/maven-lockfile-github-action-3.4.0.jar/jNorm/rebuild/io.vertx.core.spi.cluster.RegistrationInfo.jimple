public class io.vertx.core.spi.cluster.RegistrationInfo extends java.lang.Object implements io.vertx.core.shareddata.ClusterSerializable
{
private java.lang.String nodeId;
private long seq;
private boolean localOnly;
public void <init>()
{
io.vertx.core.spi.cluster.RegistrationInfo v0;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void <init>(java.lang.String, long, boolean)
{
io.vertx.core.spi.cluster.RegistrationInfo v0;
long v2;
java.lang.String v1;
boolean v3;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "nodeId is null");
v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId> = v1;
v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq> = v2;
v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly> = v3;
return;
}
public java.lang.String nodeId()
{
java.lang.String v1;
io.vertx.core.spi.cluster.RegistrationInfo v0;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
return v1;
}
public long seq()
{
long v1;
io.vertx.core.spi.cluster.RegistrationInfo v0;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
return v1;
}
public boolean localOnly()
{
io.vertx.core.spi.cluster.RegistrationInfo v0;
boolean v1;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly>;
return v1;
}
public boolean equals(java.lang.Object)
{
long v4, v5;
byte v6;
io.vertx.core.spi.cluster.RegistrationInfo v0;
java.lang.Class v2, v3;
java.lang.Object v1;
java.lang.String v10, v9;
boolean v11, v7, v8;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
v5 = v1.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
v6 = v4 cmp v5;
if v6 == 0 goto label4;
return 0;
label4:
v7 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly>;
v8 = v1.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly>;
if v7 == v8 goto label5;
return 0;
label5:
v9 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
v10 = v1.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
return v11;
}
public int hashCode()
{
long v4, v5, v6, v7;
io.vertx.core.spi.cluster.RegistrationInfo v0;
int v12, v2, v3, v8, v9;
java.lang.String v1;
boolean v10, v11;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
v3 = 31 * v2;
v4 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
v5 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
v6 = v5 >>> 32;
v7 = v4 ^ v6;
v8 = v3 + v7;
v9 = 31 * v8;
v10 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly>;
if v10 == 0 goto label1;
v11 = 1;
goto label2;
label1:
v11 = 0;
label2:
v12 = v9 + v11;
return v12;
}
public java.lang.String toString()
{
io.vertx.core.spi.cluster.RegistrationInfo v0;
long v2;
java.lang.String v1, v4;
boolean v3;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
v2 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
v3 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,long,boolean)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("RegistrationInfo{nodeId=\u0001, seq=\u0001, localOnly=\u0001}");
return v4;
}
public void writeToBuffer(io.vertx.core.buffer.Buffer)
{
long v6;
io.vertx.core.buffer.Buffer v1, v4;
io.vertx.core.spi.cluster.RegistrationInfo v0;
int v3;
java.lang.String v2, v5;
boolean v7, v8;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = interfaceinvoke v1.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendInt(int)>(v3);
v5 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId>;
interfaceinvoke v4.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendString(java.lang.String)>(v5);
v6 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq>;
interfaceinvoke v1.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendLong(long)>(v6);
v7 = v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly>;
if v7 == 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
interfaceinvoke v1.<io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer appendByte(byte)>(v8);
return;
}
public int readFromBuffer(int, io.vertx.core.buffer.Buffer)
{
long v8;
byte v10;
io.vertx.core.buffer.Buffer v2;
io.vertx.core.spi.cluster.RegistrationInfo v0;
int v1, v12, v3, v4, v5, v7, v9;
java.lang.String v6;
boolean v11;
v0 := @this: io.vertx.core.spi.cluster.RegistrationInfo;
v1 := @parameter0: int;
v2 := @parameter1: io.vertx.core.buffer.Buffer;
v3 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: int getInt(int)>(v1);
v4 = v1 + 4;
v5 = v4 + v3;
v6 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: java.lang.String getString(int,int)>(v4, v5);
v0.<io.vertx.core.spi.cluster.RegistrationInfo: java.lang.String nodeId> = v6;
v7 = v4 + v3;
v8 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: long getLong(int)>(v7);
v0.<io.vertx.core.spi.cluster.RegistrationInfo: long seq> = v8;
v9 = v7 + 8;
v10 = interfaceinvoke v2.<io.vertx.core.buffer.Buffer: byte getByte(int)>(v9);
if v10 <= 0 goto label1;
v11 = 1;
goto label2;
label1:
v11 = 0;
label2:
v0.<io.vertx.core.spi.cluster.RegistrationInfo: boolean localOnly> = v11;
v12 = v9 + 1;
return v12;
}
}