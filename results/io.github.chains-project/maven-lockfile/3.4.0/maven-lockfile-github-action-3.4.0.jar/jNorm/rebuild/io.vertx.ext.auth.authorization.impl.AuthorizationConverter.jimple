public class io.vertx.ext.auth.authorization.impl.AuthorizationConverter extends java.lang.Object
{
public static final java.lang.String FIELD_TYPE;
public static final java.lang.String FIELD_AUTHORIZATIONS;
public void <init>()
{
io.vertx.ext.auth.authorization.impl.AuthorizationConverter v0;
v0 := @this: io.vertx.ext.auth.authorization.impl.AuthorizationConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static io.vertx.ext.auth.authorization.Authorization decode(io.vertx.core.json.JsonObject) throws java.lang.IllegalArgumentException
{
io.vertx.ext.auth.authorization.OrAuthorization v13;
io.vertx.ext.auth.authorization.AndAuthorization v11;
io.vertx.ext.auth.authorization.RoleBasedAuthorization v15;
byte v3;
int v4;
io.vertx.core.json.JsonObject v0;
java.lang.String v1, v18, v19;
boolean v10, v5, v6, v7, v8, v9;
io.vertx.ext.auth.authorization.NotAuthorization v12;
io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization v16;
java.lang.IllegalArgumentException v17;
java.lang.Object v2;
io.vertx.ext.auth.authorization.PermissionBasedAuthorization v14;
v0 := @parameter0: io.vertx.core.json.JsonObject;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = virtualinvoke v0.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("type");
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v3 = -1;
v4 = virtualinvoke v2.<java.lang.String: int hashCode()>();
lookupswitch(v4)
{
case -1173015078: goto label06;
case -517618225: goto label04;
case 3555: goto label03;
case 96727: goto label01;
case 109267: goto label02;
case 3506294: goto label05;
default: goto label07;
};
label01:
v5 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("and");
if v5 == 0 goto label07;
v3 = 0;
goto label07;
label02:
v6 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("not");
if v6 == 0 goto label07;
v3 = 1;
goto label07;
label03:
v7 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("or");
if v7 == 0 goto label07;
v3 = 2;
goto label07;
label04:
v8 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("permission");
if v8 == 0 goto label07;
v3 = 3;
goto label07;
label05:
v9 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("role");
if v9 == 0 goto label07;
v3 = 4;
goto label07;
label06:
v10 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("wildcard");
if v10 == 0 goto label07;
v3 = 5;
label07:
tableswitch(v3)
{
case 0: goto label08;
case 1: goto label09;
case 2: goto label10;
case 3: goto label11;
case 4: goto label12;
case 5: goto label13;
default: goto label14;
};
label08:
v11 = staticinvoke <io.vertx.ext.auth.authorization.impl.AndAuthorizationConverter: io.vertx.ext.auth.authorization.AndAuthorization decode(io.vertx.core.json.JsonObject)>(v0);
return v11;
label09:
v12 = staticinvoke <io.vertx.ext.auth.authorization.impl.NotAuthorizationConverter: io.vertx.ext.auth.authorization.NotAuthorization decode(io.vertx.core.json.JsonObject)>(v0);
return v12;
label10:
v13 = staticinvoke <io.vertx.ext.auth.authorization.impl.OrAuthorizationConverter: io.vertx.ext.auth.authorization.OrAuthorization decode(io.vertx.core.json.JsonObject)>(v0);
return v13;
label11:
v14 = staticinvoke <io.vertx.ext.auth.authorization.impl.PermissionBasedAuthorizationConverter: io.vertx.ext.auth.authorization.PermissionBasedAuthorization decode(io.vertx.core.json.JsonObject)>(v0);
return v14;
label12:
v15 = staticinvoke <io.vertx.ext.auth.authorization.impl.RoleBasedAuthorizationConverter: io.vertx.ext.auth.authorization.RoleBasedAuthorization decode(io.vertx.core.json.JsonObject)>(v0);
return v15;
label13:
v16 = staticinvoke <io.vertx.ext.auth.authorization.impl.WildcardPermissionBasedAuthorizationConverter: io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization decode(io.vertx.core.json.JsonObject)>(v0);
return v16;
label14:
v17 = new java.lang.IllegalArgumentException;
v18 = virtualinvoke v0.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("type");
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unsupported authorization \u0001");
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v19);
throw v17;
}
public static io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.Authorization) throws java.lang.IllegalArgumentException
{
io.vertx.core.json.JsonObject v10, v12, v2, v4, v6, v8;
java.lang.String v15;
boolean v1, v11, v3, v5, v7, v9;
java.lang.IllegalArgumentException v13;
io.vertx.ext.auth.authorization.Authorization v0;
java.lang.Class v14;
v0 := @parameter0: io.vertx.ext.auth.authorization.Authorization;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = v0 instanceof io.vertx.ext.auth.authorization.AndAuthorization;
if v1 == 0 goto label1;
v2 = staticinvoke <io.vertx.ext.auth.authorization.impl.AndAuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.AndAuthorization)>(v0);
return v2;
label1:
v3 = v0 instanceof io.vertx.ext.auth.authorization.NotAuthorization;
if v3 == 0 goto label2;
v4 = staticinvoke <io.vertx.ext.auth.authorization.impl.NotAuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.NotAuthorization)>(v0);
return v4;
label2:
v5 = v0 instanceof io.vertx.ext.auth.authorization.OrAuthorization;
if v5 == 0 goto label3;
v6 = staticinvoke <io.vertx.ext.auth.authorization.impl.OrAuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.OrAuthorization)>(v0);
return v6;
label3:
v7 = v0 instanceof io.vertx.ext.auth.authorization.PermissionBasedAuthorization;
if v7 == 0 goto label4;
v8 = staticinvoke <io.vertx.ext.auth.authorization.impl.PermissionBasedAuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.PermissionBasedAuthorization)>(v0);
return v8;
label4:
v9 = v0 instanceof io.vertx.ext.auth.authorization.RoleBasedAuthorization;
if v9 == 0 goto label5;
v10 = staticinvoke <io.vertx.ext.auth.authorization.impl.RoleBasedAuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.RoleBasedAuthorization)>(v0);
return v10;
label5:
v11 = v0 instanceof io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization;
if v11 == 0 goto label6;
v12 = staticinvoke <io.vertx.ext.auth.authorization.impl.WildcardPermissionBasedAuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.WildcardPermissionBasedAuthorization)>(v0);
return v12;
label6:
v13 = new java.lang.IllegalArgumentException;
v14 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unsupported authorization \u0001");
specialinvoke v13.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v13;
}
}