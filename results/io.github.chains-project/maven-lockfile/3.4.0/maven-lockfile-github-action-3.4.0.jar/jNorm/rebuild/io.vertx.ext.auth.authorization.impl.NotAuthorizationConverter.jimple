public class io.vertx.ext.auth.authorization.impl.NotAuthorizationConverter extends java.lang.Object
{
public static final java.lang.String TYPE;
public void <init>()
{
io.vertx.ext.auth.authorization.impl.NotAuthorizationConverter v0;
v0 := @this: io.vertx.ext.auth.authorization.impl.NotAuthorizationConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.NotAuthorization) throws java.lang.IllegalArgumentException
{
io.vertx.ext.auth.authorization.Authorization v2;
io.vertx.ext.auth.authorization.NotAuthorization v0;
io.vertx.core.json.JsonObject v1, v3;
v0 := @parameter0: io.vertx.ext.auth.authorization.NotAuthorization;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("type", "not");
v2 = interfaceinvoke v0.<io.vertx.ext.auth.authorization.NotAuthorization: io.vertx.ext.auth.authorization.Authorization getAuthorization()>();
v3 = staticinvoke <io.vertx.ext.auth.authorization.impl.AuthorizationConverter: io.vertx.core.json.JsonObject encode(io.vertx.ext.auth.authorization.Authorization)>(v2);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("authorizations", v3);
return v1;
}
public static io.vertx.ext.auth.authorization.NotAuthorization decode(io.vertx.core.json.JsonObject) throws java.lang.IllegalArgumentException
{
io.vertx.ext.auth.authorization.Authorization v2;
io.vertx.ext.auth.authorization.NotAuthorization v3;
io.vertx.core.json.JsonObject v0, v1;
v0 := @parameter0: io.vertx.core.json.JsonObject;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = virtualinvoke v0.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>("authorizations");
v2 = staticinvoke <io.vertx.ext.auth.authorization.impl.AuthorizationConverter: io.vertx.ext.auth.authorization.Authorization decode(io.vertx.core.json.JsonObject)>(v1);
v3 = staticinvoke <io.vertx.ext.auth.authorization.NotAuthorization: io.vertx.ext.auth.authorization.NotAuthorization create(io.vertx.ext.auth.authorization.Authorization)>(v2);
return v3;
}
}