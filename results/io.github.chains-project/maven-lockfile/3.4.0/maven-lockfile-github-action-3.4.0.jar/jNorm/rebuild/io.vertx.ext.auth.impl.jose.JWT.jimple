public final class io.vertx.ext.auth.impl.jose.JWT extends java.lang.Object
{
private static final io.vertx.core.impl.logging.Logger LOG;
private static final java.util.Random RND;
private static final java.nio.charset.Charset UTF8;
private boolean allowEmbeddedKey;
private java.security.cert.X509Certificate rootCA;
private java.security.MessageDigest nonceDigest;
private final java.util.Map SIGN;
private final java.util.Map VERIFY;
public void <init>()
{
java.util.concurrent.ConcurrentHashMap v1, v2;
io.vertx.ext.auth.impl.jose.JWT v0;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.impl.jose.JWT: boolean allowEmbeddedKey> = 0;
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map SIGN> = v1;
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map VERIFY> = v2;
return;
}
public io.vertx.ext.auth.impl.jose.JWT addJWK(io.vertx.ext.auth.impl.jose.JWK)
{
java.lang.Throwable v18;
io.vertx.ext.auth.impl.jose.JWK v1;
java.util.function.Function v10, v16;
java.util.Map v14, v8;
java.lang.String v15, v2, v20, v21, v3, v4, v9;
io.vertx.ext.auth.impl.jose.JWT v0;
boolean v5;
io.vertx.core.impl.logging.Logger v19;
javax.crypto.Mac v12, v6;
java.security.PublicKey v7;
java.security.PrivateKey v13;
java.lang.Object v11, v17;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: io.vertx.ext.auth.impl.jose.JWK;
v2 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String use()>();
if v2 == null goto label01;
v3 = "sig";
v4 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String use()>();
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label09;
label01:
entermonitor v0;
label02:
v6 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: javax.crypto.Mac mac()>();
if v6 != null goto label03;
v7 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.security.PublicKey publicKey()>();
if v7 == null goto label04;
label03:
v8 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map VERIFY>;
v9 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String getAlgorithm()>();
v10 = staticinvoke <io.vertx.ext.auth.impl.jose.JWT$lambda_addJWK_0__891: java.util.function.Function bootstrap$()>();
v11 = interfaceinvoke v8.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v9, v10);
specialinvoke v0.<io.vertx.ext.auth.impl.jose.JWT: void addJWK(java.util.List,io.vertx.ext.auth.impl.jose.JWK)>(v11, v1);
label04:
v12 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: javax.crypto.Mac mac()>();
if v12 != null goto label05;
v13 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.security.PrivateKey privateKey()>();
if v13 == null goto label06;
label05:
v14 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map SIGN>;
v15 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String getAlgorithm()>();
v16 = staticinvoke <io.vertx.ext.auth.impl.jose.JWT$lambda_addJWK_1__892: java.util.function.Function bootstrap$()>();
v17 = interfaceinvoke v14.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v15, v16);
specialinvoke v0.<io.vertx.ext.auth.impl.jose.JWT: void addJWK(java.util.List,io.vertx.ext.auth.impl.jose.JWK)>(v17, v1);
label06:
exitmonitor v0;
label07:
goto label10;
label08:
v18 := @caughtexception;
exitmonitor v0;
throw v18;
label09:
v19 = <io.vertx.ext.auth.impl.jose.JWT: io.vertx.core.impl.logging.Logger LOG>;
v20 = virtualinvoke v1.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String use()>();
v21 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("JWK skipped: use: sig != \u0001");
interfaceinvoke v19.<io.vertx.core.impl.logging.Logger: void warn(java.lang.Object)>(v21);
label10:
return v0;
catch java.lang.Throwable from label02 to label07 with label08;
}
public io.vertx.ext.auth.impl.jose.JWT allowEmbeddedKey(boolean)
{
io.vertx.ext.auth.impl.jose.JWT v0;
boolean v1;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: boolean;
v0.<io.vertx.ext.auth.impl.jose.JWT: boolean allowEmbeddedKey> = v1;
return v0;
}
public io.vertx.ext.auth.impl.jose.JWT embeddedKeyRootCA(java.lang.String) throws java.security.cert.CertificateException
{
java.security.cert.X509Certificate v3;
byte[] v2;
java.lang.String v1;
io.vertx.ext.auth.impl.jose.JWT v0;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64Decode(java.lang.String)>(v1);
v3 = staticinvoke <io.vertx.ext.auth.impl.jose.JWS: java.security.cert.X509Certificate parseX5c(byte[])>(v2);
v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.cert.X509Certificate rootCA> = v3;
v0.<io.vertx.ext.auth.impl.jose.JWT: boolean allowEmbeddedKey> = 1;
return v0;
}
public io.vertx.ext.auth.impl.jose.JWT nonceAlgorithm(java.lang.String)
{
java.security.MessageDigest v2;
java.security.NoSuchAlgorithmException v3;
java.lang.String v1;
io.vertx.ext.auth.impl.jose.JWT v0;
java.lang.IllegalArgumentException v4;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.MessageDigest nonceDigest> = null;
goto label4;
label1:
v2 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>(v1);
v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.MessageDigest nonceDigest> = v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.Throwable)>(v3);
throw v4;
label4:
return v0;
catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
}
private void addJWK(java.util.List, io.vertx.ext.auth.impl.jose.JWK)
{
io.vertx.ext.auth.impl.jose.JWK v2, v7;
int v4, v5;
io.vertx.ext.auth.impl.jose.JWS v14, v15;
java.lang.String v12, v13, v8, v9;
io.vertx.ext.auth.impl.jose.JWT v0;
boolean v10, v3;
io.vertx.core.impl.logging.Logger v11;
java.util.List v1;
java.lang.Object v6;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: java.util.List;
v2 := @parameter1: io.vertx.ext.auth.impl.jose.JWK;
v3 = 0;
v4 = 0;
label1:
v5 = interfaceinvoke v1.<java.util.List: int size()>();
if v4 >= v5 goto label3;
v6 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v4);
v7 = virtualinvoke v6.<io.vertx.ext.auth.impl.jose.JWS: io.vertx.ext.auth.impl.jose.JWK jwk()>();
v8 = virtualinvoke v7.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String label()>();
v9 = virtualinvoke v2.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String label()>();
v10 = virtualinvoke v8.<java.lang.String: boolean equals(java.lang.Object)>(v9);
if v10 == 0 goto label2;
v11 = <io.vertx.ext.auth.impl.jose.JWT: io.vertx.core.impl.logging.Logger LOG>;
v12 = virtualinvoke v2.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String label()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("replacing JWK with label \u0001");
interfaceinvoke v11.<io.vertx.core.impl.logging.Logger: void info(java.lang.Object)>(v13);
v14 = new io.vertx.ext.auth.impl.jose.JWS;
specialinvoke v14.<io.vertx.ext.auth.impl.jose.JWS: void <init>(io.vertx.ext.auth.impl.jose.JWK)>(v2);
interfaceinvoke v1.<java.util.List: java.lang.Object set(int,java.lang.Object)>(v4, v14);
v3 = 1;
goto label3;
label2:
v4 = v4 + 1;
goto label1;
label3:
if v3 != 0 goto label4;
v15 = new io.vertx.ext.auth.impl.jose.JWS;
specialinvoke v15.<io.vertx.ext.auth.impl.jose.JWS: void <init>(io.vertx.ext.auth.impl.jose.JWK)>(v2);
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v15);
label4:
return;
}
public static io.vertx.core.json.JsonObject parse(byte[])
{
byte[] v0;
java.nio.charset.Charset v2;
io.vertx.core.json.JsonObject v3;
java.lang.String v1;
v0 := @parameter0: byte[];
v1 = new java.lang.String;
v2 = <io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8>;
specialinvoke v1.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v0, v2);
v3 = staticinvoke <io.vertx.ext.auth.impl.jose.JWT: io.vertx.core.json.JsonObject parse(java.lang.String)>(v1);
return v3;
}
public static io.vertx.core.json.JsonObject parse(java.lang.String)
{
byte[] v13, v17;
java.lang.String[] v1;
java.nio.charset.Charset v14, v18;
int v2, v3, v5, v9;
io.vertx.core.json.JsonObject v11, v15, v19, v20, v21, v23, v24;
java.lang.String v0, v10, v12, v16, v22, v6, v7, v8;
java.lang.RuntimeException v4;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
v2 = lengthof v1;
if v2 < 2 goto label1;
v3 = lengthof v1;
if v3 <= 3 goto label2;
label1:
v4 = new java.lang.RuntimeException;
v5 = lengthof v1;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Not enough or too many segments [\u0001]");
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.String)>(v6);
throw v4;
label2:
v7 = v1[0];
v8 = v1[1];
v9 = lengthof v1;
if v9 != 2 goto label3;
v10 = null;
goto label4;
label3:
v10 = v1[2];
label4:
v11 = new io.vertx.core.json.JsonObject;
v12 = new java.lang.String;
v13 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64UrlDecode(java.lang.String)>(v7);
v14 = <io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8>;
specialinvoke v12.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v13, v14);
specialinvoke v11.<io.vertx.core.json.JsonObject: void <init>(java.lang.String)>(v12);
v15 = new io.vertx.core.json.JsonObject;
v16 = new java.lang.String;
v17 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64UrlDecode(java.lang.String)>(v8);
v18 = <io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8>;
specialinvoke v16.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v17, v18);
specialinvoke v15.<io.vertx.core.json.JsonObject: void <init>(java.lang.String)>(v16);
v19 = new io.vertx.core.json.JsonObject;
specialinvoke v19.<io.vertx.core.json.JsonObject: void <init>()>();
v20 = virtualinvoke v19.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("header", v11);
v21 = virtualinvoke v20.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("payload", v15);
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
v23 = virtualinvoke v21.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("signatureBase", v22);
v24 = virtualinvoke v23.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("signature", v10);
return v24;
}
public io.vertx.core.json.JsonObject decode(java.lang.String)
{
io.vertx.core.json.JsonObject v2;
java.lang.String v1;
io.vertx.ext.auth.impl.jose.JWT v0;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.ext.auth.impl.jose.JWT: io.vertx.core.json.JsonObject decode(java.lang.String,boolean,java.util.List)>(v1, 0, null);
return v2;
}
public io.vertx.core.json.JsonObject decode(java.lang.String, java.util.List)
{
java.util.List v2;
io.vertx.core.json.JsonObject v3;
java.lang.String v1;
io.vertx.ext.auth.impl.jose.JWT v0;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 = virtualinvoke v0.<io.vertx.ext.auth.impl.jose.JWT: io.vertx.core.json.JsonObject decode(java.lang.String,boolean,java.util.List)>(v1, 0, v2);
return v3;
}
public io.vertx.core.json.JsonObject decode(java.lang.String, boolean, java.util.List)
{
byte[] v16, v26, v42, v47, v50, v63, v70, v71, v75, v79;
java.security.GeneralSecurityException v56;
java.util.Map v58;
io.vertx.core.json.JsonObject v15, v25, v52, v53, v54, v91, v92, v93, v96, v97, v98;
java.lang.Throwable v76;
java.util.ArrayList v36;
java.lang.String v1, v10, v11, v12, v28, v29, v41, v48, v68, v7, v72, v73, v77, v8, v80, v86, v88;
java.lang.RuntimeException v55, v57, v94;
io.vertx.core.json.JsonArray v35;
io.vertx.ext.auth.NoSuchKeyIdException v61, v95;
java.security.cert.X509Certificate v43, v44, v45;
java.lang.IllegalStateException v14, v21, v24, v31, v34, v38, v6, v62;
io.vertx.ext.auth.impl.jose.JWK v85, v87;
io.vertx.ext.auth.impl.jose.JWT v0;
boolean v13, v18, v19, v2, v22, v30, v32, v33, v51, v65, v81, v83, v89, v90;
java.util.List v3;
io.vertx.core.buffer.Buffer v17, v27;
java.security.MessageDigest v64, v66, v67;
java.lang.String[] v4;
java.nio.charset.Charset v49, v69, v74, v78;
int v20, v23, v37, v39, v40, v5, v60, v9;
java.util.Iterator v82;
java.lang.Object v46, v59, v84;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
v5 = lengthof v4;
if v5 >= 2 goto label01;
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Invalid format for JWT");
throw v6;
label01:
v7 = v4[0];
v8 = v4[1];
v9 = lengthof v4;
if v9 != 3 goto label02;
v10 = v4[2];
goto label03;
label02:
v10 = null;
label03:
v11 = v10;
v12 = "";
v13 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v13 == 0 goto label04;
v14 = new java.lang.IllegalStateException;
specialinvoke v14.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Signature is required");
throw v14;
label04:
v15 = new io.vertx.core.json.JsonObject;
v16 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64UrlDecode(java.lang.String)>(v7);
v17 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v16);
specialinvoke v15.<io.vertx.core.json.JsonObject: void <init>(io.vertx.core.buffer.Buffer)>(v17);
v18 = virtualinvoke v0.<io.vertx.ext.auth.impl.jose.JWT: boolean isUnsecure()>();
if v18 == 0 goto label05;
v19 = v0.<io.vertx.ext.auth.impl.jose.JWT: boolean allowEmbeddedKey>;
if v19 != 0 goto label06;
v20 = lengthof v4;
if v20 == 2 goto label06;
v21 = new java.lang.IllegalStateException;
specialinvoke v21.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JWT is in unsecured mode but token is signed.");
throw v21;
label05:
v22 = v0.<io.vertx.ext.auth.impl.jose.JWT: boolean allowEmbeddedKey>;
if v22 != 0 goto label06;
v23 = lengthof v4;
if v23 == 3 goto label06;
v24 = new java.lang.IllegalStateException;
specialinvoke v24.<java.lang.IllegalStateException: void <init>(java.lang.String)>("JWT is in secure mode but token is not signed.");
throw v24;
label06:
v25 = new io.vertx.core.json.JsonObject;
v26 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64UrlDecode(java.lang.String)>(v8);
v27 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v26);
specialinvoke v25.<io.vertx.core.json.JsonObject: void <init>(io.vertx.core.buffer.Buffer)>(v27);
v28 = virtualinvoke v15.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("alg");
if v18 != 0 goto label07;
v29 = "none";
v30 = virtualinvoke v29.<java.lang.String: boolean equals(java.lang.Object)>(v28);
if v30 == 0 goto label07;
v31 = new java.lang.IllegalStateException;
specialinvoke v31.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Algorithm \"none\" not allowed");
throw v31;
label07:
v32 = v0.<io.vertx.ext.auth.impl.jose.JWT: boolean allowEmbeddedKey>;
if v32 == 0 goto label19;
v33 = virtualinvoke v15.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("x5c");
if v33 == 0 goto label19;
if v11 != null goto label08;
v34 = new java.lang.IllegalStateException;
specialinvoke v34.<java.lang.IllegalStateException: void <init>(java.lang.String)>("missing signature segment");
throw v34;
label08:
v35 = virtualinvoke v15.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonArray getJsonArray(java.lang.String)>("x5c");
v36 = new java.util.ArrayList;
specialinvoke v36.<java.util.ArrayList: void <init>()>();
if v35 == null goto label09;
v37 = virtualinvoke v35.<io.vertx.core.json.JsonArray: int size()>();
if v37 != 0 goto label10;
label09:
v38 = new java.lang.IllegalStateException;
specialinvoke v38.<java.lang.IllegalStateException: void <init>(java.lang.String)>("x5c chain is null or empty");
throw v38;
label10:
v39 = 0;
label11:
v40 = virtualinvoke v35.<io.vertx.core.json.JsonArray: int size()>();
if v39 >= v40 goto label12;
v41 = virtualinvoke v35.<io.vertx.core.json.JsonArray: java.lang.String getString(int)>(v39);
v42 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64Decode(java.lang.String)>(v41);
v43 = staticinvoke <io.vertx.ext.auth.impl.jose.JWS: java.security.cert.X509Certificate parseX5c(byte[])>(v42);
interfaceinvoke v36.<java.util.List: boolean add(java.lang.Object)>(v43);
v39 = v39 + 1;
goto label11;
label12:
v44 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.cert.X509Certificate rootCA>;
if v44 == null goto label13;
v45 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.cert.X509Certificate rootCA>;
interfaceinvoke v36.<java.util.List: boolean add(java.lang.Object)>(v45);
staticinvoke <io.vertx.ext.auth.impl.CertificateHelper: void checkValidity(java.util.List,boolean,java.util.List)>(v36, 1, v3);
goto label14;
label13:
staticinvoke <io.vertx.ext.auth.impl.CertificateHelper: void checkValidity(java.util.List,boolean,java.util.List)>(v36, 0, v3);
label14:
v46 = interfaceinvoke v36.<java.util.List: java.lang.Object get(int)>(0);
v47 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64UrlDecode(java.lang.String)>(v11);
v48 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
v49 = <io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8>;
v50 = virtualinvoke v48.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v49);
v51 = staticinvoke <io.vertx.ext.auth.impl.jose.JWS: boolean verifySignature(java.lang.String,java.security.cert.X509Certificate,byte[],byte[])>(v28, v46, v47, v50);
if v51 == 0 goto label17;
if v2 == 0 goto label15;
v52 = new io.vertx.core.json.JsonObject;
specialinvoke v52.<io.vertx.core.json.JsonObject: void <init>()>();
v53 = virtualinvoke v52.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("header", v15);
v54 = virtualinvoke v53.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("payload", v25);
goto label16;
label15:
v54 = v25;
label16:
return v54;
label17:
v55 = new java.lang.RuntimeException;
specialinvoke v55.<java.lang.RuntimeException: void <init>(java.lang.String)>("Signature verification failed");
throw v55;
label18:
v56 := @caughtexception;
v57 = new java.lang.RuntimeException;
specialinvoke v57.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Signature verification failed", v56);
throw v57;
label19:
if v18 != 0 goto label33;
v58 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map VERIFY>;
v59 = interfaceinvoke v58.<java.util.Map: java.lang.Object get(java.lang.Object)>(v28);
if v59 == null goto label20;
v60 = interfaceinvoke v59.<java.util.List: int size()>();
if v60 != 0 goto label21;
label20:
v61 = new io.vertx.ext.auth.NoSuchKeyIdException;
specialinvoke v61.<io.vertx.ext.auth.NoSuchKeyIdException: void <init>(java.lang.String)>(v28);
throw v61;
label21:
if v11 != null goto label22;
v62 = new java.lang.IllegalStateException;
specialinvoke v62.<java.lang.IllegalStateException: void <init>(java.lang.String)>("missing signature segment");
throw v62;
label22:
v63 = staticinvoke <io.vertx.ext.auth.impl.Codec: byte[] base64UrlDecode(java.lang.String)>(v11);
v64 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.MessageDigest nonceDigest>;
if v64 == null goto label26;
v65 = virtualinvoke v15.<io.vertx.core.json.JsonObject: boolean containsKey(java.lang.String)>("nonce");
if v65 == 0 goto label26;
entermonitor v0;
label23:
v66 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.MessageDigest nonceDigest>;
virtualinvoke v66.<java.security.MessageDigest: void reset()>();
v67 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.security.MessageDigest nonceDigest>;
v68 = virtualinvoke v15.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("nonce");
v69 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v70 = virtualinvoke v68.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v69);
v71 = virtualinvoke v67.<java.security.MessageDigest: byte[] digest(byte[])>(v70);
v72 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64UrlEncode(byte[])>(v71);
virtualinvoke v15.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("nonce", v72);
v73 = virtualinvoke v15.<io.vertx.core.json.JsonObject: java.lang.String encode()>();
v74 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v75 = virtualinvoke v73.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v74);
v7 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64UrlEncode(byte[])>(v75);
exitmonitor v0;
label24:
goto label26;
label25:
v76 := @caughtexception;
exitmonitor v0;
throw v76;
label26:
v77 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
v78 = <io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8>;
v79 = virtualinvoke v77.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v78);
v80 = virtualinvoke v15.<io.vertx.core.json.JsonObject: java.lang.String getString(java.lang.String)>("kid");
v81 = 0;
v82 = interfaceinvoke v59.<java.util.List: java.util.Iterator iterator()>();
label27:
v83 = interfaceinvoke v82.<java.util.Iterator: boolean hasNext()>();
if v83 == 0 goto label31;
v84 = interfaceinvoke v82.<java.util.Iterator: java.lang.Object next()>();
if v80 == null goto label28;
v85 = virtualinvoke v84.<io.vertx.ext.auth.impl.jose.JWS: io.vertx.ext.auth.impl.jose.JWK jwk()>();
v86 = virtualinvoke v85.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String getId()>();
if v86 == null goto label28;
v87 = virtualinvoke v84.<io.vertx.ext.auth.impl.jose.JWS: io.vertx.ext.auth.impl.jose.JWK jwk()>();
v88 = virtualinvoke v87.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String getId()>();
v89 = virtualinvoke v80.<java.lang.String: boolean equals(java.lang.Object)>(v88);
if v89 == 0 goto label27;
label28:
v81 = 1;
v90 = virtualinvoke v84.<io.vertx.ext.auth.impl.jose.JWS: boolean verify(byte[],byte[])>(v63, v79);
if v90 == 0 goto label27;
if v2 == 0 goto label29;
v91 = new io.vertx.core.json.JsonObject;
specialinvoke v91.<io.vertx.core.json.JsonObject: void <init>()>();
v92 = virtualinvoke v91.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("header", v15);
v93 = virtualinvoke v92.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("payload", v25);
goto label30;
label29:
v93 = v25;
label30:
return v93;
label31:
if v81 == 0 goto label32;
v94 = new java.lang.RuntimeException;
specialinvoke v94.<java.lang.RuntimeException: void <init>(java.lang.String)>("Signature verification failed");
throw v94;
label32:
v95 = new io.vertx.ext.auth.NoSuchKeyIdException;
specialinvoke v95.<io.vertx.ext.auth.NoSuchKeyIdException: void <init>(java.lang.String,java.lang.String)>(v28, v80);
throw v95;
label33:
if v2 == 0 goto label34;
v96 = new io.vertx.core.json.JsonObject;
specialinvoke v96.<io.vertx.core.json.JsonObject: void <init>()>();
v97 = virtualinvoke v96.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("header", v15);
v98 = virtualinvoke v97.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("payload", v25);
goto label35;
label34:
v98 = v25;
label35:
return v98;
catch java.security.cert.CertificateException from label08 to label16 with label18;
catch java.security.NoSuchAlgorithmException from label08 to label16 with label18;
catch java.security.InvalidKeyException from label08 to label16 with label18;
catch java.security.SignatureException from label08 to label16 with label18;
catch java.security.InvalidAlgorithmParameterException from label08 to label16 with label18;
catch java.security.NoSuchProviderException from label08 to label16 with label18;
catch java.lang.Throwable from label23 to label24 with label25;
}
public java.lang.String sign(io.vertx.core.json.JsonObject, io.vertx.ext.auth.JWTOptions)
{
byte[] v49, v53, v57, v58;
java.lang.IllegalStateException v7;
io.vertx.ext.auth.impl.jose.JWK v18;
java.util.Random v15;
java.lang.Long v28, v33;
java.util.Map v8;
io.vertx.core.json.JsonObject v1, v20, v21, v22, v23, v24;
io.vertx.ext.auth.impl.jose.JWT v0;
boolean v27, v3, v6;
io.vertx.ext.auth.JWTOptions v2;
java.util.List v34, v35, v37, v40, v41;
long v25, v26, v32;
java.nio.charset.Charset v48, v52, v56;
int v10, v13, v14, v16, v30, v31, v36, v38;
java.lang.String v12, v19, v4, v43, v44, v45, v46, v47, v5, v50, v51, v54, v55, v59, v60, v61;
java.lang.RuntimeException v11;
io.vertx.core.json.JsonArray v39;
java.lang.Object v17, v29, v42, v9;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v2 := @parameter1: io.vertx.ext.auth.JWTOptions;
v3 = virtualinvoke v0.<io.vertx.ext.auth.impl.jose.JWT: boolean isUnsecure()>();
v4 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.lang.String getAlgorithm()>();
if v3 != 0 goto label06;
v5 = "none";
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v6 == 0 goto label01;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Algorithm \"none\" not allowed");
throw v7;
label01:
if v3 != 0 goto label06;
v8 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map SIGN>;
v9 = interfaceinvoke v8.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
if v9 == null goto label02;
v10 = interfaceinvoke v9.<java.util.List: int size()>();
if v10 != 0 goto label03;
label02:
v11 = new java.lang.RuntimeException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Algorithm not supported/allowed: \u0001");
specialinvoke v11.<java.lang.RuntimeException: void <init>(java.lang.String)>(v12);
throw v11;
label03:
v13 = interfaceinvoke v9.<java.util.List: int size()>();
if v13 != 1 goto label04;
v14 = 0;
goto label05;
label04:
v15 = <io.vertx.ext.auth.impl.jose.JWT: java.util.Random RND>;
v16 = interfaceinvoke v9.<java.util.List: int size()>();
v14 = virtualinvoke v15.<java.util.Random: int nextInt(int)>(v16);
label05:
v17 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(v14);
v18 = virtualinvoke v17.<io.vertx.ext.auth.impl.jose.JWS: io.vertx.ext.auth.impl.jose.JWK jwk()>();
v19 = virtualinvoke v18.<io.vertx.ext.auth.impl.jose.JWK: java.lang.String getId()>();
goto label07;
label06:
v17 = null;
v19 = null;
label07:
v20 = new io.vertx.core.json.JsonObject;
specialinvoke v20.<io.vertx.core.json.JsonObject: void <init>()>();
v21 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: io.vertx.core.json.JsonObject getHeader()>();
v22 = virtualinvoke v20.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject mergeIn(io.vertx.core.json.JsonObject)>(v21);
v23 = virtualinvoke v22.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("typ", "JWT");
v24 = virtualinvoke v23.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("alg", v4);
if v19 == null goto label08;
virtualinvoke v24.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("kid", v19);
label08:
v25 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v26 = v25 / 1000L;
v27 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: boolean isNoTimestamp()>();
if v27 != 0 goto label09;
v28 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v26);
v29 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Object getValue(java.lang.String,java.lang.Object)>("iat", v28);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("iat", v29);
label09:
v30 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: int getExpiresInSeconds()>();
if v30 <= 0 goto label10;
v31 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: int getExpiresInSeconds()>();
v32 = v26 + v31;
v33 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v32);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("exp", v33);
label10:
v34 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.util.List getAudience()>();
if v34 == null goto label12;
v35 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.util.List getAudience()>();
v36 = interfaceinvoke v35.<java.util.List: int size()>();
if v36 < 1 goto label12;
v37 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.util.List getAudience()>();
v38 = interfaceinvoke v37.<java.util.List: int size()>();
if v38 <= 1 goto label11;
v39 = new io.vertx.core.json.JsonArray;
v40 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.util.List getAudience()>();
specialinvoke v39.<io.vertx.core.json.JsonArray: void <init>(java.util.List)>(v40);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("aud", v39);
goto label12;
label11:
v41 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.util.List getAudience()>();
v42 = interfaceinvoke v41.<java.util.List: java.lang.Object get(int)>(0);
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("aud", v42);
label12:
v43 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.lang.String getIssuer()>();
if v43 == null goto label13;
v44 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.lang.String getIssuer()>();
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("iss", v44);
label13:
v45 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.lang.String getSubject()>();
if v45 == null goto label14;
v46 = virtualinvoke v2.<io.vertx.ext.auth.JWTOptions: java.lang.String getSubject()>();
virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject put(java.lang.String,java.lang.Object)>("sub", v46);
label14:
v47 = virtualinvoke v24.<io.vertx.core.json.JsonObject: java.lang.String encode()>();
v48 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v49 = virtualinvoke v47.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v48);
v50 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64UrlEncode(byte[])>(v49);
v51 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.String encode()>();
v52 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v53 = virtualinvoke v51.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v52);
v54 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64UrlEncode(byte[])>(v53);
if v3 != 0 goto label15;
v55 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v50, v54) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
v56 = <io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8>;
v57 = virtualinvoke v55.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v56);
v58 = virtualinvoke v17.<io.vertx.ext.auth.impl.jose.JWS: byte[] sign(byte[])>(v57);
v59 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64UrlEncode(byte[])>(v58);
v60 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v50, v54, v59) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001.\u0001");
return v60;
label15:
v61 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v50, v54) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
return v61;
}
public boolean isUnsecure()
{
java.util.Map v1, v3;
int v2, v4;
io.vertx.ext.auth.impl.jose.JWT v0;
boolean v5;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map VERIFY>;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
if v2 != 0 goto label1;
v3 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map SIGN>;
v4 = interfaceinvoke v3.<java.util.Map: int size()>();
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public java.util.Collection availableAlgorithms()
{
java.util.HashSet v1;
java.util.Map v2, v4;
java.util.Set v3, v5;
io.vertx.ext.auth.impl.jose.JWT v0;
v0 := @this: io.vertx.ext.auth.impl.jose.JWT;
v1 = new java.util.HashSet;
specialinvoke v1.<java.util.HashSet: void <init>()>();
interfaceinvoke v1.<java.util.Set: boolean add(java.lang.Object)>("none");
v2 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map VERIFY>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke v1.<java.util.Set: boolean addAll(java.util.Collection)>(v3);
v4 = v0.<io.vertx.ext.auth.impl.jose.JWT: java.util.Map SIGN>;
v5 = interfaceinvoke v4.<java.util.Map: java.util.Set keySet()>();
interfaceinvoke v1.<java.util.Set: boolean addAll(java.util.Collection)>(v5);
return v1;
}
static void <clinit>()
{
io.vertx.core.impl.logging.Logger v0;
java.util.Random v1;
java.nio.charset.Charset v2;
v0 = staticinvoke <io.vertx.core.impl.logging.LoggerFactory: io.vertx.core.impl.logging.Logger getLogger(java.lang.Class)>(class "Lio/vertx/ext/auth/impl/jose/JWT;");
<io.vertx.ext.auth.impl.jose.JWT: io.vertx.core.impl.logging.Logger LOG> = v0;
v1 = new java.util.Random;
specialinvoke v1.<java.util.Random: void <init>()>();
<io.vertx.ext.auth.impl.jose.JWT: java.util.Random RND> = v1;
v2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
<io.vertx.ext.auth.impl.jose.JWT: java.nio.charset.Charset UTF8> = v2;
return;
}
}