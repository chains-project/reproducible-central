public interface  io.vertx.ext.web.client.CachingWebClient extends java.lang.Object
{
public static io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient)
{
io.vertx.ext.web.client.impl.cache.LocalCacheStore v1;
io.vertx.ext.web.client.WebClient v0, v2;
v0 := @parameter0: io.vertx.ext.web.client.WebClient;
v1 = new io.vertx.ext.web.client.impl.cache.LocalCacheStore;
specialinvoke v1.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: void <init>()>();
v2 = staticinvoke <io.vertx.ext.web.client.CachingWebClient: io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient,io.vertx.ext.web.client.spi.CacheStore)>(v0, v1);
return v2;
}
public static io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient, io.vertx.ext.web.client.spi.CacheStore)
{
io.vertx.ext.web.client.CachingWebClientOptions v2;
io.vertx.ext.web.client.WebClient v0, v3;
io.vertx.ext.web.client.spi.CacheStore v1;
v0 := @parameter0: io.vertx.ext.web.client.WebClient;
v1 := @parameter1: io.vertx.ext.web.client.spi.CacheStore;
v2 = new io.vertx.ext.web.client.CachingWebClientOptions;
specialinvoke v2.<io.vertx.ext.web.client.CachingWebClientOptions: void <init>()>();
v3 = staticinvoke <io.vertx.ext.web.client.CachingWebClient: io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient,io.vertx.ext.web.client.spi.CacheStore,io.vertx.ext.web.client.CachingWebClientOptions)>(v0, v1, v2);
return v3;
}
public static io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient, io.vertx.ext.web.client.CachingWebClientOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v1;
io.vertx.ext.web.client.WebClient v0, v3;
io.vertx.ext.web.client.impl.cache.LocalCacheStore v2;
v0 := @parameter0: io.vertx.ext.web.client.WebClient;
v1 := @parameter1: io.vertx.ext.web.client.CachingWebClientOptions;
v2 = new io.vertx.ext.web.client.impl.cache.LocalCacheStore;
specialinvoke v2.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: void <init>()>();
v3 = staticinvoke <io.vertx.ext.web.client.CachingWebClient: io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient,io.vertx.ext.web.client.spi.CacheStore,io.vertx.ext.web.client.CachingWebClientOptions)>(v0, v2, v1);
return v3;
}
public static io.vertx.ext.web.client.WebClient create(io.vertx.ext.web.client.WebClient, io.vertx.ext.web.client.spi.CacheStore, io.vertx.ext.web.client.CachingWebClientOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v2;
io.vertx.ext.web.client.WebClient v0, v3;
io.vertx.ext.web.client.spi.CacheStore v1;
v0 := @parameter0: io.vertx.ext.web.client.WebClient;
v1 := @parameter1: io.vertx.ext.web.client.spi.CacheStore;
v2 := @parameter2: io.vertx.ext.web.client.CachingWebClientOptions;
v3 = staticinvoke <io.vertx.ext.web.client.impl.CachingWebClientImpl: io.vertx.ext.web.client.WebClient wrap(io.vertx.ext.web.client.WebClient,io.vertx.ext.web.client.spi.CacheStore,io.vertx.ext.web.client.CachingWebClientOptions)>(v0, v1, v2);
return v3;
}
}