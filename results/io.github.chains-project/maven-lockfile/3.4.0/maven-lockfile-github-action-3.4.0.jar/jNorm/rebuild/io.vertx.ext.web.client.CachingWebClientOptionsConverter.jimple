public class io.vertx.ext.web.client.CachingWebClientOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.ext.web.client.CachingWebClientOptionsConverter v0;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void fromJson(java.lang.Iterable, io.vertx.ext.web.client.CachingWebClientOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v1;
java.lang.Iterable v0;
byte v6;
int v7;
java.util.LinkedHashSet v14, v19;
boolean v10, v11, v13, v18, v23, v25, v3, v8, v9;
java.util.Iterator v2;
java.util.function.Consumer v16, v21;
java.lang.Object v12, v15, v17, v20, v22, v24, v4, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.ext.web.client.CachingWebClientOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label10;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -1469810640: goto label02;
case -1057327788: goto label05;
case 588542890: goto label04;
case 1941845202: goto label03;
default: goto label06;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("cachedMethods");
if v8 == 0 goto label06;
v6 = 0;
goto label06;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("cachedStatusCodes");
if v9 == 0 goto label06;
v6 = 1;
goto label06;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("enableVaryCaching");
if v10 == 0 goto label06;
v6 = 2;
goto label06;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("varyCachingEnabled");
if v11 == 0 goto label06;
v6 = 3;
label06:
tableswitch(v6)
{
case 0: goto label07;
case 1: goto label08;
case 2: goto label09;
case 3: goto label01;
default: goto label01;
};
label07:
v12 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v13 = v12 instanceof io.vertx.core.json.JsonArray;
if v13 == 0 goto label01;
v14 = new java.util.LinkedHashSet;
specialinvoke v14.<java.util.LinkedHashSet: void <init>()>();
v15 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter$lambda_fromJson_0__791: java.util.function.Consumer bootstrap$(java.util.LinkedHashSet)>(v14);
interfaceinvoke v15.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v16);
virtualinvoke v1.<io.vertx.ext.web.client.CachingWebClientOptions: io.vertx.ext.web.client.CachingWebClientOptions setCachedMethods(java.util.Set)>(v14);
goto label01;
label08:
v17 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v18 = v17 instanceof io.vertx.core.json.JsonArray;
if v18 == 0 goto label01;
v19 = new java.util.LinkedHashSet;
specialinvoke v19.<java.util.LinkedHashSet: void <init>()>();
v20 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v21 = staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter$lambda_fromJson_1__790: java.util.function.Consumer bootstrap$(java.util.LinkedHashSet)>(v19);
interfaceinvoke v20.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v21);
virtualinvoke v1.<io.vertx.ext.web.client.CachingWebClientOptions: io.vertx.ext.web.client.CachingWebClientOptions setCachedStatusCodes(java.util.Set)>(v19);
goto label01;
label09:
v22 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v23 = v22 instanceof java.lang.Boolean;
if v23 == 0 goto label01;
v24 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v25 = virtualinvoke v24.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.ext.web.client.CachingWebClientOptions: io.vertx.ext.web.client.CachingWebClientOptions setEnableVaryCaching(boolean)>(v25);
goto label01;
label10:
return;
}
public static void toJson(io.vertx.ext.web.client.CachingWebClientOptions, io.vertx.core.json.JsonObject)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.core.json.JsonObject v1;
java.util.Map v2;
v0 := @parameter0: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter: void toJson(io.vertx.ext.web.client.CachingWebClientOptions,java.util.Map)>(v0, v2);
return;
}
public static void toJson(io.vertx.ext.web.client.CachingWebClientOptions, java.util.Map)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2, v4, v6, v8;
java.util.function.Consumer v5, v9;
io.vertx.core.json.JsonArray v3, v7;
java.util.Map v1;
java.lang.Boolean v11;
boolean v10;
v0 := @parameter0: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set getCachedMethods()>();
if v2 == null goto label1;
v3 = new io.vertx.core.json.JsonArray;
specialinvoke v3.<io.vertx.core.json.JsonArray: void <init>()>();
v4 = virtualinvoke v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set getCachedMethods()>();
v5 = staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter$lambda_toJson_2__793: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v3);
interfaceinvoke v4.<java.util.Set: void forEach(java.util.function.Consumer)>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cachedMethods", v3);
label1:
v6 = virtualinvoke v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set getCachedStatusCodes()>();
if v6 == null goto label2;
v7 = new io.vertx.core.json.JsonArray;
specialinvoke v7.<io.vertx.core.json.JsonArray: void <init>()>();
v8 = virtualinvoke v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set getCachedStatusCodes()>();
v9 = staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter$lambda_toJson_3__792: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v7);
interfaceinvoke v8.<java.util.Set: void forEach(java.util.function.Consumer)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("cachedStatusCodes", v7);
label2:
v10 = virtualinvoke v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean isVaryCachingEnabled()>();
v11 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v10);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("varyCachingEnabled", v11);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.ext.web.client.CachingWebClientOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.ext.web.client.CachingWebClientOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}