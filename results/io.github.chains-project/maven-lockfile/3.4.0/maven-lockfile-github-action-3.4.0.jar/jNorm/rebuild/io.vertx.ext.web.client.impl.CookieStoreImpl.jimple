public class io.vertx.ext.web.client.impl.CookieStoreImpl extends java.lang.Object implements io.vertx.ext.web.client.spi.CookieStore
{
private final java.util.concurrent.ConcurrentHashMap noDomainCookies;
private final java.util.concurrent.ConcurrentSkipListMap domainCookies;
static final boolean $assertionsDisabled;
public void <init>()
{
java.util.concurrent.ConcurrentHashMap v1;
java.util.concurrent.ConcurrentSkipListMap v2;
io.vertx.ext.web.client.impl.CookieStoreImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.CookieStoreImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentHashMap noDomainCookies> = v1;
v2 = new java.util.concurrent.ConcurrentSkipListMap;
specialinvoke v2.<java.util.concurrent.ConcurrentSkipListMap: void <init>()>();
v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentSkipListMap domainCookies> = v2;
return;
}
public java.lang.Iterable get(java.lang.Boolean, java.lang.String, java.lang.String)
{
boolean v17, v27, v36, v4;
java.util.Collection v15, v38;
java.util.concurrent.ConcurrentNavigableMap v24;
java.util.concurrent.ConcurrentHashMap v14;
java.util.Set v25;
io.vertx.ext.web.client.impl.CookieStoreImpl v0;
io.vertx.ext.web.client.impl.CookieStoreImpl$Key v19, v23;
java.lang.AssertionError v6;
int v10, v11, v32, v5, v8, v9;
java.lang.Boolean v1;
java.lang.String v2, v20, v21, v3, v30, v31, v33, v35, v7;
java.util.Iterator v16, v26;
java.util.function.Consumer v13;
java.util.concurrent.ConcurrentSkipListMap v22;
java.util.TreeMap v12;
java.lang.Object v18, v28, v29, v34, v37;
v0 := @this: io.vertx.ext.web.client.impl.CookieStoreImpl;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = <io.vertx.ext.web.client.impl.CookieStoreImpl: boolean $assertionsDisabled>;
if v4 != 0 goto label2;
if v2 == null goto label1;
v5 = virtualinvoke v2.<java.lang.String: int length()>();
if v5 > 0 goto label2;
label1:
v6 = new java.lang.AssertionError;
specialinvoke v6.<java.lang.AssertionError: void <init>()>();
throw v6;
label2:
v7 = staticinvoke <io.vertx.core.http.impl.HttpUtils: java.lang.String removeDots(java.lang.CharSequence)>(v3);
v8 = virtualinvoke v7.<java.lang.String: int indexOf(int)>(63);
v9 = (int) -1;
if v8 <= v9 goto label3;
v7 = virtualinvoke v7.<java.lang.String: java.lang.String substring(int,int)>(0, v8);
label3:
v10 = virtualinvoke v7.<java.lang.String: int indexOf(int)>(35);
v11 = (int) -1;
if v10 <= v11 goto label4;
v7 = virtualinvoke v7.<java.lang.String: java.lang.String substring(int,int)>(0, v10);
label4:
v12 = new java.util.TreeMap;
specialinvoke v12.<java.util.TreeMap: void <init>()>();
v13 = staticinvoke <io.vertx.ext.web.client.impl.CookieStoreImpl$lambda_get_0__826: java.util.function.Consumer bootstrap$(java.lang.Boolean,java.lang.String,java.util.TreeMap)>(v1, v7, v12);
v14 = v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentHashMap noDomainCookies>;
v15 = virtualinvoke v14.<java.util.concurrent.ConcurrentHashMap: java.util.Collection values()>();
v16 = interfaceinvoke v15.<java.util.Collection: java.util.Iterator iterator()>();
label5:
v17 = interfaceinvoke v16.<java.util.Iterator: boolean hasNext()>();
if v17 == 0 goto label6;
v18 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v13.<java.util.function.Consumer: void accept(java.lang.Object)>(v18);
goto label5;
label6:
v19 = new io.vertx.ext.web.client.impl.CookieStoreImpl$Key;
specialinvoke v19.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v2, "", "");
v20 = v19.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v21 = virtualinvoke v20.<java.lang.String: java.lang.String substring(int,int)>(0, 1);
v22 = v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentSkipListMap domainCookies>;
v23 = new io.vertx.ext.web.client.impl.CookieStoreImpl$Key;
specialinvoke v23.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v21, "", "");
v24 = virtualinvoke v22.<java.util.concurrent.ConcurrentSkipListMap: java.util.concurrent.ConcurrentNavigableMap tailMap(java.lang.Object,boolean)>(v23, 1);
v25 = interfaceinvoke v24.<java.util.concurrent.ConcurrentNavigableMap: java.util.Set entrySet()>();
v26 = interfaceinvoke v25.<java.util.Set: java.util.Iterator iterator()>();
label7:
v27 = interfaceinvoke v26.<java.util.Iterator: boolean hasNext()>();
if v27 == 0 goto label8;
v28 = interfaceinvoke v26.<java.util.Iterator: java.lang.Object next()>();
v29 = interfaceinvoke v28.<java.util.Map$Entry: java.lang.Object getKey()>();
v30 = v29.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v31 = v19.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v32 = virtualinvoke v30.<java.lang.String: int compareTo(java.lang.String)>(v31);
if v32 > 0 goto label8;
v33 = v19.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v34 = interfaceinvoke v28.<java.util.Map$Entry: java.lang.Object getKey()>();
v35 = v34.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v36 = virtualinvoke v33.<java.lang.String: boolean startsWith(java.lang.String)>(v35);
if v36 == 0 goto label7;
v37 = interfaceinvoke v28.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v13.<java.util.function.Consumer: void accept(java.lang.Object)>(v37);
goto label7;
label8:
v38 = virtualinvoke v12.<java.util.TreeMap: java.util.Collection values()>();
return v38;
}
public io.vertx.ext.web.client.spi.CookieStore put(io.netty.handler.codec.http.cookie.Cookie)
{
io.vertx.ext.web.client.impl.CookieStoreImpl$Key v2;
java.util.concurrent.ConcurrentHashMap v8;
io.netty.handler.codec.http.cookie.Cookie v1;
java.util.concurrent.ConcurrentSkipListMap v9;
io.vertx.ext.web.client.impl.CookieStoreImpl v0;
java.lang.String v3, v4, v5, v6;
boolean v7;
v0 := @this: io.vertx.ext.web.client.impl.CookieStoreImpl;
v1 := @parameter0: io.netty.handler.codec.http.cookie.Cookie;
v2 = new io.vertx.ext.web.client.impl.CookieStoreImpl$Key;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.cookie.Cookie: java.lang.String domain()>();
v4 = interfaceinvoke v1.<io.netty.handler.codec.http.cookie.Cookie: java.lang.String path()>();
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.cookie.Cookie: java.lang.String name()>();
specialinvoke v2.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v3, v4, v5);
v6 = v2.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>("");
if v7 == 0 goto label1;
v8 = v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentHashMap noDomainCookies>;
virtualinvoke v8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v1);
return v0;
label1:
v9 = v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentSkipListMap domainCookies>;
virtualinvoke v9.<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v1);
return v0;
}
public io.vertx.ext.web.client.spi.CookieStore remove(io.netty.handler.codec.http.cookie.Cookie)
{
io.vertx.ext.web.client.impl.CookieStoreImpl$Key v2;
java.util.concurrent.ConcurrentHashMap v8;
io.netty.handler.codec.http.cookie.Cookie v1;
java.util.concurrent.ConcurrentSkipListMap v9;
io.vertx.ext.web.client.impl.CookieStoreImpl v0;
java.lang.String v3, v4, v5, v6;
boolean v7;
v0 := @this: io.vertx.ext.web.client.impl.CookieStoreImpl;
v1 := @parameter0: io.netty.handler.codec.http.cookie.Cookie;
v2 = new io.vertx.ext.web.client.impl.CookieStoreImpl$Key;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.cookie.Cookie: java.lang.String domain()>();
v4 = interfaceinvoke v1.<io.netty.handler.codec.http.cookie.Cookie: java.lang.String path()>();
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.cookie.Cookie: java.lang.String name()>();
specialinvoke v2.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v3, v4, v5);
v6 = v2.<io.vertx.ext.web.client.impl.CookieStoreImpl$Key: java.lang.String domain>;
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>("");
if v7 == 0 goto label1;
v8 = v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentHashMap noDomainCookies>;
virtualinvoke v8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(v2);
goto label2;
label1:
v9 = v0.<io.vertx.ext.web.client.impl.CookieStoreImpl: java.util.concurrent.ConcurrentSkipListMap domainCookies>;
virtualinvoke v9.<java.util.concurrent.ConcurrentSkipListMap: java.lang.Object remove(java.lang.Object)>(v2);
label2:
return v0;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/vertx/ext/web/client/impl/CookieStoreImpl;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.vertx.ext.web.client.impl.CookieStoreImpl: boolean $assertionsDisabled> = v2;
return;
}
}