public class io.vertx.ext.web.client.impl.HttpRequestImpl extends java.lang.Object implements io.vertx.ext.web.client.HttpRequest
{
private final io.vertx.ext.web.client.impl.WebClientBase client;
private io.vertx.core.net.ProxyOptions proxyOptions;
private io.vertx.core.net.SocketAddress serverAddress;
private io.vertx.core.MultiMap queryParams;
private io.vertx.uritemplate.Variables templateParams;
private io.vertx.core.http.HttpMethod method;
private final io.vertx.uritemplate.UriTemplate absoluteUri;
private int port;
private java.lang.String host;
private java.lang.String virtualHost;
private java.lang.Object uri;
private long timeout;
private boolean followRedirects;
private java.lang.Boolean ssl;
private boolean multipartMixed;
private java.lang.String traceOperation;
private java.util.List expectations;
private io.vertx.ext.web.codec.BodyCodec codec;
io.vertx.core.MultiMap headers;
void <init>(io.vertx.ext.web.client.impl.WebClientBase, io.vertx.core.http.HttpMethod, io.vertx.core.net.SocketAddress, io.vertx.uritemplate.UriTemplate, io.vertx.ext.web.codec.BodyCodec, boolean, io.vertx.core.net.ProxyOptions, io.vertx.core.MultiMap)
{
io.vertx.uritemplate.UriTemplate v4;
io.vertx.core.net.ProxyOptions v7;
io.vertx.ext.web.client.impl.WebClientBase v1;
io.vertx.core.MultiMap v8;
io.vertx.ext.web.codec.BodyCodec v5;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.http.HttpMethod v2;
int v9;
boolean v6;
io.vertx.core.net.SocketAddress v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.web.client.impl.WebClientBase;
v2 := @parameter1: io.vertx.core.http.HttpMethod;
v3 := @parameter2: io.vertx.core.net.SocketAddress;
v4 := @parameter3: io.vertx.uritemplate.UriTemplate;
v5 := @parameter4: io.vertx.ext.web.codec.BodyCodec;
v6 := @parameter5: boolean;
v7 := @parameter6: io.vertx.core.net.ProxyOptions;
v8 := @parameter7: io.vertx.core.MultiMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout> = -1L;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed> = 1;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v4, "AbsoluteUri cannot be null");
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client> = v1;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri> = v4;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.SocketAddress serverAddress> = v3;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method> = v2;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl> = null;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host> = null;
v9 = (int) -1;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port> = v9;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri> = null;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec codec> = v5;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers> = v8;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects> = v6;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions> = v7;
return;
}
void <init>(io.vertx.ext.web.client.impl.WebClientBase, io.vertx.core.http.HttpMethod, io.vertx.core.net.SocketAddress, java.lang.Boolean, int, java.lang.String, java.lang.Object, io.vertx.ext.web.codec.BodyCodec, boolean, io.vertx.core.net.ProxyOptions, io.vertx.core.MultiMap)
{
io.vertx.core.net.ProxyOptions v10;
io.vertx.ext.web.client.impl.WebClientBase v1;
io.vertx.core.MultiMap v11;
io.vertx.ext.web.codec.BodyCodec v8;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.http.HttpMethod v2;
int v5;
java.lang.Boolean v4;
java.lang.Object v7;
java.lang.String v6;
boolean v9;
io.vertx.core.net.SocketAddress v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.web.client.impl.WebClientBase;
v2 := @parameter1: io.vertx.core.http.HttpMethod;
v3 := @parameter2: io.vertx.core.net.SocketAddress;
v4 := @parameter3: java.lang.Boolean;
v5 := @parameter4: int;
v6 := @parameter5: java.lang.String;
v7 := @parameter6: java.lang.Object;
v8 := @parameter7: io.vertx.ext.web.codec.BodyCodec;
v9 := @parameter8: boolean;
v10 := @parameter9: io.vertx.core.net.ProxyOptions;
v11 := @parameter10: io.vertx.core.MultiMap;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout> = -1L;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed> = 1;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v6, "Host cannot be null");
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client> = v1;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri> = null;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.SocketAddress serverAddress> = v3;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method> = v2;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl> = v4;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port> = v5;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host> = v6;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri> = v7;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec codec> = v8;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers> = v11;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects> = v9;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions> = v10;
return;
}
private void <init>(io.vertx.ext.web.client.impl.HttpRequestImpl)
{
io.vertx.uritemplate.UriTemplate v3;
io.vertx.core.MultiMap v11, v12, v13, v14, v20, v21, v22, v23;
io.vertx.ext.web.codec.BodyCodec v10;
long v19;
java.util.ArrayList v27;
io.vertx.ext.web.client.impl.HttpRequestImpl v0, v1;
int v7;
java.lang.Boolean v5;
java.lang.String v25, v8;
boolean v15, v24;
io.vertx.core.net.SocketAddress v4;
io.vertx.core.net.ProxyOptions v16, v17, v18;
io.vertx.ext.web.client.impl.WebClientBase v2;
java.util.List v26, v28;
io.vertx.core.http.HttpMethod v6;
java.lang.Object v9;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.web.client.impl.HttpRequestImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout> = -1L;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed> = 1;
v2 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client> = v2;
v3 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri> = v3;
v4 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.SocketAddress serverAddress>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.SocketAddress serverAddress> = v4;
v5 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl> = v5;
v6 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method> = v6;
v7 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port> = v7;
v8 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host> = v8;
v9 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri> = v9;
v10 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec codec>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec codec> = v10;
v11 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers>;
if v11 == null goto label1;
v12 = staticinvoke <io.vertx.core.http.HttpHeaders: io.vertx.core.MultiMap headers()>();
v13 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers>;
v14 = interfaceinvoke v12.<io.vertx.core.MultiMap: io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap)>(v13);
goto label2;
label1:
v14 = staticinvoke <io.vertx.core.http.HttpHeaders: io.vertx.core.MultiMap headers()>();
label2:
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers> = v14;
v15 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects> = v15;
v16 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions>;
if v16 == null goto label3;
v17 = new io.vertx.core.net.ProxyOptions;
v18 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions>;
specialinvoke v17.<io.vertx.core.net.ProxyOptions: void <init>(io.vertx.core.net.ProxyOptions)>(v18);
goto label4;
label3:
v17 = null;
label4:
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions> = v17;
v19 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout> = v19;
v20 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams>;
if v20 == null goto label5;
v21 = staticinvoke <io.vertx.core.MultiMap: io.vertx.core.MultiMap caseInsensitiveMultiMap()>();
v22 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams>;
v23 = interfaceinvoke v21.<io.vertx.core.MultiMap: io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap)>(v22);
goto label6;
label5:
v23 = null;
label6:
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams> = v23;
v24 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed> = v24;
v25 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String virtualHost>;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String virtualHost> = v25;
v26 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations>;
if v26 == null goto label7;
v27 = new java.util.ArrayList;
v28 = v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations>;
specialinvoke v27.<java.util.ArrayList: void <init>(java.util.Collection)>(v28);
goto label8;
label7:
v27 = null;
label8:
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations> = v27;
return;
}
public io.vertx.ext.web.client.HttpRequest as(io.vertx.ext.web.codec.BodyCodec)
{
io.vertx.ext.web.codec.BodyCodec v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.web.codec.BodyCodec;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec codec> = v1;
return v0;
}
public io.vertx.ext.web.codec.BodyCodec bodyCodec()
{
io.vertx.ext.web.codec.BodyCodec v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.codec.BodyCodec codec>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest method(io.vertx.core.http.HttpMethod)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.http.HttpMethod v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method> = v1;
return v0;
}
public io.vertx.core.http.HttpMethod method()
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.http.HttpMethod v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest ssl(java.lang.Boolean)
{
java.lang.Boolean v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.Boolean;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl> = v1;
return v0;
}
public java.lang.Boolean ssl()
{
java.lang.Boolean v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest port(int)
{
int v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: int;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port> = v1;
return v0;
}
public int port()
{
int v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest host(java.lang.String)
{
java.lang.String v1, v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host>;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "Host cannot be null");
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host> = v1;
return v0;
}
public java.lang.String host()
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest uri(java.lang.String)
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams> = null;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri> = v1;
return v0;
}
public java.lang.String uri()
{
java.lang.Object v1;
java.lang.String v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public io.vertx.ext.web.client.HttpRequest virtualHost(java.lang.String)
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String virtualHost> = v1;
return v0;
}
public java.lang.String virtualHost()
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String virtualHost>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest putHeaders(io.vertx.core.MultiMap)
{
io.vertx.core.MultiMap v1, v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.MultiMap;
v2 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers()>();
interfaceinvoke v2.<io.vertx.core.MultiMap: io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap)>(v1);
return v0;
}
public io.vertx.ext.web.client.HttpRequest putHeader(java.lang.String, java.lang.String)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.MultiMap v3;
java.lang.String v1, v2;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap set(java.lang.String,java.lang.String)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.HttpRequest putHeader(java.lang.String, java.lang.Iterable)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.MultiMap v3;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Iterable;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap set(java.lang.String,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap headers()
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.MultiMap v1, v2, v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers>;
if v1 != null goto label1;
v2 = staticinvoke <io.vertx.core.http.HttpHeaders: io.vertx.core.MultiMap headers()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers> = v2;
label1:
v3 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers>;
return v3;
}
public io.vertx.ext.web.client.HttpRequest authentication(io.vertx.ext.auth.authentication.Credentials)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.lang.CharSequence v2;
java.lang.String v3, v4;
io.vertx.ext.auth.authentication.Credentials v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.auth.authentication.Credentials;
v2 = <io.vertx.core.http.HttpHeaders: java.lang.CharSequence AUTHORIZATION>;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
v4 = interfaceinvoke v1.<io.vertx.ext.auth.authentication.Credentials: java.lang.String toHttpAuthorization()>();
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.HttpRequest putHeader(java.lang.String,java.lang.String)>(v3, v4);
return v0;
}
public io.vertx.ext.web.client.HttpRequest timeout(long)
{
long v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: long;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout> = v1;
return v0;
}
public long timeout()
{
long v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest addQueryParam(java.lang.String, java.lang.String)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.MultiMap v3;
java.lang.String v1, v2;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap add(java.lang.String,java.lang.String)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.HttpRequest setQueryParam(java.lang.String, java.lang.String)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.MultiMap v3;
java.lang.String v1, v2;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams()>();
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap set(java.lang.String,java.lang.String)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.HttpRequest setTemplateParam(java.lang.String, java.lang.String)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.lang.String v1, v2;
io.vertx.uritemplate.Variables v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams()>();
interfaceinvoke v3.<io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables set(java.lang.String,java.lang.String)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.HttpRequest setTemplateParam(java.lang.String, java.util.List)
{
java.util.List v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.lang.String v1;
io.vertx.uritemplate.Variables v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams()>();
interfaceinvoke v3.<io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables set(java.lang.String,java.util.List)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.HttpRequest setTemplateParam(java.lang.String, java.util.Map)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.util.Map v2;
java.lang.String v1;
io.vertx.uritemplate.Variables v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams()>();
interfaceinvoke v3.<io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables set(java.lang.String,java.util.Map)>(v1, v2);
return v0;
}
public io.vertx.ext.web.client.HttpRequest followRedirects(boolean)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: boolean;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects> = v1;
return v0;
}
public boolean followRedirects()
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean followRedirects>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest proxy(io.vertx.core.net.ProxyOptions)
{
io.vertx.core.net.ProxyOptions v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.net.ProxyOptions;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions> = v1;
return v0;
}
public io.vertx.core.net.ProxyOptions proxy()
{
io.vertx.core.net.ProxyOptions v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions>;
return v1;
}
public io.vertx.ext.web.client.HttpRequest expect(io.vertx.ext.web.client.predicate.ResponsePredicate)
{
io.vertx.ext.web.client.predicate.ResponsePredicate v1;
java.util.List v2, v4;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.util.ArrayList v3;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.web.client.predicate.ResponsePredicate;
v2 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations>;
if v2 != null goto label1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations> = v3;
label1:
v4 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public java.util.List expectations()
{
java.util.List v1, v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations>;
if v1 == null goto label1;
v2 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.util.List expectations>;
goto label2;
label1:
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
label2:
return v2;
}
public io.vertx.core.MultiMap queryParams()
{
io.vertx.core.MultiMap v1, v13, v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.util.Map v9;
int v6;
io.netty.handler.codec.http.QueryStringDecoder v7;
java.util.function.BiConsumer v10;
java.lang.Object v11, v3, v5, v8;
java.lang.String v12;
boolean v4;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams>;
if v1 != null goto label1;
v2 = staticinvoke <io.vertx.core.MultiMap: io.vertx.core.MultiMap caseInsensitiveMultiMap()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams> = v2;
v3 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v4 = v3 instanceof java.lang.String;
if v4 == 0 goto label1;
v5 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v6 = virtualinvoke v5.<java.lang.String: int indexOf(int)>(63);
if v6 < 0 goto label1;
v7 = new io.netty.handler.codec.http.QueryStringDecoder;
v8 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
specialinvoke v7.<io.netty.handler.codec.http.QueryStringDecoder: void <init>(java.lang.String)>(v8);
v9 = virtualinvoke v7.<io.netty.handler.codec.http.QueryStringDecoder: java.util.Map parameters()>();
v10 = staticinvoke <io.vertx.ext.web.client.impl.HttpRequestImpl$lambda_queryParams_0__828: java.util.function.BiConsumer bootstrap$(io.vertx.ext.web.client.impl.HttpRequestImpl)>(v0);
interfaceinvoke v9.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v10);
v11 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v12 = virtualinvoke v11.<java.lang.String: java.lang.String substring(int,int)>(0, v6);
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri> = v12;
label1:
v13 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams>;
return v13;
}
public io.vertx.uritemplate.Variables templateParams()
{
io.vertx.uritemplate.UriTemplate v3;
java.lang.IllegalStateException v5;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.lang.Object v1;
io.vertx.uritemplate.Variables v6, v7, v8;
boolean v2, v4;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v2 = v1 instanceof io.vertx.uritemplate.UriTemplate;
if v2 != 0 goto label1;
v3 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri>;
v4 = v3 instanceof io.vertx.uritemplate.UriTemplate;
if v4 != 0 goto label1;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>()>();
throw v5;
label1:
v6 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams>;
if v6 != null goto label2;
v7 = staticinvoke <io.vertx.uritemplate.Variables: io.vertx.uritemplate.Variables variables()>();
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams> = v7;
label2:
v8 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams>;
return v8;
}
public io.vertx.ext.web.client.HttpRequest copy()
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0, v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = new io.vertx.ext.web.client.impl.HttpRequestImpl;
specialinvoke v1.<io.vertx.ext.web.client.impl.HttpRequestImpl: void <init>(io.vertx.ext.web.client.impl.HttpRequestImpl)>(v0);
return v1;
}
public io.vertx.ext.web.client.HttpRequest multipartMixed(boolean)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: boolean;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed> = v1;
return v0;
}
public io.vertx.ext.web.client.HttpRequest traceOperation(java.lang.String)
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String traceOperation> = v1;
return v0;
}
public java.lang.String traceOperation()
{
java.lang.String v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String traceOperation>;
return v1;
}
public boolean multipartMixed()
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: boolean multipartMixed>;
return v1;
}
public void sendStream(io.vertx.core.streams.ReadStream, io.vertx.core.Handler)
{
io.vertx.core.streams.ReadStream v1;
io.vertx.core.Handler v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.streams.ReadStream;
v2 := @parameter1: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>(null, v1, v2);
return;
}
public void send(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>(null, null, v1);
return;
}
public void sendBuffer(io.vertx.core.buffer.Buffer, io.vertx.core.Handler)
{
io.vertx.core.Handler v2;
io.vertx.core.buffer.Buffer v1;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 := @parameter1: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>(null, v1, v2);
return;
}
public void sendJsonObject(io.vertx.core.json.JsonObject, io.vertx.core.Handler)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.Handler v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v2 := @parameter1: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>("application/json", v1, v2);
return;
}
public void sendJson(java.lang.Object, io.vertx.core.Handler)
{
java.lang.Object v1;
io.vertx.core.Handler v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>("application/json", v1, v2);
return;
}
public void sendForm(io.vertx.core.MultiMap, io.vertx.core.Handler)
{
io.vertx.core.MultiMap v1;
io.vertx.core.Handler v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.MultiMap;
v2 := @parameter1: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void sendForm(io.vertx.core.MultiMap,java.lang.String,io.vertx.core.Handler)>(v1, "UTF-8", v2);
return;
}
public void sendForm(io.vertx.core.MultiMap, java.lang.String, io.vertx.core.Handler)
{
java.util.Iterator v5;
io.vertx.core.MultiMap v1;
io.vertx.ext.web.multipart.MultipartForm v4;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
java.lang.Object v7, v8, v9;
java.lang.String v2;
io.vertx.core.Handler v3;
boolean v6;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.MultiMap;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.core.Handler;
v4 = staticinvoke <io.vertx.ext.web.multipart.MultipartForm: io.vertx.ext.web.multipart.MultipartForm create()>();
v5 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
interfaceinvoke v4.<io.vertx.ext.web.multipart.MultipartForm: io.vertx.ext.web.multipart.MultipartForm attribute(java.lang.String,java.lang.String)>(v8, v9);
goto label1;
label2:
interfaceinvoke v4.<io.vertx.ext.web.multipart.MultipartForm: io.vertx.ext.web.multipart.MultipartForm setCharset(java.lang.String)>(v2);
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>("application/x-www-form-urlencoded", v4, v3);
return;
}
public void sendMultipartForm(io.vertx.ext.web.multipart.MultipartForm, io.vertx.core.Handler)
{
io.vertx.ext.web.multipart.MultipartForm v1;
io.vertx.core.Handler v2;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.ext.web.multipart.MultipartForm;
v2 := @parameter1: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void send(java.lang.String,java.lang.Object,io.vertx.core.Handler)>("multipart/form-data", v1, v2);
return;
}
io.vertx.core.http.RequestOptions buildRequestOptions() throws java.net.URISyntaxException, java.net.MalformedURLException
{
io.vertx.ext.web.client.WebClientOptions v10, v25;
io.vertx.uritemplate.UriTemplate v6, v7;
io.vertx.core.MultiMap v27, v28;
io.vertx.core.http.RequestOptions v29, v34, v36, v39, v41, v42, v44;
java.lang.Integer v43, v47;
java.net.URI v32;
io.vertx.uritemplate.Variables v23, v8;
boolean v20, v30, v31;
io.vertx.core.net.ProxyOptions v53;
io.vertx.ext.web.client.impl.WebClientBase v24, v9;
long v52;
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
int v16, v3, v4, v48;
java.lang.Boolean v15, v2;
java.lang.String v1, v12, v14, v17, v37, v45, v49, v5, v51, v54;
io.vertx.core.net.SocketAddress v33, v38, v46, v50;
io.vertx.ext.web.client.impl.ClientUri v13;
io.vertx.uritemplate.ExpandOptions v11, v26;
io.vertx.core.http.HttpMethod v35, v40;
java.lang.Object v18, v19, v21, v22;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 = null;
v2 = null;
v3 = (int) -1;
v4 = v3;
v5 = null;
v6 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri>;
if v6 == null goto label01;
v7 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.UriTemplate absoluteUri>;
v8 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams()>();
v9 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client>;
v10 = v9.<io.vertx.ext.web.client.impl.WebClientBase: io.vertx.ext.web.client.WebClientOptions options>;
v11 = virtualinvoke v10.<io.vertx.ext.web.client.WebClientOptions: io.vertx.uritemplate.ExpandOptions getTemplateExpandOptions()>();
v12 = interfaceinvoke v7.<io.vertx.uritemplate.UriTemplate: java.lang.String expandToString(io.vertx.uritemplate.Variables,io.vertx.uritemplate.ExpandOptions)>(v8, v11);
v13 = staticinvoke <io.vertx.ext.web.client.impl.ClientUri: io.vertx.ext.web.client.impl.ClientUri parse(java.lang.String)>(v12);
v14 = v13.<io.vertx.ext.web.client.impl.ClientUri: java.lang.String uri>;
v5 = v13.<io.vertx.ext.web.client.impl.ClientUri: java.lang.String host>;
v4 = v13.<io.vertx.ext.web.client.impl.ClientUri: int port>;
v1 = v13.<io.vertx.ext.web.client.impl.ClientUri: java.lang.String protocol>;
v2 = v13.<io.vertx.ext.web.client.impl.ClientUri: java.lang.Boolean ssl>;
label01:
v15 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl>;
if v15 == null goto label02;
v2 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Boolean ssl>;
label02:
v16 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port>;
if v16 < 0 goto label03;
v4 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: int port>;
label03:
v17 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host>;
if v17 == null goto label04;
v5 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String host>;
label04:
v18 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
if v18 == null goto label06;
v19 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v20 = v19 instanceof java.lang.String;
if v20 == 0 goto label05;
v21 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
goto label06;
label05:
v22 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.Object uri>;
v23 = virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.uritemplate.Variables templateParams()>();
v24 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client>;
v25 = v24.<io.vertx.ext.web.client.impl.WebClientBase: io.vertx.ext.web.client.WebClientOptions options>;
v26 = virtualinvoke v25.<io.vertx.ext.web.client.WebClientOptions: io.vertx.uritemplate.ExpandOptions getTemplateExpandOptions()>();
v21 = interfaceinvoke v22.<io.vertx.uritemplate.UriTemplate: java.lang.String expandToString(io.vertx.uritemplate.Variables,io.vertx.uritemplate.ExpandOptions)>(v23, v26);
label06:
v27 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams>;
if v27 == null goto label07;
v28 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap queryParams>;
v21 = staticinvoke <io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String buildUri(java.lang.String,io.vertx.core.MultiMap)>(v21, v28);
label07:
v29 = new io.vertx.core.http.RequestOptions;
specialinvoke v29.<io.vertx.core.http.RequestOptions: void <init>()>();
if v1 == null goto label08;
v30 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("http");
if v30 != 0 goto label08;
v31 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("https");
if v31 != 0 goto label08;
v32 = new java.net.URI;
specialinvoke v32.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String,int,java.lang.String,java.lang.String,java.lang.String)>(v1, null, v5, v4, v21, null, null);
v33 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.SocketAddress serverAddress>;
v34 = virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setServer(io.vertx.core.net.SocketAddress)>(v33);
v35 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method>;
v36 = virtualinvoke v34.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setMethod(io.vertx.core.http.HttpMethod)>(v35);
v37 = virtualinvoke v32.<java.net.URI: java.lang.String toString()>();
virtualinvoke v36.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setAbsoluteURI(java.lang.String)>(v37);
goto label09;
label08:
v38 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.SocketAddress serverAddress>;
v39 = virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setServer(io.vertx.core.net.SocketAddress)>(v38);
v40 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.http.HttpMethod method>;
v41 = virtualinvoke v39.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setMethod(io.vertx.core.http.HttpMethod)>(v40);
v42 = virtualinvoke v41.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setHost(java.lang.String)>(v5);
v43 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v44 = virtualinvoke v42.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setPort(java.lang.Integer)>(v43);
virtualinvoke v44.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setURI(java.lang.String)>(v21);
if v2 == null goto label09;
virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setSsl(java.lang.Boolean)>(v2);
label09:
v45 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String virtualHost>;
if v45 == null goto label11;
v46 = virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.net.SocketAddress getServer()>();
if v46 != null goto label10;
v47 = virtualinvoke v29.<io.vertx.core.http.RequestOptions: java.lang.Integer getPort()>();
v48 = virtualinvoke v47.<java.lang.Integer: int intValue()>();
v49 = virtualinvoke v29.<io.vertx.core.http.RequestOptions: java.lang.String getHost()>();
v50 = staticinvoke <io.vertx.core.net.SocketAddress: io.vertx.core.net.SocketAddress inetSocketAddress(int,java.lang.String)>(v48, v49);
virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setServer(io.vertx.core.net.SocketAddress)>(v50);
label10:
v51 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String virtualHost>;
virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setHost(java.lang.String)>(v51);
label11:
virtualinvoke v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: void mergeHeaders(io.vertx.core.http.RequestOptions)>(v29);
v52 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: long timeout>;
virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setTimeout(long)>(v52);
v53 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.net.ProxyOptions proxyOptions>;
virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setProxyOptions(io.vertx.core.net.ProxyOptions)>(v53);
v54 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: java.lang.String traceOperation>;
virtualinvoke v29.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setTraceOperation(java.lang.String)>(v54);
return v29;
}
void send(java.lang.String, java.lang.Object, io.vertx.core.Handler)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.ext.web.client.impl.WebClientBase v4;
java.lang.Object v2;
java.lang.String v1;
io.vertx.core.Handler v3;
io.vertx.ext.web.client.impl.HttpContext v5;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.ext.web.client.impl.WebClientBase client>;
v5 = virtualinvoke v4.<io.vertx.ext.web.client.impl.WebClientBase: io.vertx.ext.web.client.impl.HttpContext createContext(io.vertx.core.Handler)>(v3);
virtualinvoke v5.<io.vertx.ext.web.client.impl.HttpContext: void prepareRequest(io.vertx.ext.web.client.HttpRequest,java.lang.String,java.lang.Object)>(v0, v1, v2);
return;
}
void mergeHeaders(io.vertx.core.http.RequestOptions)
{
io.vertx.ext.web.client.impl.HttpRequestImpl v0;
io.vertx.core.MultiMap v2, v3, v4;
io.vertx.core.http.RequestOptions v1;
v0 := @this: io.vertx.ext.web.client.impl.HttpRequestImpl;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
v2 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers>;
if v2 == null goto label2;
v3 = virtualinvoke v1.<io.vertx.core.http.RequestOptions: io.vertx.core.MultiMap getHeaders()>();
if v3 != null goto label1;
v3 = staticinvoke <io.vertx.core.MultiMap: io.vertx.core.MultiMap caseInsensitiveMultiMap()>();
virtualinvoke v1.<io.vertx.core.http.RequestOptions: io.vertx.core.http.RequestOptions setHeaders(io.vertx.core.MultiMap)>(v3);
label1:
v4 = v0.<io.vertx.ext.web.client.impl.HttpRequestImpl: io.vertx.core.MultiMap headers>;
interfaceinvoke v3.<io.vertx.core.MultiMap: io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap)>(v4);
label2:
return;
}
private static java.lang.String buildUri(java.lang.String, io.vertx.core.MultiMap)
{
io.netty.handler.codec.http.QueryStringEncoder v3;
io.vertx.core.MultiMap v1;
java.util.function.Consumer v7;
java.util.Map v5;
io.netty.handler.codec.http.QueryStringDecoder v2;
java.util.function.BiConsumer v6;
java.lang.String v0, v4, v8;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: io.vertx.core.MultiMap;
v2 = new io.netty.handler.codec.http.QueryStringDecoder;
specialinvoke v2.<io.netty.handler.codec.http.QueryStringDecoder: void <init>(java.lang.String)>(v0);
v3 = new io.netty.handler.codec.http.QueryStringEncoder;
v4 = virtualinvoke v2.<io.netty.handler.codec.http.QueryStringDecoder: java.lang.String rawPath()>();
specialinvoke v3.<io.netty.handler.codec.http.QueryStringEncoder: void <init>(java.lang.String)>(v4);
v5 = virtualinvoke v2.<io.netty.handler.codec.http.QueryStringDecoder: java.util.Map parameters()>();
v6 = staticinvoke <io.vertx.ext.web.client.impl.HttpRequestImpl$lambda_buildUri_1__829: java.util.function.BiConsumer bootstrap$(io.netty.handler.codec.http.QueryStringEncoder)>(v3);
interfaceinvoke v5.<java.util.Map: void forEach(java.util.function.BiConsumer)>(v6);
v7 = staticinvoke <io.vertx.ext.web.client.impl.HttpRequestImpl$lambda_buildUri_2__830: java.util.function.Consumer bootstrap$(io.netty.handler.codec.http.QueryStringEncoder)>(v3);
interfaceinvoke v1.<io.vertx.core.MultiMap: void forEach(java.util.function.Consumer)>(v7);
v8 = virtualinvoke v3.<io.netty.handler.codec.http.QueryStringEncoder: java.lang.String toString()>();
return v8;
}
}