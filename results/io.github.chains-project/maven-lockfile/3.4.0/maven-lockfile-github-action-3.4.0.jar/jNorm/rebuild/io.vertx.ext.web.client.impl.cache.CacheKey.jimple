public class io.vertx.ext.web.client.impl.cache.CacheKey extends io.vertx.ext.web.client.impl.cache.CacheVariationsKey
{
private final java.lang.String variations;
public void <init>(io.vertx.core.http.RequestOptions, io.vertx.ext.web.client.impl.cache.Vary)
{
io.vertx.ext.web.client.impl.cache.Vary v2;
io.vertx.ext.web.client.impl.cache.CacheKey v0;
io.vertx.core.http.RequestOptions v1;
java.lang.String v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheKey;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
v2 := @parameter1: io.vertx.ext.web.client.impl.cache.Vary;
specialinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: void <init>(io.vertx.core.http.RequestOptions)>(v1);
v3 = virtualinvoke v2.<io.vertx.ext.web.client.impl.cache.Vary: java.lang.String toString()>();
v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String variations> = v3;
return;
}
public java.lang.String toString()
{
byte[] v4, v7, v8;
java.security.MessageDigest v1;
io.vertx.ext.web.client.impl.cache.CacheKey v0;
java.lang.Exception v10;
java.nio.charset.Charset v3, v6;
java.lang.String v11, v12, v13, v2, v5, v9;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheKey;
label1:
v1 = staticinvoke <java.security.MessageDigest: java.security.MessageDigest getInstance(java.lang.String)>("SHA-256");
v2 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String toString()>();
v3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v4 = virtualinvoke v2.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v3);
virtualinvoke v1.<java.security.MessageDigest: void update(byte[])>(v4);
v5 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String variations>;
v6 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v7 = virtualinvoke v5.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v6);
virtualinvoke v1.<java.security.MessageDigest: void update(byte[])>(v7);
v8 = virtualinvoke v1.<java.security.MessageDigest: byte[] digest()>();
v9 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base16Encode(byte[])>(v8);
label2:
return v9;
label3:
v10 := @caughtexception;
v11 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.CacheVariationsKey: java.lang.String toString()>();
v12 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String variations>;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v11, v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001|\u0001");
return v13;
catch java.lang.Exception from label1 to label2 with label3;
}
public boolean equals(java.lang.Object)
{
io.vertx.ext.web.client.impl.cache.CacheKey v0;
int v4, v5;
java.lang.String v10, v12, v13, v15, v16, v6, v7, v9;
boolean v11, v14, v17, v18, v8;
java.lang.Class v2, v3;
java.lang.Object v1;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheKey;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: int port>;
v5 = v1.<io.vertx.ext.web.client.impl.cache.CacheKey: int port>;
if v4 != v5 goto label4;
v6 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String host>;
v7 = v1.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String host>;
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label4;
v9 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String path>;
v10 = v1.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String path>;
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label4;
v12 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String queryString>;
v13 = v1.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String queryString>;
v14 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>(v13);
if v14 == 0 goto label4;
v15 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String variations>;
v16 = v1.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String variations>;
v17 = virtualinvoke v15.<java.lang.String: boolean equals(java.lang.Object)>(v16);
if v17 == 0 goto label4;
v18 = 1;
goto label5;
label4:
v18 = 0;
label5:
return v18;
}
public int hashCode()
{
java.lang.Object[] v1;
io.vertx.ext.web.client.impl.cache.CacheKey v0;
java.lang.Integer v4;
int v3, v8;
java.lang.String v2, v5, v6, v7;
v0 := @this: io.vertx.ext.web.client.impl.cache.CacheKey;
v1 = newarray (java.lang.Object)[5];
v2 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String host>;
v1[0] = v2;
v3 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: int port>;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v1[1] = v4;
v5 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String path>;
v1[2] = v5;
v6 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String queryString>;
v1[3] = v6;
v7 = v0.<io.vertx.ext.web.client.impl.cache.CacheKey: java.lang.String variations>;
v1[4] = v7;
v8 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v8;
}
}