public class io.vertx.mutiny.core.Promise extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.Promise delegate;
public final io.smallrye.mutiny.vertx.TypeArg __typeArg_0;
public void <init>(io.vertx.core.Promise)
{
io.vertx.mutiny.core.Promise v0;
io.smallrye.mutiny.vertx.TypeArg v2;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: io.vertx.core.Promise;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate> = v1;
v2 = staticinvoke <io.smallrye.mutiny.vertx.TypeArg: io.smallrye.mutiny.vertx.TypeArg 'unknown'()>();
v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __typeArg_0> = v2;
return;
}
public void <init>(java.lang.Object, io.smallrye.mutiny.vertx.TypeArg)
{
io.vertx.mutiny.core.Promise v0;
java.lang.Object v1;
io.smallrye.mutiny.vertx.TypeArg v2;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.smallrye.mutiny.vertx.TypeArg;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate> = v1;
v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __typeArg_0> = v2;
return;
}
public void <init>(io.vertx.core.Promise, io.smallrye.mutiny.vertx.TypeArg)
{
io.vertx.mutiny.core.Promise v0;
io.smallrye.mutiny.vertx.TypeArg v2;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: io.vertx.core.Promise;
v2 := @parameter1: io.smallrye.mutiny.vertx.TypeArg;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate> = v1;
v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __typeArg_0> = v2;
return;
}
void <init>()
{
io.vertx.mutiny.core.Promise v0;
io.smallrye.mutiny.vertx.TypeArg v1;
v0 := @this: io.vertx.mutiny.core.Promise;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate> = null;
v1 = staticinvoke <io.smallrye.mutiny.vertx.TypeArg: io.smallrye.mutiny.vertx.TypeArg 'unknown'()>();
v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __typeArg_0> = v1;
return;
}
public io.vertx.core.Promise getDelegate()
{
io.vertx.mutiny.core.Promise v0;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
return v1;
}
public java.lang.String toString()
{
io.vertx.mutiny.core.Promise v0;
java.lang.String v2;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.Promise v0;
io.vertx.core.Promise v4, v5;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v5 = v1.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.mutiny.core.Promise v0;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public static io.vertx.mutiny.core.Promise promise()
{
io.vertx.mutiny.core.Promise v2;
io.smallrye.mutiny.vertx.TypeArg v1;
io.vertx.core.Promise v0;
v0 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v1 = staticinvoke <io.smallrye.mutiny.vertx.TypeArg: io.smallrye.mutiny.vertx.TypeArg 'unknown'()>();
v2 = staticinvoke <io.vertx.mutiny.core.Promise: io.vertx.mutiny.core.Promise newInstance(io.vertx.core.Promise,io.smallrye.mutiny.vertx.TypeArg)>(v0, v1);
return v2;
}
public void complete(java.lang.Object)
{
io.vertx.mutiny.core.Promise v0;
io.smallrye.mutiny.vertx.TypeArg v3;
io.vertx.core.Promise v2;
java.lang.Object v1, v4;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v3 = v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __typeArg_0>;
v4 = virtualinvoke v3.<io.smallrye.mutiny.vertx.TypeArg: java.lang.Object unwrap(java.lang.Object)>(v1);
interfaceinvoke v2.<io.vertx.core.Promise: void complete(java.lang.Object)>(v4);
return;
}
public void complete()
{
io.vertx.mutiny.core.Promise v0;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
interfaceinvoke v1.<io.vertx.core.Promise: void complete()>();
return;
}
public void fail(java.lang.Throwable)
{
io.vertx.mutiny.core.Promise v0;
java.lang.Throwable v1;
io.vertx.core.Promise v2;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
interfaceinvoke v2.<io.vertx.core.Promise: void fail(java.lang.Throwable)>(v1);
return;
}
public void fail(java.lang.String)
{
io.vertx.mutiny.core.Promise v0;
java.lang.String v1;
io.vertx.core.Promise v2;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
interfaceinvoke v2.<io.vertx.core.Promise: void fail(java.lang.String)>(v1);
return;
}
public boolean tryComplete(java.lang.Object)
{
io.vertx.mutiny.core.Promise v0;
io.smallrye.mutiny.vertx.TypeArg v3;
io.vertx.core.Promise v2;
java.lang.Object v1, v4;
boolean v5;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v3 = v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __typeArg_0>;
v4 = virtualinvoke v3.<io.smallrye.mutiny.vertx.TypeArg: java.lang.Object unwrap(java.lang.Object)>(v1);
v5 = interfaceinvoke v2.<io.vertx.core.Promise: boolean tryComplete(java.lang.Object)>(v4);
return v5;
}
public boolean tryComplete()
{
io.vertx.mutiny.core.Promise v0;
boolean v2;
io.vertx.core.Promise v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Promise: boolean tryComplete()>();
return v2;
}
public boolean tryFail(java.lang.Throwable)
{
io.vertx.mutiny.core.Promise v0;
java.lang.Throwable v1;
io.vertx.core.Promise v2;
boolean v3;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Promise: boolean tryFail(java.lang.Throwable)>(v1);
return v3;
}
public boolean tryFail(java.lang.String)
{
io.vertx.mutiny.core.Promise v0;
io.vertx.core.Promise v2;
java.lang.String v1;
boolean v3;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Promise: boolean tryFail(java.lang.String)>(v1);
return v3;
}
public io.smallrye.mutiny.Uni future()
{
io.vertx.mutiny.core.Promise v0;
io.vertx.core.Promise v1;
io.vertx.core.Future v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = v0.<io.vertx.mutiny.core.Promise: io.vertx.core.Promise delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v3 = staticinvoke <io.smallrye.mutiny.vertx.UniHelper: io.smallrye.mutiny.Uni toUni(io.vertx.core.Future)>(v2);
return v3;
}
public java.lang.Object futureAndAwait()
{
io.vertx.mutiny.core.Promise v0;
io.smallrye.mutiny.groups.UniAwait v2;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.Uni future()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public void futureAndForget()
{
io.vertx.mutiny.core.Promise v0;
java.util.function.Consumer v3;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.Promise;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.Uni future()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public static io.vertx.mutiny.core.Promise newInstance(io.vertx.core.Promise)
{
io.vertx.mutiny.core.Promise v1;
io.vertx.core.Promise v0;
v0 := @parameter0: io.vertx.core.Promise;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.Promise;
specialinvoke v1.<io.vertx.mutiny.core.Promise: void <init>(io.vertx.core.Promise)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
public static io.vertx.mutiny.core.Promise newInstance(io.vertx.core.Promise, io.smallrye.mutiny.vertx.TypeArg)
{
io.vertx.mutiny.core.Promise v2;
io.smallrye.mutiny.vertx.TypeArg v1;
io.vertx.core.Promise v0;
v0 := @parameter0: io.vertx.core.Promise;
v1 := @parameter1: io.smallrye.mutiny.vertx.TypeArg;
if v0 == null goto label1;
v2 = new io.vertx.mutiny.core.Promise;
specialinvoke v2.<io.vertx.mutiny.core.Promise: void <init>(io.vertx.core.Promise,io.smallrye.mutiny.vertx.TypeArg)>(v0, v1);
goto label2;
label1:
v2 = null;
label2:
return v2;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.Promise$lambda_static_0__1644: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.Promise$getDelegate__1645: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.Promise: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}