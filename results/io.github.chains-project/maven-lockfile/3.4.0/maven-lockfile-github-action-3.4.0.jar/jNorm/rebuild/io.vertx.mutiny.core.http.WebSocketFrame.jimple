public class io.vertx.mutiny.core.http.WebSocketFrame extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.http.WebSocketFrame delegate;
private java.lang.String cached_0;
private io.vertx.mutiny.core.buffer.Buffer cached_1;
public void <init>(io.vertx.core.http.WebSocketFrame)
{
io.vertx.core.http.WebSocketFrame v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 := @parameter0: io.vertx.core.http.WebSocketFrame;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
java.lang.Object v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate> = null;
return;
}
public io.vertx.core.http.WebSocketFrame getDelegate()
{
io.vertx.core.http.WebSocketFrame v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
return v1;
}
public java.lang.String toString()
{
java.lang.String v2;
io.vertx.core.http.WebSocketFrame v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
java.lang.Class v2, v3;
java.lang.Object v1;
io.vertx.core.http.WebSocketFrame v4, v5;
boolean v6;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v5 = v1.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.core.http.WebSocketFrame v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public static io.vertx.mutiny.core.http.WebSocketFrame binaryFrame(io.vertx.mutiny.core.buffer.Buffer, boolean)
{
io.vertx.core.buffer.Buffer v2;
io.vertx.mutiny.core.buffer.Buffer v0;
io.vertx.core.http.WebSocketFrame v3;
boolean v1;
io.vertx.mutiny.core.http.WebSocketFrame v4;
v0 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
v1 := @parameter1: boolean;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.buffer.Buffer: io.vertx.core.buffer.Buffer getDelegate()>();
v3 = staticinvoke <io.vertx.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame binaryFrame(io.vertx.core.buffer.Buffer,boolean)>(v2, v1);
v4 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.http.WebSocketFrame newInstance(io.vertx.core.http.WebSocketFrame)>(v3);
return v4;
}
public static io.vertx.mutiny.core.http.WebSocketFrame textFrame(java.lang.String, boolean)
{
java.lang.String v0;
io.vertx.core.http.WebSocketFrame v2;
boolean v1;
io.vertx.mutiny.core.http.WebSocketFrame v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = staticinvoke <io.vertx.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame textFrame(java.lang.String,boolean)>(v0, v1);
v3 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.http.WebSocketFrame newInstance(io.vertx.core.http.WebSocketFrame)>(v2);
return v3;
}
public static io.vertx.mutiny.core.http.WebSocketFrame pingFrame(io.vertx.mutiny.core.buffer.Buffer)
{
io.vertx.core.buffer.Buffer v1;
io.vertx.mutiny.core.buffer.Buffer v0;
io.vertx.core.http.WebSocketFrame v2;
io.vertx.mutiny.core.http.WebSocketFrame v3;
v0 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.buffer.Buffer: io.vertx.core.buffer.Buffer getDelegate()>();
v2 = staticinvoke <io.vertx.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame pingFrame(io.vertx.core.buffer.Buffer)>(v1);
v3 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.http.WebSocketFrame newInstance(io.vertx.core.http.WebSocketFrame)>(v2);
return v3;
}
public static io.vertx.mutiny.core.http.WebSocketFrame pongFrame(io.vertx.mutiny.core.buffer.Buffer)
{
io.vertx.core.buffer.Buffer v1;
io.vertx.mutiny.core.buffer.Buffer v0;
io.vertx.core.http.WebSocketFrame v2;
io.vertx.mutiny.core.http.WebSocketFrame v3;
v0 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.buffer.Buffer: io.vertx.core.buffer.Buffer getDelegate()>();
v2 = staticinvoke <io.vertx.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame pongFrame(io.vertx.core.buffer.Buffer)>(v1);
v3 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.http.WebSocketFrame newInstance(io.vertx.core.http.WebSocketFrame)>(v2);
return v3;
}
public static io.vertx.mutiny.core.http.WebSocketFrame continuationFrame(io.vertx.mutiny.core.buffer.Buffer, boolean)
{
io.vertx.core.buffer.Buffer v2;
io.vertx.mutiny.core.buffer.Buffer v0;
io.vertx.core.http.WebSocketFrame v3;
boolean v1;
io.vertx.mutiny.core.http.WebSocketFrame v4;
v0 := @parameter0: io.vertx.mutiny.core.buffer.Buffer;
v1 := @parameter1: boolean;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.buffer.Buffer: io.vertx.core.buffer.Buffer getDelegate()>();
v3 = staticinvoke <io.vertx.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame continuationFrame(io.vertx.core.buffer.Buffer,boolean)>(v2, v1);
v4 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.http.WebSocketFrame newInstance(io.vertx.core.http.WebSocketFrame)>(v3);
return v4;
}
public io.vertx.core.http.WebSocketFrameType type()
{
io.vertx.core.http.WebSocketFrame v1;
io.vertx.core.http.WebSocketFrameType v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrameType type()>();
return v2;
}
public boolean isText()
{
io.vertx.core.http.WebSocketFrame v1;
boolean v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: boolean isText()>();
return v2;
}
public boolean isBinary()
{
io.vertx.core.http.WebSocketFrame v1;
boolean v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: boolean isBinary()>();
return v2;
}
public boolean isContinuation()
{
io.vertx.core.http.WebSocketFrame v1;
boolean v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: boolean isContinuation()>();
return v2;
}
public boolean isClose()
{
io.vertx.core.http.WebSocketFrame v1;
boolean v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: boolean isClose()>();
return v2;
}
public boolean isPing()
{
io.vertx.core.http.WebSocketFrame v1;
boolean v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: boolean isPing()>();
return v2;
}
public java.lang.String textData()
{
java.lang.String v1, v2, v4;
io.vertx.core.http.WebSocketFrame v3;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: java.lang.String cached_0>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: java.lang.String cached_0>;
return v2;
label1:
v3 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.http.WebSocketFrame: java.lang.String textData()>();
v0.<io.vertx.mutiny.core.http.WebSocketFrame: java.lang.String cached_0> = v4;
return v4;
}
public io.vertx.mutiny.core.buffer.Buffer binaryData()
{
io.vertx.core.buffer.Buffer v4;
io.vertx.mutiny.core.buffer.Buffer v1, v2, v5;
io.vertx.core.http.WebSocketFrame v3;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.buffer.Buffer cached_1>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.buffer.Buffer cached_1>;
return v2;
label1:
v3 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.http.WebSocketFrame: io.vertx.core.buffer.Buffer binaryData()>();
v5 = staticinvoke <io.vertx.mutiny.core.buffer.Buffer: io.vertx.mutiny.core.buffer.Buffer newInstance(io.vertx.core.buffer.Buffer)>(v4);
v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.mutiny.core.buffer.Buffer cached_1> = v5;
return v5;
}
public boolean isFinal()
{
io.vertx.core.http.WebSocketFrame v1;
boolean v2;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: boolean isFinal()>();
return v2;
}
public short closeStatusCode()
{
short v2;
io.vertx.core.http.WebSocketFrame v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: short closeStatusCode()>();
return v2;
}
public java.lang.String closeReason()
{
java.lang.String v2;
io.vertx.core.http.WebSocketFrame v1;
io.vertx.mutiny.core.http.WebSocketFrame v0;
v0 := @this: io.vertx.mutiny.core.http.WebSocketFrame;
v1 = v0.<io.vertx.mutiny.core.http.WebSocketFrame: io.vertx.core.http.WebSocketFrame delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.WebSocketFrame: java.lang.String closeReason()>();
return v2;
}
public static io.vertx.mutiny.core.http.WebSocketFrame newInstance(io.vertx.core.http.WebSocketFrame)
{
io.vertx.core.http.WebSocketFrame v0;
io.vertx.mutiny.core.http.WebSocketFrame v1;
v0 := @parameter0: io.vertx.core.http.WebSocketFrame;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.http.WebSocketFrame;
specialinvoke v1.<io.vertx.mutiny.core.http.WebSocketFrame: void <init>(io.vertx.core.http.WebSocketFrame)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame$lambda_static_0__1697: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.http.WebSocketFrame$getDelegate__1698: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.http.WebSocketFrame: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}