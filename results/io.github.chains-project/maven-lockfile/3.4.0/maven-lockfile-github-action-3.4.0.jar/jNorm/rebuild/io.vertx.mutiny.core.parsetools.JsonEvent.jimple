public class io.vertx.mutiny.core.parsetools.JsonEvent extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.parsetools.JsonEvent delegate;
public void <init>(io.vertx.core.parsetools.JsonEvent)
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 := @parameter0: io.vertx.core.parsetools.JsonEvent;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
java.lang.Object v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate> = null;
return;
}
public io.vertx.core.parsetools.JsonEvent getDelegate()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
return v1;
}
public java.lang.String toString()
{
java.lang.String v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
java.lang.Class v2, v3;
java.lang.Object v1;
io.vertx.core.parsetools.JsonEvent v4, v5;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v6;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v5 = v1.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public io.vertx.core.parsetools.JsonEventType type()
{
io.vertx.core.parsetools.JsonEventType v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEventType type()>();
return v2;
}
public java.lang.String fieldName()
{
java.lang.String v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.String fieldName()>();
return v2;
}
public java.lang.Object value()
{
java.lang.Object v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.Object value()>();
return v2;
}
public boolean isNumber()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: boolean isNumber()>();
return v2;
}
public java.lang.Integer integerValue()
{
java.lang.Integer v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.Integer integerValue()>();
return v2;
}
public java.lang.Long longValue()
{
java.lang.Long v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.Long longValue()>();
return v2;
}
public java.lang.Float floatValue()
{
java.lang.Float v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.Float floatValue()>();
return v2;
}
public java.lang.Double doubleValue()
{
java.lang.Double v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.Double doubleValue()>();
return v2;
}
public boolean isBoolean()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: boolean isBoolean()>();
return v2;
}
public java.lang.Boolean booleanValue()
{
java.lang.Boolean v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.Boolean booleanValue()>();
return v2;
}
public boolean isString()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: boolean isString()>();
return v2;
}
public java.lang.String stringValue()
{
java.lang.String v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.lang.String stringValue()>();
return v2;
}
public io.vertx.mutiny.core.buffer.Buffer binaryValue()
{
io.vertx.core.buffer.Buffer v2;
io.vertx.mutiny.core.buffer.Buffer v3;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: io.vertx.core.buffer.Buffer binaryValue()>();
v3 = staticinvoke <io.vertx.mutiny.core.buffer.Buffer: io.vertx.mutiny.core.buffer.Buffer newInstance(io.vertx.core.buffer.Buffer)>(v2);
return v3;
}
public boolean isNull()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: boolean isNull()>();
return v2;
}
public boolean isObject()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: boolean isObject()>();
return v2;
}
public io.vertx.core.json.JsonObject objectValue()
{
io.vertx.core.json.JsonObject v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: io.vertx.core.json.JsonObject objectValue()>();
return v2;
}
public boolean isArray()
{
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
boolean v2;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: boolean isArray()>();
return v2;
}
public io.vertx.core.json.JsonArray arrayValue()
{
io.vertx.core.json.JsonArray v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: io.vertx.core.json.JsonArray arrayValue()>();
return v2;
}
public java.lang.Object mapTo(java.lang.Class)
{
io.smallrye.mutiny.vertx.TypeArg v2;
java.lang.Class v1, v4;
java.lang.Object v5, v6;
io.vertx.core.parsetools.JsonEvent v3;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <io.smallrye.mutiny.vertx.TypeArg: io.smallrye.mutiny.vertx.TypeArg of(java.lang.Class)>(v1);
v3 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v4 = staticinvoke <io.smallrye.mutiny.vertx.MutinyHelper: java.lang.Class unwrap(java.lang.Class)>(v1);
v5 = interfaceinvoke v3.<io.vertx.core.parsetools.JsonEvent: java.lang.Object mapTo(java.lang.Class)>(v4);
v6 = virtualinvoke v2.<io.smallrye.mutiny.vertx.TypeArg: java.lang.Object wrap(java.lang.Object)>(v5);
return v6;
}
public java.time.Instant instantValue()
{
java.time.Instant v2;
io.vertx.core.parsetools.JsonEvent v1;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.parsetools.JsonEvent: java.time.Instant instantValue()>();
return v2;
}
public java.lang.Object mapTo(com.fasterxml.jackson.core.type.TypeReference)
{
java.lang.Object v3;
com.fasterxml.jackson.core.type.TypeReference v1;
io.vertx.core.parsetools.JsonEvent v2;
io.vertx.mutiny.core.parsetools.JsonEvent v0;
v0 := @this: io.vertx.mutiny.core.parsetools.JsonEvent;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
v2 = v0.<io.vertx.mutiny.core.parsetools.JsonEvent: io.vertx.core.parsetools.JsonEvent delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.parsetools.JsonEvent: java.lang.Object mapTo(com.fasterxml.jackson.core.type.TypeReference)>(v1);
return v3;
}
public static io.vertx.mutiny.core.parsetools.JsonEvent newInstance(io.vertx.core.parsetools.JsonEvent)
{
io.vertx.core.parsetools.JsonEvent v0;
io.vertx.mutiny.core.parsetools.JsonEvent v1;
v0 := @parameter0: io.vertx.core.parsetools.JsonEvent;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.parsetools.JsonEvent;
specialinvoke v1.<io.vertx.mutiny.core.parsetools.JsonEvent: void <init>(io.vertx.core.parsetools.JsonEvent)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonEvent$lambda_static_0__1986: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.parsetools.JsonEvent$getDelegate__1987: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.parsetools.JsonEvent: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}