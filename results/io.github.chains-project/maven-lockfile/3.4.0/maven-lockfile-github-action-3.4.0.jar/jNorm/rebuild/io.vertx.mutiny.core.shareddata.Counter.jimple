public class io.vertx.mutiny.core.shareddata.Counter extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.shareddata.Counter delegate;
public void <init>(io.vertx.core.shareddata.Counter)
{
io.vertx.core.shareddata.Counter v1;
io.vertx.mutiny.core.shareddata.Counter v0;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: io.vertx.core.shareddata.Counter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.shareddata.Counter v0;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate> = null;
return;
}
public io.vertx.core.shareddata.Counter getDelegate()
{
io.vertx.core.shareddata.Counter v1;
io.vertx.mutiny.core.shareddata.Counter v0;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate>;
return v1;
}
public java.lang.String toString()
{
io.vertx.core.shareddata.Counter v1;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.String v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.shareddata.Counter v0;
io.vertx.core.shareddata.Counter v4, v5;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate>;
v5 = v1.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.core.shareddata.Counter v1;
io.vertx.mutiny.core.shareddata.Counter v0;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = v0.<io.vertx.mutiny.core.shareddata.Counter: io.vertx.core.shareddata.Counter delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public io.smallrye.mutiny.Uni get()
{
java.util.function.Consumer v1;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_get_1__2217: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter)>(v0);
v2 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v1);
return v2;
}
public java.lang.Long getAndAwait()
{
io.smallrye.mutiny.groups.UniAwait v2;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni get()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public void getAndForget()
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni get()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public io.smallrye.mutiny.Uni incrementAndGet()
{
java.util.function.Consumer v1;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_incrementAndGet_2__2218: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter)>(v0);
v2 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v1);
return v2;
}
public java.lang.Long incrementAndGetAndAwait()
{
io.smallrye.mutiny.groups.UniAwait v2;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni incrementAndGet()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public void incrementAndGetAndForget()
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni incrementAndGet()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public io.smallrye.mutiny.Uni getAndIncrement()
{
java.util.function.Consumer v1;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_getAndIncrement_3__2219: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter)>(v0);
v2 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v1);
return v2;
}
public java.lang.Long getAndIncrementAndAwait()
{
io.smallrye.mutiny.groups.UniAwait v2;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni getAndIncrement()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public void getAndIncrementAndForget()
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni getAndIncrement()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public io.smallrye.mutiny.Uni decrementAndGet()
{
java.util.function.Consumer v1;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_decrementAndGet_4__2220: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter)>(v0);
v2 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v1);
return v2;
}
public java.lang.Long decrementAndGetAndAwait()
{
io.smallrye.mutiny.groups.UniAwait v2;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni decrementAndGet()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public void decrementAndGetAndForget()
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni decrementAndGet()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public io.smallrye.mutiny.Uni addAndGet(long)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.Counter v0;
long v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_addAndGet_5__2221: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter,long)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.Long addAndGetAndAwait(long)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v4;
long v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni addAndGet(long)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void addAndGetAndForget(long)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
long v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni addAndGet(long)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getAndAdd(long)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.Counter v0;
long v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_getAndAdd_6__2222: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter,long)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.Long getAndAddAndAwait(long)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v4;
long v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni getAndAdd(long)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getAndAddAndForget(long)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
long v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni getAndAdd(long)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni compareAndSet(long, long)
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.Counter v0;
long v1, v2;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_compareAndSet_7__2223: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.Counter,long,long)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public java.lang.Boolean compareAndSetAndAwait(long, long)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.mutiny.core.shareddata.Counter v0;
java.lang.Object v5;
long v1, v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni compareAndSet(long,long)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void compareAndSetAndForget(long, long)
{
java.util.function.Consumer v5;
io.vertx.mutiny.core.shareddata.Counter v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
long v1, v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.Counter;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.Uni compareAndSet(long,long)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public static io.vertx.mutiny.core.shareddata.Counter newInstance(io.vertx.core.shareddata.Counter)
{
io.vertx.core.shareddata.Counter v0;
io.vertx.mutiny.core.shareddata.Counter v1;
v0 := @parameter0: io.vertx.core.shareddata.Counter;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.shareddata.Counter;
specialinvoke v1.<io.vertx.mutiny.core.shareddata.Counter: void <init>(io.vertx.core.shareddata.Counter)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$lambda_static_0__2224: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.Counter$getDelegate__2225: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.shareddata.Counter: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}