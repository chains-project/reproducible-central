public class io.vertx.mutiny.core.shareddata.SharedData extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.shareddata.SharedData delegate;
public void <init>(io.vertx.core.shareddata.SharedData)
{
io.vertx.mutiny.core.shareddata.SharedData v0;
io.vertx.core.shareddata.SharedData v1;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: io.vertx.core.shareddata.SharedData;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v1;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.shareddata.SharedData v0;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate> = null;
return;
}
public io.vertx.core.shareddata.SharedData getDelegate()
{
io.vertx.mutiny.core.shareddata.SharedData v0;
io.vertx.core.shareddata.SharedData v1;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 = v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate>;
return v1;
}
public java.lang.String toString()
{
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v2;
io.vertx.core.shareddata.SharedData v1;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 = v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Class v2, v3;
java.lang.Object v1;
io.vertx.core.shareddata.SharedData v4, v5;
boolean v6;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate>;
v5 = v1.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.vertx.core.shareddata.SharedData v1;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 = v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public io.smallrye.mutiny.Uni getClusterWideMap(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getClusterWideMap_3__2226: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.AsyncMap getClusterWideMapAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getClusterWideMap(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getClusterWideMapAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getClusterWideMap(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getAsyncMap(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getAsyncMap_6__2227: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.AsyncMap getAsyncMapAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getAsyncMap(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getAsyncMapAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getAsyncMap(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getLocalAsyncMap(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getLocalAsyncMap_9__2228: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.AsyncMap getLocalAsyncMapAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalAsyncMap(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getLocalAsyncMapAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalAsyncMap(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getLock(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getLock_12__2229: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.Lock getLockAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLock(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getLockAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLock(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getLockWithTimeout(java.lang.String, long)
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
long v2;
java.lang.String v1;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getLockWithTimeout_15__2230: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String,long)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public io.vertx.mutiny.core.shareddata.Lock getLockWithTimeoutAndAwait(java.lang.String, long)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v5;
long v2;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLockWithTimeout(java.lang.String,long)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void getLockWithTimeoutAndForget(java.lang.String, long)
{
java.util.function.Consumer v5;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
long v2;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLockWithTimeout(java.lang.String,long)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public io.smallrye.mutiny.Uni getLocalLock(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getLocalLock_18__2231: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.Lock getLocalLockAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalLock(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getLocalLockAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalLock(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getLocalLockWithTimeout(java.lang.String, long)
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
long v2;
java.lang.String v1;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getLocalLockWithTimeout_21__2232: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String,long)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public io.vertx.mutiny.core.shareddata.Lock getLocalLockWithTimeoutAndAwait(java.lang.String, long)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v5;
long v2;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalLockWithTimeout(java.lang.String,long)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void getLocalLockWithTimeoutAndForget(java.lang.String, long)
{
java.util.function.Consumer v5;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
long v2;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalLockWithTimeout(java.lang.String,long)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public io.smallrye.mutiny.Uni getCounter(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getCounter_24__2233: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.Counter getCounterAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getCounter(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getCounterAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getCounter(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni getLocalCounter(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_getLocalCounter_27__2234: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.shareddata.SharedData,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public io.vertx.mutiny.core.shareddata.Counter getLocalCounterAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalCounter(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void getLocalCounterAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.shareddata.SharedData v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.Uni getLocalCounter(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.vertx.mutiny.core.shareddata.LocalMap getLocalMap(java.lang.String)
{
io.vertx.core.shareddata.LocalMap v3;
io.vertx.mutiny.core.shareddata.LocalMap v6;
io.smallrye.mutiny.vertx.TypeArg v4, v5;
io.vertx.mutiny.core.shareddata.SharedData v0;
java.lang.String v1;
io.vertx.core.shareddata.SharedData v2;
v0 := @this: io.vertx.mutiny.core.shareddata.SharedData;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.shareddata.SharedData: io.vertx.core.shareddata.SharedData delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.shareddata.SharedData: io.vertx.core.shareddata.LocalMap getLocalMap(java.lang.String)>(v1);
v4 = staticinvoke <io.smallrye.mutiny.vertx.TypeArg: io.smallrye.mutiny.vertx.TypeArg 'unknown'()>();
v5 = staticinvoke <io.smallrye.mutiny.vertx.TypeArg: io.smallrye.mutiny.vertx.TypeArg 'unknown'()>();
v6 = staticinvoke <io.vertx.mutiny.core.shareddata.LocalMap: io.vertx.mutiny.core.shareddata.LocalMap newInstance(io.vertx.core.shareddata.LocalMap,io.smallrye.mutiny.vertx.TypeArg,io.smallrye.mutiny.vertx.TypeArg)>(v3, v4, v5);
return v6;
}
public static io.vertx.mutiny.core.shareddata.SharedData newInstance(io.vertx.core.shareddata.SharedData)
{
io.vertx.mutiny.core.shareddata.SharedData v1;
io.vertx.core.shareddata.SharedData v0;
v0 := @parameter0: io.vertx.core.shareddata.SharedData;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.shareddata.SharedData;
specialinvoke v1.<io.vertx.mutiny.core.shareddata.SharedData: void <init>(io.vertx.core.shareddata.SharedData)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$lambda_static_0__2253: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData$getDelegate__2254: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.shareddata.SharedData: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}