public final enum class io.vertx.uritemplate.impl.UriTemplateImpl$Operator extends java.lang.Enum
{
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator SIMPLE_STRING_EXPANSION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator RESERVED_EXPANSION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator LABEL_EXPANSION_WITH_DOT_PREFIX;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator PATH_SEGMENT_EXPANSION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator PATH_STYLE_PARAMETER_EXPANSION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator FORM_STYLE_QUERY_EXPANSION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator FORM_STYLE_QUERY_CONTINUATION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator FRAGMENT_EXPANSION;
public static final enum io.vertx.uritemplate.impl.UriTemplateImpl$Operator FUTURE;
private final io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so;
private static final io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] $VALUES;
public static io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] values()
{
io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] v0;
java.lang.Object v1;
v0 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.vertx.uritemplate.impl.UriTemplateImpl$Operator valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/vertx/uritemplate/impl/UriTemplateImpl$Operator;", v0);
return v1;
}
private void <init>(java.lang.String, int, io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v3;
int v2;
java.lang.String v1;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so> = v3;
return;
}
void expand(java.util.List, io.vertx.uritemplate.Variables, boolean, java.lang.StringBuilder)
{
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0;
io.vertx.uritemplate.Variables v2;
boolean v14, v21, v24, v25, v28, v3, v7;
java.util.List v1, v20;
java.lang.StringBuilder v4;
java.util.ArrayList v5;
int v15, v16, v17, v18, v22, v26, v30;
java.lang.String v12, v13, v19, v31, v9;
java.util.NoSuchElementException v11;
java.lang.UnsupportedOperationException v29;
java.util.Iterator v6;
java.lang.IllegalArgumentException v23, v27;
java.lang.Object v10, v8;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 := @parameter0: java.util.List;
v2 := @parameter1: io.vertx.uritemplate.Variables;
v3 := @parameter2: boolean;
v4 := @parameter3: java.lang.StringBuilder;
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
v6 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label01:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label10;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: java.lang.String varname>;
v10 = interfaceinvoke v2.<io.vertx.uritemplate.Variables: java.lang.Object get(java.lang.String)>(v9);
if v10 != null goto label02;
if v3 != 0 goto label01;
v11 = new java.util.NoSuchElementException;
v12 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: java.lang.String varname>;
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Variable \u0001 is missing");
specialinvoke v11.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v13);
throw v11;
label02:
v14 = v10 instanceof java.lang.String;
if v14 == 0 goto label04;
v15 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: int maxLength>;
if v15 <= 0 goto label03;
v16 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: int maxLength>;
v17 = virtualinvoke v10.<java.lang.String: int length()>();
if v16 >= v17 goto label03;
v18 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: int maxLength>;
v10 = virtualinvoke v10.<java.lang.String: java.lang.String substring(int,int)>(0, v18);
label03:
v19 = virtualinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: java.lang.String format(io.vertx.uritemplate.impl.UriTemplateImpl$Varspec,java.lang.String)>(v8, v10);
v20 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v19);
goto label09;
label04:
v21 = v10 instanceof java.util.List;
if v21 == 0 goto label06;
v22 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: int maxLength>;
if v22 <= 0 goto label05;
v23 = new java.lang.IllegalArgumentException;
specialinvoke v23.<java.lang.IllegalArgumentException: void <init>()>();
throw v23;
label05:
v24 = interfaceinvoke v10.<java.util.List: boolean isEmpty()>();
if v24 != 0 goto label01;
v20 = virtualinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: java.util.List format(io.vertx.uritemplate.impl.UriTemplateImpl$Varspec,java.util.List)>(v8, v10);
goto label09;
label06:
v25 = v10 instanceof java.util.Map;
if v25 == 0 goto label08;
v26 = v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: int maxLength>;
if v26 <= 0 goto label07;
v27 = new java.lang.IllegalArgumentException;
specialinvoke v27.<java.lang.IllegalArgumentException: void <init>()>();
throw v27;
label07:
v28 = interfaceinvoke v10.<java.util.Map: boolean isEmpty()>();
if v28 != 0 goto label01;
v20 = virtualinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: java.util.List format(io.vertx.uritemplate.impl.UriTemplateImpl$Varspec,java.util.Map)>(v8, v10);
goto label09;
label08:
v29 = new java.lang.UnsupportedOperationException;
specialinvoke v29.<java.lang.UnsupportedOperationException: void <init>()>();
throw v29;
label09:
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v20);
goto label01;
label10:
v30 = interfaceinvoke v5.<java.util.List: int size()>();
if v30 <= 0 goto label11;
v31 = virtualinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: java.lang.String format(java.util.List)>(v5);
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v31);
label11:
return;
}
java.lang.String format(io.vertx.uritemplate.impl.UriTemplateImpl$Varspec, java.lang.String)
{
io.vertx.uritemplate.impl.UriTemplateImpl$Varspec v1;
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v3, v4, v7;
java.lang.String v2, v5, v6, v8, v9;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 := @parameter0: io.vertx.uritemplate.impl.UriTemplateImpl$Varspec;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v4 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v5 = v1.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: java.lang.String decoded>;
v6 = virtualinvoke v4.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String encodeName(java.lang.String)>(v5);
v7 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v8 = virtualinvoke v7.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String encodeValue(java.lang.String)>(v2);
v9 = virtualinvoke v3.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String join(boolean,java.lang.String,java.lang.String)>(0, v6, v8);
return v9;
}
java.util.List format(io.vertx.uritemplate.impl.UriTemplateImpl$Varspec, java.util.List)
{
java.util.function.Function v15, v5;
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v10, v14, v9;
java.lang.String v11, v12, v19;
java.util.stream.Collector v17, v7;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0;
boolean v3;
io.vertx.uritemplate.impl.UriTemplateImpl$Varspec v1;
java.util.List v2, v20;
java.util.stream.Stream v13, v16, v4, v6;
java.lang.Object v18, v8;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 := @parameter0: io.vertx.uritemplate.impl.UriTemplateImpl$Varspec;
v2 := @parameter1: java.util.List;
v3 = v1.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: boolean exploded>;
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v5 = staticinvoke <io.vertx.uritemplate.impl.UriTemplateImpl$Operator$lambda_format_0__856: java.util.function.Function bootstrap$(io.vertx.uritemplate.impl.UriTemplateImpl$Operator,io.vertx.uritemplate.impl.UriTemplateImpl$Varspec)>(v0, v1);
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v5);
v7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v7);
return v8;
label1:
v9 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v10 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v11 = v1.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: java.lang.String decoded>;
v12 = virtualinvoke v10.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String encodeName(java.lang.String)>(v11);
v13 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v14 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
virtualinvoke v14.<java.lang.Object: java.lang.Class getClass()>();
v15 = staticinvoke <io.vertx.uritemplate.impl.UriTemplateImpl$Operator$encodeValue__855: java.util.function.Function bootstrap$(io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>(v14);
v16 = interfaceinvoke v13.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v15);
v17 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(",");
v18 = interfaceinvoke v16.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v17);
v19 = virtualinvoke v9.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String join(boolean,java.lang.String,java.lang.String)>(0, v12, v18);
v20 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v19);
return v20;
}
java.util.List format(io.vertx.uritemplate.impl.UriTemplateImpl$Varspec, java.util.Map)
{
java.util.function.Function v16, v6;
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v10, v11;
java.util.Map v2;
java.lang.String v12, v13, v20;
java.util.stream.Collector v18, v8;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0;
boolean v3;
io.vertx.uritemplate.impl.UriTemplateImpl$Varspec v1;
java.util.Set v14, v4;
java.util.List v21;
java.util.stream.Stream v15, v17, v5, v7;
java.lang.Object v19, v9;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 := @parameter0: io.vertx.uritemplate.impl.UriTemplateImpl$Varspec;
v2 := @parameter1: java.util.Map;
v3 = v1.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: boolean exploded>;
if v3 == 0 goto label1;
v4 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.stream.Stream stream()>();
v6 = staticinvoke <io.vertx.uritemplate.impl.UriTemplateImpl$Operator$lambda_format_1__858: java.util.function.Function bootstrap$(io.vertx.uritemplate.impl.UriTemplateImpl$Operator)>(v0);
v7 = interfaceinvoke v5.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v6);
v8 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v8);
return v9;
label1:
v10 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v11 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v12 = v1.<io.vertx.uritemplate.impl.UriTemplateImpl$Varspec: java.lang.String varname>;
v13 = virtualinvoke v11.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String encodeName(java.lang.String)>(v12);
v14 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v15 = interfaceinvoke v14.<java.util.Set: java.util.stream.Stream stream()>();
v16 = staticinvoke <io.vertx.uritemplate.impl.UriTemplateImpl$Operator$lambda_format_2__857: java.util.function.Function bootstrap$(io.vertx.uritemplate.impl.UriTemplateImpl$Operator)>(v0);
v17 = interfaceinvoke v15.<java.util.stream.Stream: java.util.stream.Stream flatMap(java.util.function.Function)>(v16);
v18 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence)>(",");
v19 = interfaceinvoke v17.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v18);
v20 = virtualinvoke v10.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String join(boolean,java.lang.String,java.lang.String)>(0, v13, v19);
v21 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v20);
return v21;
}
java.lang.String format(java.util.List)
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v3, v5;
java.util.List v1;
java.util.stream.Stream v2;
java.lang.Object v8;
java.lang.String v4, v6;
java.util.stream.Collector v7;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 := @parameter0: java.util.List;
v2 = interfaceinvoke v1.<java.util.List: java.util.stream.Stream stream()>();
v3 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v4 = v3.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String delimiter>;
v5 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator so>;
v6 = v5.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String prefix>;
v7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>(v4, v6, "");
v8 = interfaceinvoke v2.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v7);
return v8;
}
private static io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] $values()
{
io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] v0;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (io.vertx.uritemplate.impl.UriTemplateImpl$Operator)[9];
v1 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator SIMPLE_STRING_EXPANSION>;
v0[0] = v1;
v2 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator RESERVED_EXPANSION>;
v0[1] = v2;
v3 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator LABEL_EXPANSION_WITH_DOT_PREFIX>;
v0[2] = v3;
v4 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator PATH_SEGMENT_EXPANSION>;
v0[3] = v4;
v5 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator PATH_STYLE_PARAMETER_EXPANSION>;
v0[4] = v5;
v6 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FORM_STYLE_QUERY_EXPANSION>;
v0[5] = v6;
v7 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FORM_STYLE_QUERY_CONTINUATION>;
v0[6] = v7;
v8 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FRAGMENT_EXPANSION>;
v0[7] = v8;
v9 = <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FUTURE>;
v0[8] = v9;
return v0;
}
static void <clinit>()
{
io.vertx.uritemplate.impl.UriTemplateImpl$ReservedExpansion v3;
io.vertx.uritemplate.impl.UriTemplateImpl$PathStyleParameterExpansion v9;
io.vertx.uritemplate.impl.UriTemplateImpl$Future v17;
io.vertx.uritemplate.impl.UriTemplateImpl$FragmentExpansion v15;
io.vertx.uritemplate.impl.UriTemplateImpl$PathSegmentExpansion v7;
io.vertx.uritemplate.impl.UriTemplateImpl$FormStyleQueryExpansion v11;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator v0, v10, v12, v14, v16, v2, v4, v6, v8;
io.vertx.uritemplate.impl.UriTemplateImpl$SimpleStringExpansion v1;
io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] v18;
io.vertx.uritemplate.impl.UriTemplateImpl$LabelExpansionWithDotPrefix v5;
io.vertx.uritemplate.impl.UriTemplateImpl$FormStyleQueryContinuation v13;
v0 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v1 = new io.vertx.uritemplate.impl.UriTemplateImpl$SimpleStringExpansion;
specialinvoke v1.<io.vertx.uritemplate.impl.UriTemplateImpl$SimpleStringExpansion: void <init>()>();
specialinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("SIMPLE_STRING_EXPANSION", 0, v1);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator SIMPLE_STRING_EXPANSION> = v0;
v2 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v3 = new io.vertx.uritemplate.impl.UriTemplateImpl$ReservedExpansion;
specialinvoke v3.<io.vertx.uritemplate.impl.UriTemplateImpl$ReservedExpansion: void <init>()>();
specialinvoke v2.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("RESERVED_EXPANSION", 1, v3);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator RESERVED_EXPANSION> = v2;
v4 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v5 = new io.vertx.uritemplate.impl.UriTemplateImpl$LabelExpansionWithDotPrefix;
specialinvoke v5.<io.vertx.uritemplate.impl.UriTemplateImpl$LabelExpansionWithDotPrefix: void <init>()>();
specialinvoke v4.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("LABEL_EXPANSION_WITH_DOT_PREFIX", 2, v5);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator LABEL_EXPANSION_WITH_DOT_PREFIX> = v4;
v6 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v7 = new io.vertx.uritemplate.impl.UriTemplateImpl$PathSegmentExpansion;
specialinvoke v7.<io.vertx.uritemplate.impl.UriTemplateImpl$PathSegmentExpansion: void <init>()>();
specialinvoke v6.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("PATH_SEGMENT_EXPANSION", 3, v7);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator PATH_SEGMENT_EXPANSION> = v6;
v8 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v9 = new io.vertx.uritemplate.impl.UriTemplateImpl$PathStyleParameterExpansion;
specialinvoke v9.<io.vertx.uritemplate.impl.UriTemplateImpl$PathStyleParameterExpansion: void <init>()>();
specialinvoke v8.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("PATH_STYLE_PARAMETER_EXPANSION", 4, v9);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator PATH_STYLE_PARAMETER_EXPANSION> = v8;
v10 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v11 = new io.vertx.uritemplate.impl.UriTemplateImpl$FormStyleQueryExpansion;
specialinvoke v11.<io.vertx.uritemplate.impl.UriTemplateImpl$FormStyleQueryExpansion: void <init>()>();
specialinvoke v10.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("FORM_STYLE_QUERY_EXPANSION", 5, v11);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FORM_STYLE_QUERY_EXPANSION> = v10;
v12 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v13 = new io.vertx.uritemplate.impl.UriTemplateImpl$FormStyleQueryContinuation;
specialinvoke v13.<io.vertx.uritemplate.impl.UriTemplateImpl$FormStyleQueryContinuation: void <init>()>();
specialinvoke v12.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("FORM_STYLE_QUERY_CONTINUATION", 6, v13);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FORM_STYLE_QUERY_CONTINUATION> = v12;
v14 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v15 = new io.vertx.uritemplate.impl.UriTemplateImpl$FragmentExpansion;
specialinvoke v15.<io.vertx.uritemplate.impl.UriTemplateImpl$FragmentExpansion: void <init>()>();
specialinvoke v14.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("FRAGMENT_EXPANSION", 7, v15);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FRAGMENT_EXPANSION> = v14;
v16 = new io.vertx.uritemplate.impl.UriTemplateImpl$Operator;
v17 = new io.vertx.uritemplate.impl.UriTemplateImpl$Future;
specialinvoke v17.<io.vertx.uritemplate.impl.UriTemplateImpl$Future: void <init>()>();
specialinvoke v16.<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: void <init>(java.lang.String,int,io.vertx.uritemplate.impl.UriTemplateImpl$SOperator)>("FUTURE", 8, v17);
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator FUTURE> = v16;
v18 = staticinvoke <io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] $values()>();
<io.vertx.uritemplate.impl.UriTemplateImpl$Operator: io.vertx.uritemplate.impl.UriTemplateImpl$Operator[] $VALUES> = v18;
return;
}
}