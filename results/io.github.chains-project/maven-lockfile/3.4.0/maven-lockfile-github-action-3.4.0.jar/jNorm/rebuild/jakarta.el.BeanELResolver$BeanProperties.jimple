final class jakarta.el.BeanELResolver$BeanProperties extends java.lang.Object
{
private final java.util.Map propertyMap;
public void <init>(java.lang.Class)
{
jakarta.el.BeanELResolver$BeanProperty v10;
java.beans.PropertyDescriptor[] v4;
java.util.HashMap v2;
jakarta.el.ELException v12;
java.beans.IntrospectionException v11;
java.beans.PropertyDescriptor v7;
java.beans.BeanInfo v3;
java.util.Map v8;
int v5, v6;
jakarta.el.BeanELResolver$BeanProperties v0;
java.lang.Class v1;
java.lang.String v9;
v0 := @this: jakarta.el.BeanELResolver$BeanProperties;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<jakarta.el.BeanELResolver$BeanProperties: java.util.Map propertyMap> = v2;
label1:
v3 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>(v1);
v4 = interfaceinvoke v3.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();
v5 = lengthof v4;
v6 = 0;
label2:
if v6 >= v5 goto label3;
v7 = v4[v6];
v8 = v0.<jakarta.el.BeanELResolver$BeanProperties: java.util.Map propertyMap>;
v9 = virtualinvoke v7.<java.beans.PropertyDescriptor: java.lang.String getName()>();
v10 = new jakarta.el.BeanELResolver$BeanProperty;
specialinvoke v10.<jakarta.el.BeanELResolver$BeanProperty: void <init>(java.lang.Class,java.beans.PropertyDescriptor)>(v1, v7);
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v10);
v6 = v6 + 1;
goto label2;
label3:
specialinvoke v0.<jakarta.el.BeanELResolver$BeanProperties: void populateFromInterfaces(java.lang.Class,java.lang.Class)>(v1, v1);
label4:
goto label6;
label5:
v11 := @caughtexception;
v12 = new jakarta.el.ELException;
specialinvoke v12.<jakarta.el.ELException: void <init>(java.lang.Throwable)>(v11);
throw v12;
label6:
return;
catch java.beans.IntrospectionException from label1 to label4 with label5;
}
private void populateFromInterfaces(java.lang.Class, java.lang.Class) throws java.beans.IntrospectionException
{
jakarta.el.BeanELResolver$BeanProperty v18;
java.beans.PropertyDescriptor[] v9;
java.beans.BeanInfo v8;
java.util.Map v13, v16;
int v10, v11, v4, v5, v6;
java.lang.String v14, v17;
boolean v15;
java.lang.Class[] v3;
java.beans.PropertyDescriptor v12;
jakarta.el.BeanELResolver$BeanProperties v0;
java.lang.Class v1, v19, v2, v7;
v0 := @this: jakarta.el.BeanELResolver$BeanProperties;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = virtualinvoke v2.<java.lang.Class: java.lang.Class[] getInterfaces()>();
v4 = lengthof v3;
if v4 <= 0 goto label5;
v5 = lengthof v3;
v6 = 0;
label1:
if v6 >= v5 goto label5;
v7 = v3[v6];
v8 = staticinvoke <java.beans.Introspector: java.beans.BeanInfo getBeanInfo(java.lang.Class)>(v7);
v9 = interfaceinvoke v8.<java.beans.BeanInfo: java.beans.PropertyDescriptor[] getPropertyDescriptors()>();
v10 = lengthof v9;
v11 = 0;
label2:
if v11 >= v10 goto label4;
v12 = v9[v11];
v13 = v0.<jakarta.el.BeanELResolver$BeanProperties: java.util.Map propertyMap>;
v14 = virtualinvoke v12.<java.beans.PropertyDescriptor: java.lang.String getName()>();
v15 = interfaceinvoke v13.<java.util.Map: boolean containsKey(java.lang.Object)>(v14);
if v15 != 0 goto label3;
v16 = v0.<jakarta.el.BeanELResolver$BeanProperties: java.util.Map propertyMap>;
v17 = virtualinvoke v12.<java.beans.PropertyDescriptor: java.lang.String getName()>();
v18 = new jakarta.el.BeanELResolver$BeanProperty;
specialinvoke v18.<jakarta.el.BeanELResolver$BeanProperty: void <init>(java.lang.Class,java.beans.PropertyDescriptor)>(v1, v12);
interfaceinvoke v16.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v17, v18);
label3:
v11 = v11 + 1;
goto label2;
label4:
v6 = v6 + 1;
goto label1;
label5:
v19 = virtualinvoke v2.<java.lang.Class: java.lang.Class getSuperclass()>();
if v19 == null goto label6;
specialinvoke v0.<jakarta.el.BeanELResolver$BeanProperties: void populateFromInterfaces(java.lang.Class,java.lang.Class)>(v1, v19);
label6:
return;
}
public jakarta.el.BeanELResolver$BeanProperty getBeanProperty(java.lang.String)
{
java.util.Map v2;
jakarta.el.BeanELResolver$BeanProperties v0;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: jakarta.el.BeanELResolver$BeanProperties;
v1 := @parameter0: java.lang.String;
v2 = v0.<jakarta.el.BeanELResolver$BeanProperties: java.util.Map propertyMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
}