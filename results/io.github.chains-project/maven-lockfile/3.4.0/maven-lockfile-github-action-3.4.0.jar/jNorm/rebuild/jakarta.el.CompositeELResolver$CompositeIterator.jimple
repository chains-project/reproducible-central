class jakarta.el.CompositeELResolver$CompositeIterator extends java.lang.Object implements java.util.Iterator
{
jakarta.el.ELResolver[] resolvers;
int size;
int index;
java.util.Iterator propertyIter;
jakarta.el.ELContext context;
java.lang.Object base;
void <init>(jakarta.el.ELResolver[], int, jakarta.el.ELContext, java.lang.Object)
{
jakarta.el.CompositeELResolver$CompositeIterator v0;
jakarta.el.ELContext v3;
jakarta.el.ELResolver[] v1;
int v2;
java.lang.Object v4;
v0 := @this: jakarta.el.CompositeELResolver$CompositeIterator;
v1 := @parameter0: jakarta.el.ELResolver[];
v2 := @parameter1: int;
v3 := @parameter2: jakarta.el.ELContext;
v4 := @parameter3: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index> = 0;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter> = null;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: jakarta.el.ELResolver[] resolvers> = v1;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: int size> = v2;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: jakarta.el.ELContext context> = v3;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.lang.Object base> = v4;
return;
}
public boolean hasNext()
{
jakarta.el.ELResolver v9;
jakarta.el.ELResolver[] v6;
int v4, v5, v7, v8;
boolean v15, v17, v3;
jakarta.el.ELContext v10;
java.util.Iterator v1, v12, v13, v14, v16, v2;
jakarta.el.CompositeELResolver$CompositeIterator v0;
java.lang.Object v11;
v0 := @this: jakarta.el.CompositeELResolver$CompositeIterator;
v1 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
if v1 == null goto label1;
v2 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 != 0 goto label3;
label1:
v4 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index>;
v5 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: int size>;
if v4 >= v5 goto label2;
v6 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: jakarta.el.ELResolver[] resolvers>;
v7 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index>;
v8 = v7 + 1;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index> = v8;
v9 = v6[v7];
v10 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: jakarta.el.ELContext context>;
v11 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.lang.Object base>;
v12 = virtualinvoke v9.<jakarta.el.ELResolver: java.util.Iterator getFeatureDescriptors(jakarta.el.ELContext,java.lang.Object)>(v10, v11);
v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter> = v12;
v13 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
if v13 == null goto label1;
v14 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
return v15;
label2:
return 0;
label3:
v16 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
v17 = interfaceinvoke v16.<java.util.Iterator: boolean hasNext()>();
return v17;
}
public java.beans.FeatureDescriptor next()
{
jakarta.el.ELResolver v9;
jakarta.el.ELResolver[] v6;
int v4, v5, v7, v8;
boolean v3;
jakarta.el.ELContext v10;
java.util.Iterator v1, v12, v13, v14, v16, v2;
jakarta.el.CompositeELResolver$CompositeIterator v0;
java.lang.Object v11, v15, v17;
v0 := @this: jakarta.el.CompositeELResolver$CompositeIterator;
v1 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
if v1 == null goto label1;
v2 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 != 0 goto label3;
label1:
v4 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index>;
v5 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: int size>;
if v4 >= v5 goto label2;
v6 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: jakarta.el.ELResolver[] resolvers>;
v7 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index>;
v8 = v7 + 1;
v0.<jakarta.el.CompositeELResolver$CompositeIterator: int index> = v8;
v9 = v6[v7];
v10 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: jakarta.el.ELContext context>;
v11 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.lang.Object base>;
v12 = virtualinvoke v9.<jakarta.el.ELResolver: java.util.Iterator getFeatureDescriptors(jakarta.el.ELContext,java.lang.Object)>(v10, v11);
v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter> = v12;
v13 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
if v13 == null goto label1;
v14 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
v15 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
return v15;
label2:
return null;
label3:
v16 = v0.<jakarta.el.CompositeELResolver$CompositeIterator: java.util.Iterator propertyIter>;
v17 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
return v17;
}
public void remove()
{
jakarta.el.CompositeELResolver$CompositeIterator v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: jakarta.el.CompositeELResolver$CompositeIterator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
}