public abstract class jakarta.el.MethodExpression extends jakarta.el.Expression
{
private static final long serialVersionUID;
public void <init>()
{
jakarta.el.MethodExpression v0;
v0 := @this: jakarta.el.MethodExpression;
specialinvoke v0.<jakarta.el.Expression: void <init>()>();
return;
}
public abstract jakarta.el.MethodInfo getMethodInfo(jakarta.el.ELContext);
public abstract java.lang.Object invoke(jakarta.el.ELContext, java.lang.Object[]);
public boolean isParametersProvided()
{
jakarta.el.MethodExpression v0;
v0 := @this: jakarta.el.MethodExpression;
return 0;
}
public jakarta.el.MethodReference getMethodReference(jakarta.el.ELContext)
{
jakarta.el.ELContext v1;
jakarta.el.MethodExpression v0;
java.lang.String v2, v3;
v0 := @this: jakarta.el.MethodExpression;
v1 := @parameter0: jakarta.el.ELContext;
v2 = virtualinvoke v0.<jakarta.el.MethodExpression: java.lang.String getExpressionString()>();
virtualinvoke v1.<jakarta.el.ELContext: void notifyBeforeEvaluation(java.lang.String)>(v2);
v3 = virtualinvoke v0.<jakarta.el.MethodExpression: java.lang.String getExpressionString()>();
virtualinvoke v1.<jakarta.el.ELContext: void notifyAfterEvaluation(java.lang.String)>(v3);
return null;
}
}