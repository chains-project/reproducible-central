public interface  jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder extends java.lang.Object
{
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder type(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder type(jakarta.enterprise.lang.model.declarations.ClassInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder type(jakarta.enterprise.lang.model.types.Type);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder qualifier(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder qualifier(jakarta.enterprise.lang.model.AnnotationInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder qualifier(java.lang.'annotation'.Annotation);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder scope(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder alternative(boolean);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder priority(int);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder name(java.lang.String);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder stereotype(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder stereotype(jakarta.enterprise.lang.model.declarations.ClassInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, boolean);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, boolean[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, int);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, int[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, long);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, long[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, double);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, double[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.String);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.String[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.Enum);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.Enum[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.Class[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.declarations.ClassInfo[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.AnnotationInfo);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.'annotation'.Annotation);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, jakarta.enterprise.lang.model.AnnotationInfo[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder withParam(java.lang.String, java.lang.'annotation'.Annotation[]);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder createWith(java.lang.Class);
public abstract jakarta.enterprise.inject.build.compatible.spi.SyntheticBeanBuilder disposeWith(java.lang.Class);
}