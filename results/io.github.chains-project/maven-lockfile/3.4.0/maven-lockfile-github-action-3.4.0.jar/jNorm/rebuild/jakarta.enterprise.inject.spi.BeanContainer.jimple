public interface  jakarta.enterprise.inject.spi.BeanContainer extends java.lang.Object
{
public abstract java.lang.Object getReference(jakarta.enterprise.inject.spi.Bean, java.lang.reflect.Type, jakarta.enterprise.context.spi.CreationalContext);
public abstract jakarta.enterprise.context.spi.CreationalContext createCreationalContext(jakarta.enterprise.context.spi.Contextual);
public abstract transient java.util.Set getBeans(java.lang.reflect.Type, java.lang.'annotation'.Annotation[]);
public abstract java.util.Set getBeans(java.lang.String);
public abstract jakarta.enterprise.inject.spi.Bean resolve(java.util.Set);
public abstract transient java.util.Set resolveObserverMethods(java.lang.Object, java.lang.'annotation'.Annotation[]);
public abstract transient java.util.List resolveInterceptors(jakarta.enterprise.inject.spi.InterceptionType, java.lang.'annotation'.Annotation[]);
public abstract boolean isScope(java.lang.Class);
public abstract boolean isNormalScope(java.lang.Class);
public abstract boolean isQualifier(java.lang.Class);
public abstract boolean isStereotype(java.lang.Class);
public abstract boolean isInterceptorBinding(java.lang.Class);
public abstract jakarta.enterprise.context.spi.Context getContext(java.lang.Class);
public abstract jakarta.enterprise.event.Event getEvent();
public abstract jakarta.enterprise.inject.Instance createInstance();
}