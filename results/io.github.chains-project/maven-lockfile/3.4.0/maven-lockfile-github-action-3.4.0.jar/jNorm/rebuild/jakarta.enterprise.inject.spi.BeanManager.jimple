public interface  jakarta.enterprise.inject.spi.BeanManager extends java.lang.Object implements jakarta.enterprise.inject.spi.BeanContainer
{
public abstract jakarta.enterprise.inject.spi.Bean getPassivationCapableBean(java.lang.String);
public abstract void validate(jakarta.enterprise.inject.spi.InjectionPoint);
public abstract transient java.util.Set resolveObserverMethods(java.lang.Object, java.lang.'annotation'.Annotation[]);
public abstract transient java.util.List resolveDecorators(java.util.Set, java.lang.'annotation'.Annotation[]);
public abstract boolean isPassivatingScope(java.lang.Class);
public abstract java.util.Set getInterceptorBindingDefinition(java.lang.Class);
public abstract java.util.Set getStereotypeDefinition(java.lang.Class);
public abstract boolean areQualifiersEquivalent(java.lang.'annotation'.Annotation, java.lang.'annotation'.Annotation);
public abstract boolean areInterceptorBindingsEquivalent(java.lang.'annotation'.Annotation, java.lang.'annotation'.Annotation);
public abstract int getQualifierHashCode(java.lang.'annotation'.Annotation);
public abstract int getInterceptorBindingHashCode(java.lang.'annotation'.Annotation);
public abstract jakarta.el.ELResolver getELResolver();
public abstract jakarta.el.ExpressionFactory wrapExpressionFactory(jakarta.el.ExpressionFactory);
public abstract jakarta.enterprise.inject.spi.AnnotatedType createAnnotatedType(java.lang.Class);
public abstract jakarta.enterprise.inject.spi.InjectionTargetFactory getInjectionTargetFactory(jakarta.enterprise.inject.spi.AnnotatedType);
public abstract jakarta.enterprise.inject.spi.ProducerFactory getProducerFactory(jakarta.enterprise.inject.spi.AnnotatedField, jakarta.enterprise.inject.spi.Bean);
public abstract jakarta.enterprise.inject.spi.ProducerFactory getProducerFactory(jakarta.enterprise.inject.spi.AnnotatedMethod, jakarta.enterprise.inject.spi.Bean);
public abstract jakarta.enterprise.inject.spi.BeanAttributes createBeanAttributes(jakarta.enterprise.inject.spi.AnnotatedType);
public abstract jakarta.enterprise.inject.spi.BeanAttributes createBeanAttributes(jakarta.enterprise.inject.spi.AnnotatedMember);
public abstract jakarta.enterprise.inject.spi.Bean createBean(jakarta.enterprise.inject.spi.BeanAttributes, java.lang.Class, jakarta.enterprise.inject.spi.InjectionTargetFactory);
public abstract jakarta.enterprise.inject.spi.Bean createBean(jakarta.enterprise.inject.spi.BeanAttributes, java.lang.Class, jakarta.enterprise.inject.spi.ProducerFactory);
public abstract jakarta.enterprise.inject.spi.InjectionPoint createInjectionPoint(jakarta.enterprise.inject.spi.AnnotatedField);
public abstract jakarta.enterprise.inject.spi.InjectionPoint createInjectionPoint(jakarta.enterprise.inject.spi.AnnotatedParameter);
public abstract jakarta.enterprise.inject.spi.Extension getExtension(java.lang.Class);
public abstract jakarta.enterprise.inject.spi.InterceptionFactory createInterceptionFactory(jakarta.enterprise.context.spi.CreationalContext, java.lang.Class);
public abstract java.lang.Object getInjectableReference(jakarta.enterprise.inject.spi.InjectionPoint, jakarta.enterprise.context.spi.CreationalContext);
}