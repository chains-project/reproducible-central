public interface  jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator extends java.lang.Object
{
public abstract jakarta.enterprise.inject.spi.AnnotatedType getAnnotated();
public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator add(java.lang.'annotation'.Annotation);
public abstract jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator remove(java.util.function.Predicate);
public jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator removeAll()
{
jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator v0, v2;
java.util.function.Predicate v1;
v0 := @this: jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator;
v1 = staticinvoke <jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator$lambda_removeAll_0__2620: java.util.function.Predicate bootstrap$()>();
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator: jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator remove(java.util.function.Predicate)>(v1);
return v2;
}
public abstract java.util.Set methods();
public java.util.stream.Stream filterMethods(java.util.function.Predicate)
{
java.util.stream.Stream v3, v5;
java.util.function.Predicate v1, v4;
java.util.Set v2;
jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator v0;
v0 := @this: jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator;
v1 := @parameter0: java.util.function.Predicate;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator: java.util.Set methods()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.stream.Stream stream()>();
v4 = staticinvoke <jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator$lambda_filterMethods_1__2621: java.util.function.Predicate bootstrap$(java.util.function.Predicate)>(v1);
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v4);
return v5;
}
public abstract java.util.Set fields();
public java.util.stream.Stream filterFields(java.util.function.Predicate)
{
java.util.stream.Stream v3, v5;
java.util.function.Predicate v1, v4;
java.util.Set v2;
jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator v0;
v0 := @this: jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator;
v1 := @parameter0: java.util.function.Predicate;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator: java.util.Set fields()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.stream.Stream stream()>();
v4 = staticinvoke <jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator$lambda_filterFields_2__2622: java.util.function.Predicate bootstrap$(java.util.function.Predicate)>(v1);
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v4);
return v5;
}
public abstract java.util.Set constructors();
public java.util.stream.Stream filterConstructors(java.util.function.Predicate)
{
java.util.stream.Stream v3, v5;
java.util.function.Predicate v1, v4;
java.util.Set v2;
jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator v0;
v0 := @this: jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator;
v1 := @parameter0: java.util.function.Predicate;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator: java.util.Set constructors()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.stream.Stream stream()>();
v4 = staticinvoke <jakarta.enterprise.inject.spi.configurator.AnnotatedTypeConfigurator$lambda_filterConstructors_3__2623: java.util.function.Predicate bootstrap$(java.util.function.Predicate)>(v1);
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v4);
return v5;
}
}