public interface  jakarta.json.JsonArray extends java.lang.Object implements jakarta.json.JsonStructure, java.util.List
{
public abstract jakarta.json.JsonObject getJsonObject(int);
public abstract jakarta.json.JsonArray getJsonArray(int);
public abstract jakarta.json.JsonNumber getJsonNumber(int);
public abstract jakarta.json.JsonString getJsonString(int);
public abstract java.util.List getValuesAs(java.lang.Class);
public java.util.List getValuesAs(java.util.function.Function)
{
java.util.stream.Stream v2, v3;
java.lang.Object v5;
java.util.stream.Collector v4;
jakarta.json.JsonArray v0;
java.util.function.Function v1;
v0 := @this: jakarta.json.JsonArray;
v1 := @parameter0: java.util.function.Function;
v2 = interfaceinvoke v0.<jakarta.json.JsonArray: java.util.stream.Stream stream()>();
v3 = interfaceinvoke v2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v1);
v4 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v4);
return v5;
}
public abstract java.lang.String getString(int);
public abstract java.lang.String getString(int, java.lang.String);
public abstract int getInt(int);
public abstract int getInt(int, int);
public abstract boolean getBoolean(int);
public abstract boolean getBoolean(int, boolean);
public abstract boolean isNull(int);
}