public interface  jakarta.json.JsonPatchBuilder extends java.lang.Object
{
public abstract jakarta.json.JsonPatchBuilder add(java.lang.String, jakarta.json.JsonValue);
public abstract jakarta.json.JsonPatchBuilder add(java.lang.String, java.lang.String);
public abstract jakarta.json.JsonPatchBuilder add(java.lang.String, int);
public abstract jakarta.json.JsonPatchBuilder add(java.lang.String, boolean);
public abstract jakarta.json.JsonPatchBuilder remove(java.lang.String);
public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String, jakarta.json.JsonValue);
public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String, java.lang.String);
public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String, int);
public abstract jakarta.json.JsonPatchBuilder replace(java.lang.String, boolean);
public abstract jakarta.json.JsonPatchBuilder move(java.lang.String, java.lang.String);
public abstract jakarta.json.JsonPatchBuilder copy(java.lang.String, java.lang.String);
public abstract jakarta.json.JsonPatchBuilder test(java.lang.String, jakarta.json.JsonValue);
public abstract jakarta.json.JsonPatchBuilder test(java.lang.String, java.lang.String);
public abstract jakarta.json.JsonPatchBuilder test(java.lang.String, int);
public abstract jakarta.json.JsonPatchBuilder test(java.lang.String, boolean);
public abstract jakarta.json.JsonPatch build();
}