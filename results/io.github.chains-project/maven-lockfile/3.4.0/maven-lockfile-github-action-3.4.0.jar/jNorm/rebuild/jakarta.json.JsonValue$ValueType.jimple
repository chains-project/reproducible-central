public final enum class jakarta.json.JsonValue$ValueType extends java.lang.Enum
{
public static final enum jakarta.json.JsonValue$ValueType ARRAY;
public static final enum jakarta.json.JsonValue$ValueType OBJECT;
public static final enum jakarta.json.JsonValue$ValueType STRING;
public static final enum jakarta.json.JsonValue$ValueType NUMBER;
public static final enum jakarta.json.JsonValue$ValueType TRUE;
public static final enum jakarta.json.JsonValue$ValueType FALSE;
public static final enum jakarta.json.JsonValue$ValueType NULL;
private static final jakarta.json.JsonValue$ValueType[] $VALUES;
public static jakarta.json.JsonValue$ValueType[] values()
{
java.lang.Object v1;
jakarta.json.JsonValue$ValueType[] v0;
v0 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static jakarta.json.JsonValue$ValueType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljakarta/json/JsonValue$ValueType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
jakarta.json.JsonValue$ValueType v0;
java.lang.String v1;
v0 := @this: jakarta.json.JsonValue$ValueType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static jakarta.json.JsonValue$ValueType[] $values()
{
jakarta.json.JsonValue$ValueType[] v0;
jakarta.json.JsonValue$ValueType v1, v2, v3, v4, v5, v6, v7;
v0 = newarray (jakarta.json.JsonValue$ValueType)[7];
v1 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType ARRAY>;
v0[0] = v1;
v2 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType OBJECT>;
v0[1] = v2;
v3 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType STRING>;
v0[2] = v3;
v4 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NUMBER>;
v0[3] = v4;
v5 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType TRUE>;
v0[4] = v5;
v6 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType FALSE>;
v0[5] = v6;
v7 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
v0[6] = v7;
return v0;
}
static void <clinit>()
{
jakarta.json.JsonValue$ValueType[] v7;
jakarta.json.JsonValue$ValueType v0, v1, v2, v3, v4, v5, v6;
v0 = new jakarta.json.JsonValue$ValueType;
specialinvoke v0.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("ARRAY", 0);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType ARRAY> = v0;
v1 = new jakarta.json.JsonValue$ValueType;
specialinvoke v1.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("OBJECT", 1);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType OBJECT> = v1;
v2 = new jakarta.json.JsonValue$ValueType;
specialinvoke v2.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("STRING", 2);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType STRING> = v2;
v3 = new jakarta.json.JsonValue$ValueType;
specialinvoke v3.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("NUMBER", 3);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NUMBER> = v3;
v4 = new jakarta.json.JsonValue$ValueType;
specialinvoke v4.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("TRUE", 4);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType TRUE> = v4;
v5 = new jakarta.json.JsonValue$ValueType;
specialinvoke v5.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("FALSE", 5);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType FALSE> = v5;
v6 = new jakarta.json.JsonValue$ValueType;
specialinvoke v6.<jakarta.json.JsonValue$ValueType: void <init>(java.lang.String,int)>("NULL", 6);
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL> = v6;
v7 = staticinvoke <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType[] $values()>();
<jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType[] $VALUES> = v7;
return;
}
}