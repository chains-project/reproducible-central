public interface  jakarta.json.JsonValue extends java.lang.Object
{
public static final jakarta.json.JsonObject EMPTY_JSON_OBJECT;
public static final jakarta.json.JsonArray EMPTY_JSON_ARRAY;
public static final jakarta.json.JsonValue NULL;
public static final jakarta.json.JsonValue TRUE;
public static final jakarta.json.JsonValue FALSE;
public abstract jakarta.json.JsonValue$ValueType getValueType();
public jakarta.json.JsonObject asJsonObject()
{
java.lang.Class v1;
java.lang.Object v2;
jakarta.json.JsonValue v0;
v0 := @this: jakarta.json.JsonValue;
v1 = class "Ljakarta/json/JsonObject;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v0);
return v2;
}
public jakarta.json.JsonArray asJsonArray()
{
java.lang.Class v1;
java.lang.Object v2;
jakarta.json.JsonValue v0;
v0 := @this: jakarta.json.JsonValue;
v1 = class "Ljakarta/json/JsonArray;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v0);
return v2;
}
public abstract java.lang.String toString();
static void <clinit>()
{
jakarta.json.EmptyObject v0;
jakarta.json.EmptyArray v1;
jakarta.json.JsonValueImpl v2, v4, v6;
jakarta.json.JsonValue$ValueType v3, v5, v7;
v0 = new jakarta.json.EmptyObject;
specialinvoke v0.<jakarta.json.EmptyObject: void <init>()>();
<jakarta.json.JsonValue: jakarta.json.JsonObject EMPTY_JSON_OBJECT> = v0;
v1 = new jakarta.json.EmptyArray;
specialinvoke v1.<jakarta.json.EmptyArray: void <init>()>();
<jakarta.json.JsonValue: jakarta.json.JsonArray EMPTY_JSON_ARRAY> = v1;
v2 = new jakarta.json.JsonValueImpl;
v3 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
specialinvoke v2.<jakarta.json.JsonValueImpl: void <init>(jakarta.json.JsonValue$ValueType)>(v3);
<jakarta.json.JsonValue: jakarta.json.JsonValue NULL> = v2;
v4 = new jakarta.json.JsonValueImpl;
v5 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType TRUE>;
specialinvoke v4.<jakarta.json.JsonValueImpl: void <init>(jakarta.json.JsonValue$ValueType)>(v5);
<jakarta.json.JsonValue: jakarta.json.JsonValue TRUE> = v4;
v6 = new jakarta.json.JsonValueImpl;
v7 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType FALSE>;
specialinvoke v6.<jakarta.json.JsonValueImpl: void <init>(jakarta.json.JsonValue$ValueType)>(v7);
<jakarta.json.JsonValue: jakarta.json.JsonValue FALSE> = v6;
return;
}
}