public class org.apache.commons.io.ByteOrderMark extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
public static final org.apache.commons.io.ByteOrderMark UTF_8;
public static final org.apache.commons.io.ByteOrderMark UTF_16BE;
public static final org.apache.commons.io.ByteOrderMark UTF_16LE;
public static final org.apache.commons.io.ByteOrderMark UTF_32BE;
public static final org.apache.commons.io.ByteOrderMark UTF_32LE;
public static final char UTF_BOM;
private final java.lang.String charsetName;
private final int[] bytes;
public transient void <init>(java.lang.String, int[])
{
org.apache.commons.io.ByteOrderMark v0;
java.lang.IllegalArgumentException v4, v6;
int[] v2, v8, v9;
int v10, v5, v7;
java.lang.String v1;
boolean v3;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int[];
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == null goto label1;
v3 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No charsetName specified");
throw v4;
label2:
if v2 == null goto label3;
v5 = lengthof v2;
if v5 != 0 goto label4;
label3:
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("No bytes specified");
throw v6;
label4:
v0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName> = v1;
v7 = lengthof v2;
v8 = newarray (int)[v7];
v0.<org.apache.commons.io.ByteOrderMark: int[] bytes> = v8;
v9 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v10 = lengthof v2;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v9, 0, v10);
return;
}
public java.lang.String getCharsetName()
{
org.apache.commons.io.ByteOrderMark v0;
java.lang.String v1;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 = v0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName>;
return v1;
}
public int length()
{
int v2;
org.apache.commons.io.ByteOrderMark v0;
int[] v1;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v2 = lengthof v1;
return v2;
}
public int get(int)
{
int[] v2;
int v1, v3;
org.apache.commons.io.ByteOrderMark v0;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v3 = v2[v1];
return v3;
}
public byte[] getBytes()
{
byte[] v3;
org.apache.commons.io.ByteOrderMark v0;
int[] v1, v5, v7;
int v2, v4, v6, v8;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v2 = lengthof v1;
v3 = staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(v2);
v4 = 0;
label1:
v5 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v6 = lengthof v5;
if v4 >= v6 goto label2;
v7 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v8 = v7[v4];
v3[v4] = v8;
v4 = v4 + 1;
goto label1;
label2:
return v3;
}
public boolean equals(java.lang.Object)
{
org.apache.commons.io.ByteOrderMark v0;
int[] v3, v7, v9;
int v10, v11, v4, v5, v6, v8;
java.lang.Object v1;
boolean v2;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof org.apache.commons.io.ByteOrderMark;
if v2 != 0 goto label1;
return 0;
label1:
v3 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v4 = lengthof v3;
v5 = virtualinvoke v1.<org.apache.commons.io.ByteOrderMark: int length()>();
if v4 == v5 goto label2;
return 0;
label2:
v6 = 0;
label3:
v7 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v8 = lengthof v7;
if v6 >= v8 goto label5;
v9 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v10 = v9[v6];
v11 = virtualinvoke v1.<org.apache.commons.io.ByteOrderMark: int get(int)>(v6);
if v10 == v11 goto label4;
return 0;
label4:
v6 = v6 + 1;
goto label3;
label5:
return 1;
}
public int hashCode()
{
int[] v3;
int v2, v4, v5, v6;
java.lang.Class v1;
org.apache.commons.io.ByteOrderMark v0;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
v3 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v3[v5];
v2 = v2 + v6;
v5 = v5 + 1;
goto label1;
label2:
return v2;
}
public java.lang.String toString()
{
org.apache.commons.io.ByteOrderMark v0;
int[] v6, v8;
java.util.Locale v12;
int v10, v5, v7, v9;
java.lang.Class v2;
java.lang.StringBuilder v1;
java.lang.String v11, v13, v14, v3, v4;
v0 := @this: org.apache.commons.io.ByteOrderMark;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getSimpleName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
v4 = v0.<org.apache.commons.io.ByteOrderMark: java.lang.String charsetName>;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(": ");
v5 = 0;
label1:
v6 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v7 = lengthof v6;
if v5 >= v7 goto label3;
if v5 <= 0 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
label2:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0x");
v8 = v0.<org.apache.commons.io.ByteOrderMark: int[] bytes>;
v9 = v8[v5];
v10 = 255 & v9;
v11 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v10);
v12 = <java.util.Locale: java.util.Locale ROOT>;
v13 = virtualinvoke v11.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(v12);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v13);
v5 = v5 + 1;
goto label1;
label3:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
v14 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v14;
}
static void <clinit>()
{
org.apache.commons.io.ByteOrderMark v0, v2, v4, v6, v8;
int[] v1, v3, v5, v7, v9;
v0 = new org.apache.commons.io.ByteOrderMark;
v1 = newarray (int)[3];
v1[0] = 239;
v1[1] = 187;
v1[2] = 191;
specialinvoke v0.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-8", v1);
<org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_8> = v0;
v2 = new org.apache.commons.io.ByteOrderMark;
v3 = newarray (int)[2];
v3[0] = 254;
v3[1] = 255;
specialinvoke v2.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16BE", v3);
<org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16BE> = v2;
v4 = new org.apache.commons.io.ByteOrderMark;
v5 = newarray (int)[2];
v5[0] = 255;
v5[1] = 254;
specialinvoke v4.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-16LE", v5);
<org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_16LE> = v4;
v6 = new org.apache.commons.io.ByteOrderMark;
v7 = newarray (int)[4];
v7[0] = 0;
v7[1] = 0;
v7[2] = 254;
v7[3] = 255;
specialinvoke v6.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32BE", v7);
<org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32BE> = v6;
v8 = new org.apache.commons.io.ByteOrderMark;
v9 = newarray (int)[4];
v9[0] = 255;
v9[1] = 254;
v9[2] = 0;
v9[3] = 0;
specialinvoke v8.<org.apache.commons.io.ByteOrderMark: void <init>(java.lang.String,int[])>("UTF-32LE", v9);
<org.apache.commons.io.ByteOrderMark: org.apache.commons.io.ByteOrderMark UTF_32LE> = v8;
return;
}
}