class org.apache.commons.io.ThreadMonitor extends java.lang.Object implements java.lang.Runnable
{
private final java.lang.Thread thread;
private final java.time.Duration timeout;
static java.lang.Thread start(java.time.Duration)
{
java.lang.Thread v1, v2;
java.time.Duration v0;
v0 := @parameter0: java.time.Duration;
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = staticinvoke <org.apache.commons.io.ThreadMonitor: java.lang.Thread start(java.lang.Thread,java.time.Duration)>(v1, v0);
return v2;
}
static java.lang.Thread start(java.lang.Thread, java.time.Duration)
{
org.apache.commons.io.ThreadMonitor v4;
java.lang.Thread v0, v5;
java.time.Duration v1;
java.lang.Class v6;
java.lang.String v7;
boolean v2, v3;
v0 := @parameter0: java.lang.Thread;
v1 := @parameter1: java.time.Duration;
v2 = virtualinvoke v1.<java.time.Duration: boolean isZero()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<java.time.Duration: boolean isNegative()>();
if v3 == 0 goto label2;
label1:
return null;
label2:
v4 = new org.apache.commons.io.ThreadMonitor;
specialinvoke v4.<org.apache.commons.io.ThreadMonitor: void <init>(java.lang.Thread,java.time.Duration)>(v0, v1);
v5 = new java.lang.Thread;
v6 = class "Lorg/apache/commons/io/ThreadMonitor;";
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getSimpleName()>();
specialinvoke v5.<java.lang.Thread: void <init>(java.lang.Runnable,java.lang.String)>(v4, v7);
virtualinvoke v5.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke v5.<java.lang.Thread: void start()>();
return v5;
}
static void stop(java.lang.Thread)
{
java.lang.Thread v0;
v0 := @parameter0: java.lang.Thread;
if v0 == null goto label1;
virtualinvoke v0.<java.lang.Thread: void interrupt()>();
label1:
return;
}
private void <init>(java.lang.Thread, java.time.Duration)
{
java.lang.Thread v1;
java.time.Duration v2;
org.apache.commons.io.ThreadMonitor v0;
v0 := @this: org.apache.commons.io.ThreadMonitor;
v1 := @parameter0: java.lang.Thread;
v2 := @parameter1: java.time.Duration;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.io.ThreadMonitor: java.lang.Thread thread> = v1;
v0.<org.apache.commons.io.ThreadMonitor: java.time.Duration timeout> = v2;
return;
}
public void run()
{
java.lang.InterruptedException v3;
java.lang.Thread v2;
java.time.Duration v1;
org.apache.commons.io.ThreadMonitor v0;
v0 := @this: org.apache.commons.io.ThreadMonitor;
label1:
v1 = v0.<org.apache.commons.io.ThreadMonitor: java.time.Duration timeout>;
staticinvoke <org.apache.commons.io.ThreadMonitor: void sleep(java.time.Duration)>(v1);
v2 = v0.<org.apache.commons.io.ThreadMonitor: java.lang.Thread thread>;
virtualinvoke v2.<java.lang.Thread: void interrupt()>();
label2:
goto label4;
label3:
v3 := @caughtexception;
label4:
return;
catch java.lang.InterruptedException from label1 to label2 with label3;
}
private static void sleep(java.time.Duration) throws java.lang.InterruptedException
{
byte v6;
java.time.Duration v0;
long v1, v2, v3, v4, v5;
v0 := @parameter0: java.time.Duration;
v1 = virtualinvoke v0.<java.time.Duration: long toMillis()>();
v2 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v3 = v2 + v1;
v4 = v1;
label1:
staticinvoke <java.lang.Thread: void sleep(long)>(v4);
v5 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v4 = v3 - v5;
v6 = v4 cmp 0L;
if v6 > 0 goto label1;
return;
}
}