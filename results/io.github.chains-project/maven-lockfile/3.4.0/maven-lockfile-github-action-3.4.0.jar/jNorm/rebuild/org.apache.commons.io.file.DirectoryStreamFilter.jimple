public class org.apache.commons.io.file.DirectoryStreamFilter extends java.lang.Object implements java.nio.file.DirectoryStream$Filter
{
private final org.apache.commons.io.file.PathFilter pathFilter;
public void <init>(org.apache.commons.io.file.PathFilter)
{
java.lang.Object v2;
org.apache.commons.io.file.PathFilter v1;
org.apache.commons.io.file.DirectoryStreamFilter v0;
v0 := @this: org.apache.commons.io.file.DirectoryStreamFilter;
v1 := @parameter0: org.apache.commons.io.file.PathFilter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "pathFilter");
v0.<org.apache.commons.io.file.DirectoryStreamFilter: org.apache.commons.io.file.PathFilter pathFilter> = v2;
return;
}
public boolean accept(java.nio.file.Path) throws java.io.IOException
{
java.nio.file.FileVisitResult v4, v5;
java.nio.file.attribute.BasicFileAttributes v3;
java.nio.file.Path v1;
org.apache.commons.io.file.PathFilter v2;
org.apache.commons.io.file.DirectoryStreamFilter v0;
boolean v6;
v0 := @this: org.apache.commons.io.file.DirectoryStreamFilter;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<org.apache.commons.io.file.DirectoryStreamFilter: org.apache.commons.io.file.PathFilter pathFilter>;
v3 = staticinvoke <org.apache.commons.io.file.PathUtils: java.nio.file.attribute.BasicFileAttributes readBasicFileAttributes(java.nio.file.Path)>(v1);
v4 = interfaceinvoke v2.<org.apache.commons.io.file.PathFilter: java.nio.file.FileVisitResult accept(java.nio.file.Path,java.nio.file.attribute.BasicFileAttributes)>(v1, v3);
v5 = <java.nio.file.FileVisitResult: java.nio.file.FileVisitResult CONTINUE>;
if v4 != v5 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public org.apache.commons.io.file.PathFilter getPathFilter()
{
org.apache.commons.io.file.PathFilter v1;
org.apache.commons.io.file.DirectoryStreamFilter v0;
v0 := @this: org.apache.commons.io.file.DirectoryStreamFilter;
v1 = v0.<org.apache.commons.io.file.DirectoryStreamFilter: org.apache.commons.io.file.PathFilter pathFilter>;
return v1;
}
}