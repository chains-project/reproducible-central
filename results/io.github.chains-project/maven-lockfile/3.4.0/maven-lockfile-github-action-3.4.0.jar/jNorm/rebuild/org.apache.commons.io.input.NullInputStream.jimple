public class org.apache.commons.io.input.NullInputStream extends java.io.InputStream
{
private final long size;
private long position;
private long mark;
private long readlimit;
private boolean eof;
private final boolean throwEofException;
private final boolean markSupported;
public void <init>()
{
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
specialinvoke v0.<org.apache.commons.io.input.NullInputStream: void <init>(long,boolean,boolean)>(0L, 1, 0);
return;
}
public void <init>(long)
{
long v1;
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: long;
specialinvoke v0.<org.apache.commons.io.input.NullInputStream: void <init>(long,boolean,boolean)>(v1, 1, 0);
return;
}
public void <init>(long, boolean, boolean)
{
org.apache.commons.io.input.NullInputStream v0;
long v1;
boolean v2, v3;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: long;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<java.io.InputStream: void <init>()>();
v0.<org.apache.commons.io.input.NullInputStream: long mark> = -1L;
v0.<org.apache.commons.io.input.NullInputStream: long size> = v1;
v0.<org.apache.commons.io.input.NullInputStream: boolean markSupported> = v2;
v0.<org.apache.commons.io.input.NullInputStream: boolean throwEofException> = v3;
return;
}
public long getPosition()
{
long v1;
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
return v1;
}
public long getSize()
{
long v1;
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
return v1;
}
public int available()
{
byte v4, v5;
org.apache.commons.io.input.NullInputStream v0;
long v1, v2, v3;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v2 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v3 = v1 - v2;
v4 = v3 cmp 0L;
if v4 > 0 goto label1;
return 0;
label1:
v5 = v3 cmp 2147483647L;
if v5 <= 0 goto label2;
return 2147483647;
label2:
return v3;
}
public void close() throws java.io.IOException
{
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v0.<org.apache.commons.io.input.NullInputStream: boolean eof> = 0;
v0.<org.apache.commons.io.input.NullInputStream: long position> = 0L;
v0.<org.apache.commons.io.input.NullInputStream: long mark> = -1L;
return;
}
public synchronized void mark(int)
{
java.lang.UnsupportedOperationException v3;
org.apache.commons.io.input.NullInputStream v0;
int v1;
long v4;
boolean v2;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.input.NullInputStream: boolean markSupported>;
if v2 != 0 goto label1;
v3 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException mark()>();
throw v3;
label1:
v4 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v0.<org.apache.commons.io.input.NullInputStream: long mark> = v4;
v0.<org.apache.commons.io.input.NullInputStream: long readlimit> = v1;
return;
}
public boolean markSupported()
{
org.apache.commons.io.input.NullInputStream v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 = v0.<org.apache.commons.io.input.NullInputStream: boolean markSupported>;
return v1;
}
public int read() throws java.io.IOException
{
java.io.IOException v2;
long v3, v4, v7, v8;
byte v5;
org.apache.commons.io.input.NullInputStream v0;
int v6, v9;
boolean v1;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 = v0.<org.apache.commons.io.input.NullInputStream: boolean eof>;
if v1 == 0 goto label1;
v2 = new java.io.IOException;
specialinvoke v2.<java.io.IOException: void <init>(java.lang.String)>("Read after end of file");
throw v2;
label1:
v3 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v4 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v5 = v3 cmp v4;
if v5 != 0 goto label2;
v6 = specialinvoke v0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>();
return v6;
label2:
v7 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v8 = v7 + 1L;
v0.<org.apache.commons.io.input.NullInputStream: long position> = v8;
v9 = virtualinvoke v0.<org.apache.commons.io.input.NullInputStream: int processByte()>();
return v9;
}
public int read(byte[]) throws java.io.IOException
{
byte[] v1;
org.apache.commons.io.input.NullInputStream v0;
int v2, v3;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
v3 = virtualinvoke v0.<org.apache.commons.io.input.NullInputStream: int read(byte[],int,int)>(v1, 0, v2);
return v3;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
long v10, v11, v13, v14, v16, v17, v18, v19, v6, v7;
byte v15, v8;
int v12, v2, v3, v9;
boolean v4;
java.io.IOException v5;
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.input.NullInputStream: boolean eof>;
if v4 == 0 goto label1;
v5 = new java.io.IOException;
specialinvoke v5.<java.io.IOException: void <init>(java.lang.String)>("Read after end of file");
throw v5;
label1:
v6 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v7 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v8 = v6 cmp v7;
if v8 != 0 goto label2;
v9 = specialinvoke v0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>();
return v9;
label2:
v10 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v11 = v10 + v3;
v0.<org.apache.commons.io.input.NullInputStream: long position> = v11;
v12 = v3;
v13 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v14 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v15 = v13 cmp v14;
if v15 <= 0 goto label3;
v16 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v17 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v18 = v16 - v17;
v12 = v3 - v18;
v19 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v0.<org.apache.commons.io.input.NullInputStream: long position> = v19;
label3:
virtualinvoke v0.<org.apache.commons.io.input.NullInputStream: void processBytes(byte[],int,int)>(v1, v2, v12);
return v12;
}
public synchronized void reset() throws java.io.IOException
{
long v12, v13, v15, v3, v6, v7, v8, v9;
byte v10, v4;
java.lang.String v14;
boolean v1;
java.lang.UnsupportedOperationException v2;
java.io.IOException v11, v5;
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 = v0.<org.apache.commons.io.input.NullInputStream: boolean markSupported>;
if v1 != 0 goto label1;
v2 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException reset()>();
throw v2;
label1:
v3 = v0.<org.apache.commons.io.input.NullInputStream: long mark>;
v4 = v3 cmp 0L;
if v4 >= 0 goto label2;
v5 = new java.io.IOException;
specialinvoke v5.<java.io.IOException: void <init>(java.lang.String)>("No position has been marked");
throw v5;
label2:
v6 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v7 = v0.<org.apache.commons.io.input.NullInputStream: long mark>;
v8 = v0.<org.apache.commons.io.input.NullInputStream: long readlimit>;
v9 = v7 + v8;
v10 = v6 cmp v9;
if v10 <= 0 goto label3;
v11 = new java.io.IOException;
v12 = v0.<org.apache.commons.io.input.NullInputStream: long mark>;
v13 = v0.<org.apache.commons.io.input.NullInputStream: long readlimit>;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long,long)>(v12, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Marked position [\u0001] is no longer valid - passed the read limit [\u0001]");
specialinvoke v11.<java.io.IOException: void <init>(java.lang.String)>(v14);
throw v11;
label3:
v15 = v0.<org.apache.commons.io.input.NullInputStream: long mark>;
v0.<org.apache.commons.io.input.NullInputStream: long position> = v15;
v0.<org.apache.commons.io.input.NullInputStream: boolean eof> = 0;
return;
}
public long skip(long) throws java.io.IOException
{
long v1, v10, v11, v12, v14, v15, v16, v17, v4, v5, v8, v9;
byte v13, v6;
int v7;
boolean v2;
java.io.IOException v3;
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: long;
v2 = v0.<org.apache.commons.io.input.NullInputStream: boolean eof>;
if v2 == 0 goto label1;
v3 = new java.io.IOException;
specialinvoke v3.<java.io.IOException: void <init>(java.lang.String)>("Skip after end of file");
throw v3;
label1:
v4 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v5 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v6 = v4 cmp v5;
if v6 != 0 goto label2;
v7 = specialinvoke v0.<org.apache.commons.io.input.NullInputStream: int doEndOfFile()>();
return v7;
label2:
v8 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v9 = v8 + v1;
v0.<org.apache.commons.io.input.NullInputStream: long position> = v9;
v10 = v1;
v11 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v12 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v13 = v11 cmp v12;
if v13 <= 0 goto label3;
v14 = v0.<org.apache.commons.io.input.NullInputStream: long position>;
v15 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v16 = v14 - v15;
v10 = v1 - v16;
v17 = v0.<org.apache.commons.io.input.NullInputStream: long size>;
v0.<org.apache.commons.io.input.NullInputStream: long position> = v17;
label3:
return v10;
}
protected int processByte()
{
org.apache.commons.io.input.NullInputStream v0;
v0 := @this: org.apache.commons.io.input.NullInputStream;
return 0;
}
protected void processBytes(byte[], int, int)
{
byte[] v1;
org.apache.commons.io.input.NullInputStream v0;
int v2, v3;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
return;
}
private int doEndOfFile() throws java.io.EOFException
{
org.apache.commons.io.input.NullInputStream v0;
int v3;
java.io.EOFException v2;
boolean v1;
v0 := @this: org.apache.commons.io.input.NullInputStream;
v0.<org.apache.commons.io.input.NullInputStream: boolean eof> = 1;
v1 = v0.<org.apache.commons.io.input.NullInputStream: boolean throwEofException>;
if v1 == 0 goto label1;
v2 = new java.io.EOFException;
specialinvoke v2.<java.io.EOFException: void <init>()>();
throw v2;
label1:
v3 = (int) -1;
return v3;
}
}