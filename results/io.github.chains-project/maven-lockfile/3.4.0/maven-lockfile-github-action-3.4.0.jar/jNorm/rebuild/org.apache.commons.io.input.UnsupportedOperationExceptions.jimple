class org.apache.commons.io.input.UnsupportedOperationExceptions extends java.lang.Object
{
private static final java.lang.String MARK_RESET;
void <init>()
{
org.apache.commons.io.input.UnsupportedOperationExceptions v0;
v0 := @this: org.apache.commons.io.input.UnsupportedOperationExceptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.lang.UnsupportedOperationException mark()
{
java.lang.UnsupportedOperationException v0;
v0 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException method(java.lang.String)>("mark/reset");
return v0;
}
static java.lang.UnsupportedOperationException method(java.lang.String)
{
java.lang.UnsupportedOperationException v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = new java.lang.UnsupportedOperationException;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 not supported");
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v2);
return v1;
}
static java.lang.UnsupportedOperationException reset()
{
java.lang.UnsupportedOperationException v0;
v0 = staticinvoke <org.apache.commons.io.input.UnsupportedOperationExceptions: java.lang.UnsupportedOperationException method(java.lang.String)>("mark/reset");
return v0;
}
}