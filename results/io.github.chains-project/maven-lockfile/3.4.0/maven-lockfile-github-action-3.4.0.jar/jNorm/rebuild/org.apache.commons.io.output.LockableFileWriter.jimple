public class org.apache.commons.io.output.LockableFileWriter extends java.io.Writer
{
private static final java.lang.String LCK;
private final java.io.Writer out;
private final java.io.File lockFile;
public void <init>(java.lang.String) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(v1, 0, null);
return;
}
public void <init>(java.lang.String, boolean) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v1;
boolean v2;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.lang.String,boolean,java.lang.String)>(v1, v2, null);
return;
}
public void <init>(java.lang.String, boolean, java.lang.String) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v1, v3;
java.io.File v4;
boolean v2;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.String;
v4 = new java.io.File;
specialinvoke v4.<java.io.File: void <init>(java.lang.String)>(v1);
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(v4, v2, v3);
return;
}
public void <init>(java.io.File) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.io.File v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(v1, 0, null);
return;
}
public void <init>(java.io.File, boolean) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.io.File v1;
boolean v2;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: boolean;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,boolean,java.lang.String)>(v1, v2, null);
return;
}
public void <init>(java.io.File, boolean, java.lang.String) throws java.io.IOException
{
java.nio.charset.Charset v4;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v3;
java.io.File v1;
boolean v2;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: boolean;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(v1, v4, v2, v3);
return;
}
public void <init>(java.io.File, java.nio.charset.Charset) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.nio.charset.Charset v2;
java.io.File v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.nio.charset.Charset;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(v1, v2, 0, null);
return;
}
public void <init>(java.io.File, java.lang.String) throws java.io.IOException
{
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v2;
java.io.File v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.lang.String,boolean,java.lang.String)>(v1, v2, 0, null);
return;
}
public void <init>(java.io.File, java.nio.charset.Charset, boolean, java.lang.String) throws java.io.IOException
{
java.io.IOException v9;
java.io.File v1, v10, v11, v5, v6, v7;
java.nio.charset.Charset v2;
java.io.Writer v14;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v12, v13, v4;
boolean v3, v8;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.nio.charset.Charset;
v3 := @parameter2: boolean;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<java.io.Writer: void <init>()>();
v5 = virtualinvoke v1.<java.io.File: java.io.File getAbsoluteFile()>();
v6 = virtualinvoke v5.<java.io.File: java.io.File getParentFile()>();
if v6 == null goto label1;
v7 = virtualinvoke v5.<java.io.File: java.io.File getParentFile()>();
staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(v7);
label1:
v8 = virtualinvoke v5.<java.io.File: boolean isDirectory()>();
if v8 == 0 goto label2;
v9 = new java.io.IOException;
specialinvoke v9.<java.io.IOException: void <init>(java.lang.String)>("File specified is a directory");
throw v9;
label2:
if v4 != null goto label3;
v4 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");
label3:
v10 = new java.io.File;
specialinvoke v10.<java.io.File: void <init>(java.lang.String)>(v4);
staticinvoke <org.apache.commons.io.FileUtils: void forceMkdir(java.io.File)>(v10);
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void testLockDir(java.io.File)>(v10);
v11 = new java.io.File;
v12 = virtualinvoke v5.<java.io.File: java.lang.String getName()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.lck");
specialinvoke v11.<java.io.File: void <init>(java.io.File,java.lang.String)>(v10, v13);
v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile> = v11;
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void createLock()>();
v14 = specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer initWriter(java.io.File,java.nio.charset.Charset,boolean)>(v5, v2, v3);
v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out> = v14;
return;
}
public void <init>(java.io.File, java.lang.String, boolean, java.lang.String) throws java.io.IOException
{
java.nio.charset.Charset v5;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v2, v4;
java.io.File v1;
boolean v3;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: java.lang.String;
v5 = staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.lang.String)>(v2);
specialinvoke v0.<org.apache.commons.io.output.LockableFileWriter: void <init>(java.io.File,java.nio.charset.Charset,boolean,java.lang.String)>(v1, v5, v3, v4);
return;
}
private void testLockDir(java.io.File) throws java.io.IOException
{
java.io.IOException v3, v7;
java.io.File v1;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v4, v5, v8, v9;
boolean v2, v6;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v1.<java.io.File: boolean exists()>();
if v2 != 0 goto label1;
v3 = new java.io.IOException;
v4 = virtualinvoke v1.<java.io.File: java.lang.String getAbsolutePath()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not find lockDir: \u0001");
specialinvoke v3.<java.io.IOException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v6 = virtualinvoke v1.<java.io.File: boolean canWrite()>();
if v6 != 0 goto label2;
v7 = new java.io.IOException;
v8 = virtualinvoke v1.<java.io.File: java.lang.String getAbsolutePath()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not write to lockDir: \u0001");
specialinvoke v7.<java.io.IOException: void <init>(java.lang.String)>(v9);
throw v7;
label2:
return;
}
private void createLock() throws java.io.IOException
{
java.lang.Throwable v8;
java.io.IOException v3;
java.io.File v1, v4, v7;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v5, v6;
boolean v2;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
entermonitor class "Lorg/apache/commons/io/output/LockableFileWriter;";
label1:
v1 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;
v2 = virtualinvoke v1.<java.io.File: boolean createNewFile()>();
if v2 != 0 goto label2;
v3 = new java.io.IOException;
v4 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;
v5 = virtualinvoke v4.<java.io.File: java.lang.String getAbsolutePath()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Can\'t write file, lock \u0001 exists");
specialinvoke v3.<java.io.IOException: void <init>(java.lang.String)>(v6);
throw v3;
label2:
v7 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;
virtualinvoke v7.<java.io.File: void deleteOnExit()>();
exitmonitor class "Lorg/apache/commons/io/output/LockableFileWriter;";
label3:
goto label5;
label4:
v8 := @caughtexception;
exitmonitor class "Lorg/apache/commons/io/output/LockableFileWriter;";
throw v8;
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
private java.io.Writer initWriter(java.io.File, java.nio.charset.Charset, boolean) throws java.io.IOException
{
java.io.FileOutputStream v6;
java.io.File v1, v10;
java.lang.Exception v9;
java.nio.charset.Charset v2, v8;
org.apache.commons.io.output.LockableFileWriter v0;
java.io.OutputStreamWriter v5;
java.lang.String v7;
boolean v3, v4;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.nio.charset.Charset;
v3 := @parameter2: boolean;
v4 = virtualinvoke v1.<java.io.File: boolean exists()>();
label1:
v5 = new java.io.OutputStreamWriter;
v6 = new java.io.FileOutputStream;
v7 = virtualinvoke v1.<java.io.File: java.lang.String getAbsolutePath()>();
specialinvoke v6.<java.io.FileOutputStream: void <init>(java.lang.String,boolean)>(v7, v3);
v8 = staticinvoke <org.apache.commons.io.Charsets: java.nio.charset.Charset toCharset(java.nio.charset.Charset)>(v2);
specialinvoke v5.<java.io.OutputStreamWriter: void <init>(java.io.OutputStream,java.nio.charset.Charset)>(v6, v8);
label2:
return v5;
label3:
v9 := @caughtexception;
v10 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;
staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(v10);
if v4 != 0 goto label4;
staticinvoke <org.apache.commons.io.FileUtils: boolean deleteQuietly(java.io.File)>(v1);
label4:
throw v9;
catch java.io.IOException from label1 to label2 with label3;
catch java.lang.RuntimeException from label1 to label2 with label3;
}
public void close() throws java.io.IOException
{
java.lang.Throwable v3;
java.io.Writer v1;
org.apache.commons.io.output.LockableFileWriter v0;
java.io.File v2, v4;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
label1:
v1 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v1.<java.io.Writer: void close()>();
label2:
v2 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;
staticinvoke <org.apache.commons.io.FileUtils: java.io.File delete(java.io.File)>(v2);
goto label4;
label3:
v3 := @caughtexception;
v4 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.File lockFile>;
staticinvoke <org.apache.commons.io.FileUtils: java.io.File delete(java.io.File)>(v4);
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void write(int) throws java.io.IOException
{
int v1;
java.io.Writer v2;
org.apache.commons.io.output.LockableFileWriter v0;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v2.<java.io.Writer: void write(int)>(v1);
return;
}
public void write(char[]) throws java.io.IOException
{
java.io.Writer v2;
org.apache.commons.io.output.LockableFileWriter v0;
char[] v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: char[];
v2 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v2.<java.io.Writer: void write(char[])>(v1);
return;
}
public void write(char[], int, int) throws java.io.IOException
{
int v2, v3;
java.io.Writer v4;
org.apache.commons.io.output.LockableFileWriter v0;
char[] v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v4.<java.io.Writer: void write(char[],int,int)>(v1, v2, v3);
return;
}
public void write(java.lang.String) throws java.io.IOException
{
java.io.Writer v2;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v2.<java.io.Writer: void write(java.lang.String)>(v1);
return;
}
public void write(java.lang.String, int, int) throws java.io.IOException
{
int v2, v3;
java.io.Writer v4;
org.apache.commons.io.output.LockableFileWriter v0;
java.lang.String v1;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v4.<java.io.Writer: void write(java.lang.String,int,int)>(v1, v2, v3);
return;
}
public void flush() throws java.io.IOException
{
java.io.Writer v1;
org.apache.commons.io.output.LockableFileWriter v0;
v0 := @this: org.apache.commons.io.output.LockableFileWriter;
v1 = v0.<org.apache.commons.io.output.LockableFileWriter: java.io.Writer out>;
virtualinvoke v1.<java.io.Writer: void flush()>();
return;
}
}