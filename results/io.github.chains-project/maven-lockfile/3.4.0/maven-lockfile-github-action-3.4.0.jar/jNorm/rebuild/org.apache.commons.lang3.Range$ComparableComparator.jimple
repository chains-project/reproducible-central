final enum class org.apache.commons.lang3.Range$ComparableComparator extends java.lang.Enum implements java.util.Comparator
{
public static final enum org.apache.commons.lang3.Range$ComparableComparator INSTANCE;
private static final org.apache.commons.lang3.Range$ComparableComparator[] $VALUES;
public static org.apache.commons.lang3.Range$ComparableComparator[] values()
{
org.apache.commons.lang3.Range$ComparableComparator[] v0;
java.lang.Object v1;
v0 = <org.apache.commons.lang3.Range$ComparableComparator: org.apache.commons.lang3.Range$ComparableComparator[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.apache.commons.lang3.Range$ComparableComparator valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/apache/commons/lang3/Range$ComparableComparator;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
org.apache.commons.lang3.Range$ComparableComparator v0;
java.lang.String v1;
v0 := @this: org.apache.commons.lang3.Range$ComparableComparator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public int compare(java.lang.Object, java.lang.Object)
{
int v3;
java.lang.Object v1, v2;
org.apache.commons.lang3.Range$ComparableComparator v0;
v0 := @this: org.apache.commons.lang3.Range$ComparableComparator;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = interfaceinvoke v1.<java.lang.Comparable: int compareTo(java.lang.Object)>(v2);
return v3;
}
private static org.apache.commons.lang3.Range$ComparableComparator[] $values()
{
org.apache.commons.lang3.Range$ComparableComparator[] v0;
org.apache.commons.lang3.Range$ComparableComparator v1;
v0 = newarray (org.apache.commons.lang3.Range$ComparableComparator)[1];
v1 = <org.apache.commons.lang3.Range$ComparableComparator: org.apache.commons.lang3.Range$ComparableComparator INSTANCE>;
v0[0] = v1;
return v0;
}
static void <clinit>()
{
org.apache.commons.lang3.Range$ComparableComparator[] v1;
org.apache.commons.lang3.Range$ComparableComparator v0;
v0 = new org.apache.commons.lang3.Range$ComparableComparator;
specialinvoke v0.<org.apache.commons.lang3.Range$ComparableComparator: void <init>(java.lang.String,int)>("INSTANCE", 0);
<org.apache.commons.lang3.Range$ComparableComparator: org.apache.commons.lang3.Range$ComparableComparator INSTANCE> = v0;
v1 = staticinvoke <org.apache.commons.lang3.Range$ComparableComparator: org.apache.commons.lang3.Range$ComparableComparator[] $values()>();
<org.apache.commons.lang3.Range$ComparableComparator: org.apache.commons.lang3.Range$ComparableComparator[] $VALUES> = v1;
return;
}
}