public class org.apache.commons.lang3.SystemUtils extends java.lang.Object
{
private static final java.lang.String OS_NAME_WINDOWS_PREFIX;
private static final java.lang.String USER_HOME_KEY;
private static final java.lang.String USER_NAME_KEY;
private static final java.lang.String USER_DIR_KEY;
private static final java.lang.String JAVA_IO_TMPDIR_KEY;
private static final java.lang.String JAVA_HOME_KEY;
public static final java.lang.String AWT_TOOLKIT;
public static final java.lang.String FILE_ENCODING;
public static final java.lang.String FILE_SEPARATOR;
public static final java.lang.String JAVA_AWT_FONTS;
public static final java.lang.String JAVA_AWT_GRAPHICSENV;
public static final java.lang.String JAVA_AWT_HEADLESS;
public static final java.lang.String JAVA_AWT_PRINTERJOB;
public static final java.lang.String JAVA_CLASS_PATH;
public static final java.lang.String JAVA_CLASS_VERSION;
public static final java.lang.String JAVA_COMPILER;
public static final java.lang.String JAVA_ENDORSED_DIRS;
public static final java.lang.String JAVA_EXT_DIRS;
public static final java.lang.String JAVA_HOME;
public static final java.lang.String JAVA_IO_TMPDIR;
public static final java.lang.String JAVA_LIBRARY_PATH;
public static final java.lang.String JAVA_RUNTIME_NAME;
public static final java.lang.String JAVA_RUNTIME_VERSION;
public static final java.lang.String JAVA_SPECIFICATION_NAME;
public static final java.lang.String JAVA_SPECIFICATION_VENDOR;
public static final java.lang.String JAVA_SPECIFICATION_VERSION;
private static final org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM;
public static final java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY;
public static final java.lang.String JAVA_VENDOR;
public static final java.lang.String JAVA_VENDOR_URL;
public static final java.lang.String JAVA_VERSION;
public static final java.lang.String JAVA_VM_INFO;
public static final java.lang.String JAVA_VM_NAME;
public static final java.lang.String JAVA_VM_SPECIFICATION_NAME;
public static final java.lang.String JAVA_VM_SPECIFICATION_VENDOR;
public static final java.lang.String JAVA_VM_SPECIFICATION_VERSION;
public static final java.lang.String JAVA_VM_VENDOR;
public static final java.lang.String JAVA_VM_VERSION;
public static final java.lang.String LINE_SEPARATOR;
public static final java.lang.String OS_ARCH;
public static final java.lang.String OS_NAME;
public static final java.lang.String OS_VERSION;
public static final java.lang.String PATH_SEPARATOR;
public static final java.lang.String USER_COUNTRY;
public static final java.lang.String USER_DIR;
public static final java.lang.String USER_HOME;
public static final java.lang.String USER_LANGUAGE;
public static final java.lang.String USER_NAME;
public static final java.lang.String USER_TIMEZONE;
public static final boolean IS_JAVA_1_1;
public static final boolean IS_JAVA_1_2;
public static final boolean IS_JAVA_1_3;
public static final boolean IS_JAVA_1_4;
public static final boolean IS_JAVA_1_5;
public static final boolean IS_JAVA_1_6;
public static final boolean IS_JAVA_1_7;
public static final boolean IS_JAVA_1_8;
public static final boolean IS_JAVA_1_9;
public static final boolean IS_JAVA_9;
public static final boolean IS_JAVA_10;
public static final boolean IS_JAVA_11;
public static final boolean IS_JAVA_12;
public static final boolean IS_JAVA_13;
public static final boolean IS_JAVA_14;
public static final boolean IS_JAVA_15;
public static final boolean IS_OS_AIX;
public static final boolean IS_OS_HP_UX;
public static final boolean IS_OS_400;
public static final boolean IS_OS_IRIX;
public static final boolean IS_OS_LINUX;
public static final boolean IS_OS_MAC;
public static final boolean IS_OS_MAC_OSX;
public static final boolean IS_OS_MAC_OSX_CHEETAH;
public static final boolean IS_OS_MAC_OSX_PUMA;
public static final boolean IS_OS_MAC_OSX_JAGUAR;
public static final boolean IS_OS_MAC_OSX_PANTHER;
public static final boolean IS_OS_MAC_OSX_TIGER;
public static final boolean IS_OS_MAC_OSX_LEOPARD;
public static final boolean IS_OS_MAC_OSX_SNOW_LEOPARD;
public static final boolean IS_OS_MAC_OSX_LION;
public static final boolean IS_OS_MAC_OSX_MOUNTAIN_LION;
public static final boolean IS_OS_MAC_OSX_MAVERICKS;
public static final boolean IS_OS_MAC_OSX_YOSEMITE;
public static final boolean IS_OS_MAC_OSX_EL_CAPITAN;
public static final boolean IS_OS_MAC_OSX_SIERRA;
public static final boolean IS_OS_MAC_OSX_HIGH_SIERRA;
public static final boolean IS_OS_MAC_OSX_MOJAVE;
public static final boolean IS_OS_MAC_OSX_CATALINA;
public static final boolean IS_OS_MAC_OSX_BIG_SUR;
public static final boolean IS_OS_FREE_BSD;
public static final boolean IS_OS_OPEN_BSD;
public static final boolean IS_OS_NET_BSD;
public static final boolean IS_OS_OS2;
public static final boolean IS_OS_SOLARIS;
public static final boolean IS_OS_SUN_OS;
public static final boolean IS_OS_UNIX;
public static final boolean IS_OS_WINDOWS;
public static final boolean IS_OS_WINDOWS_2000;
public static final boolean IS_OS_WINDOWS_2003;
public static final boolean IS_OS_WINDOWS_2008;
public static final boolean IS_OS_WINDOWS_2012;
public static final boolean IS_OS_WINDOWS_95;
public static final boolean IS_OS_WINDOWS_98;
public static final boolean IS_OS_WINDOWS_ME;
public static final boolean IS_OS_WINDOWS_NT;
public static final boolean IS_OS_WINDOWS_XP;
public static final boolean IS_OS_WINDOWS_VISTA;
public static final boolean IS_OS_WINDOWS_7;
public static final boolean IS_OS_WINDOWS_8;
public static final boolean IS_OS_WINDOWS_10;
public static final boolean IS_OS_ZOS;
public static java.lang.String getEnvironmentVariable(java.lang.String, java.lang.String)
{
java.lang.SecurityException v4;
java.lang.String v0, v1, v2, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
label1:
v2 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>(v0);
if v2 != null goto label2;
v3 = v1;
goto label3;
label2:
v3 = v2;
label3:
return v3;
label4:
v4 := @caughtexception;
return v1;
catch java.lang.SecurityException from label1 to label3 with label4;
}
public static java.lang.String getHostName()
{
java.lang.String v1;
boolean v0;
v0 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS>;
if v0 == 0 goto label1;
v1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("COMPUTERNAME");
goto label2;
label1:
v1 = staticinvoke <java.lang.System: java.lang.String getenv(java.lang.String)>("HOSTNAME");
label2:
return v1;
}
public static java.io.File getJavaHome()
{
java.lang.String v1;
java.io.File v0;
v0 = new java.io.File;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.home");
specialinvoke v0.<java.io.File: void <init>(java.lang.String)>(v1);
return v0;
}
public static java.io.File getJavaIoTmpDir()
{
java.lang.String v1;
java.io.File v0;
v0 = new java.io.File;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("java.io.tmpdir");
specialinvoke v0.<java.io.File: void <init>(java.lang.String)>(v1);
return v0;
}
private static boolean getJavaVersionMatches(java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 = <org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_SPECIFICATION_VERSION>;
v2 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isJavaVersionMatch(java.lang.String,java.lang.String)>(v1, v0);
return v2;
}
private static boolean getOsMatches(java.lang.String, java.lang.String)
{
java.lang.String v0, v1, v2, v3;
boolean v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = <org.apache.commons.lang3.SystemUtils: java.lang.String OS_NAME>;
v3 = <org.apache.commons.lang3.SystemUtils: java.lang.String OS_VERSION>;
v4 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSMatch(java.lang.String,java.lang.String,java.lang.String,java.lang.String)>(v2, v3, v0, v1);
return v4;
}
private static boolean getOsMatchesName(java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 = <org.apache.commons.lang3.SystemUtils: java.lang.String OS_NAME>;
v2 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>(v1, v0);
return v2;
}
private static java.lang.String getSystemProperty(java.lang.String)
{
java.lang.SecurityException v2;
java.lang.String v0, v1;
v0 := @parameter0: java.lang.String;
label1:
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>(v0);
label2:
return v1;
label3:
v2 := @caughtexception;
return null;
catch java.lang.SecurityException from label1 to label2 with label3;
}
public static java.io.File getUserDir()
{
java.lang.String v1;
java.io.File v0;
v0 = new java.io.File;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.dir");
specialinvoke v0.<java.io.File: void <init>(java.lang.String)>(v1);
return v0;
}
public static java.io.File getUserHome()
{
java.lang.String v1;
java.io.File v0;
v0 = new java.io.File;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.home");
specialinvoke v0.<java.io.File: void <init>(java.lang.String)>(v1);
return v0;
}
public static java.lang.String getUserName()
{
java.lang.String v0;
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("user.name");
return v0;
}
public static java.lang.String getUserName(java.lang.String)
{
java.lang.String v0, v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("user.name", v0);
return v1;
}
public static boolean isJavaAwtHeadless()
{
java.lang.Boolean v0;
java.lang.String v1, v2;
boolean v3;
v0 = <java.lang.Boolean: java.lang.Boolean TRUE>;
v1 = virtualinvoke v0.<java.lang.Boolean: java.lang.String toString()>();
v2 = <org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_HEADLESS>;
v3 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v2);
return v3;
}
public static boolean isJavaVersionAtLeast(org.apache.commons.lang3.JavaVersion)
{
org.apache.commons.lang3.JavaVersion v0, v1;
boolean v2;
v0 := @parameter0: org.apache.commons.lang3.JavaVersion;
v1 = <org.apache.commons.lang3.SystemUtils: org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM>;
v2 = virtualinvoke v1.<org.apache.commons.lang3.JavaVersion: boolean atLeast(org.apache.commons.lang3.JavaVersion)>(v0);
return v2;
}
public static boolean isJavaVersionAtMost(org.apache.commons.lang3.JavaVersion)
{
org.apache.commons.lang3.JavaVersion v0, v1;
boolean v2;
v0 := @parameter0: org.apache.commons.lang3.JavaVersion;
v1 = <org.apache.commons.lang3.SystemUtils: org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM>;
v2 = virtualinvoke v1.<org.apache.commons.lang3.JavaVersion: boolean atMost(org.apache.commons.lang3.JavaVersion)>(v0);
return v2;
}
static boolean isJavaVersionMatch(java.lang.String, java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
if v0 != null goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>(v1);
return v2;
}
static boolean isOSMatch(java.lang.String, java.lang.String, java.lang.String, java.lang.String)
{
java.lang.String v0, v1, v2, v3;
boolean v4, v5, v6;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.lang.String;
if v0 == null goto label1;
if v1 != null goto label2;
label1:
return 0;
label2:
v4 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSNameMatch(java.lang.String,java.lang.String)>(v0, v2);
if v4 == 0 goto label3;
v5 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean isOSVersionMatch(java.lang.String,java.lang.String)>(v1, v3);
if v5 == 0 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
}
static boolean isOSNameMatch(java.lang.String, java.lang.String)
{
java.lang.String v0, v1;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
if v0 != null goto label1;
return 0;
label1:
v2 = virtualinvoke v0.<java.lang.String: boolean startsWith(java.lang.String)>(v1);
return v2;
}
static boolean isOSVersionMatch(java.lang.String, java.lang.String)
{
java.lang.String[] v3, v4;
int v5, v6, v7, v8;
java.lang.String v0, v1, v10, v9;
boolean v11, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(v0);
if v2 == 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
v4 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
v5 = 0;
label2:
v6 = lengthof v3;
v7 = lengthof v4;
v8 = staticinvoke <java.lang.Math: int min(int,int)>(v6, v7);
if v5 >= v8 goto label4;
v9 = v3[v5];
v10 = v4[v5];
v11 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 != 0 goto label3;
return 0;
label3:
v5 = v5 + 1;
goto label2;
label4:
return 1;
}
public void <init>()
{
org.apache.commons.lang3.SystemUtils v0;
v0 := @this: org.apache.commons.lang3.SystemUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
org.apache.commons.lang3.JavaVersion v21;
java.lang.String v0, v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v5, v6, v7, v8, v9;
boolean v100, v101, v102, v103, v104, v105, v106, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v117, v118, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99;
v0 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("awt.toolkit");
<org.apache.commons.lang3.SystemUtils: java.lang.String AWT_TOOLKIT> = v0;
v1 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("file.encoding");
<org.apache.commons.lang3.SystemUtils: java.lang.String FILE_ENCODING> = v1;
v2 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("file.separator");
<org.apache.commons.lang3.SystemUtils: java.lang.String FILE_SEPARATOR> = v2;
v3 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.fonts");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_FONTS> = v3;
v4 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.graphicsenv");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_GRAPHICSENV> = v4;
v5 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.headless");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_HEADLESS> = v5;
v6 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.awt.printerjob");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_AWT_PRINTERJOB> = v6;
v7 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.class.path");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_CLASS_PATH> = v7;
v8 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.class.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_CLASS_VERSION> = v8;
v9 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.compiler");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_COMPILER> = v9;
v10 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.endorsed.dirs");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_ENDORSED_DIRS> = v10;
v11 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.ext.dirs");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_EXT_DIRS> = v11;
v12 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.home");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_HOME> = v12;
v13 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.io.tmpdir");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_IO_TMPDIR> = v13;
v14 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.library.path");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_LIBRARY_PATH> = v14;
v15 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.runtime.name");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_RUNTIME_NAME> = v15;
v16 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.runtime.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_RUNTIME_VERSION> = v16;
v17 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.specification.name");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_SPECIFICATION_NAME> = v17;
v18 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.specification.vendor");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_SPECIFICATION_VENDOR> = v18;
v19 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.specification.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_SPECIFICATION_VERSION> = v19;
v20 = <org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_SPECIFICATION_VERSION>;
v21 = staticinvoke <org.apache.commons.lang3.JavaVersion: org.apache.commons.lang3.JavaVersion get(java.lang.String)>(v20);
<org.apache.commons.lang3.SystemUtils: org.apache.commons.lang3.JavaVersion JAVA_SPECIFICATION_VERSION_AS_ENUM> = v21;
v22 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.util.prefs.PreferencesFactory");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_UTIL_PREFS_PREFERENCES_FACTORY> = v22;
v23 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vendor");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VENDOR> = v23;
v24 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vendor.url");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VENDOR_URL> = v24;
v25 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VERSION> = v25;
v26 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.info");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_INFO> = v26;
v27 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.name");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_NAME> = v27;
v28 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.specification.name");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_SPECIFICATION_NAME> = v28;
v29 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.specification.vendor");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_SPECIFICATION_VENDOR> = v29;
v30 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.specification.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_SPECIFICATION_VERSION> = v30;
v31 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.vendor");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_VENDOR> = v31;
v32 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("java.vm.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String JAVA_VM_VERSION> = v32;
v33 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("line.separator");
<org.apache.commons.lang3.SystemUtils: java.lang.String LINE_SEPARATOR> = v33;
v34 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("os.arch");
<org.apache.commons.lang3.SystemUtils: java.lang.String OS_ARCH> = v34;
v35 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("os.name");
<org.apache.commons.lang3.SystemUtils: java.lang.String OS_NAME> = v35;
v36 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("os.version");
<org.apache.commons.lang3.SystemUtils: java.lang.String OS_VERSION> = v36;
v37 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("path.separator");
<org.apache.commons.lang3.SystemUtils: java.lang.String PATH_SEPARATOR> = v37;
v38 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.country");
if v38 != null goto label1;
v39 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.region");
goto label2;
label1:
v39 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.country");
label2:
<org.apache.commons.lang3.SystemUtils: java.lang.String USER_COUNTRY> = v39;
v40 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.dir");
<org.apache.commons.lang3.SystemUtils: java.lang.String USER_DIR> = v40;
v41 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.home");
<org.apache.commons.lang3.SystemUtils: java.lang.String USER_HOME> = v41;
v42 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.language");
<org.apache.commons.lang3.SystemUtils: java.lang.String USER_LANGUAGE> = v42;
v43 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.name");
<org.apache.commons.lang3.SystemUtils: java.lang.String USER_NAME> = v43;
v44 = staticinvoke <org.apache.commons.lang3.SystemUtils: java.lang.String getSystemProperty(java.lang.String)>("user.timezone");
<org.apache.commons.lang3.SystemUtils: java.lang.String USER_TIMEZONE> = v44;
v45 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.1");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_1> = v45;
v46 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.2");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_2> = v46;
v47 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.3");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_3> = v47;
v48 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.4");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_4> = v48;
v49 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.5");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_5> = v49;
v50 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.6");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_6> = v50;
v51 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.7");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_7> = v51;
v52 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("1.8");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_8> = v52;
v53 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("9");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_1_9> = v53;
v54 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("9");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_9> = v54;
v55 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("10");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_10> = v55;
v56 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("11");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_11> = v56;
v57 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("12");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_12> = v57;
v58 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("13");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_13> = v58;
v59 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("14");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_14> = v59;
v60 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getJavaVersionMatches(java.lang.String)>("15");
<org.apache.commons.lang3.SystemUtils: boolean IS_JAVA_15> = v60;
v61 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("AIX");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_AIX> = v61;
v62 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("HP-UX");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_HP_UX> = v62;
v63 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("OS/400");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_400> = v63;
v64 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Irix");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_IRIX> = v64;
v65 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Linux");
if v65 != 0 goto label3;
v66 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("LINUX");
if v66 == 0 goto label4;
label3:
v67 = 1;
goto label5;
label4:
v67 = 0;
label5:
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_LINUX> = v67;
v68 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Mac");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC> = v68;
v69 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Mac OS X");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX> = v69;
v70 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.0");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_CHEETAH> = v70;
v71 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.1");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_PUMA> = v71;
v72 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.2");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_JAGUAR> = v72;
v73 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.3");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_PANTHER> = v73;
v74 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.4");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_TIGER> = v74;
v75 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.5");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_LEOPARD> = v75;
v76 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.6");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_SNOW_LEOPARD> = v76;
v77 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.7");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_LION> = v77;
v78 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.8");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_MOUNTAIN_LION> = v78;
v79 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.9");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_MAVERICKS> = v79;
v80 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.10");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_YOSEMITE> = v80;
v81 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.11");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_EL_CAPITAN> = v81;
v82 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.12");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_SIERRA> = v82;
v83 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.13");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_HIGH_SIERRA> = v83;
v84 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.14");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_MOJAVE> = v84;
v85 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.15");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_CATALINA> = v85;
v86 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatches(java.lang.String,java.lang.String)>("Mac OS X", "10.16");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX_BIG_SUR> = v86;
v87 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("FreeBSD");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_FREE_BSD> = v87;
v88 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("OpenBSD");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_OPEN_BSD> = v88;
v89 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("NetBSD");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_NET_BSD> = v89;
v90 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("OS/2");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_OS2> = v90;
v91 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Solaris");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_SOLARIS> = v91;
v92 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("SunOS");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_SUN_OS> = v92;
v93 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_AIX>;
if v93 != 0 goto label6;
v94 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_HP_UX>;
if v94 != 0 goto label6;
v95 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_IRIX>;
if v95 != 0 goto label6;
v96 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_LINUX>;
if v96 != 0 goto label6;
v97 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_MAC_OSX>;
if v97 != 0 goto label6;
v98 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_SOLARIS>;
if v98 != 0 goto label6;
v99 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_SUN_OS>;
if v99 != 0 goto label6;
v100 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_FREE_BSD>;
if v100 != 0 goto label6;
v101 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_OPEN_BSD>;
if v101 != 0 goto label6;
v102 = <org.apache.commons.lang3.SystemUtils: boolean IS_OS_NET_BSD>;
if v102 == 0 goto label7;
label6:
v103 = 1;
goto label8;
label7:
v103 = 0;
label8:
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_UNIX> = v103;
v104 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS> = v104;
v105 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 2000");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_2000> = v105;
v106 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 2003");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_2003> = v106;
v107 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows Server 2008");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_2008> = v107;
v108 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows Server 2012");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_2012> = v108;
v109 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 95");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_95> = v109;
v110 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 98");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_98> = v110;
v111 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows Me");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_ME> = v111;
v112 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows NT");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_NT> = v112;
v113 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows XP");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_XP> = v113;
v114 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows Vista");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_VISTA> = v114;
v115 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 7");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_7> = v115;
v116 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 8");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_8> = v116;
v117 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("Windows 10");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_WINDOWS_10> = v117;
v118 = staticinvoke <org.apache.commons.lang3.SystemUtils: boolean getOsMatchesName(java.lang.String)>("z/OS");
<org.apache.commons.lang3.SystemUtils: boolean IS_OS_ZOS> = v118;
return;
}
}