public class org.apache.commons.lang3.builder.CompareToBuilder extends java.lang.Object implements org.apache.commons.lang3.builder.Builder
{
private int comparison;
public void <init>()
{
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 0;
return;
}
public static int reflectionCompare(java.lang.Object, java.lang.Object)
{
int v3;
java.lang.Object v0, v1;
java.lang.String[] v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 = newarray (java.lang.String)[0];
v3 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(v0, v1, 0, null, v2);
return v3;
}
public static int reflectionCompare(java.lang.Object, java.lang.Object, boolean)
{
int v4;
java.lang.Object v0, v1;
java.lang.String[] v3;
boolean v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: boolean;
v3 = newarray (java.lang.String)[0];
v4 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(v0, v1, v2, null, v3);
return v4;
}
public static int reflectionCompare(java.lang.Object, java.lang.Object, java.util.Collection)
{
java.util.Collection v2;
int v4;
java.lang.Object v0, v1;
java.lang.String[] v3;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.util.Collection;
v3 = staticinvoke <org.apache.commons.lang3.builder.ReflectionToStringBuilder: java.lang.String[] toNoNullStringArray(java.util.Collection)>(v2);
v4 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,java.lang.String[])>(v0, v1, v3);
return v4;
}
public static transient int reflectionCompare(java.lang.Object, java.lang.Object, java.lang.String[])
{
int v3;
java.lang.Object v0, v1;
java.lang.String[] v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.lang.String[];
v3 = staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: int reflectionCompare(java.lang.Object,java.lang.Object,boolean,java.lang.Class,java.lang.String[])>(v0, v1, 0, null, v2);
return v3;
}
public static transient int reflectionCompare(java.lang.Object, java.lang.Object, boolean, java.lang.Class, java.lang.String[])
{
java.lang.String[] v4;
java.lang.ClassCastException v7;
org.apache.commons.lang3.builder.CompareToBuilder v8;
int v10;
java.lang.Class v3, v5, v9;
java.lang.Object v0, v1;
boolean v2, v6;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: boolean;
v3 := @parameter3: java.lang.Class;
v4 := @parameter4: java.lang.String[];
if v0 != v1 goto label1;
return 0;
label1:
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v0, "lhs");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "rhs");
v5 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: boolean isInstance(java.lang.Object)>(v1);
if v6 != 0 goto label2;
v7 = new java.lang.ClassCastException;
specialinvoke v7.<java.lang.ClassCastException: void <init>()>();
throw v7;
label2:
v8 = new org.apache.commons.lang3.builder.CompareToBuilder;
specialinvoke v8.<org.apache.commons.lang3.builder.CompareToBuilder: void <init>()>();
staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])>(v0, v1, v5, v8, v2, v4);
label3:
v9 = virtualinvoke v5.<java.lang.Class: java.lang.Class getSuperclass()>();
if v9 == null goto label4;
if v5 == v3 goto label4;
v5 = virtualinvoke v5.<java.lang.Class: java.lang.Class getSuperclass()>();
staticinvoke <org.apache.commons.lang3.builder.CompareToBuilder: void reflectionAppend(java.lang.Object,java.lang.Object,java.lang.Class,org.apache.commons.lang3.builder.CompareToBuilder,boolean,java.lang.String[])>(v0, v1, v5, v8, v2, v4);
goto label3;
label4:
v10 = virtualinvoke v8.<org.apache.commons.lang3.builder.CompareToBuilder: int toComparison()>();
return v10;
}
private static void reflectionAppend(java.lang.Object, java.lang.Object, java.lang.Class, org.apache.commons.lang3.builder.CompareToBuilder, boolean, java.lang.String[])
{
java.lang.String[] v5;
int v15, v17, v7, v8, v9;
java.lang.InternalError v22;
java.lang.String v11, v13;
boolean v12, v14, v16, v18, v4;
java.lang.IllegalAccessException v21;
java.lang.reflect.Field v10;
org.apache.commons.lang3.builder.CompareToBuilder v3;
java.lang.reflect.Field[] v6;
java.lang.Class v2;
java.lang.Object v0, v1, v19, v20;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.lang.Class;
v3 := @parameter3: org.apache.commons.lang3.builder.CompareToBuilder;
v4 := @parameter4: boolean;
v5 := @parameter5: java.lang.String[];
v6 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Field[] getDeclaredFields()>();
staticinvoke <java.lang.reflect.AccessibleObject: void setAccessible(java.lang.reflect.AccessibleObject[],boolean)>(v6, 1);
v7 = 0;
label1:
v8 = lengthof v6;
if v7 >= v8 goto label7;
v9 = v3.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v9 != 0 goto label7;
v10 = v6[v7];
v11 = virtualinvoke v10.<java.lang.reflect.Field: java.lang.String getName()>();
v12 = staticinvoke <org.apache.commons.lang3.ArrayUtils: boolean contains(java.lang.Object[],java.lang.Object)>(v5, v11);
if v12 != 0 goto label6;
v13 = virtualinvoke v10.<java.lang.reflect.Field: java.lang.String getName()>();
v14 = virtualinvoke v13.<java.lang.String: boolean contains(java.lang.CharSequence)>("$");
if v14 != 0 goto label6;
if v4 != 0 goto label2;
v15 = virtualinvoke v10.<java.lang.reflect.Field: int getModifiers()>();
v16 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(v15);
if v16 != 0 goto label6;
label2:
v17 = virtualinvoke v10.<java.lang.reflect.Field: int getModifiers()>();
v18 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v17);
if v18 != 0 goto label6;
label3:
v19 = virtualinvoke v10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v0);
v20 = virtualinvoke v10.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v1);
virtualinvoke v3.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object)>(v19, v20);
label4:
goto label6;
label5:
v21 := @caughtexception;
v22 = new java.lang.InternalError;
specialinvoke v22.<java.lang.InternalError: void <init>(java.lang.String)>("Unexpected IllegalAccessException");
throw v22;
label6:
v7 = v7 + 1;
goto label1;
label7:
return;
catch java.lang.IllegalAccessException from label3 to label4 with label5;
}
public org.apache.commons.lang3.builder.CompareToBuilder appendSuper(int)
{
int v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: int;
v2 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v2 == 0 goto label1;
return v0;
label1:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v1;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0, v3;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator)>(v1, v2, null);
return v3;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object, java.lang.Object, java.util.Comparator)
{
org.apache.commons.lang3.builder.CompareToBuilder v0;
int v4, v5, v8, v9;
java.lang.Class v6;
java.lang.Object v1, v2;
java.util.Comparator v3;
boolean v7;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.util.Comparator;
v4 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v4 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v5 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v5;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v6 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v7 = virtualinvoke v6.<java.lang.Class: boolean isArray()>();
if v7 == 0 goto label5;
specialinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: void appendArray(java.lang.Object,java.lang.Object,java.util.Comparator)>(v1, v2, v3);
goto label7;
label5:
if v3 != null goto label6;
v8 = interfaceinvoke v1.<java.lang.Comparable: int compareTo(java.lang.Object)>(v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v8;
goto label7;
label6:
v9 = interfaceinvoke v3.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
label7:
return v0;
}
private void appendArray(java.lang.Object, java.lang.Object, java.util.Comparator)
{
org.apache.commons.lang3.builder.CompareToBuilder v0;
java.lang.Object v1, v2;
java.util.Comparator v3;
boolean v10, v11, v4, v5, v6, v7, v8, v9;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.util.Comparator;
v4 = v1 instanceof long[];
if v4 == 0 goto label1;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(long[],long[])>(v1, v2);
goto label9;
label1:
v5 = v1 instanceof int[];
if v5 == 0 goto label2;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(int[],int[])>(v1, v2);
goto label9;
label2:
v6 = v1 instanceof short[];
if v6 == 0 goto label3;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(short[],short[])>(v1, v2);
goto label9;
label3:
v7 = v1 instanceof char[];
if v7 == 0 goto label4;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(char[],char[])>(v1, v2);
goto label9;
label4:
v8 = v1 instanceof byte[];
if v8 == 0 goto label5;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(byte[],byte[])>(v1, v2);
goto label9;
label5:
v9 = v1 instanceof double[];
if v9 == 0 goto label6;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(double[],double[])>(v1, v2);
goto label9;
label6:
v10 = v1 instanceof float[];
if v10 == 0 goto label7;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(float[],float[])>(v1, v2);
goto label9;
label7:
v11 = v1 instanceof boolean[];
if v11 == 0 goto label8;
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(boolean[],boolean[])>(v1, v2);
goto label9;
label8:
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator)>(v1, v2, v3);
label9:
return;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(long, long)
{
int v3, v4;
long v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Long: int compare(long,long)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(int, int)
{
int v1, v2, v3, v4;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Integer: int compare(int,int)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(short, short)
{
short v1, v2;
int v3, v4;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: short;
v2 := @parameter1: short;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Short: int compare(short,short)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(char, char)
{
int v3, v4;
char v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: char;
v2 := @parameter1: char;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Character: int compare(char,char)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(byte, byte)
{
byte v1, v2;
int v3, v4;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: byte;
v2 := @parameter1: byte;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Byte: int compare(byte,byte)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(double, double)
{
int v3, v4;
org.apache.commons.lang3.builder.CompareToBuilder v0;
double v1, v2;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: double;
v2 := @parameter1: double;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Double: int compare(double,double)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(float, float)
{
int v3, v4;
float v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: float;
v2 := @parameter1: float;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
v4 = staticinvoke <java.lang.Float: int compare(float,float)>(v1, v2);
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(boolean, boolean)
{
int v3, v4;
org.apache.commons.lang3.builder.CompareToBuilder v0;
boolean v1, v2;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 == 0 goto label3;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
goto label4;
label3:
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
label4:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[], java.lang.Object[])
{
java.lang.Object[] v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0, v3;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: java.lang.Object[];
v3 = virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[],java.lang.Object[],java.util.Comparator)>(v1, v2, null);
return v3;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object[], java.lang.Object[], java.util.Comparator)
{
java.lang.Object[] v1, v2;
byte v10;
int v11, v12, v13, v4, v5, v6, v7, v8, v9;
org.apache.commons.lang3.builder.CompareToBuilder v0;
java.lang.Object v14, v15;
java.util.Comparator v3;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: java.lang.Object[];
v3 := @parameter2: java.util.Comparator;
v4 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v4 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v5 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v5;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v6 = lengthof v1;
v7 = lengthof v2;
if v6 == v7 goto label7;
v8 = lengthof v1;
v9 = lengthof v2;
if v8 >= v9 goto label5;
v10 = -1;
goto label6;
label5:
v10 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v10;
return v0;
label7:
v11 = 0;
label8:
v12 = lengthof v1;
if v11 >= v12 goto label9;
v13 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v13 != 0 goto label9;
v14 = v1[v11];
v15 = v2[v11];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(java.lang.Object,java.lang.Object,java.util.Comparator)>(v14, v15, v3);
v11 = v11 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(long[], long[])
{
long v13, v14;
org.apache.commons.lang3.builder.CompareToBuilder v0;
long[] v1, v2;
byte v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: long[];
v2 := @parameter1: long[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(long,long)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(int[], int[])
{
org.apache.commons.lang3.builder.CompareToBuilder v0;
byte v9;
int[] v1, v2;
int v10, v11, v12, v13, v14, v3, v4, v5, v6, v7, v8;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: int[];
v2 := @parameter1: int[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(int,int)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(short[], short[])
{
org.apache.commons.lang3.builder.CompareToBuilder v0;
short v13, v14;
byte v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
short[] v1, v2;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: short[];
v2 := @parameter1: short[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(short,short)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(char[], char[])
{
char v13, v14;
org.apache.commons.lang3.builder.CompareToBuilder v0;
byte v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
char[] v1, v2;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: char[];
v2 := @parameter1: char[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(char,char)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(byte[], byte[])
{
byte[] v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
byte v13, v14, v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: byte[];
v2 := @parameter1: byte[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(byte,byte)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(double[], double[])
{
double[] v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
byte v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
double v13, v14;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: double[];
v2 := @parameter1: double[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(double,double)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(float[], float[])
{
float[] v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
byte v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
float v13, v14;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: float[];
v2 := @parameter1: float[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(float,float)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public org.apache.commons.lang3.builder.CompareToBuilder append(boolean[], boolean[])
{
boolean[] v1, v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
byte v9;
int v10, v11, v12, v3, v4, v5, v6, v7, v8;
boolean v13, v14;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 := @parameter0: boolean[];
v2 := @parameter1: boolean[];
v3 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v3 == 0 goto label1;
return v0;
label1:
if v1 != v2 goto label2;
return v0;
label2:
if v1 != null goto label3;
v4 = (int) -1;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v4;
return v0;
label3:
if v2 != null goto label4;
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = 1;
return v0;
label4:
v5 = lengthof v1;
v6 = lengthof v2;
if v5 == v6 goto label7;
v7 = lengthof v1;
v8 = lengthof v2;
if v7 >= v8 goto label5;
v9 = -1;
goto label6;
label5:
v9 = 1;
label6:
v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison> = v9;
return v0;
label7:
v10 = 0;
label8:
v11 = lengthof v1;
if v10 >= v11 goto label9;
v12 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
if v12 != 0 goto label9;
v13 = v1[v10];
v14 = v2[v10];
virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: org.apache.commons.lang3.builder.CompareToBuilder append(boolean,boolean)>(v13, v14);
v10 = v10 + 1;
goto label8;
label9:
return v0;
}
public int toComparison()
{
int v1;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 = v0.<org.apache.commons.lang3.builder.CompareToBuilder: int comparison>;
return v1;
}
public java.lang.Integer build()
{
int v1;
java.lang.Integer v2;
org.apache.commons.lang3.builder.CompareToBuilder v0;
v0 := @this: org.apache.commons.lang3.builder.CompareToBuilder;
v1 = virtualinvoke v0.<org.apache.commons.lang3.builder.CompareToBuilder: int toComparison()>();
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
return v2;
}
}