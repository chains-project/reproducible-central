public class org.apache.commons.lang3.builder.ReflectionDiffBuilder extends java.lang.Object implements org.apache.commons.lang3.builder.Builder
{
private final java.lang.Object left;
private final java.lang.Object right;
private final org.apache.commons.lang3.builder.DiffBuilder diffBuilder;
public void <init>(java.lang.Object, java.lang.Object, org.apache.commons.lang3.builder.ToStringStyle)
{
org.apache.commons.lang3.builder.DiffBuilder v4;
org.apache.commons.lang3.builder.ReflectionDiffBuilder v0;
org.apache.commons.lang3.builder.ToStringStyle v3;
java.lang.Object v1, v2;
v0 := @this: org.apache.commons.lang3.builder.ReflectionDiffBuilder;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: org.apache.commons.lang3.builder.ToStringStyle;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object left> = v1;
v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object right> = v2;
v4 = new org.apache.commons.lang3.builder.DiffBuilder;
specialinvoke v4.<org.apache.commons.lang3.builder.DiffBuilder: void <init>(java.lang.Object,java.lang.Object,org.apache.commons.lang3.builder.ToStringStyle)>(v1, v2, v3);
v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: org.apache.commons.lang3.builder.DiffBuilder diffBuilder> = v4;
return;
}
public org.apache.commons.lang3.builder.DiffResult build()
{
org.apache.commons.lang3.builder.DiffBuilder v4, v8;
org.apache.commons.lang3.builder.ReflectionDiffBuilder v0;
java.lang.Class v7;
java.lang.Object v1, v2, v6;
org.apache.commons.lang3.builder.DiffResult v5, v9;
boolean v3;
v0 := @this: org.apache.commons.lang3.builder.ReflectionDiffBuilder;
v1 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object left>;
v2 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object right>;
v3 = virtualinvoke v1.<java.lang.Object: boolean equals(java.lang.Object)>(v2);
if v3 == 0 goto label1;
v4 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: org.apache.commons.lang3.builder.DiffBuilder diffBuilder>;
v5 = virtualinvoke v4.<org.apache.commons.lang3.builder.DiffBuilder: org.apache.commons.lang3.builder.DiffResult build()>();
return v5;
label1:
v6 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object left>;
v7 = virtualinvoke v6.<java.lang.Object: java.lang.Class getClass()>();
specialinvoke v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: void appendFields(java.lang.Class)>(v7);
v8 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: org.apache.commons.lang3.builder.DiffBuilder diffBuilder>;
v9 = virtualinvoke v8.<org.apache.commons.lang3.builder.DiffBuilder: org.apache.commons.lang3.builder.DiffResult build()>();
return v9;
}
private void appendFields(java.lang.Class)
{
org.apache.commons.lang3.builder.ReflectionDiffBuilder v0;
int v3, v4;
java.lang.InternalError v14;
java.lang.String v15, v16, v8;
boolean v6;
org.apache.commons.lang3.builder.DiffBuilder v7;
java.lang.IllegalAccessException v13;
java.lang.reflect.Field v5;
java.lang.reflect.Field[] v2;
java.lang.Class v1;
java.lang.Object v10, v11, v12, v9;
v0 := @this: org.apache.commons.lang3.builder.ReflectionDiffBuilder;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <org.apache.commons.lang3.reflect.FieldUtils: java.lang.reflect.Field[] getAllFields(java.lang.Class)>(v1);
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label6;
v5 = v2[v4];
v6 = specialinvoke v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: boolean accept(java.lang.reflect.Field)>(v5);
if v6 == 0 goto label5;
label2:
v7 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: org.apache.commons.lang3.builder.DiffBuilder diffBuilder>;
v8 = virtualinvoke v5.<java.lang.reflect.Field: java.lang.String getName()>();
v9 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object left>;
v10 = staticinvoke <org.apache.commons.lang3.reflect.FieldUtils: java.lang.Object readField(java.lang.reflect.Field,java.lang.Object,boolean)>(v5, v9, 1);
v11 = v0.<org.apache.commons.lang3.builder.ReflectionDiffBuilder: java.lang.Object right>;
v12 = staticinvoke <org.apache.commons.lang3.reflect.FieldUtils: java.lang.Object readField(java.lang.reflect.Field,java.lang.Object,boolean)>(v5, v11, 1);
virtualinvoke v7.<org.apache.commons.lang3.builder.DiffBuilder: org.apache.commons.lang3.builder.DiffBuilder append(java.lang.String,java.lang.Object,java.lang.Object)>(v8, v10, v12);
label3:
goto label5;
label4:
v13 := @caughtexception;
v14 = new java.lang.InternalError;
v15 = virtualinvoke v13.<java.lang.IllegalAccessException: java.lang.String getMessage()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected IllegalAccessException: \u0001");
specialinvoke v14.<java.lang.InternalError: void <init>(java.lang.String)>(v16);
throw v14;
label5:
v4 = v4 + 1;
goto label1;
label6:
return;
catch java.lang.IllegalAccessException from label2 to label3 with label4;
}
private boolean accept(java.lang.reflect.Field)
{
org.apache.commons.lang3.builder.ReflectionDiffBuilder v0;
java.lang.reflect.Field v1;
int v3, v4, v5, v7;
java.lang.String v2;
boolean v6, v8, v9;
v0 := @this: org.apache.commons.lang3.builder.ReflectionDiffBuilder;
v1 := @parameter0: java.lang.reflect.Field;
v2 = virtualinvoke v1.<java.lang.reflect.Field: java.lang.String getName()>();
v3 = virtualinvoke v2.<java.lang.String: int indexOf(int)>(36);
v4 = (int) -1;
if v3 == v4 goto label1;
return 0;
label1:
v5 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
v6 = staticinvoke <java.lang.reflect.Modifier: boolean isTransient(int)>(v5);
if v6 == 0 goto label2;
return 0;
label2:
v7 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
v8 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v7);
if v8 != 0 goto label3;
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
return v9;
}
}