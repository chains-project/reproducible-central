public final class org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246 extends java.lang.Object implements java.util.function.Predicate
{
java.lang.Comparable cap0;
java.lang.Comparable cap1;
public static java.util.function.Predicate bootstrap$(java.lang.Comparable, java.lang.Comparable)
{
java.lang.Comparable v0, v1;
org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246 v2;
v0 := @parameter0: java.lang.Comparable;
v1 := @parameter1: java.lang.Comparable;
v2 = new org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246;
specialinvoke v2.<org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246: void <init>(java.lang.Comparable,java.lang.Comparable)>(v0, v1);
return v2;
}
public void <init>(java.lang.Comparable, java.lang.Comparable)
{
java.lang.Comparable v1, v2;
org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246 v0;
v0 := @this: org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246;
v1 := @parameter0: java.lang.Comparable;
v2 := @parameter1: java.lang.Comparable;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246: java.lang.Comparable cap0> = v1;
v0.<org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246: java.lang.Comparable cap1> = v2;
return;
}
public boolean test(java.lang.Object)
{
java.lang.Comparable v2, v3;
java.lang.Object v1;
org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246 v0;
boolean v4;
v0 := @this: org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246: java.lang.Comparable cap0>;
v3 = v0.<org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246: java.lang.Comparable cap1>;
v4 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils: boolean lambda$betweenExclusive$1(java.lang.Comparable,java.lang.Comparable,java.lang.Comparable)>(v2, v3, v1);
return v4;
}
}