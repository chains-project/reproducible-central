public class org.apache.commons.lang3.event.EventUtils extends java.lang.Object
{
public void <init>()
{
org.apache.commons.lang3.event.EventUtils v0;
v0 := @this: org.apache.commons.lang3.event.EventUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void addEventListener(java.lang.Object, java.lang.Class, java.lang.Object)
{
java.lang.Throwable v22;
java.lang.Object[] v5;
java.lang.NoSuchMethodException v6;
java.lang.String v10, v11, v12, v16, v17, v18, v19, v3, v4, v9;
java.lang.IllegalAccessException v13;
java.lang.RuntimeException v21;
java.lang.IllegalArgumentException v14, v7;
java.lang.reflect.InvocationTargetException v20;
java.lang.Class v1, v15, v8;
java.lang.Object v0, v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.lang.Object;
label1:
v3 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("add\u0001");
v5 = newarray (java.lang.Object)[1];
v5[0] = v2;
staticinvoke <org.apache.commons.lang3.reflect.MethodUtils: java.lang.Object invokeMethod(java.lang.Object,java.lang.String,java.lang.Object[])>(v0, v4, v5);
label2:
goto label6;
label3:
v6 := @caughtexception;
v7 = new java.lang.IllegalArgumentException;
v8 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v10 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
v11 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v9, v10, v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class \u0001 does not have a public add\u0001 method which takes a parameter of type \u0001.");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v7;
label4:
v13 := @caughtexception;
v14 = new java.lang.IllegalArgumentException;
v15 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v16 = virtualinvoke v15.<java.lang.Class: java.lang.String getName()>();
v17 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
v18 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v16, v17, v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class \u0001 does not have an accessible add\u0001 method which takes a parameter of type \u0001.");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v19);
throw v14;
label5:
v20 := @caughtexception;
v21 = new java.lang.RuntimeException;
v22 = virtualinvoke v20.<java.lang.reflect.InvocationTargetException: java.lang.Throwable getCause()>();
specialinvoke v21.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to add listener.", v22);
throw v21;
label6:
return;
catch java.lang.NoSuchMethodException from label1 to label2 with label3;
catch java.lang.IllegalAccessException from label1 to label2 with label4;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label5;
}
public static transient void bindEventsToMethod(java.lang.Object, java.lang.String, java.lang.Object, java.lang.Class, java.lang.String[])
{
java.lang.Class[] v7;
java.lang.String[] v4;
java.lang.Class v3, v5;
java.lang.Object v0, v10, v2, v9;
org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler v8;
java.lang.ClassLoader v6;
java.lang.String v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: java.lang.Class;
v4 := @parameter4: java.lang.String[];
v5 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v7 = newarray (java.lang.Class)[1];
v7[0] = v3;
v8 = new org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler;
specialinvoke v8.<org.apache.commons.lang3.event.EventUtils$EventBindingInvocationHandler: void <init>(java.lang.Object,java.lang.String,java.lang.String[])>(v0, v1, v4);
v9 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(v6, v7, v8);
v10 = virtualinvoke v3.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v9);
staticinvoke <org.apache.commons.lang3.event.EventUtils: void addEventListener(java.lang.Object,java.lang.Class,java.lang.Object)>(v2, v3, v10);
return;
}
}