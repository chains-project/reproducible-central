final class org.apache.commons.lang3.reflect.MemberUtils$Executable extends java.lang.Object
{
private final java.lang.Class[] parameterTypes;
private final boolean isVarArgs;
private static org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Method)
{
java.lang.reflect.Method v0;
org.apache.commons.lang3.reflect.MemberUtils$Executable v1;
v0 := @parameter0: java.lang.reflect.Method;
v1 = new org.apache.commons.lang3.reflect.MemberUtils$Executable;
specialinvoke v1.<org.apache.commons.lang3.reflect.MemberUtils$Executable: void <init>(java.lang.reflect.Method)>(v0);
return v1;
}
private static org.apache.commons.lang3.reflect.MemberUtils$Executable of(java.lang.reflect.Constructor)
{
java.lang.reflect.Constructor v0;
org.apache.commons.lang3.reflect.MemberUtils$Executable v1;
v0 := @parameter0: java.lang.reflect.Constructor;
v1 = new org.apache.commons.lang3.reflect.MemberUtils$Executable;
specialinvoke v1.<org.apache.commons.lang3.reflect.MemberUtils$Executable: void <init>(java.lang.reflect.Constructor)>(v0);
return v1;
}
private void <init>(java.lang.reflect.Method)
{
java.lang.Class[] v2;
java.lang.reflect.Method v1;
org.apache.commons.lang3.reflect.MemberUtils$Executable v0;
boolean v3;
v0 := @this: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v1 := @parameter0: java.lang.reflect.Method;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: java.lang.Class[] parameterTypes> = v2;
v3 = virtualinvoke v1.<java.lang.reflect.Method: boolean isVarArgs()>();
v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: boolean isVarArgs> = v3;
return;
}
private void <init>(java.lang.reflect.Constructor)
{
java.lang.Class[] v2;
java.lang.reflect.Constructor v1;
org.apache.commons.lang3.reflect.MemberUtils$Executable v0;
boolean v3;
v0 := @this: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v1 := @parameter0: java.lang.reflect.Constructor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<java.lang.reflect.Constructor: java.lang.Class[] getParameterTypes()>();
v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: java.lang.Class[] parameterTypes> = v2;
v3 = virtualinvoke v1.<java.lang.reflect.Constructor: boolean isVarArgs()>();
v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: boolean isVarArgs> = v3;
return;
}
public java.lang.Class[] getParameterTypes()
{
java.lang.Class[] v1;
org.apache.commons.lang3.reflect.MemberUtils$Executable v0;
v0 := @this: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v1 = v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: java.lang.Class[] parameterTypes>;
return v1;
}
public boolean isVarArgs()
{
org.apache.commons.lang3.reflect.MemberUtils$Executable v0;
boolean v1;
v0 := @this: org.apache.commons.lang3.reflect.MemberUtils$Executable;
v1 = v0.<org.apache.commons.lang3.reflect.MemberUtils$Executable: boolean isVarArgs>;
return v1;
}
}