public class org.apache.commons.lang3.text.translate.UnicodeEscaper extends org.apache.commons.lang3.text.translate.CodePointTranslator
{
private final int below;
private final int above;
private final boolean between;
public void <init>()
{
org.apache.commons.lang3.text.translate.UnicodeEscaper v0;
v0 := @this: org.apache.commons.lang3.text.translate.UnicodeEscaper;
specialinvoke v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: void <init>(int,int,boolean)>(0, 2147483647, 1);
return;
}
protected void <init>(int, int, boolean)
{
int v1, v2;
org.apache.commons.lang3.text.translate.UnicodeEscaper v0;
boolean v3;
v0 := @this: org.apache.commons.lang3.text.translate.UnicodeEscaper;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<org.apache.commons.lang3.text.translate.CodePointTranslator: void <init>()>();
v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: int below> = v1;
v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: int above> = v2;
v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: boolean between> = v3;
return;
}
public static org.apache.commons.lang3.text.translate.UnicodeEscaper below(int)
{
int v0;
org.apache.commons.lang3.text.translate.UnicodeEscaper v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.text.translate.UnicodeEscaper: org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int,int)>(v0, 2147483647);
return v1;
}
public static org.apache.commons.lang3.text.translate.UnicodeEscaper above(int)
{
int v0;
org.apache.commons.lang3.text.translate.UnicodeEscaper v1;
v0 := @parameter0: int;
v1 = staticinvoke <org.apache.commons.lang3.text.translate.UnicodeEscaper: org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int,int)>(0, v0);
return v1;
}
public static org.apache.commons.lang3.text.translate.UnicodeEscaper outsideOf(int, int)
{
int v0, v1;
org.apache.commons.lang3.text.translate.UnicodeEscaper v2;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = new org.apache.commons.lang3.text.translate.UnicodeEscaper;
specialinvoke v2.<org.apache.commons.lang3.text.translate.UnicodeEscaper: void <init>(int,int,boolean)>(v0, v1, 0);
return v2;
}
public static org.apache.commons.lang3.text.translate.UnicodeEscaper between(int, int)
{
int v0, v1;
org.apache.commons.lang3.text.translate.UnicodeEscaper v2;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = new org.apache.commons.lang3.text.translate.UnicodeEscaper;
specialinvoke v2.<org.apache.commons.lang3.text.translate.UnicodeEscaper: void <init>(int,int,boolean)>(v0, v1, 1);
return v2;
}
public boolean translate(int, java.io.Writer) throws java.io.IOException
{
org.apache.commons.lang3.text.translate.UnicodeEscaper v0;
int v1, v11, v12, v15, v16, v19, v20, v23, v4, v5, v6, v7, v8;
java.lang.String v9;
boolean v3;
char v13, v17, v21, v24;
java.io.Writer v2;
char[] v10, v14, v18, v22;
v0 := @this: org.apache.commons.lang3.text.translate.UnicodeEscaper;
v1 := @parameter0: int;
v2 := @parameter1: java.io.Writer;
v3 = v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: boolean between>;
if v3 == 0 goto label2;
v4 = v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: int below>;
if v1 < v4 goto label1;
v5 = v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: int above>;
if v1 <= v5 goto label3;
label1:
return 0;
label2:
v6 = v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: int below>;
if v1 < v6 goto label3;
v7 = v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: int above>;
if v1 > v7 goto label3;
return 0;
label3:
v8 = (int) 65535;
if v1 <= v8 goto label4;
v9 = virtualinvoke v0.<org.apache.commons.lang3.text.translate.UnicodeEscaper: java.lang.String toUtf16Escape(int)>(v1);
virtualinvoke v2.<java.io.Writer: void write(java.lang.String)>(v9);
goto label5;
label4:
virtualinvoke v2.<java.io.Writer: void write(java.lang.String)>("\\u");
v10 = <org.apache.commons.lang3.text.translate.UnicodeEscaper: char[] HEX_DIGITS>;
v11 = v1 >> 12;
v12 = v11 & 15;
v13 = v10[v12];
virtualinvoke v2.<java.io.Writer: void write(int)>(v13);
v14 = <org.apache.commons.lang3.text.translate.UnicodeEscaper: char[] HEX_DIGITS>;
v15 = v1 >> 8;
v16 = v15 & 15;
v17 = v14[v16];
virtualinvoke v2.<java.io.Writer: void write(int)>(v17);
v18 = <org.apache.commons.lang3.text.translate.UnicodeEscaper: char[] HEX_DIGITS>;
v19 = v1 >> 4;
v20 = v19 & 15;
v21 = v18[v20];
virtualinvoke v2.<java.io.Writer: void write(int)>(v21);
v22 = <org.apache.commons.lang3.text.translate.UnicodeEscaper: char[] HEX_DIGITS>;
v23 = v1 & 15;
v24 = v22[v23];
virtualinvoke v2.<java.io.Writer: void write(int)>(v24);
label5:
return 1;
}
protected java.lang.String toUtf16Escape(int)
{
int v1;
java.lang.String v2, v3;
org.apache.commons.lang3.text.translate.UnicodeEscaper v0;
v0 := @this: org.apache.commons.lang3.text.translate.UnicodeEscaper;
v1 := @parameter0: int;
v2 = staticinvoke <org.apache.commons.lang3.text.translate.UnicodeEscaper: java.lang.String hex(int)>(v1);
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\\u\u0001");
return v3;
}
}