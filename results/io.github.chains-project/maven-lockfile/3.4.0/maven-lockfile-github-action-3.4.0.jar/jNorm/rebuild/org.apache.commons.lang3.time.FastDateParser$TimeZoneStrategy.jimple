class org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy extends org.apache.commons.lang3.time.FastDateParser$PatternStrategy
{
private static final java.lang.String RFC_822_TIME_ZONE;
private static final java.lang.String GMT_OPTION;
private final java.util.Locale locale;
private final java.util.Map tzNames;
private static final int ID;
void <init>(java.util.Locale)
{
java.lang.String[] v11;
java.util.HashMap v2;
java.util.TreeSet v5;
org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo v15, v16, v19;
java.util.Locale v1, v3;
java.util.Map v24;
int v10, v17, v18, v9;
java.lang.String v12, v20, v21, v22;
boolean v13, v23, v26;
org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy v0;
java.util.Iterator v25;
java.util.TimeZone v14;
java.text.DateFormatSymbols v7;
java.lang.Object v27;
java.lang.StringBuilder v28, v4;
java.util.Comparator v6;
java.lang.String[][] v8;
v0 := @this: org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy;
v1 := @parameter0: java.util.Locale;
specialinvoke v0.<org.apache.commons.lang3.time.FastDateParser$PatternStrategy: void <init>()>();
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames> = v2;
v3 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(v1);
v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Locale locale> = v3;
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("((?iu)[+-]\\d{4}|GMT[+-]\\d{1,2}:\\d{2}");
v5 = new java.util.TreeSet;
v6 = <org.apache.commons.lang3.time.FastDateParser: java.util.Comparator LONGER_FIRST_LOWERCASE>;
specialinvoke v5.<java.util.TreeSet: void <init>(java.util.Comparator)>(v6);
v7 = staticinvoke <java.text.DateFormatSymbols: java.text.DateFormatSymbols getInstance(java.util.Locale)>(v1);
v8 = virtualinvoke v7.<java.text.DateFormatSymbols: java.lang.String[][] getZoneStrings()>();
v9 = lengthof v8;
v10 = 0;
label01:
if v10 >= v9 goto label08;
v11 = v8[v10];
v12 = v11[0];
v13 = virtualinvoke v12.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>("GMT");
if v13 != 0 goto label07;
v14 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(v12);
v15 = new org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo;
specialinvoke v15.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo: void <init>(java.util.TimeZone,boolean)>(v14, 0);
v16 = v15;
v17 = 1;
label02:
v18 = lengthof v11;
if v17 >= v18 goto label07;
lookupswitch(v17)
{
case 3: goto label03;
case 5: goto label04;
default: goto label05;
};
label03:
v19 = new org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo;
specialinvoke v19.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo: void <init>(java.util.TimeZone,boolean)>(v14, 1);
v16 = v19;
goto label05;
label04:
v16 = v15;
label05:
v20 = v11[v17];
if v20 == null goto label06;
v21 = v11[v17];
v22 = virtualinvoke v21.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v1);
v23 = interfaceinvoke v5.<java.util.Set: boolean add(java.lang.Object)>(v22);
if v23 == 0 goto label06;
v24 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames>;
interfaceinvoke v24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v22, v16);
label06:
v17 = v17 + 1;
goto label02;
label07:
v10 = v10 + 1;
goto label01;
label08:
v25 = interfaceinvoke v5.<java.util.Set: java.util.Iterator iterator()>();
label09:
v26 = interfaceinvoke v25.<java.util.Iterator: boolean hasNext()>();
if v26 == 0 goto label10;
v27 = interfaceinvoke v25.<java.util.Iterator: java.lang.Object next()>();
v28 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(124);
staticinvoke <org.apache.commons.lang3.time.FastDateParser: java.lang.StringBuilder simpleQuote(java.lang.StringBuilder,java.lang.String)>(v28, v27);
goto label09;
label10:
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
virtualinvoke v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: void createPattern(java.lang.StringBuilder)>(v4);
return;
}
void setCalendar(org.apache.commons.lang3.time.FastDateParser, java.util.Calendar, java.lang.String)
{
org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy v0;
java.util.TimeZone v12, v4;
java.util.Calendar v2;
java.util.Locale v5;
java.util.Map v7, v9;
int v11, v13;
java.lang.Object v8;
java.lang.String v10, v3, v6;
org.apache.commons.lang3.time.FastDateParser v1;
v0 := @this: org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy;
v1 := @parameter0: org.apache.commons.lang3.time.FastDateParser;
v2 := @parameter1: java.util.Calendar;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <org.apache.commons.lang3.time.FastTimeZone: java.util.TimeZone getGmtTimeZone(java.lang.String)>(v3);
if v4 == null goto label1;
virtualinvoke v2.<java.util.Calendar: void setTimeZone(java.util.TimeZone)>(v4);
goto label3;
label1:
v5 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Locale locale>;
v6 = virtualinvoke v3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v5);
v7 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames>;
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v6);
if v8 != null goto label2;
v9 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames>;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.");
interfaceinvoke v9.<java.util.Map: java.lang.Object get(java.lang.Object)>(v10);
label2:
v11 = v8.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo: int dstOffset>;
virtualinvoke v2.<java.util.Calendar: void set(int,int)>(16, v11);
v12 = v8.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy$TzInfo: java.util.TimeZone zone>;
v13 = virtualinvoke v12.<java.util.TimeZone: int getRawOffset()>();
virtualinvoke v2.<java.util.Calendar: void set(int,int)>(15, v13);
label3:
return;
}
public java.lang.String toString()
{
org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy v0;
java.util.Locale v1;
java.util.Map v2;
java.lang.String v4;
java.util.regex.Pattern v3;
v0 := @this: org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy;
v1 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Locale locale>;
v2 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.Map tzNames>;
v3 = v0.<org.apache.commons.lang3.time.FastDateParser$TimeZoneStrategy: java.util.regex.Pattern pattern>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.Locale,java.util.Map,java.util.regex.Pattern)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("TimeZoneStrategy [locale=\u0001, tzNames=\u0001, pattern=\u0001]");
return v4;
}
}