public class org.apache.commons.lang3.time.StopWatch extends java.lang.Object
{
private static final long NANO_2_MILLIS;
private final java.lang.String message;
private org.apache.commons.lang3.time.StopWatch$State runningState;
private org.apache.commons.lang3.time.StopWatch$SplitState splitState;
private long startTimeNanos;
private long startTimeMillis;
private long stopTimeMillis;
private long stopTimeNanos;
public static org.apache.commons.lang3.time.StopWatch create()
{
org.apache.commons.lang3.time.StopWatch v0;
v0 = new org.apache.commons.lang3.time.StopWatch;
specialinvoke v0.<org.apache.commons.lang3.time.StopWatch: void <init>()>();
return v0;
}
public static org.apache.commons.lang3.time.StopWatch createStarted()
{
org.apache.commons.lang3.time.StopWatch v0;
v0 = new org.apache.commons.lang3.time.StopWatch;
specialinvoke v0.<org.apache.commons.lang3.time.StopWatch: void <init>()>();
virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: void start()>();
return v0;
}
public void <init>()
{
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
specialinvoke v0.<org.apache.commons.lang3.time.StopWatch: void <init>(java.lang.String)>(null);
return;
}
public void <init>(java.lang.String)
{
org.apache.commons.lang3.time.StopWatch$SplitState v3;
org.apache.commons.lang3.time.StopWatch$State v2;
java.lang.String v1;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State UNSTARTED>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState> = v2;
v3 = <org.apache.commons.lang3.time.StopWatch$SplitState: org.apache.commons.lang3.time.StopWatch$SplitState UNSPLIT>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$SplitState splitState> = v3;
v0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message> = v1;
return;
}
public java.lang.String formatSplitTime()
{
long v1;
java.lang.String v2;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: long getSplitTime()>();
v2 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDurationHMS(long)>(v1);
return v2;
}
public java.lang.String formatTime()
{
long v1;
java.lang.String v2;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: long getTime()>();
v2 = staticinvoke <org.apache.commons.lang3.time.DurationFormatUtils: java.lang.String formatDurationHMS(long)>(v1);
return v2;
}
public java.lang.String getMessage()
{
java.lang.String v1;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>;
return v1;
}
public long getNanoTime()
{
java.lang.IllegalStateException v15;
long v12, v13, v14, v5, v6, v7;
org.apache.commons.lang3.time.StopWatch v0;
org.apache.commons.lang3.time.StopWatch$State v1, v10, v11, v2, v3, v4, v8, v9;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State STOPPED>;
if v1 == v2 goto label1;
v3 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v4 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State SUSPENDED>;
if v3 != v4 goto label2;
label1:
v5 = v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeNanos>;
v6 = v0.<org.apache.commons.lang3.time.StopWatch: long startTimeNanos>;
v7 = v5 - v6;
return v7;
label2:
v8 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v9 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State UNSTARTED>;
if v8 != v9 goto label3;
return 0L;
label3:
v10 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v11 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
if v10 != v11 goto label4;
v12 = staticinvoke <java.lang.System: long nanoTime()>();
v13 = v0.<org.apache.commons.lang3.time.StopWatch: long startTimeNanos>;
v14 = v12 - v13;
return v14;
label4:
v15 = new java.lang.IllegalStateException;
specialinvoke v15.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Illegal running state has occurred.");
throw v15;
}
public long getSplitNanoTime()
{
java.lang.IllegalStateException v3;
org.apache.commons.lang3.time.StopWatch$SplitState v1, v2;
long v4, v5, v6;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$SplitState splitState>;
v2 = <org.apache.commons.lang3.time.StopWatch$SplitState: org.apache.commons.lang3.time.StopWatch$SplitState SPLIT>;
if v1 == v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch must be split to get the split time.");
throw v3;
label1:
v4 = v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeNanos>;
v5 = v0.<org.apache.commons.lang3.time.StopWatch: long startTimeNanos>;
v6 = v4 - v5;
return v6;
}
public long getSplitTime()
{
long v1, v2;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: long getSplitNanoTime()>();
v2 = v1 / 1000000L;
return v2;
}
public long getStartTime()
{
java.lang.IllegalStateException v3;
org.apache.commons.lang3.time.StopWatch$State v1, v2;
long v4;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State UNSTARTED>;
if v1 != v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch has not been started");
throw v3;
label1:
v4 = v0.<org.apache.commons.lang3.time.StopWatch: long startTimeMillis>;
return v4;
}
public long getStopTime()
{
java.lang.IllegalStateException v3;
org.apache.commons.lang3.time.StopWatch$State v1, v2;
long v4;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State UNSTARTED>;
if v1 != v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch has not been started");
throw v3;
label1:
v4 = v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeMillis>;
return v4;
}
public long getTime()
{
long v1, v2;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: long getNanoTime()>();
v2 = v1 / 1000000L;
return v2;
}
public long getTime(java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v1, v3;
long v2, v4;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v2 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: long getNanoTime()>();
v3 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
v4 = virtualinvoke v1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(v2, v3);
return v4;
}
public boolean isStarted()
{
org.apache.commons.lang3.time.StopWatch$State v1;
org.apache.commons.lang3.time.StopWatch v0;
boolean v2;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = virtualinvoke v1.<org.apache.commons.lang3.time.StopWatch$State: boolean isStarted()>();
return v2;
}
public boolean isStopped()
{
org.apache.commons.lang3.time.StopWatch$State v1;
org.apache.commons.lang3.time.StopWatch v0;
boolean v2;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = virtualinvoke v1.<org.apache.commons.lang3.time.StopWatch$State: boolean isStopped()>();
return v2;
}
public boolean isSuspended()
{
org.apache.commons.lang3.time.StopWatch$State v1;
org.apache.commons.lang3.time.StopWatch v0;
boolean v2;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = virtualinvoke v1.<org.apache.commons.lang3.time.StopWatch$State: boolean isSuspended()>();
return v2;
}
public void reset()
{
org.apache.commons.lang3.time.StopWatch$State v1;
org.apache.commons.lang3.time.StopWatch v0;
org.apache.commons.lang3.time.StopWatch$SplitState v2;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State UNSTARTED>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState> = v1;
v2 = <org.apache.commons.lang3.time.StopWatch$SplitState: org.apache.commons.lang3.time.StopWatch$SplitState UNSPLIT>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$SplitState splitState> = v2;
return;
}
public void resume()
{
java.lang.IllegalStateException v3;
long v4, v5, v6, v7, v8;
org.apache.commons.lang3.time.StopWatch v0;
org.apache.commons.lang3.time.StopWatch$State v1, v2, v9;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State SUSPENDED>;
if v1 == v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch must be suspended to resume. ");
throw v3;
label1:
v4 = v0.<org.apache.commons.lang3.time.StopWatch: long startTimeNanos>;
v5 = staticinvoke <java.lang.System: long nanoTime()>();
v6 = v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeNanos>;
v7 = v5 - v6;
v8 = v4 + v7;
v0.<org.apache.commons.lang3.time.StopWatch: long startTimeNanos> = v8;
v9 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState> = v9;
return;
}
public void split()
{
java.lang.IllegalStateException v3;
org.apache.commons.lang3.time.StopWatch$SplitState v5;
org.apache.commons.lang3.time.StopWatch$State v1, v2;
long v4;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
if v1 == v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch is not running. ");
throw v3;
label1:
v4 = staticinvoke <java.lang.System: long nanoTime()>();
v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeNanos> = v4;
v5 = <org.apache.commons.lang3.time.StopWatch$SplitState: org.apache.commons.lang3.time.StopWatch$SplitState SPLIT>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$SplitState splitState> = v5;
return;
}
public void start()
{
java.lang.IllegalStateException v3, v6;
long v7, v8;
org.apache.commons.lang3.time.StopWatch v0;
org.apache.commons.lang3.time.StopWatch$State v1, v2, v4, v5, v9;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State STOPPED>;
if v1 != v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch must be reset before being restarted. ");
throw v3;
label1:
v4 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v5 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State UNSTARTED>;
if v4 == v5 goto label2;
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch already started. ");
throw v6;
label2:
v7 = staticinvoke <java.lang.System: long nanoTime()>();
v0.<org.apache.commons.lang3.time.StopWatch: long startTimeNanos> = v7;
v8 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v0.<org.apache.commons.lang3.time.StopWatch: long startTimeMillis> = v8;
v9 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState> = v9;
return;
}
public void stop()
{
java.lang.IllegalStateException v5;
long v8, v9;
org.apache.commons.lang3.time.StopWatch v0;
org.apache.commons.lang3.time.StopWatch$State v1, v10, v2, v3, v4, v6, v7;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
if v1 == v2 goto label1;
v3 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v4 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State SUSPENDED>;
if v3 == v4 goto label1;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch is not running. ");
throw v5;
label1:
v6 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v7 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
if v6 != v7 goto label2;
v8 = staticinvoke <java.lang.System: long nanoTime()>();
v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeNanos> = v8;
v9 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeMillis> = v9;
label2:
v10 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State STOPPED>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState> = v10;
return;
}
public void suspend()
{
java.lang.IllegalStateException v3;
org.apache.commons.lang3.time.StopWatch$State v1, v2, v6;
long v4, v5;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState>;
v2 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State RUNNING>;
if v1 == v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch must be running to suspend. ");
throw v3;
label1:
v4 = staticinvoke <java.lang.System: long nanoTime()>();
v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeNanos> = v4;
v5 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v0.<org.apache.commons.lang3.time.StopWatch: long stopTimeMillis> = v5;
v6 = <org.apache.commons.lang3.time.StopWatch$State: org.apache.commons.lang3.time.StopWatch$State SUSPENDED>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$State runningState> = v6;
return;
}
public java.lang.String toSplitString()
{
java.lang.String v1, v2, v3, v5;
org.apache.commons.lang3.time.StopWatch v0;
boolean v4;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>;
v2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(v1, "");
v3 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: java.lang.String formatSplitTime()>();
v4 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v4 == 0 goto label1;
v5 = v3;
goto label2;
label1:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");
label2:
return v5;
}
public java.lang.String toString()
{
java.lang.String v1, v2, v3, v5;
org.apache.commons.lang3.time.StopWatch v0;
boolean v4;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: java.lang.String message>;
v2 = staticinvoke <java.util.Objects: java.lang.String toString(java.lang.Object,java.lang.String)>(v1, "");
v3 = virtualinvoke v0.<org.apache.commons.lang3.time.StopWatch: java.lang.String formatTime()>();
v4 = virtualinvoke v2.<java.lang.String: boolean isEmpty()>();
if v4 == 0 goto label1;
v5 = v3;
goto label2;
label1:
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");
label2:
return v5;
}
public void unsplit()
{
java.lang.IllegalStateException v3;
org.apache.commons.lang3.time.StopWatch$SplitState v1, v2, v4;
org.apache.commons.lang3.time.StopWatch v0;
v0 := @this: org.apache.commons.lang3.time.StopWatch;
v1 = v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$SplitState splitState>;
v2 = <org.apache.commons.lang3.time.StopWatch$SplitState: org.apache.commons.lang3.time.StopWatch$SplitState SPLIT>;
if v1 == v2 goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Stopwatch has not been split. ");
throw v3;
label1:
v4 = <org.apache.commons.lang3.time.StopWatch$SplitState: org.apache.commons.lang3.time.StopWatch$SplitState UNSPLIT>;
v0.<org.apache.commons.lang3.time.StopWatch: org.apache.commons.lang3.time.StopWatch$SplitState splitState> = v4;
return;
}
}