class org.buildobjects.process.IoHandler extends java.lang.Object
{
private final org.buildobjects.process.OutputConsumptionThread stdout;
private final org.buildobjects.process.OutputConsumptionThread stderr;
java.lang.Thread inFeeder;
void <init>(java.io.InputStream, org.buildobjects.process.OutputConsumptionThread, org.buildobjects.process.OutputConsumptionThread, java.lang.Process)
{
java.io.OutputStream v7;
java.lang.Process v4;
org.buildobjects.process.OutputConsumptionThread v2, v3;
java.lang.Thread v8;
org.buildobjects.process.IoHandler v0;
java.io.InputStream v1, v5, v6;
v0 := @this: org.buildobjects.process.IoHandler;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: org.buildobjects.process.OutputConsumptionThread;
v3 := @parameter2: org.buildobjects.process.OutputConsumptionThread;
v4 := @parameter3: java.lang.Process;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stdout> = v2;
v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stderr> = v3;
v5 = virtualinvoke v4.<java.lang.Process: java.io.InputStream getInputStream()>();
v6 = virtualinvoke v4.<java.lang.Process: java.io.InputStream getErrorStream()>();
v7 = virtualinvoke v4.<java.lang.Process: java.io.OutputStream getOutputStream()>();
interfaceinvoke v2.<org.buildobjects.process.OutputConsumptionThread: void startConsumption(java.io.InputStream)>(v5);
interfaceinvoke v3.<org.buildobjects.process.OutputConsumptionThread: void startConsumption(java.io.InputStream)>(v6);
v8 = virtualinvoke v0.<org.buildobjects.process.IoHandler: java.lang.Thread startConsumption(java.io.OutputStream,java.io.InputStream,boolean)>(v7, v1, 1);
v0.<org.buildobjects.process.IoHandler: java.lang.Thread inFeeder> = v8;
return;
}
java.util.List joinConsumption() throws java.lang.InterruptedException
{
java.lang.Throwable v10, v12, v6, v8;
org.buildobjects.process.OutputConsumptionThread v11, v2, v3, v5, v7, v9;
java.util.ArrayList v4;
java.lang.Thread v1;
org.buildobjects.process.IoHandler v0;
v0 := @this: org.buildobjects.process.IoHandler;
v1 = v0.<org.buildobjects.process.IoHandler: java.lang.Thread inFeeder>;
virtualinvoke v1.<java.lang.Thread: void join()>();
v2 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stdout>;
interfaceinvoke v2.<org.buildobjects.process.OutputConsumptionThread: void join()>();
v3 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stderr>;
interfaceinvoke v3.<org.buildobjects.process.OutputConsumptionThread: void join()>();
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v5 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stdout>;
v6 = interfaceinvoke v5.<org.buildobjects.process.OutputConsumptionThread: java.lang.Throwable getThrowable()>();
if v6 == null goto label1;
v7 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stdout>;
v8 = interfaceinvoke v7.<org.buildobjects.process.OutputConsumptionThread: java.lang.Throwable getThrowable()>();
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v8);
label1:
v9 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stderr>;
v10 = interfaceinvoke v9.<org.buildobjects.process.OutputConsumptionThread: java.lang.Throwable getThrowable()>();
if v10 == null goto label2;
v11 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stderr>;
v12 = interfaceinvoke v11.<org.buildobjects.process.OutputConsumptionThread: java.lang.Throwable getThrowable()>();
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v12);
label2:
return v4;
}
void cancelConsumption()
{
org.buildobjects.process.OutputConsumptionThread v2, v3;
java.lang.Thread v1;
org.buildobjects.process.IoHandler v0;
v0 := @this: org.buildobjects.process.IoHandler;
v1 = v0.<org.buildobjects.process.IoHandler: java.lang.Thread inFeeder>;
virtualinvoke v1.<java.lang.Thread: void interrupt()>();
v2 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stdout>;
interfaceinvoke v2.<org.buildobjects.process.OutputConsumptionThread: void interrupt()>();
v3 = v0.<org.buildobjects.process.IoHandler: org.buildobjects.process.OutputConsumptionThread stderr>;
interfaceinvoke v3.<org.buildobjects.process.OutputConsumptionThread: void interrupt()>();
return;
}
java.lang.Thread startConsumption(java.io.OutputStream, java.io.InputStream, boolean)
{
java.io.OutputStream v1;
java.lang.Thread v4;
org.buildobjects.process.IoHandler v0;
org.buildobjects.process.StreamCopyRunner v5;
boolean v3;
java.io.InputStream v2;
v0 := @this: org.buildobjects.process.IoHandler;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: java.io.InputStream;
v3 := @parameter2: boolean;
v4 = new java.lang.Thread;
v5 = new org.buildobjects.process.StreamCopyRunner;
specialinvoke v5.<org.buildobjects.process.StreamCopyRunner: void <init>(java.io.InputStream,java.io.OutputStream,boolean)>(v2, v1, v3);
specialinvoke v4.<java.lang.Thread: void <init>(java.lang.Runnable)>(v5);
virtualinvoke v4.<java.lang.Thread: void start()>();
return v4;
}
}