public class org.buildobjects.process.ProcBuilder extends java.lang.Object
{
private java.io.ByteArrayOutputStream defaultStdout;
private final java.lang.String command;
private final java.util.List args;
private final java.util.Map env;
private java.io.OutputStream stdout;
private java.io.InputStream stdin;
private java.io.OutputStream stderr;
private java.lang.Long timoutMillis;
private java.util.Set expectedExitStatuses;
private java.io.File directory;
private org.buildobjects.process.StreamConsumer outputConsumer;
private org.buildobjects.process.StreamConsumer errorConsumer;
private boolean clearEnvironment;
public transient void <init>(java.lang.String, java.lang.String[])
{
java.io.ByteArrayOutputStream v3, v6;
org.buildobjects.process.ProcBuilder v0;
java.lang.String[] v2;
java.util.HashMap v5;
java.util.ArrayList v4;
org.buildobjects.process.ProcBuilder$1 v8;
java.lang.Long v7;
java.lang.String v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.io.ByteArrayOutputStream;
specialinvoke v3.<java.io.ByteArrayOutputStream: void <init>()>();
v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout> = v3;
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v0.<org.buildobjects.process.ProcBuilder: java.util.List args> = v4;
v5 = new java.util.HashMap;
specialinvoke v5.<java.util.HashMap: void <init>()>();
v0.<org.buildobjects.process.ProcBuilder: java.util.Map env> = v5;
v6 = v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout>;
v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout> = v6;
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(5000L);
v0.<org.buildobjects.process.ProcBuilder: java.lang.Long timoutMillis> = v7;
v8 = new org.buildobjects.process.ProcBuilder$1;
specialinvoke v8.<org.buildobjects.process.ProcBuilder$1: void <init>(org.buildobjects.process.ProcBuilder)>(v0);
v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses> = v8;
v0.<org.buildobjects.process.ProcBuilder: java.lang.String command> = v1;
virtualinvoke v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withArgs(java.lang.String[])>(v2);
return;
}
public org.buildobjects.process.ProcBuilder withArg(java.lang.String)
{
org.buildobjects.process.ProcBuilder v0;
java.util.List v2;
java.lang.String v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.util.List args>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public org.buildobjects.process.ProcBuilder withOutputStream(java.io.OutputStream)
{
java.io.OutputStream v1;
org.buildobjects.process.ProcBuilder v0;
org.buildobjects.process.StreamConsumer v2;
java.lang.IllegalArgumentException v3;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.io.OutputStream;
v2 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer outputConsumer>;
if v2 == null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`withOutputStream(OutputStream)` and `withOutputConsumer(OutputConsumer)` are mutually exclusive.");
throw v3;
label1:
v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout> = v1;
return v0;
}
public org.buildobjects.process.ProcBuilder withErrorStream(java.io.OutputStream)
{
java.io.OutputStream v1;
org.buildobjects.process.ProcBuilder v0;
org.buildobjects.process.StreamConsumer v2;
java.lang.IllegalArgumentException v3;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.io.OutputStream;
v2 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer errorConsumer>;
if v2 == null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`withErrorStream(OutputStream)` and `withErrorConsumer(OutputConsumer)` are mutually exclusive.");
throw v3;
label1:
v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stderr> = v1;
return v0;
}
public org.buildobjects.process.ProcBuilder withTimeoutMillis(long)
{
org.buildobjects.process.ProcBuilder v0;
long v1;
java.lang.Long v2;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: long;
v2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v1);
v0.<org.buildobjects.process.ProcBuilder: java.lang.Long timoutMillis> = v2;
return v0;
}
public org.buildobjects.process.ProcBuilder withNoTimeout()
{
org.buildobjects.process.ProcBuilder v0;
v0 := @this: org.buildobjects.process.ProcBuilder;
v0.<org.buildobjects.process.ProcBuilder: java.lang.Long timoutMillis> = null;
return v0;
}
public org.buildobjects.process.ProcBuilder withInputStream(java.io.InputStream)
{
org.buildobjects.process.ProcBuilder v0;
java.io.InputStream v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.io.InputStream;
v0.<org.buildobjects.process.ProcBuilder: java.io.InputStream stdin> = v1;
return v0;
}
public org.buildobjects.process.ProcBuilder withInput(java.lang.String)
{
byte[] v3;
java.io.ByteArrayInputStream v2;
org.buildobjects.process.ProcBuilder v0;
java.lang.String v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.lang.String;
v2 = new java.io.ByteArrayInputStream;
v3 = virtualinvoke v1.<java.lang.String: byte[] getBytes()>();
specialinvoke v2.<java.io.ByteArrayInputStream: void <init>(byte[])>(v3);
v0.<org.buildobjects.process.ProcBuilder: java.io.InputStream stdin> = v2;
return v0;
}
public org.buildobjects.process.ProcBuilder withInput(byte[])
{
org.buildobjects.process.ProcBuilder v0;
byte[] v1;
java.io.ByteArrayInputStream v2;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: byte[];
v2 = new java.io.ByteArrayInputStream;
specialinvoke v2.<java.io.ByteArrayInputStream: void <init>(byte[])>(v1);
v0.<org.buildobjects.process.ProcBuilder: java.io.InputStream stdin> = v2;
return v0;
}
public org.buildobjects.process.ProcBuilder withWorkingDirectory(java.io.File)
{
org.buildobjects.process.ProcBuilder v0;
java.lang.String v4, v5;
java.lang.IllegalArgumentException v3;
java.io.File v1;
boolean v2;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v1.<java.io.File: boolean isDirectory()>();
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v1.<java.io.File: java.lang.String getPath()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("File \'\u0001\' is not a directory.");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v0.<org.buildobjects.process.ProcBuilder: java.io.File directory> = v1;
return v0;
}
public transient org.buildobjects.process.ProcBuilder withArgs(java.lang.String[])
{
java.util.List v2, v3;
org.buildobjects.process.ProcBuilder v0;
java.lang.String[] v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.lang.String[];
v2 = v0.<org.buildobjects.process.ProcBuilder: java.util.List args>;
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v3);
return v0;
}
public org.buildobjects.process.ProcBuilder withExitStatuses(int[])
{
org.buildobjects.process.ProcBuilder v0;
java.util.Set v2;
int[] v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: int[];
v2 = staticinvoke <org.buildobjects.process.Helper: java.util.Set asSet(int[])>(v1);
v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses> = v2;
return v0;
}
public org.buildobjects.process.ProcBuilder withExpectedExitStatuses(java.util.Set)
{
org.buildobjects.process.ProcBuilder v0;
java.util.Set v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.util.Set;
v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses> = v1;
return v0;
}
public transient org.buildobjects.process.ProcBuilder withExpectedExitStatuses(int[])
{
org.buildobjects.process.ProcBuilder v0;
java.util.Set v2;
int[] v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: int[];
v2 = staticinvoke <org.buildobjects.process.Helper: java.util.Set asSet(int[])>(v1);
v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses> = v2;
return v0;
}
public org.buildobjects.process.ProcBuilder ignoreExitStatus()
{
org.buildobjects.process.ProcBuilder v0;
java.util.Set v1;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses> = v1;
return v0;
}
public org.buildobjects.process.ProcResult run() throws org.buildobjects.process.StartupException, org.buildobjects.process.TimeoutException, org.buildobjects.process.ExternalProcessFailureException
{
byte[] v41;
org.buildobjects.process.ProcBuilder v0;
java.lang.Integer v29;
java.lang.Long v17;
java.util.Map v11;
boolean v12, v30;
java.util.Set v25, v27;
java.util.List v10;
org.buildobjects.process.ProcResult v37;
java.lang.Throwable v43;
java.io.ByteArrayOutputStream v2, v20, v23, v24, v42, v44;
long v36, v40;
int v26, v28, v34, v39;
java.lang.String v32, v33, v35, v38, v9;
java.io.OutputStream v1, v21, v5;
org.buildobjects.process.Proc v8;
org.buildobjects.process.StreamConsumer v14, v18, v22, v3, v6;
java.lang.IllegalArgumentException v4, v7;
java.io.File v16;
java.lang.Object v15, v19;
java.io.InputStream v13;
org.buildobjects.process.ExternalProcessFailureException v31;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout>;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout>;
if v1 == v2 goto label01;
v3 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer outputConsumer>;
if v3 == null goto label01;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`withOutputStream(OutputStream)` and `withOutputConsumer(OutputConsumer)` are mutually exclusive.");
throw v4;
label01:
v5 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stderr>;
if v5 == null goto label02;
v6 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer errorConsumer>;
if v6 == null goto label02;
v7 = new java.lang.IllegalArgumentException;
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`withErrorStream(OutputStream)` and `withErrorConsumer(OutputConsumer)` are mutually exclusive.");
throw v7;
label02:
v8 = new org.buildobjects.process.Proc;
v9 = v0.<org.buildobjects.process.ProcBuilder: java.lang.String command>;
v10 = v0.<org.buildobjects.process.ProcBuilder: java.util.List args>;
v11 = v0.<org.buildobjects.process.ProcBuilder: java.util.Map env>;
v12 = v0.<org.buildobjects.process.ProcBuilder: boolean clearEnvironment>;
v13 = v0.<org.buildobjects.process.ProcBuilder: java.io.InputStream stdin>;
v14 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer outputConsumer>;
if v14 == null goto label03;
v15 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer outputConsumer>;
goto label04;
label03:
v15 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout>;
label04:
v16 = v0.<org.buildobjects.process.ProcBuilder: java.io.File directory>;
v17 = v0.<org.buildobjects.process.ProcBuilder: java.lang.Long timoutMillis>;
v18 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer errorConsumer>;
if v18 == null goto label05;
v19 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer errorConsumer>;
goto label06;
label05:
v19 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stderr>;
label06:
specialinvoke v8.<org.buildobjects.process.Proc: void <init>(java.lang.String,java.util.List,java.util.Map,boolean,java.io.InputStream,java.lang.Object,java.io.File,java.lang.Long,java.lang.Object)>(v9, v10, v11, v12, v13, v15, v16, v17, v19);
v20 = v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout>;
v21 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout>;
if v20 != v21 goto label07;
v22 = v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer outputConsumer>;
if v22 != null goto label07;
v23 = v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout>;
goto label08;
label07:
v23 = null;
label08:
v24 = v23;
v25 = v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses>;
v26 = interfaceinvoke v25.<java.util.Set: int size()>();
if v26 <= 0 goto label09;
v27 = v0.<org.buildobjects.process.ProcBuilder: java.util.Set expectedExitStatuses>;
v28 = virtualinvoke v8.<org.buildobjects.process.Proc: int getExitValue()>();
v29 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v28);
v30 = interfaceinvoke v27.<java.util.Set: boolean contains(java.lang.Object)>(v29);
if v30 != 0 goto label09;
v31 = new org.buildobjects.process.ExternalProcessFailureException;
v32 = v0.<org.buildobjects.process.ProcBuilder: java.lang.String command>;
v33 = virtualinvoke v8.<org.buildobjects.process.Proc: java.lang.String toString()>();
v34 = virtualinvoke v8.<org.buildobjects.process.Proc: int getExitValue()>();
v35 = virtualinvoke v8.<org.buildobjects.process.Proc: java.lang.String getErrorString()>();
v36 = virtualinvoke v8.<org.buildobjects.process.Proc: long getExecutionTime()>();
specialinvoke v31.<org.buildobjects.process.ExternalProcessFailureException: void <init>(java.lang.String,java.lang.String,int,java.lang.String,java.io.ByteArrayOutputStream,long)>(v32, v33, v34, v35, v23, v36);
throw v31;
label09:
v37 = new org.buildobjects.process.ProcResult;
v38 = virtualinvoke v8.<org.buildobjects.process.Proc: java.lang.String toString()>();
v39 = virtualinvoke v8.<org.buildobjects.process.Proc: int getExitValue()>();
v40 = virtualinvoke v8.<org.buildobjects.process.Proc: long getExecutionTime()>();
v41 = virtualinvoke v8.<org.buildobjects.process.Proc: byte[] getErrorBytes()>();
specialinvoke v37.<org.buildobjects.process.ProcResult: void <init>(java.lang.String,java.io.ByteArrayOutputStream,int,long,byte[])>(v38, v24, v39, v40, v41);
label10:
v42 = new java.io.ByteArrayOutputStream;
specialinvoke v42.<java.io.ByteArrayOutputStream: void <init>()>();
v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout> = v42;
v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout> = v42;
v0.<org.buildobjects.process.ProcBuilder: java.io.InputStream stdin> = null;
return v37;
label11:
v43 := @caughtexception;
v44 = new java.io.ByteArrayOutputStream;
specialinvoke v44.<java.io.ByteArrayOutputStream: void <init>()>();
v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout> = v44;
v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout> = v44;
v0.<org.buildobjects.process.ProcBuilder: java.io.InputStream stdin> = null;
throw v43;
catch java.lang.Throwable from label02 to label10 with label11;
}
public static transient java.lang.String run(java.lang.String, java.lang.String[])
{
org.buildobjects.process.ProcResult v5;
org.buildobjects.process.ProcBuilder v2, v4;
java.lang.String[] v1, v3;
java.lang.String v0, v6;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String[];
v2 = new org.buildobjects.process.ProcBuilder;
v3 = newarray (java.lang.String)[0];
specialinvoke v2.<org.buildobjects.process.ProcBuilder: void <init>(java.lang.String,java.lang.String[])>(v0, v3);
v4 = virtualinvoke v2.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withArgs(java.lang.String[])>(v1);
v5 = virtualinvoke v4.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcResult run()>();
v6 = virtualinvoke v5.<org.buildobjects.process.ProcResult: java.lang.String getOutputString()>();
return v6;
}
public static transient java.lang.String filter(java.lang.String, java.lang.String, java.lang.String[])
{
org.buildobjects.process.ProcBuilder v3, v5, v6;
java.lang.String[] v2, v4;
org.buildobjects.process.ProcResult v7;
java.lang.String v0, v1, v8;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String[];
v3 = new org.buildobjects.process.ProcBuilder;
v4 = newarray (java.lang.String)[0];
specialinvoke v3.<org.buildobjects.process.ProcBuilder: void <init>(java.lang.String,java.lang.String[])>(v1, v4);
v5 = virtualinvoke v3.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withArgs(java.lang.String[])>(v2);
v6 = virtualinvoke v5.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcBuilder withInput(java.lang.String)>(v0);
v7 = virtualinvoke v6.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.ProcResult run()>();
v8 = virtualinvoke v7.<org.buildobjects.process.ProcResult: java.lang.String getOutputString()>();
return v8;
}
public org.buildobjects.process.ProcBuilder clearEnvironment()
{
org.buildobjects.process.ProcBuilder v0;
v0 := @this: org.buildobjects.process.ProcBuilder;
v0.<org.buildobjects.process.ProcBuilder: boolean clearEnvironment> = 1;
return v0;
}
public org.buildobjects.process.ProcBuilder withVar(java.lang.String, java.lang.String)
{
java.util.Map v3;
org.buildobjects.process.ProcBuilder v0;
java.lang.String v1, v2;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.buildobjects.process.ProcBuilder: java.util.Map env>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public org.buildobjects.process.ProcBuilder withVars(java.util.Map)
{
org.buildobjects.process.ProcBuilder v0;
java.util.Map v1, v2;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: java.util.Map;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.util.Map env>;
interfaceinvoke v2.<java.util.Map: void putAll(java.util.Map)>(v1);
return v0;
}
public org.buildobjects.process.ProcBuilder withOutputConsumer(org.buildobjects.process.StreamConsumer)
{
java.io.OutputStream v2;
java.io.ByteArrayOutputStream v3;
org.buildobjects.process.ProcBuilder v0;
org.buildobjects.process.StreamConsumer v1;
java.lang.IllegalArgumentException v4;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: org.buildobjects.process.StreamConsumer;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stdout>;
v3 = v0.<org.buildobjects.process.ProcBuilder: java.io.ByteArrayOutputStream defaultStdout>;
if v2 == v3 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`withOutputStream(OutputStream)` and `withOutputConsumer(OutputConsumer)` are mutually exclusive.");
throw v4;
label1:
v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer outputConsumer> = v1;
return v0;
}
public org.buildobjects.process.ProcBuilder withErrorConsumer(org.buildobjects.process.StreamConsumer)
{
java.io.OutputStream v2;
org.buildobjects.process.ProcBuilder v0;
org.buildobjects.process.StreamConsumer v1;
java.lang.IllegalArgumentException v3;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 := @parameter0: org.buildobjects.process.StreamConsumer;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.io.OutputStream stderr>;
if v2 == null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("`withErrorStream(OutputStream)` and `withErrorConsumer(OutputConsumer)` are mutually exclusive.");
throw v3;
label1:
v0.<org.buildobjects.process.ProcBuilder: org.buildobjects.process.StreamConsumer errorConsumer> = v1;
return v0;
}
public java.lang.String getProcString()
{
java.util.List v2;
org.buildobjects.process.ProcBuilder v0;
java.lang.String v1, v3;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 = v0.<org.buildobjects.process.ProcBuilder: java.lang.String command>;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.util.List args>;
v3 = staticinvoke <org.buildobjects.process.Proc: java.lang.String formatCommandLine(java.lang.String,java.util.List)>(v1, v2);
return v3;
}
public java.lang.String getCommandLine()
{
java.util.List v2;
org.buildobjects.process.ProcBuilder v0;
java.lang.String v1, v3;
v0 := @this: org.buildobjects.process.ProcBuilder;
v1 = v0.<org.buildobjects.process.ProcBuilder: java.lang.String command>;
v2 = v0.<org.buildobjects.process.ProcBuilder: java.util.List args>;
v3 = staticinvoke <org.buildobjects.process.Proc: java.lang.String formatCommandLine(java.lang.String,java.util.List)>(v1, v2);
return v3;
}
}