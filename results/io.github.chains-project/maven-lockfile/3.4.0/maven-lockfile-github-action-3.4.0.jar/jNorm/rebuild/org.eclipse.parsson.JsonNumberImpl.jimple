abstract class org.eclipse.parsson.JsonNumberImpl extends java.lang.Object implements jakarta.json.JsonNumber
{
private int hashCode;
void <init>()
{
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static jakarta.json.JsonNumber getJsonNumber(int)
{
int v0;
org.eclipse.parsson.JsonNumberImpl$JsonIntNumber v1;
v0 := @parameter0: int;
v1 = new org.eclipse.parsson.JsonNumberImpl$JsonIntNumber;
specialinvoke v1.<org.eclipse.parsson.JsonNumberImpl$JsonIntNumber: void <init>(int)>(v0);
return v1;
}
static jakarta.json.JsonNumber getJsonNumber(long)
{
org.eclipse.parsson.JsonNumberImpl$JsonLongNumber v1;
long v0;
v0 := @parameter0: long;
v1 = new org.eclipse.parsson.JsonNumberImpl$JsonLongNumber;
specialinvoke v1.<org.eclipse.parsson.JsonNumberImpl$JsonLongNumber: void <init>(long)>(v0);
return v1;
}
static jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)
{
java.math.BigDecimal v3;
java.math.BigInteger v0;
org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber v2;
java.lang.NullPointerException v1;
v0 := @parameter0: java.math.BigInteger;
if v0 != null goto label1;
v1 = new java.lang.NullPointerException;
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Value is null");
throw v1;
label1:
v2 = new org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber;
v3 = new java.math.BigDecimal;
specialinvoke v3.<java.math.BigDecimal: void <init>(java.math.BigInteger)>(v0);
specialinvoke v2.<org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber: void <init>(java.math.BigDecimal)>(v3);
return v2;
}
static jakarta.json.JsonNumber getJsonNumber(double)
{
java.math.BigDecimal v2;
org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber v1;
double v0;
v0 := @parameter0: double;
v1 = new org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber;
v2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(v0);
specialinvoke v1.<org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber: void <init>(java.math.BigDecimal)>(v2);
return v1;
}
static jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)
{
java.math.BigDecimal v0;
org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber v2;
java.lang.NullPointerException v1;
v0 := @parameter0: java.math.BigDecimal;
if v0 != null goto label1;
v1 = new java.lang.NullPointerException;
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Value is null");
throw v1;
label1:
v2 = new org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber;
specialinvoke v2.<org.eclipse.parsson.JsonNumberImpl$JsonBigDecimalNumber: void <init>(java.math.BigDecimal)>(v0);
return v2;
}
static jakarta.json.JsonNumber getJsonNumber(java.lang.Number)
{
org.eclipse.parsson.JsonNumberImpl$JsonNumberNumber v15;
long v6;
java.lang.NullPointerException v1;
int v3;
java.lang.Number v0;
boolean v11, v13, v2, v5, v8;
double v9;
jakarta.json.JsonNumber v10, v12, v14, v4, v7;
v0 := @parameter0: java.lang.Number;
if v0 != null goto label1;
v1 = new java.lang.NullPointerException;
specialinvoke v1.<java.lang.NullPointerException: void <init>(java.lang.String)>("Value is null");
throw v1;
label1:
v2 = v0 instanceof java.lang.Integer;
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<java.lang.Number: int intValue()>();
v4 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(int)>(v3);
return v4;
label2:
v5 = v0 instanceof java.lang.Long;
if v5 == 0 goto label3;
v6 = virtualinvoke v0.<java.lang.Number: long longValue()>();
v7 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(long)>(v6);
return v7;
label3:
v8 = v0 instanceof java.lang.Double;
if v8 == 0 goto label4;
v9 = virtualinvoke v0.<java.lang.Number: double doubleValue()>();
v10 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(double)>(v9);
return v10;
label4:
v11 = v0 instanceof java.math.BigInteger;
if v11 == 0 goto label5;
v12 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)>(v0);
return v12;
label5:
v13 = v0 instanceof java.math.BigDecimal;
if v13 == 0 goto label6;
v14 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)>(v0);
return v14;
label6:
v15 = new org.eclipse.parsson.JsonNumberImpl$JsonNumberNumber;
specialinvoke v15.<org.eclipse.parsson.JsonNumberImpl$JsonNumberNumber: void <init>(java.lang.Number)>(v0);
return v15;
}
public boolean isIntegral()
{
java.math.BigDecimal v1;
org.eclipse.parsson.JsonNumberImpl v0;
int v2;
boolean v3;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: int scale()>();
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public int intValue()
{
int v2;
java.math.BigDecimal v1;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: int intValue()>();
return v2;
}
public int intValueExact()
{
int v2;
java.math.BigDecimal v1;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: int intValueExact()>();
return v2;
}
public long longValue()
{
java.math.BigDecimal v1;
long v2;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: long longValue()>();
return v2;
}
public long longValueExact()
{
java.math.BigDecimal v1;
long v2;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: long longValueExact()>();
return v2;
}
public double doubleValue()
{
java.math.BigDecimal v1;
org.eclipse.parsson.JsonNumberImpl v0;
double v2;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: double doubleValue()>();
return v2;
}
public java.math.BigInteger bigIntegerValue()
{
java.math.BigDecimal v1;
java.math.BigInteger v2;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();
return v2;
}
public java.math.BigInteger bigIntegerValueExact()
{
java.math.BigDecimal v1;
java.math.BigInteger v2;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: java.math.BigInteger toBigIntegerExact()>();
return v2;
}
public jakarta.json.JsonValue$ValueType getValueType()
{
jakarta.json.JsonValue$ValueType v1;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NUMBER>;
return v1;
}
public int hashCode()
{
java.math.BigDecimal v2;
org.eclipse.parsson.JsonNumberImpl v0;
int v1, v3, v4;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = v0.<org.eclipse.parsson.JsonNumberImpl: int hashCode>;
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v3 = virtualinvoke v2.<java.math.BigDecimal: int hashCode()>();
v0.<org.eclipse.parsson.JsonNumberImpl: int hashCode> = v3;
label1:
v4 = v0.<org.eclipse.parsson.JsonNumberImpl: int hashCode>;
return v4;
}
public boolean equals(java.lang.Object)
{
java.math.BigDecimal v3, v4;
org.eclipse.parsson.JsonNumberImpl v0;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof jakarta.json.JsonNumber;
if v2 != 0 goto label2;
return 0;
label2:
v3 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v4 = interfaceinvoke v1.<jakarta.json.JsonNumber: java.math.BigDecimal bigDecimalValue()>();
v5 = virtualinvoke v3.<java.math.BigDecimal: boolean equals(java.lang.Object)>(v4);
return v5;
}
public java.lang.String toString()
{
java.math.BigDecimal v1;
java.lang.String v2;
org.eclipse.parsson.JsonNumberImpl v0;
v0 := @this: org.eclipse.parsson.JsonNumberImpl;
v1 = virtualinvoke v0.<org.eclipse.parsson.JsonNumberImpl: java.math.BigDecimal bigDecimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: java.lang.String toString()>();
return v2;
}
}