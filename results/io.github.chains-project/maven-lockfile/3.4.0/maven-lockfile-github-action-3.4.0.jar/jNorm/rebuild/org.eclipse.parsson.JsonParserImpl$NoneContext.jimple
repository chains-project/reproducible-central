final class org.eclipse.parsson.JsonParserImpl$NoneContext extends org.eclipse.parsson.JsonParserImpl$Context
{
final org.eclipse.parsson.JsonParserImpl this$0;
private void <init>(org.eclipse.parsson.JsonParserImpl)
{
org.eclipse.parsson.JsonParserImpl v1;
org.eclipse.parsson.JsonParserImpl$NoneContext v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$NoneContext;
v1 := @parameter0: org.eclipse.parsson.JsonParserImpl;
v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0> = v1;
specialinvoke v0.<org.eclipse.parsson.JsonParserImpl$Context: void <init>(org.eclipse.parsson.JsonParserImpl)>(v1);
return;
}
public jakarta.json.stream.JsonParser$Event getNextEvent()
{
org.eclipse.parsson.JsonParserImpl$NoneContext v0;
org.eclipse.parsson.JsonParserImpl$Stack v15, v6;
org.eclipse.parsson.JsonParserImpl$Context v17, v8;
org.eclipse.parsson.JsonTokenizer$JsonToken v13, v3, v4;
org.eclipse.parsson.JsonTokenizer v2;
org.eclipse.parsson.JsonParserImpl$ObjectContext v10;
boolean v22;
jakarta.json.stream.JsonParsingException v25;
org.eclipse.parsson.JsonParserImpl v1, v11, v14, v16, v18, v20, v24, v5, v7, v9;
jakarta.json.stream.JsonParser$Event v12, v21, v23;
org.eclipse.parsson.JsonParserImpl$ArrayContext v19;
v0 := @this: org.eclipse.parsson.JsonParserImpl$NoneContext;
v1 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v2 = v1.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonTokenizer tokenizer>;
v3 = virtualinvoke v2.<org.eclipse.parsson.JsonTokenizer: org.eclipse.parsson.JsonTokenizer$JsonToken nextToken()>();
v4 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken CURLYOPEN>;
if v3 != v4 goto label1;
v5 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v6 = v5.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Stack stack>;
v7 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v8 = v7.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext>;
specialinvoke v6.<org.eclipse.parsson.JsonParserImpl$Stack: void push(org.eclipse.parsson.JsonParserImpl$Context)>(v8);
v9 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v10 = new org.eclipse.parsson.JsonParserImpl$ObjectContext;
v11 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
specialinvoke v10.<org.eclipse.parsson.JsonParserImpl$ObjectContext: void <init>(org.eclipse.parsson.JsonParserImpl)>(v11);
v9.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext> = v10;
v12 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_OBJECT>;
return v12;
label1:
v13 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken SQUAREOPEN>;
if v3 != v13 goto label2;
v14 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v15 = v14.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Stack stack>;
v16 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v17 = v16.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext>;
specialinvoke v15.<org.eclipse.parsson.JsonParserImpl$Stack: void push(org.eclipse.parsson.JsonParserImpl$Context)>(v17);
v18 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v19 = new org.eclipse.parsson.JsonParserImpl$ArrayContext;
v20 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
specialinvoke v19.<org.eclipse.parsson.JsonParserImpl$ArrayContext: void <init>(org.eclipse.parsson.JsonParserImpl)>(v20);
v18.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext> = v19;
v21 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_ARRAY>;
return v21;
label2:
v22 = virtualinvoke v3.<org.eclipse.parsson.JsonTokenizer$JsonToken: boolean isValue()>();
if v22 == 0 goto label3;
v23 = virtualinvoke v3.<org.eclipse.parsson.JsonTokenizer$JsonToken: jakarta.json.stream.JsonParser$Event getEvent()>();
return v23;
label3:
v24 = v0.<org.eclipse.parsson.JsonParserImpl$NoneContext: org.eclipse.parsson.JsonParserImpl this$0>;
v25 = specialinvoke v24.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParsingException parsingException(org.eclipse.parsson.JsonTokenizer$JsonToken,java.lang.String)>(v3, "[CURLYOPEN, SQUAREOPEN, STRING, NUMBER, TRUE, FALSE, NULL]");
throw v25;
}
void skip()
{
org.eclipse.parsson.JsonParserImpl$NoneContext v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$NoneContext;
return;
}
}