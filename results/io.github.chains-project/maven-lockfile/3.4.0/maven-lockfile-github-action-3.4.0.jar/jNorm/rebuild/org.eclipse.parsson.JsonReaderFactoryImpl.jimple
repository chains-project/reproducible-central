class org.eclipse.parsson.JsonReaderFactoryImpl extends java.lang.Object implements jakarta.json.JsonReaderFactory
{
private final java.util.Map config;
private final org.eclipse.parsson.api.BufferPool bufferPool;
private final boolean rejectDuplicateKeys;
void <init>(java.util.Map, org.eclipse.parsson.api.BufferPool, boolean)
{
org.eclipse.parsson.JsonReaderFactoryImpl v0;
java.util.Map v1;
org.eclipse.parsson.api.BufferPool v2;
boolean v3;
v0 := @this: org.eclipse.parsson.JsonReaderFactoryImpl;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
v3 := @parameter2: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonReaderFactoryImpl: java.util.Map config> = v1;
v0.<org.eclipse.parsson.JsonReaderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v2;
v0.<org.eclipse.parsson.JsonReaderFactoryImpl: boolean rejectDuplicateKeys> = v3;
return;
}
public jakarta.json.JsonReader createReader(java.io.Reader)
{
org.eclipse.parsson.JsonReaderFactoryImpl v0;
java.util.Map v5;
java.io.Reader v1;
org.eclipse.parsson.JsonReaderImpl v2;
org.eclipse.parsson.api.BufferPool v3;
boolean v4;
v0 := @this: org.eclipse.parsson.JsonReaderFactoryImpl;
v1 := @parameter0: java.io.Reader;
v2 = new org.eclipse.parsson.JsonReaderImpl;
v3 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v4 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: boolean rejectDuplicateKeys>;
v5 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: java.util.Map config>;
specialinvoke v2.<org.eclipse.parsson.JsonReaderImpl: void <init>(java.io.Reader,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v3, v4, v5);
return v2;
}
public jakarta.json.JsonReader createReader(java.io.InputStream)
{
org.eclipse.parsson.JsonReaderFactoryImpl v0;
java.util.Map v5;
org.eclipse.parsson.JsonReaderImpl v2;
org.eclipse.parsson.api.BufferPool v3;
boolean v4;
java.io.InputStream v1;
v0 := @this: org.eclipse.parsson.JsonReaderFactoryImpl;
v1 := @parameter0: java.io.InputStream;
v2 = new org.eclipse.parsson.JsonReaderImpl;
v3 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v4 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: boolean rejectDuplicateKeys>;
v5 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: java.util.Map config>;
specialinvoke v2.<org.eclipse.parsson.JsonReaderImpl: void <init>(java.io.InputStream,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v3, v4, v5);
return v2;
}
public jakarta.json.JsonReader createReader(java.io.InputStream, java.nio.charset.Charset)
{
org.eclipse.parsson.JsonReaderFactoryImpl v0;
java.nio.charset.Charset v2;
java.util.Map v6;
org.eclipse.parsson.JsonReaderImpl v3;
org.eclipse.parsson.api.BufferPool v4;
boolean v5;
java.io.InputStream v1;
v0 := @this: org.eclipse.parsson.JsonReaderFactoryImpl;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: java.nio.charset.Charset;
v3 = new org.eclipse.parsson.JsonReaderImpl;
v4 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v5 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: boolean rejectDuplicateKeys>;
v6 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: java.util.Map config>;
specialinvoke v3.<org.eclipse.parsson.JsonReaderImpl: void <init>(java.io.InputStream,java.nio.charset.Charset,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v2, v4, v5, v6);
return v3;
}
public java.util.Map getConfigInUse()
{
org.eclipse.parsson.JsonReaderFactoryImpl v0;
java.util.Map v1;
v0 := @this: org.eclipse.parsson.JsonReaderFactoryImpl;
v1 = v0.<org.eclipse.parsson.JsonReaderFactoryImpl: java.util.Map config>;
return v1;
}
}