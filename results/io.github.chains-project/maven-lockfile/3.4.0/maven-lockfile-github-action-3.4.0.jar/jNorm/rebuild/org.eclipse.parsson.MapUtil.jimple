public final class org.eclipse.parsson.MapUtil extends java.lang.Object
{
private void <init>()
{
org.eclipse.parsson.MapUtil v0;
v0 := @this: org.eclipse.parsson.MapUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static jakarta.json.JsonValue handle(java.lang.Object, org.eclipse.parsson.api.BufferPool)
{
jakarta.json.JsonValue v14, v2;
jakarta.json.JsonObject v28, v7;
org.eclipse.parsson.JsonStringImpl v22;
boolean v10, v12, v13, v15, v17, v19, v21, v23, v26, v3, v4, v6, v8;
org.eclipse.parsson.JsonArrayBuilderImpl v24;
jakarta.json.JsonNumber v11, v16, v18, v20, v9;
jakarta.json.JsonArray v25, v5;
org.eclipse.parsson.JsonObjectBuilderImpl v27;
java.lang.Object[] v30;
java.lang.String v32;
java.lang.IllegalArgumentException v29;
java.lang.Class v31;
java.lang.Object v0;
org.eclipse.parsson.api.BufferPool v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: org.eclipse.parsson.api.BufferPool;
if v0 != null goto label01;
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
return v2;
label01:
v3 = v0 instanceof jakarta.json.JsonValue;
if v3 == 0 goto label02;
return v0;
label02:
v4 = v0 instanceof jakarta.json.JsonArrayBuilder;
if v4 == 0 goto label03;
v5 = interfaceinvoke v0.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
return v5;
label03:
v6 = v0 instanceof jakarta.json.JsonObjectBuilder;
if v6 == 0 goto label04;
v7 = interfaceinvoke v0.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
return v7;
label04:
v8 = v0 instanceof java.math.BigDecimal;
if v8 == 0 goto label05;
v9 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)>(v0);
return v9;
label05:
v10 = v0 instanceof java.math.BigInteger;
if v10 == 0 goto label06;
v11 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)>(v0);
return v11;
label06:
v12 = v0 instanceof java.lang.Boolean;
if v12 == 0 goto label09;
v13 = virtualinvoke v0.<java.lang.Boolean: boolean booleanValue()>();
if v13 == 0 goto label07;
v14 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
goto label08;
label07:
v14 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
label08:
return v14;
label09:
v15 = v0 instanceof java.lang.Double;
if v15 == 0 goto label10;
v16 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.lang.Number)>(v0);
return v16;
label10:
v17 = v0 instanceof java.lang.Integer;
if v17 == 0 goto label11;
v18 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.lang.Number)>(v0);
return v18;
label11:
v19 = v0 instanceof java.lang.Long;
if v19 == 0 goto label12;
v20 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.lang.Number)>(v0);
return v20;
label12:
v21 = v0 instanceof java.lang.String;
if v21 == 0 goto label13;
v22 = new org.eclipse.parsson.JsonStringImpl;
specialinvoke v22.<org.eclipse.parsson.JsonStringImpl: void <init>(java.lang.CharSequence)>(v0);
return v22;
label13:
v23 = v0 instanceof java.util.Collection;
if v23 == 0 goto label14;
v24 = new org.eclipse.parsson.JsonArrayBuilderImpl;
specialinvoke v24.<org.eclipse.parsson.JsonArrayBuilderImpl: void <init>(java.util.Collection,org.eclipse.parsson.api.BufferPool)>(v0, v1);
v25 = interfaceinvoke v24.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
return v25;
label14:
v26 = v0 instanceof java.util.Map;
if v26 == 0 goto label15;
v27 = new org.eclipse.parsson.JsonObjectBuilderImpl;
specialinvoke v27.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(java.util.Map,org.eclipse.parsson.api.BufferPool)>(v0, v1);
v28 = interfaceinvoke v27.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
return v28;
label15:
v29 = new java.lang.IllegalArgumentException;
v30 = newarray (java.lang.Object)[1];
v31 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v30[0] = v31;
v32 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Type %s is not supported.", v30);
specialinvoke v29.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v32);
throw v29;
}
}