class org.eclipse.yasson.internal.deserializer.types.InstantDeserializer extends org.eclipse.yasson.internal.deserializer.types.AbstractDateDeserializer
{
private static final java.time.format.DateTimeFormatter DEFAULT_FORMATTER;
void <init>(org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder)
{
org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder v1;
org.eclipse.yasson.internal.deserializer.types.InstantDeserializer v0;
v0 := @this: org.eclipse.yasson.internal.deserializer.types.InstantDeserializer;
v1 := @parameter0: org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.deserializer.types.AbstractDateDeserializer: void <init>(org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder)>(v1);
return;
}
protected java.time.Instant fromInstant(java.time.Instant)
{
java.time.Instant v1;
org.eclipse.yasson.internal.deserializer.types.InstantDeserializer v0;
v0 := @this: org.eclipse.yasson.internal.deserializer.types.InstantDeserializer;
v1 := @parameter0: java.time.Instant;
return v1;
}
protected java.time.Instant parseDefault(java.lang.String, java.util.Locale)
{
java.util.Locale v2;
java.time.format.DateTimeFormatter v3, v4;
org.eclipse.yasson.internal.deserializer.types.InstantDeserializer v0;
java.lang.String v1;
java.time.Instant v6;
java.time.temporal.TemporalAccessor v5;
v0 := @this: org.eclipse.yasson.internal.deserializer.types.InstantDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Locale;
v3 = <org.eclipse.yasson.internal.deserializer.types.InstantDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER>;
v4 = virtualinvoke v3.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withLocale(java.util.Locale)>(v2);
v5 = virtualinvoke v4.<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>(v1);
v6 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(v5);
return v6;
}
protected java.time.Instant parseWithFormatter(java.lang.String, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v2, v3;
org.eclipse.yasson.internal.deserializer.types.InstantDeserializer v0;
java.lang.String v1;
java.time.Instant v5;
java.time.temporal.TemporalAccessor v4;
v0 := @this: org.eclipse.yasson.internal.deserializer.types.InstantDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 = virtualinvoke v0.<org.eclipse.yasson.internal.deserializer.types.InstantDeserializer: java.time.format.DateTimeFormatter getZonedFormatter(java.time.format.DateTimeFormatter)>(v2);
v4 = virtualinvoke v3.<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>(v1);
v5 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(v4);
return v5;
}
static void <clinit>()
{
java.time.ZoneId v1;
java.time.format.DateTimeFormatter v0, v2;
v0 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v1 = <org.eclipse.yasson.internal.deserializer.types.InstantDeserializer: java.time.ZoneId UTC>;
v2 = virtualinvoke v0.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v1);
<org.eclipse.yasson.internal.deserializer.types.InstantDeserializer: java.time.format.DateTimeFormatter DEFAULT_FORMATTER> = v2;
return;
}
}