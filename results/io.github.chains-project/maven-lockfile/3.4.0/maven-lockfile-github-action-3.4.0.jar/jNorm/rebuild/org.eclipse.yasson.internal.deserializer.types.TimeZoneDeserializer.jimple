class org.eclipse.yasson.internal.deserializer.types.TimeZoneDeserializer extends org.eclipse.yasson.internal.deserializer.types.TypeDeserializer
{
void <init>(org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder)
{
org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder v1;
org.eclipse.yasson.internal.deserializer.types.TimeZoneDeserializer v0;
v0 := @this: org.eclipse.yasson.internal.deserializer.types.TimeZoneDeserializer;
v1 := @parameter0: org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.deserializer.types.TypeDeserializer: void <init>(org.eclipse.yasson.internal.deserializer.types.TypeDeserializerBuilder)>(v1);
return;
}
java.lang.Object deserializeStringValue(java.lang.String, org.eclipse.yasson.internal.DeserializationContextImpl, java.lang.reflect.Type)
{
java.lang.Object[] v15;
java.time.ZonedDateTime v6;
java.time.LocalDateTime v5;
org.eclipse.yasson.internal.properties.MessageKeys v14;
int v10, v9;
jakarta.json.bind.JsonbException v13;
java.lang.String v1, v11, v16;
java.time.ZoneOffset v8;
org.eclipse.yasson.internal.deserializer.types.TimeZoneDeserializer v0;
java.time.zone.ZoneRulesException v12;
java.time.ZoneId v4;
java.lang.reflect.Type v3;
org.eclipse.yasson.internal.DeserializationContextImpl v2;
java.util.SimpleTimeZone v7;
v0 := @this: org.eclipse.yasson.internal.deserializer.types.TimeZoneDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.eclipse.yasson.internal.DeserializationContextImpl;
v3 := @parameter2: java.lang.reflect.Type;
label1:
v4 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>(v1);
v5 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime now()>();
v6 = virtualinvoke v5.<java.time.LocalDateTime: java.time.ZonedDateTime atZone(java.time.ZoneId)>(v4);
v7 = new java.util.SimpleTimeZone;
v8 = virtualinvoke v6.<java.time.ZonedDateTime: java.time.ZoneOffset getOffset()>();
v9 = virtualinvoke v8.<java.time.ZoneOffset: int getTotalSeconds()>();
v10 = v9 * 1000;
v11 = virtualinvoke v4.<java.time.ZoneId: java.lang.String getId()>();
specialinvoke v7.<java.util.SimpleTimeZone: void <init>(int,java.lang.String)>(v10, v11);
label2:
return v7;
label3:
v12 := @caughtexception;
v13 = new jakarta.json.bind.JsonbException;
v14 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys ZONE_PARSE_ERROR>;
v15 = newarray (java.lang.Object)[1];
v15[0] = v1;
v16 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v14, v15);
specialinvoke v13.<jakarta.json.bind.JsonbException: void <init>(java.lang.String,java.lang.Throwable)>(v16, v12);
throw v13;
catch java.time.zone.ZoneRulesException from label1 to label2 with label3;
}
}