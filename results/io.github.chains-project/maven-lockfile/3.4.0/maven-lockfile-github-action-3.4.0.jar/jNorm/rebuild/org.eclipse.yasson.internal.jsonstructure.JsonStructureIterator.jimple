abstract class org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator extends java.lang.Object implements java.util.Iterator
{
void <init>()
{
org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator v0;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
abstract jakarta.json.JsonValue getValue();
abstract jakarta.json.bind.JsonbException createIncompatibleValueError();
java.lang.String getString()
{
jakarta.json.JsonValue v1;
org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator v0;
java.lang.String v3, v4;
boolean v2;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator;
v1 = virtualinvoke v0.<org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator: jakarta.json.JsonValue getValue()>();
v2 = v1 instanceof jakarta.json.JsonString;
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<jakarta.json.JsonString: java.lang.String getString()>();
return v3;
label1:
v4 = interfaceinvoke v1.<jakarta.json.JsonValue: java.lang.String toString()>();
return v4;
}
jakarta.json.stream.JsonParser$Event getValueEvent(jakarta.json.JsonValue)
{
java.lang.Object[] v13;
jakarta.json.JsonValue v1;
org.eclipse.yasson.internal.properties.MessageKeys v12;
int[] v2;
org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator v0;
int v4, v5;
jakarta.json.JsonValue$ValueType v14, v3;
jakarta.json.bind.JsonbException v11;
java.lang.String v15, v16;
jakarta.json.stream.JsonParser$Event v10, v6, v7, v8, v9;
v0 := @this: org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator;
v1 := @parameter0: jakarta.json.JsonValue;
v2 = <org.eclipse.yasson.internal.jsonstructure.JsonStructureIterator$1: int[] $SwitchMap$jakarta$json$JsonValue$ValueType>;
v3 = interfaceinvoke v1.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v4 = virtualinvoke v3.<jakarta.json.JsonValue$ValueType: int ordinal()>();
v5 = v2[v4];
tableswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label2;
case 4: goto label2;
case 5: goto label3;
case 6: goto label4;
case 7: goto label5;
default: goto label6;
};
label1:
v6 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_NUMBER>;
return v6;
label2:
v7 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_STRING>;
return v7;
label3:
v8 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_OBJECT>;
return v8;
label4:
v9 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_ARRAY>;
return v9;
label5:
v10 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event VALUE_NULL>;
return v10;
label6:
v11 = new jakarta.json.bind.JsonbException;
v12 = <org.eclipse.yasson.internal.properties.MessageKeys: org.eclipse.yasson.internal.properties.MessageKeys INTERNAL_ERROR>;
v13 = newarray (java.lang.Object)[1];
v14 = interfaceinvoke v1.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (jakarta.json.JsonValue$ValueType)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unknown json value: \u0001");
v13[0] = v15;
v16 = staticinvoke <org.eclipse.yasson.internal.properties.Messages: java.lang.String getMessage(org.eclipse.yasson.internal.properties.MessageKeys,java.lang.Object[])>(v12, v13);
specialinvoke v11.<jakarta.json.bind.JsonbException: void <init>(java.lang.String)>(v16);
throw v11;
}
}