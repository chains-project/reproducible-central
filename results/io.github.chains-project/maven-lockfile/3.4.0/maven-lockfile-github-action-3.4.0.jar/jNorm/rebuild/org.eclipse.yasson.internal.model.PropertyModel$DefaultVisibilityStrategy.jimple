final class org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy extends java.lang.Object implements jakarta.json.bind.config.PropertyVisibilityStrategy
{
private final java.lang.reflect.Method method;
void <init>(java.lang.reflect.Method)
{
org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy v0;
java.lang.reflect.Method v1;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy;
v1 := @parameter0: java.lang.reflect.Method;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy: java.lang.reflect.Method method> = v1;
return;
}
public boolean isVisible(java.lang.reflect.Field)
{
org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy v0;
java.lang.reflect.Field v1;
int v5;
java.lang.reflect.Method v2, v3;
boolean v4, v6, v7;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy;
v1 := @parameter0: java.lang.reflect.Field;
v2 = v0.<org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy: java.lang.reflect.Method method>;
if v2 == null goto label1;
v3 = v0.<org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy: java.lang.reflect.Method method>;
v4 = virtualinvoke v0.<org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy: boolean isVisible(java.lang.reflect.Method)>(v3);
if v4 == 0 goto label2;
label1:
v5 = virtualinvoke v1.<java.lang.reflect.Field: int getModifiers()>();
v6 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v5);
if v6 == 0 goto label2;
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
return v7;
}
public boolean isVisible(java.lang.reflect.Method)
{
org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy v0;
int v2;
java.lang.reflect.Method v1;
boolean v3;
v0 := @this: org.eclipse.yasson.internal.model.PropertyModel$DefaultVisibilityStrategy;
v1 := @parameter0: java.lang.reflect.Method;
v2 = virtualinvoke v1.<java.lang.reflect.Method: int getModifiers()>();
v3 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v2);
return v3;
}
}