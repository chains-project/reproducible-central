abstract class org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer extends org.eclipse.yasson.internal.serializer.types.TypeSerializer
{
static final java.time.ZoneId UTC;
private final java.util.function.Function toStringSerializer;
private final java.util.function.BiConsumer valueWriter;
void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)
{
org.eclipse.yasson.internal.JsonbDateFormatter v5;
java.util.function.Function v6;
org.eclipse.yasson.internal.JsonbConfigProperties v4;
org.eclipse.yasson.internal.model.customization.Customization v2;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.util.function.BiConsumer v11, v12;
java.lang.String v7, v8;
org.eclipse.yasson.internal.JsonbContext v3;
org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder v1;
boolean v10, v9;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.TypeSerializer: void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)>(v1);
v2 = virtualinvoke v1.<org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder: org.eclipse.yasson.internal.model.customization.Customization getCustomization()>();
v3 = virtualinvoke v1.<org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder: org.eclipse.yasson.internal.JsonbContext getJsonbContext()>();
v4 = virtualinvoke v3.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.JsonbConfigProperties getConfigProperties()>();
v5 = specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: org.eclipse.yasson.internal.JsonbDateFormatter getJsonbDateFormatter(org.eclipse.yasson.internal.JsonbConfigProperties,org.eclipse.yasson.internal.model.customization.Customization)>(v4, v2);
v6 = specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.util.function.Function valueSerializer(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)>(v1);
v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.util.function.Function toStringSerializer> = v6;
v7 = "##time-in-millis";
v8 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbDateFormatter: java.lang.String getFormat()>();
v9 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label1;
v10 = virtualinvoke v4.<org.eclipse.yasson.internal.JsonbConfigProperties: boolean isDateInMillisecondsAsString()>();
if v10 != 0 goto label1;
v11 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$lambda_new_0__401: java.util.function.BiConsumer bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer)>(v0);
v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.util.function.BiConsumer valueWriter> = v11;
goto label2;
label1:
v12 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$lambda_new_1__400: java.util.function.BiConsumer bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer)>(v0);
v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.util.function.BiConsumer valueWriter> = v12;
label2:
return;
}
private java.util.function.Function valueSerializer(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)
{
org.eclipse.yasson.internal.JsonbDateFormatter v13, v5;
java.util.function.Function v12, v15, v17, v20, v9;
java.util.Locale v19;
org.eclipse.yasson.internal.model.customization.Customization v2;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.lang.String v18, v6, v7;
org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder v1;
boolean v16, v8;
org.eclipse.yasson.internal.JsonbConfigProperties v4;
java.time.format.DateTimeFormatter v10, v11, v14;
org.eclipse.yasson.internal.JsonbContext v3;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder;
v2 = virtualinvoke v1.<org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder: org.eclipse.yasson.internal.model.customization.Customization getCustomization()>();
v3 = virtualinvoke v1.<org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder: org.eclipse.yasson.internal.JsonbContext getJsonbContext()>();
v4 = virtualinvoke v3.<org.eclipse.yasson.internal.JsonbContext: org.eclipse.yasson.internal.JsonbConfigProperties getConfigProperties()>();
v5 = specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: org.eclipse.yasson.internal.JsonbDateFormatter getJsonbDateFormatter(org.eclipse.yasson.internal.JsonbConfigProperties,org.eclipse.yasson.internal.model.customization.Customization)>(v4, v2);
v6 = "##time-in-millis";
v7 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbDateFormatter: java.lang.String getFormat()>();
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label1;
v9 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$lambda_valueSerializer_2__406: java.util.function.Function bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer)>(v0);
return v9;
label1:
v10 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbDateFormatter: java.time.format.DateTimeFormatter getDateTimeFormatter()>();
if v10 == null goto label2;
v11 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbDateFormatter: java.time.format.DateTimeFormatter getDateTimeFormatter()>();
v12 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$lambda_valueSerializer_3__405: java.util.function.Function bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer,java.time.format.DateTimeFormatter)>(v0, v11);
return v12;
label2:
v13 = virtualinvoke v4.<org.eclipse.yasson.internal.JsonbConfigProperties: org.eclipse.yasson.internal.JsonbDateFormatter getConfigDateFormatter()>();
v14 = virtualinvoke v13.<org.eclipse.yasson.internal.JsonbDateFormatter: java.time.format.DateTimeFormatter getDateTimeFormatter()>();
if v14 == null goto label3;
v15 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$lambda_valueSerializer_4__404: java.util.function.Function bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer,java.time.format.DateTimeFormatter)>(v0, v14);
return v15;
label3:
v16 = virtualinvoke v4.<org.eclipse.yasson.internal.JsonbConfigProperties: boolean isStrictIJson()>();
if v16 == 0 goto label4;
v17 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$formatStrictIJson__403: java.util.function.Function bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer)>(v0);
return v17;
label4:
v18 = virtualinvoke v5.<org.eclipse.yasson.internal.JsonbDateFormatter: java.lang.String getLocale()>();
v19 = virtualinvoke v4.<org.eclipse.yasson.internal.JsonbConfigProperties: java.util.Locale getLocale(java.lang.String)>(v18);
v20 = staticinvoke <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer$lambda_valueSerializer_5__402: java.util.function.Function bootstrap$(org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer,java.util.Locale)>(v0, v19);
return v20;
}
private org.eclipse.yasson.internal.JsonbDateFormatter getJsonbDateFormatter(org.eclipse.yasson.internal.JsonbConfigProperties, org.eclipse.yasson.internal.model.customization.Customization)
{
org.eclipse.yasson.internal.JsonbConfigProperties v1;
org.eclipse.yasson.internal.model.customization.Customization v2;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
org.eclipse.yasson.internal.JsonbDateFormatter v3, v5;
java.util.Optional v4;
java.lang.Object v6;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.JsonbConfigProperties;
v2 := @parameter1: org.eclipse.yasson.internal.model.customization.Customization;
v3 = interfaceinvoke v2.<org.eclipse.yasson.internal.model.customization.Customization: org.eclipse.yasson.internal.JsonbDateFormatter getSerializeDateFormatter()>();
v4 = staticinvoke <java.util.Optional: java.util.Optional ofNullable(java.lang.Object)>(v3);
v5 = virtualinvoke v1.<org.eclipse.yasson.internal.JsonbConfigProperties: org.eclipse.yasson.internal.JsonbDateFormatter getConfigDateFormatter()>();
v6 = virtualinvoke v4.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v5);
return v6;
}
protected java.time.temporal.TemporalAccessor toTemporalAccessor(java.lang.Object)
{
java.lang.Object v1;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: java.lang.Object;
return v1;
}
protected abstract java.time.Instant toInstant(java.lang.Object);
protected abstract java.lang.String formatDefault(java.lang.Object, java.util.Locale);
protected java.lang.String formatWithFormatter(java.lang.Object, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v2;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.lang.Object v1;
java.lang.String v4;
java.time.temporal.TemporalAccessor v3;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 = virtualinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.time.temporal.TemporalAccessor toTemporalAccessor(java.lang.Object)>(v1);
v4 = virtualinvoke v2.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v3);
return v4;
}
protected java.lang.String formatStrictIJson(java.lang.Object)
{
java.time.format.DateTimeFormatter v2;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.lang.Object v1;
java.lang.String v4;
java.time.temporal.TemporalAccessor v3;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: java.lang.Object;
v2 = <org.eclipse.yasson.internal.JsonbDateFormatter: java.time.format.DateTimeFormatter IJSON_DATE_FORMATTER>;
v3 = virtualinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.time.temporal.TemporalAccessor toTemporalAccessor(java.lang.Object)>(v1);
v4 = virtualinvoke v2.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v3);
return v4;
}
protected java.time.format.DateTimeFormatter getZonedFormatter(java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v1, v3;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.time.ZoneId v2, v4;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
v2 = virtualinvoke v1.<java.time.format.DateTimeFormatter: java.time.ZoneId getZone()>();
if v2 == null goto label1;
v3 = v1;
goto label2;
label1:
v4 = <org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.time.ZoneId UTC>;
v3 = virtualinvoke v1.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v4);
label2:
return v3;
}
void serializeValue(java.lang.Object, jakarta.json.stream.JsonGenerator, org.eclipse.yasson.internal.SerializationContextImpl)
{
org.eclipse.yasson.internal.SerializationContextImpl v3;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.util.function.BiConsumer v4;
java.lang.Object v1;
jakarta.json.stream.JsonGenerator v2;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: jakarta.json.stream.JsonGenerator;
v3 := @parameter2: org.eclipse.yasson.internal.SerializationContextImpl;
v4 = v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.util.function.BiConsumer valueWriter>;
interfaceinvoke v4.<java.util.function.BiConsumer: void accept(java.lang.Object,java.lang.Object)>(v1, v2);
return;
}
void serializeKey(java.lang.Object, jakarta.json.stream.JsonGenerator, org.eclipse.yasson.internal.SerializationContextImpl)
{
org.eclipse.yasson.internal.SerializationContextImpl v3;
org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer v0;
java.lang.Object v1, v5;
jakarta.json.stream.JsonGenerator v2;
java.util.function.Function v4;
v0 := @this: org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: jakarta.json.stream.JsonGenerator;
v3 := @parameter2: org.eclipse.yasson.internal.SerializationContextImpl;
v4 = v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.util.function.Function toStringSerializer>;
v5 = interfaceinvoke v4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
interfaceinvoke v2.<jakarta.json.stream.JsonGenerator: jakarta.json.stream.JsonGenerator writeKey(java.lang.String)>(v5);
return;
}
static void <clinit>()
{
java.time.ZoneId v0;
v0 = staticinvoke <java.time.ZoneId: java.time.ZoneId of(java.lang.String)>("UTC");
<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: java.time.ZoneId UTC> = v0;
return;
}
}