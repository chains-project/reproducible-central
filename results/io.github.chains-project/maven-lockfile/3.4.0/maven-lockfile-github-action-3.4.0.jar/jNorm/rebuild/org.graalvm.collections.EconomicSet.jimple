public interface  org.graalvm.collections.EconomicSet extends java.lang.Object implements org.graalvm.collections.UnmodifiableEconomicSet
{
public abstract boolean add(java.lang.Object);
public abstract void remove(java.lang.Object);
public abstract void clear();
public void addAll(org.graalvm.collections.EconomicSet)
{
java.util.Iterator v2;
org.graalvm.collections.EconomicSet v0, v1;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: org.graalvm.collections.EconomicSet;
v2 = interfaceinvoke v1.<org.graalvm.collections.EconomicSet: java.util.Iterator iterator()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicSet: void addAll(java.util.Iterator)>(v2);
return;
}
public void addAll(java.lang.Iterable)
{
java.util.Iterator v2;
org.graalvm.collections.EconomicSet v0;
java.lang.Iterable v1;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicSet: void addAll(java.util.Iterator)>(v2);
return;
}
public void addAll(java.util.Iterator)
{
java.util.Iterator v1;
java.lang.Object v3;
org.graalvm.collections.EconomicSet v0;
boolean v2;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: java.util.Iterator;
label1:
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicSet: boolean add(java.lang.Object)>(v3);
goto label1;
label2:
return;
}
public void removeAll(org.graalvm.collections.EconomicSet)
{
java.util.Iterator v2;
org.graalvm.collections.EconomicSet v0, v1;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: org.graalvm.collections.EconomicSet;
v2 = interfaceinvoke v1.<org.graalvm.collections.EconomicSet: java.util.Iterator iterator()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicSet: void removeAll(java.util.Iterator)>(v2);
return;
}
public void removeAll(java.lang.Iterable)
{
java.util.Iterator v2;
org.graalvm.collections.EconomicSet v0;
java.lang.Iterable v1;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: java.lang.Iterable;
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicSet: void removeAll(java.util.Iterator)>(v2);
return;
}
public void removeAll(java.util.Iterator)
{
java.util.Iterator v1;
java.lang.Object v3;
org.graalvm.collections.EconomicSet v0;
boolean v2;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: java.util.Iterator;
label1:
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
v3 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicSet: void remove(java.lang.Object)>(v3);
goto label1;
label2:
return;
}
public void retainAll(org.graalvm.collections.EconomicSet)
{
java.util.Iterator v2;
java.lang.Object v4;
org.graalvm.collections.EconomicSet v0, v1;
boolean v3, v5;
v0 := @this: org.graalvm.collections.EconomicSet;
v1 := @parameter0: org.graalvm.collections.EconomicSet;
v2 = interfaceinvoke v0.<org.graalvm.collections.EconomicSet: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v1.<org.graalvm.collections.EconomicSet: boolean contains(java.lang.Object)>(v4);
if v5 != 0 goto label1;
interfaceinvoke v2.<java.util.Iterator: void remove()>();
goto label1;
label2:
return;
}
public static org.graalvm.collections.EconomicSet create()
{
org.graalvm.collections.EconomicSet v1;
org.graalvm.collections.Equivalence v0;
v0 = <org.graalvm.collections.Equivalence: org.graalvm.collections.Equivalence DEFAULT>;
v1 = staticinvoke <org.graalvm.collections.EconomicSet: org.graalvm.collections.EconomicSet create(org.graalvm.collections.Equivalence)>(v0);
return v1;
}
public static org.graalvm.collections.EconomicSet create(org.graalvm.collections.Equivalence)
{
org.graalvm.collections.EconomicMapImpl v1;
org.graalvm.collections.Equivalence v0;
v0 := @parameter0: org.graalvm.collections.Equivalence;
v1 = staticinvoke <org.graalvm.collections.EconomicMapImpl: org.graalvm.collections.EconomicMapImpl create(org.graalvm.collections.Equivalence,boolean)>(v0, 1);
return v1;
}
public static org.graalvm.collections.EconomicSet create(int)
{
int v0;
org.graalvm.collections.EconomicSet v2;
org.graalvm.collections.Equivalence v1;
v0 := @parameter0: int;
v1 = <org.graalvm.collections.Equivalence: org.graalvm.collections.Equivalence DEFAULT>;
v2 = staticinvoke <org.graalvm.collections.EconomicSet: org.graalvm.collections.EconomicSet create(org.graalvm.collections.Equivalence,int)>(v1, v0);
return v2;
}
public static org.graalvm.collections.EconomicSet create(org.graalvm.collections.UnmodifiableEconomicSet)
{
org.graalvm.collections.EconomicSet v2;
org.graalvm.collections.Equivalence v1;
org.graalvm.collections.UnmodifiableEconomicSet v0;
v0 := @parameter0: org.graalvm.collections.UnmodifiableEconomicSet;
v1 = <org.graalvm.collections.Equivalence: org.graalvm.collections.Equivalence DEFAULT>;
v2 = staticinvoke <org.graalvm.collections.EconomicSet: org.graalvm.collections.EconomicSet create(org.graalvm.collections.Equivalence,org.graalvm.collections.UnmodifiableEconomicSet)>(v1, v0);
return v2;
}
public static org.graalvm.collections.EconomicSet create(org.graalvm.collections.Equivalence, int)
{
int v1;
org.graalvm.collections.EconomicMapImpl v2;
org.graalvm.collections.Equivalence v0;
v0 := @parameter0: org.graalvm.collections.Equivalence;
v1 := @parameter1: int;
v2 = staticinvoke <org.graalvm.collections.EconomicMapImpl: org.graalvm.collections.EconomicMapImpl create(org.graalvm.collections.Equivalence,int,boolean)>(v0, v1, 1);
return v2;
}
public static org.graalvm.collections.EconomicSet create(org.graalvm.collections.Equivalence, org.graalvm.collections.UnmodifiableEconomicSet)
{
org.graalvm.collections.EconomicMapImpl v2;
org.graalvm.collections.Equivalence v0;
org.graalvm.collections.UnmodifiableEconomicSet v1;
v0 := @parameter0: org.graalvm.collections.Equivalence;
v1 := @parameter1: org.graalvm.collections.UnmodifiableEconomicSet;
v2 = staticinvoke <org.graalvm.collections.EconomicMapImpl: org.graalvm.collections.EconomicMapImpl create(org.graalvm.collections.Equivalence,org.graalvm.collections.UnmodifiableEconomicSet,boolean)>(v0, v1, 1);
return v2;
}
}