public interface  org.graalvm.polyglot.io.FileSystem extends java.lang.Object
{
public abstract java.nio.file.Path parsePath(java.net.URI);
public abstract java.nio.file.Path parsePath(java.lang.String);
public abstract transient void checkAccess(java.nio.file.Path, java.util.Set, java.nio.file.LinkOption[]) throws java.io.IOException;
public abstract transient void createDirectory(java.nio.file.Path, java.nio.file.attribute.FileAttribute[]) throws java.io.IOException;
public abstract void delete(java.nio.file.Path) throws java.io.IOException;
public abstract transient java.nio.channels.SeekableByteChannel newByteChannel(java.nio.file.Path, java.util.Set, java.nio.file.attribute.FileAttribute[]) throws java.io.IOException;
public abstract java.nio.file.DirectoryStream newDirectoryStream(java.nio.file.Path, java.nio.file.DirectoryStream$Filter) throws java.io.IOException;
public abstract java.nio.file.Path toAbsolutePath(java.nio.file.Path);
public abstract transient java.nio.file.Path toRealPath(java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException;
public abstract transient java.util.Map readAttributes(java.nio.file.Path, java.lang.String, java.nio.file.LinkOption[]) throws java.io.IOException;
public transient void setAttribute(java.nio.file.Path, java.lang.String, java.lang.Object, java.nio.file.LinkOption[]) throws java.io.IOException
{
java.lang.UnsupportedOperationException v5;
java.nio.file.LinkOption[] v4;
org.graalvm.polyglot.io.FileSystem v0;
java.lang.Object v3;
java.lang.String v2;
java.nio.file.Path v1;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.nio.file.LinkOption[];
v5 = new java.lang.UnsupportedOperationException;
specialinvoke v5.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting attributes is not supported");
throw v5;
}
public transient void copy(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]) throws java.io.IOException
{
java.nio.file.CopyOption[] v3;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1, v2;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.Path;
v3 := @parameter2: java.nio.file.CopyOption[];
staticinvoke <org.graalvm.polyglot.io.IOHelper: void copy(java.nio.file.Path,java.nio.file.Path,org.graalvm.polyglot.io.FileSystem,java.nio.file.CopyOption[])>(v1, v2, v0, v3);
return;
}
public transient void move(java.nio.file.Path, java.nio.file.Path, java.nio.file.CopyOption[]) throws java.io.IOException
{
java.nio.file.CopyOption[] v3;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1, v2;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.Path;
v3 := @parameter2: java.nio.file.CopyOption[];
staticinvoke <org.graalvm.polyglot.io.IOHelper: void move(java.nio.file.Path,java.nio.file.Path,org.graalvm.polyglot.io.FileSystem,java.nio.file.CopyOption[])>(v1, v2, v0, v3);
return;
}
public void createLink(java.nio.file.Path, java.nio.file.Path) throws java.io.IOException
{
java.lang.UnsupportedOperationException v3;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1, v2;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.Path;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Links are not supported");
throw v3;
}
public transient void createSymbolicLink(java.nio.file.Path, java.nio.file.Path, java.nio.file.attribute.FileAttribute[]) throws java.io.IOException
{
java.lang.UnsupportedOperationException v4;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.attribute.FileAttribute[] v3;
java.nio.file.Path v1, v2;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.Path;
v3 := @parameter2: java.nio.file.attribute.FileAttribute[];
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Links are not supported");
throw v4;
}
public java.nio.file.Path readSymbolicLink(java.nio.file.Path) throws java.io.IOException
{
java.lang.UnsupportedOperationException v2;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Links are not supported");
throw v2;
}
public void setCurrentWorkingDirectory(java.nio.file.Path)
{
java.lang.UnsupportedOperationException v2;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Setting current working directory is not supported.");
throw v2;
}
public java.lang.String getSeparator()
{
org.graalvm.polyglot.io.FileSystem v0;
java.lang.String v3;
java.nio.file.FileSystem v2;
java.nio.file.Path v1;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 = interfaceinvoke v0.<org.graalvm.polyglot.io.FileSystem: java.nio.file.Path parsePath(java.lang.String)>("");
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();
v3 = virtualinvoke v2.<java.nio.file.FileSystem: java.lang.String getSeparator()>();
return v3;
}
public java.lang.String getPathSeparator()
{
java.lang.String v1;
org.graalvm.polyglot.io.FileSystem v0;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 = <java.io.File: java.lang.String pathSeparator>;
return v1;
}
public java.lang.String getMimeType(java.nio.file.Path)
{
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
return null;
}
public java.nio.charset.Charset getEncoding(java.nio.file.Path)
{
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
return null;
}
public java.nio.file.Path getTempDirectory()
{
java.lang.UnsupportedOperationException v1;
org.graalvm.polyglot.io.FileSystem v0;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Temporary directories not supported");
throw v1;
}
public transient boolean isSameFile(java.nio.file.Path, java.nio.file.Path, java.nio.file.LinkOption[]) throws java.io.IOException
{
java.nio.file.LinkOption[] v3;
org.graalvm.polyglot.io.FileSystem v0;
java.nio.file.Path v1, v2, v4, v5, v7, v8;
boolean v6, v9;
v0 := @this: org.graalvm.polyglot.io.FileSystem;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.Path;
v3 := @parameter2: java.nio.file.LinkOption[];
v4 = interfaceinvoke v0.<org.graalvm.polyglot.io.FileSystem: java.nio.file.Path toAbsolutePath(java.nio.file.Path)>(v1);
v5 = interfaceinvoke v0.<org.graalvm.polyglot.io.FileSystem: java.nio.file.Path toAbsolutePath(java.nio.file.Path)>(v2);
v6 = interfaceinvoke v4.<java.nio.file.Path: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label1;
return 1;
label1:
v7 = interfaceinvoke v0.<org.graalvm.polyglot.io.FileSystem: java.nio.file.Path toRealPath(java.nio.file.Path,java.nio.file.LinkOption[])>(v1, v3);
v8 = interfaceinvoke v0.<org.graalvm.polyglot.io.FileSystem: java.nio.file.Path toRealPath(java.nio.file.Path,java.nio.file.LinkOption[])>(v2, v3);
v9 = interfaceinvoke v7.<java.nio.file.Path: boolean equals(java.lang.Object)>(v8);
return v9;
}
public static org.graalvm.polyglot.io.FileSystem newDefaultFileSystem()
{
org.graalvm.polyglot.io.FileSystem v1;
org.graalvm.polyglot.impl.AbstractPolyglotImpl v0;
v0 = <org.graalvm.polyglot.io.IOHelper: org.graalvm.polyglot.impl.AbstractPolyglotImpl IMPL>;
v1 = virtualinvoke v0.<org.graalvm.polyglot.impl.AbstractPolyglotImpl: org.graalvm.polyglot.io.FileSystem newDefaultFileSystem()>();
return v1;
}
public static org.graalvm.polyglot.io.FileSystem allowLanguageHomeAccess(org.graalvm.polyglot.io.FileSystem)
{
org.graalvm.polyglot.io.FileSystem v0, v2;
org.graalvm.polyglot.impl.AbstractPolyglotImpl v1;
v0 := @parameter0: org.graalvm.polyglot.io.FileSystem;
v1 = <org.graalvm.polyglot.io.IOHelper: org.graalvm.polyglot.impl.AbstractPolyglotImpl IMPL>;
v2 = virtualinvoke v1.<org.graalvm.polyglot.impl.AbstractPolyglotImpl: org.graalvm.polyglot.io.FileSystem allowLanguageHomeAccess(org.graalvm.polyglot.io.FileSystem)>(v0);
return v2;
}
public static org.graalvm.polyglot.io.FileSystem newReadOnlyFileSystem(org.graalvm.polyglot.io.FileSystem)
{
org.graalvm.polyglot.io.FileSystem v0, v2;
org.graalvm.polyglot.impl.AbstractPolyglotImpl v1;
v0 := @parameter0: org.graalvm.polyglot.io.FileSystem;
v1 = <org.graalvm.polyglot.io.IOHelper: org.graalvm.polyglot.impl.AbstractPolyglotImpl IMPL>;
v2 = virtualinvoke v1.<org.graalvm.polyglot.impl.AbstractPolyglotImpl: org.graalvm.polyglot.io.FileSystem newReadOnlyFileSystem(org.graalvm.polyglot.io.FileSystem)>(v0);
return v2;
}
}