abstract class org.jboss.logging.AbstractLoggerProvider extends java.lang.Object
{
private final java.lang.ThreadLocal ndcStack;
void <init>()
{
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.ThreadLocal;
specialinvoke v1.<java.lang.ThreadLocal: void <init>()>();
v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack> = v1;
return;
}
public void clearNdc()
{
java.lang.Object v2;
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 == null goto label1;
virtualinvoke v2.<java.util.ArrayDeque: void clear()>();
label1:
return;
}
public java.lang.String getNdc()
{
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractLoggerProvider v0;
java.lang.Object v2, v5;
java.lang.String v4;
boolean v3;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<java.util.ArrayDeque: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
v4 = null;
goto label3;
label2:
v5 = virtualinvoke v2.<java.util.ArrayDeque: java.lang.Object peek()>();
v4 = v5.<org.jboss.logging.AbstractLoggerProvider$Entry: java.lang.String merged>;
label3:
return v4;
}
public int getNdcDepth()
{
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractLoggerProvider v0;
int v3;
java.lang.Object v2;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 != null goto label1;
v3 = 0;
goto label2;
label1:
v3 = virtualinvoke v2.<java.util.ArrayDeque: int size()>();
label2:
return v3;
}
public java.lang.String peekNdc()
{
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractLoggerProvider v0;
java.lang.Object v2, v5;
java.lang.String v4;
boolean v3;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<java.util.ArrayDeque: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
v4 = "";
goto label3;
label2:
v5 = virtualinvoke v2.<java.util.ArrayDeque: java.lang.Object peek()>();
v4 = v5.<org.jboss.logging.AbstractLoggerProvider$Entry: java.lang.String current>;
label3:
return v4;
}
public java.lang.String popNdc()
{
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractLoggerProvider v0;
java.lang.Object v2, v5;
java.lang.String v4;
boolean v3;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<java.util.ArrayDeque: boolean isEmpty()>();
if v3 == 0 goto label2;
label1:
v4 = "";
goto label3;
label2:
v5 = virtualinvoke v2.<java.util.ArrayDeque: java.lang.Object pop()>();
v4 = v5.<org.jboss.logging.AbstractLoggerProvider$Entry: java.lang.String current>;
label3:
return v4;
}
public void pushNdc(java.lang.String)
{
java.lang.ThreadLocal v2, v5;
org.jboss.logging.AbstractLoggerProvider v0;
org.jboss.logging.AbstractLoggerProvider$Entry v8;
java.lang.Object v3, v9;
java.lang.String v1;
java.util.ArrayDeque v4, v6;
boolean v7;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
if v3 != null goto label1;
v4 = new java.util.ArrayDeque;
specialinvoke v4.<java.util.ArrayDeque: void <init>()>();
v3 = v4;
v5 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
virtualinvoke v5.<java.lang.ThreadLocal: void set(java.lang.Object)>(v4);
label1:
v6 = v3;
v7 = virtualinvoke v3.<java.util.ArrayDeque: boolean isEmpty()>();
if v7 == 0 goto label2;
v8 = new org.jboss.logging.AbstractLoggerProvider$Entry;
specialinvoke v8.<org.jboss.logging.AbstractLoggerProvider$Entry: void <init>(java.lang.String)>(v1);
goto label3;
label2:
v8 = new org.jboss.logging.AbstractLoggerProvider$Entry;
v9 = virtualinvoke v3.<java.util.ArrayDeque: java.lang.Object peek()>();
specialinvoke v8.<org.jboss.logging.AbstractLoggerProvider$Entry: void <init>(org.jboss.logging.AbstractLoggerProvider$Entry,java.lang.String)>(v9, v1);
label3:
virtualinvoke v6.<java.util.ArrayDeque: void push(java.lang.Object)>(v8);
return;
}
public void setNdcMaxDepth(int)
{
java.lang.ThreadLocal v2;
org.jboss.logging.AbstractLoggerProvider v0;
int v1, v4;
java.lang.Object v3;
v0 := @this: org.jboss.logging.AbstractLoggerProvider;
v1 := @parameter0: int;
v2 = v0.<org.jboss.logging.AbstractLoggerProvider: java.lang.ThreadLocal ndcStack>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
if v3 == null goto label2;
label1:
v4 = virtualinvoke v3.<java.util.ArrayDeque: int size()>();
if v4 <= v1 goto label2;
virtualinvoke v3.<java.util.ArrayDeque: java.lang.Object pop()>();
goto label1;
label2:
return;
}
}