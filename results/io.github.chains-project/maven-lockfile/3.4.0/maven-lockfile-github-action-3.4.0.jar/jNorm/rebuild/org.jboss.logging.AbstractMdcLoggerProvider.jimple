abstract class org.jboss.logging.AbstractMdcLoggerProvider extends org.jboss.logging.AbstractLoggerProvider
{
private final java.lang.ThreadLocal mdcMap;
void <init>()
{
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractMdcLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractMdcLoggerProvider;
specialinvoke v0.<org.jboss.logging.AbstractLoggerProvider: void <init>()>();
v1 = new java.lang.ThreadLocal;
specialinvoke v1.<java.lang.ThreadLocal: void <init>()>();
v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap> = v1;
return;
}
public void clearMdc()
{
java.lang.Object v2;
java.lang.ThreadLocal v1;
org.jboss.logging.AbstractMdcLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractMdcLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 == null goto label1;
interfaceinvoke v2.<java.util.Map: void clear()>();
label1:
return;
}
public java.lang.Object getMdc(java.lang.String)
{
java.lang.ThreadLocal v2, v5;
java.lang.Object v3, v4, v6;
java.lang.String v1;
org.jboss.logging.AbstractMdcLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractMdcLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
if v3 != null goto label1;
v4 = null;
goto label2;
label1:
v5 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
v6 = virtualinvoke v5.<java.lang.ThreadLocal: java.lang.Object get()>();
v4 = interfaceinvoke v6.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
label2:
return v4;
}
public java.util.Map getMdcMap()
{
java.lang.ThreadLocal v1;
java.util.Map v3;
java.lang.Object v2;
org.jboss.logging.AbstractMdcLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractMdcLoggerProvider;
v1 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
if v2 != null goto label1;
v3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label2;
label1:
v3 = v2;
label2:
return v3;
}
public java.lang.Object putMdc(java.lang.String, java.lang.Object)
{
java.lang.ThreadLocal v3, v6;
java.util.HashMap v5;
java.lang.Object v2, v4, v7;
java.lang.String v1;
org.jboss.logging.AbstractMdcLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractMdcLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
v4 = virtualinvoke v3.<java.lang.ThreadLocal: java.lang.Object get()>();
if v4 != null goto label1;
v5 = new java.util.HashMap;
specialinvoke v5.<java.util.HashMap: void <init>()>();
v4 = v5;
v6 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
virtualinvoke v6.<java.lang.ThreadLocal: void set(java.lang.Object)>(v5);
label1:
v7 = interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v7;
}
public void removeMdc(java.lang.String)
{
java.lang.ThreadLocal v2;
java.lang.Object v3;
java.lang.String v1;
org.jboss.logging.AbstractMdcLoggerProvider v0;
v0 := @this: org.jboss.logging.AbstractMdcLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logging.AbstractMdcLoggerProvider: java.lang.ThreadLocal mdcMap>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
if v3 != null goto label1;
return;
label1:
interfaceinvoke v3.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return;
}
}