final class org.jboss.logging.JBossLogManagerLogger extends org.jboss.logging.Logger
{
private static final long serialVersionUID;
private final org.jboss.logmanager.Logger logger;
void <init>(java.lang.String, org.jboss.logmanager.Logger)
{
org.jboss.logmanager.Logger v2;
java.lang.String v1;
org.jboss.logging.JBossLogManagerLogger v0;
v0 := @this: org.jboss.logging.JBossLogManagerLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.jboss.logmanager.Logger;
specialinvoke v0.<org.jboss.logging.Logger: void <init>(java.lang.String)>(v1);
v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger> = v2;
return;
}
public boolean isEnabled(org.jboss.logging.Logger$Level)
{
org.jboss.logmanager.Logger v2;
org.jboss.logging.JBossLogManagerLogger v0;
org.jboss.logging.Logger$Level v1;
boolean v4;
java.util.logging.Level v3;
v0 := @this: org.jboss.logging.JBossLogManagerLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 = v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger>;
v3 = staticinvoke <org.jboss.logging.JBossLogManagerLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
v4 = virtualinvoke v2.<org.jboss.logmanager.Logger: boolean isLoggable(java.util.logging.Level)>(v3);
return v4;
}
protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v5;
org.jboss.logmanager.Logger v11, v7, v9;
java.lang.Object[] v4;
org.jboss.logmanager.ExtLogRecord$FormatStyle v13;
java.util.logging.Level v6;
org.jboss.logging.JBossLogManagerLogger v0;
org.jboss.logging.Logger$Level v1;
java.lang.Object v3;
java.lang.String v10, v12, v2;
boolean v8;
v0 := @this: org.jboss.logging.JBossLogManagerLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = staticinvoke <org.jboss.logging.JBossLogManagerLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
v7 = v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger>;
v8 = virtualinvoke v7.<org.jboss.logmanager.Logger: boolean isLoggable(java.util.logging.Level)>(v6);
if v8 == 0 goto label2;
if v4 != null goto label1;
v9 = v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger>;
v10 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
virtualinvoke v9.<org.jboss.logmanager.Logger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>(v2, v6, v10, v5);
goto label2;
label1:
v11 = v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger>;
v12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
v13 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle MESSAGE_FORMAT>;
virtualinvoke v11.<org.jboss.logmanager.Logger: void log(java.lang.String,java.util.logging.Level,java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle,java.lang.Object[],java.lang.Throwable)>(v2, v6, v12, v13, v4, v5);
label2:
return;
}
protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v5;
org.jboss.logmanager.Logger v6, v8;
java.lang.Object[] v4;
org.jboss.logmanager.ExtLogRecord$FormatStyle v10;
java.util.logging.Level v7, v9;
org.jboss.logging.JBossLogManagerLogger v0;
org.jboss.logging.Logger$Level v1;
java.lang.String v2, v3;
v0 := @this: org.jboss.logging.JBossLogManagerLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
if v4 != null goto label1;
v6 = v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger>;
v7 = staticinvoke <org.jboss.logging.JBossLogManagerLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
virtualinvoke v6.<org.jboss.logmanager.Logger: void log(java.lang.String,java.util.logging.Level,java.lang.String,java.lang.Throwable)>(v2, v7, v3, v5);
goto label2;
label1:
v8 = v0.<org.jboss.logging.JBossLogManagerLogger: org.jboss.logmanager.Logger logger>;
v9 = staticinvoke <org.jboss.logging.JBossLogManagerLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
v10 = <org.jboss.logmanager.ExtLogRecord$FormatStyle: org.jboss.logmanager.ExtLogRecord$FormatStyle PRINTF>;
virtualinvoke v8.<org.jboss.logmanager.Logger: void log(java.lang.String,java.util.logging.Level,java.lang.String,org.jboss.logmanager.ExtLogRecord$FormatStyle,java.lang.Object[],java.lang.Throwable)>(v2, v9, v3, v10, v4, v5);
label2:
return;
}
private static java.util.logging.Level translate(org.jboss.logging.Logger$Level)
{
org.jboss.logging.Logger$Level v0, v1, v3;
org.jboss.logmanager.Level v2, v4;
java.util.logging.Level v5;
v0 := @parameter0: org.jboss.logging.Logger$Level;
v1 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level TRACE>;
if v0 != v1 goto label1;
v2 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level TRACE>;
return v2;
label1:
v3 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level DEBUG>;
if v0 != v3 goto label2;
v4 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level DEBUG>;
return v4;
label2:
v5 = staticinvoke <org.jboss.logging.JBossLogManagerLogger: java.util.logging.Level infoOrHigher(org.jboss.logging.Logger$Level)>(v0);
return v5;
}
private static java.util.logging.Level infoOrHigher(org.jboss.logging.Logger$Level)
{
java.util.logging.Level v9;
org.jboss.logging.Logger$Level v0, v1, v3, v5, v7;
org.jboss.logmanager.Level v2, v4, v6, v8;
v0 := @parameter0: org.jboss.logging.Logger$Level;
v1 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level INFO>;
if v0 != v1 goto label1;
v2 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level INFO>;
return v2;
label1:
v3 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level WARN>;
if v0 != v3 goto label2;
v4 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level WARN>;
return v4;
label2:
v5 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level ERROR>;
if v0 != v5 goto label3;
v6 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level ERROR>;
return v6;
label3:
v7 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level FATAL>;
if v0 != v7 goto label4;
v8 = <org.jboss.logmanager.Level: org.jboss.logmanager.Level FATAL>;
return v8;
label4:
v9 = <org.jboss.logmanager.Level: java.util.logging.Level ALL>;
return v9;
}
}