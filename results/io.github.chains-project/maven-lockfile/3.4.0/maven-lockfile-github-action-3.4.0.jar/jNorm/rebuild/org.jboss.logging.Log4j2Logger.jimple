final class org.jboss.logging.Log4j2Logger extends org.jboss.logging.Logger
{
private static final long serialVersionUID;
private final org.apache.logging.log4j.spi.AbstractLogger logger;
private final org.apache.logging.log4j.message.MessageFormatMessageFactory messageFactory;
void <init>(java.lang.String)
{
org.apache.logging.log4j.LoggingException v4;
org.jboss.logging.Log4j2Logger v0;
org.apache.logging.log4j.Logger v2;
org.apache.logging.log4j.message.MessageFormatMessageFactory v8;
java.lang.Class v5;
java.lang.String v1, v6, v7;
boolean v3;
v0 := @this: org.jboss.logging.Log4j2Logger;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logging.Logger: void <init>(java.lang.String)>(v1);
v2 = staticinvoke <org.apache.logging.log4j.LogManager: org.apache.logging.log4j.Logger getLogger(java.lang.String)>(v1);
v3 = v2 instanceof org.apache.logging.log4j.spi.AbstractLogger;
if v3 != 0 goto label1;
v4 = new org.apache.logging.log4j.LoggingException;
v5 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The logger for [\u0001] does not extend AbstractLogger. Actual logger: \u0001");
specialinvoke v4.<org.apache.logging.log4j.LoggingException: void <init>(java.lang.String)>(v7);
throw v4;
label1:
v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.spi.AbstractLogger logger> = v2;
v8 = new org.apache.logging.log4j.message.MessageFormatMessageFactory;
specialinvoke v8.<org.apache.logging.log4j.message.MessageFormatMessageFactory: void <init>()>();
v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.message.MessageFormatMessageFactory messageFactory> = v8;
return;
}
public boolean isEnabled(org.jboss.logging.Logger$Level)
{
org.jboss.logging.Log4j2Logger v0;
org.jboss.logging.Logger$Level v1;
org.apache.logging.log4j.Level v3;
org.apache.logging.log4j.spi.AbstractLogger v2;
boolean v4;
v0 := @this: org.jboss.logging.Log4j2Logger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.spi.AbstractLogger logger>;
v3 = staticinvoke <org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.Level translate(org.jboss.logging.Logger$Level)>(v1);
v4 = virtualinvoke v2.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level)>(v3);
return v4;
}
protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v16, v5;
org.jboss.logging.Log4j2Logger v0;
java.lang.Object[] v4;
org.apache.logging.log4j.Level v6;
org.apache.logging.log4j.message.Message v13;
int v10;
java.lang.String v12, v15, v2;
org.apache.logging.log4j.spi.AbstractLogger v7, v9;
boolean v8;
org.jboss.logging.Logger$Level v1;
org.apache.logging.log4j.message.MessageFormatMessageFactory v11, v14;
java.lang.Object v3;
v0 := @this: org.jboss.logging.Log4j2Logger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = staticinvoke <org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.Level translate(org.jboss.logging.Logger$Level)>(v1);
v7 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.spi.AbstractLogger logger>;
v8 = virtualinvoke v7.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level)>(v6);
if v8 == 0 goto label7;
label1:
v9 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.spi.AbstractLogger logger>;
if v4 == null goto label2;
v10 = lengthof v4;
if v10 != 0 goto label3;
label2:
v11 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.message.MessageFormatMessageFactory messageFactory>;
v12 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
v13 = virtualinvoke v11.<org.apache.logging.log4j.message.MessageFormatMessageFactory: org.apache.logging.log4j.message.Message newMessage(java.lang.String)>(v12);
goto label4;
label3:
v14 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.message.MessageFormatMessageFactory messageFactory>;
v15 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
v13 = virtualinvoke v14.<org.apache.logging.log4j.message.MessageFormatMessageFactory: org.apache.logging.log4j.message.Message newMessage(java.lang.String,java.lang.Object[])>(v15, v4);
label4:
virtualinvoke v9.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(v2, v6, null, v13, v5);
label5:
goto label7;
label6:
v16 := @caughtexception;
label7:
return;
catch java.lang.Throwable from label1 to label5 with label6;
}
protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v11, v5;
org.jboss.logging.Log4j2Logger v0;
java.lang.Object[] v4;
org.apache.logging.log4j.Level v6;
org.apache.logging.log4j.message.StringFormattedMessage v10;
org.jboss.logging.Logger$Level v1;
java.lang.String v2, v3;
org.apache.logging.log4j.spi.AbstractLogger v7, v9;
boolean v8;
v0 := @this: org.jboss.logging.Log4j2Logger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = staticinvoke <org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.Level translate(org.jboss.logging.Logger$Level)>(v1);
v7 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.spi.AbstractLogger logger>;
v8 = virtualinvoke v7.<org.apache.logging.log4j.spi.AbstractLogger: boolean isEnabled(org.apache.logging.log4j.Level)>(v6);
if v8 == 0 goto label4;
label1:
v9 = v0.<org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.spi.AbstractLogger logger>;
v10 = new org.apache.logging.log4j.message.StringFormattedMessage;
specialinvoke v10.<org.apache.logging.log4j.message.StringFormattedMessage: void <init>(java.lang.String,java.lang.Object[])>(v3, v4);
virtualinvoke v9.<org.apache.logging.log4j.spi.AbstractLogger: void logMessage(java.lang.String,org.apache.logging.log4j.Level,org.apache.logging.log4j.Marker,org.apache.logging.log4j.message.Message,java.lang.Throwable)>(v2, v6, null, v10, v5);
label2:
goto label4;
label3:
v11 := @caughtexception;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private static org.apache.logging.log4j.Level translate(org.jboss.logging.Logger$Level)
{
org.jboss.logging.Logger$Level v0, v1, v3;
org.apache.logging.log4j.Level v2, v4, v5;
v0 := @parameter0: org.jboss.logging.Logger$Level;
v1 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level TRACE>;
if v0 != v1 goto label1;
v2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level TRACE>;
return v2;
label1:
v3 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level DEBUG>;
if v0 != v3 goto label2;
v4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level DEBUG>;
return v4;
label2:
v5 = staticinvoke <org.jboss.logging.Log4j2Logger: org.apache.logging.log4j.Level infoOrHigher(org.jboss.logging.Logger$Level)>(v0);
return v5;
}
private static org.apache.logging.log4j.Level infoOrHigher(org.jboss.logging.Logger$Level)
{
org.apache.logging.log4j.Level v2, v4, v6, v8, v9;
org.jboss.logging.Logger$Level v0, v1, v3, v5, v7;
v0 := @parameter0: org.jboss.logging.Logger$Level;
v1 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level INFO>;
if v0 != v1 goto label1;
v2 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level INFO>;
return v2;
label1:
v3 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level WARN>;
if v0 != v3 goto label2;
v4 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level WARN>;
return v4;
label2:
v5 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level ERROR>;
if v0 != v5 goto label3;
v6 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ERROR>;
return v6;
label3:
v7 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level FATAL>;
if v0 != v7 goto label4;
v8 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level FATAL>;
return v8;
label4:
v9 = <org.apache.logging.log4j.Level: org.apache.logging.log4j.Level ALL>;
return v9;
}
}