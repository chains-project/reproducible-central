public final class org.jboss.logging.MDC extends java.lang.Object
{
private void <init>()
{
org.jboss.logging.MDC v0;
v0 := @this: org.jboss.logging.MDC;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.Object put(java.lang.String, java.lang.Object)
{
org.jboss.logging.LoggerProvider v2;
java.lang.Object v1, v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 = <org.jboss.logging.LoggerProviders: org.jboss.logging.LoggerProvider PROVIDER>;
v3 = interfaceinvoke v2.<org.jboss.logging.LoggerProvider: java.lang.Object putMdc(java.lang.String,java.lang.Object)>(v0, v1);
return v3;
}
public static java.lang.Object get(java.lang.String)
{
java.lang.Object v2;
java.lang.String v0;
org.jboss.logging.LoggerProvider v1;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logging.LoggerProviders: org.jboss.logging.LoggerProvider PROVIDER>;
v2 = interfaceinvoke v1.<org.jboss.logging.LoggerProvider: java.lang.Object getMdc(java.lang.String)>(v0);
return v2;
}
public static void remove(java.lang.String)
{
java.lang.String v0;
org.jboss.logging.LoggerProvider v1;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logging.LoggerProviders: org.jboss.logging.LoggerProvider PROVIDER>;
interfaceinvoke v1.<org.jboss.logging.LoggerProvider: void removeMdc(java.lang.String)>(v0);
return;
}
public static java.util.Map getMap()
{
org.jboss.logging.LoggerProvider v0;
java.util.Map v1;
v0 = <org.jboss.logging.LoggerProviders: org.jboss.logging.LoggerProvider PROVIDER>;
v1 = interfaceinvoke v0.<org.jboss.logging.LoggerProvider: java.util.Map getMdcMap()>();
return v1;
}
public static void clear()
{
org.jboss.logging.LoggerProvider v0;
v0 = <org.jboss.logging.LoggerProviders: org.jboss.logging.LoggerProvider PROVIDER>;
interfaceinvoke v0.<org.jboss.logging.LoggerProvider: void clearMdc()>();
return;
}
}