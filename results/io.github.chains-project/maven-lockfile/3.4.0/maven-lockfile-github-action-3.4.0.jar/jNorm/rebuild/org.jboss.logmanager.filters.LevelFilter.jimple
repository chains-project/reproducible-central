public final class org.jboss.logmanager.filters.LevelFilter extends java.lang.Object implements java.util.logging.Filter
{
private final java.util.Set includedLevels;
public void <init>(java.util.logging.Level)
{
java.util.Set v2;
org.jboss.logmanager.filters.LevelFilter v0;
java.util.logging.Level v1;
v0 := @this: org.jboss.logmanager.filters.LevelFilter;
v1 := @parameter0: java.util.logging.Level;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v1);
v0.<org.jboss.logmanager.filters.LevelFilter: java.util.Set includedLevels> = v2;
return;
}
public void <init>(java.util.Collection)
{
java.util.HashSet v2;
org.jboss.logmanager.filters.LevelFilter v0;
java.util.Collection v1;
v0 := @this: org.jboss.logmanager.filters.LevelFilter;
v1 := @parameter0: java.util.Collection;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>(java.util.Collection)>(v1);
v0.<org.jboss.logmanager.filters.LevelFilter: java.util.Set includedLevels> = v2;
return;
}
public boolean isLoggable(java.util.logging.LogRecord)
{
org.jboss.logmanager.filters.LevelFilter v0;
java.util.Set v2;
java.util.logging.LogRecord v1;
boolean v4;
java.util.logging.Level v3;
v0 := @this: org.jboss.logmanager.filters.LevelFilter;
v1 := @parameter0: java.util.logging.LogRecord;
v2 = v0.<org.jboss.logmanager.filters.LevelFilter: java.util.Set includedLevels>;
v3 = virtualinvoke v1.<java.util.logging.LogRecord: java.util.logging.Level getLevel()>();
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
return v4;
}
}