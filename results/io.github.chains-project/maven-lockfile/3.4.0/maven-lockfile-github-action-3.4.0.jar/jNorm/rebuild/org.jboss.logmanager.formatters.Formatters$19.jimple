class org.jboss.logmanager.formatters.Formatters$19 extends org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep
{
void <init>(boolean, int, boolean, int)
{
int v2, v4;
org.jboss.logmanager.formatters.Formatters$19 v0;
boolean v1, v3;
v0 := @this: org.jboss.logmanager.formatters.Formatters$19;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
specialinvoke v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: void <init>(boolean,int,boolean,int)>(v1, v2, v3, v4);
return;
}
public void renderRaw(java.util.logging.Formatter, java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord)
{
org.jboss.logmanager.formatters.Formatters$19 v0;
java.lang.StringBuilder v2;
java.lang.String v4;
org.jboss.logmanager.ExtLogRecord v3;
java.util.logging.Formatter v1;
v0 := @this: org.jboss.logmanager.formatters.Formatters$19;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: java.lang.StringBuilder;
v3 := @parameter2: org.jboss.logmanager.ExtLogRecord;
v4 = virtualinvoke v3.<org.jboss.logmanager.ExtLogRecord: java.lang.String getSourceMethodName()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v4);
return;
}
public boolean isCallerInformationRequired()
{
org.jboss.logmanager.formatters.Formatters$19 v0;
v0 := @this: org.jboss.logmanager.formatters.Formatters$19;
return 1;
}
public org.jboss.logmanager.formatters.FormatStep$ItemType getItemType()
{
org.jboss.logmanager.formatters.Formatters$19 v0;
org.jboss.logmanager.formatters.FormatStep$ItemType v1;
v0 := @this: org.jboss.logmanager.formatters.Formatters$19;
v1 = <org.jboss.logmanager.formatters.FormatStep$ItemType: org.jboss.logmanager.formatters.FormatStep$ItemType SOURCE_METHOD_NAME>;
return v1;
}
}