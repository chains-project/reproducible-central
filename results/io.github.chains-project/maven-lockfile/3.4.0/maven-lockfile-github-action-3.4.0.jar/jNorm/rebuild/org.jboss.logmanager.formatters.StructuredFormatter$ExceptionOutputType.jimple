public final enum class org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType extends java.lang.Enum
{
public static final enum org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType DETAILED;
public static final enum org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType FORMATTED;
public static final enum org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType DETAILED_AND_FORMATTED;
private static final org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] $VALUES;
public static org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] values()
{
java.lang.Object v1;
org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] v0;
v0 = <org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jboss/logmanager/formatters/StructuredFormatter$ExceptionOutputType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType v0;
v0 := @this: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] $values()
{
org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType v1, v2, v3;
org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] v0;
v0 = newarray (org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType)[3];
v1 = <org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType DETAILED>;
v0[0] = v1;
v2 = <org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType FORMATTED>;
v0[1] = v2;
v3 = <org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType DETAILED_AND_FORMATTED>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType v0, v1, v2;
org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] v3;
v0 = new org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType;
specialinvoke v0.<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: void <init>(java.lang.String,int)>("DETAILED", 0);
<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType DETAILED> = v0;
v1 = new org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType;
specialinvoke v1.<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: void <init>(java.lang.String,int)>("FORMATTED", 1);
<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType FORMATTED> = v1;
v2 = new org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType;
specialinvoke v2.<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: void <init>(java.lang.String,int)>("DETAILED_AND_FORMATTED", 2);
<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType DETAILED_AND_FORMATTED> = v2;
v3 = staticinvoke <org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] $values()>();
<org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType: org.jboss.logmanager.formatters.StructuredFormatter$ExceptionOutputType[] $VALUES> = v3;
return;
}
}