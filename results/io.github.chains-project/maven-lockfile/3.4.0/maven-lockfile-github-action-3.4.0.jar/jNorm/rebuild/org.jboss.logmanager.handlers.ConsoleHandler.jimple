public class org.jboss.logmanager.handlers.ConsoleHandler extends org.jboss.logmanager.handlers.OutputStreamHandler
{
private static final java.io.OutputStream out;
private static final java.io.OutputStream err;
private static final java.io.PrintWriter console;
private final java.util.logging.ErrorManager localErrorManager;
public void <init>()
{
org.jboss.logmanager.handlers.ConsoleHandler v0;
java.util.logging.Formatter v1;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 = staticinvoke <org.jboss.logmanager.formatters.Formatters: java.util.logging.Formatter nullFormatter()>();
specialinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void <init>(java.util.logging.Formatter)>(v1);
return;
}
public void <init>(java.util.logging.Formatter)
{
java.io.PrintWriter v2;
org.jboss.logmanager.handlers.ConsoleHandler v0;
org.jboss.logmanager.handlers.ConsoleHandler$Target v3;
java.util.logging.Formatter v1;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 := @parameter0: java.util.logging.Formatter;
v2 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.PrintWriter console>;
if v2 != null goto label1;
v3 = <org.jboss.logmanager.handlers.ConsoleHandler$Target: org.jboss.logmanager.handlers.ConsoleHandler$Target SYSTEM_OUT>;
goto label2;
label1:
v3 = <org.jboss.logmanager.handlers.ConsoleHandler$Target: org.jboss.logmanager.handlers.ConsoleHandler$Target CONSOLE>;
label2:
specialinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void <init>(org.jboss.logmanager.handlers.ConsoleHandler$Target,java.util.logging.Formatter)>(v3, v1);
return;
}
public void <init>(org.jboss.logmanager.handlers.ConsoleHandler$Target)
{
org.jboss.logmanager.handlers.ConsoleHandler v0;
org.jboss.logmanager.handlers.ConsoleHandler$Target v1;
java.util.logging.Formatter v2;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.ConsoleHandler$Target;
v2 = staticinvoke <org.jboss.logmanager.formatters.Formatters: java.util.logging.Formatter nullFormatter()>();
specialinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void <init>(org.jboss.logmanager.handlers.ConsoleHandler$Target,java.util.logging.Formatter)>(v1, v2);
return;
}
public void <init>(org.jboss.logmanager.handlers.ConsoleHandler$Target, java.util.logging.Formatter)
{
java.io.OutputStream v10, v7, v8, v9;
java.io.PrintWriter v11;
org.jboss.logmanager.handlers.ConsoleHandler v0;
org.jboss.logmanager.handlers.ConsoleHandler$1 v3;
java.lang.IllegalArgumentException v13;
java.util.logging.Formatter v2;
int[] v4;
int v5, v6;
java.io.Writer v12;
org.jboss.logmanager.handlers.ConsoleHandler$Target v1;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.ConsoleHandler$Target;
v2 := @parameter1: java.util.logging.Formatter;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>(java.util.logging.Formatter)>(v2);
v3 = new org.jboss.logmanager.handlers.ConsoleHandler$1;
specialinvoke v3.<org.jboss.logmanager.handlers.ConsoleHandler$1: void <init>(org.jboss.logmanager.handlers.ConsoleHandler)>(v0);
v0.<org.jboss.logmanager.handlers.ConsoleHandler: java.util.logging.ErrorManager localErrorManager> = v3;
v4 = <org.jboss.logmanager.handlers.ConsoleHandler$2: int[] $SwitchMap$org$jboss$logmanager$handlers$ConsoleHandler$Target>;
v5 = virtualinvoke v1.<org.jboss.logmanager.handlers.ConsoleHandler$Target: int ordinal()>();
v6 = v4[v5];
tableswitch(v6)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
v7 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream out>;
v8 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream wrap(java.io.OutputStream)>(v7);
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setOutputStream(java.io.OutputStream)>(v8);
goto label5;
label2:
v9 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream err>;
v10 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream wrap(java.io.OutputStream)>(v9);
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setOutputStream(java.io.OutputStream)>(v10);
goto label5;
label3:
v11 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.PrintWriter console>;
v12 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.Writer wrap(java.io.Writer)>(v11);
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setWriter(java.io.Writer)>(v12);
goto label5;
label4:
v13 = new java.lang.IllegalArgumentException;
specialinvoke v13.<java.lang.IllegalArgumentException: void <init>()>();
throw v13;
label5:
return;
}
public void setTarget(org.jboss.logmanager.handlers.ConsoleHandler$Target)
{
java.io.OutputStream v10, v7, v8, v9;
java.io.PrintWriter v11, v2;
org.jboss.logmanager.handlers.ConsoleHandler v0;
java.lang.IllegalArgumentException v13;
int[] v4;
int v5, v6;
java.io.Writer v12;
org.jboss.logmanager.handlers.ConsoleHandler$Target v1, v3;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 := @parameter0: org.jboss.logmanager.handlers.ConsoleHandler$Target;
if v1 != null goto label2;
v2 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.PrintWriter console>;
if v2 != null goto label1;
v3 = <org.jboss.logmanager.handlers.ConsoleHandler$Target: org.jboss.logmanager.handlers.ConsoleHandler$Target SYSTEM_OUT>;
goto label3;
label1:
v3 = <org.jboss.logmanager.handlers.ConsoleHandler$Target: org.jboss.logmanager.handlers.ConsoleHandler$Target CONSOLE>;
goto label3;
label2:
v3 = v1;
label3:
v4 = <org.jboss.logmanager.handlers.ConsoleHandler$2: int[] $SwitchMap$org$jboss$logmanager$handlers$ConsoleHandler$Target>;
v5 = virtualinvoke v3.<org.jboss.logmanager.handlers.ConsoleHandler$Target: int ordinal()>();
v6 = v4[v5];
tableswitch(v6)
{
case 1: goto label4;
case 2: goto label5;
case 3: goto label6;
default: goto label7;
};
label4:
v7 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream out>;
v8 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream wrap(java.io.OutputStream)>(v7);
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setOutputStream(java.io.OutputStream)>(v8);
goto label8;
label5:
v9 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream err>;
v10 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream wrap(java.io.OutputStream)>(v9);
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setOutputStream(java.io.OutputStream)>(v10);
goto label8;
label6:
v11 = <org.jboss.logmanager.handlers.ConsoleHandler: java.io.PrintWriter console>;
v12 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.Writer wrap(java.io.Writer)>(v11);
virtualinvoke v0.<org.jboss.logmanager.handlers.ConsoleHandler: void setWriter(java.io.Writer)>(v12);
goto label8;
label7:
v13 = new java.lang.IllegalArgumentException;
specialinvoke v13.<java.lang.IllegalArgumentException: void <init>()>();
throw v13;
label8:
return;
}
public void setErrorManager(java.util.logging.ErrorManager)
{
org.jboss.logmanager.handlers.ConsoleHandler v0;
java.util.logging.ErrorManager v1, v2, v3;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 := @parameter0: java.util.logging.ErrorManager;
v2 = v0.<org.jboss.logmanager.handlers.ConsoleHandler: java.util.logging.ErrorManager localErrorManager>;
if v1 != v2 goto label1;
v3 = new java.util.logging.ErrorManager;
specialinvoke v3.<java.util.logging.ErrorManager: void <init>()>();
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void setErrorManager(java.util.logging.ErrorManager)>(v3);
return;
label1:
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void setErrorManager(java.util.logging.ErrorManager)>(v1);
return;
}
public java.util.logging.ErrorManager getLocalErrorManager()
{
org.jboss.logmanager.handlers.ConsoleHandler v0;
java.util.logging.ErrorManager v1;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 = v0.<org.jboss.logmanager.handlers.ConsoleHandler: java.util.logging.ErrorManager localErrorManager>;
return v1;
}
private static java.io.OutputStream wrap(java.io.OutputStream)
{
java.io.OutputStream v0, v1;
org.jboss.logmanager.handlers.UncloseableOutputStream v3;
boolean v2;
v0 := @parameter0: java.io.OutputStream;
if v0 != null goto label1;
v1 = null;
goto label3;
label1:
v2 = v0 instanceof org.jboss.logmanager.handlers.UncloseableOutputStream;
if v2 == 0 goto label2;
v1 = v0;
goto label3;
label2:
v3 = new org.jboss.logmanager.handlers.UncloseableOutputStream;
v1 = v3;
specialinvoke v3.<org.jboss.logmanager.handlers.UncloseableOutputStream: void <init>(java.io.OutputStream)>(v0);
label3:
return v1;
}
private static java.io.Writer wrap(java.io.Writer)
{
org.jboss.logmanager.handlers.UncloseableWriter v3;
java.io.Writer v0, v1;
boolean v2;
v0 := @parameter0: java.io.Writer;
if v0 != null goto label1;
v1 = null;
goto label3;
label1:
v2 = v0 instanceof org.jboss.logmanager.handlers.UncloseableWriter;
if v2 == 0 goto label2;
v1 = v0;
goto label3;
label2:
v3 = new org.jboss.logmanager.handlers.UncloseableWriter;
v1 = v3;
specialinvoke v3.<org.jboss.logmanager.handlers.UncloseableWriter: void <init>(java.io.Writer)>(v0);
label3:
return v1;
}
public void setOutputStream(java.io.OutputStream)
{
java.io.OutputStream v1, v2;
org.jboss.logmanager.handlers.ConsoleHandler v0;
v0 := @this: org.jboss.logmanager.handlers.ConsoleHandler;
v1 := @parameter0: java.io.OutputStream;
v2 = staticinvoke <org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream wrap(java.io.OutputStream)>(v1);
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void setOutputStream(java.io.OutputStream)>(v2);
return;
}
static void <clinit>()
{
java.io.PrintStream v0, v1;
java.io.PrintWriter v3;
java.io.Console v2;
v0 = <java.lang.System: java.io.PrintStream out>;
<org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream out> = v0;
v1 = <java.lang.System: java.io.PrintStream err>;
<org.jboss.logmanager.handlers.ConsoleHandler: java.io.OutputStream err> = v1;
v2 = staticinvoke <java.lang.System: java.io.Console console()>();
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v3 = virtualinvoke v2.<java.io.Console: java.io.PrintWriter writer()>();
label2:
<org.jboss.logmanager.handlers.ConsoleHandler: java.io.PrintWriter console> = v3;
return;
}
}