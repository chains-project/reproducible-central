class org.jboss.threads.DelegatingExecutorService extends java.util.concurrent.AbstractExecutorService implements java.util.concurrent.ExecutorService
{
private final java.util.concurrent.Executor delegate;
void <init>(java.util.concurrent.Executor)
{
java.util.concurrent.Executor v1;
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
v1 := @parameter0: java.util.concurrent.Executor;
specialinvoke v0.<java.util.concurrent.AbstractExecutorService: void <init>()>();
v0.<org.jboss.threads.DelegatingExecutorService: java.util.concurrent.Executor delegate> = v1;
return;
}
public void execute(java.lang.Runnable)
{
java.lang.Runnable v1;
java.util.concurrent.Executor v2;
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
v1 := @parameter0: java.lang.Runnable;
v2 = v0.<org.jboss.threads.DelegatingExecutorService: java.util.concurrent.Executor delegate>;
interfaceinvoke v2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(v1);
return;
}
public boolean isShutdown()
{
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
return 0;
}
public boolean isTerminated()
{
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
return 0;
}
public boolean awaitTermination(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException
{
java.util.concurrent.TimeUnit v2;
long v1;
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
return 0;
}
public void shutdown()
{
java.lang.SecurityException v2;
org.jboss.threads.Messages v1;
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
v1 = <org.jboss.threads.Messages: org.jboss.threads.Messages msg>;
v2 = interfaceinvoke v1.<org.jboss.threads.Messages: java.lang.SecurityException notAllowedContainerManaged(java.lang.String)>("shutdown");
throw v2;
}
public java.util.List shutdownNow()
{
java.lang.SecurityException v2;
org.jboss.threads.Messages v1;
org.jboss.threads.DelegatingExecutorService v0;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
v1 = <org.jboss.threads.Messages: org.jboss.threads.Messages msg>;
v2 = interfaceinvoke v1.<org.jboss.threads.Messages: java.lang.SecurityException notAllowedContainerManaged(java.lang.String)>("shutdownNow");
throw v2;
}
public java.lang.String toString()
{
java.lang.Object[] v1;
java.util.concurrent.Executor v3;
org.jboss.threads.DelegatingExecutorService v0;
java.lang.String v2, v4;
v0 := @this: org.jboss.threads.DelegatingExecutorService;
v1 = newarray (java.lang.Object)[2];
v2 = specialinvoke v0.<java.lang.Object: java.lang.String toString()>();
v1[0] = v2;
v3 = v0.<org.jboss.threads.DelegatingExecutorService: java.util.concurrent.Executor delegate>;
v1[1] = v3;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s -> %s", v1);
return v4;
}
}