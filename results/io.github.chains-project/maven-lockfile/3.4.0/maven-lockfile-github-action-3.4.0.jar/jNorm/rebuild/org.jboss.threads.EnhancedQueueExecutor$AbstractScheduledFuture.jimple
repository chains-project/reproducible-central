abstract class org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture extends java.lang.Object implements java.util.concurrent.ScheduledFuture, java.lang.Runnable
{
final long seq;
final org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask;
volatile long when;
volatile int state;
volatile java.lang.Object result;
java.lang.Thread liveThread;
static final boolean $assertionsDisabled;
final org.jboss.threads.EnhancedQueueExecutor this$0;
void <init>(org.jboss.threads.EnhancedQueueExecutor, long, java.util.concurrent.TimeUnit)
{
org.jboss.threads.EnhancedQueueExecutor v1;
long v2, v5, v7, v8, v9;
org.jboss.threads.ContextHandler v11;
java.util.concurrent.TimeUnit v3;
java.util.concurrent.atomic.AtomicLong v4;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
java.lang.Object v12;
org.jboss.threads.EnhancedQueueExecutor$Task v10;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v6;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor;
v2 := @parameter1: long;
v3 := @parameter2: java.util.concurrent.TimeUnit;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = <org.jboss.threads.EnhancedQueueExecutor: java.util.concurrent.atomic.AtomicLong SCHEDULED_TASK_SEQ>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long seq> = v5;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 0;
v6 = v1.<org.jboss.threads.EnhancedQueueExecutor: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask schedulerTask>;
v7 = virtualinvoke v6.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: long age()>();
v8 = virtualinvoke v3.<java.util.concurrent.TimeUnit: long toNanos(long)>(v2);
v9 = staticinvoke <java.lang.Math: long addExact(long,long)>(v7, v8);
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long when> = v9;
v10 = new org.jboss.threads.EnhancedQueueExecutor$Task;
v11 = v1.<org.jboss.threads.EnhancedQueueExecutor: org.jboss.threads.ContextHandler contextHandler>;
v12 = interfaceinvoke v11.<org.jboss.threads.ContextHandler: java.lang.Object captureContext()>();
specialinvoke v10.<org.jboss.threads.EnhancedQueueExecutor$Task: void <init>(org.jboss.threads.EnhancedQueueExecutor,java.lang.Runnable,java.lang.Object)>(v1, v0, v12);
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask> = v10;
return;
}
public int compareTo(java.util.concurrent.Delayed)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
int v3;
java.util.concurrent.Delayed v1;
boolean v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: java.util.concurrent.Delayed;
v2 = v1 instanceof org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int compareTo(org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)>(v1);
goto label2;
label1:
v3 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: int wrongType()>();
label2:
return v3;
}
public int compareTo(org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0, v1;
int v4;
long v2, v3, v5, v6;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long when>;
v3 = v1.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long when>;
v4 = staticinvoke <java.lang.Long: int compare(long,long)>(v2, v3);
if v4 != 0 goto label1;
v5 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long seq>;
v6 = v1.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long seq>;
v4 = staticinvoke <java.lang.Long: int compare(long,long)>(v5, v6);
label1:
return v4;
}
public long getDelay(java.util.concurrent.TimeUnit)
{
org.jboss.threads.EnhancedQueueExecutor v3;
long v2, v5, v6, v7, v9;
java.util.concurrent.TimeUnit v1, v8;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
org.jboss.threads.EnhancedQueueExecutor$SchedulerTask v4;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: long when>;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v4 = v3.<org.jboss.threads.EnhancedQueueExecutor: org.jboss.threads.EnhancedQueueExecutor$SchedulerTask schedulerTask>;
v5 = virtualinvoke v4.<org.jboss.threads.EnhancedQueueExecutor$SchedulerTask: long age()>();
v6 = v2 - v5;
v7 = staticinvoke <java.lang.Math: long max(long,long)>(0L, v6);
v8 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
v9 = virtualinvoke v1.<java.util.concurrent.TimeUnit: long convert(long,java.util.concurrent.TimeUnit)>(v7, v8);
return v9;
}
public boolean isCancelled()
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
boolean v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
if v1 != 1 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean isDone()
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
boolean v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
if v1 == 4 goto label1;
if v1 == 5 goto label1;
if v1 == 1 goto label1;
if v1 != 6 goto label2;
label1:
v2 = 1;
goto label3;
label2:
v2 = 0;
label3:
return v2;
}
public boolean cancel(boolean)
{
java.lang.Throwable v4;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
java.lang.Thread v3;
int v2;
boolean v1;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: boolean;
entermonitor v0;
label01:
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
tableswitch(v2)
{
case 0: goto label02;
case 1: goto label07;
case 2: goto label02;
case 3: goto label04;
default: goto label09;
};
label02:
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 1;
exitmonitor v0;
label03:
return 1;
label04:
if v1 == 0 goto label05;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Thread liveThread>;
virtualinvoke v3.<java.lang.Thread: void interrupt()>();
label05:
exitmonitor v0;
label06:
return 0;
label07:
exitmonitor v0;
label08:
return 1;
label09:
exitmonitor v0;
label10:
return 0;
label11:
v4 := @caughtexception;
exitmonitor v0;
throw v4;
catch java.lang.Throwable from label01 to label03 with label11;
catch java.lang.Throwable from label04 to label06 with label11;
catch java.lang.Throwable from label07 to label08 with label11;
catch java.lang.Throwable from label09 to label10 with label11;
}
public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
{
java.lang.Throwable v8;
java.util.concurrent.CancellationException v2;
java.util.concurrent.ExecutionException v3, v5;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
int v1;
java.lang.Object v4, v6, v7;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
entermonitor v0;
label1:
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
tableswitch(v1)
{
case 0: goto label2;
case 1: goto label3;
case 2: goto label2;
case 3: goto label2;
case 4: goto label6;
case 5: goto label5;
case 6: goto label4;
default: goto label1;
};
label2:
virtualinvoke v0.<java.lang.Object: void wait()>();
goto label1;
label3:
v2 = new java.util.concurrent.CancellationException;
specialinvoke v2.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>("Task was cancelled");
throw v2;
label4:
v3 = new java.util.concurrent.ExecutionException;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result>;
specialinvoke v3.<java.util.concurrent.ExecutionException: void <init>(java.lang.String,java.lang.Throwable)>("Task failed due to rejection", v4);
throw v3;
label5:
v5 = new java.util.concurrent.ExecutionException;
v6 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result>;
specialinvoke v5.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(v6);
throw v5;
label6:
v7 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result>;
exitmonitor v0;
label7:
return v7;
label8:
v8 := @caughtexception;
exitmonitor v0;
throw v8;
catch java.lang.Throwable from label1 to label7 with label8;
}
public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
{
java.lang.Throwable v18;
java.util.concurrent.TimeoutException v7;
long v1, v16, v17, v3, v4, v8, v9;
byte v6;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
int v5;
java.util.concurrent.CancellationException v10;
java.util.concurrent.ExecutionException v11, v13;
java.util.concurrent.TimeUnit v2;
java.lang.Object v12, v14, v15;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = virtualinvoke v2.<java.util.concurrent.TimeUnit: long toNanos(long)>(v1);
v4 = staticinvoke <java.lang.System: long nanoTime()>();
entermonitor v0;
label01:
v5 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
tableswitch(v5)
{
case 0: goto label02;
case 1: goto label04;
case 2: goto label02;
case 3: goto label02;
case 4: goto label07;
case 5: goto label06;
case 6: goto label05;
default: goto label09;
};
label02:
v6 = v3 cmp 0L;
if v6 > 0 goto label03;
v7 = new java.util.concurrent.TimeoutException;
specialinvoke v7.<java.util.concurrent.TimeoutException: void <init>()>();
throw v7;
label03:
v8 = v3 / 1000000L;
v9 = v3 % 1000000L;
virtualinvoke v0.<java.lang.Object: void wait(long,int)>(v8, v9);
goto label09;
label04:
v10 = new java.util.concurrent.CancellationException;
specialinvoke v10.<java.util.concurrent.CancellationException: void <init>(java.lang.String)>("Task was cancelled");
throw v10;
label05:
v11 = new java.util.concurrent.ExecutionException;
v12 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result>;
specialinvoke v11.<java.util.concurrent.ExecutionException: void <init>(java.lang.String,java.lang.Throwable)>("Task failed due to rejection", v12);
throw v11;
label06:
v13 = new java.util.concurrent.ExecutionException;
v14 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result>;
specialinvoke v13.<java.util.concurrent.ExecutionException: void <init>(java.lang.Throwable)>(v14);
throw v13;
label07:
v15 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result>;
exitmonitor v0;
label08:
return v15;
label09:
v16 = staticinvoke <java.lang.System: long nanoTime()>();
v17 = v16 - v4;
v3 = v3 - v17;
v4 = v16;
goto label01;
label10:
v18 := @caughtexception;
exitmonitor v0;
throw v18;
catch java.lang.Throwable from label01 to label08 with label10;
}
public void run()
{
java.lang.Throwable v4, v6;
java.lang.IllegalStateException v3;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
java.lang.Thread v2;
int v1;
java.lang.Object v5;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
entermonitor v0;
label01:
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
tableswitch(v1)
{
case 1: goto label04;
case 2: goto label02;
case 3: goto label08;
case 4: goto label08;
case 5: goto label06;
case 6: goto label06;
default: goto label08;
};
label02:
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 3;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Thread liveThread> = v2;
exitmonitor v0;
label03:
goto label11;
label04:
exitmonitor v0;
label05:
return;
label06:
exitmonitor v0;
label07:
return;
label08:
v3 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.IllegalStateException badState()>();
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void fail(java.lang.Throwable)>(v3);
exitmonitor v0;
label09:
return;
label10:
v4 := @caughtexception;
exitmonitor v0;
throw v4;
label11:
v5 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object performTask()>();
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void finish(java.lang.Object)>(v5);
label12:
goto label14;
label13:
v6 := @caughtexception;
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void fail(java.lang.Throwable)>(v6);
label14:
return;
catch java.lang.Throwable from label01 to label03 with label10;
catch java.lang.Throwable from label04 to label05 with label10;
catch java.lang.Throwable from label06 to label07 with label10;
catch java.lang.Throwable from label08 to label09 with label10;
catch java.lang.Throwable from label11 to label12 with label13;
}
void submit()
{
java.lang.IllegalStateException v2;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
boolean v13, v15, v20, v24, v29;
java.lang.Throwable v22, v3, v34;
java.util.concurrent.atomic.LongAdder v17, v26;
org.jboss.threads.EnhancedQueueExecutor v10, v12, v14, v16, v18, v21, v23, v25, v27, v31, v4, v7;
long v8;
java.lang.AssertionError v30;
java.util.concurrent.RejectedExecutionException v33, v35;
int v1, v11, v6, v9;
org.jboss.threads.EnhancedQueueExecutor$Task v19, v28, v32, v5;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
entermonitor v0;
label01:
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
tableswitch(v1)
{
case 0: goto label02;
case 1: goto label03;
case 2: goto label07;
case 3: goto label07;
case 4: goto label07;
case 5: goto label05;
case 6: goto label05;
default: goto label07;
};
label02:
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 2;
goto label09;
label03:
exitmonitor v0;
label04:
return;
label05:
exitmonitor v0;
label06:
return;
label07:
v2 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.IllegalStateException badState()>();
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void fail(java.lang.Throwable)>(v2);
exitmonitor v0;
label08:
return;
label09:
exitmonitor v0;
label10:
goto label12;
label11:
v3 := @caughtexception;
exitmonitor v0;
throw v3;
label12:
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v5 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask>;
v6 = specialinvoke v4.<org.jboss.threads.EnhancedQueueExecutor: int tryExecute(org.jboss.threads.EnhancedQueueExecutor$Task)>(v5);
if v6 != 0 goto label15;
v7 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v8 = v7.<org.jboss.threads.EnhancedQueueExecutor: long threadStatus>;
v9 = staticinvoke <org.jboss.threads.EnhancedQueueExecutor: int currentSizeOf(long)>(v8);
if v9 != 0 goto label13;
v10 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v11 = virtualinvoke v10.<org.jboss.threads.EnhancedQueueExecutor: int tryAllocateThread(float)>(0.0F);
if v11 != 0 goto label13;
v12 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v13 = virtualinvoke v12.<org.jboss.threads.EnhancedQueueExecutor: boolean doStartThread(org.jboss.threads.EnhancedQueueExecutor$Task)>(null);
if v13 != 0 goto label13;
v14 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v14.<org.jboss.threads.EnhancedQueueExecutor: void deallocateThread()>();
label13:
v15 = <org.jboss.threads.EnhancedQueueExecutor: boolean UPDATE_STATISTICS>;
if v15 == 0 goto label14;
v16 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v17 = v16.<org.jboss.threads.EnhancedQueueExecutor: java.util.concurrent.atomic.LongAdder submittedTaskCounter>;
virtualinvoke v17.<java.util.concurrent.atomic.LongAdder: void increment()>();
label14:
return;
label15:
if v6 != 3 goto label19;
label16:
v18 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v19 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask>;
v20 = virtualinvoke v18.<org.jboss.threads.EnhancedQueueExecutor: boolean doStartThread(org.jboss.threads.EnhancedQueueExecutor$Task)>(v19);
label17:
if v20 != 0 goto label26;
v21 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v21.<org.jboss.threads.EnhancedQueueExecutor: void deallocateThread()>();
goto label26;
label18:
v22 := @caughtexception;
v23 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
virtualinvoke v23.<org.jboss.threads.EnhancedQueueExecutor: void deallocateThread()>();
throw v22;
label19:
v24 = <org.jboss.threads.EnhancedQueueExecutor: boolean UPDATE_STATISTICS>;
if v24 == 0 goto label20;
v25 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v26 = v25.<org.jboss.threads.EnhancedQueueExecutor: java.util.concurrent.atomic.LongAdder rejectedTaskCounter>;
virtualinvoke v26.<java.util.concurrent.atomic.LongAdder: void increment()>();
label20:
if v6 != 2 goto label21;
v27 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v28 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask>;
virtualinvoke v27.<org.jboss.threads.EnhancedQueueExecutor: void rejectShutdown(org.jboss.threads.EnhancedQueueExecutor$Task)>(v28);
goto label26;
label21:
v29 = <org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: boolean $assertionsDisabled>;
if v29 != 0 goto label22;
if v6 == 1 goto label22;
v30 = new java.lang.AssertionError;
specialinvoke v30.<java.lang.AssertionError: void <init>()>();
throw v30;
label22:
v31 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor this$0>;
v32 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: org.jboss.threads.EnhancedQueueExecutor$Task wrappingTask>;
virtualinvoke v31.<org.jboss.threads.EnhancedQueueExecutor: void rejectQueueFull(org.jboss.threads.EnhancedQueueExecutor$Task)>(v32);
label23:
goto label26;
label24:
v33 := @caughtexception;
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void reject(java.util.concurrent.RejectedExecutionException)>(v33);
goto label26;
label25:
v34 := @caughtexception;
v35 = new java.util.concurrent.RejectedExecutionException;
specialinvoke v35.<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String,java.lang.Throwable)>("Task submission failed", v34);
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void reject(java.util.concurrent.RejectedExecutionException)>(v35);
label26:
return;
catch java.lang.Throwable from label01 to label04 with label11;
catch java.lang.Throwable from label05 to label06 with label11;
catch java.lang.Throwable from label07 to label08 with label11;
catch java.lang.Throwable from label09 to label10 with label11;
catch java.lang.Throwable from label16 to label17 with label18;
catch java.util.concurrent.RejectedExecutionException from label12 to label14 with label24;
catch java.util.concurrent.RejectedExecutionException from label15 to label23 with label24;
catch java.lang.Throwable from label12 to label14 with label25;
catch java.lang.Throwable from label15 to label23 with label25;
}
java.lang.IllegalStateException badState()
{
java.lang.IllegalStateException v1;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 = new java.lang.IllegalStateException;
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Task was not in expected state");
return v1;
}
void reject(java.util.concurrent.RejectedExecutionException)
{
java.lang.Throwable v4;
java.lang.IllegalStateException v3;
java.util.concurrent.RejectedExecutionException v1;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
int v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: java.util.concurrent.RejectedExecutionException;
entermonitor v0;
label1:
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
lookupswitch(v2)
{
case 2: goto label2;
default: goto label4;
};
label2:
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result> = v1;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 6;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Thread liveThread> = null;
virtualinvoke v0.<java.lang.Object: void notifyAll()>();
exitmonitor v0;
label3:
return;
label4:
v3 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.IllegalStateException badState()>();
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void fail(java.lang.Throwable)>(v3);
exitmonitor v0;
label5:
return;
label6:
v4 := @caughtexception;
exitmonitor v0;
throw v4;
catch java.lang.Throwable from label1 to label3 with label6;
catch java.lang.Throwable from label4 to label5 with label6;
}
void fail(java.lang.Throwable)
{
java.lang.Throwable v1, v3;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
int v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: java.lang.Throwable;
entermonitor v0;
label1:
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
tableswitch(v2)
{
case 0: goto label2;
case 1: goto label4;
case 2: goto label2;
case 3: goto label2;
case 4: goto label4;
case 5: goto label4;
case 6: goto label4;
default: goto label6;
};
label2:
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result> = v1;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 5;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Thread liveThread> = null;
virtualinvoke v0.<java.lang.Object: void notifyAll()>();
exitmonitor v0;
label3:
return;
label4:
exitmonitor v0;
label5:
return;
label6:
exitmonitor v0;
label7:
goto label9;
label8:
v3 := @caughtexception;
exitmonitor v0;
throw v3;
label9:
return;
catch java.lang.Throwable from label1 to label3 with label8;
catch java.lang.Throwable from label4 to label5 with label8;
catch java.lang.Throwable from label6 to label7 with label8;
}
void finish(java.lang.Object)
{
java.lang.Throwable v4;
java.lang.IllegalStateException v3;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
int v2;
java.lang.Object v1;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: java.lang.Object;
entermonitor v0;
label1:
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state>;
lookupswitch(v2)
{
case 3: goto label2;
default: goto label4;
};
label2:
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Object result> = v1;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int state> = 4;
v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.Thread liveThread> = null;
virtualinvoke v0.<java.lang.Object: void notifyAll()>();
exitmonitor v0;
label3:
return;
label4:
v3 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.IllegalStateException badState()>();
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: void fail(java.lang.Throwable)>(v3);
exitmonitor v0;
label5:
return;
label6:
v4 := @caughtexception;
exitmonitor v0;
throw v4;
catch java.lang.Throwable from label1 to label3 with label6;
catch java.lang.Throwable from label4 to label5 with label6;
}
abstract java.lang.Object performTask() throws java.lang.Exception;
public java.lang.String toString()
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
java.lang.StringBuilder v1, v2;
java.lang.String v3;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: java.lang.StringBuilder toString(java.lang.StringBuilder)>(v1);
v3 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v3;
}
java.lang.StringBuilder toString(java.lang.StringBuilder)
{
java.lang.StringBuilder v1, v2;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v1 := @parameter0: java.lang.StringBuilder;
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("future result of ");
return v2;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/jboss/threads/EnhancedQueueExecutor;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: boolean $assertionsDisabled> = v2;
return;
}
}