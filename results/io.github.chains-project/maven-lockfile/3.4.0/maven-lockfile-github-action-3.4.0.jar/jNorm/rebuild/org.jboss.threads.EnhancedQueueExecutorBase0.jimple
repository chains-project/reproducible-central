abstract class org.jboss.threads.EnhancedQueueExecutorBase0 extends java.util.concurrent.AbstractExecutorService
{
int p00;
int p01;
int p02;
int p03;
int p04;
int p05;
int p06;
int p07;
int p08;
int p09;
int p0A;
int p0B;
int p0C;
int p0D;
int p0E;
int p0F;
void <init>()
{
org.jboss.threads.EnhancedQueueExecutorBase0 v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutorBase0;
specialinvoke v0.<java.util.concurrent.AbstractExecutorService: void <init>()>();
return;
}
static int readIntPropertyPrefixed(java.lang.String, int)
{
int v1, v4;
java.lang.NumberFormatException v5;
java.lang.String v0, v2, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
label1:
v2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v1);
v3 = staticinvoke <org.jboss.threads.EnhancedQueueExecutorBase0: java.lang.String readPropertyPrefixed(java.lang.String,java.lang.String)>(v0, v2);
v4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return v1;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
static boolean readBooleanPropertyPrefixed(java.lang.String, boolean)
{
java.lang.String v0, v2, v3;
boolean v1, v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.String toString(boolean)>(v1);
v3 = staticinvoke <org.jboss.threads.EnhancedQueueExecutorBase0: java.lang.String readPropertyPrefixed(java.lang.String,java.lang.String)>(v0, v2);
v4 = staticinvoke <java.lang.Boolean: boolean parseBoolean(java.lang.String)>(v3);
return v4;
}
static java.lang.String readPropertyPrefixed(java.lang.String, java.lang.String)
{
java.lang.String v0, v1, v2, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("jboss.threads.eqe.\u0001");
v3 = staticinvoke <org.jboss.threads.EnhancedQueueExecutorBase0: java.lang.String readProperty(java.lang.String,java.lang.String)>(v2, v1);
return v3;
}
static java.lang.String readProperty(java.lang.String, java.lang.String)
{
java.lang.Object v4;
java.lang.String v0, v1, v5;
org.jboss.threads.EnhancedQueueExecutorBase0$1 v3;
java.lang.SecurityManager v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.jboss.threads.EnhancedQueueExecutorBase0$1;
specialinvoke v3.<org.jboss.threads.EnhancedQueueExecutorBase0$1: void <init>(java.lang.String,java.lang.String)>(v0, v1);
v4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
return v4;
label1:
v5 = staticinvoke <org.jboss.threads.EnhancedQueueExecutorBase0: java.lang.String readPropertyRaw(java.lang.String,java.lang.String)>(v0, v1);
return v5;
}
static java.lang.String readPropertyRaw(java.lang.String, java.lang.String)
{
java.lang.String v0, v1, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>(v0, v1);
return v2;
}
}