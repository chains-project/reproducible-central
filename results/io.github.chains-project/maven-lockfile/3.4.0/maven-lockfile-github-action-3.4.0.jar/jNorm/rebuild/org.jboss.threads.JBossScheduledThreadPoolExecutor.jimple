public final class org.jboss.threads.JBossScheduledThreadPoolExecutor extends java.util.concurrent.ScheduledThreadPoolExecutor
{
private final java.util.concurrent.atomic.AtomicInteger rejectCount;
private final java.lang.Runnable terminationTask;
public void <init>(int, java.lang.Runnable)
{
java.util.concurrent.RejectedExecutionHandler v4;
java.util.concurrent.atomic.AtomicInteger v3;
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.lang.Runnable v2;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Runnable;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(v1);
v3 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v3.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.atomic.AtomicInteger rejectCount> = v3;
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.lang.Runnable terminationTask> = v2;
v4 = specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()>();
virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>(v4);
return;
}
public void <init>(int, java.util.concurrent.ThreadFactory, java.lang.Runnable)
{
java.util.concurrent.RejectedExecutionHandler v5;
java.util.concurrent.atomic.AtomicInteger v4;
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.util.concurrent.ThreadFactory v2;
java.lang.Runnable v3;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
v3 := @parameter2: java.lang.Runnable;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>(v1, v2);
v4 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v4.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.atomic.AtomicInteger rejectCount> = v4;
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.lang.Runnable terminationTask> = v3;
v5 = specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()>();
virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>(v5);
return;
}
public void <init>(int, java.util.concurrent.RejectedExecutionHandler, java.lang.Runnable)
{
java.util.concurrent.RejectedExecutionHandler v2;
java.util.concurrent.atomic.AtomicInteger v4;
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.lang.Runnable v3;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.RejectedExecutionHandler;
v3 := @parameter2: java.lang.Runnable;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int)>(v1);
v4 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v4.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.atomic.AtomicInteger rejectCount> = v4;
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.lang.Runnable terminationTask> = v3;
virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>(v2);
return;
}
public void <init>(int, java.util.concurrent.ThreadFactory, java.util.concurrent.RejectedExecutionHandler, java.lang.Runnable)
{
java.util.concurrent.RejectedExecutionHandler v3;
java.util.concurrent.atomic.AtomicInteger v5;
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.util.concurrent.ThreadFactory v2;
java.lang.Runnable v4;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
v3 := @parameter2: java.util.concurrent.RejectedExecutionHandler;
v4 := @parameter3: java.lang.Runnable;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void <init>(int,java.util.concurrent.ThreadFactory)>(v1, v2);
v5 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v5.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.atomic.AtomicInteger rejectCount> = v5;
v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.lang.Runnable terminationTask> = v4;
virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>(v3);
return;
}
public long getKeepAliveTime()
{
java.util.concurrent.TimeUnit v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
long v2;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v2 = virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: long getKeepAliveTime(java.util.concurrent.TimeUnit)>(v1);
return v2;
}
public void setKeepAliveTime(long)
{
java.util.concurrent.TimeUnit v2;
byte v3;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
long v1;
boolean v4;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: long;
v2 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>(v1, v2);
v3 = v1 cmp 9223372036854775807L;
if v3 >= 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(v4);
return;
}
public void setKeepAliveTime(long, java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v2;
byte v3;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
long v1;
boolean v4;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void setKeepAliveTime(long,java.util.concurrent.TimeUnit)>(v1, v2);
v3 = v1 cmp 9223372036854775807L;
if v3 >= 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void allowCoreThreadTimeOut(boolean)>(v4);
return;
}
public int getRejectedCount()
{
int v2;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.util.concurrent.atomic.AtomicInteger v1;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.atomic.AtomicInteger rejectCount>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicInteger: int get()>();
return v2;
}
public int getCurrentThreadCount()
{
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: int getActiveCount()>();
return v1;
}
public int getLargestThreadCount()
{
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: int getLargestPoolSize()>();
return v1;
}
public int getMaxThreads()
{
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: int getCorePoolSize()>();
return v1;
}
public void setMaxThreads(int)
{
int v1;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: int;
virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: void setCorePoolSize(int)>(v1);
return;
}
public java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()
{
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.util.concurrent.RejectedExecutionHandler v1, v2;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: java.util.concurrent.RejectedExecutionHandler getRejectedExecutionHandler()>();
v2 = virtualinvoke v1.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: java.util.concurrent.RejectedExecutionHandler getDelegate()>();
return v2;
}
public void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)
{
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler v2;
java.util.concurrent.RejectedExecutionHandler v1;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 := @parameter0: java.util.concurrent.RejectedExecutionHandler;
v2 = new org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler;
specialinvoke v2.<org.jboss.threads.JBossScheduledThreadPoolExecutor$CountingRejectHandler: void <init>(org.jboss.threads.JBossScheduledThreadPoolExecutor,java.util.concurrent.RejectedExecutionHandler)>(v0, v1);
specialinvoke v0.<java.util.concurrent.ScheduledThreadPoolExecutor: void setRejectedExecutionHandler(java.util.concurrent.RejectedExecutionHandler)>(v2);
return;
}
public int getQueueSize()
{
int v2;
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.util.concurrent.BlockingQueue v1;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = virtualinvoke v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.util.concurrent.BlockingQueue getQueue()>();
v2 = interfaceinvoke v1.<java.util.concurrent.BlockingQueue: int size()>();
return v2;
}
protected void terminated()
{
org.jboss.threads.JBossScheduledThreadPoolExecutor v0;
java.lang.Runnable v1;
v0 := @this: org.jboss.threads.JBossScheduledThreadPoolExecutor;
v1 = v0.<org.jboss.threads.JBossScheduledThreadPoolExecutor: java.lang.Runnable terminationTask>;
interfaceinvoke v1.<java.lang.Runnable: void run()>();
return;
}
}