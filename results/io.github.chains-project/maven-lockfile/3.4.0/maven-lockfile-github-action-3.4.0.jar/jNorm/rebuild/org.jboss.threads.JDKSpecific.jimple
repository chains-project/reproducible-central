final class org.jboss.threads.JDKSpecific extends java.lang.Object
{
void <init>()
{
org.jboss.threads.JDKSpecific v0;
v0 := @this: org.jboss.threads.JDKSpecific;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.time.temporal.TemporalUnit timeToTemporal(java.util.concurrent.TimeUnit)
{
java.lang.IllegalStateException v11;
java.util.concurrent.TimeUnit v0;
java.time.temporal.ChronoUnit v10, v4, v5, v6, v7, v8, v9;
int[] v1;
int v2, v3;
v0 := @parameter0: java.util.concurrent.TimeUnit;
v1 = <org.jboss.threads.JDKSpecific$1: int[] $SwitchMap$java$util$concurrent$TimeUnit>;
v2 = virtualinvoke v0.<java.util.concurrent.TimeUnit: int ordinal()>();
v3 = v1[v2];
tableswitch(v3)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label4;
case 5: goto label5;
case 6: goto label6;
case 7: goto label7;
default: goto label8;
};
label1:
v4 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit NANOS>;
return v4;
label2:
v5 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit MICROS>;
return v5;
label3:
v6 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit MILLIS>;
return v6;
label4:
v7 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit SECONDS>;
return v7;
label5:
v8 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit MINUTES>;
return v8;
label6:
v9 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit HOURS>;
return v9;
label7:
v10 = <java.time.temporal.ChronoUnit: java.time.temporal.ChronoUnit DAYS>;
return v10;
label8:
v11 = staticinvoke <org.wildfly.common.Assert: java.lang.IllegalStateException impossibleSwitchCase(java.lang.Object)>(v0);
throw v11;
}
static void onSpinWait()
{
return;
}
}