public final class org.kohsuke.github.GHCheckRunBuilder extends java.lang.Object
{
protected final org.kohsuke.github.GHRepository repo;
protected final org.kohsuke.github.Requester requester;
private org.kohsuke.github.GHCheckRunBuilder$Output output;
private java.util.List actions;
private static final int MAX_ANNOTATIONS;
private void <init>(org.kohsuke.github.GHRepository, org.kohsuke.github.Requester)
{
org.kohsuke.github.GHCheckRunBuilder v0;
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 := @parameter1: org.kohsuke.github.Requester;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHRepository repo> = v1;
v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester> = v2;
return;
}
void <init>(org.kohsuke.github.GHRepository, java.lang.String, java.lang.String)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.internal.Previews v6;
java.lang.String[] v12;
org.kohsuke.github.GitHubRequest$Builder v10, v13, v7, v8, v9;
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v11, v2, v3;
org.kohsuke.github.Requester v5;
org.kohsuke.github.GitHub v4;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews ANTIOPE>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("name", v2);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("head_sha", v3);
v11 = virtualinvoke v1.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>("check-runs");
v12 = newarray (java.lang.String)[0];
v13 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v11, v12);
specialinvoke v0.<org.kohsuke.github.GHCheckRunBuilder: void <init>(org.kohsuke.github.GHRepository,org.kohsuke.github.Requester)>(v1, v13);
return;
}
void <init>(org.kohsuke.github.GHRepository, long)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.internal.Previews v5;
java.lang.String[] v10;
long v2;
org.kohsuke.github.GitHubRequest$Builder v11, v6, v7;
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v8, v9;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 := @parameter1: long;
v3 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews ANTIOPE>;
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("check-runs/\u0001");
v9 = virtualinvoke v1.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v8);
v10 = newarray (java.lang.String)[0];
v11 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v9, v10);
specialinvoke v0.<org.kohsuke.github.GHCheckRunBuilder: void <init>(org.kohsuke.github.GHRepository,org.kohsuke.github.Requester)>(v1, v11);
return;
}
public org.kohsuke.github.GHCheckRunBuilder withDetailsURL(java.lang.String)
{
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v1;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("details_url", v1);
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder withExternalID(java.lang.String)
{
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v1;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("external_id", v1);
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder withStatus(org.kohsuke.github.GHCheckRun$Status)
{
java.util.Locale v4;
org.kohsuke.github.GHCheckRun$Status v1;
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v3, v5;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHCheckRun$Status;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
v3 = virtualinvoke v1.<org.kohsuke.github.GHCheckRun$Status: java.lang.String toString()>();
v4 = <java.util.Locale: java.util.Locale ROOT>;
v5 = virtualinvoke v3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v4);
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("status", v5);
label1:
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder withConclusion(org.kohsuke.github.GHCheckRun$Conclusion)
{
java.util.Locale v4;
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v3, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GHCheckRun$Conclusion v1;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHCheckRun$Conclusion;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
v3 = virtualinvoke v1.<org.kohsuke.github.GHCheckRun$Conclusion: java.lang.String toString()>();
v4 = <java.util.Locale: java.util.Locale ROOT>;
v5 = virtualinvoke v3.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v4);
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("conclusion", v5);
label1:
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder withStartedAt(java.util.Date)
{
java.util.Date v1;
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v3;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: java.util.Date;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
v3 = staticinvoke <org.kohsuke.github.GitHubClient: java.lang.String printDate(java.util.Date)>(v1);
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("started_at", v3);
label1:
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder withCompletedAt(java.util.Date)
{
java.util.Date v1;
org.kohsuke.github.GHCheckRunBuilder v0;
java.lang.String v3;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: java.util.Date;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
v3 = staticinvoke <org.kohsuke.github.GitHubClient: java.lang.String printDate(java.util.Date)>(v1);
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("completed_at", v3);
label1:
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder add(org.kohsuke.github.GHCheckRunBuilder$Output)
{
org.kohsuke.github.GHCheckRunBuilder$Output v1, v2;
java.lang.IllegalStateException v3;
org.kohsuke.github.GHCheckRunBuilder v0;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHCheckRunBuilder$Output;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
if v2 == null goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>("cannot add Output twice");
throw v3;
label1:
v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output> = v1;
return v0;
}
public org.kohsuke.github.GHCheckRunBuilder add(org.kohsuke.github.GHCheckRunBuilder$Action)
{
java.util.List v2, v4;
org.kohsuke.github.GHCheckRunBuilder$Action v1;
org.kohsuke.github.GHCheckRunBuilder v0;
java.util.LinkedList v3;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 := @parameter0: org.kohsuke.github.GHCheckRunBuilder$Action;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: java.util.List actions>;
if v2 != null goto label1;
v3 = new java.util.LinkedList;
specialinvoke v3.<java.util.LinkedList: void <init>()>();
v0.<org.kohsuke.github.GHCheckRunBuilder: java.util.List actions> = v3;
label1:
v4 = v0.<org.kohsuke.github.GHCheckRunBuilder: java.util.List actions>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public org.kohsuke.github.GHCheckRun create() throws java.io.IOException
{
org.kohsuke.github.GHRepository v23, v38, v45, v52;
org.kohsuke.github.GitHub v39;
boolean v25;
org.kohsuke.github.GHCheckRun v24;
org.kohsuke.github.internal.Previews v41;
java.util.List v10, v12, v15, v16, v20, v3, v36, v5, v8;
org.kohsuke.github.GHCheckRunBuilder v0;
org.kohsuke.github.Requester v17, v40;
org.kohsuke.github.GHCheckRunBuilder$Output v1, v13, v14, v18, v2, v26, v27, v29, v31, v33, v4, v7, v9;
java.lang.String[] v49;
long v46;
org.kohsuke.github.GitHubRequest$Builder v19, v21, v42, v43, v44, v50;
int v11, v34, v35, v37, v6;
java.lang.String v28, v30, v32, v47, v48;
java.lang.Object v22, v51;
v0 := @this: org.kohsuke.github.GHCheckRunBuilder;
v1 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v3 = v2.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations>;
if v3 == null goto label1;
v4 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v5 = v4.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
if v6 <= 50 goto label1;
v7 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v8 = v7.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations>;
v9 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v10 = v9.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations>;
v11 = interfaceinvoke v10.<java.util.List: int size()>();
v12 = interfaceinvoke v8.<java.util.List: java.util.List subList(int,int)>(50, v11);
v13 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v14 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v15 = v14.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations>;
v16 = interfaceinvoke v15.<java.util.List: java.util.List subList(int,int)>(0, 50);
v13.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations> = v16;
goto label2;
label1:
v12 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
label2:
v17 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.Requester requester>;
v18 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v19 = virtualinvoke v17.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>("output", v18);
v20 = v0.<org.kohsuke.github.GHCheckRunBuilder: java.util.List actions>;
v21 = virtualinvoke v19.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("actions", v20);
v22 = virtualinvoke v21.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHCheckRun;");
v23 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHRepository repo>;
v24 = virtualinvoke v22.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckRun wrap(org.kohsuke.github.GHRepository)>(v23);
label3:
v25 = interfaceinvoke v12.<java.util.List: boolean isEmpty()>();
if v25 != 0 goto label4;
v26 = new org.kohsuke.github.GHCheckRunBuilder$Output;
v27 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v28 = v27.<org.kohsuke.github.GHCheckRunBuilder$Output: java.lang.String title>;
v29 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v30 = v29.<org.kohsuke.github.GHCheckRunBuilder$Output: java.lang.String summary>;
specialinvoke v26.<org.kohsuke.github.GHCheckRunBuilder$Output: void <init>(java.lang.String,java.lang.String)>(v28, v30);
v31 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHCheckRunBuilder$Output output>;
v32 = v31.<org.kohsuke.github.GHCheckRunBuilder$Output: java.lang.String text>;
v33 = virtualinvoke v26.<org.kohsuke.github.GHCheckRunBuilder$Output: org.kohsuke.github.GHCheckRunBuilder$Output withText(java.lang.String)>(v32);
v34 = interfaceinvoke v12.<java.util.List: int size()>();
v35 = staticinvoke <java.lang.Math: int min(int,int)>(v34, 50);
v36 = interfaceinvoke v12.<java.util.List: java.util.List subList(int,int)>(0, v35);
v33.<org.kohsuke.github.GHCheckRunBuilder$Output: java.util.List annotations> = v36;
v37 = interfaceinvoke v12.<java.util.List: int size()>();
v12 = interfaceinvoke v12.<java.util.List: java.util.List subList(int,int)>(v35, v37);
v38 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHRepository repo>;
v39 = virtualinvoke v38.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v40 = virtualinvoke v39.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v41 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews ANTIOPE>;
v42 = virtualinvoke v40.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v41);
v43 = virtualinvoke v42.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v44 = virtualinvoke v43.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>("output", v33);
v45 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHRepository repo>;
v46 = virtualinvoke v24.<org.kohsuke.github.GHCheckRun: long getId()>();
v47 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v46) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("check-runs/\u0001");
v48 = virtualinvoke v45.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v47);
v49 = newarray (java.lang.String)[0];
v50 = virtualinvoke v44.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v48, v49);
v51 = virtualinvoke v50.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHCheckRun;");
v52 = v0.<org.kohsuke.github.GHCheckRunBuilder: org.kohsuke.github.GHRepository repo>;
v24 = virtualinvoke v51.<org.kohsuke.github.GHCheckRun: org.kohsuke.github.GHCheckRun wrap(org.kohsuke.github.GHRepository)>(v52);
goto label3;
label4:
return v24;
}
}