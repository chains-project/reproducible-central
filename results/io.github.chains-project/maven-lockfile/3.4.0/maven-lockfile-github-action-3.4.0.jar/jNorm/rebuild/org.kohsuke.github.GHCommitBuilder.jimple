public class org.kohsuke.github.GHCommitBuilder extends java.lang.Object
{
private final org.kohsuke.github.GHRepository repo;
private final org.kohsuke.github.Requester req;
private final java.util.List parents;
void <init>(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GHCommitBuilder v0;
org.kohsuke.github.GitHub v3;
java.util.ArrayList v2;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHCommitBuilder: java.util.List parents> = v2;
v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.GHRepository repo> = v1;
v3 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req> = v5;
return;
}
public org.kohsuke.github.GHCommitBuilder message(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GHCommitBuilder v0;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("message", v1);
return v0;
}
public org.kohsuke.github.GHCommitBuilder tree(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GHCommitBuilder v0;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("tree", v1);
return v0;
}
public org.kohsuke.github.GHCommitBuilder parent(java.lang.String)
{
java.util.List v2;
java.lang.String v1;
org.kohsuke.github.GHCommitBuilder v0;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHCommitBuilder: java.util.List parents>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public org.kohsuke.github.GHCommitBuilder author(java.lang.String, java.lang.String, java.util.Date)
{
java.util.Date v3;
java.lang.String v1, v2;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GHCommitBuilder v0;
org.kohsuke.github.GHCommitBuilder$UserInfo v5;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Date;
v4 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
v5 = new org.kohsuke.github.GHCommitBuilder$UserInfo;
specialinvoke v5.<org.kohsuke.github.GHCommitBuilder$UserInfo: void <init>(java.lang.String,java.lang.String,java.util.Date)>(v1, v2, v3);
virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>("author", v5);
return v0;
}
public org.kohsuke.github.GHCommitBuilder withSignature(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GHCommitBuilder v0;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("signature", v1);
return v0;
}
public org.kohsuke.github.GHCommitBuilder committer(java.lang.String, java.lang.String, java.util.Date)
{
java.util.Date v3;
java.lang.String v1, v2;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GHCommitBuilder v0;
org.kohsuke.github.GHCommitBuilder$UserInfo v5;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.Date;
v4 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
v5 = new org.kohsuke.github.GHCommitBuilder$UserInfo;
specialinvoke v5.<org.kohsuke.github.GHCommitBuilder$UserInfo: void <init>(java.lang.String,java.lang.String,java.util.Date)>(v1, v2, v3);
virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>("committer", v5);
return v0;
}
private java.lang.String getApiTail()
{
org.kohsuke.github.GHRepository v2, v4;
java.lang.Object[] v1;
java.lang.String v3, v5, v6;
org.kohsuke.github.GHCommitBuilder v0;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.GHRepository repo>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHRepository: java.lang.String getOwnerName()>();
v1[0] = v3;
v4 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.GHRepository repo>;
v5 = virtualinvoke v4.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v1[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/repos/%s/%s/git/commits", v1);
return v6;
}
public org.kohsuke.github.GHCommit create() throws java.io.IOException
{
org.kohsuke.github.GHRepository v9;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
java.util.List v2;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.Requester v1, v3;
org.kohsuke.github.GHCommitBuilder v0;
org.kohsuke.github.GHCommit v10;
v0 := @this: org.kohsuke.github.GHCommitBuilder;
v1 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
v2 = v0.<org.kohsuke.github.GHCommitBuilder: java.util.List parents>;
virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("parents", v2);
v3 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.Requester req>;
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v5 = specialinvoke v0.<org.kohsuke.github.GHCommitBuilder: java.lang.String getApiTail()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHCommit;");
v9 = v0.<org.kohsuke.github.GHCommitBuilder: org.kohsuke.github.GHRepository repo>;
v10 = virtualinvoke v8.<org.kohsuke.github.GHCommit: org.kohsuke.github.GHCommit wrapUp(org.kohsuke.github.GHRepository)>(v9);
return v10;
}
}