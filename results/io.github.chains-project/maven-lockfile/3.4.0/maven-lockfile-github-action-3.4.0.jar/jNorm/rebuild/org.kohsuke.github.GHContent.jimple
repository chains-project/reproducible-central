public class org.kohsuke.github.GHContent extends org.kohsuke.github.GitHubInteractiveObject implements org.kohsuke.github.Refreshable
{
private org.kohsuke.github.GHRepository repository;
private java.lang.String type;
private java.lang.String encoding;
private long size;
private java.lang.String sha;
private java.lang.String name;
private java.lang.String path;
private java.lang.String target;
private java.lang.String content;
private java.lang.String url;
private java.lang.String git_url;
private java.lang.String html_url;
private java.lang.String download_url;
public void <init>()
{
org.kohsuke.github.GHContent v0;
v0 := @this: org.kohsuke.github.GHContent;
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>()>();
return;
}
public org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHContent v0;
org.kohsuke.github.GHRepository v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository>;
return v1;
}
public java.lang.String getType()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String type>;
return v1;
}
public java.lang.String getEncoding()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String encoding>;
return v1;
}
public long getSize()
{
org.kohsuke.github.GHContent v0;
long v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: long size>;
return v1;
}
public java.lang.String getSha()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String sha>;
return v1;
}
public java.lang.String getName()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String name>;
return v1;
}
public java.lang.String getPath()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String path>;
return v1;
}
public java.lang.String getTarget()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String target>;
return v1;
}
public java.lang.String getContent() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
byte[] v4;
java.util.Base64$Decoder v2;
java.lang.String v1, v3;
v0 := @this: org.kohsuke.github.GHContent;
v1 = new java.lang.String;
v2 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getMimeDecoder()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHContent: java.lang.String getEncodedContent()>();
v4 = virtualinvoke v2.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v3);
specialinvoke v1.<java.lang.String: void <init>(byte[])>(v4);
return v1;
}
public java.lang.String getEncodedContent() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
java.lang.String v1, v2;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String content>;
virtualinvoke v0.<org.kohsuke.github.GHContent: void refresh(java.lang.Object)>(v1);
v2 = v0.<org.kohsuke.github.GHContent: java.lang.String content>;
return v2;
}
public java.lang.String getUrl()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String url>;
return v1;
}
public java.lang.String getGitUrl()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String git_url>;
return v1;
}
public java.lang.String getHtmlUrl()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String html_url>;
return v1;
}
public java.io.InputStream read() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
byte[] v8, v9;
java.lang.UnsupportedOperationException v12;
java.util.Base64$Decoder v4;
java.lang.AssertionError v11;
java.lang.IllegalArgumentException v10;
java.io.ByteArrayInputStream v5;
java.nio.charset.Charset v7;
java.lang.String v1, v13, v14, v2, v6;
boolean v3;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String content>;
virtualinvoke v0.<org.kohsuke.github.GHContent: void refresh(java.lang.Object)>(v1);
v2 = v0.<org.kohsuke.github.GHContent: java.lang.String encoding>;
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>("base64");
if v3 == 0 goto label4;
label1:
v4 = staticinvoke <java.util.Base64: java.util.Base64$Decoder getMimeDecoder()>();
v5 = new java.io.ByteArrayInputStream;
v6 = v0.<org.kohsuke.github.GHContent: java.lang.String content>;
v7 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset US_ASCII>;
v8 = virtualinvoke v6.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v7);
v9 = virtualinvoke v4.<java.util.Base64$Decoder: byte[] decode(byte[])>(v8);
specialinvoke v5.<java.io.ByteArrayInputStream: void <init>(byte[])>(v9);
label2:
return v5;
label3:
v10 := @caughtexception;
v11 = new java.lang.AssertionError;
specialinvoke v11.<java.lang.AssertionError: void <init>(java.lang.Object)>(v10);
throw v11;
label4:
v12 = new java.lang.UnsupportedOperationException;
v13 = v0.<org.kohsuke.github.GHContent: java.lang.String encoding>;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unrecognized encoding: \u0001");
specialinvoke v12.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v14);
throw v12;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
public java.lang.String getDownloadUrl() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
java.lang.String v1, v2;
v0 := @this: org.kohsuke.github.GHContent;
v1 = v0.<org.kohsuke.github.GHContent: java.lang.String download_url>;
virtualinvoke v0.<org.kohsuke.github.GHContent: void refresh(java.lang.Object)>(v1);
v2 = v0.<org.kohsuke.github.GHContent: java.lang.String download_url>;
return v2;
}
public boolean isFile()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1, v2;
boolean v3;
v0 := @this: org.kohsuke.github.GHContent;
v1 = "file";
v2 = v0.<org.kohsuke.github.GHContent: java.lang.String type>;
v3 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v2);
return v3;
}
public boolean isDirectory()
{
org.kohsuke.github.GHContent v0;
java.lang.String v1, v2;
boolean v3;
v0 := @this: org.kohsuke.github.GHContent;
v1 = "dir";
v2 = v0.<org.kohsuke.github.GHContent: java.lang.String type>;
v3 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v2);
return v3;
}
protected synchronized void populate() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
java.lang.String[] v4;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = v0.<org.kohsuke.github.GHContent: java.lang.String url>;
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetchInto(java.lang.Object)>(v0);
return;
}
public org.kohsuke.github.PagedIterable listDirectoryContent() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
java.lang.IllegalStateException v2;
org.kohsuke.github.GitHubRequest$Builder v8;
java.util.function.Consumer v9;
java.lang.String v3, v4, v7;
org.kohsuke.github.Requester v6;
org.kohsuke.github.PagedIterable v10;
org.kohsuke.github.GitHub v5;
boolean v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = virtualinvoke v0.<org.kohsuke.github.GHContent: boolean isDirectory()>();
if v1 != 0 goto label1;
v2 = new java.lang.IllegalStateException;
v3 = v0.<org.kohsuke.github.GHContent: java.lang.String path>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 is not a directory");
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v4);
throw v2;
label1:
v5 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GitHub root()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v7 = v0.<org.kohsuke.github.GHContent: java.lang.String url>;
v8 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setRawUrlPath(java.lang.String)>(v7);
v9 = staticinvoke <org.kohsuke.github.GHContent$lambda_listDirectoryContent_0__86: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHContent)>(v0);
v10 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHContent;", v9);
return v10;
}
public org.kohsuke.github.GHContentUpdateResponse update(java.lang.String, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
byte[] v3;
org.kohsuke.github.GHContentUpdateResponse v4;
java.lang.String v1, v2;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v1.<java.lang.String: byte[] getBytes()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHContentUpdateResponse update(byte[],java.lang.String,java.lang.String)>(v3, v2, null);
return v4;
}
public org.kohsuke.github.GHContentUpdateResponse update(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
byte[] v4;
org.kohsuke.github.GHContentUpdateResponse v5;
java.lang.String v1, v2, v3;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v1.<java.lang.String: byte[] getBytes()>();
v5 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHContentUpdateResponse update(byte[],java.lang.String,java.lang.String)>(v4, v2, v3);
return v5;
}
public org.kohsuke.github.GHContentUpdateResponse update(byte[], java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
byte[] v1;
org.kohsuke.github.GHContentUpdateResponse v3;
java.lang.String v2;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: byte[];
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHContentUpdateResponse update(byte[],java.lang.String,java.lang.String)>(v1, v2, null);
return v3;
}
public org.kohsuke.github.GHContentUpdateResponse update(byte[], java.lang.String, java.lang.String) throws java.io.IOException
{
byte[] v1;
org.kohsuke.github.GHRepository v16, v23, v25;
org.kohsuke.github.GitCommit v24;
java.lang.String[] v19;
org.kohsuke.github.GitHubRequest$Builder v10, v11, v13, v14, v15, v20, v8;
java.lang.String v12, v17, v18, v2, v3, v5, v9;
org.kohsuke.github.GitHub v6;
org.kohsuke.github.GHContent v0, v22;
java.util.Base64$Encoder v4;
java.lang.Object v21;
org.kohsuke.github.Requester v7;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: byte[];
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getEncoder()>();
v5 = virtualinvoke v4.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v1);
v6 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GitHub root()>();
v7 = virtualinvoke v6.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v9 = v0.<org.kohsuke.github.GHContent: java.lang.String path>;
v10 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("path", v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("message", v2);
v12 = v0.<org.kohsuke.github.GHContent: java.lang.String sha>;
v13 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("sha", v12);
v14 = virtualinvoke v13.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("content", v5);
v15 = virtualinvoke v14.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
if v3 == null goto label1;
virtualinvoke v15.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("branch", v3);
label1:
v16 = v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository>;
v17 = v0.<org.kohsuke.github.GHContent: java.lang.String path>;
v18 = staticinvoke <org.kohsuke.github.GHContent: java.lang.String getApiRoute(org.kohsuke.github.GHRepository,java.lang.String)>(v16, v17);
v19 = newarray (java.lang.String)[0];
v20 = virtualinvoke v15.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v18, v19);
v21 = virtualinvoke v20.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHContentUpdateResponse;");
v22 = virtualinvoke v21.<org.kohsuke.github.GHContentUpdateResponse: org.kohsuke.github.GHContent getContent()>();
v23 = v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository>;
virtualinvoke v22.<org.kohsuke.github.GHContent: org.kohsuke.github.GHContent wrap(org.kohsuke.github.GHRepository)>(v23);
v24 = virtualinvoke v21.<org.kohsuke.github.GHContentUpdateResponse: org.kohsuke.github.GitCommit getCommit()>();
v25 = v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository>;
virtualinvoke v24.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit wrapUp(org.kohsuke.github.GHRepository)>(v25);
v0.<org.kohsuke.github.GHContent: java.lang.String content> = v5;
return v21;
}
public org.kohsuke.github.GHContentUpdateResponse delete(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
java.lang.String v1;
org.kohsuke.github.GHContentUpdateResponse v2;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHContentUpdateResponse delete(java.lang.String,java.lang.String)>(v1, null);
return v2;
}
public org.kohsuke.github.GHContentUpdateResponse delete(java.lang.String, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHRepository v12, v19;
org.kohsuke.github.GitCommit v18;
java.lang.String[] v15;
org.kohsuke.github.GitHubRequest$Builder v10, v11, v16, v5, v7, v8;
java.lang.String v1, v13, v14, v2, v6, v9;
org.kohsuke.github.GitHub v3;
org.kohsuke.github.GHContent v0;
java.lang.Object v17;
org.kohsuke.github.Requester v4;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v6 = v0.<org.kohsuke.github.GHContent: java.lang.String path>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("path", v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("message", v1);
v9 = v0.<org.kohsuke.github.GHContent: java.lang.String sha>;
v10 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("sha", v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
if v2 == null goto label1;
virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("branch", v2);
label1:
v12 = v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository>;
v13 = v0.<org.kohsuke.github.GHContent: java.lang.String path>;
v14 = staticinvoke <org.kohsuke.github.GHContent: java.lang.String getApiRoute(org.kohsuke.github.GHRepository,java.lang.String)>(v12, v13);
v15 = newarray (java.lang.String)[0];
v16 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v14, v15);
v17 = virtualinvoke v16.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHContentUpdateResponse;");
v18 = virtualinvoke v17.<org.kohsuke.github.GHContentUpdateResponse: org.kohsuke.github.GitCommit getCommit()>();
v19 = v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository>;
virtualinvoke v18.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit wrapUp(org.kohsuke.github.GHRepository)>(v19);
return v17;
}
static java.lang.String getApiRoute(org.kohsuke.github.GHRepository, java.lang.String)
{
org.kohsuke.github.GHRepository v0;
java.lang.String v1, v2, v3;
v0 := @parameter0: org.kohsuke.github.GHRepository;
v1 := @parameter1: java.lang.String;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("contents/\u0001");
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v2);
return v3;
}
org.kohsuke.github.GHContent wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHContent v0;
org.kohsuke.github.GHRepository v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GHRepository repository> = v1;
return v0;
}
public synchronized void refresh() throws java.io.IOException
{
org.kohsuke.github.GHContent v0;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v4;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHContent;
v1 = virtualinvoke v0.<org.kohsuke.github.GHContent: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = v0.<org.kohsuke.github.GHContent: java.lang.String url>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setRawUrlPath(java.lang.String)>(v3);
virtualinvoke v4.<org.kohsuke.github.Requester: java.lang.Object fetchInto(java.lang.Object)>(v0);
return;
}
}