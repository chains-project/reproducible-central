public final class org.kohsuke.github.GHContentBuilder extends java.lang.Object
{
private final org.kohsuke.github.GHRepository repo;
private final org.kohsuke.github.Requester req;
private java.lang.String path;
void <init>(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHContentBuilder v0;
org.kohsuke.github.GitHubRequest$Builder v4;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.GHRepository repo> = v1;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req> = v4;
return;
}
public org.kohsuke.github.GHContentBuilder path(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.GHContentBuilder v0;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: java.lang.String;
v0.<org.kohsuke.github.GHContentBuilder: java.lang.String path> = v1;
v2 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("path", v1);
return v0;
}
public org.kohsuke.github.GHContentBuilder branch(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.GHContentBuilder v0;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("branch", v1);
return v0;
}
public org.kohsuke.github.GHContentBuilder sha(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.GHContentBuilder v0;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("sha", v1);
return v0;
}
public org.kohsuke.github.GHContentBuilder content(byte[])
{
byte[] v1;
org.kohsuke.github.GHContentBuilder v0;
java.util.Base64$Encoder v3;
java.lang.String v4;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: byte[];
v2 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req>;
v3 = staticinvoke <java.util.Base64: java.util.Base64$Encoder getEncoder()>();
v4 = virtualinvoke v3.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v1);
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("content", v4);
return v0;
}
public org.kohsuke.github.GHContentBuilder content(java.lang.String)
{
byte[] v3;
java.nio.charset.Charset v2;
org.kohsuke.github.GHContentBuilder v0, v4;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: java.lang.String;
v2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v3 = virtualinvoke v1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v2);
v4 = virtualinvoke v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.GHContentBuilder content(byte[])>(v3);
return v4;
}
public org.kohsuke.github.GHContentBuilder message(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.GHContentBuilder v0;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("message", v1);
return v0;
}
public org.kohsuke.github.GHContentUpdateResponse commit() throws java.io.IOException
{
org.kohsuke.github.GHContent v8;
org.kohsuke.github.GHRepository v11, v2, v9;
org.kohsuke.github.GHContentBuilder v0;
org.kohsuke.github.GitCommit v10;
java.lang.String[] v5;
org.kohsuke.github.GitHubRequest$Builder v6;
java.lang.Object v7;
java.lang.String v3, v4;
org.kohsuke.github.Requester v1;
v0 := @this: org.kohsuke.github.GHContentBuilder;
v1 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.Requester req>;
v2 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.GHRepository repo>;
v3 = v0.<org.kohsuke.github.GHContentBuilder: java.lang.String path>;
v4 = staticinvoke <org.kohsuke.github.GHContent: java.lang.String getApiRoute(org.kohsuke.github.GHRepository,java.lang.String)>(v2, v3);
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHContentUpdateResponse;");
v8 = virtualinvoke v7.<org.kohsuke.github.GHContentUpdateResponse: org.kohsuke.github.GHContent getContent()>();
v9 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.GHRepository repo>;
virtualinvoke v8.<org.kohsuke.github.GHContent: org.kohsuke.github.GHContent wrap(org.kohsuke.github.GHRepository)>(v9);
v10 = virtualinvoke v7.<org.kohsuke.github.GHContentUpdateResponse: org.kohsuke.github.GitCommit getCommit()>();
v11 = v0.<org.kohsuke.github.GHContentBuilder: org.kohsuke.github.GHRepository repo>;
virtualinvoke v10.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit wrapUp(org.kohsuke.github.GHRepository)>(v11);
return v7;
}
}