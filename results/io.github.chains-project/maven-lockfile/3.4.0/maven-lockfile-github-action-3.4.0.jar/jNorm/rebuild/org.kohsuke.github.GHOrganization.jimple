public class org.kohsuke.github.GHOrganization extends org.kohsuke.github.GHPerson
{
private boolean has_organization_projects;
public void <init>()
{
org.kohsuke.github.GHOrganization v0;
v0 := @this: org.kohsuke.github.GHOrganization;
specialinvoke v0.<org.kohsuke.github.GHPerson: void <init>()>();
return;
}
public org.kohsuke.github.GHRepository createRepository(java.lang.String, java.lang.String, java.lang.String, java.lang.String, boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepository v10;
java.lang.IllegalArgumentException v8;
org.kohsuke.github.GHOrganization v0;
java.util.Map v6;
java.lang.Object v7;
java.lang.String v1, v2, v3, v4, v9;
boolean v5;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: boolean;
v6 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: java.util.Map getTeams()>();
v7 = interfaceinvoke v6.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
if v7 != null goto label1;
v8 = new java.lang.IllegalArgumentException;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No such team: \u0001");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v8;
label1:
v10 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHRepository createRepository(java.lang.String,java.lang.String,java.lang.String,org.kohsuke.github.GHTeam,boolean)>(v1, v2, v3, v7, v5);
return v10;
}
public org.kohsuke.github.GHRepository createRepository(java.lang.String, java.lang.String, java.lang.String, org.kohsuke.github.GHTeam, boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepository v13;
org.kohsuke.github.GHCreateRepositoryBuilder v12, v7;
java.lang.IllegalArgumentException v6;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHTeam v4;
java.lang.Object v11, v8, v9;
java.lang.String v1, v2, v3;
boolean v10, v5;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: org.kohsuke.github.GHTeam;
v5 := @parameter4: boolean;
if v4 != null goto label1;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Invalid team");
throw v6;
label1:
v7 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHCreateRepositoryBuilder createRepository(java.lang.String)>(v1);
v8 = virtualinvoke v7.<org.kohsuke.github.GHCreateRepositoryBuilder: java.lang.Object description(java.lang.String)>(v2);
v9 = virtualinvoke v8.<org.kohsuke.github.GHCreateRepositoryBuilder: java.lang.Object homepage(java.lang.String)>(v3);
if v5 != 0 goto label2;
v10 = 1;
goto label3;
label2:
v10 = 0;
label3:
v11 = virtualinvoke v9.<org.kohsuke.github.GHCreateRepositoryBuilder: java.lang.Object private_(boolean)>(v10);
v12 = virtualinvoke v11.<org.kohsuke.github.GHCreateRepositoryBuilder: org.kohsuke.github.GHCreateRepositoryBuilder team(org.kohsuke.github.GHTeam)>(v4);
v13 = virtualinvoke v12.<org.kohsuke.github.GHCreateRepositoryBuilder: org.kohsuke.github.GHRepository create()>();
return v13;
}
public org.kohsuke.github.GHCreateRepositoryBuilder createRepository(java.lang.String)
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHCreateRepositoryBuilder v2;
java.lang.String v1, v4, v5;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = new org.kohsuke.github.GHCreateRepositoryBuilder;
v3 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/repos");
specialinvoke v2.<org.kohsuke.github.GHCreateRepositoryBuilder: void <init>(java.lang.String,org.kohsuke.github.GitHub,java.lang.String)>(v1, v3, v5);
return v2;
}
public java.util.Map getTeams() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.util.TreeMap v1;
java.lang.Object v5;
org.kohsuke.github.PagedIterator v3;
java.lang.String v6;
org.kohsuke.github.PagedIterable v2;
boolean v4;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = new java.util.TreeMap;
specialinvoke v1.<java.util.TreeMap: void <init>()>();
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listTeams()>();
v3 = virtualinvoke v2.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GHTeam: java.lang.String getName()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v5);
goto label1;
label2:
return v1;
}
public org.kohsuke.github.PagedIterable listTeams() throws java.io.IOException
{
java.lang.Object[] v3;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.util.function.Consumer v8;
org.kohsuke.github.GHOrganization v0;
java.lang.String v4, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v9;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = newarray (java.lang.Object)[1];
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v3[0] = v4;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s/teams", v3);
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = staticinvoke <org.kohsuke.github.GHOrganization$lambda_listTeams_0__46: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHOrganization)>(v0);
v9 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHTeam;", v8);
return v9;
}
public org.kohsuke.github.GHTeam getTeam(int) throws java.io.IOException
{
int v1;
org.kohsuke.github.GHTeam v2;
org.kohsuke.github.GHOrganization v0;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHTeam getTeam(long)>(v1);
return v2;
}
public org.kohsuke.github.GHTeam getTeam(long) throws java.io.IOException
{
java.lang.Object[] v4;
java.lang.String[] v9;
long v1, v5;
org.kohsuke.github.GitHubRequest$Builder v10;
org.kohsuke.github.GHOrganization v0;
java.lang.Long v6, v7;
org.kohsuke.github.GHTeam v12;
java.lang.Object v11;
java.lang.String v8;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = newarray (java.lang.Object)[2];
v5 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: long getId()>();
v6 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v5);
v4[0] = v6;
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v1);
v4[1] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/organizations/%d/team/%d", v4);
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHTeam;");
v12 = virtualinvoke v11.<org.kohsuke.github.GHTeam: org.kohsuke.github.GHTeam wrapUp(org.kohsuke.github.GHOrganization)>(v0);
return v12;
}
public org.kohsuke.github.GHTeam getTeamByName(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.lang.Object v5;
org.kohsuke.github.PagedIterator v3;
java.lang.String v1, v6;
org.kohsuke.github.PagedIterable v2;
boolean v4, v7;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listTeams()>();
v3 = virtualinvoke v2.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GHTeam: java.lang.String getName()>();
v7 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v7 == 0 goto label1;
return v5;
label2:
return null;
}
public org.kohsuke.github.GHTeam getTeamBySlug(java.lang.String) throws java.io.IOException
{
java.lang.Object[] v4;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v8;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHTeam v10;
java.lang.Object v9;
java.lang.String v1, v5, v6;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = newarray (java.lang.Object)[2];
v5 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v4[0] = v5;
v4[1] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s/teams/%s", v4);
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHTeam;");
v10 = virtualinvoke v9.<org.kohsuke.github.GHTeam: org.kohsuke.github.GHTeam wrapUp(org.kohsuke.github.GHOrganization)>(v0);
return v10;
}
public void add(org.kohsuke.github.GHUser, org.kohsuke.github.GHOrganization$Role) throws java.io.IOException
{
java.lang.String[] v12;
org.kohsuke.github.GitHubRequest$Builder v13, v5, v8;
org.kohsuke.github.GHOrganization$Role v2;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHUser v1;
java.lang.String v10, v11, v6, v7, v9;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 := @parameter1: org.kohsuke.github.GHOrganization$Role;
v3 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v6 = virtualinvoke v2.<org.kohsuke.github.GHOrganization$Role: java.lang.String name()>();
v7 = virtualinvoke v6.<java.lang.String: java.lang.String toLowerCase()>();
v8 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("role", v7);
v9 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v10 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v9, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/memberships/\u0001");
v12 = newarray (java.lang.String)[0];
v13 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v11, v12);
virtualinvoke v13.<org.kohsuke.github.Requester: void send()>();
return;
}
public boolean hasMember(org.kohsuke.github.GHUser)
{
java.io.IOException v9;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v8;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHUser v1;
java.lang.String v4, v5, v6;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHUser;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v5 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/members/\u0001");
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
virtualinvoke v8.<org.kohsuke.github.Requester: void send()>();
label2:
return 1;
label3:
v9 := @caughtexception;
return 0;
catch java.io.IOException from label1 to label2 with label3;
}
public void remove(org.kohsuke.github.GHUser) throws java.io.IOException
{
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v4, v9;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHUser v1;
java.lang.String v5, v6, v7;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v5 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v6 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/members/\u0001");
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public boolean hasPublicMember(org.kohsuke.github.GHUser)
{
java.io.IOException v9;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v8;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHUser v1;
java.lang.String v4, v5, v6;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHUser;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v5 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/public_members/\u0001");
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
virtualinvoke v8.<org.kohsuke.github.Requester: void send()>();
label2:
return 1;
label3:
v9 := @caughtexception;
return 0;
catch java.io.IOException from label1 to label2 with label3;
}
public void publicize(org.kohsuke.github.GHUser) throws java.io.IOException
{
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v4, v9;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHUser v1;
java.lang.String v5, v6, v7;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v5 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v6 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/public_members/\u0001");
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public java.util.List getMembers() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.util.List v2;
org.kohsuke.github.PagedIterable v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers()>();
v2 = virtualinvoke v1.<org.kohsuke.github.PagedIterable: java.util.List toList()>();
return v2;
}
public org.kohsuke.github.PagedIterable listMembers() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.PagedIterable v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String)>("members");
return v1;
}
public org.kohsuke.github.PagedIterable listPublicMembers() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.PagedIterable v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String)>("public_members");
return v1;
}
public org.kohsuke.github.PagedIterable listOutsideCollaborators() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.PagedIterable v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String)>("outside_collaborators");
return v1;
}
private org.kohsuke.github.PagedIterable listMembers(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.lang.String v1;
org.kohsuke.github.PagedIterable v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String,java.lang.String,java.lang.String)>(v1, null, null);
return v2;
}
public org.kohsuke.github.PagedIterable listMembersWithFilter(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.lang.String v1;
org.kohsuke.github.PagedIterable v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String,java.lang.String,java.lang.String)>("members", v1, null);
return v2;
}
public org.kohsuke.github.PagedIterable listOutsideCollaboratorsWithFilter(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.lang.String v1;
org.kohsuke.github.PagedIterable v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String,java.lang.String,java.lang.String)>("outside_collaborators", v1, null);
return v2;
}
public org.kohsuke.github.PagedIterable listMembersWithRole(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.lang.String v1;
org.kohsuke.github.PagedIterable v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listMembers(java.lang.String,java.lang.String,java.lang.String)>("members", null, v1);
return v2;
}
private org.kohsuke.github.PagedIterable listMembers(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.Object[] v6;
java.lang.String[] v9;
org.kohsuke.github.GitHubRequest$Builder v10, v11, v12;
org.kohsuke.github.GHOrganization v0;
java.lang.String v1, v2, v3, v7, v8;
org.kohsuke.github.Requester v5;
org.kohsuke.github.PagedIterable v13;
org.kohsuke.github.GitHub v4;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = newarray (java.lang.Object)[2];
v7 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v6[0] = v7;
v6[1] = v1;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s/%s", v6);
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("filter", v2);
v12 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("role", v3);
v13 = virtualinvoke v12.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHUser;", null);
return v13;
}
public void conceal(org.kohsuke.github.GHUser) throws java.io.IOException
{
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v4, v9;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHUser v1;
java.lang.String v5, v6, v7;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v5 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v6 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/public_members/\u0001");
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
virtualinvoke v9.<org.kohsuke.github.Requester: void send()>();
return;
}
public boolean areOrganizationProjectsEnabled()
{
org.kohsuke.github.GHOrganization v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = v0.<org.kohsuke.github.GHOrganization: boolean has_organization_projects>;
return v1;
}
public void enableOrganizationProjects(boolean) throws java.io.IOException
{
java.lang.Boolean v2;
org.kohsuke.github.GHOrganization v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
specialinvoke v0.<org.kohsuke.github.GHOrganization: void edit(java.lang.String,java.lang.Object)>("has_organization_projects", v2);
return;
}
private void edit(java.lang.String, java.lang.Object) throws java.io.IOException
{
java.lang.Object[] v5;
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v10, v11, v9;
org.kohsuke.github.GHOrganization v0;
java.lang.Object v2;
java.lang.String v1, v6, v7;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = newarray (java.lang.Object)[1];
v6 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v5[0] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s", v5);
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>(v1, v2);
virtualinvoke v11.<org.kohsuke.github.Requester: java.lang.Object fetchInto(java.lang.Object)>(v0);
return;
}
public org.kohsuke.github.PagedIterable listProjects(org.kohsuke.github.GHProject$ProjectStateFilter) throws java.io.IOException
{
java.lang.Object[] v7;
org.kohsuke.github.internal.Previews v4;
java.lang.String[] v10;
org.kohsuke.github.GitHubRequest$Builder v11, v5, v6;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHProject$ProjectStateFilter v1;
java.lang.String v8, v9;
org.kohsuke.github.Requester v3;
org.kohsuke.github.PagedIterable v12;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: org.kohsuke.github.GHProject$ProjectStateFilter;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Enum)>("state", v1);
v7 = newarray (java.lang.Object)[1];
v8 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v7[0] = v8;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s/projects", v7);
v10 = newarray (java.lang.String)[0];
v11 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v9, v10);
v12 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHProject;", null);
return v12;
}
public org.kohsuke.github.PagedIterable listProjects() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHProject$ProjectStateFilter v1;
org.kohsuke.github.PagedIterable v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = <org.kohsuke.github.GHProject$ProjectStateFilter: org.kohsuke.github.GHProject$ProjectStateFilter OPEN>;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listProjects(org.kohsuke.github.GHProject$ProjectStateFilter)>(v1);
return v2;
}
public org.kohsuke.github.GHProject createProject(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.Object[] v10;
java.lang.String[] v13;
org.kohsuke.github.GitHubRequest$Builder v14, v5, v7, v8, v9;
java.lang.String v1, v11, v12, v2;
org.kohsuke.github.GitHub v3;
org.kohsuke.github.internal.Previews v6;
org.kohsuke.github.GHOrganization v0;
java.lang.Object v15;
org.kohsuke.github.Requester v4;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("name", v1);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("body", v2);
v10 = newarray (java.lang.Object)[1];
v11 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v10[0] = v11;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s/projects", v10);
v13 = newarray (java.lang.String)[0];
v14 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v12, v13);
v15 = virtualinvoke v14.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProject;");
return v15;
}
public org.kohsuke.github.GHTeam createTeam(java.lang.String, org.kohsuke.github.GHOrganization$Permission, java.util.Collection) throws java.io.IOException
{
java.lang.String[] v18;
org.kohsuke.github.GitHubRequest$Builder v19, v6, v7, v8;
org.kohsuke.github.GHOrganization$Permission v2;
java.util.ArrayList v9;
java.lang.String v1, v13, v14, v15, v16, v17;
org.kohsuke.github.GitHub v4;
boolean v11;
java.util.Iterator v10;
java.util.Collection v3;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHTeam v21;
java.lang.Object v12, v20;
org.kohsuke.github.Requester v5;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.kohsuke.github.GHOrganization$Permission;
v3 := @parameter2: java.util.Collection;
v4 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("name", v1);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Enum)>("permission", v2);
v9 = new java.util.ArrayList;
specialinvoke v9.<java.util.ArrayList: void <init>()>();
v10 = interfaceinvoke v3.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v14 = virtualinvoke v12.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/\u0001");
interfaceinvoke v9.<java.util.List: boolean add(java.lang.Object)>(v15);
goto label1;
label2:
virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("repo_names", v9);
v16 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/teams");
v18 = newarray (java.lang.String)[0];
v19 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v17, v18);
v20 = virtualinvoke v19.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHTeam;");
v21 = virtualinvoke v20.<org.kohsuke.github.GHTeam: org.kohsuke.github.GHTeam wrapUp(org.kohsuke.github.GHOrganization)>(v0);
return v21;
}
public transient org.kohsuke.github.GHTeam createTeam(java.lang.String, org.kohsuke.github.GHOrganization$Permission, org.kohsuke.github.GHRepository[]) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.util.List v4;
org.kohsuke.github.GHRepository[] v3;
org.kohsuke.github.GHTeam v5;
java.lang.String v1;
org.kohsuke.github.GHOrganization$Permission v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.kohsuke.github.GHOrganization$Permission;
v3 := @parameter2: org.kohsuke.github.GHRepository[];
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
v5 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHTeam createTeam(java.lang.String,org.kohsuke.github.GHOrganization$Permission,java.util.Collection)>(v1, v2, v4);
return v5;
}
public org.kohsuke.github.GHTeam createTeam(java.lang.String, java.util.Collection) throws java.io.IOException
{
java.lang.String[] v16;
org.kohsuke.github.GitHubRequest$Builder v17, v5, v6;
java.util.ArrayList v7;
java.lang.String v1, v11, v12, v13, v14, v15;
org.kohsuke.github.GitHub v3;
boolean v9;
java.util.Iterator v8;
java.util.Collection v2;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHTeam v19;
java.lang.Object v10, v18;
org.kohsuke.github.Requester v4;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Collection;
v3 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("name", v1);
v7 = new java.util.ArrayList;
specialinvoke v7.<java.util.ArrayList: void <init>()>();
v8 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label2;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v12 = virtualinvoke v10.<org.kohsuke.github.GHRepository: java.lang.String getName()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v11, v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/\u0001");
interfaceinvoke v7.<java.util.List: boolean add(java.lang.Object)>(v13);
goto label1;
label2:
virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("repo_names", v7);
v14 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/teams");
v16 = newarray (java.lang.String)[0];
v17 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v15, v16);
v18 = virtualinvoke v17.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHTeam;");
v19 = virtualinvoke v18.<org.kohsuke.github.GHTeam: org.kohsuke.github.GHTeam wrapUp(org.kohsuke.github.GHOrganization)>(v0);
return v19;
}
public transient org.kohsuke.github.GHTeam createTeam(java.lang.String, org.kohsuke.github.GHRepository[]) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.util.List v3;
org.kohsuke.github.GHRepository[] v2;
org.kohsuke.github.GHTeam v4;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.kohsuke.github.GHRepository[];
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v4 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHTeam createTeam(java.lang.String,java.util.Collection)>(v1, v3);
return v4;
}
public org.kohsuke.github.GHTeamBuilder createTeam(java.lang.String)
{
org.kohsuke.github.GHOrganization v0;
java.lang.String v1, v4;
org.kohsuke.github.GitHub v3;
org.kohsuke.github.GHTeamBuilder v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 = new org.kohsuke.github.GHTeamBuilder;
v3 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
specialinvoke v2.<org.kohsuke.github.GHTeamBuilder: void <init>(org.kohsuke.github.GitHub,java.lang.String,java.lang.String)>(v3, v4, v1);
return v2;
}
public java.util.List getRepositoriesWithOpenPullRequests() throws java.io.IOException
{
java.util.ArrayList v1;
org.kohsuke.github.GHOrganization v0;
java.util.List v7;
int v8;
java.lang.Object v5;
org.kohsuke.github.PagedIterator v3;
org.kohsuke.github.PagedIterable v2;
boolean v4;
org.kohsuke.github.GHIssueState v6;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.PagedIterable listRepositories(int)>(100);
v3 = virtualinvoke v2.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = <org.kohsuke.github.GHIssueState: org.kohsuke.github.GHIssueState OPEN>;
v7 = virtualinvoke v5.<org.kohsuke.github.GHRepository: java.util.List getPullRequests(org.kohsuke.github.GHIssueState)>(v6);
v8 = interfaceinvoke v7.<java.util.List: int size()>();
if v8 <= 0 goto label1;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
return v1;
}
public java.util.List getPullRequests() throws java.io.IOException
{
java.util.Iterator v3;
java.util.ArrayList v1;
org.kohsuke.github.GHOrganization v0;
java.util.List v2, v7;
java.lang.Object v5;
boolean v4;
org.kohsuke.github.GHIssueState v6;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: java.util.List getRepositoriesWithOpenPullRequests()>();
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = <org.kohsuke.github.GHIssueState: org.kohsuke.github.GHIssueState OPEN>;
v7 = virtualinvoke v5.<org.kohsuke.github.GHRepository: java.util.List getPullRequests(org.kohsuke.github.GHIssueState)>(v6);
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v7);
goto label1;
label2:
return v1;
}
public org.kohsuke.github.PagedIterable listEvents() throws java.io.IOException
{
java.lang.Object[] v3;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
org.kohsuke.github.GHOrganization v0;
java.lang.String v4, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v8;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = newarray (java.lang.Object)[1];
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v3[0] = v4;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/orgs/%s/events", v3);
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHEventInfo;", null);
return v8;
}
public org.kohsuke.github.PagedIterable listRepositories(int)
{
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
org.kohsuke.github.GHOrganization v0;
int v1;
java.lang.String v4, v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.PagedIterable v8, v9;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = v0.<org.kohsuke.github.GHOrganization: java.lang.String login>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001/repos");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHRepository;", null);
v9 = virtualinvoke v8.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterable withPageSize(int)>(v1);
return v9;
}
public java.util.List getHooks() throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
java.util.List v2;
org.kohsuke.github.GHHooks$Context v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 = staticinvoke <org.kohsuke.github.GHHooks: org.kohsuke.github.GHHooks$Context orgContext(org.kohsuke.github.GHOrganization)>(v0);
v2 = virtualinvoke v1.<org.kohsuke.github.GHHooks$Context: java.util.List getHooks()>();
return v2;
}
public org.kohsuke.github.GHHook getHook(int) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHHooks$Context v2;
org.kohsuke.github.GHHook v3;
int v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: int;
v2 = staticinvoke <org.kohsuke.github.GHHooks: org.kohsuke.github.GHHooks$Context orgContext(org.kohsuke.github.GHOrganization)>(v0);
v3 = virtualinvoke v2.<org.kohsuke.github.GHHooks$Context: org.kohsuke.github.GHHook getHook(int)>(v1);
return v3;
}
public void deleteHook(int) throws java.io.IOException
{
int v1;
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHHooks$Context v2;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: int;
v2 = staticinvoke <org.kohsuke.github.GHHooks: org.kohsuke.github.GHHooks$Context orgContext(org.kohsuke.github.GHOrganization)>(v0);
virtualinvoke v2.<org.kohsuke.github.GHHooks$Context: void deleteHook(int)>(v1);
return;
}
public org.kohsuke.github.GHHook createHook(java.lang.String, java.util.Map, java.util.Collection, boolean) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHHooks$Context v5;
org.kohsuke.github.GHHook v6;
java.util.Collection v3;
java.util.Map v2;
java.lang.String v1;
boolean v4;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: java.util.Collection;
v4 := @parameter3: boolean;
v5 = staticinvoke <org.kohsuke.github.GHHooks: org.kohsuke.github.GHHooks$Context orgContext(org.kohsuke.github.GHOrganization)>(v0);
v6 = virtualinvoke v5.<org.kohsuke.github.GHHooks$Context: org.kohsuke.github.GHHook createHook(java.lang.String,java.util.Map,java.util.Collection,boolean)>(v1, v2, v3, v4);
return v6;
}
public org.kohsuke.github.GHHook createWebHook(java.net.URL, java.util.Collection) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHHook v5;
java.net.URL v1;
java.util.Collection v2;
java.util.Map v4;
java.lang.String v3;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: java.util.Collection;
v3 = virtualinvoke v1.<java.net.URL: java.lang.String toExternalForm()>();
v4 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>("url", v3);
v5 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHHook createHook(java.lang.String,java.util.Map,java.util.Collection,boolean)>("web", v4, v2, 1);
return v5;
}
public org.kohsuke.github.GHHook createWebHook(java.net.URL) throws java.io.IOException
{
org.kohsuke.github.GHOrganization v0;
org.kohsuke.github.GHHook v2;
java.net.URL v1;
v0 := @this: org.kohsuke.github.GHOrganization;
v1 := @parameter0: java.net.URL;
v2 = virtualinvoke v0.<org.kohsuke.github.GHOrganization: org.kohsuke.github.GHHook createWebHook(java.net.URL,java.util.Collection)>(v1, null);
return v2;
}
}