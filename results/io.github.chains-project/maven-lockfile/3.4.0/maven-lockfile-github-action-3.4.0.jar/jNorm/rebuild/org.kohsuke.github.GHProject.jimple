public class org.kohsuke.github.GHProject extends org.kohsuke.github.GHObject
{
protected org.kohsuke.github.GHObject owner;
private java.lang.String owner_url;
private java.lang.String html_url;
private java.lang.String name;
private java.lang.String body;
private int number;
private java.lang.String state;
private org.kohsuke.github.GHUser creator;
public void <init>()
{
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public java.net.URL getHtmlUrl() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHObject getOwner() throws java.io.IOException
{
org.kohsuke.github.GHRepository v28;
java.net.URL v15, v22, v6;
java.lang.String[] v17, v24, v8;
org.kohsuke.github.GitHubRequest$Builder v18, v9;
java.lang.String v11, v16, v2, v20, v23, v26, v27, v7;
org.kohsuke.github.GHProject v0;
org.kohsuke.github.GitHub v13, v25, v4;
boolean v12, v21, v3;
org.kohsuke.github.GHObject v1, v30;
java.io.FileNotFoundException v29;
java.lang.Object v10, v19;
org.kohsuke.github.Requester v14, v5;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHObject owner>;
if v1 != null goto label6;
label1:
v2 = v0.<org.kohsuke.github.GHProject: java.lang.String owner_url>;
v3 = virtualinvoke v2.<java.lang.String: boolean contains(java.lang.CharSequence)>("/orgs/");
if v3 == 0 goto label2;
v4 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = virtualinvoke v0.<org.kohsuke.github.GHProject: java.net.URL getOwnerUrl()>();
v7 = virtualinvoke v6.<java.net.URL: java.lang.String getPath()>();
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHOrganization;");
v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHObject owner> = v10;
goto label6;
label2:
v11 = v0.<org.kohsuke.github.GHProject: java.lang.String owner_url>;
v12 = virtualinvoke v11.<java.lang.String: boolean contains(java.lang.CharSequence)>("/users/");
if v12 == 0 goto label3;
v13 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v14 = virtualinvoke v13.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v15 = virtualinvoke v0.<org.kohsuke.github.GHProject: java.net.URL getOwnerUrl()>();
v16 = virtualinvoke v15.<java.net.URL: java.lang.String getPath()>();
v17 = newarray (java.lang.String)[0];
v18 = virtualinvoke v14.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v16, v17);
v19 = virtualinvoke v18.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHUser;");
v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHObject owner> = v19;
goto label6;
label3:
v20 = v0.<org.kohsuke.github.GHProject: java.lang.String owner_url>;
v21 = virtualinvoke v20.<java.lang.String: boolean contains(java.lang.CharSequence)>("/repos/");
if v21 == 0 goto label6;
v22 = virtualinvoke v0.<org.kohsuke.github.GHProject: java.net.URL getOwnerUrl()>();
v23 = virtualinvoke v22.<java.net.URL: java.lang.String getPath()>();
v24 = virtualinvoke v23.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");
v25 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v26 = v24[1];
v27 = v24[2];
v28 = staticinvoke <org.kohsuke.github.GHRepository: org.kohsuke.github.GHRepository read(org.kohsuke.github.GitHub,java.lang.String,java.lang.String)>(v25, v26, v27);
v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHObject owner> = v28;
label4:
goto label6;
label5:
v29 := @caughtexception;
return null;
label6:
v30 = v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHObject owner>;
return v30;
catch java.io.FileNotFoundException from label1 to label4 with label5;
}
public java.net.URL getOwnerUrl()
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: java.lang.String owner_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.lang.String getNode_id()
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProject: java.lang.String getNodeId()>();
return v1;
}
public java.lang.String getName()
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: java.lang.String name>;
return v1;
}
public java.lang.String getBody()
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: java.lang.String body>;
return v1;
}
public int getNumber()
{
int v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: int number>;
return v1;
}
public org.kohsuke.github.GHProject$ProjectState getState()
{
java.lang.Enum v4;
java.util.Locale v2;
java.lang.String v1, v3;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: java.lang.String state>;
v2 = <java.util.Locale: java.util.Locale ENGLISH>;
v3 = virtualinvoke v1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(v2);
v4 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/kohsuke/github/GHProject$ProjectState;", v3);
return v4;
}
public org.kohsuke.github.GHUser getCreator()
{
org.kohsuke.github.GHProject v0;
org.kohsuke.github.GHUser v1;
v0 := @this: org.kohsuke.github.GHProject;
v1 = v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHUser creator>;
return v1;
}
public org.kohsuke.github.GHProject wrap(org.kohsuke.github.GitHub)
{
java.lang.RuntimeException v2;
org.kohsuke.github.GHProject v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
public org.kohsuke.github.GHProject wrap(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
java.lang.RuntimeException v2;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
org.kohsuke.github.GHProject lateBind(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GHObject owner> = v1;
return v0;
}
private void edit(java.lang.String, java.lang.Object) throws java.io.IOException
{
org.kohsuke.github.internal.Previews v6;
java.lang.String[] v10;
org.kohsuke.github.GitHubRequest$Builder v11, v5, v7, v8;
java.lang.Object v2;
java.lang.String v1, v9;
org.kohsuke.github.GHProject v0;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>(v1, v2);
v9 = virtualinvoke v0.<org.kohsuke.github.GHProject: java.lang.String getApiRoute()>();
v10 = newarray (java.lang.String)[0];
v11 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v9, v10);
virtualinvoke v11.<org.kohsuke.github.Requester: void send()>();
return;
}
protected java.lang.String getApiRoute()
{
long v1;
java.lang.String v2;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProject: long getId()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/projects/\u0001");
return v2;
}
public void setName(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHProject: void edit(java.lang.String,java.lang.Object)>("name", v1);
return;
}
public void setBody(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHProject: void edit(java.lang.String,java.lang.Object)>("body", v1);
return;
}
public void setState(org.kohsuke.github.GHProject$ProjectState) throws java.io.IOException
{
org.kohsuke.github.GHProject$ProjectState v1;
java.lang.String v2, v3;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: org.kohsuke.github.GHProject$ProjectState;
v2 = virtualinvoke v1.<org.kohsuke.github.GHProject$ProjectState: java.lang.String toString()>();
v3 = virtualinvoke v2.<java.lang.String: java.lang.String toLowerCase()>();
specialinvoke v0.<org.kohsuke.github.GHProject: void edit(java.lang.String,java.lang.Object)>("state", v3);
return;
}
public void setOrganizationPermission(org.kohsuke.github.GHPermissionType) throws java.io.IOException
{
org.kohsuke.github.GHPermissionType v1;
java.lang.String v2, v3;
org.kohsuke.github.GHProject v0;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: org.kohsuke.github.GHPermissionType;
v2 = virtualinvoke v1.<org.kohsuke.github.GHPermissionType: java.lang.String toString()>();
v3 = virtualinvoke v2.<java.lang.String: java.lang.String toLowerCase()>();
specialinvoke v0.<org.kohsuke.github.GHProject: void edit(java.lang.String,java.lang.Object)>("organization_permission", v3);
return;
}
public void setPublic(boolean) throws java.io.IOException
{
java.lang.Boolean v2;
org.kohsuke.github.GHProject v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
specialinvoke v0.<org.kohsuke.github.GHProject: void edit(java.lang.String,java.lang.Object)>("public", v2);
return;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v4, v5, v8;
java.lang.String v6;
org.kohsuke.github.GHProject v0;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProject;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v6 = virtualinvoke v0.<org.kohsuke.github.GHProject: java.lang.String getApiRoute()>();
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
virtualinvoke v8.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.PagedIterable listColumns() throws java.io.IOException
{
java.lang.Object[] v5;
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v9;
long v6;
org.kohsuke.github.GitHubRequest$Builder v10, v4;
java.util.function.Consumer v11;
java.lang.Long v7;
java.lang.String v8;
org.kohsuke.github.GHProject v0;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v12;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProject;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = newarray (java.lang.Object)[1];
v6 = virtualinvoke v0.<org.kohsuke.github.GHProject: long getId()>();
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v6);
v5[0] = v7;
v8 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/%d/columns", v5);
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
v11 = staticinvoke <org.kohsuke.github.GHProject$lambda_listColumns_0__52: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHProject)>(v0);
v12 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHProjectColumn;", v11);
return v12;
}
public org.kohsuke.github.GHProjectColumn createColumn(java.lang.String) throws java.io.IOException
{
java.lang.Object[] v8;
java.lang.String[] v12;
long v9;
org.kohsuke.github.GitHubRequest$Builder v13, v4, v6, v7;
java.lang.Long v10;
java.lang.String v1, v11;
org.kohsuke.github.GHProject v0;
org.kohsuke.github.GitHub v2;
org.kohsuke.github.internal.Previews v5;
org.kohsuke.github.GHProjectColumn v15;
java.lang.Object v14;
org.kohsuke.github.Requester v3;
v0 := @this: org.kohsuke.github.GHProject;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHProject: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v5 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("name", v1);
v8 = newarray (java.lang.Object)[1];
v9 = virtualinvoke v0.<org.kohsuke.github.GHProject: long getId()>();
v10 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v9);
v8[0] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/%d/columns", v8);
v12 = newarray (java.lang.String)[0];
v13 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v11, v12);
v14 = virtualinvoke v13.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProjectColumn;");
v15 = virtualinvoke v14.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProjectColumn lateBind(org.kohsuke.github.GHProject)>(v0);
return v15;
}
}