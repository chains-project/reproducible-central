public class org.kohsuke.github.GHProjectCard extends org.kohsuke.github.GHObject
{
private org.kohsuke.github.GHProject project;
private org.kohsuke.github.GHProjectColumn column;
private java.lang.String note;
private org.kohsuke.github.GHUser creator;
private java.lang.String content_url;
private java.lang.String project_url;
private java.lang.String column_url;
private boolean archived;
public void <init>()
{
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
return;
}
public java.net.URL getHtmlUrl() throws java.io.IOException
{
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
return null;
}
public org.kohsuke.github.GHProjectCard wrap(org.kohsuke.github.GitHub)
{
java.lang.RuntimeException v2;
org.kohsuke.github.GHProjectCard v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
org.kohsuke.github.GHProjectCard lateBind(org.kohsuke.github.GitHub)
{
org.kohsuke.github.GHProjectCard v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: org.kohsuke.github.GitHub;
return v0;
}
public org.kohsuke.github.GHProjectCard wrap(org.kohsuke.github.GHProjectColumn)
{
org.kohsuke.github.GHProjectColumn v1;
java.lang.RuntimeException v2;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: org.kohsuke.github.GHProjectColumn;
v2 = new java.lang.RuntimeException;
specialinvoke v2.<java.lang.RuntimeException: void <init>(java.lang.String)>("Do not use this method.");
throw v2;
}
org.kohsuke.github.GHProjectCard lateBind(org.kohsuke.github.GHProjectColumn)
{
org.kohsuke.github.GHProjectColumn v1;
org.kohsuke.github.GHProjectCard v0, v4;
org.kohsuke.github.GHProject v2;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: org.kohsuke.github.GHProjectColumn;
v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectColumn column> = v1;
v2 = v1.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProject project>;
v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProject project> = v2;
v3 = virtualinvoke v1.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectCard lateBind(org.kohsuke.github.GitHub)>(v3);
return v4;
}
public org.kohsuke.github.GHProject getProject() throws java.io.IOException
{
java.net.URL v4;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.io.FileNotFoundException v9;
org.kohsuke.github.GHProjectCard v0;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.GHProject v1, v10;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProject project>;
if v1 != null goto label4;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: java.net.URL getProjectUrl()>();
v5 = virtualinvoke v4.<java.net.URL: java.lang.String getPath()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProject;");
v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProject project> = v8;
label2:
goto label4;
label3:
v9 := @caughtexception;
label4:
v10 = v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProject project>;
return v10;
catch java.io.FileNotFoundException from label1 to label2 with label3;
}
public org.kohsuke.github.GHProjectColumn getColumn() throws java.io.IOException
{
java.net.URL v4;
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.io.FileNotFoundException v11;
org.kohsuke.github.GHProjectColumn v1, v10, v12;
org.kohsuke.github.GHProjectCard v0;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v2, v9;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectColumn column>;
if v1 != null goto label4;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: java.net.URL getColumnUrl()>();
v5 = virtualinvoke v4.<java.net.URL: java.lang.String getPath()>();
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProjectColumn;");
v9 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v10 = virtualinvoke v8.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProjectColumn lateBind(org.kohsuke.github.GitHub)>(v9);
v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectColumn column> = v10;
label2:
goto label4;
label3:
v11 := @caughtexception;
label4:
v12 = v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectColumn column>;
return v12;
catch java.io.FileNotFoundException from label1 to label2 with label3;
}
public org.kohsuke.github.GHIssue getContent() throws java.io.IOException
{
java.net.URL v14, v7;
java.lang.String[] v16, v9;
org.kohsuke.github.GitHubRequest$Builder v10, v17;
java.lang.String v1, v15, v3, v8;
org.kohsuke.github.GitHub v12, v5;
boolean v2, v4;
java.io.FileNotFoundException v19;
org.kohsuke.github.GHProjectCard v0;
java.lang.Object v11, v18;
org.kohsuke.github.Requester v13, v6;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: java.lang.String content_url>;
v2 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isEmpty(java.lang.CharSequence)>(v1);
if v2 == 0 goto label1;
return null;
label1:
v3 = v0.<org.kohsuke.github.GHProjectCard: java.lang.String content_url>;
v4 = virtualinvoke v3.<java.lang.String: boolean contains(java.lang.CharSequence)>("/pulls");
if v4 == 0 goto label3;
v5 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v6 = virtualinvoke v5.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v7 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: java.net.URL getContentUrl()>();
v8 = virtualinvoke v7.<java.net.URL: java.lang.String getPath()>();
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHPullRequest;");
label2:
return v11;
label3:
v12 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v13 = virtualinvoke v12.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v14 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: java.net.URL getContentUrl()>();
v15 = virtualinvoke v14.<java.net.URL: java.lang.String getPath()>();
v16 = newarray (java.lang.String)[0];
v17 = virtualinvoke v13.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v15, v16);
v18 = virtualinvoke v17.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHIssue;");
label4:
return v18;
label5:
v19 := @caughtexception;
return null;
catch java.io.FileNotFoundException from label1 to label2 with label5;
catch java.io.FileNotFoundException from label3 to label4 with label5;
}
public java.lang.String getNote()
{
java.lang.String v1;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: java.lang.String note>;
return v1;
}
public org.kohsuke.github.GHUser getCreator()
{
org.kohsuke.github.GHUser v1;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHUser creator>;
return v1;
}
public java.net.URL getContentUrl()
{
java.lang.String v1;
java.net.URL v2;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: java.lang.String content_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.net.URL getProjectUrl()
{
java.lang.String v1;
java.net.URL v2;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: java.lang.String project_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.net.URL getColumnUrl()
{
java.lang.String v1;
java.net.URL v2;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: java.lang.String column_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public boolean isArchived()
{
org.kohsuke.github.GHProjectCard v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = v0.<org.kohsuke.github.GHProjectCard: boolean archived>;
return v1;
}
public void setNote(java.lang.String) throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHProjectCard v0;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.kohsuke.github.GHProjectCard: void edit(java.lang.String,java.lang.Object)>("note", v1);
return;
}
public void setArchived(boolean) throws java.io.IOException
{
java.lang.Boolean v2;
org.kohsuke.github.GHProjectCard v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
specialinvoke v0.<org.kohsuke.github.GHProjectCard: void edit(java.lang.String,java.lang.Object)>("archived", v2);
return;
}
private void edit(java.lang.String, java.lang.Object) throws java.io.IOException
{
org.kohsuke.github.internal.Previews v6;
java.lang.String[] v10;
org.kohsuke.github.GitHubRequest$Builder v11, v5, v7, v8;
org.kohsuke.github.GHProjectCard v0;
java.lang.Object v2;
java.lang.String v1, v9;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v6 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>(v1, v2);
v9 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: java.lang.String getApiRoute()>();
v10 = newarray (java.lang.String)[0];
v11 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v9, v10);
virtualinvoke v11.<org.kohsuke.github.Requester: void send()>();
return;
}
protected java.lang.String getApiRoute()
{
java.lang.Object[] v1;
java.lang.Long v3;
org.kohsuke.github.GHProjectCard v0;
long v2;
java.lang.String v4;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = newarray (java.lang.Object)[1];
v2 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: long getId()>();
v3 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v2);
v1[0] = v3;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("/projects/columns/cards/%d", v1);
return v4;
}
public void delete() throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v4, v5, v8;
org.kohsuke.github.GHProjectCard v0;
java.lang.String v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHProjectCard;
v1 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v6 = virtualinvoke v0.<org.kohsuke.github.GHProjectCard: java.lang.String getApiRoute()>();
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
virtualinvoke v8.<org.kohsuke.github.Requester: void send()>();
return;
}
}