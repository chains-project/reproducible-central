public final enum class org.kohsuke.github.GHPullRequestReviewEvent extends java.lang.Enum
{
public static final enum org.kohsuke.github.GHPullRequestReviewEvent PENDING;
public static final enum org.kohsuke.github.GHPullRequestReviewEvent APPROVE;
public static final enum org.kohsuke.github.GHPullRequestReviewEvent REQUEST_CHANGES;
public static final enum org.kohsuke.github.GHPullRequestReviewEvent COMMENT;
private static final org.kohsuke.github.GHPullRequestReviewEvent[] $VALUES;
public static org.kohsuke.github.GHPullRequestReviewEvent[] values()
{
java.lang.Object v1;
org.kohsuke.github.GHPullRequestReviewEvent[] v0;
v0 = <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.kohsuke.github.GHPullRequestReviewEvent valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/kohsuke/github/GHPullRequestReviewEvent;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
org.kohsuke.github.GHPullRequestReviewEvent v0;
v0 := @this: org.kohsuke.github.GHPullRequestReviewEvent;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
java.lang.String action()
{
java.lang.String v2;
org.kohsuke.github.GHPullRequestReviewEvent v0, v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewEvent;
v1 = <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent PENDING>;
if v0 != v1 goto label1;
v2 = null;
goto label2;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewEvent: java.lang.String name()>();
label2:
return v2;
}
org.kohsuke.github.GHPullRequestReviewState toState()
{
java.lang.IllegalStateException v8;
org.kohsuke.github.GHPullRequestReviewState v4, v5, v6, v7;
org.kohsuke.github.GHPullRequestReviewEvent v0;
int[] v1;
int v2, v3;
v0 := @this: org.kohsuke.github.GHPullRequestReviewEvent;
v1 = <org.kohsuke.github.GHPullRequestReviewEvent$1: int[] $SwitchMap$org$kohsuke$github$GHPullRequestReviewEvent>;
v2 = virtualinvoke v0.<org.kohsuke.github.GHPullRequestReviewEvent: int ordinal()>();
v3 = v1[v2];
tableswitch(v3)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label4;
default: goto label5;
};
label1:
v4 = <org.kohsuke.github.GHPullRequestReviewState: org.kohsuke.github.GHPullRequestReviewState PENDING>;
return v4;
label2:
v5 = <org.kohsuke.github.GHPullRequestReviewState: org.kohsuke.github.GHPullRequestReviewState APPROVED>;
return v5;
label3:
v6 = <org.kohsuke.github.GHPullRequestReviewState: org.kohsuke.github.GHPullRequestReviewState CHANGES_REQUESTED>;
return v6;
label4:
v7 = <org.kohsuke.github.GHPullRequestReviewState: org.kohsuke.github.GHPullRequestReviewState COMMENTED>;
return v7;
label5:
v8 = new java.lang.IllegalStateException;
specialinvoke v8.<java.lang.IllegalStateException: void <init>()>();
throw v8;
}
private static org.kohsuke.github.GHPullRequestReviewEvent[] $values()
{
org.kohsuke.github.GHPullRequestReviewEvent[] v0;
org.kohsuke.github.GHPullRequestReviewEvent v1, v2, v3, v4;
v0 = newarray (org.kohsuke.github.GHPullRequestReviewEvent)[4];
v1 = <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent PENDING>;
v0[0] = v1;
v2 = <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent APPROVE>;
v0[1] = v2;
v3 = <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent REQUEST_CHANGES>;
v0[2] = v3;
v4 = <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent COMMENT>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
org.kohsuke.github.GHPullRequestReviewEvent[] v4;
org.kohsuke.github.GHPullRequestReviewEvent v0, v1, v2, v3;
v0 = new org.kohsuke.github.GHPullRequestReviewEvent;
specialinvoke v0.<org.kohsuke.github.GHPullRequestReviewEvent: void <init>(java.lang.String,int)>("PENDING", 0);
<org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent PENDING> = v0;
v1 = new org.kohsuke.github.GHPullRequestReviewEvent;
specialinvoke v1.<org.kohsuke.github.GHPullRequestReviewEvent: void <init>(java.lang.String,int)>("APPROVE", 1);
<org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent APPROVE> = v1;
v2 = new org.kohsuke.github.GHPullRequestReviewEvent;
specialinvoke v2.<org.kohsuke.github.GHPullRequestReviewEvent: void <init>(java.lang.String,int)>("REQUEST_CHANGES", 2);
<org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent REQUEST_CHANGES> = v2;
v3 = new org.kohsuke.github.GHPullRequestReviewEvent;
specialinvoke v3.<org.kohsuke.github.GHPullRequestReviewEvent: void <init>(java.lang.String,int)>("COMMENT", 3);
<org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent COMMENT> = v3;
v4 = staticinvoke <org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent[] $values()>();
<org.kohsuke.github.GHPullRequestReviewEvent: org.kohsuke.github.GHPullRequestReviewEvent[] $VALUES> = v4;
return;
}
}