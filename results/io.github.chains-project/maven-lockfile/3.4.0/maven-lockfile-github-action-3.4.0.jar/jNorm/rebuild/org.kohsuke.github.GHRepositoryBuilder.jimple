abstract class org.kohsuke.github.GHRepositoryBuilder extends org.kohsuke.github.AbstractBuilder
{
protected void <init>(java.lang.Class, org.kohsuke.github.GitHub, org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v3;
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Class v1;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: org.kohsuke.github.GitHub;
v3 := @parameter2: org.kohsuke.github.GHRepository;
specialinvoke v0.<org.kohsuke.github.AbstractBuilder: void <init>(java.lang.Class,java.lang.Class,org.kohsuke.github.GitHub,java.lang.Object)>(class "Lorg/kohsuke/github/GHRepository;", v1, v2, v3);
return;
}
public java.lang.Object allowSquashMerge(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("allow_squash_merge", v2);
return v3;
}
public java.lang.Object allowMergeCommit(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("allow_merge_commit", v2);
return v3;
}
public java.lang.Object allowRebaseMerge(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("allow_rebase_merge", v2);
return v3;
}
public java.lang.Object deleteBranchOnMerge(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("delete_branch_on_merge", v2);
return v3;
}
public java.lang.Object defaultBranch(java.lang.String) throws java.io.IOException
{
java.lang.Object v2;
java.lang.String v1;
org.kohsuke.github.GHRepositoryBuilder v0;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("default_branch", v1);
return v2;
}
public java.lang.Object description(java.lang.String) throws java.io.IOException
{
java.lang.Object v2;
java.lang.String v1;
org.kohsuke.github.GHRepositoryBuilder v0;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("description", v1);
return v2;
}
public java.lang.Object homepage(java.net.URL) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.net.URL v1;
java.lang.Object v3;
java.lang.String v2;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: java.net.URL;
v2 = virtualinvoke v1.<java.net.URL: java.lang.String toExternalForm()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object homepage(java.lang.String)>(v2);
return v3;
}
public java.lang.Object homepage(java.lang.String) throws java.io.IOException
{
java.lang.Object v2;
java.lang.String v1;
org.kohsuke.github.GHRepositoryBuilder v0;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("homepage", v1);
return v2;
}
public java.lang.Object private_(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("private", v2);
return v3;
}
public java.lang.Object visibility(org.kohsuke.github.GHRepository$Visibility) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
org.kohsuke.github.GHRepository$Visibility v1;
org.kohsuke.github.internal.Previews v3;
java.lang.Object v4;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: org.kohsuke.github.GHRepository$Visibility;
v2 = v0.<org.kohsuke.github.GHRepositoryBuilder: org.kohsuke.github.Requester requester>;
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews NEBULA>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v4 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("visibility", v1);
return v4;
}
public java.lang.Object issues(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("has_issues", v2);
return v3;
}
public java.lang.Object projects(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("has_projects", v2);
return v3;
}
public java.lang.Object wiki(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("has_wiki", v2);
return v3;
}
public java.lang.Object downloads(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v2;
java.lang.Object v3;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("has_downloads", v2);
return v3;
}
public java.lang.Object isTemplate(boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepositoryBuilder v0;
java.lang.Boolean v4;
org.kohsuke.github.internal.Previews v3;
java.lang.Object v5;
org.kohsuke.github.Requester v2;
boolean v1;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: boolean;
v2 = v0.<org.kohsuke.github.GHRepositoryBuilder: org.kohsuke.github.Requester requester>;
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews BAPTISTE>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v4 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v5 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("is_template", v4);
return v5;
}
public org.kohsuke.github.GHRepository done() throws java.io.IOException
{
java.lang.Object v1;
org.kohsuke.github.GHRepositoryBuilder v0;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 = specialinvoke v0.<org.kohsuke.github.AbstractBuilder: java.lang.Object done()>();
return v1;
}
java.lang.Object archive() throws java.io.IOException
{
java.lang.Boolean v1;
java.lang.Object v2;
org.kohsuke.github.GHRepositoryBuilder v0;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
v2 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("archived", v1);
return v2;
}
java.lang.Object name(java.lang.String) throws java.io.IOException
{
java.lang.Object v2;
java.lang.String v1;
org.kohsuke.github.GHRepositoryBuilder v0;
v0 := @this: org.kohsuke.github.GHRepositoryBuilder;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryBuilder: java.lang.Object 'with'(java.lang.String,java.lang.Object)>("name", v1);
return v2;
}
}