public class org.kohsuke.github.GHRepositoryStatistics extends org.kohsuke.github.GitHubInteractiveObject
{
private final org.kohsuke.github.GHRepository repo;
private static final int MAX_WAIT_ITERATIONS;
private static final int WAIT_SLEEP_INTERVAL;
public void <init>(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GitHub v2;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v2 = virtualinvoke v1.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>(org.kohsuke.github.GitHub)>(v2);
v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GHRepository repo> = v1;
return;
}
public org.kohsuke.github.PagedIterable getContributorStats() throws java.io.IOException, java.lang.InterruptedException
{
org.kohsuke.github.PagedIterable v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.PagedIterable getContributorStats(boolean)>(1);
return v1;
}
public org.kohsuke.github.PagedIterable getContributorStats(boolean) throws java.io.IOException, java.lang.InterruptedException
{
int v3;
org.kohsuke.github.PagedIterable v2;
boolean v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.PagedIterable getContributorStatsImpl()>();
if v2 != null goto label2;
if v1 == 0 goto label2;
v3 = 0;
label1:
if v3 >= 3 goto label2;
staticinvoke <java.lang.Thread: void sleep(long)>(5000L);
v2 = specialinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.PagedIterable getContributorStatsImpl()>();
if v2 != null goto label2;
v3 = v3 + 1;
goto label1;
label2:
return v2;
}
private org.kohsuke.github.PagedIterable getContributorStatsImpl() throws java.io.IOException
{
java.lang.String[] v4;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: java.lang.String getApiTailUrl(java.lang.String)>("contributors");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHRepositoryStatistics$ContributorStats;", null);
return v6;
}
public org.kohsuke.github.PagedIterable getCommitActivity() throws java.io.IOException
{
java.lang.String[] v4;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: java.lang.String getApiTailUrl(java.lang.String)>("commit_activity");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHRepositoryStatistics$CommitActivity;", null);
return v6;
}
public java.util.List getCodeFrequency() throws java.io.IOException
{
com.fasterxml.jackson.databind.exc.MismatchedInputException v8;
java.lang.String[] v4;
org.kohsuke.github.GitHubRequest$Builder v5;
java.util.List v7;
java.lang.Object v6;
java.lang.String v3;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
label1:
v1 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: java.lang.String getApiTailUrl(java.lang.String)>("code_frequency");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "[Lorg/kohsuke/github/GHRepositoryStatistics$CodeFrequency;");
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v6);
label2:
return v7;
label3:
v8 := @caughtexception;
return null;
catch com.fasterxml.jackson.databind.exc.MismatchedInputException from label1 to label2 with label3;
}
public org.kohsuke.github.GHRepositoryStatistics$Participation getParticipation() throws java.io.IOException
{
java.lang.Object v6;
java.lang.String[] v4;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: java.lang.String getApiTailUrl(java.lang.String)>("participation");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHRepositoryStatistics$Participation;");
return v6;
}
public java.util.List getPunchCard() throws java.io.IOException
{
java.lang.String[] v4;
org.kohsuke.github.GitHubRequest$Builder v5;
java.util.List v7;
java.lang.Object v6;
java.lang.String v3;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepositoryStatistics: java.lang.String getApiTailUrl(java.lang.String)>("punch_card");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "[Lorg/kohsuke/github/GHRepositoryStatistics$PunchCardItem;");
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v6);
return v7;
}
java.lang.String getApiTailUrl(java.lang.String)
{
org.kohsuke.github.GHRepository v2;
java.lang.String v1, v3, v4;
org.kohsuke.github.GHRepositoryStatistics v0;
v0 := @this: org.kohsuke.github.GHRepositoryStatistics;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHRepositoryStatistics: org.kohsuke.github.GHRepository repo>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("stats/\u0001");
v4 = virtualinvoke v2.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v3);
return v4;
}
}