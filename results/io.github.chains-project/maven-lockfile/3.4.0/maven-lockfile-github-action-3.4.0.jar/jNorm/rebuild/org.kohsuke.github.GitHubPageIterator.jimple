class org.kohsuke.github.GitHubPageIterator extends java.lang.Object implements java.util.Iterator
{
private final org.kohsuke.github.GitHubClient client;
private final java.lang.Class type;
private java.lang.Object next;
private org.kohsuke.github.GitHubRequest nextRequest;
private org.kohsuke.github.GitHubResponse finalResponse;
static final boolean $assertionsDisabled;
private void <init>(org.kohsuke.github.GitHubClient, java.lang.Class, org.kohsuke.github.GitHubRequest)
{
java.lang.IllegalStateException v7;
org.kohsuke.github.GitHubPageIterator v0;
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHubRequest v3;
java.lang.Class v2;
java.lang.String v4, v5;
boolean v6;
v0 := @this: org.kohsuke.github.GitHubPageIterator;
v1 := @parameter0: org.kohsuke.github.GitHubClient;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: org.kohsuke.github.GitHubRequest;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubResponse finalResponse> = null;
v4 = "GET";
v5 = virtualinvoke v3.<org.kohsuke.github.GitHubRequest: java.lang.String method()>();
v6 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v5);
if v6 != 0 goto label1;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Request method \"GET\" is required for page iterator.");
throw v7;
label1:
v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubClient client> = v1;
v0.<org.kohsuke.github.GitHubPageIterator: java.lang.Class type> = v2;
v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest> = v3;
return;
}
static org.kohsuke.github.GitHubPageIterator create(org.kohsuke.github.GitHubClient, java.lang.Class, org.kohsuke.github.GitHubRequest, int)
{
org.kohsuke.github.GitHubPageIterator v6;
int v3;
org.kohsuke.github.GitHubClient v0;
java.lang.Class v1;
org.kohsuke.github.GitHubRequest$Builder v4, v5;
org.kohsuke.github.GitHubRequest v2;
v0 := @parameter0: org.kohsuke.github.GitHubClient;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: org.kohsuke.github.GitHubRequest;
v3 := @parameter3: int;
if v3 <= 0 goto label1;
v4 = virtualinvoke v2.<org.kohsuke.github.GitHubRequest: org.kohsuke.github.GitHubRequest$Builder toBuilder()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubRequest$Builder: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,int)>("per_page", v3);
v2 = virtualinvoke v5.<org.kohsuke.github.GitHubRequest$Builder: org.kohsuke.github.GitHubRequest build()>();
label1:
v6 = new org.kohsuke.github.GitHubPageIterator;
specialinvoke v6.<org.kohsuke.github.GitHubPageIterator: void <init>(org.kohsuke.github.GitHubClient,java.lang.Class,org.kohsuke.github.GitHubRequest)>(v0, v1, v2);
return v6;
}
public boolean hasNext()
{
java.lang.Object v1;
org.kohsuke.github.GitHubPageIterator v0;
boolean v2;
v0 := @this: org.kohsuke.github.GitHubPageIterator;
specialinvoke v0.<org.kohsuke.github.GitHubPageIterator: void fetch()>();
v1 = v0.<org.kohsuke.github.GitHubPageIterator: java.lang.Object next>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public java.lang.Object next()
{
java.lang.Object v1;
java.util.NoSuchElementException v2;
org.kohsuke.github.GitHubPageIterator v0;
v0 := @this: org.kohsuke.github.GitHubPageIterator;
specialinvoke v0.<org.kohsuke.github.GitHubPageIterator: void fetch()>();
v1 = v0.<org.kohsuke.github.GitHubPageIterator: java.lang.Object next>;
if v1 != null goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v0.<org.kohsuke.github.GitHubPageIterator: java.lang.Object next> = null;
return v1;
}
public org.kohsuke.github.GitHubResponse finalResponse()
{
org.kohsuke.github.GitHubPageIterator v0;
org.kohsuke.github.GitHubResponse v3;
boolean v1;
org.kohsuke.github.GHException v2;
v0 := @this: org.kohsuke.github.GitHubPageIterator;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHubPageIterator: boolean hasNext()>();
if v1 == 0 goto label1;
v2 = new org.kohsuke.github.GHException;
specialinvoke v2.<org.kohsuke.github.GHException: void <init>(java.lang.String)>("Final response is not available until after iterator is done.");
throw v2;
label1:
v3 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubResponse finalResponse>;
return v3;
}
private void fetch()
{
org.kohsuke.github.GitHubPageIterator v0;
java.net.URL v4;
java.lang.AssertionError v11;
java.lang.String v18;
boolean v9;
org.kohsuke.github.GitHubClient v5;
java.io.IOException v16;
org.kohsuke.github.GitHubClient$BodyHandler v7;
org.kohsuke.github.GHException v17;
org.kohsuke.github.GitHubRequest v13, v14, v15, v2, v3, v6;
org.kohsuke.github.GitHubResponse v8;
java.lang.Object v1, v10, v12;
v0 := @this: org.kohsuke.github.GitHubPageIterator;
v1 = v0.<org.kohsuke.github.GitHubPageIterator: java.lang.Object next>;
if v1 == null goto label1;
return;
label1:
v2 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest>;
if v2 != null goto label2;
return;
label2:
v3 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest>;
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubRequest: java.net.URL url()>();
label3:
v5 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubClient client>;
v6 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest>;
v7 = staticinvoke <org.kohsuke.github.GitHubPageIterator$lambda_fetch_0__54: org.kohsuke.github.GitHubClient$BodyHandler bootstrap$(org.kohsuke.github.GitHubPageIterator)>(v0);
v8 = virtualinvoke v5.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GitHubResponse sendRequest(org.kohsuke.github.GitHubRequest,org.kohsuke.github.GitHubClient$BodyHandler)>(v6, v7);
v9 = <org.kohsuke.github.GitHubPageIterator: boolean $assertionsDisabled>;
if v9 != 0 goto label4;
v10 = virtualinvoke v8.<org.kohsuke.github.GitHubResponse: java.lang.Object body()>();
if v10 != null goto label4;
v11 = new java.lang.AssertionError;
specialinvoke v11.<java.lang.AssertionError: void <init>()>();
throw v11;
label4:
v12 = virtualinvoke v8.<org.kohsuke.github.GitHubResponse: java.lang.Object body()>();
v0.<org.kohsuke.github.GitHubPageIterator: java.lang.Object next> = v12;
v13 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest>;
v14 = specialinvoke v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest findNextURL(org.kohsuke.github.GitHubRequest,org.kohsuke.github.GitHubResponse)>(v13, v8);
v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest> = v14;
v15 = v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubRequest nextRequest>;
if v15 != null goto label7;
v0.<org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubResponse finalResponse> = v8;
label5:
goto label7;
label6:
v16 := @caughtexception;
v17 = new org.kohsuke.github.GHException;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.net.URL)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to retrieve \u0001");
specialinvoke v17.<org.kohsuke.github.GHException: void <init>(java.lang.String,java.lang.Throwable)>(v18, v16);
throw v17;
label7:
return;
catch java.io.IOException from label3 to label5 with label6;
}
private org.kohsuke.github.GitHubRequest findNextURL(org.kohsuke.github.GitHubRequest, org.kohsuke.github.GitHubResponse) throws java.net.MalformedURLException
{
org.kohsuke.github.GitHubPageIterator v0;
java.lang.String[] v5;
org.kohsuke.github.GitHubRequest$Builder v11, v13;
org.kohsuke.github.GitHubRequest v1, v3;
int v10, v6, v7;
org.kohsuke.github.GitHubResponse v2;
java.lang.String v12, v4, v8;
boolean v9;
v0 := @this: org.kohsuke.github.GitHubPageIterator;
v1 := @parameter0: org.kohsuke.github.GitHubRequest;
v2 := @parameter1: org.kohsuke.github.GitHubResponse;
v3 = null;
v4 = virtualinvoke v2.<org.kohsuke.github.GitHubResponse: java.lang.String header(java.lang.String)>("Link");
if v4 == null goto label3;
v5 = virtualinvoke v4.<java.lang.String: java.lang.String[] split(java.lang.String)>(", ");
v6 = lengthof v5;
v7 = 0;
label1:
if v7 >= v6 goto label3;
v8 = v5[v7];
v9 = virtualinvoke v8.<java.lang.String: boolean endsWith(java.lang.String)>("rel=\"next\"");
if v9 == 0 goto label2;
v10 = virtualinvoke v8.<java.lang.String: int indexOf(int)>(62);
v11 = virtualinvoke v1.<org.kohsuke.github.GitHubRequest: org.kohsuke.github.GitHubRequest$Builder toBuilder()>();
v12 = virtualinvoke v8.<java.lang.String: java.lang.String substring(int,int)>(1, v10);
v13 = virtualinvoke v11.<org.kohsuke.github.GitHubRequest$Builder: org.kohsuke.github.GitHubRequest$Builder setRawUrlPath(java.lang.String)>(v12);
v3 = virtualinvoke v13.<org.kohsuke.github.GitHubRequest$Builder: org.kohsuke.github.GitHubRequest build()>();
goto label3;
label2:
v7 = v7 + 1;
goto label1;
label3:
return v3;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/kohsuke/github/GitHubPageIterator;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.kohsuke.github.GitHubPageIterator: boolean $assertionsDisabled> = v2;
return;
}
}