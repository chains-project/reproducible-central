public class org.kohsuke.github.PagedSearchIterable extends org.kohsuke.github.PagedIterable
{
private final transient org.kohsuke.github.GitHub root;
private final org.kohsuke.github.GitHubRequest request;
private final java.lang.Class receiverType;
private org.kohsuke.github.SearchResult result;
void <init>(org.kohsuke.github.GitHub, org.kohsuke.github.GitHubRequest, java.lang.Class)
{
org.kohsuke.github.PagedSearchIterable v0;
java.lang.Class v3;
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GitHubRequest v2;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
v1 := @parameter0: org.kohsuke.github.GitHub;
v2 := @parameter1: org.kohsuke.github.GitHubRequest;
v3 := @parameter2: java.lang.Class;
specialinvoke v0.<org.kohsuke.github.PagedIterable: void <init>()>();
v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.GitHub root> = v1;
v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.GitHubRequest request> = v2;
v0.<org.kohsuke.github.PagedSearchIterable: java.lang.Class receiverType> = v3;
return;
}
public org.kohsuke.github.PagedSearchIterable withPageSize(int)
{
int v1;
org.kohsuke.github.PagedSearchIterable v0;
org.kohsuke.github.PagedIterable v2;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
v1 := @parameter0: int;
v2 = specialinvoke v0.<org.kohsuke.github.PagedIterable: org.kohsuke.github.PagedIterable withPageSize(int)>(v1);
return v2;
}
public int getTotalCount()
{
int v2;
org.kohsuke.github.PagedSearchIterable v0;
org.kohsuke.github.SearchResult v1;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
specialinvoke v0.<org.kohsuke.github.PagedSearchIterable: void populate()>();
v1 = v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.SearchResult result>;
v2 = v1.<org.kohsuke.github.SearchResult: int total_count>;
return v2;
}
public boolean isIncomplete()
{
org.kohsuke.github.PagedSearchIterable v0;
org.kohsuke.github.SearchResult v1;
boolean v2;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
specialinvoke v0.<org.kohsuke.github.PagedSearchIterable: void populate()>();
v1 = v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.SearchResult result>;
v2 = v1.<org.kohsuke.github.SearchResult: boolean incomplete_results>;
return v2;
}
private void populate()
{
org.kohsuke.github.PagedSearchIterable v0;
org.kohsuke.github.PagedIterator v2;
org.kohsuke.github.SearchResult v1;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
v1 = v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.SearchResult result>;
if v1 != null goto label1;
v2 = virtualinvoke v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.PagedIterator iterator()>();
virtualinvoke v2.<org.kohsuke.github.PagedIterator: boolean hasNext()>();
label1:
return;
}
public org.kohsuke.github.PagedIterator _iterator(int)
{
java.util.Iterator v7;
org.kohsuke.github.GitHubPageIterator v6;
org.kohsuke.github.GitHubClient v3;
org.kohsuke.github.GitHubRequest v5;
org.kohsuke.github.PagedSearchIterable v0;
int v1;
java.lang.Class v4;
org.kohsuke.github.PagedIterator v8;
org.kohsuke.github.GitHub v2;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
v1 := @parameter0: int;
v2 = v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.GitHub root>;
v3 = virtualinvoke v2.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient getClient()>();
v4 = v0.<org.kohsuke.github.PagedSearchIterable: java.lang.Class receiverType>;
v5 = v0.<org.kohsuke.github.PagedSearchIterable: org.kohsuke.github.GitHubRequest request>;
v6 = staticinvoke <org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubPageIterator create(org.kohsuke.github.GitHubClient,java.lang.Class,org.kohsuke.github.GitHubRequest,int)>(v3, v4, v5, v1);
v7 = virtualinvoke v0.<org.kohsuke.github.PagedSearchIterable: java.util.Iterator adapt(java.util.Iterator)>(v6);
v8 = new org.kohsuke.github.PagedIterator;
specialinvoke v8.<org.kohsuke.github.PagedIterator: void <init>(java.util.Iterator,java.util.function.Consumer)>(v7, null);
return v8;
}
protected java.util.Iterator adapt(java.util.Iterator)
{
org.kohsuke.github.PagedSearchIterable v0;
java.util.Iterator v1;
org.kohsuke.github.PagedSearchIterable$1 v2;
v0 := @this: org.kohsuke.github.PagedSearchIterable;
v1 := @parameter0: java.util.Iterator;
v2 = new org.kohsuke.github.PagedSearchIterable$1;
specialinvoke v2.<org.kohsuke.github.PagedSearchIterable$1: void <init>(org.kohsuke.github.PagedSearchIterable,java.util.Iterator)>(v0, v1);
return v2;
}
}