class org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter extends java.net.HttpURLConnection
{
private final org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse;
public void <init>(org.kohsuke.github.connector.GitHubConnectorResponse)
{
org.kohsuke.github.connector.GitHubConnectorRequest v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.net.URL v3;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorResponse;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: org.kohsuke.github.connector.GitHubConnectorRequest request()>();
v3 = interfaceinvoke v2.<org.kohsuke.github.connector.GitHubConnectorRequest: java.net.URL url()>();
specialinvoke v0.<java.net.HttpURLConnection: void <init>(java.net.URL)>(v3);
v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: boolean connected> = 1;
v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse> = v1;
return;
}
public java.lang.String getHeaderFieldKey(int)
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.util.Map v4;
int v1;
java.util.Set v5;
java.lang.Object v6;
org.kohsuke.github.connector.GitHubConnectorResponse v3;
java.util.ArrayList v2;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: int;
v2 = new java.util.ArrayList;
v3 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v4 = virtualinvoke v3.<org.kohsuke.github.connector.GitHubConnectorResponse: java.util.Map allHeaders()>();
v5 = interfaceinvoke v4.<java.util.Map: java.util.Set keySet()>();
specialinvoke v2.<java.util.ArrayList: void <init>(java.util.Collection)>(v5);
v6 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
return v6;
}
public java.lang.String getHeaderField(int)
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
int v1;
java.lang.String v3, v4;
org.kohsuke.github.connector.GitHubConnectorResponse v2;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: int;
v2 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v3 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: java.lang.String getHeaderFieldKey(int)>(v1);
v4 = virtualinvoke v2.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>(v3);
return v4;
}
public void setInstanceFollowRedirects(boolean)
{
java.lang.UnsupportedOperationException v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
boolean v1;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: boolean;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public boolean getInstanceFollowRedirects()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String getRequestMethod()
{
org.kohsuke.github.connector.GitHubConnectorRequest v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.lang.String v3;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: org.kohsuke.github.connector.GitHubConnectorRequest request()>();
v3 = interfaceinvoke v2.<org.kohsuke.github.connector.GitHubConnectorRequest: java.lang.String method()>();
return v3;
}
public int getResponseCode() throws java.io.IOException
{
int v2;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: int statusCode()>();
return v2;
}
public java.lang.String getResponseMessage() throws java.io.IOException
{
java.lang.String v2;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>("Status");
return v2;
}
public long getHeaderFieldDate(java.lang.String, long)
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
long v2, v4;
java.lang.String v1, v3;
java.lang.Exception v5;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: java.lang.String getHeaderField(java.lang.String)>(v1);
label1:
v4 = staticinvoke <java.util.Date: long parse(java.lang.String)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return v2;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.security.Permission getPermission() throws java.io.IOException
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.io.InputStream getErrorStream()
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
int v2;
java.io.IOException v5;
org.kohsuke.github.connector.GitHubConnectorResponse v1, v3;
java.io.InputStream v4;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
label1:
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: int statusCode()>();
if v2 < 400 goto label4;
v3 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v4 = virtualinvoke v3.<org.kohsuke.github.connector.GitHubConnectorResponse: java.io.InputStream bodyStream()>();
label2:
return v4;
label3:
v5 := @caughtexception;
label4:
return null;
catch java.io.IOException from label1 to label2 with label3;
}
public void setConnectTimeout(int)
{
int v1;
java.lang.UnsupportedOperationException v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public int getConnectTimeout()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void setReadTimeout(int)
{
int v1;
java.lang.UnsupportedOperationException v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public int getReadTimeout()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public int getContentLength()
{
byte v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
int v3;
long v1;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: long getContentLengthLong()>();
v2 = v1 cmp 2147483647L;
if v2 <= 0 goto label1;
v3 = (int) -1;
return v3;
label1:
return v1;
}
public long getContentLengthLong()
{
long v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: long getHeaderFieldLong(java.lang.String,long)>("content-length", -1L);
return v1;
}
public java.lang.String getContentType()
{
java.lang.String v2;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>("content-type");
return v2;
}
public java.lang.String getContentEncoding()
{
java.lang.String v2;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>("content-encoding");
return v2;
}
public long getExpiration()
{
long v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: long getHeaderFieldDate(java.lang.String,long)>("expires", 0L);
return v1;
}
public long getDate()
{
long v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: long getHeaderFieldDate(java.lang.String,long)>("date", 0L);
return v1;
}
public long getLastModified()
{
long v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: long getHeaderFieldDate(java.lang.String,long)>("last-modified", 0L);
return v1;
}
public java.lang.String getHeaderField(java.lang.String)
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.lang.String v1, v3;
org.kohsuke.github.connector.GitHubConnectorResponse v2;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v3 = virtualinvoke v2.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>(v1);
return v3;
}
public java.util.Map getHeaderFields()
{
org.kohsuke.github.connector.GitHubConnectorResponse v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.util.Map v2;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.util.Map allHeaders()>();
return v2;
}
public int getHeaderFieldInt(java.lang.String, int)
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
int v2, v4;
java.lang.String v1, v3;
java.lang.Exception v5;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: java.lang.String getHeaderField(java.lang.String)>(v1);
label1:
v4 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return v2;
catch java.lang.Exception from label1 to label2 with label3;
}
public long getHeaderFieldLong(java.lang.String, long)
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
long v2, v4;
java.lang.String v1, v3;
java.lang.Exception v5;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
v3 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: java.lang.String getHeaderField(java.lang.String)>(v1);
label1:
v4 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return v2;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.lang.Object getContent() throws java.io.IOException
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.Object getContent(java.lang.Class[]) throws java.io.IOException
{
java.lang.Class[] v1;
java.lang.UnsupportedOperationException v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: java.lang.Class[];
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public java.io.InputStream getInputStream() throws java.io.IOException
{
org.kohsuke.github.HttpException v3;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
int v2;
org.kohsuke.github.connector.GitHubConnectorResponse v1, v4, v5;
java.io.InputStream v6;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: int statusCode()>();
if v2 < 400 goto label1;
v3 = new org.kohsuke.github.HttpException;
v4 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
specialinvoke v3.<org.kohsuke.github.HttpException: void <init>(org.kohsuke.github.connector.GitHubConnectorResponse)>(v4);
throw v3;
label1:
v5 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v6 = virtualinvoke v5.<org.kohsuke.github.connector.GitHubConnectorResponse: java.io.InputStream bodyStream()>();
return v6;
}
public java.io.OutputStream getOutputStream() throws java.io.IOException
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String toString()
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.lang.Class v1;
java.lang.String v2, v4, v5;
org.kohsuke.github.connector.GitHubConnectorResponse v3;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v3 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v4 = virtualinvoke v3.<java.lang.Object: java.lang.String toString()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: \u0001");
return v5;
}
public boolean getDoInput()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean getDoOutput()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean getUseCaches()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public long getIfModifiedSince()
{
long v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = virtualinvoke v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: long getHeaderFieldDate(java.lang.String,long)>("If-Modified-Since", 0L);
return v1;
}
public void setDefaultUseCaches(boolean)
{
java.lang.UnsupportedOperationException v2;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
boolean v1;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: boolean;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public java.lang.String getRequestProperty(java.lang.String)
{
org.kohsuke.github.connector.GitHubConnectorRequest v3;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
java.lang.String v1, v4;
org.kohsuke.github.connector.GitHubConnectorResponse v2;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter: org.kohsuke.github.connector.GitHubConnectorResponse connectorResponse>;
v3 = virtualinvoke v2.<org.kohsuke.github.connector.GitHubConnectorResponse: org.kohsuke.github.connector.GitHubConnectorRequest request()>();
v4 = interfaceinvoke v3.<org.kohsuke.github.connector.GitHubConnectorRequest: java.lang.String header(java.lang.String)>(v1);
return v4;
}
public boolean getAllowUserInteraction()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public boolean getDefaultUseCaches()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void disconnect()
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
return;
}
public boolean usingProxy()
{
java.lang.UnsupportedOperationException v1;
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void connect() throws java.io.IOException
{
org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter v0;
v0 := @this: org.kohsuke.github.connector.GitHubConnectorResponseHttpUrlConnectionAdapter;
return;
}
}