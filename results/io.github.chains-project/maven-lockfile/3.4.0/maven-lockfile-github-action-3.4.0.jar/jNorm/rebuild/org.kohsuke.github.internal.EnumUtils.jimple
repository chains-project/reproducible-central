public final class org.kohsuke.github.internal.EnumUtils extends java.lang.Object
{
private static final java.util.logging.Logger LOGGER;
public static java.lang.Enum getNullableEnumOrDefault(java.lang.Class, java.lang.String, java.lang.Enum)
{
java.lang.Enum v2, v3;
java.lang.Class v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Enum;
if v1 != null goto label1;
return null;
label1:
v3 = staticinvoke <org.kohsuke.github.internal.EnumUtils: java.lang.Enum getEnumOrDefault(java.lang.Class,java.lang.String,java.lang.Enum)>(v0, v1, v2);
return v3;
}
public static java.lang.Enum getEnumOrDefault(java.lang.Class, java.lang.String, java.lang.Enum)
{
java.lang.IllegalArgumentException v6;
java.util.logging.Logger v7;
java.lang.Enum v2, v5;
java.util.Locale v3;
java.lang.Class v0;
java.lang.String v1, v10, v4, v8, v9;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Enum;
label1:
if v1 == null goto label4;
v3 = <java.util.Locale: java.util.Locale ROOT>;
v4 = virtualinvoke v1.<java.lang.String: java.lang.String toUpperCase(java.util.Locale)>(v3);
v5 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(v0, v4);
label2:
return v5;
label3:
v6 := @caughtexception;
label4:
v7 = <org.kohsuke.github.internal.EnumUtils: java.util.logging.Logger LOGGER>;
v8 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v9 = virtualinvoke v2.<java.lang.Enum: java.lang.String name()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.lang.String)>(v1, v8, v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown value \u0001 for enum class \u0001, defaulting to \u0001");
virtualinvoke v7.<java.util.logging.Logger: void warning(java.lang.String)>(v10);
return v2;
catch java.lang.IllegalArgumentException from label1 to label2 with label3;
}
private void <init>()
{
org.kohsuke.github.internal.EnumUtils v0;
v0 := @this: org.kohsuke.github.internal.EnumUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lorg/kohsuke/github/internal/EnumUtils;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<org.kohsuke.github.internal.EnumUtils: java.util.logging.Logger LOGGER> = v2;
return;
}
}