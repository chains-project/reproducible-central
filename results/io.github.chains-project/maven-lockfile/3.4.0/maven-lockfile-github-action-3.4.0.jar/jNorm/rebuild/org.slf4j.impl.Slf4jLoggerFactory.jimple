public final class org.slf4j.impl.Slf4jLoggerFactory extends java.lang.Object implements org.slf4j.ILoggerFactory
{
private static final org.jboss.logmanager.Logger$AttachmentKey key;
public void <init>()
{
org.slf4j.impl.Slf4jLoggerFactory v0;
v0 := @this: org.slf4j.impl.Slf4jLoggerFactory;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.slf4j.Logger getLogger(java.lang.String)
{
org.jboss.logmanager.Logger v3;
org.jboss.logmanager.LogContext v2;
java.security.PrivilegedAction v6;
org.slf4j.impl.Slf4jLoggerFactory v0;
org.jboss.logmanager.Logger$AttachmentKey v4;
java.lang.Object v5, v7;
java.lang.String v1;
v0 := @this: org.slf4j.impl.Slf4jLoggerFactory;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <org.jboss.logmanager.LogContext: org.jboss.logmanager.LogContext getLogContext()>();
v3 = virtualinvoke v2.<org.jboss.logmanager.LogContext: org.jboss.logmanager.Logger getLogger(java.lang.String)>(v1);
v4 = <org.slf4j.impl.Slf4jLoggerFactory: org.jboss.logmanager.Logger$AttachmentKey key>;
v5 = virtualinvoke v3.<org.jboss.logmanager.Logger: java.lang.Object getAttachment(org.jboss.logmanager.Logger$AttachmentKey)>(v4);
if v5 == null goto label1;
return v5;
label1:
v6 = staticinvoke <org.slf4j.impl.Slf4jLoggerFactory$lambda_getLogger_0__3221: java.security.PrivilegedAction bootstrap$(org.jboss.logmanager.Logger)>(v3);
v7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v6);
return v7;
}
static void <clinit>()
{
org.jboss.logmanager.Logger$AttachmentKey v0;
v0 = new org.jboss.logmanager.Logger$AttachmentKey;
specialinvoke v0.<org.jboss.logmanager.Logger$AttachmentKey: void <init>()>();
<org.slf4j.impl.Slf4jLoggerFactory: org.jboss.logmanager.Logger$AttachmentKey key> = v0;
return;
}
}