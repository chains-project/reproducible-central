public final class org.wildfly.common.array.Arrays2 extends java.lang.Object
{
private void <init>()
{
org.wildfly.common.array.Arrays2 v0;
v0 := @this: org.wildfly.common.array.Arrays2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static boolean equals(byte[], int, byte[], int, int)
{
byte[] v0, v2;
byte v11, v13;
int v1, v10, v12, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: byte[];
v3 := @parameter3: int;
v4 := @parameter4: int;
if v1 < 0 goto label1;
v5 = v1 + v4;
v6 = lengthof v0;
if v5 <= v6 goto label2;
label1:
return 0;
label2:
if v3 < 0 goto label3;
v7 = v3 + v4;
v8 = lengthof v2;
if v7 <= v8 goto label4;
label3:
return 0;
label4:
v9 = 0;
label5:
if v9 >= v4 goto label7;
v10 = v9 + v1;
v11 = v0[v10];
v12 = v9 + v3;
v13 = v2[v12];
if v11 == v13 goto label6;
return 0;
label6:
v9 = v9 + 1;
goto label5;
label7:
return 1;
}
public static boolean equals(byte[], int, byte[])
{
byte[] v0, v2;
int v1, v3;
boolean v4;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: byte[];
v3 = lengthof v2;
v4 = staticinvoke <org.wildfly.common.array.Arrays2: boolean equals(byte[],int,byte[],int,int)>(v0, v1, v2, 0, v3);
return v4;
}
public static boolean equals(char[], int, char[], int, int)
{
char v11, v13;
int v1, v10, v12, v3, v4, v5, v6, v7, v8, v9;
char[] v0, v2;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: char[];
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = v1 + v4;
v6 = lengthof v0;
if v5 <= v6 goto label1;
return 0;
label1:
v7 = v3 + v4;
v8 = lengthof v2;
if v7 <= v8 goto label2;
return 0;
label2:
v9 = 0;
label3:
if v9 >= v4 goto label5;
v10 = v9 + v1;
v11 = v0[v10];
v12 = v9 + v3;
v13 = v2[v12];
if v11 == v13 goto label4;
return 0;
label4:
v9 = v9 + 1;
goto label3;
label5:
return 1;
}
public static boolean equals(char[], int, char[])
{
int v1, v3;
char[] v0, v2;
boolean v4;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: char[];
v3 = lengthof v2;
v4 = staticinvoke <org.wildfly.common.array.Arrays2: boolean equals(char[],int,char[],int,int)>(v0, v1, v2, 0, v3);
return v4;
}
public static boolean equals(char[], int, java.lang.String, int, int)
{
char v11, v13;
int v1, v10, v12, v3, v4, v5, v6, v7, v8, v9;
char[] v0;
java.lang.String v2;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = v1 + v4;
v6 = lengthof v0;
if v5 <= v6 goto label1;
return 0;
label1:
v7 = v3 + v4;
v8 = virtualinvoke v2.<java.lang.String: int length()>();
if v7 <= v8 goto label2;
return 0;
label2:
v9 = 0;
label3:
if v9 >= v4 goto label5;
v10 = v9 + v1;
v11 = v0[v10];
v12 = v9 + v3;
v13 = virtualinvoke v2.<java.lang.String: char charAt(int)>(v12);
if v11 == v13 goto label4;
return 0;
label4:
v9 = v9 + 1;
goto label3;
label5:
return 1;
}
public static boolean equals(char[], int, java.lang.String)
{
int v1, v3;
char[] v0;
java.lang.String v2;
boolean v4;
v0 := @parameter0: char[];
v1 := @parameter1: int;
v2 := @parameter2: java.lang.String;
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = staticinvoke <org.wildfly.common.array.Arrays2: boolean equals(char[],int,java.lang.String,int,int)>(v0, v1, v2, 0, v3);
return v4;
}
public static boolean equals(java.lang.String, int, char[])
{
int v1, v3;
char[] v2;
java.lang.String v0;
boolean v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: char[];
v3 = lengthof v2;
v4 = staticinvoke <org.wildfly.common.array.Arrays2: boolean equals(char[],int,java.lang.String,int,int)>(v2, 0, v0, v1, v3);
return v4;
}
public static boolean equals(java.lang.String, char[])
{
char[] v1;
java.lang.String v0;
boolean v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: char[];
v2 = staticinvoke <org.wildfly.common.array.Arrays2: boolean equals(java.lang.String,int,char[])>(v0, 0, v1);
return v2;
}
public static transient java.lang.Object[] of(java.lang.Object[])
{
java.lang.Object[] v0;
v0 := @parameter0: java.lang.Object[];
return v0;
}
private static char hex(int)
{
int v0, v1, v2, v3;
v0 := @parameter0: int;
if v0 >= 10 goto label1;
v1 = 48 + v0;
return v1;
label1:
v2 = 97 + v0;
v3 = v2 - 10;
return v3;
}
public static java.lang.String toString(byte[])
{
byte[] v0;
char v12, v9;
short v7;
byte v11, v6;
int v2, v3, v4, v5, v8;
java.lang.StringBuilder v1, v10;
java.lang.String v13;
v0 := @parameter0: byte[];
v1 = new java.lang.StringBuilder;
v2 = lengthof v0;
v3 = v2 * 2;
specialinvoke v1.<java.lang.StringBuilder: void <init>(int)>(v3);
v4 = lengthof v0;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v0[v5];
v7 = v6 & 240;
v8 = v7 >> 4;
v9 = staticinvoke <org.wildfly.common.array.Arrays2: char hex(int)>(v8);
v10 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v9);
v11 = v6 & 15;
v12 = staticinvoke <org.wildfly.common.array.Arrays2: char hex(int)>(v11);
virtualinvoke v10.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v12);
v5 = v5 + 1;
goto label1;
label2:
v13 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v13;
}
public static int indexOf(byte[], int, int, int)
{
byte[] v0;
byte v6, v9;
int v1, v2, v3, v4, v5, v7, v8;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2 + v4;
v6 = v0[v5];
if v6 != v9 goto label2;
v7 = v2 + v4;
return v7;
label2:
v4 = v4 + 1;
goto label1;
label3:
v8 = (int) -1;
return v8;
}
public static int indexOf(byte[], int, int)
{
byte[] v0;
int v1, v2, v3, v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = lengthof v0;
v4 = v3 - v2;
v5 = staticinvoke <org.wildfly.common.array.Arrays2: int indexOf(byte[],int,int,int)>(v0, v1, v2, v4);
return v5;
}
public static int indexOf(byte[], int)
{
byte[] v0;
int v1, v2, v3;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = lengthof v0;
v3 = staticinvoke <org.wildfly.common.array.Arrays2: int indexOf(byte[],int,int,int)>(v0, v1, 0, v2);
return v3;
}
public static java.lang.Object[] createArray(java.lang.Class, int)
{
int v1;
java.lang.Class v0;
java.lang.Object v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: int;
v2 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v0, v1);
return v2;
}
public static java.lang.Object[] compactNulls(java.lang.Object[])
{
java.lang.Object[] v0, v10;
int v1, v2, v4, v5, v6, v8, v9;
java.lang.Object v3, v7;
v0 := @parameter0: java.lang.Object[];
v1 = 0;
label1:
v2 = v1;
v1 = v1 + 1;
v3 = v0[v2];
if v3 == null goto label2;
v4 = lengthof v0;
if v1 != v4 goto label1;
return v0;
label2:
v5 = v1 - 1;
label3:
v6 = v1;
v1 = v1 + 1;
v7 = v0[v6];
if v7 == null goto label4;
v8 = v5;
v5 = v5 + 1;
v0[v8] = v7;
label4:
v9 = lengthof v0;
if v1 != v9 goto label3;
v10 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v0, v5);
return v10;
}
public static java.lang.String objectToString(java.lang.Object)
{
int v6, v7;
java.lang.Class v3;
java.lang.Object v0, v8;
java.lang.StringBuilder v5;
java.lang.String v10, v11, v2, v9;
boolean v1, v4;
v0 := @parameter0: java.lang.Object;
if v0 != null goto label1;
return "null";
label1:
v1 = v0 instanceof java.lang.Object[];
if v1 == 0 goto label2;
v2 = staticinvoke <java.util.Arrays: java.lang.String deepToString(java.lang.Object[])>(v0);
return v2;
label2:
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: boolean isArray()>();
if v4 == 0 goto label6;
v5 = new java.lang.StringBuilder;
specialinvoke v5.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
v6 = 0;
label3:
v7 = staticinvoke <java.lang.reflect.Array: int getLength(java.lang.Object)>(v0);
if v6 >= v7 goto label5;
if v6 == 0 goto label4;
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label4:
v8 = staticinvoke <java.lang.reflect.Array: java.lang.Object get(java.lang.Object,int)>(v0, v6);
v9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v8);
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v9);
v6 = v6 + 1;
goto label3;
label5:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
v10 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
return v10;
label6:
v11 = virtualinvoke v0.<java.lang.Object: java.lang.String toString()>();
return v11;
}
}