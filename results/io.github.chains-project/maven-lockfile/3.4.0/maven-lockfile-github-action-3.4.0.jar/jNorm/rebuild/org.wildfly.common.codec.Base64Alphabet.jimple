public abstract class org.wildfly.common.codec.Base64Alphabet extends org.wildfly.common.codec.Alphabet
{
public static final org.wildfly.common.codec.Base64Alphabet STANDARD;
protected void <init>(boolean)
{
boolean v1;
org.wildfly.common.codec.Base64Alphabet v0;
v0 := @this: org.wildfly.common.codec.Base64Alphabet;
v1 := @parameter0: boolean;
specialinvoke v0.<org.wildfly.common.codec.Alphabet: void <init>(boolean)>(v1);
return;
}
public abstract int encode(int);
public abstract int decode(int);
static void <clinit>()
{
org.wildfly.common.codec.Base64Alphabet$1 v0;
v0 = new org.wildfly.common.codec.Base64Alphabet$1;
specialinvoke v0.<org.wildfly.common.codec.Base64Alphabet$1: void <init>(boolean)>(0);
<org.wildfly.common.codec.Base64Alphabet: org.wildfly.common.codec.Base64Alphabet STANDARD> = v0;
return;
}
}