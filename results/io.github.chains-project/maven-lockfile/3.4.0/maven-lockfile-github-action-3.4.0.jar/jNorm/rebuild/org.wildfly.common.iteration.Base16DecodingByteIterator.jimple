final class org.wildfly.common.iteration.Base16DecodingByteIterator extends org.wildfly.common.iteration.ByteIterator
{
private final org.wildfly.common.iteration.CodePointIterator iter;
private int b;
private long offset;
private boolean havePair;
void <init>(org.wildfly.common.iteration.CodePointIterator)
{
org.wildfly.common.iteration.CodePointIterator v1;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 := @parameter0: org.wildfly.common.iteration.CodePointIterator;
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter> = v1;
return;
}
private int calc(int, int)
{
org.wildfly.common.codec.DecodeException v8;
org.wildfly.common._private.CommonMessages v7;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
int v1, v10, v11, v2, v3, v4, v5, v6, v9;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <java.lang.Character: int digit(int,int)>(v1, 16);
v4 = staticinvoke <java.lang.Character: int digit(int,int)>(v2, 16);
v5 = (int) -1;
if v3 == v5 goto label1;
v6 = (int) -1;
if v4 != v6 goto label2;
label1:
v7 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v8 = interfaceinvoke v7.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException invalidHexCharacter()>();
throw v8;
label2:
v9 = v3 << 4;
v10 = v9 | v4;
v11 = v10 & 255;
return v11;
}
public boolean hasNext()
{
org.wildfly.common.iteration.CodePointIterator v10, v2, v4, v6;
org.wildfly.common.codec.DecodeException v9;
org.wildfly.common._private.CommonMessages v8;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
int v11, v12, v5;
boolean v1, v3, v7;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean havePair>;
if v1 == 0 goto label1;
return 1;
label1:
v2 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v3 = virtualinvoke v2.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v3 != 0 goto label2;
return 0;
label2:
v4 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.CodePointIterator: int next()>();
v6 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v7 = virtualinvoke v6.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v7 != 0 goto label3;
v8 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v9 = interfaceinvoke v8.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException expectedEvenNumberOfHexCharacters()>();
throw v9;
label3:
v10 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v11 = virtualinvoke v10.<org.wildfly.common.iteration.CodePointIterator: int next()>();
v12 = specialinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int calc(int,int)>(v5, v11);
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int b> = v12;
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean havePair> = 1;
return 1;
}
public boolean hasPrevious()
{
byte v2;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
long v1;
boolean v3;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: long offset>;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public int next() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
int v5;
long v3, v4;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: long offset>;
v4 = v3 + 1L;
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: long offset> = v4;
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean havePair> = 0;
v5 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int b>;
return v5;
}
public int peekNext() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
int v3;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int b>;
return v3;
}
public int previous() throws java.util.NoSuchElementException
{
long v8, v9;
org.wildfly.common.iteration.CodePointIterator v3, v5;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
int v10, v4, v6, v7;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v4 = virtualinvoke v3.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v5 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v6 = virtualinvoke v5.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v7 = specialinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int calc(int,int)>(v6, v4);
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int b> = v7;
v8 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: long offset>;
v9 = v8 - 1L;
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: long offset> = v9;
v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean havePair> = 1;
v10 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int b>;
return v10;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.CodePointIterator v3, v5, v7;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
int v4, v6, v8;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v4 = virtualinvoke v3.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v5 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v6 = virtualinvoke v5.<org.wildfly.common.iteration.CodePointIterator: int peekPrevious()>();
v7 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v7.<org.wildfly.common.iteration.CodePointIterator: int next()>();
v8 = specialinvoke v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: int calc(int,int)>(v6, v4);
return v8;
}
public long getIndex()
{
long v1;
org.wildfly.common.iteration.Base16DecodingByteIterator v0;
v0 := @this: org.wildfly.common.iteration.Base16DecodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Base16DecodingByteIterator: long offset>;
return v1;
}
}