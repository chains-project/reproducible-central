final class org.wildfly.common.iteration.ByteArrayIterator extends org.wildfly.common.iteration.ByteIterator
{
private final int len;
private final byte[] bytes;
private final int offs;
private int idx;
void <init>(int, byte[], int)
{
byte[] v2;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v1, v3;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: int;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.ByteArrayIterator: int len> = v1;
v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes> = v2;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs> = v3;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = 0;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.ByteArrayIterator v0;
int v1, v2;
boolean v3;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
if v1 >= v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean hasPrevious()
{
int v1;
boolean v2;
org.wildfly.common.iteration.ByteArrayIterator v0;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
if v1 <= 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public int next()
{
byte[] v3;
short v9;
byte v8;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v4, v5, v6, v7;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteArrayIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v6 = v5 + 1;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v6;
v7 = v4 + v5;
v8 = v3[v7];
v9 = v8 & 255;
return v9;
}
public int previous()
{
byte[] v3;
short v9;
byte v8;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v4, v5, v6, v7;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteArrayIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v6 = v5 - 1;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v6;
v7 = v4 + v6;
v8 = v3[v7];
v9 = v8 & 255;
return v9;
}
public int peekNext() throws java.util.NoSuchElementException
{
byte[] v3;
short v8;
byte v7;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v4, v5, v6;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteArrayIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v6 = v4 + v5;
v7 = v3[v6];
v8 = v7 & 255;
return v8;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
byte[] v3;
short v9;
byte v8;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v4, v5, v6, v7;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.ByteArrayIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v6 = v4 + v5;
v7 = v6 - 1;
v8 = v3[v7];
v9 = v8 & 255;
return v9;
}
public long getIndex()
{
int v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
return v1;
}
public void update(java.security.MessageDigest) throws java.lang.IllegalStateException
{
byte[] v2;
java.security.MessageDigest v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: java.security.MessageDigest;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v5 = v3 + v4;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v8 = v6 - v7;
virtualinvoke v1.<java.security.MessageDigest: void update(byte[],int,int)>(v2, v5, v8);
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v9;
return;
}
public org.wildfly.common.iteration.ByteIterator doFinal(java.security.MessageDigest) throws java.lang.IllegalStateException
{
byte[] v2;
org.wildfly.common.iteration.ByteIterator v3;
java.security.MessageDigest v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: java.security.MessageDigest;
virtualinvoke v0.<org.wildfly.common.iteration.ByteArrayIterator: void update(java.security.MessageDigest)>(v1);
v2 = virtualinvoke v1.<java.security.MessageDigest: byte[] digest()>();
v3 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[])>(v2);
return v3;
}
public void update(javax.crypto.Mac) throws java.lang.IllegalStateException
{
byte[] v2;
javax.crypto.Mac v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: javax.crypto.Mac;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v5 = v3 + v4;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v8 = v6 - v7;
virtualinvoke v1.<javax.crypto.Mac: void update(byte[],int,int)>(v2, v5, v8);
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v9;
return;
}
public org.wildfly.common.iteration.ByteIterator doFinal(javax.crypto.Mac) throws java.lang.IllegalStateException
{
byte[] v2;
org.wildfly.common.iteration.ByteIterator v3;
org.wildfly.common.iteration.ByteArrayIterator v0;
javax.crypto.Mac v1;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: javax.crypto.Mac;
virtualinvoke v0.<org.wildfly.common.iteration.ByteArrayIterator: void update(javax.crypto.Mac)>(v1);
v2 = virtualinvoke v1.<javax.crypto.Mac: byte[] doFinal()>();
v3 = staticinvoke <org.wildfly.common.iteration.ByteIterator: org.wildfly.common.iteration.ByteIterator ofBytes(byte[])>(v2);
return v3;
}
public void update(java.security.Signature) throws java.security.SignatureException
{
byte[] v2;
java.security.Signature v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: java.security.Signature;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v5 = v3 + v4;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v8 = v6 - v7;
virtualinvoke v1.<java.security.Signature: void update(byte[],int,int)>(v2, v5, v8);
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v9;
return;
}
public boolean verify(java.security.Signature) throws java.security.SignatureException
{
java.lang.Throwable v11;
byte[] v2;
java.security.Signature v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v10, v12, v3, v4, v5, v6, v7, v8;
boolean v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: java.security.Signature;
label1:
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v5 = v3 + v4;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v8 = v6 - v7;
v9 = virtualinvoke v1.<java.security.Signature: boolean verify(byte[],int,int)>(v2, v5, v8);
label2:
v10 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v10;
return v9;
label3:
v11 := @caughtexception;
v12 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v12;
throw v11;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.io.ByteArrayOutputStream drainTo(java.io.ByteArrayOutputStream)
{
byte[] v2;
java.io.ByteArrayOutputStream v1;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v3, v4, v5, v6, v7, v8, v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: java.io.ByteArrayOutputStream;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v5 = v3 + v4;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v8 = v6 - v7;
virtualinvoke v1.<java.io.ByteArrayOutputStream: void write(byte[],int,int)>(v2, v5, v8);
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v9;
return v1;
}
public byte[] drain()
{
java.lang.Throwable v10;
byte[] v1, v8;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v11, v2, v3, v4, v5, v6, v7, v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
label1:
v1 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v4 = v2 + v3;
v5 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v5 + v6;
v8 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(v1, v4, v7);
label2:
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v9;
return v8;
label3:
v10 := @caughtexception;
v11 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v11;
throw v10;
catch java.lang.Throwable from label1 to label2 with label3;
}
public int drain(byte[], int, int)
{
byte[] v1, v8;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v10, v11, v12, v2, v3, v4, v5, v6, v7, v9;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v5 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v6 = v4 - v5;
v7 = staticinvoke <java.lang.Math: int min(int,int)>(v6, v3);
v8 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v10 = v2 + v9;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v8, v10, v1, v2, v7);
v11 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v12 = v11 + v7;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v12;
return v7;
}
public java.lang.String drainToUtf8(int)
{
byte[] v7;
java.nio.charset.Charset v9;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v1, v10, v11, v2, v3, v4, v5, v8;
java.lang.String v6;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v4 = v2 - v3;
v5 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v1);
v6 = new java.lang.String;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v8 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(v7, v8, v5, v9);
v10 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v11 = v10 + v5;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v11;
return v6;
}
public java.lang.String drainToLatin1(int)
{
byte[] v7;
java.nio.charset.Charset v9;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v1, v10, v11, v2, v3, v4, v5, v8;
java.lang.String v6;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v4 = v2 - v3;
v5 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v1);
v6 = new java.lang.String;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v8 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v9 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset ISO_8859_1>;
specialinvoke v6.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(v7, v8, v5, v9);
v10 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v11 = v10 + v5;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v11;
return v6;
}
public org.wildfly.common.bytes.ByteStringBuilder appendTo(org.wildfly.common.bytes.ByteStringBuilder)
{
byte[] v2;
org.wildfly.common.iteration.ByteArrayIterator v0;
int v3, v4, v5, v6, v7, v8, v9;
org.wildfly.common.bytes.ByteStringBuilder v1;
v0 := @this: org.wildfly.common.iteration.ByteArrayIterator;
v1 := @parameter0: org.wildfly.common.bytes.ByteStringBuilder;
v2 = v0.<org.wildfly.common.iteration.ByteArrayIterator: byte[] bytes>;
v3 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int offs>;
v4 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v5 = v3 + v4;
v6 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v7 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx>;
v8 = v6 - v7;
virtualinvoke v1.<org.wildfly.common.bytes.ByteStringBuilder: org.wildfly.common.bytes.ByteStringBuilder append(byte[],int,int)>(v2, v5, v8);
v9 = v0.<org.wildfly.common.iteration.ByteArrayIterator: int len>;
v0.<org.wildfly.common.iteration.ByteArrayIterator: int idx> = v9;
return v1;
}
}