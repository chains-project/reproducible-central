final class org.wildfly.common.iteration.DelimitedByteIterator extends org.wildfly.common.iteration.ByteIterator
{
private final org.wildfly.common.iteration.ByteIterator iter;
private final int[] delims;
long offset;
transient void <init>(org.wildfly.common.iteration.ByteIterator, int[])
{
org.wildfly.common.iteration.ByteIterator v1;
int[] v2;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 := @parameter0: org.wildfly.common.iteration.ByteIterator;
v2 := @parameter1: int[];
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter> = v1;
v0.<org.wildfly.common.iteration.DelimitedByteIterator: int[] delims> = v2;
v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset> = 0L;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.ByteIterator v1, v3;
int v4;
boolean v2, v5, v6;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v2 = virtualinvoke v1.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v2 == 0 goto label1;
v3 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v4 = virtualinvoke v3.<org.wildfly.common.iteration.ByteIterator: int peekNext()>();
v5 = specialinvoke v0.<org.wildfly.common.iteration.DelimitedByteIterator: boolean isDelim(int)>(v4);
if v5 != 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public boolean hasPrevious()
{
byte v2;
long v1;
boolean v3;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset>;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public int next()
{
org.wildfly.common.iteration.ByteIterator v5;
int v6;
long v3, v4;
java.util.NoSuchElementException v2;
boolean v1;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.DelimitedByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset>;
v4 = v3 + 1L;
v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset> = v4;
v5 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v6 = virtualinvoke v5.<org.wildfly.common.iteration.ByteIterator: int next()>();
return v6;
}
public int peekNext() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v3;
int v4;
java.util.NoSuchElementException v2;
boolean v1;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.DelimitedByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v4 = virtualinvoke v3.<org.wildfly.common.iteration.ByteIterator: int peekNext()>();
return v4;
}
public int previous()
{
org.wildfly.common.iteration.ByteIterator v5;
int v6;
long v3, v4;
java.util.NoSuchElementException v2;
boolean v1;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.DelimitedByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset>;
v4 = v3 - 1L;
v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset> = v4;
v5 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v6 = virtualinvoke v5.<org.wildfly.common.iteration.ByteIterator: int previous()>();
return v6;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v3;
int v4;
java.util.NoSuchElementException v2;
boolean v1;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.DelimitedByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v4 = virtualinvoke v3.<org.wildfly.common.iteration.ByteIterator: int peekPrevious()>();
return v4;
}
public long getIndex()
{
long v1;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: long offset>;
return v1;
}
private boolean isDelim(int)
{
int[] v2;
int v1, v3, v4, v5;
org.wildfly.common.iteration.DelimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.DelimitedByteIterator;
v1 := @parameter0: int;
v2 = v0.<org.wildfly.common.iteration.DelimitedByteIterator: int[] delims>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
if v5 != v1 goto label2;
return 1;
label2:
v4 = v4 + 1;
goto label1;
label3:
return 0;
}
}