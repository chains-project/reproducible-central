public final class org.wildfly.common.os.ProcessRedirect extends java.lang.Object
{
private void <init>()
{
org.wildfly.common.os.ProcessRedirect v0;
v0 := @this: org.wildfly.common.os.ProcessRedirect;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.ProcessBuilder$Redirect discard()
{
java.lang.ProcessBuilder$Redirect v3;
java.lang.String v2;
java.io.File v0;
boolean v1;
v0 = new java.io.File;
v1 = staticinvoke <org.wildfly.common.os.ProcessRedirect: boolean isWindows()>();
if v1 == 0 goto label1;
v2 = "NUL";
goto label2;
label1:
v2 = "/dev/null";
label2:
specialinvoke v0.<java.io.File: void <init>(java.lang.String)>(v2);
v3 = staticinvoke <java.lang.ProcessBuilder$Redirect: java.lang.ProcessBuilder$Redirect 'to'(java.io.File)>(v0);
return v3;
}
private static boolean isWindows()
{
java.util.Locale v2;
java.lang.String v1, v3;
java.lang.SecurityManager v0;
boolean v4;
v0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v0 != null goto label1;
v1 = staticinvoke <org.wildfly.common.os.ProcessRedirect: java.lang.String getOsName()>();
goto label2;
label1:
v1 = staticinvoke <org.wildfly.common.os.ProcessRedirect: java.lang.String getOsNamePrivileged()>();
label2:
v2 = <java.util.Locale: java.util.Locale ROOT>;
v3 = virtualinvoke v1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v2);
v4 = virtualinvoke v3.<java.lang.String: boolean contains(java.lang.CharSequence)>("windows");
return v4;
}
private static java.lang.String getOsNamePrivileged()
{
org.wildfly.common.os.ProcessRedirect$1 v0;
java.lang.Object v1;
v0 = new org.wildfly.common.os.ProcessRedirect$1;
specialinvoke v0.<org.wildfly.common.os.ProcessRedirect$1: void <init>()>();
v1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v0);
return v1;
}
private static java.lang.String getOsName()
{
java.lang.String v0;
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String,java.lang.String)>("os.name", "unknown");
return v0;
}
}