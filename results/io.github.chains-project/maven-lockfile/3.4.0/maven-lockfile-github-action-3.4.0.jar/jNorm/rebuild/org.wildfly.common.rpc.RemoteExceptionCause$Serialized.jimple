final class org.wildfly.common.rpc.RemoteExceptionCause$Serialized extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
final java.lang.String m;
final java.lang.String cn;
final org.wildfly.common.rpc.RemoteExceptionCause c;
final org.wildfly.common.rpc.RemoteExceptionCause[] s;
final java.lang.StackTraceElement[] st;
final java.lang.String[] f;
void <init>(java.lang.String, java.lang.String, org.wildfly.common.rpc.RemoteExceptionCause, org.wildfly.common.rpc.RemoteExceptionCause[], java.lang.StackTraceElement[], java.lang.String[])
{
java.lang.StackTraceElement[] v5;
org.wildfly.common.rpc.RemoteExceptionCause$Serialized v0;
java.lang.String[] v6;
org.wildfly.common.rpc.RemoteExceptionCause v3;
java.lang.String v1, v2;
org.wildfly.common.rpc.RemoteExceptionCause[] v4;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause$Serialized;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.wildfly.common.rpc.RemoteExceptionCause;
v4 := @parameter3: org.wildfly.common.rpc.RemoteExceptionCause[];
v5 := @parameter4: java.lang.StackTraceElement[];
v6 := @parameter5: java.lang.String[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String m> = v1;
v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String cn> = v2;
v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: org.wildfly.common.rpc.RemoteExceptionCause c> = v3;
v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: org.wildfly.common.rpc.RemoteExceptionCause[] s> = v4;
v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.StackTraceElement[] st> = v5;
v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f> = v6;
return;
}
java.lang.Object readResolve()
{
java.lang.IllegalStateException v7;
org.wildfly.common.rpc.RemoteExceptionCause$Serialized v0;
java.lang.String[] v1, v10, v14, v16, v3, v8;
org.wildfly.common._private.CommonMessages v6;
java.util.Map v2;
int v13, v17, v25, v26, v4, v5;
java.lang.String v11, v15, v18, v20, v22, v9;
org.wildfly.common.rpc.RemoteExceptionCause v19, v21, v27;
java.lang.StackTraceElement[] v23;
java.util.TreeMap v12;
org.wildfly.common.rpc.RemoteExceptionCause[] v24;
v0 := @this: org.wildfly.common.rpc.RemoteExceptionCause$Serialized;
v1 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label7;
label1:
v3 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f>;
v4 = lengthof v3;
v5 = v4 & 1;
if v5 == 0 goto label2;
v6 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v7 = interfaceinvoke v6.<org.wildfly.common._private.CommonMessages: java.lang.IllegalStateException invalidOddFields()>();
throw v7;
label2:
if v4 != 0 goto label3;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label7;
label3:
if v4 != 2 goto label4;
v8 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f>;
v9 = v8[0];
v10 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f>;
v11 = v10[1];
v2 = staticinvoke <java.util.Collections: java.util.Map singletonMap(java.lang.Object,java.lang.Object)>(v9, v11);
goto label7;
label4:
v12 = new java.util.TreeMap;
specialinvoke v12.<java.util.TreeMap: void <init>()>();
v13 = 0;
label5:
if v13 >= v4 goto label6;
v14 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f>;
v15 = v14[v13];
v16 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String[] f>;
v17 = v13 + 1;
v18 = v16[v17];
virtualinvoke v12.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v18);
v13 = v13 + 2;
goto label5;
label6:
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v12);
label7:
v19 = new org.wildfly.common.rpc.RemoteExceptionCause;
v20 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String m>;
v21 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: org.wildfly.common.rpc.RemoteExceptionCause c>;
v22 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.String cn>;
specialinvoke v19.<org.wildfly.common.rpc.RemoteExceptionCause: void <init>(java.lang.String,org.wildfly.common.rpc.RemoteExceptionCause,java.lang.String,java.util.Map,boolean)>(v20, v21, v22, v2, 0);
v23 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: java.lang.StackTraceElement[] st>;
virtualinvoke v19.<org.wildfly.common.rpc.RemoteExceptionCause: void setStackTrace(java.lang.StackTraceElement[])>(v23);
v24 = v0.<org.wildfly.common.rpc.RemoteExceptionCause$Serialized: org.wildfly.common.rpc.RemoteExceptionCause[] s>;
if v24 == null goto label9;
v25 = lengthof v24;
v26 = 0;
label8:
if v26 >= v25 goto label9;
v27 = v24[v26];
virtualinvoke v19.<org.wildfly.common.rpc.RemoteExceptionCause: void addSuppressed(java.lang.Throwable)>(v27);
v26 = v26 + 1;
goto label8;
label9:
return v19;
}
}