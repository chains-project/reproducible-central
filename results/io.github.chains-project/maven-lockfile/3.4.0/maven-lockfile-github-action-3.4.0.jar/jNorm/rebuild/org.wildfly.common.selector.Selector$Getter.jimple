public final class org.wildfly.common.selector.Selector$Getter extends java.lang.Object
{
private final org.wildfly.common.selector.Selector$Holder holder;
void <init>(org.wildfly.common.selector.Selector$Holder)
{
org.wildfly.common.selector.Selector$Getter v0;
org.wildfly.common.selector.Selector$Holder v1;
v0 := @this: org.wildfly.common.selector.Selector$Getter;
v1 := @parameter0: org.wildfly.common.selector.Selector$Holder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.wildfly.common.selector.Selector$Getter: org.wildfly.common.selector.Selector$Holder holder> = v1;
return;
}
public org.wildfly.common.selector.Selector getSelector()
{
org.wildfly.common.selector.Selector$Getter v0;
org.wildfly.common.selector.Selector v3;
org.wildfly.common.selector.Selector$Holder v1;
java.lang.Object v2;
v0 := @this: org.wildfly.common.selector.Selector$Getter;
v1 = v0.<org.wildfly.common.selector.Selector$Getter: org.wildfly.common.selector.Selector$Holder holder>;
v2 = virtualinvoke v1.<org.wildfly.common.selector.Selector$Holder: java.lang.Object get()>();
if v2 != null goto label1;
v3 = staticinvoke <org.wildfly.common.selector.Selector: org.wildfly.common.selector.Selector nullSelector()>();
goto label2;
label1:
v3 = v2;
label2:
return v3;
}
}