public final enum class org.yaml.snakeyaml.DumperOptions$LineBreak extends java.lang.Enum
{
public static final enum org.yaml.snakeyaml.DumperOptions$LineBreak WIN;
public static final enum org.yaml.snakeyaml.DumperOptions$LineBreak MAC;
public static final enum org.yaml.snakeyaml.DumperOptions$LineBreak UNIX;
private final java.lang.String lineBreak;
private static final org.yaml.snakeyaml.DumperOptions$LineBreak[] $VALUES;
public static org.yaml.snakeyaml.DumperOptions$LineBreak[] values()
{
java.lang.Object v1;
org.yaml.snakeyaml.DumperOptions$LineBreak[] v0;
v0 = <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.yaml.snakeyaml.DumperOptions$LineBreak valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/yaml/snakeyaml/DumperOptions$LineBreak;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String)
{
int v2;
org.yaml.snakeyaml.DumperOptions$LineBreak v0;
java.lang.String v1, v3;
v0 := @this: org.yaml.snakeyaml.DumperOptions$LineBreak;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<org.yaml.snakeyaml.DumperOptions$LineBreak: java.lang.String lineBreak> = v3;
return;
}
public java.lang.String getString()
{
org.yaml.snakeyaml.DumperOptions$LineBreak v0;
java.lang.String v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions$LineBreak;
v1 = v0.<org.yaml.snakeyaml.DumperOptions$LineBreak: java.lang.String lineBreak>;
return v1;
}
public java.lang.String toString()
{
org.yaml.snakeyaml.DumperOptions$LineBreak v0;
java.lang.String v1, v2;
v0 := @this: org.yaml.snakeyaml.DumperOptions$LineBreak;
v1 = virtualinvoke v0.<org.yaml.snakeyaml.DumperOptions$LineBreak: java.lang.String name()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Line break: \u0001");
return v2;
}
public static org.yaml.snakeyaml.DumperOptions$LineBreak getPlatformLineBreak()
{
org.yaml.snakeyaml.DumperOptions$LineBreak v4, v7;
org.yaml.snakeyaml.DumperOptions$LineBreak[] v1;
int v2, v3;
java.lang.String v0, v5;
boolean v6;
v0 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("line.separator");
v1 = staticinvoke <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = v4.<org.yaml.snakeyaml.DumperOptions$LineBreak: java.lang.String lineBreak>;
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v6 == 0 goto label2;
return v4;
label2:
v3 = v3 + 1;
goto label1;
label3:
v7 = <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak UNIX>;
return v7;
}
private static org.yaml.snakeyaml.DumperOptions$LineBreak[] $values()
{
org.yaml.snakeyaml.DumperOptions$LineBreak[] v0;
org.yaml.snakeyaml.DumperOptions$LineBreak v1, v2, v3;
v0 = newarray (org.yaml.snakeyaml.DumperOptions$LineBreak)[3];
v1 = <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak WIN>;
v0[0] = v1;
v2 = <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak MAC>;
v0[1] = v2;
v3 = <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak UNIX>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
org.yaml.snakeyaml.DumperOptions$LineBreak[] v3;
org.yaml.snakeyaml.DumperOptions$LineBreak v0, v1, v2;
v0 = new org.yaml.snakeyaml.DumperOptions$LineBreak;
specialinvoke v0.<org.yaml.snakeyaml.DumperOptions$LineBreak: void <init>(java.lang.String,int,java.lang.String)>("WIN", 0, "\r\n");
<org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak WIN> = v0;
v1 = new org.yaml.snakeyaml.DumperOptions$LineBreak;
specialinvoke v1.<org.yaml.snakeyaml.DumperOptions$LineBreak: void <init>(java.lang.String,int,java.lang.String)>("MAC", 1, "\r");
<org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak MAC> = v1;
v2 = new org.yaml.snakeyaml.DumperOptions$LineBreak;
specialinvoke v2.<org.yaml.snakeyaml.DumperOptions$LineBreak: void <init>(java.lang.String,int,java.lang.String)>("UNIX", 2, "\n");
<org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak UNIX> = v2;
v3 = staticinvoke <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak[] $values()>();
<org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak[] $VALUES> = v3;
return;
}
}