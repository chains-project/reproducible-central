public class org.yaml.snakeyaml.DumperOptions extends java.lang.Object
{
private org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultStyle;
private org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle;
private boolean canonical;
private boolean allowUnicode;
private boolean allowReadOnlyProperties;
private int indent;
private int indicatorIndent;
private boolean indentWithIndicator;
private int bestWidth;
private boolean splitLines;
private org.yaml.snakeyaml.DumperOptions$LineBreak lineBreak;
private boolean explicitStart;
private boolean explicitEnd;
private java.util.TimeZone timeZone;
private int maxSimpleKeyLength;
private boolean processComments;
private org.yaml.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle;
private org.yaml.snakeyaml.DumperOptions$Version version;
private java.util.Map tags;
private java.lang.Boolean prettyFlow;
private org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator;
public void <init>()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$NonPrintableStyle v4;
org.yaml.snakeyaml.DumperOptions$FlowStyle v2;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v1;
org.yaml.snakeyaml.DumperOptions$LineBreak v3;
java.lang.Boolean v5;
org.yaml.snakeyaml.serializer.NumberAnchorGenerator v6;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultStyle> = v1;
v2 = <org.yaml.snakeyaml.DumperOptions$FlowStyle: org.yaml.snakeyaml.DumperOptions$FlowStyle AUTO>;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle> = v2;
v0.<org.yaml.snakeyaml.DumperOptions: boolean canonical> = 0;
v0.<org.yaml.snakeyaml.DumperOptions: boolean allowUnicode> = 1;
v0.<org.yaml.snakeyaml.DumperOptions: boolean allowReadOnlyProperties> = 0;
v0.<org.yaml.snakeyaml.DumperOptions: int indent> = 2;
v0.<org.yaml.snakeyaml.DumperOptions: int indicatorIndent> = 0;
v0.<org.yaml.snakeyaml.DumperOptions: boolean indentWithIndicator> = 0;
v0.<org.yaml.snakeyaml.DumperOptions: int bestWidth> = 80;
v0.<org.yaml.snakeyaml.DumperOptions: boolean splitLines> = 1;
v3 = <org.yaml.snakeyaml.DumperOptions$LineBreak: org.yaml.snakeyaml.DumperOptions$LineBreak UNIX>;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$LineBreak lineBreak> = v3;
v0.<org.yaml.snakeyaml.DumperOptions: boolean explicitStart> = 0;
v0.<org.yaml.snakeyaml.DumperOptions: boolean explicitEnd> = 0;
v0.<org.yaml.snakeyaml.DumperOptions: java.util.TimeZone timeZone> = null;
v0.<org.yaml.snakeyaml.DumperOptions: int maxSimpleKeyLength> = 128;
v0.<org.yaml.snakeyaml.DumperOptions: boolean processComments> = 0;
v4 = <org.yaml.snakeyaml.DumperOptions$NonPrintableStyle: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle BINARY>;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle> = v4;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$Version version> = null;
v0.<org.yaml.snakeyaml.DumperOptions: java.util.Map tags> = null;
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v0.<org.yaml.snakeyaml.DumperOptions: java.lang.Boolean prettyFlow> = v5;
v6 = new org.yaml.snakeyaml.serializer.NumberAnchorGenerator;
specialinvoke v6.<org.yaml.snakeyaml.serializer.NumberAnchorGenerator: void <init>(int)>(0);
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator> = v6;
return;
}
public boolean isAllowUnicode()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean allowUnicode>;
return v1;
}
public void setAllowUnicode(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean allowUnicode> = v1;
return;
}
public org.yaml.snakeyaml.DumperOptions$ScalarStyle getDefaultScalarStyle()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultStyle>;
return v1;
}
public void setDefaultScalarStyle(org.yaml.snakeyaml.DumperOptions$ScalarStyle)
{
org.yaml.snakeyaml.DumperOptions v0;
java.lang.NullPointerException v2;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: org.yaml.snakeyaml.DumperOptions$ScalarStyle;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Use ScalarStyle enum.");
throw v2;
label1:
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$ScalarStyle defaultStyle> = v1;
return;
}
public void setIndent(int)
{
org.yaml.snakeyaml.DumperOptions v0;
int v1;
org.yaml.snakeyaml.error.YAMLException v2, v3;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: int;
if v1 >= 1 goto label1;
v2 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v2.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("Indent must be at least 1");
throw v2;
label1:
if v1 <= 10 goto label2;
v3 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v3.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("Indent must be at most 10");
throw v3;
label2:
v0.<org.yaml.snakeyaml.DumperOptions: int indent> = v1;
return;
}
public int getIndent()
{
int v1;
org.yaml.snakeyaml.DumperOptions v0;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: int indent>;
return v1;
}
public void setIndicatorIndent(int)
{
org.yaml.snakeyaml.DumperOptions v0;
int v1;
org.yaml.snakeyaml.error.YAMLException v2, v3;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: int;
if v1 >= 0 goto label1;
v2 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v2.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("Indicator indent must be non-negative.");
throw v2;
label1:
if v1 <= 9 goto label2;
v3 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v3.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("Indicator indent must be at most Emitter.MAX_INDENT-1: 9");
throw v3;
label2:
v0.<org.yaml.snakeyaml.DumperOptions: int indicatorIndent> = v1;
return;
}
public int getIndicatorIndent()
{
int v1;
org.yaml.snakeyaml.DumperOptions v0;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: int indicatorIndent>;
return v1;
}
public boolean getIndentWithIndicator()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean indentWithIndicator>;
return v1;
}
public void setIndentWithIndicator(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean indentWithIndicator> = v1;
return;
}
public void setVersion(org.yaml.snakeyaml.DumperOptions$Version)
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$Version v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: org.yaml.snakeyaml.DumperOptions$Version;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$Version version> = v1;
return;
}
public org.yaml.snakeyaml.DumperOptions$Version getVersion()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$Version v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$Version version>;
return v1;
}
public void setCanonical(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean canonical> = v1;
return;
}
public boolean isCanonical()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean canonical>;
return v1;
}
public void setPrettyFlow(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
java.lang.Boolean v2;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.yaml.snakeyaml.DumperOptions: java.lang.Boolean prettyFlow> = v2;
return;
}
public boolean isPrettyFlow()
{
org.yaml.snakeyaml.DumperOptions v0;
java.lang.Boolean v1;
boolean v2;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: java.lang.Boolean prettyFlow>;
v2 = virtualinvoke v1.<java.lang.Boolean: boolean booleanValue()>();
return v2;
}
public void setWidth(int)
{
int v1;
org.yaml.snakeyaml.DumperOptions v0;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: int;
v0.<org.yaml.snakeyaml.DumperOptions: int bestWidth> = v1;
return;
}
public int getWidth()
{
int v1;
org.yaml.snakeyaml.DumperOptions v0;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: int bestWidth>;
return v1;
}
public void setSplitLines(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean splitLines> = v1;
return;
}
public boolean getSplitLines()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean splitLines>;
return v1;
}
public org.yaml.snakeyaml.DumperOptions$LineBreak getLineBreak()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$LineBreak v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$LineBreak lineBreak>;
return v1;
}
public void setDefaultFlowStyle(org.yaml.snakeyaml.DumperOptions$FlowStyle)
{
org.yaml.snakeyaml.DumperOptions v0;
java.lang.NullPointerException v2;
org.yaml.snakeyaml.DumperOptions$FlowStyle v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: org.yaml.snakeyaml.DumperOptions$FlowStyle;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Use FlowStyle enum.");
throw v2;
label1:
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle> = v1;
return;
}
public org.yaml.snakeyaml.DumperOptions$FlowStyle getDefaultFlowStyle()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$FlowStyle v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$FlowStyle defaultFlowStyle>;
return v1;
}
public void setLineBreak(org.yaml.snakeyaml.DumperOptions$LineBreak)
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$LineBreak v1;
java.lang.NullPointerException v2;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: org.yaml.snakeyaml.DumperOptions$LineBreak;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("Specify line break.");
throw v2;
label1:
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$LineBreak lineBreak> = v1;
return;
}
public boolean isExplicitStart()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean explicitStart>;
return v1;
}
public void setExplicitStart(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean explicitStart> = v1;
return;
}
public boolean isExplicitEnd()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean explicitEnd>;
return v1;
}
public void setExplicitEnd(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean explicitEnd> = v1;
return;
}
public java.util.Map getTags()
{
org.yaml.snakeyaml.DumperOptions v0;
java.util.Map v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: java.util.Map tags>;
return v1;
}
public void setTags(java.util.Map)
{
org.yaml.snakeyaml.DumperOptions v0;
java.util.Map v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: java.util.Map;
v0.<org.yaml.snakeyaml.DumperOptions: java.util.Map tags> = v1;
return;
}
public boolean isAllowReadOnlyProperties()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean allowReadOnlyProperties>;
return v1;
}
public void setAllowReadOnlyProperties(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean allowReadOnlyProperties> = v1;
return;
}
public java.util.TimeZone getTimeZone()
{
org.yaml.snakeyaml.DumperOptions v0;
java.util.TimeZone v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: java.util.TimeZone timeZone>;
return v1;
}
public void setTimeZone(java.util.TimeZone)
{
org.yaml.snakeyaml.DumperOptions v0;
java.util.TimeZone v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: java.util.TimeZone;
v0.<org.yaml.snakeyaml.DumperOptions: java.util.TimeZone timeZone> = v1;
return;
}
public org.yaml.snakeyaml.serializer.AnchorGenerator getAnchorGenerator()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.serializer.AnchorGenerator v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator>;
return v1;
}
public void setAnchorGenerator(org.yaml.snakeyaml.serializer.AnchorGenerator)
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.serializer.AnchorGenerator v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: org.yaml.snakeyaml.serializer.AnchorGenerator;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.serializer.AnchorGenerator anchorGenerator> = v1;
return;
}
public int getMaxSimpleKeyLength()
{
int v1;
org.yaml.snakeyaml.DumperOptions v0;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: int maxSimpleKeyLength>;
return v1;
}
public void setMaxSimpleKeyLength(int)
{
int v1;
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.error.YAMLException v2;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: int;
if v1 <= 1024 goto label1;
v2 = new org.yaml.snakeyaml.error.YAMLException;
specialinvoke v2.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>("The simple key must not span more than 1024 stream characters. See https://yaml.org/spec/1.1/#id934537");
throw v2;
label1:
v0.<org.yaml.snakeyaml.DumperOptions: int maxSimpleKeyLength> = v1;
return;
}
public void setProcessComments(boolean)
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: boolean;
v0.<org.yaml.snakeyaml.DumperOptions: boolean processComments> = v1;
return;
}
public boolean isProcessComments()
{
org.yaml.snakeyaml.DumperOptions v0;
boolean v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: boolean processComments>;
return v1;
}
public org.yaml.snakeyaml.DumperOptions$NonPrintableStyle getNonPrintableStyle()
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$NonPrintableStyle v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 = v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle>;
return v1;
}
public void setNonPrintableStyle(org.yaml.snakeyaml.DumperOptions$NonPrintableStyle)
{
org.yaml.snakeyaml.DumperOptions v0;
org.yaml.snakeyaml.DumperOptions$NonPrintableStyle v1;
v0 := @this: org.yaml.snakeyaml.DumperOptions;
v1 := @parameter0: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle;
v0.<org.yaml.snakeyaml.DumperOptions: org.yaml.snakeyaml.DumperOptions$NonPrintableStyle nonPrintableStyle> = v1;
return;
}
}