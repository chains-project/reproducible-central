public class org.yaml.snakeyaml.constructor.DuplicateKeyException extends org.yaml.snakeyaml.constructor.ConstructorException
{
protected void <init>(org.yaml.snakeyaml.error.Mark, java.lang.Object, org.yaml.snakeyaml.error.Mark)
{
org.yaml.snakeyaml.error.Mark v1, v3;
java.lang.Object v2;
java.lang.String v4;
org.yaml.snakeyaml.constructor.DuplicateKeyException v0;
v0 := @this: org.yaml.snakeyaml.constructor.DuplicateKeyException;
v1 := @parameter0: org.yaml.snakeyaml.error.Mark;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: org.yaml.snakeyaml.error.Mark;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("found duplicate key \u0001");
specialinvoke v0.<org.yaml.snakeyaml.constructor.ConstructorException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while constructing a mapping", v1, v4, v3);
return;
}
}