public class org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs extends org.yaml.snakeyaml.constructor.AbstractConstruct
{
final org.yaml.snakeyaml.constructor.SafeConstructor this$0;
public void <init>(org.yaml.snakeyaml.constructor.SafeConstructor)
{
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs v0;
org.yaml.snakeyaml.constructor.SafeConstructor v1;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs;
v1 := @parameter0: org.yaml.snakeyaml.constructor.SafeConstructor;
v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs: org.yaml.snakeyaml.constructor.SafeConstructor this$0> = v1;
specialinvoke v0.<org.yaml.snakeyaml.constructor.AbstractConstruct: void <init>()>();
return;
}
public java.lang.Object construct(org.yaml.snakeyaml.nodes.Node)
{
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs v0;
org.yaml.snakeyaml.nodes.Node v1, v31, v34, v40;
org.yaml.snakeyaml.constructor.SafeConstructor v35, v37;
org.yaml.snakeyaml.nodes.NodeId v18, v5;
boolean v13, v15, v2;
org.yaml.snakeyaml.constructor.ConstructorException v16, v23, v3;
java.util.List v11, v21, v25, v29, v32, v9;
org.yaml.snakeyaml.error.Mark v17, v20, v24, v28, v4, v7;
java.lang.Object[] v39;
java.util.ArrayList v8;
int v10, v22, v26;
java.lang.String v19, v27, v6;
java.util.Iterator v12;
java.lang.Object v14, v30, v33, v36, v38;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 = v1 instanceof org.yaml.snakeyaml.nodes.SequenceNode;
if v2 != 0 goto label1;
v3 = new org.yaml.snakeyaml.constructor.ConstructorException;
v4 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
v5 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.nodes.NodeId getNodeId()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.nodes.NodeId)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected a sequence, but found \u0001");
v7 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v3.<org.yaml.snakeyaml.constructor.ConstructorException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while constructing pairs", v4, v6, v7);
throw v3;
label1:
v8 = new java.util.ArrayList;
v9 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.SequenceNode: java.util.List getValue()>();
v10 = interfaceinvoke v9.<java.util.List: int size()>();
specialinvoke v8.<java.util.ArrayList: void <init>(int)>(v10);
v11 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.SequenceNode: java.util.List getValue()>();
v12 = interfaceinvoke v11.<java.util.List: java.util.Iterator iterator()>();
label2:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label5;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = v14 instanceof org.yaml.snakeyaml.nodes.MappingNode;
if v15 != 0 goto label3;
v16 = new org.yaml.snakeyaml.constructor.ConstructorException;
v17 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
v18 = virtualinvoke v14.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.nodes.NodeId getNodeId()>();
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.nodes.NodeId)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected a mapping of length 1, but found \u0001");
v20 = virtualinvoke v14.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v16.<org.yaml.snakeyaml.constructor.ConstructorException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while constructingpairs", v17, v19, v20);
throw v16;
label3:
v21 = virtualinvoke v40.<org.yaml.snakeyaml.nodes.MappingNode: java.util.List getValue()>();
v22 = interfaceinvoke v21.<java.util.List: int size()>();
if v22 == 1 goto label4;
v23 = new org.yaml.snakeyaml.constructor.ConstructorException;
v24 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.Node: org.yaml.snakeyaml.error.Mark getStartMark()>();
v25 = virtualinvoke v40.<org.yaml.snakeyaml.nodes.MappingNode: java.util.List getValue()>();
v26 = interfaceinvoke v25.<java.util.List: int size()>();
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected a single mapping item, but found \u0001 items");
v28 = virtualinvoke v40.<org.yaml.snakeyaml.nodes.MappingNode: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v23.<org.yaml.snakeyaml.constructor.ConstructorException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while constructing pairs", v24, v27, v28);
throw v23;
label4:
v29 = virtualinvoke v40.<org.yaml.snakeyaml.nodes.MappingNode: java.util.List getValue()>();
v30 = interfaceinvoke v29.<java.util.List: java.lang.Object get(int)>(0);
v31 = virtualinvoke v30.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node getKeyNode()>();
v32 = virtualinvoke v40.<org.yaml.snakeyaml.nodes.MappingNode: java.util.List getValue()>();
v33 = interfaceinvoke v32.<java.util.List: java.lang.Object get(int)>(0);
v34 = virtualinvoke v33.<org.yaml.snakeyaml.nodes.NodeTuple: org.yaml.snakeyaml.nodes.Node getValueNode()>();
v35 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v36 = virtualinvoke v35.<org.yaml.snakeyaml.constructor.SafeConstructor: java.lang.Object constructObject(org.yaml.snakeyaml.nodes.Node)>(v31);
v37 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlPairs: org.yaml.snakeyaml.constructor.SafeConstructor this$0>;
v38 = virtualinvoke v37.<org.yaml.snakeyaml.constructor.SafeConstructor: java.lang.Object constructObject(org.yaml.snakeyaml.nodes.Node)>(v34);
v39 = newarray (java.lang.Object)[2];
v39[0] = v36;
v39[1] = v38;
interfaceinvoke v8.<java.util.List: boolean add(java.lang.Object)>(v39);
goto label2;
label5:
return v8;
}
}