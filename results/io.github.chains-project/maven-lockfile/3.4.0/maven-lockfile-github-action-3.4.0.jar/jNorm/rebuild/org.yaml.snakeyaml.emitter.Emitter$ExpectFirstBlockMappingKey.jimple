class org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey v0;
org.yaml.snakeyaml.emitter.Emitter v1;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey v1;
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey v0;
org.yaml.snakeyaml.emitter.Emitter v2;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey;
v1 = new org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey;
v2 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstBlockMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v1.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey: void <init>(org.yaml.snakeyaml.emitter.Emitter,boolean)>(v2, 1);
virtualinvoke v1.<org.yaml.snakeyaml.emitter.Emitter$ExpectBlockMappingKey: void expect()>();
return;
}
}