class org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey v0;
org.yaml.snakeyaml.emitter.Emitter v1;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.events.Event v5, v6, v9;
org.yaml.snakeyaml.comments.CommentEventsCollector v18, v3;
boolean v10, v26, v32, v35, v39, v41;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue v50;
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey v0;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue v44;
int v28, v30;
java.lang.Boolean v25, v34, v38;
org.yaml.snakeyaml.util.ArrayStack v13, v22, v43, v49;
org.yaml.snakeyaml.emitter.Emitter v1, v11, v12, v15, v16, v17, v19, v2, v20, v21, v24, v27, v29, v31, v33, v36, v37, v4, v40, v42, v45, v46, v47, v48, v51, v52, v7, v8;
java.lang.Object v14, v23;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v2 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v3 = v2.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v4.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v6 = virtualinvoke v3.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEventsAndPoll(org.yaml.snakeyaml.events.Event)>(v5);
v1.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v6;
v7 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v7.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
v8 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v9 = v8.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v10 = v9 instanceof org.yaml.snakeyaml.events.MappingEndEvent;
if v10 == 0 goto label1;
v11 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v12 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v13 = v12.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack indents>;
v14 = virtualinvoke v13.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v11.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v14;
v15 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
staticinvoke <org.yaml.snakeyaml.emitter.Emitter: int access$2210(org.yaml.snakeyaml.emitter.Emitter)>(v15);
v16 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v16.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("}", 0, 0, 0);
v17 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v18 = v17.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
virtualinvoke v18.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.comments.CommentEventsCollector collectEvents()>();
v19 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v19.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
v20 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v21 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v22 = v21.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v23 = virtualinvoke v22.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v20.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v23;
goto label6;
label1:
v24 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v25 = v24.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v26 = virtualinvoke v25.<java.lang.Boolean: boolean booleanValue()>();
if v26 != 0 goto label3;
v27 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v28 = v27.<org.yaml.snakeyaml.emitter.Emitter: int column>;
v29 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v30 = v29.<org.yaml.snakeyaml.emitter.Emitter: int bestWidth>;
if v28 <= v30 goto label2;
v31 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v32 = v31.<org.yaml.snakeyaml.emitter.Emitter: boolean splitLines>;
if v32 != 0 goto label3;
label2:
v33 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v34 = v33.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v35 = virtualinvoke v34.<java.lang.Boolean: boolean booleanValue()>();
if v35 == 0 goto label4;
label3:
v36 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v36.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label4:
v37 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v38 = v37.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v39 = virtualinvoke v38.<java.lang.Boolean: boolean booleanValue()>();
if v39 != 0 goto label5;
v40 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v41 = specialinvoke v40.<org.yaml.snakeyaml.emitter.Emitter: boolean checkSimpleKey()>();
if v41 == 0 goto label5;
v42 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v43 = v42.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v44 = new org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue;
v45 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v44.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingSimpleValue: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v45);
virtualinvoke v43.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v44);
v46 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v46.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 1, 1);
goto label6;
label5:
v47 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v47.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("?", 1, 0, 0);
v48 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
v49 = v48.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v50 = new org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue;
v51 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v50.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowMappingValue: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v51);
virtualinvoke v49.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v50);
v52 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowMappingKey: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v52.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 1, 0);
label6:
return;
}
}