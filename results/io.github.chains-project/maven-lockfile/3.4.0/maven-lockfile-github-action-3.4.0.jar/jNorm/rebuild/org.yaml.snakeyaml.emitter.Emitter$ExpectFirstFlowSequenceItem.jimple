class org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem v0;
org.yaml.snakeyaml.emitter.Emitter v1;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem v0;
org.yaml.snakeyaml.events.Event v18, v2, v23, v47, v48;
org.yaml.snakeyaml.comments.CommentEventsCollector v11, v21, v45;
boolean v19, v27, v3, v33, v36;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem v40;
int v29, v31;
java.lang.Boolean v26, v35;
org.yaml.snakeyaml.util.ArrayStack v15, v39, v6;
org.yaml.snakeyaml.emitter.Emitter v1, v10, v12, v13, v14, v17, v20, v22, v24, v25, v28, v30, v32, v34, v37, v38, v4, v41, v42, v43, v44, v46, v49, v5, v8, v9;
java.lang.Object v16, v7;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v2 = v1.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v3 = v2 instanceof org.yaml.snakeyaml.events.SequenceEndEvent;
if v3 == 0 goto label1;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v6 = v5.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack indents>;
v7 = virtualinvoke v6.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v4.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v7;
v8 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
staticinvoke <org.yaml.snakeyaml.emitter.Emitter: int access$2210(org.yaml.snakeyaml.emitter.Emitter)>(v8);
v9 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v9.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("]", 0, 0, 0);
v10 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v11 = v10.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
virtualinvoke v11.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.comments.CommentEventsCollector collectEvents()>();
v12 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v12.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
v13 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v14 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v15 = v14.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v16 = virtualinvoke v15.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v13.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v16;
goto label6;
label1:
v17 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v18 = v17.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v19 = v18 instanceof org.yaml.snakeyaml.events.CommentEvent;
if v19 == 0 goto label2;
v20 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v21 = v20.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v22 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v23 = v22.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
virtualinvoke v21.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v23);
v24 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v24.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
goto label6;
label2:
v25 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v26 = v25.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v27 = virtualinvoke v26.<java.lang.Boolean: boolean booleanValue()>();
if v27 != 0 goto label4;
v28 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v29 = v28.<org.yaml.snakeyaml.emitter.Emitter: int column>;
v30 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v31 = v30.<org.yaml.snakeyaml.emitter.Emitter: int bestWidth>;
if v29 <= v31 goto label3;
v32 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v33 = v32.<org.yaml.snakeyaml.emitter.Emitter: boolean splitLines>;
if v33 != 0 goto label4;
label3:
v34 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v35 = v34.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v36 = virtualinvoke v35.<java.lang.Boolean: boolean booleanValue()>();
if v36 == 0 goto label5;
label4:
v37 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v37.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label5:
v38 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v39 = v38.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v40 = new org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem;
v41 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v40.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v41);
virtualinvoke v39.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v40);
v42 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v42.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 0, 0);
v43 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v44 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v45 = v44.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
v46 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v47 = v46.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v48 = virtualinvoke v45.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v47);
v43.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v48;
v49 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFirstFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v49.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
label6:
return;
}
}