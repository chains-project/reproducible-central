class org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter v1;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem v0;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.events.Event v2, v31, v37, v38, v63, v64;
org.yaml.snakeyaml.comments.CommentEventsCollector v20, v35, v61;
org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem v0, v56;
boolean v11, v16, v24, v3, v32, v43, v49, v52;
int v45, v47;
java.lang.Boolean v10, v15, v23, v42, v51;
org.yaml.snakeyaml.util.ArrayStack v28, v55, v6;
org.yaml.snakeyaml.emitter.Emitter v1, v12, v13, v14, v17, v18, v19, v21, v22, v25, v26, v27, v30, v33, v34, v36, v39, v4, v40, v41, v44, v46, v48, v5, v50, v53, v54, v57, v58, v59, v60, v62, v65, v8, v9;
java.lang.Object v29, v7;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v2 = v1.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v3 = v2 instanceof org.yaml.snakeyaml.events.SequenceEndEvent;
if v3 == 0 goto label4;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v6 = v5.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack indents>;
v7 = virtualinvoke v6.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v4.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Integer indent> = v7;
v8 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
staticinvoke <org.yaml.snakeyaml.emitter.Emitter: int access$2210(org.yaml.snakeyaml.emitter.Emitter)>(v8);
v9 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v10 = v9.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v11 = virtualinvoke v10.<java.lang.Boolean: boolean booleanValue()>();
if v11 == 0 goto label1;
v12 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v12.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>(",", 0, 0, 0);
v13 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v13.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
goto label2;
label1:
v14 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v15 = v14.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v16 = virtualinvoke v15.<java.lang.Boolean: boolean booleanValue()>();
if v16 == 0 goto label2;
v17 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v17.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label2:
v18 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v18.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>("]", 0, 0, 0);
v19 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v20 = v19.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
virtualinvoke v20.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.comments.CommentEventsCollector collectEvents()>();
v21 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v21.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
v22 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v23 = v22.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v24 = virtualinvoke v23.<java.lang.Boolean: boolean booleanValue()>();
if v24 == 0 goto label3;
v25 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v25.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label3:
v26 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v27 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v28 = v27.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v29 = virtualinvoke v28.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v26.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.emitter.EmitterState state> = v29;
goto label9;
label4:
v30 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v31 = v30.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v32 = v31 instanceof org.yaml.snakeyaml.events.CommentEvent;
if v32 == 0 goto label5;
v33 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v34 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v35 = v34.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v36 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v37 = v36.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v38 = virtualinvoke v35.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v37);
v33.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v38;
goto label9;
label5:
v39 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v39.<org.yaml.snakeyaml.emitter.Emitter: void writeIndicator(java.lang.String,boolean,boolean,boolean)>(",", 0, 0, 0);
v40 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v40.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
v41 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v42 = v41.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean canonical>;
v43 = virtualinvoke v42.<java.lang.Boolean: boolean booleanValue()>();
if v43 != 0 goto label7;
v44 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v45 = v44.<org.yaml.snakeyaml.emitter.Emitter: int column>;
v46 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v47 = v46.<org.yaml.snakeyaml.emitter.Emitter: int bestWidth>;
if v45 <= v47 goto label6;
v48 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v49 = v48.<org.yaml.snakeyaml.emitter.Emitter: boolean splitLines>;
if v49 != 0 goto label7;
label6:
v50 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v51 = v50.<org.yaml.snakeyaml.emitter.Emitter: java.lang.Boolean prettyFlow>;
v52 = virtualinvoke v51.<java.lang.Boolean: boolean booleanValue()>();
if v52 == 0 goto label8;
label7:
v53 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
virtualinvoke v53.<org.yaml.snakeyaml.emitter.Emitter: void writeIndent()>();
label8:
v54 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v55 = v54.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v56 = new org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem;
v57 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v56.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v57);
virtualinvoke v55.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v56);
v58 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v58.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(0, 0, 0);
v59 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v60 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v61 = v60.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector inlineCommentsCollector>;
v62 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
v63 = v62.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v64 = virtualinvoke v61.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEvents(org.yaml.snakeyaml.events.Event)>(v63);
v59.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v64;
v65 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectFlowSequenceItem: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v65.<org.yaml.snakeyaml.emitter.Emitter: boolean writeInlineComments()>();
label9:
return;
}
}