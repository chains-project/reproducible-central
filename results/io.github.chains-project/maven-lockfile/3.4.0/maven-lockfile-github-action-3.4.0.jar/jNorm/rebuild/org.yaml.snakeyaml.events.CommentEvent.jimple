public final class org.yaml.snakeyaml.events.CommentEvent extends org.yaml.snakeyaml.events.Event
{
private final org.yaml.snakeyaml.comments.CommentType type;
private final java.lang.String value;
public void <init>(org.yaml.snakeyaml.comments.CommentType, java.lang.String, org.yaml.snakeyaml.error.Mark, org.yaml.snakeyaml.error.Mark)
{
org.yaml.snakeyaml.error.Mark v3, v4;
org.yaml.snakeyaml.events.CommentEvent v0;
org.yaml.snakeyaml.comments.CommentType v1;
java.lang.String v2;
java.lang.NullPointerException v5, v6;
v0 := @this: org.yaml.snakeyaml.events.CommentEvent;
v1 := @parameter0: org.yaml.snakeyaml.comments.CommentType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: org.yaml.snakeyaml.error.Mark;
v4 := @parameter3: org.yaml.snakeyaml.error.Mark;
specialinvoke v0.<org.yaml.snakeyaml.events.Event: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v3, v4);
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("Event Type must be provided.");
throw v5;
label1:
v0.<org.yaml.snakeyaml.events.CommentEvent: org.yaml.snakeyaml.comments.CommentType type> = v1;
if v2 != null goto label2;
v6 = new java.lang.NullPointerException;
specialinvoke v6.<java.lang.NullPointerException: void <init>(java.lang.String)>("Value must be provided.");
throw v6;
label2:
v0.<org.yaml.snakeyaml.events.CommentEvent: java.lang.String value> = v2;
return;
}
public java.lang.String getValue()
{
java.lang.String v1;
org.yaml.snakeyaml.events.CommentEvent v0;
v0 := @this: org.yaml.snakeyaml.events.CommentEvent;
v1 = v0.<org.yaml.snakeyaml.events.CommentEvent: java.lang.String value>;
return v1;
}
public org.yaml.snakeyaml.comments.CommentType getCommentType()
{
org.yaml.snakeyaml.events.CommentEvent v0;
org.yaml.snakeyaml.comments.CommentType v1;
v0 := @this: org.yaml.snakeyaml.events.CommentEvent;
v1 = v0.<org.yaml.snakeyaml.events.CommentEvent: org.yaml.snakeyaml.comments.CommentType type>;
return v1;
}
protected java.lang.String getArguments()
{
org.yaml.snakeyaml.events.CommentEvent v0;
org.yaml.snakeyaml.comments.CommentType v2;
java.lang.String v1, v3, v4;
v0 := @this: org.yaml.snakeyaml.events.CommentEvent;
v1 = specialinvoke v0.<org.yaml.snakeyaml.events.Event: java.lang.String getArguments()>();
v2 = v0.<org.yaml.snakeyaml.events.CommentEvent: org.yaml.snakeyaml.comments.CommentType type>;
v3 = v0.<org.yaml.snakeyaml.events.CommentEvent: java.lang.String value>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,org.yaml.snakeyaml.comments.CommentType,java.lang.String)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001type=\u0001, value=\u0001");
return v4;
}
public org.yaml.snakeyaml.events.Event$ID getEventId()
{
org.yaml.snakeyaml.events.CommentEvent v0;
org.yaml.snakeyaml.events.Event$ID v1;
v0 := @this: org.yaml.snakeyaml.events.CommentEvent;
v1 = <org.yaml.snakeyaml.events.Event$ID: org.yaml.snakeyaml.events.Event$ID Comment>;
return v1;
}
}