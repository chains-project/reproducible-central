class org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v3, v4, v5;
org.yaml.snakeyaml.tokens.Token v7;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey v2;
org.yaml.snakeyaml.scanner.Scanner v6;
org.yaml.snakeyaml.events.Event v9;
org.yaml.snakeyaml.error.Mark v8;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v3 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v2.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v3, 0);
v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v2;
v4 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v5 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v6 = v5.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v7 = interfaceinvoke v6.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v8 = virtualinvoke v7.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v9 = specialinvoke v4.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v8);
return v9;
}
}