class org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v10, v14, v21, v26, v29, v30, v32, v34, v6, v8, v9;
org.yaml.snakeyaml.events.DocumentStartEvent v25;
org.yaml.snakeyaml.events.Event v35;
boolean v20, v5;
org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart v0, v7;
org.yaml.snakeyaml.error.Mark v24;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode v31;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart v33;
org.yaml.snakeyaml.tokens.Token v12, v23;
org.yaml.snakeyaml.tokens.Token$ID v17, v18, v19, v4;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd v28;
org.yaml.snakeyaml.events.CommentEvent v13;
org.yaml.snakeyaml.util.ArrayStack v27;
org.yaml.snakeyaml.scanner.Scanner v11, v15, v2, v22;
org.yaml.snakeyaml.tokens.Token$ID[] v16, v3;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = new org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart;
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v7.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v8);
v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v7;
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v10 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v11 = v10.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v12 = interfaceinvoke v11.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v13 = specialinvoke v9.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v12);
return v13;
label1:
v14 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v15 = v14.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v16 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[3];
v17 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Directive>;
v16[0] = v17;
v18 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentStart>;
v16[1] = v18;
v19 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamEnd>;
v16[2] = v19;
v20 = interfaceinvoke v15.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v16);
if v20 != 0 goto label2;
v21 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v22 = v21.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v23 = interfaceinvoke v22.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v24 = virtualinvoke v23.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v25 = new org.yaml.snakeyaml.events.DocumentStartEvent;
specialinvoke v25.<org.yaml.snakeyaml.events.DocumentStartEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean,org.yaml.snakeyaml.DumperOptions$Version,java.util.Map)>(v24, v24, 0, null, null);
v26 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v27 = v26.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v28 = new org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd;
v29 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v28.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v29);
virtualinvoke v27.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v28);
v30 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v31 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode;
v32 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v31.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v32);
v30.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v31;
return v25;
label2:
v33 = new org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart;
v34 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseImplicitDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v33.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v34);
v35 = virtualinvoke v33.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.events.Event produce()>();
return v35;
}
}