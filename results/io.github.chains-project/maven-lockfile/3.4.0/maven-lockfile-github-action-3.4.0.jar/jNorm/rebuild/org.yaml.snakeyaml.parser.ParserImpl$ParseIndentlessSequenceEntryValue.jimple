class org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
org.yaml.snakeyaml.tokens.BlockEntryToken token;
final org.yaml.snakeyaml.parser.ParserImpl this$0;
public void <init>(org.yaml.snakeyaml.parser.ParserImpl, org.yaml.snakeyaml.tokens.BlockEntryToken)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue v0;
org.yaml.snakeyaml.tokens.BlockEntryToken v2;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v2 := @parameter1: org.yaml.snakeyaml.tokens.BlockEntryToken;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.tokens.BlockEntryToken token> = v2;
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v10, v11, v15, v23, v26, v28, v30, v32, v33, v6, v8;
org.yaml.snakeyaml.events.Event v29, v36;
boolean v22, v5;
org.yaml.snakeyaml.tokens.BlockEntryToken v34, v9;
org.yaml.snakeyaml.error.Mark v35;
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey v25, v31;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode v27;
org.yaml.snakeyaml.tokens.Token v13;
org.yaml.snakeyaml.tokens.Token$ID v18, v19, v20, v21, v4;
org.yaml.snakeyaml.events.CommentEvent v14;
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue v0, v7;
org.yaml.snakeyaml.util.ArrayStack v24;
org.yaml.snakeyaml.scanner.Scanner v12, v16, v2;
org.yaml.snakeyaml.tokens.Token$ID[] v17, v3;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = new org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue;
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.tokens.BlockEntryToken token>;
specialinvoke v7.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.tokens.BlockEntryToken)>(v8, v9);
v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v7;
v10 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v11 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v12 = v11.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v13 = interfaceinvoke v12.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v14 = specialinvoke v10.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v13);
return v14;
label1:
v15 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v16 = v15.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v17 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[4];
v18 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEntry>;
v17[0] = v18;
v19 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v17[1] = v19;
v20 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v17[2] = v20;
v21 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd>;
v17[3] = v21;
v22 = interfaceinvoke v16.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v17);
if v22 != 0 goto label2;
v23 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v24 = v23.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v25 = new org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey;
v26 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v25.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v26);
virtualinvoke v24.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v25);
v27 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode;
v28 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v27.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v28);
v29 = virtualinvoke v27.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockNode: org.yaml.snakeyaml.events.Event produce()>();
return v29;
label2:
v30 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v31 = new org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey;
v32 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v31.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v32);
v30.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v31;
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v34 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.tokens.BlockEntryToken token>;
v35 = virtualinvoke v34.<org.yaml.snakeyaml.tokens.BlockEntryToken: org.yaml.snakeyaml.error.Mark getEndMark()>();
v36 = specialinvoke v33.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v35);
return v36;
}
}