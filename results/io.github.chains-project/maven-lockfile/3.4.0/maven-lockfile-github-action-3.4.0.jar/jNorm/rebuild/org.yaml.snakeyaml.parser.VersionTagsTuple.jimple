class org.yaml.snakeyaml.parser.VersionTagsTuple extends java.lang.Object
{
private final org.yaml.snakeyaml.DumperOptions$Version version;
private final java.util.Map tags;
public void <init>(org.yaml.snakeyaml.DumperOptions$Version, java.util.Map)
{
org.yaml.snakeyaml.DumperOptions$Version v1;
org.yaml.snakeyaml.parser.VersionTagsTuple v0;
java.util.Map v2;
v0 := @this: org.yaml.snakeyaml.parser.VersionTagsTuple;
v1 := @parameter0: org.yaml.snakeyaml.DumperOptions$Version;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.parser.VersionTagsTuple: org.yaml.snakeyaml.DumperOptions$Version version> = v1;
v0.<org.yaml.snakeyaml.parser.VersionTagsTuple: java.util.Map tags> = v2;
return;
}
public org.yaml.snakeyaml.DumperOptions$Version getVersion()
{
org.yaml.snakeyaml.DumperOptions$Version v1;
org.yaml.snakeyaml.parser.VersionTagsTuple v0;
v0 := @this: org.yaml.snakeyaml.parser.VersionTagsTuple;
v1 = v0.<org.yaml.snakeyaml.parser.VersionTagsTuple: org.yaml.snakeyaml.DumperOptions$Version version>;
return v1;
}
public java.util.Map getTags()
{
org.yaml.snakeyaml.parser.VersionTagsTuple v0;
java.util.Map v1;
v0 := @this: org.yaml.snakeyaml.parser.VersionTagsTuple;
v1 = v0.<org.yaml.snakeyaml.parser.VersionTagsTuple: java.util.Map tags>;
return v1;
}
public java.lang.String toString()
{
java.lang.Object[] v1;
org.yaml.snakeyaml.parser.VersionTagsTuple v0;
java.util.Map v3;
org.yaml.snakeyaml.DumperOptions$Version v2;
java.lang.String v4;
v0 := @this: org.yaml.snakeyaml.parser.VersionTagsTuple;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<org.yaml.snakeyaml.parser.VersionTagsTuple: org.yaml.snakeyaml.DumperOptions$Version version>;
v1[0] = v2;
v3 = v0.<org.yaml.snakeyaml.parser.VersionTagsTuple: java.util.Map tags>;
v1[1] = v3;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("VersionTagsTuple<%s, %s>", v1);
return v4;
}
}