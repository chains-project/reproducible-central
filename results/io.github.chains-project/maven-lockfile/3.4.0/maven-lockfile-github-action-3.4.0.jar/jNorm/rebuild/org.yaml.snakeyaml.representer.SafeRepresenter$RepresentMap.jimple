public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter v1;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap v0;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
org.yaml.snakeyaml.DumperOptions$FlowStyle v7;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap v0;
org.yaml.snakeyaml.nodes.Tag v5, v6;
org.yaml.snakeyaml.nodes.Node v8;
org.yaml.snakeyaml.representer.SafeRepresenter v2, v3;
java.lang.Class v4;
java.lang.Object v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap;
v1 := @parameter0: java.lang.Object;
v2 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v3 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentMap: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v5 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag MAP>;
v6 = virtualinvoke v3.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Tag getTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag)>(v4, v5);
v7 = <org.yaml.snakeyaml.DumperOptions$FlowStyle: org.yaml.snakeyaml.DumperOptions$FlowStyle AUTO>;
v8 = virtualinvoke v2.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representMapping(org.yaml.snakeyaml.nodes.Tag,java.util.Map,org.yaml.snakeyaml.DumperOptions$FlowStyle)>(v6, v1, v7);
return v8;
}
}