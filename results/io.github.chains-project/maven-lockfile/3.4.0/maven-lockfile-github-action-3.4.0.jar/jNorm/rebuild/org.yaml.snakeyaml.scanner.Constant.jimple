public final class org.yaml.snakeyaml.scanner.Constant extends java.lang.Object
{
private static final java.lang.String ALPHA_S;
private static final java.lang.String LINEBR_S;
private static final java.lang.String FULL_LINEBR_S;
private static final java.lang.String NULL_OR_LINEBR_S;
private static final java.lang.String NULL_BL_LINEBR_S;
private static final java.lang.String NULL_BL_T_LINEBR_S;
private static final java.lang.String NULL_BL_T_S;
private static final java.lang.String URI_CHARS_S;
public static final org.yaml.snakeyaml.scanner.Constant LINEBR;
public static final org.yaml.snakeyaml.scanner.Constant NULL_OR_LINEBR;
public static final org.yaml.snakeyaml.scanner.Constant NULL_BL_LINEBR;
public static final org.yaml.snakeyaml.scanner.Constant NULL_BL_T_LINEBR;
public static final org.yaml.snakeyaml.scanner.Constant NULL_BL_T;
public static final org.yaml.snakeyaml.scanner.Constant URI_CHARS;
public static final org.yaml.snakeyaml.scanner.Constant ALPHA;
private java.lang.String content;
boolean[] contains;
boolean noASCII;
private void <init>(java.lang.String)
{
boolean[] v2, v3, v8;
org.yaml.snakeyaml.scanner.Constant v0;
int v5, v6, v7, v9;
java.lang.StringBuilder v4;
java.lang.String v1, v10;
v0 := @this: org.yaml.snakeyaml.scanner.Constant;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = newarray (boolean)[128];
v0.<org.yaml.snakeyaml.scanner.Constant: boolean[] contains> = v2;
v0.<org.yaml.snakeyaml.scanner.Constant: boolean noASCII> = 0;
v3 = v0.<org.yaml.snakeyaml.scanner.Constant: boolean[] contains>;
staticinvoke <java.util.Arrays: void fill(boolean[],boolean)>(v3, 0);
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
v5 = 0;
label1:
v6 = virtualinvoke v1.<java.lang.String: int length()>();
if v5 >= v6 goto label4;
v7 = virtualinvoke v1.<java.lang.String: int codePointAt(int)>(v5);
if v7 >= 128 goto label2;
v8 = v0.<org.yaml.snakeyaml.scanner.Constant: boolean[] contains>;
v8[v7] = 1;
goto label3;
label2:
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder appendCodePoint(int)>(v7);
label3:
v5 = v5 + 1;
goto label1;
label4:
v9 = virtualinvoke v4.<java.lang.StringBuilder: int length()>();
if v9 <= 0 goto label5;
v0.<org.yaml.snakeyaml.scanner.Constant: boolean noASCII> = 1;
v10 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.String toString()>();
v0.<org.yaml.snakeyaml.scanner.Constant: java.lang.String content> = v10;
label5:
return;
}
public boolean has(int)
{
boolean[] v2;
org.yaml.snakeyaml.scanner.Constant v0;
int v1, v6, v7;
java.lang.String v5;
boolean v3, v4;
v0 := @this: org.yaml.snakeyaml.scanner.Constant;
v1 := @parameter0: int;
if v1 >= 128 goto label1;
v2 = v0.<org.yaml.snakeyaml.scanner.Constant: boolean[] contains>;
v3 = v2[v1];
goto label3;
label1:
v4 = v0.<org.yaml.snakeyaml.scanner.Constant: boolean noASCII>;
if v4 == 0 goto label2;
v5 = v0.<org.yaml.snakeyaml.scanner.Constant: java.lang.String content>;
v6 = virtualinvoke v5.<java.lang.String: int indexOf(int)>(v1);
v7 = (int) -1;
if v6 == v7 goto label2;
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
public boolean hasNo(int)
{
org.yaml.snakeyaml.scanner.Constant v0;
int v1;
boolean v2, v3;
v0 := @this: org.yaml.snakeyaml.scanner.Constant;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<org.yaml.snakeyaml.scanner.Constant: boolean has(int)>(v1);
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean has(int, java.lang.String)
{
org.yaml.snakeyaml.scanner.Constant v0;
int v1, v4, v5;
java.lang.String v2;
boolean v3, v6;
v0 := @this: org.yaml.snakeyaml.scanner.Constant;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.yaml.snakeyaml.scanner.Constant: boolean has(int)>(v1);
if v3 != 0 goto label1;
v4 = virtualinvoke v2.<java.lang.String: int indexOf(int)>(v1);
v5 = (int) -1;
if v4 == v5 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
public boolean hasNo(int, java.lang.String)
{
org.yaml.snakeyaml.scanner.Constant v0;
int v1;
java.lang.String v2;
boolean v3, v4;
v0 := @this: org.yaml.snakeyaml.scanner.Constant;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.yaml.snakeyaml.scanner.Constant: boolean has(int,java.lang.String)>(v1, v2);
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
static void <clinit>()
{
org.yaml.snakeyaml.scanner.Constant v0, v1, v2, v3, v4, v5, v6;
v0 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v0.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>("\n\u0085\u2028\u2029");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant LINEBR> = v0;
v1 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v1.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>("\u0000\r\n\u0085\u2028\u2029");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant NULL_OR_LINEBR> = v1;
v2 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v2.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>(" \u0000\r\n\u0085\u2028\u2029");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant NULL_BL_LINEBR> = v2;
v3 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v3.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>("\t \u0000\r\n\u0085\u2028\u2029");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant NULL_BL_T_LINEBR> = v3;
v4 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v4.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>("\u0000 \t");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant NULL_BL_T> = v4;
v5 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v5.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>("abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-_-;/?:@&=+$,_.!~*\'()[]%");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant URI_CHARS> = v5;
v6 = new org.yaml.snakeyaml.scanner.Constant;
specialinvoke v6.<org.yaml.snakeyaml.scanner.Constant: void <init>(java.lang.String)>("abcdefghijklmnopqrstuvwxyz0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ-_");
<org.yaml.snakeyaml.scanner.Constant: org.yaml.snakeyaml.scanner.Constant ALPHA> = v6;
return;
}
}