public final enum class org.yaml.snakeyaml.tokens.Token$ID extends java.lang.Enum
{
public static final enum org.yaml.snakeyaml.tokens.Token$ID Alias;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Anchor;
public static final enum org.yaml.snakeyaml.tokens.Token$ID BlockEnd;
public static final enum org.yaml.snakeyaml.tokens.Token$ID BlockEntry;
public static final enum org.yaml.snakeyaml.tokens.Token$ID BlockMappingStart;
public static final enum org.yaml.snakeyaml.tokens.Token$ID BlockSequenceStart;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Directive;
public static final enum org.yaml.snakeyaml.tokens.Token$ID DocumentEnd;
public static final enum org.yaml.snakeyaml.tokens.Token$ID DocumentStart;
public static final enum org.yaml.snakeyaml.tokens.Token$ID FlowEntry;
public static final enum org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd;
public static final enum org.yaml.snakeyaml.tokens.Token$ID FlowMappingStart;
public static final enum org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd;
public static final enum org.yaml.snakeyaml.tokens.Token$ID FlowSequenceStart;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Key;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Scalar;
public static final enum org.yaml.snakeyaml.tokens.Token$ID StreamEnd;
public static final enum org.yaml.snakeyaml.tokens.Token$ID StreamStart;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Tag;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Value;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Whitespace;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Comment;
public static final enum org.yaml.snakeyaml.tokens.Token$ID Error;
private final java.lang.String description;
private static final org.yaml.snakeyaml.tokens.Token$ID[] $VALUES;
public static org.yaml.snakeyaml.tokens.Token$ID[] values()
{
java.lang.Object v1;
org.yaml.snakeyaml.tokens.Token$ID[] v0;
v0 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.yaml.snakeyaml.tokens.Token$ID valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/yaml/snakeyaml/tokens/Token$ID;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String)
{
org.yaml.snakeyaml.tokens.Token$ID v0;
int v2;
java.lang.String v1, v3;
v0 := @this: org.yaml.snakeyaml.tokens.Token$ID;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<org.yaml.snakeyaml.tokens.Token$ID: java.lang.String description> = v3;
return;
}
public java.lang.String toString()
{
org.yaml.snakeyaml.tokens.Token$ID v0;
java.lang.String v1;
v0 := @this: org.yaml.snakeyaml.tokens.Token$ID;
v1 = v0.<org.yaml.snakeyaml.tokens.Token$ID: java.lang.String description>;
return v1;
}
private static org.yaml.snakeyaml.tokens.Token$ID[] $values()
{
org.yaml.snakeyaml.tokens.Token$ID v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v3, v4, v5, v6, v7, v8, v9;
org.yaml.snakeyaml.tokens.Token$ID[] v0;
v0 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[23];
v1 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Alias>;
v0[0] = v1;
v2 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Anchor>;
v0[1] = v2;
v3 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd>;
v0[2] = v3;
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEntry>;
v0[3] = v4;
v5 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockMappingStart>;
v0[4] = v5;
v6 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockSequenceStart>;
v0[5] = v6;
v7 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Directive>;
v0[6] = v7;
v8 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentEnd>;
v0[7] = v8;
v9 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentStart>;
v0[8] = v9;
v10 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowEntry>;
v0[9] = v10;
v11 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd>;
v0[10] = v11;
v12 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingStart>;
v0[11] = v12;
v13 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd>;
v0[12] = v13;
v14 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowSequenceStart>;
v0[13] = v14;
v15 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v0[14] = v15;
v16 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Scalar>;
v0[15] = v16;
v17 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamEnd>;
v0[16] = v17;
v18 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamStart>;
v0[17] = v18;
v19 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Tag>;
v0[18] = v19;
v20 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v0[19] = v20;
v21 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Whitespace>;
v0[20] = v21;
v22 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v0[21] = v22;
v23 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Error>;
v0[22] = v23;
return v0;
}
static void <clinit>()
{
org.yaml.snakeyaml.tokens.Token$ID v0, v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v3, v4, v5, v6, v7, v8, v9;
org.yaml.snakeyaml.tokens.Token$ID[] v23;
v0 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v0.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Alias", 0, "<alias>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Alias> = v0;
v1 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v1.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Anchor", 1, "<anchor>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Anchor> = v1;
v2 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v2.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("BlockEnd", 2, "<block end>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd> = v2;
v3 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v3.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("BlockEntry", 3, "-");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEntry> = v3;
v4 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v4.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("BlockMappingStart", 4, "<block mapping start>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockMappingStart> = v4;
v5 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v5.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("BlockSequenceStart", 5, "<block sequence start>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockSequenceStart> = v5;
v6 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v6.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Directive", 6, "<directive>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Directive> = v6;
v7 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v7.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("DocumentEnd", 7, "<document end>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentEnd> = v7;
v8 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v8.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("DocumentStart", 8, "<document start>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentStart> = v8;
v9 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v9.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("FlowEntry", 9, ",");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowEntry> = v9;
v10 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v10.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("FlowMappingEnd", 10, "}");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd> = v10;
v11 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v11.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("FlowMappingStart", 11, "{");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingStart> = v11;
v12 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v12.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("FlowSequenceEnd", 12, "]");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowSequenceEnd> = v12;
v13 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v13.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("FlowSequenceStart", 13, "[");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowSequenceStart> = v13;
v14 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v14.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Key", 14, "?");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key> = v14;
v15 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v15.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Scalar", 15, "<scalar>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Scalar> = v15;
v16 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v16.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("StreamEnd", 16, "<stream end>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamEnd> = v16;
v17 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v17.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("StreamStart", 17, "<stream start>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamStart> = v17;
v18 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v18.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Tag", 18, "<tag>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Tag> = v18;
v19 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v19.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Value", 19, ":");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value> = v19;
v20 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v20.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Whitespace", 20, "<whitespace>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Whitespace> = v20;
v21 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v21.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Comment", 21, "#");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment> = v21;
v22 = new org.yaml.snakeyaml.tokens.Token$ID;
specialinvoke v22.<org.yaml.snakeyaml.tokens.Token$ID: void <init>(java.lang.String,int,java.lang.String)>("Error", 22, "<error>");
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Error> = v22;
v23 = staticinvoke <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID[] $values()>();
<org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID[] $VALUES> = v23;
return;
}
}