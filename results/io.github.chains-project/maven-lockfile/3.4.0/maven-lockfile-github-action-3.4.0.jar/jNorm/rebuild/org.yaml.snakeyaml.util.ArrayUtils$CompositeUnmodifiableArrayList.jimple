class org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList extends java.util.AbstractList
{
private final java.lang.Object[] array1;
private final java.lang.Object[] array2;
void <init>(java.lang.Object[], java.lang.Object[])
{
org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList v0;
java.lang.Object[] v1, v2;
v0 := @this: org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList;
v1 := @parameter0: java.lang.Object[];
v2 := @parameter1: java.lang.Object[];
specialinvoke v0.<java.util.AbstractList: void <init>()>();
v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array1> = v1;
v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array2> = v2;
return;
}
public java.lang.Object get(int)
{
java.lang.IndexOutOfBoundsException v15;
java.lang.Object[] v11, v12, v2, v4, v6, v9;
int v1, v10, v13, v14, v16, v3, v7, v8;
java.lang.String v17;
org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList v0;
java.lang.Object v5;
v0 := @this: org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList;
v1 := @parameter0: int;
v2 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array1>;
v3 = lengthof v2;
if v1 >= v3 goto label1;
v4 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array1>;
v5 = v4[v1];
goto label3;
label1:
v6 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array1>;
v7 = lengthof v6;
v8 = v1 - v7;
v9 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array2>;
v10 = lengthof v9;
if v8 >= v10 goto label2;
v11 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array2>;
v12 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array1>;
v13 = lengthof v12;
v14 = v1 - v13;
v5 = v11[v14];
goto label3;
label2:
v15 = new java.lang.IndexOutOfBoundsException;
v16 = virtualinvoke v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: int size()>();
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v16) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Index: \u0001, Size: \u0001");
specialinvoke v15.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v17);
throw v15;
label3:
return v5;
}
public int size()
{
org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList v0;
java.lang.Object[] v1, v3;
int v2, v4, v5;
v0 := @this: org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList;
v1 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array1>;
v2 = lengthof v1;
v3 = v0.<org.yaml.snakeyaml.util.ArrayUtils$CompositeUnmodifiableArrayList: java.lang.Object[] array2>;
v4 = lengthof v3;
v5 = v2 + v4;
return v5;
}
}