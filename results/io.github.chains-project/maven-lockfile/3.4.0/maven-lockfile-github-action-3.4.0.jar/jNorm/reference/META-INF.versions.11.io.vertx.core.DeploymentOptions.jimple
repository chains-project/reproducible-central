public class META-INF.versions.11.io.vertx.core.DeploymentOptions extends java.lang.Object
{
public static final boolean DEFAULT_WORKER;
public static final boolean DEFAULT_HA;
public static final int DEFAULT_INSTANCES;
private io.vertx.core.json.JsonObject config;
private boolean worker;
private java.lang.String workerPoolName;
private int workerPoolSize;
private long maxWorkerExecuteTime;
private boolean ha;
private int instances;
private java.util.concurrent.TimeUnit maxWorkerExecuteTimeUnit;
private java.lang.ClassLoader classLoader;
public void <init>()
{
java.util.concurrent.TimeUnit v2;
long v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.DeploymentOptions: boolean worker> = 0;
v0.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject config> = null;
v0.<io.vertx.core.DeploymentOptions: boolean ha> = 0;
v0.<io.vertx.core.DeploymentOptions: int instances> = 1;
v0.<io.vertx.core.DeploymentOptions: java.lang.String workerPoolName> = null;
v0.<io.vertx.core.DeploymentOptions: int workerPoolSize> = 20;
v1 = <io.vertx.core.VertxOptions: long DEFAULT_MAX_WORKER_EXECUTE_TIME>;
v0.<io.vertx.core.DeploymentOptions: long maxWorkerExecuteTime> = v1;
v2 = <io.vertx.core.VertxOptions: java.util.concurrent.TimeUnit DEFAULT_MAX_WORKER_EXECUTE_TIME_UNIT>;
v0.<io.vertx.core.DeploymentOptions: java.util.concurrent.TimeUnit maxWorkerExecuteTimeUnit> = v2;
return;
}
public void <init>(io.vertx.core.DeploymentOptions)
{
long v10;
java.util.concurrent.TimeUnit v11;
io.vertx.core.DeploymentOptions v1;
int v7, v9;
io.vertx.core.json.JsonObject v2, v3, v4;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.String v8;
boolean v5, v6;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: io.vertx.core.DeploymentOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject getConfig()>();
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = virtualinvoke v1.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject getConfig()>();
v3 = virtualinvoke v4.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject copy()>();
label2:
v0.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject config> = v3;
v5 = virtualinvoke v1.<io.vertx.core.DeploymentOptions: boolean isWorker()>();
v0.<io.vertx.core.DeploymentOptions: boolean worker> = v5;
v6 = virtualinvoke v1.<io.vertx.core.DeploymentOptions: boolean isHa()>();
v0.<io.vertx.core.DeploymentOptions: boolean ha> = v6;
v7 = v1.<io.vertx.core.DeploymentOptions: int instances>;
v0.<io.vertx.core.DeploymentOptions: int instances> = v7;
v8 = v1.<io.vertx.core.DeploymentOptions: java.lang.String workerPoolName>;
v0.<io.vertx.core.DeploymentOptions: java.lang.String workerPoolName> = v8;
v9 = v1.<io.vertx.core.DeploymentOptions: int workerPoolSize>;
virtualinvoke v0.<io.vertx.core.DeploymentOptions: io.vertx.core.DeploymentOptions setWorkerPoolSize(int)>(v9);
v10 = v1.<io.vertx.core.DeploymentOptions: long maxWorkerExecuteTime>;
virtualinvoke v0.<io.vertx.core.DeploymentOptions: io.vertx.core.DeploymentOptions setMaxWorkerExecuteTime(long)>(v10);
v11 = v1.<io.vertx.core.DeploymentOptions: java.util.concurrent.TimeUnit maxWorkerExecuteTimeUnit>;
v0.<io.vertx.core.DeploymentOptions: java.util.concurrent.TimeUnit maxWorkerExecuteTimeUnit> = v11;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<io.vertx.core.DeploymentOptions: void <init>()>();
staticinvoke <io.vertx.core.DeploymentOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.core.DeploymentOptions)>(v1, v0);
return;
}
public void fromJson(io.vertx.core.json.JsonObject)
{
java.lang.Integer v10, v9;
int v11;
java.lang.Boolean v3, v4, v6, v7;
io.vertx.core.json.JsonObject v1, v2;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
boolean v5, v8;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: io.vertx.core.json.JsonObject getJsonObject(java.lang.String)>("config");
v0.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject config> = v2;
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v4 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>("worker", v3);
v5 = virtualinvoke v4.<java.lang.Boolean: boolean booleanValue()>();
v0.<io.vertx.core.DeploymentOptions: boolean worker> = v5;
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v7 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Boolean getBoolean(java.lang.String,java.lang.Boolean)>("ha", v6);
v8 = virtualinvoke v7.<java.lang.Boolean: boolean booleanValue()>();
v0.<io.vertx.core.DeploymentOptions: boolean ha> = v8;
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v10 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.lang.Integer getInteger(java.lang.String,java.lang.Integer)>("instances", v9);
v11 = virtualinvoke v10.<java.lang.Integer: int intValue()>();
v0.<io.vertx.core.DeploymentOptions: int instances> = v11;
return;
}
public io.vertx.core.json.JsonObject getConfig()
{
io.vertx.core.json.JsonObject v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject config>;
return v1;
}
public io.vertx.core.DeploymentOptions setConfig(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v0.<io.vertx.core.DeploymentOptions: io.vertx.core.json.JsonObject config> = v1;
return v0;
}
public boolean isWorker()
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
boolean v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: boolean worker>;
return v1;
}
public io.vertx.core.DeploymentOptions setWorker(boolean)
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
boolean v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.DeploymentOptions: boolean worker> = v1;
return v0;
}
public boolean isHa()
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
boolean v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: boolean ha>;
return v1;
}
public io.vertx.core.DeploymentOptions setHa(boolean)
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
boolean v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.core.DeploymentOptions: boolean ha> = v1;
return v0;
}
public int getInstances()
{
int v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: int instances>;
return v1;
}
public io.vertx.core.DeploymentOptions setInstances(int)
{
int v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: int;
v0.<io.vertx.core.DeploymentOptions: int instances> = v1;
return v0;
}
public java.lang.String getWorkerPoolName()
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.String v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: java.lang.String workerPoolName>;
return v1;
}
public io.vertx.core.DeploymentOptions setWorkerPoolName(java.lang.String)
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.String v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: java.lang.String;
v0.<io.vertx.core.DeploymentOptions: java.lang.String workerPoolName> = v1;
return v0;
}
public int getWorkerPoolSize()
{
int v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: int workerPoolSize>;
return v1;
}
public io.vertx.core.DeploymentOptions setWorkerPoolSize(int)
{
int v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.IllegalArgumentException v2;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: int;
if v1 >= 1 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("workerPoolSize must be > 0");
throw v2;
label1:
v0.<io.vertx.core.DeploymentOptions: int workerPoolSize> = v1;
return v0;
}
public long getMaxWorkerExecuteTime()
{
long v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: long maxWorkerExecuteTime>;
return v1;
}
public io.vertx.core.DeploymentOptions setMaxWorkerExecuteTime(long)
{
byte v2;
long v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.IllegalArgumentException v3;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: long;
v2 = v1 cmp 1L;
if v2 >= 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("maxWorkerExecuteTime must be > 0");
throw v3;
label1:
v0.<io.vertx.core.DeploymentOptions: long maxWorkerExecuteTime> = v1;
return v0;
}
public java.util.concurrent.TimeUnit getMaxWorkerExecuteTimeUnit()
{
java.util.concurrent.TimeUnit v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: java.util.concurrent.TimeUnit maxWorkerExecuteTimeUnit>;
return v1;
}
public io.vertx.core.DeploymentOptions setMaxWorkerExecuteTimeUnit(java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v0.<io.vertx.core.DeploymentOptions: java.util.concurrent.TimeUnit maxWorkerExecuteTimeUnit> = v1;
return v0;
}
public java.lang.ClassLoader getClassLoader()
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.ClassLoader v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = v0.<io.vertx.core.DeploymentOptions: java.lang.ClassLoader classLoader>;
return v1;
}
public io.vertx.core.DeploymentOptions setClassLoader(java.lang.ClassLoader)
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
java.lang.ClassLoader v1;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 := @parameter0: java.lang.ClassLoader;
v0.<io.vertx.core.DeploymentOptions: java.lang.ClassLoader classLoader> = v1;
return v0;
}
public void checkIsolationNotDefined()
{
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.core.json.JsonObject v1;
META-INF.versions.11.io.vertx.core.DeploymentOptions v0;
v0 := @this: META-INF.versions.11.io.vertx.core.DeploymentOptions;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.core.DeploymentOptionsConverter: void toJson(io.vertx.core.DeploymentOptions,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
}