class com.aayushatharva.brotli4j.encoder.EncoderJNI extends java.lang.Object
{
void <init>()
{
com.aayushatharva.brotli4j.encoder.EncoderJNI v0;
v0 := @this: com.aayushatharva.brotli4j.encoder.EncoderJNI;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static native java.nio.ByteBuffer nativeCreate(long[]);
private static native void nativePush(long[], int);
private static native java.nio.ByteBuffer nativePull(long[]);
private static native void nativeDestroy(long[]);
private static native boolean nativeAttachDictionary(long[], java.nio.ByteBuffer);
private static native java.nio.ByteBuffer nativePrepareDictionary(java.nio.ByteBuffer, long);
private static native void nativeDestroyDictionary(java.nio.ByteBuffer);
static com.aayushatharva.brotli4j.encoder.PreparedDictionary prepareDictionary(java.nio.ByteBuffer, int)
{
java.lang.IllegalStateException v5;
int v1;
java.lang.IllegalArgumentException v3;
com.aayushatharva.brotli4j.encoder.EncoderJNI$PreparedDictionaryImpl v6;
java.nio.ByteBuffer v0, v4;
boolean v2;
v0 := @parameter0: java.nio.ByteBuffer;
v1 := @parameter1: int;
v2 = virtualinvoke v0.<java.nio.ByteBuffer: boolean isDirect()>();
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("only direct buffers allowed");
throw v3;
label1:
v4 = staticinvoke <com.aayushatharva.brotli4j.encoder.EncoderJNI: java.nio.ByteBuffer nativePrepareDictionary(java.nio.ByteBuffer,long)>(v0, v1);
if v4 != null goto label2;
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("OOM");
throw v5;
label2:
v6 = new com.aayushatharva.brotli4j.encoder.EncoderJNI$PreparedDictionaryImpl;
specialinvoke v6.<com.aayushatharva.brotli4j.encoder.EncoderJNI$PreparedDictionaryImpl: void <init>(java.nio.ByteBuffer,java.nio.ByteBuffer)>(v4, v0);
return v6;
}
}