public final enum class com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility ANY;
public static final enum com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility NON_PRIVATE;
public static final enum com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC;
public static final enum com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility PUBLIC_ONLY;
public static final enum com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility NONE;
public static final enum com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility DEFAULT;
private static final com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] $VALUES;
public static com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] v0;
v0 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/annotation/JsonAutoDetect$Visibility;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public boolean isVisible(java.lang.reflect.Member)
{
java.lang.reflect.Member v1;
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility v0;
int[] v2;
int v10, v3, v4, v5, v8;
boolean v11, v6, v7, v9;
v0 := @this: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
v1 := @parameter0: java.lang.reflect.Member;
v2 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonAutoDetect$Visibility>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: int ordinal()>();
v4 = v2[v3];
tableswitch(v4)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label6;
case 5: goto label7;
default: goto label8;
};
label1:
return 1;
label2:
return 0;
label3:
v5 = interfaceinvoke v1.<java.lang.reflect.Member: int getModifiers()>();
v6 = staticinvoke <java.lang.reflect.Modifier: boolean isPrivate(int)>(v5);
if v6 != 0 goto label4;
v7 = 1;
goto label5;
label4:
v7 = 0;
label5:
return v7;
label6:
v8 = interfaceinvoke v1.<java.lang.reflect.Member: int getModifiers()>();
v9 = staticinvoke <java.lang.reflect.Modifier: boolean isProtected(int)>(v8);
if v9 == 0 goto label7;
return 1;
label7:
v10 = interfaceinvoke v1.<java.lang.reflect.Member: int getModifiers()>();
v11 = staticinvoke <java.lang.reflect.Modifier: boolean isPublic(int)>(v10);
return v11;
label8:
return 0;
}
private static com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] $values()
{
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility v1, v2, v3, v4, v5, v6;
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] v0;
v0 = newarray (com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility)[6];
v1 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility ANY>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility NON_PRIVATE>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility PUBLIC_ONLY>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility NONE>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility DEFAULT>;
v0[5] = v6;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility v0, v1, v2, v3, v4, v5;
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] v6;
v0 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
specialinvoke v0.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("ANY", 0);
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility ANY> = v0;
v1 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
specialinvoke v1.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("NON_PRIVATE", 1);
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility NON_PRIVATE> = v1;
v2 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
specialinvoke v2.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("PROTECTED_AND_PUBLIC", 2);
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility PROTECTED_AND_PUBLIC> = v2;
v3 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
specialinvoke v3.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("PUBLIC_ONLY", 3);
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility PUBLIC_ONLY> = v3;
v4 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
specialinvoke v4.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("NONE", 4);
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility NONE> = v4;
v5 = new com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
specialinvoke v5.<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: void <init>(java.lang.String,int)>("DEFAULT", 5);
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility DEFAULT> = v5;
v6 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] $values()>();
<com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility[] $VALUES> = v6;
return;
}
}