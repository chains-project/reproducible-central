public class com.fasterxml.jackson.core.JsonPointer extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
public static final char SEPARATOR;
protected static final com.fasterxml.jackson.core.JsonPointer EMPTY;
protected final com.fasterxml.jackson.core.JsonPointer _nextSegment;
protected volatile com.fasterxml.jackson.core.JsonPointer _head;
protected final java.lang.String _asString;
protected final int _asStringOffset;
protected final java.lang.String _matchingPropertyName;
protected final int _matchingElementIndex;
protected int _hashCode;
protected void <init>()
{
int v1;
com.fasterxml.jackson.core.JsonPointer v0;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment> = null;
v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName> = null;
v1 = (int) -1;
v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex> = v1;
v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString> = "";
v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset> = 0;
return;
}
protected void <init>(java.lang.String, int, java.lang.String, com.fasterxml.jackson.core.JsonPointer)
{
com.fasterxml.jackson.core.JsonPointer v0, v4;
int v2, v5;
java.lang.String v1, v3;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: com.fasterxml.jackson.core.JsonPointer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString> = v1;
v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset> = v2;
v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment> = v4;
v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName> = v3;
v5 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: int _parseIndex(java.lang.String)>(v3);
v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex> = v5;
return;
}
protected void <init>(java.lang.String, int, java.lang.String, int, com.fasterxml.jackson.core.JsonPointer)
{
com.fasterxml.jackson.core.JsonPointer v0, v5;
int v2, v4;
java.lang.String v1, v3;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: int;
v5 := @parameter4: com.fasterxml.jackson.core.JsonPointer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString> = v1;
v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset> = v2;
v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment> = v5;
v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName> = v3;
v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex> = v4;
return;
}
public static com.fasterxml.jackson.core.JsonPointer compile(java.lang.String) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.core.JsonPointer v2, v6;
int v1;
char v3;
java.lang.String v0, v5;
java.lang.IllegalArgumentException v4;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 != 0 goto label2;
label1:
v2 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
return v2;
label2:
v3 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v3 == 47 goto label3;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid input: JSON Pointer expression must start with \'/\': \"\u0001\"");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label3:
v6 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String)>(v0);
return v6;
}
public static com.fasterxml.jackson.core.JsonPointer valueOf(java.lang.String)
{
com.fasterxml.jackson.core.JsonPointer v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer compile(java.lang.String)>(v0);
return v1;
}
public static com.fasterxml.jackson.core.JsonPointer empty()
{
com.fasterxml.jackson.core.JsonPointer v0;
v0 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
return v0;
}
public static com.fasterxml.jackson.core.JsonPointer forPath(com.fasterxml.jackson.core.JsonStreamContext, boolean)
{
com.fasterxml.jackson.core.JsonPointer$PointerSegment v12, v16, v19, v25, v6;
boolean v1, v14, v3, v4, v5, v8;
java.lang.StringBuilder v18;
com.fasterxml.jackson.core.JsonPointer v17, v2, v26, v28, v32;
int v10, v11, v13, v15, v20, v23, v29, v31, v33, v7;
java.lang.String v21, v22, v24, v27, v30, v34, v9;
com.fasterxml.jackson.core.JsonStreamContext v0;
v0 := @parameter0: com.fasterxml.jackson.core.JsonStreamContext;
v1 := @parameter1: boolean;
if v0 != null goto label01;
v2 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
return v2;
label01:
v3 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: boolean hasPathSegment()>();
if v3 != 0 goto label03;
if v1 == 0 goto label02;
v4 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: boolean inRoot()>();
if v4 == 0 goto label02;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: boolean hasCurrentIndex()>();
if v5 != 0 goto label03;
label02:
v0 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: com.fasterxml.jackson.core.JsonStreamContext getParent()>();
label03:
v6 = null;
v7 = 0;
label04:
if v0 == null goto label09;
v8 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: boolean inObject()>();
if v8 == 0 goto label06;
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: java.lang.String getCurrentName()>();
if v9 != null goto label05;
v9 = "";
label05:
v10 = virtualinvoke v9.<java.lang.String: int length()>();
v11 = 2 + v10;
v7 = v7 + v11;
v12 = new com.fasterxml.jackson.core.JsonPointer$PointerSegment;
v13 = (int) -1;
specialinvoke v12.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: void <init>(com.fasterxml.jackson.core.JsonPointer$PointerSegment,java.lang.String,int)>(v6, v9, v13);
v6 = v12;
goto label08;
label06:
v14 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: boolean inArray()>();
if v14 != 0 goto label07;
if v1 == 0 goto label08;
label07:
v15 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: int getCurrentIndex()>();
v7 = v7 + 6;
v16 = new com.fasterxml.jackson.core.JsonPointer$PointerSegment;
specialinvoke v16.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: void <init>(com.fasterxml.jackson.core.JsonPointer$PointerSegment,java.lang.String,int)>(v6, null, v15);
v6 = v16;
label08:
v0 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: com.fasterxml.jackson.core.JsonStreamContext getParent()>();
goto label04;
label09:
if v6 != null goto label10;
v17 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
return v17;
label10:
v18 = new java.lang.StringBuilder;
specialinvoke v18.<java.lang.StringBuilder: void <init>(int)>(v7);
v19 = null;
label11:
if v6 == null goto label14;
v19 = v6;
v20 = virtualinvoke v18.<java.lang.StringBuilder: int length()>();
v6.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: int pathOffset> = v20;
virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(47);
v21 = v6.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: java.lang.String property>;
if v21 == null goto label12;
v22 = v6.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: java.lang.String property>;
staticinvoke <com.fasterxml.jackson.core.JsonPointer: void _appendEscaped(java.lang.StringBuilder,java.lang.String)>(v18, v22);
goto label13;
label12:
v23 = v6.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: int index>;
virtualinvoke v18.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v23);
label13:
v6 = v6.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: com.fasterxml.jackson.core.JsonPointer$PointerSegment next>;
goto label11;
label14:
v24 = virtualinvoke v18.<java.lang.StringBuilder: java.lang.String toString()>();
v25 = v19;
v26 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
label15:
if v25 == null goto label18;
v27 = v25.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: java.lang.String property>;
if v27 == null goto label16;
v28 = new com.fasterxml.jackson.core.JsonPointer;
v29 = v25.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: int pathOffset>;
v30 = v25.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: java.lang.String property>;
specialinvoke v28.<com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer)>(v24, v29, v30, v26);
v26 = v28;
goto label17;
label16:
v31 = v25.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: int index>;
v32 = new com.fasterxml.jackson.core.JsonPointer;
v33 = v25.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: int pathOffset>;
v34 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v31);
specialinvoke v32.<com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,int,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer)>(v24, v33, v34, v31, v26);
v26 = v32;
label17:
v25 = v25.<com.fasterxml.jackson.core.JsonPointer$PointerSegment: com.fasterxml.jackson.core.JsonPointer$PointerSegment prev>;
goto label15;
label18:
return v26;
}
private static void _appendEscaped(java.lang.StringBuilder, java.lang.String)
{
int v2, v3;
char v4;
java.lang.StringBuilder v0;
java.lang.String v1;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.String;
v2 = 0;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
label1:
if v2 >= v3 goto label5;
v4 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
if v4 != 47 goto label2;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~1");
goto label4;
label2:
if v4 != 126 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("~0");
goto label4;
label3:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v4);
label4:
v2 = v2 + 1;
goto label1;
label5:
return;
}
public int length()
{
com.fasterxml.jackson.core.JsonPointer v0;
int v2, v3, v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset>;
v4 = v2 - v3;
return v4;
}
public boolean matches()
{
com.fasterxml.jackson.core.JsonPointer v0, v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
if v1 != null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public java.lang.String getMatchingProperty()
{
com.fasterxml.jackson.core.JsonPointer v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;
return v1;
}
public int getMatchingIndex()
{
int v1;
com.fasterxml.jackson.core.JsonPointer v0;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;
return v1;
}
public boolean mayMatchProperty()
{
com.fasterxml.jackson.core.JsonPointer v0;
java.lang.String v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean mayMatchElement()
{
int v1;
com.fasterxml.jackson.core.JsonPointer v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;
if v1 < 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.core.JsonPointer last()
{
com.fasterxml.jackson.core.JsonPointer v0, v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0;
v2 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
if v0 != v2 goto label1;
return null;
label1:
v3 = v1.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
v4 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
if v3 == v4 goto label2;
v1 = v3;
goto label1;
label2:
return v1;
}
public com.fasterxml.jackson.core.JsonPointer append(com.fasterxml.jackson.core.JsonPointer)
{
com.fasterxml.jackson.core.JsonPointer v0, v1, v10, v2, v3;
int v6, v7;
java.lang.String v4, v8, v9;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
v2 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
if v0 != v2 goto label1;
return v1;
label1:
v3 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
if v1 != v3 goto label2;
return v0;
label2:
v4 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v5 = virtualinvoke v4.<java.lang.String: boolean endsWith(java.lang.String)>("/");
if v5 == 0 goto label3;
v6 = virtualinvoke v4.<java.lang.String: int length()>();
v7 = v6 - 1;
v4 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v7);
label3:
v8 = v1.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
v10 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer compile(java.lang.String)>(v9);
return v10;
}
public com.fasterxml.jackson.core.JsonPointer appendProperty(java.lang.String)
{
char v3;
com.fasterxml.jackson.core.JsonPointer v0, v9;
int v6, v7;
java.lang.String v1, v4, v8;
boolean v2, v5;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.String;
if v1 == null goto label1;
v2 = virtualinvoke v1.<java.lang.String: boolean isEmpty()>();
if v2 == 0 goto label2;
label1:
return v0;
label2:
v3 = virtualinvoke v1.<java.lang.String: char charAt(int)>(0);
if v3 == 47 goto label3;
v1 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/\u0001");
label3:
v4 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v5 = virtualinvoke v4.<java.lang.String: boolean endsWith(java.lang.String)>("/");
if v5 == 0 goto label4;
v6 = virtualinvoke v4.<java.lang.String: int length()>();
v7 = v6 - 1;
v4 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v7);
label4:
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v4, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
v9 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer compile(java.lang.String)>(v8);
return v9;
}
public com.fasterxml.jackson.core.JsonPointer appendIndex(int)
{
java.lang.IllegalArgumentException v2;
com.fasterxml.jackson.core.JsonPointer v0, v8;
int v1, v5, v6;
java.lang.String v3, v7;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: int;
if v1 >= 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Negative index cannot be appended");
throw v2;
label1:
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v4 = virtualinvoke v3.<java.lang.String: boolean endsWith(java.lang.String)>("/");
if v4 == 0 goto label2;
v5 = virtualinvoke v3.<java.lang.String: int length()>();
v6 = v5 - 1;
v3 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int,int)>(0, v6);
label2:
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int)>(v3, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/\u0001");
v8 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer compile(java.lang.String)>(v7);
return v8;
}
public boolean matchesProperty(java.lang.String)
{
com.fasterxml.jackson.core.JsonPointer v0, v2;
java.lang.String v1, v3;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public com.fasterxml.jackson.core.JsonPointer matchProperty(java.lang.String)
{
com.fasterxml.jackson.core.JsonPointer v0, v2, v5;
java.lang.String v1, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
return v5;
label1:
return null;
}
public boolean matchesElement(int)
{
com.fasterxml.jackson.core.JsonPointer v0;
int v1, v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;
if v1 != v2 goto label1;
if v1 < 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonPointer matchElement(int)
{
com.fasterxml.jackson.core.JsonPointer v0, v3;
int v1, v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;
if v1 != v2 goto label1;
if v1 >= 0 goto label2;
label1:
return null;
label2:
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
return v3;
}
public com.fasterxml.jackson.core.JsonPointer tail()
{
com.fasterxml.jackson.core.JsonPointer v0, v1;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
return v1;
}
public com.fasterxml.jackson.core.JsonPointer head()
{
com.fasterxml.jackson.core.JsonPointer v0, v1, v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _head>;
if v1 != null goto label2;
v2 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
if v0 == v2 goto label1;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _constructHead()>();
label1:
v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _head> = v1;
label2:
return v1;
}
public java.lang.String toString()
{
com.fasterxml.jackson.core.JsonPointer v0;
int v1, v4;
java.lang.String v2, v3, v5;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset>;
if v1 > 0 goto label1;
v2 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
return v2;
label1:
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v4 = v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset>;
v5 = virtualinvoke v3.<java.lang.String: java.lang.String substring(int)>(v4);
return v5;
}
public int hashCode()
{
com.fasterxml.jackson.core.JsonPointer v0;
int v1, v3;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = v0.<com.fasterxml.jackson.core.JsonPointer: int _hashCode>;
if v1 != 0 goto label2;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String toString()>();
v1 = virtualinvoke v2.<java.lang.String: int hashCode()>();
if v1 != 0 goto label1;
v3 = (int) -1;
v1 = v3;
label1:
v0.<com.fasterxml.jackson.core.JsonPointer: int _hashCode> = v1;
label2:
return v1;
}
public boolean equals(java.lang.Object)
{
com.fasterxml.jackson.core.JsonPointer v0;
int v4, v6;
java.lang.Object v1;
java.lang.String v3, v5;
boolean v2, v7;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.core.JsonPointer;
if v2 != 0 goto label3;
return 0;
label3:
v3 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v4 = v0.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset>;
v5 = v1.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _asString>;
v6 = v1.<com.fasterxml.jackson.core.JsonPointer: int _asStringOffset>;
v7 = specialinvoke v0.<com.fasterxml.jackson.core.JsonPointer: boolean _compare(java.lang.String,int,java.lang.String,int)>(v3, v4, v5, v6);
return v7;
}
private final boolean _compare(java.lang.String, int, java.lang.String, int)
{
char v10, v12;
com.fasterxml.jackson.core.JsonPointer v0;
int v11, v2, v4, v5, v6, v7, v8, v9;
java.lang.String v1, v3;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: int;
v5 = virtualinvoke v1.<java.lang.String: int length()>();
v6 = v5 - v2;
v7 = virtualinvoke v3.<java.lang.String: int length()>();
v8 = v7 - v4;
if v6 == v8 goto label1;
return 0;
label1:
if v2 >= v5 goto label2;
v9 = v2;
v2 = v2 + 1;
v10 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v9);
v11 = v4;
v4 = v4 + 1;
v12 = virtualinvoke v3.<java.lang.String: char charAt(int)>(v11);
if v10 == v12 goto label1;
return 0;
label2:
return 1;
}
private static final int _parseIndex(java.lang.String)
{
char v3, v7;
long v9;
byte v10, v4;
int v1, v11, v12, v2, v5, v6, v8;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: int length()>();
if v1 == 0 goto label01;
if v1 <= 10 goto label02;
label01:
v2 = (int) -1;
return v2;
label02:
v3 = virtualinvoke v0.<java.lang.String: char charAt(int)>(0);
if v3 > 48 goto label05;
if v1 != 1 goto label03;
if v3 != 48 goto label03;
v4 = 0;
goto label04;
label03:
v4 = -1;
label04:
return v4;
label05:
if v3 <= 57 goto label06;
v5 = (int) -1;
return v5;
label06:
v6 = 1;
label07:
if v6 >= v1 goto label10;
v7 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v6);
if v7 > 57 goto label08;
if v7 >= 48 goto label09;
label08:
v8 = (int) -1;
return v8;
label09:
v6 = v6 + 1;
goto label07;
label10:
if v1 != 10 goto label11;
v9 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: long parseLong(java.lang.String)>(v0);
v10 = v9 cmp 2147483647L;
if v10 <= 0 goto label11;
v11 = (int) -1;
return v11;
label11:
v12 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: int parseInt(java.lang.String)>(v0);
return v12;
}
protected static com.fasterxml.jackson.core.JsonPointer _parseTail(java.lang.String)
{
com.fasterxml.jackson.core.JsonPointer v13, v17;
int v10, v11, v15, v2, v3, v4, v7;
java.lang.String v0, v12, v16, v8;
com.fasterxml.jackson.core.JsonPointer$PointerParent v1, v14, v6;
char v5;
java.lang.StringBuilder v9;
v0 := @parameter0: java.lang.String;
v1 = null;
v2 = 1;
v3 = virtualinvoke v0.<java.lang.String: int length()>();
v4 = 0;
label1:
if v2 >= v3 goto label4;
v5 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v2);
if v5 != 47 goto label2;
v6 = new com.fasterxml.jackson.core.JsonPointer$PointerParent;
v7 = v4 + 1;
v8 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int,int)>(v7, v2);
specialinvoke v6.<com.fasterxml.jackson.core.JsonPointer$PointerParent: void <init>(com.fasterxml.jackson.core.JsonPointer$PointerParent,int,java.lang.String)>(v1, v4, v8);
v1 = v6;
v4 = v2;
v2 = v2 + 1;
goto label1;
label2:
v2 = v2 + 1;
if v5 != 126 goto label1;
if v2 >= v3 goto label4;
v9 = new java.lang.StringBuilder;
specialinvoke v9.<java.lang.StringBuilder: void <init>(int)>(32);
v10 = v4 + 1;
v11 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: int _extractEscapedSegment(java.lang.String,int,int,java.lang.StringBuilder)>(v0, v10, v2, v9);
v12 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.String toString()>();
if v11 >= 0 goto label3;
v13 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _buildPath(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer$PointerParent)>(v0, v4, v12, v1);
return v13;
label3:
v14 = new com.fasterxml.jackson.core.JsonPointer$PointerParent;
specialinvoke v14.<com.fasterxml.jackson.core.JsonPointer$PointerParent: void <init>(com.fasterxml.jackson.core.JsonPointer$PointerParent,int,java.lang.String)>(v1, v4, v12);
v1 = v14;
v4 = v11;
v2 = v11 + 1;
goto label1;
label4:
v15 = v4 + 1;
v16 = virtualinvoke v0.<java.lang.String: java.lang.String substring(int)>(v15);
v17 = staticinvoke <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _buildPath(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer$PointerParent)>(v0, v4, v16, v1);
return v17;
}
private static com.fasterxml.jackson.core.JsonPointer _buildPath(java.lang.String, int, java.lang.String, com.fasterxml.jackson.core.JsonPointer$PointerParent)
{
com.fasterxml.jackson.core.JsonPointer v4, v5, v6, v7;
int v1, v8;
java.lang.String v0, v2, v9;
com.fasterxml.jackson.core.JsonPointer$PointerParent v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: com.fasterxml.jackson.core.JsonPointer$PointerParent;
v4 = new com.fasterxml.jackson.core.JsonPointer;
v5 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
specialinvoke v4.<com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer)>(v0, v1, v2, v5);
v6 = v4;
label1:
if v3 == null goto label2;
v7 = new com.fasterxml.jackson.core.JsonPointer;
v8 = v3.<com.fasterxml.jackson.core.JsonPointer$PointerParent: int fullPathOffset>;
v9 = v3.<com.fasterxml.jackson.core.JsonPointer$PointerParent: java.lang.String segment>;
specialinvoke v7.<com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,int,java.lang.String,com.fasterxml.jackson.core.JsonPointer)>(v0, v8, v9, v6);
v6 = v7;
v3 = v3.<com.fasterxml.jackson.core.JsonPointer$PointerParent: com.fasterxml.jackson.core.JsonPointer$PointerParent parent>;
goto label1;
label2:
return v6;
}
protected static int _extractEscapedSegment(java.lang.String, int, int, java.lang.StringBuilder)
{
char v10, v12, v9;
int v1, v11, v13, v2, v4, v5, v6, v7, v8;
java.lang.StringBuilder v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: java.lang.StringBuilder;
v4 = virtualinvoke v0.<java.lang.String: int length()>();
v5 = v2 - 1;
v6 = v5 - v1;
if v6 <= 0 goto label1;
v7 = v2 - 1;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v0, v1, v7);
label1:
v8 = v2 + 1;
v9 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v2);
staticinvoke <com.fasterxml.jackson.core.JsonPointer: void _appendEscape(java.lang.StringBuilder,char)>(v3, v9);
label2:
if v8 >= v4 goto label5;
v10 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v8);
if v10 != 47 goto label3;
return v8;
label3:
v8 = v8 + 1;
if v10 != 126 goto label4;
if v8 >= v4 goto label4;
v11 = v8;
v8 = v8 + 1;
v12 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v11);
staticinvoke <com.fasterxml.jackson.core.JsonPointer: void _appendEscape(java.lang.StringBuilder,char)>(v3, v12);
goto label2;
label4:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v10);
goto label2;
label5:
v13 = (int) -1;
return v13;
}
private static void _appendEscape(java.lang.StringBuilder, char)
{
char v1;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: char;
if v1 != 48 goto label1;
v1 = 126;
goto label3;
label1:
if v1 != 49 goto label2;
v1 = 47;
goto label3;
label2:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(126);
label3:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v1);
return;
}
protected com.fasterxml.jackson.core.JsonPointer _constructHead()
{
com.fasterxml.jackson.core.JsonPointer v0, v1, v12, v2, v4, v6;
int v11, v3, v7, v8;
java.lang.String v10, v5, v9;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer last()>();
if v1 != v0 goto label1;
v2 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
return v2;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonPointer: int length()>();
v4 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String toString()>();
v6 = new com.fasterxml.jackson.core.JsonPointer;
v7 = virtualinvoke v5.<java.lang.String: int length()>();
v8 = v7 - v3;
v9 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v8);
v10 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;
v11 = v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;
v12 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _constructHead(int,com.fasterxml.jackson.core.JsonPointer)>(v3, v1);
specialinvoke v6.<com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,int,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer)>(v9, 0, v10, v11, v12);
return v6;
}
protected com.fasterxml.jackson.core.JsonPointer _constructHead(int, com.fasterxml.jackson.core.JsonPointer)
{
com.fasterxml.jackson.core.JsonPointer v0, v12, v2, v3, v4, v6;
int v1, v11, v7, v8;
java.lang.String v10, v5, v9;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonPointer;
if v0 != v2 goto label1;
v3 = <com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY>;
return v3;
label1:
v4 = v0.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _nextSegment>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String toString()>();
v6 = new com.fasterxml.jackson.core.JsonPointer;
v7 = virtualinvoke v5.<java.lang.String: int length()>();
v8 = v7 - v1;
v9 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v8);
v10 = v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String _matchingPropertyName>;
v11 = v0.<com.fasterxml.jackson.core.JsonPointer: int _matchingElementIndex>;
v12 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer _constructHead(int,com.fasterxml.jackson.core.JsonPointer)>(v1, v2);
specialinvoke v6.<com.fasterxml.jackson.core.JsonPointer: void <init>(java.lang.String,int,java.lang.String,int,com.fasterxml.jackson.core.JsonPointer)>(v9, 0, v10, v11, v12);
return v6;
}
private java.lang.Object writeReplace()
{
com.fasterxml.jackson.core.JsonPointer$Serialization v1;
com.fasterxml.jackson.core.JsonPointer v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.core.JsonPointer;
v1 = new com.fasterxml.jackson.core.JsonPointer$Serialization;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.JsonPointer: java.lang.String toString()>();
specialinvoke v1.<com.fasterxml.jackson.core.JsonPointer$Serialization: void <init>(java.lang.String)>(v2);
return v1;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonPointer v0;
v0 = new com.fasterxml.jackson.core.JsonPointer;
specialinvoke v0.<com.fasterxml.jackson.core.JsonPointer: void <init>()>();
<com.fasterxml.jackson.core.JsonPointer: com.fasterxml.jackson.core.JsonPointer EMPTY> = v0;
return;
}
}