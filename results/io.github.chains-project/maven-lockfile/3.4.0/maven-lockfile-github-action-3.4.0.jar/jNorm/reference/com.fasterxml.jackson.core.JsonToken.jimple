public final enum class com.fasterxml.jackson.core.JsonToken extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE;
public static final enum com.fasterxml.jackson.core.JsonToken START_OBJECT;
public static final enum com.fasterxml.jackson.core.JsonToken END_OBJECT;
public static final enum com.fasterxml.jackson.core.JsonToken START_ARRAY;
public static final enum com.fasterxml.jackson.core.JsonToken END_ARRAY;
public static final enum com.fasterxml.jackson.core.JsonToken FIELD_NAME;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_STRING;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_TRUE;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_FALSE;
public static final enum com.fasterxml.jackson.core.JsonToken VALUE_NULL;
final java.lang.String _serialized;
final char[] _serializedChars;
final byte[] _serializedBytes;
final int _id;
final boolean _isStructStart;
final boolean _isStructEnd;
final boolean _isNumber;
final boolean _isBoolean;
final boolean _isScalar;
private static final com.fasterxml.jackson.core.JsonToken[] $VALUES;
public static com.fasterxml.jackson.core.JsonToken[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken[] v0;
v0 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.core.JsonToken valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/core/JsonToken;", v0);
return v1;
}
private void <init>(java.lang.String, int, java.lang.String, int)
{
byte[] v10, v8;
int v19, v2, v4, v7, v9;
com.fasterxml.jackson.core.JsonToken v0;
java.lang.String v1, v3;
boolean v13, v14, v15, v16, v17, v18, v20;
char v12;
char[] v11, v5, v6;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
if v3 != null goto label01;
v0.<com.fasterxml.jackson.core.JsonToken: java.lang.String _serialized> = null;
v0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars> = null;
v0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes> = null;
goto label03;
label01:
v0.<com.fasterxml.jackson.core.JsonToken: java.lang.String _serialized> = v3;
v5 = virtualinvoke v3.<java.lang.String: char[] toCharArray()>();
v0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars> = v5;
v6 = v0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars>;
v7 = lengthof v6;
v8 = newarray (byte)[v7];
v0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes> = v8;
v9 = 0;
label02:
if v9 >= v7 goto label03;
v10 = v0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes>;
v11 = v0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars>;
v12 = v11[v9];
v10[v9] = v12;
v9 = v9 + 1;
goto label02;
label03:
v0.<com.fasterxml.jackson.core.JsonToken: int _id> = v4;
if v4 == 10 goto label04;
if v4 != 9 goto label05;
label04:
v13 = 1;
goto label06;
label05:
v13 = 0;
label06:
v0.<com.fasterxml.jackson.core.JsonToken: boolean _isBoolean> = v13;
if v4 == 7 goto label07;
if v4 != 8 goto label08;
label07:
v14 = 1;
goto label09;
label08:
v14 = 0;
label09:
v0.<com.fasterxml.jackson.core.JsonToken: boolean _isNumber> = v14;
if v4 == 1 goto label10;
if v4 != 3 goto label11;
label10:
v15 = 1;
goto label12;
label11:
v15 = 0;
label12:
v0.<com.fasterxml.jackson.core.JsonToken: boolean _isStructStart> = v15;
if v4 == 2 goto label13;
if v4 != 4 goto label14;
label13:
v16 = 1;
goto label15;
label14:
v16 = 0;
label15:
v0.<com.fasterxml.jackson.core.JsonToken: boolean _isStructEnd> = v16;
v17 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isStructStart>;
if v17 != 0 goto label16;
v18 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isStructEnd>;
if v18 != 0 goto label16;
if v4 == 5 goto label16;
v19 = (int) -1;
if v4 == v19 goto label16;
v20 = 1;
goto label17;
label16:
v20 = 0;
label17:
v0.<com.fasterxml.jackson.core.JsonToken: boolean _isScalar> = v20;
return;
}
public final int id()
{
int v1;
com.fasterxml.jackson.core.JsonToken v0;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: int _id>;
return v1;
}
public final java.lang.String asString()
{
com.fasterxml.jackson.core.JsonToken v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: java.lang.String _serialized>;
return v1;
}
public final char[] asCharArray()
{
char[] v1;
com.fasterxml.jackson.core.JsonToken v0;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: char[] _serializedChars>;
return v1;
}
public final byte[] asByteArray()
{
byte[] v1;
com.fasterxml.jackson.core.JsonToken v0;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: byte[] _serializedBytes>;
return v1;
}
public final boolean isNumeric()
{
com.fasterxml.jackson.core.JsonToken v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isNumber>;
return v1;
}
public final boolean isStructStart()
{
com.fasterxml.jackson.core.JsonToken v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isStructStart>;
return v1;
}
public final boolean isStructEnd()
{
com.fasterxml.jackson.core.JsonToken v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isStructEnd>;
return v1;
}
public final boolean isScalarValue()
{
com.fasterxml.jackson.core.JsonToken v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isScalar>;
return v1;
}
public final boolean isBoolean()
{
com.fasterxml.jackson.core.JsonToken v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.JsonToken;
v1 = v0.<com.fasterxml.jackson.core.JsonToken: boolean _isBoolean>;
return v1;
}
private static com.fasterxml.jackson.core.JsonToken[] $values()
{
com.fasterxml.jackson.core.JsonToken[] v0;
com.fasterxml.jackson.core.JsonToken v1, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (com.fasterxml.jackson.core.JsonToken)[13];
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
v0[5] = v6;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
v0[6] = v7;
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v0[7] = v8;
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
v0[8] = v9;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v0[9] = v10;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;
v0[10] = v11;
v12 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;
v0[11] = v12;
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
v0[12] = v13;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonToken[] v14;
int v1;
com.fasterxml.jackson.core.JsonToken v0, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new com.fasterxml.jackson.core.JsonToken;
v1 = (int) -1;
specialinvoke v0.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("NOT_AVAILABLE", 0, null, v1);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken NOT_AVAILABLE> = v0;
v2 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v2.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("START_OBJECT", 1, "{", 1);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT> = v2;
v3 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v3.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("END_OBJECT", 2, "}", 2);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT> = v3;
v4 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v4.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("START_ARRAY", 3, "[", 3);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY> = v4;
v5 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v5.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("END_ARRAY", 4, "]", 4);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY> = v5;
v6 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v6.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("FIELD_NAME", 5, null, 5);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME> = v6;
v7 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v7.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_EMBEDDED_OBJECT", 6, null, 12);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT> = v7;
v8 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v8.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_STRING", 7, null, 6);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING> = v8;
v9 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v9.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_NUMBER_INT", 8, null, 7);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT> = v9;
v10 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v10.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_NUMBER_FLOAT", 9, null, 8);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT> = v10;
v11 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v11.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_TRUE", 10, "true", 9);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE> = v11;
v12 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v12.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_FALSE", 11, "false", 10);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE> = v12;
v13 = new com.fasterxml.jackson.core.JsonToken;
specialinvoke v13.<com.fasterxml.jackson.core.JsonToken: void <init>(java.lang.String,int,java.lang.String,int)>("VALUE_NULL", 12, "null", 11);
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL> = v13;
v14 = staticinvoke <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] $values()>();
<com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] $VALUES> = v14;
return;
}
}