public class com.fasterxml.jackson.core.format.DataFormatMatcher extends java.lang.Object
{
protected final java.io.InputStream _originalStream;
protected final byte[] _bufferedData;
protected final int _bufferedStart;
protected final int _bufferedLength;
protected final com.fasterxml.jackson.core.JsonFactory _match;
protected final com.fasterxml.jackson.core.format.MatchStrength _matchStrength;
protected void <init>(java.io.InputStream, byte[], int, int, com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.core.format.MatchStrength)
{
byte[] v2;
java.lang.Object[] v11;
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
java.lang.Integer v12, v13, v15;
int v14, v3, v4, v7, v8, v9;
java.lang.String v16;
java.lang.IllegalArgumentException v10;
com.fasterxml.jackson.core.format.MatchStrength v6;
com.fasterxml.jackson.core.JsonFactory v5;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: com.fasterxml.jackson.core.JsonFactory;
v6 := @parameter5: com.fasterxml.jackson.core.format.MatchStrength;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: java.io.InputStream _originalStream> = v1;
v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: byte[] _bufferedData> = v2;
v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedStart> = v3;
v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedLength> = v4;
v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory _match> = v5;
v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.format.MatchStrength _matchStrength> = v6;
v7 = v3 | v4;
if v7 < 0 goto label1;
v8 = v3 + v4;
v9 = lengthof v2;
if v8 <= v9 goto label2;
label1:
v10 = new java.lang.IllegalArgumentException;
v11 = newarray (java.lang.Object)[3];
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v3);
v11[0] = v12;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v11[1] = v13;
v14 = lengthof v2;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v14);
v11[2] = v15;
v16 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Illegal start/length (%d/%d) wrt input array of %d bytes", v11);
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v10;
label2:
return;
}
public boolean hasMatch()
{
com.fasterxml.jackson.core.JsonFactory v1;
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory _match>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.core.format.MatchStrength getMatchStrength()
{
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
com.fasterxml.jackson.core.format.MatchStrength v1, v2;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.format.MatchStrength _matchStrength>;
if v1 != null goto label1;
v2 = <com.fasterxml.jackson.core.format.MatchStrength: com.fasterxml.jackson.core.format.MatchStrength INCONCLUSIVE>;
goto label2;
label1:
v2 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.format.MatchStrength _matchStrength>;
label2:
return v2;
}
public com.fasterxml.jackson.core.JsonFactory getMatch()
{
com.fasterxml.jackson.core.JsonFactory v1;
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory _match>;
return v1;
}
public java.lang.String getMatchedFormatName()
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
java.lang.String v3;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 = virtualinvoke v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: boolean hasMatch()>();
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory getMatch()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public com.fasterxml.jackson.core.JsonParser createParserWithMatch() throws java.io.IOException
{
byte[] v4;
com.fasterxml.jackson.core.JsonParser v10, v7;
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
com.fasterxml.jackson.core.JsonFactory v1, v3, v8;
int v5, v6;
java.io.InputStream v2, v9;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory _match>;
if v1 != null goto label1;
return null;
label1:
v2 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: java.io.InputStream _originalStream>;
if v2 != null goto label2;
v3 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory _match>;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: byte[] _bufferedData>;
v5 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedStart>;
v6 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedLength>;
v7 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v4, v5, v6);
return v7;
label2:
v8 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: com.fasterxml.jackson.core.JsonFactory _match>;
v9 = virtualinvoke v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: java.io.InputStream getDataStream()>();
v10 = virtualinvoke v8.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v9);
return v10;
}
public java.io.InputStream getDataStream()
{
byte[] v3, v8;
com.fasterxml.jackson.core.format.DataFormatMatcher v0;
java.io.ByteArrayInputStream v2;
int v10, v4, v5, v9;
com.fasterxml.jackson.core.io.MergedStream v6;
java.io.InputStream v1, v7;
v0 := @this: com.fasterxml.jackson.core.format.DataFormatMatcher;
v1 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: java.io.InputStream _originalStream>;
if v1 != null goto label1;
v2 = new java.io.ByteArrayInputStream;
v3 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: byte[] _bufferedData>;
v4 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedStart>;
v5 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedLength>;
specialinvoke v2.<java.io.ByteArrayInputStream: void <init>(byte[],int,int)>(v3, v4, v5);
return v2;
label1:
v6 = new com.fasterxml.jackson.core.io.MergedStream;
v7 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: java.io.InputStream _originalStream>;
v8 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: byte[] _bufferedData>;
v9 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedStart>;
v10 = v0.<com.fasterxml.jackson.core.format.DataFormatMatcher: int _bufferedLength>;
specialinvoke v6.<com.fasterxml.jackson.core.io.MergedStream: void <init>(com.fasterxml.jackson.core.io.IOContext,java.io.InputStream,byte[],int,int)>(null, v7, v8, v9, v10);
return v6;
}
}