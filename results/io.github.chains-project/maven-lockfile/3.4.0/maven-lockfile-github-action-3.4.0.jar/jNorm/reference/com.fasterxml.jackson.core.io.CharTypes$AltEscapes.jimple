class com.fasterxml.jackson.core.io.CharTypes$AltEscapes extends java.lang.Object
{
public static final com.fasterxml.jackson.core.io.CharTypes$AltEscapes instance;
private int[][] _altEscapes;
private void <init>()
{
int[][] v1;
com.fasterxml.jackson.core.io.CharTypes$AltEscapes v0;
v0 := @this: com.fasterxml.jackson.core.io.CharTypes$AltEscapes;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = newarray (int[])[128];
v0.<com.fasterxml.jackson.core.io.CharTypes$AltEscapes: int[][] _altEscapes> = v1;
return;
}
public int[] escapesFor(int)
{
int[][] v2, v7;
com.fasterxml.jackson.core.io.CharTypes$AltEscapes v0;
int[] v3, v4;
int v1, v5, v6;
v0 := @this: com.fasterxml.jackson.core.io.CharTypes$AltEscapes;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.CharTypes$AltEscapes: int[][] _altEscapes>;
v3 = v2[v1];
if v3 != null goto label2;
v4 = <com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;
v3 = staticinvoke <java.util.Arrays: int[] copyOf(int[],int)>(v4, 128);
v5 = v3[v1];
if v5 != 0 goto label1;
v6 = (int) -1;
v3[v1] = v6;
label1:
v7 = v0.<com.fasterxml.jackson.core.io.CharTypes$AltEscapes: int[][] _altEscapes>;
v7[v1] = v3;
label2:
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.core.io.CharTypes$AltEscapes v0;
v0 = new com.fasterxml.jackson.core.io.CharTypes$AltEscapes;
specialinvoke v0.<com.fasterxml.jackson.core.io.CharTypes$AltEscapes: void <init>()>();
<com.fasterxml.jackson.core.io.CharTypes$AltEscapes: com.fasterxml.jackson.core.io.CharTypes$AltEscapes instance> = v0;
return;
}
}