public final class com.fasterxml.jackson.core.io.CharTypes extends java.lang.Object
{
protected static final char[] HC;
protected static final char[] HClower;
protected static final byte[] HB;
protected static final byte[] HBlower;
protected static final int[] sInputCodes;
protected static final int[] sInputCodesUTF8;
protected static final int[] sInputCodesJsNames;
protected static final int[] sInputCodesUtf8JsNames;
protected static final int[] sInputCodesComment;
protected static final int[] sInputCodesWS;
protected static final int[] sOutputEscapes128;
protected static final int[] sHexValues;
public void <init>()
{
com.fasterxml.jackson.core.io.CharTypes v0;
v0 := @this: com.fasterxml.jackson.core.io.CharTypes;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static int[] getInputCodeLatin1()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes>;
return v0;
}
public static int[] getInputCodeUtf8()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8>;
return v0;
}
public static int[] getInputCodeLatin1JsNames()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesJsNames>;
return v0;
}
public static int[] getInputCodeUtf8JsNames()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUtf8JsNames>;
return v0;
}
public static int[] getInputCodeComment()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesComment>;
return v0;
}
public static int[] getInputCodeWS()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesWS>;
return v0;
}
public static int[] get7BitOutputEscapes()
{
int[] v0;
v0 = <com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;
return v0;
}
public static int[] get7BitOutputEscapes(int)
{
int[] v1, v3;
int v0;
com.fasterxml.jackson.core.io.CharTypes$AltEscapes v2;
v0 := @parameter0: int;
if v0 != 34 goto label1;
v1 = <com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;
return v1;
label1:
v2 = <com.fasterxml.jackson.core.io.CharTypes$AltEscapes: com.fasterxml.jackson.core.io.CharTypes$AltEscapes instance>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.io.CharTypes$AltEscapes: int[] escapesFor(int)>(v0);
return v3;
}
public static int charToHex(int)
{
int[] v1;
int v0, v2, v3;
v0 := @parameter0: int;
v1 = <com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;
v2 = v0 & 255;
v3 = v1[v2];
return v3;
}
public static char hexToChar(int)
{
int v0;
char[] v1;
char v2;
v0 := @parameter0: int;
v1 = <com.fasterxml.jackson.core.io.CharTypes: char[] HC>;
v2 = v1[v0];
return v2;
}
public static void appendQuoted(java.lang.StringBuilder, java.lang.String)
{
char v11, v13, v14, v6;
int[] v2;
int v10, v3, v4, v5, v7, v8;
char[] v12, v9;
java.lang.StringBuilder v0;
java.lang.String v1;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.String;
v2 = <com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128>;
v3 = lengthof v2;
v4 = 0;
v5 = virtualinvoke v1.<java.lang.String: int length()>();
label1:
if v4 >= v5 goto label6;
v6 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v4);
if v6 >= v3 goto label2;
v7 = v2[v6];
if v7 != 0 goto label3;
label2:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v6);
goto label5;
label3:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(92);
v8 = v2[v6];
if v8 >= 0 goto label4;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(117);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
v9 = <com.fasterxml.jackson.core.io.CharTypes: char[] HC>;
v10 = v6 >> 4;
v11 = v9[v10];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v11);
v12 = <com.fasterxml.jackson.core.io.CharTypes: char[] HC>;
v13 = v6 & 15;
v14 = v12[v13];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v14);
goto label5;
label4:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v8);
label5:
v4 = v4 + 1;
goto label1;
label6:
return;
}
public static char[] copyHexChars()
{
char[] v0;
v0 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: char[] copyHexChars(boolean)>(1);
return v0;
}
public static char[] copyHexChars(boolean)
{
char[] v1, v3;
java.lang.Object v2;
boolean v0;
v0 := @parameter0: boolean;
if v0 == 0 goto label1;
v1 = <com.fasterxml.jackson.core.io.CharTypes: char[] HC>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.io.CharTypes: char[] HClower>;
virtualinvoke v3.<java.lang.Object: java.lang.Object clone()>();
label2:
return v2;
}
public static byte[] copyHexBytes()
{
byte[] v0;
v0 = staticinvoke <com.fasterxml.jackson.core.io.CharTypes: byte[] copyHexBytes(boolean)>(1);
return v0;
}
public static byte[] copyHexBytes(boolean)
{
byte[] v1, v3;
java.lang.Object v2;
boolean v0;
v0 := @parameter0: boolean;
if v0 == 0 goto label1;
v1 = <com.fasterxml.jackson.core.io.CharTypes: byte[] HB>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.io.CharTypes: byte[] HBlower>;
virtualinvoke v3.<java.lang.Object: java.lang.Object clone()>();
label2:
return v2;
}
static void <clinit>()
{
byte[] v12, v6, v7, v9;
byte v25;
int[] v15, v18, v20, v21, v28, v32, v33, v35, v36, v38, v39, v41, v44, v45, v48, v51, v54;
boolean v31;
int v16, v17, v19, v22, v23, v24, v26, v27, v29, v30, v34, v37, v40, v42, v43, v46, v47, v49, v5, v50, v52, v53, v55, v56, v8;
java.lang.String v0, v2;
char v11, v14;
char[] v1, v10, v13, v3, v4;
v0 = "0123456789ABCDEF";
v1 = virtualinvoke v0.<java.lang.String: char[] toCharArray()>();
<com.fasterxml.jackson.core.io.CharTypes: char[] HC> = v1;
v2 = "0123456789abcdef";
v3 = virtualinvoke v2.<java.lang.String: char[] toCharArray()>();
<com.fasterxml.jackson.core.io.CharTypes: char[] HClower> = v3;
v4 = <com.fasterxml.jackson.core.io.CharTypes: char[] HC>;
v5 = lengthof v4;
v6 = newarray (byte)[v5];
<com.fasterxml.jackson.core.io.CharTypes: byte[] HB> = v6;
v7 = newarray (byte)[v5];
<com.fasterxml.jackson.core.io.CharTypes: byte[] HBlower> = v7;
v8 = 0;
label01:
if v8 >= v5 goto label02;
v9 = <com.fasterxml.jackson.core.io.CharTypes: byte[] HB>;
v10 = <com.fasterxml.jackson.core.io.CharTypes: char[] HC>;
v11 = v10[v8];
v9[v8] = v11;
v12 = <com.fasterxml.jackson.core.io.CharTypes: byte[] HBlower>;
v13 = <com.fasterxml.jackson.core.io.CharTypes: char[] HClower>;
v14 = v13[v8];
v12[v8] = v14;
v8 = v8 + 1;
goto label01;
label02:
v15 = newarray (int)[256];
v16 = 0;
label03:
if v16 >= 32 goto label04;
v17 = (int) -1;
v15[v16] = v17;
v16 = v16 + 1;
goto label03;
label04:
v15[34] = 1;
v15[92] = 1;
<com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes> = v15;
v18 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes>;
v19 = lengthof v18;
v20 = newarray (int)[v19];
v21 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodes>;
v22 = lengthof v20;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v21, 0, v20, 0, v22);
v23 = 128;
label05:
if v23 >= 256 goto label10;
v24 = v23 & 224;
if v24 != 192 goto label06;
v25 = 2;
goto label09;
label06:
v26 = v23 & 240;
if v26 != 224 goto label07;
v25 = 3;
goto label09;
label07:
v27 = v23 & 248;
if v27 != 240 goto label08;
v25 = 4;
goto label09;
label08:
v25 = -1;
label09:
v20[v23] = v25;
v23 = v23 + 1;
goto label05;
label10:
<com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8> = v20;
v28 = newarray (int)[256];
v29 = (int) -1;
staticinvoke <java.util.Arrays: void fill(int[],int)>(v28, v29);
v30 = 33;
label11:
if v30 >= 256 goto label13;
v31 = staticinvoke <java.lang.Character: boolean isJavaIdentifierPart(char)>(v30);
if v31 == 0 goto label12;
v28[v30] = 0;
label12:
v30 = v30 + 1;
goto label11;
label13:
v28[64] = 0;
v28[35] = 0;
v28[42] = 0;
v28[45] = 0;
v28[43] = 0;
<com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesJsNames> = v28;
v32 = newarray (int)[256];
v33 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesJsNames>;
v34 = lengthof v32;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v33, 0, v32, 0, v34);
staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(v32, 128, 128, 0);
<com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUtf8JsNames> = v32;
v35 = newarray (int)[256];
v36 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v36, 128, v35, 128, 128);
v37 = (int) -1;
staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(v35, 0, 32, v37);
v35[9] = 0;
v35[10] = 10;
v35[13] = 13;
v35[42] = 42;
<com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesComment> = v35;
v38 = newarray (int)[256];
v39 = <com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesUTF8>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v39, 128, v38, 128, 128);
v40 = (int) -1;
staticinvoke <java.util.Arrays: void fill(int[],int,int,int)>(v38, 0, 32, v40);
v38[32] = 1;
v38[9] = 1;
v38[10] = 10;
v38[13] = 13;
v38[47] = 47;
v38[35] = 35;
<com.fasterxml.jackson.core.io.CharTypes: int[] sInputCodesWS> = v38;
v41 = newarray (int)[128];
v42 = 0;
label14:
if v42 >= 32 goto label15;
v43 = (int) -1;
v41[v42] = v43;
v42 = v42 + 1;
goto label14;
label15:
v41[34] = 34;
v41[92] = 92;
v41[8] = 98;
v41[9] = 116;
v41[12] = 102;
v41[10] = 110;
v41[13] = 114;
<com.fasterxml.jackson.core.io.CharTypes: int[] sOutputEscapes128> = v41;
v44 = newarray (int)[256];
<com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues> = v44;
v45 = <com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;
v46 = (int) -1;
staticinvoke <java.util.Arrays: void fill(int[],int)>(v45, v46);
v47 = 0;
label16:
if v47 >= 10 goto label17;
v48 = <com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;
v49 = 48 + v47;
v48[v49] = v47;
v47 = v47 + 1;
goto label16;
label17:
v50 = 0;
label18:
if v50 >= 6 goto label19;
v51 = <com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;
v52 = 97 + v50;
v53 = 10 + v50;
v51[v52] = v53;
v54 = <com.fasterxml.jackson.core.io.CharTypes: int[] sHexValues>;
v55 = 65 + v50;
v56 = 10 + v50;
v54[v55] = v56;
v50 = v50 + 1;
goto label18;
label19:
return;
}
}