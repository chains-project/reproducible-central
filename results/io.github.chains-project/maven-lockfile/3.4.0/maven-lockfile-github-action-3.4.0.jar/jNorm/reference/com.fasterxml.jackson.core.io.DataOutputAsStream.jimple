public class com.fasterxml.jackson.core.io.DataOutputAsStream extends java.io.OutputStream
{
protected final java.io.DataOutput _output;
public void <init>(java.io.DataOutput)
{
java.io.DataOutput v1;
com.fasterxml.jackson.core.io.DataOutputAsStream v0;
v0 := @this: com.fasterxml.jackson.core.io.DataOutputAsStream;
v1 := @parameter0: java.io.DataOutput;
specialinvoke v0.<java.io.OutputStream: void <init>()>();
v0.<com.fasterxml.jackson.core.io.DataOutputAsStream: java.io.DataOutput _output> = v1;
return;
}
public void write(int) throws java.io.IOException
{
int v1;
java.io.DataOutput v2;
com.fasterxml.jackson.core.io.DataOutputAsStream v0;
v0 := @this: com.fasterxml.jackson.core.io.DataOutputAsStream;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.io.DataOutputAsStream: java.io.DataOutput _output>;
interfaceinvoke v2.<java.io.DataOutput: void write(int)>(v1);
return;
}
public void write(byte[]) throws java.io.IOException
{
byte[] v1;
java.io.DataOutput v2;
com.fasterxml.jackson.core.io.DataOutputAsStream v0;
int v3;
v0 := @this: com.fasterxml.jackson.core.io.DataOutputAsStream;
v1 := @parameter0: byte[];
v2 = v0.<com.fasterxml.jackson.core.io.DataOutputAsStream: java.io.DataOutput _output>;
v3 = lengthof v1;
interfaceinvoke v2.<java.io.DataOutput: void write(byte[],int,int)>(v1, 0, v3);
return;
}
public void write(byte[], int, int) throws java.io.IOException
{
byte[] v1;
java.io.DataOutput v4;
com.fasterxml.jackson.core.io.DataOutputAsStream v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.core.io.DataOutputAsStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<com.fasterxml.jackson.core.io.DataOutputAsStream: java.io.DataOutput _output>;
interfaceinvoke v4.<java.io.DataOutput: void write(byte[],int,int)>(v1, v2, v3);
return;
}
}