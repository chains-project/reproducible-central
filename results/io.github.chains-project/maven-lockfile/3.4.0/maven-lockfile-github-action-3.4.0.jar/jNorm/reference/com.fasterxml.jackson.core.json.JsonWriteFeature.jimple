public final enum class com.fasterxml.jackson.core.json.JsonWriteFeature extends java.lang.Enum implements com.fasterxml.jackson.core.FormatFeature
{
public static final enum com.fasterxml.jackson.core.json.JsonWriteFeature QUOTE_FIELD_NAMES;
public static final enum com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NAN_AS_STRINGS;
public static final enum com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NUMBERS_AS_STRINGS;
public static final enum com.fasterxml.jackson.core.json.JsonWriteFeature ESCAPE_NON_ASCII;
public static final enum com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_HEX_UPPER_CASE;
private final boolean _defaultState;
private final int _mask;
private final com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature;
private static final com.fasterxml.jackson.core.json.JsonWriteFeature[] $VALUES;
public static com.fasterxml.jackson.core.json.JsonWriteFeature[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.core.json.JsonWriteFeature[] v0;
v0 = <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.core.json.JsonWriteFeature valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/core/json/JsonWriteFeature;", v0);
return v1;
}
public static int collectDefaults()
{
int v0, v2, v3, v6;
com.fasterxml.jackson.core.json.JsonWriteFeature v4;
boolean v5;
com.fasterxml.jackson.core.json.JsonWriteFeature[] v1;
v0 = 0;
v1 = staticinvoke <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.json.JsonWriteFeature: boolean enabledByDefault()>();
if v5 == 0 goto label2;
v6 = virtualinvoke v4.<com.fasterxml.jackson.core.json.JsonWriteFeature: int getMask()>();
v0 = v0 | v6;
label2:
v3 = v3 + 1;
goto label1;
label3:
return v0;
}
private void <init>(java.lang.String, int, boolean, com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v4;
int v2, v5, v6;
java.lang.String v1;
com.fasterxml.jackson.core.json.JsonWriteFeature v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.core.json.JsonWriteFeature;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: com.fasterxml.jackson.core.JsonGenerator$Feature;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: boolean _defaultState> = v3;
v5 = virtualinvoke v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: int ordinal()>();
v6 = 1 << v5;
v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: int _mask> = v6;
v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature> = v4;
return;
}
public boolean enabledByDefault()
{
com.fasterxml.jackson.core.json.JsonWriteFeature v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonWriteFeature;
v1 = v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: boolean _defaultState>;
return v1;
}
public int getMask()
{
int v1;
com.fasterxml.jackson.core.json.JsonWriteFeature v0;
v0 := @this: com.fasterxml.jackson.core.json.JsonWriteFeature;
v1 = v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: int _mask>;
return v1;
}
public boolean enabledIn(int)
{
int v1, v2, v3;
com.fasterxml.jackson.core.json.JsonWriteFeature v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.core.json.JsonWriteFeature;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: int _mask>;
v3 = v1 & v2;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()
{
com.fasterxml.jackson.core.json.JsonWriteFeature v0;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
v0 := @this: com.fasterxml.jackson.core.json.JsonWriteFeature;
v1 = v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature _mappedFeature>;
return v1;
}
private static com.fasterxml.jackson.core.json.JsonWriteFeature[] $values()
{
com.fasterxml.jackson.core.json.JsonWriteFeature v1, v2, v3, v4, v5;
com.fasterxml.jackson.core.json.JsonWriteFeature[] v0;
v0 = newarray (com.fasterxml.jackson.core.json.JsonWriteFeature)[5];
v1 = <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature QUOTE_FIELD_NAMES>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NAN_AS_STRINGS>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NUMBERS_AS_STRINGS>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature ESCAPE_NON_ASCII>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_HEX_UPPER_CASE>;
v0[4] = v5;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonGenerator$Feature v1, v3, v5, v7, v9;
com.fasterxml.jackson.core.json.JsonWriteFeature[] v10;
com.fasterxml.jackson.core.json.JsonWriteFeature v0, v2, v4, v6, v8;
v0 = new com.fasterxml.jackson.core.json.JsonWriteFeature;
v1 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_FIELD_NAMES>;
specialinvoke v0.<com.fasterxml.jackson.core.json.JsonWriteFeature: void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature)>("QUOTE_FIELD_NAMES", 0, 1, v1);
<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature QUOTE_FIELD_NAMES> = v0;
v2 = new com.fasterxml.jackson.core.json.JsonWriteFeature;
v3 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature QUOTE_NON_NUMERIC_NUMBERS>;
specialinvoke v2.<com.fasterxml.jackson.core.json.JsonWriteFeature: void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature)>("WRITE_NAN_AS_STRINGS", 1, 1, v3);
<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NAN_AS_STRINGS> = v2;
v4 = new com.fasterxml.jackson.core.json.JsonWriteFeature;
v5 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_NUMBERS_AS_STRINGS>;
specialinvoke v4.<com.fasterxml.jackson.core.json.JsonWriteFeature: void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature)>("WRITE_NUMBERS_AS_STRINGS", 2, 0, v5);
<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_NUMBERS_AS_STRINGS> = v4;
v6 = new com.fasterxml.jackson.core.json.JsonWriteFeature;
v7 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature ESCAPE_NON_ASCII>;
specialinvoke v6.<com.fasterxml.jackson.core.json.JsonWriteFeature: void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature)>("ESCAPE_NON_ASCII", 3, 0, v7);
<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature ESCAPE_NON_ASCII> = v6;
v8 = new com.fasterxml.jackson.core.json.JsonWriteFeature;
v9 = <com.fasterxml.jackson.core.JsonGenerator$Feature: com.fasterxml.jackson.core.JsonGenerator$Feature WRITE_HEX_UPPER_CASE>;
specialinvoke v8.<com.fasterxml.jackson.core.json.JsonWriteFeature: void <init>(java.lang.String,int,boolean,com.fasterxml.jackson.core.JsonGenerator$Feature)>("WRITE_HEX_UPPER_CASE", 4, 1, v9);
<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature WRITE_HEX_UPPER_CASE> = v8;
v10 = staticinvoke <com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature[] $values()>();
<com.fasterxml.jackson.core.json.JsonWriteFeature: com.fasterxml.jackson.core.json.JsonWriteFeature[] $VALUES> = v10;
return;
}
}