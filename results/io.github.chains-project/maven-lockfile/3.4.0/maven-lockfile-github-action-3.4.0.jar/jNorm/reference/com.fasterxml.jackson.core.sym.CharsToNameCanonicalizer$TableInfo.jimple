final class com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo extends java.lang.Object
{
final int size;
final int longestCollisionList;
final java.lang.String[] symbols;
final com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets;
public void <init>(int, int, java.lang.String[], com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[])
{
int v1, v2;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo v0;
java.lang.String[] v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] v4;
v0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String[];
v4 := @parameter3: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: int size> = v1;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: int longestCollisionList> = v2;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: java.lang.String[] symbols> = v3;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets> = v4;
return;
}
public void <init>(com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer)
{
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer v1;
int v2, v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo v0;
java.lang.String[] v4;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] v5;
v0 := @this: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo;
v1 := @parameter0: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = v1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _size>;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: int size> = v2;
v3 = v1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: int _longestCollisionList>;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: int longestCollisionList> = v3;
v4 = v1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: java.lang.String[] _symbols>;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: java.lang.String[] symbols> = v4;
v5 = v1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] _buckets>;
v0.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] buckets> = v5;
return;
}
public static com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo createInitial(int)
{
int v0, v3;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo v1;
java.lang.String[] v2;
com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[] v4;
v0 := @parameter0: int;
v1 = new com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo;
v2 = newarray (java.lang.String)[v0];
v3 = v0 >> 1;
v4 = newarray (com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket)[v3];
specialinvoke v1.<com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$TableInfo: void <init>(int,int,java.lang.String[],com.fasterxml.jackson.core.sym.CharsToNameCanonicalizer$Bucket[])>(0, 0, v2, v4);
return v1;
}
}