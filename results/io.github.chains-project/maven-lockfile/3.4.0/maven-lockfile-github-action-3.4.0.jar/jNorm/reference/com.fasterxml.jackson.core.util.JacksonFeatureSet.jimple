public final class com.fasterxml.jackson.core.util.JacksonFeatureSet extends java.lang.Object
{
protected int _enabled;
protected void <init>(int)
{
int v1;
com.fasterxml.jackson.core.util.JacksonFeatureSet v0;
v0 := @this: com.fasterxml.jackson.core.util.JacksonFeatureSet;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled> = v1;
return;
}
public static com.fasterxml.jackson.core.util.JacksonFeatureSet fromDefaults(com.fasterxml.jackson.core.util.JacksonFeature[])
{
java.lang.Object[] v6;
com.fasterxml.jackson.core.util.JacksonFeature v13, v2;
java.lang.Integer v8;
int v1, v10, v11, v12, v15, v7;
java.lang.String v4, v9;
boolean v14;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.core.util.JacksonFeature[] v0;
java.lang.Class v3;
com.fasterxml.jackson.core.util.JacksonFeatureSet v16;
v0 := @parameter0: com.fasterxml.jackson.core.util.JacksonFeature[];
v1 = lengthof v0;
if v1 <= 31 goto label1;
v2 = v0[0];
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v5 = new java.lang.IllegalArgumentException;
v6 = newarray (java.lang.Object)[2];
v6[0] = v4;
v7 = lengthof v0;
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
v6[1] = v8;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Can not use type `%s` with JacksonFeatureSet: too many entries (%d > 31)", v6);
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v5;
label1:
v10 = 0;
v11 = lengthof v0;
v12 = 0;
label2:
if v12 >= v11 goto label4;
v13 = v0[v12];
v14 = interfaceinvoke v13.<com.fasterxml.jackson.core.util.JacksonFeature: boolean enabledByDefault()>();
if v14 == 0 goto label3;
v15 = interfaceinvoke v13.<com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();
v10 = v10 | v15;
label3:
v12 = v12 + 1;
goto label2;
label4:
v16 = new com.fasterxml.jackson.core.util.JacksonFeatureSet;
specialinvoke v16.<com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(v10);
return v16;
}
public static com.fasterxml.jackson.core.util.JacksonFeatureSet fromBitmask(int)
{
int v0;
com.fasterxml.jackson.core.util.JacksonFeatureSet v1;
v0 := @parameter0: int;
v1 = new com.fasterxml.jackson.core.util.JacksonFeatureSet;
specialinvoke v1.<com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(v0);
return v1;
}
public com.fasterxml.jackson.core.util.JacksonFeatureSet 'with'(com.fasterxml.jackson.core.util.JacksonFeature)
{
int v2, v3, v4, v5;
com.fasterxml.jackson.core.util.JacksonFeatureSet v0, v6;
com.fasterxml.jackson.core.util.JacksonFeature v1;
v0 := @this: com.fasterxml.jackson.core.util.JacksonFeatureSet;
v1 := @parameter0: com.fasterxml.jackson.core.util.JacksonFeature;
v2 = v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();
v4 = v2 | v3;
v5 = v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;
if v4 != v5 goto label1;
v6 = v0;
goto label2;
label1:
v6 = new com.fasterxml.jackson.core.util.JacksonFeatureSet;
specialinvoke v6.<com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(v4);
label2:
return v6;
}
public com.fasterxml.jackson.core.util.JacksonFeatureSet without(com.fasterxml.jackson.core.util.JacksonFeature)
{
com.fasterxml.jackson.core.util.JacksonFeature v1;
int v2, v3, v4, v5, v6, v7;
com.fasterxml.jackson.core.util.JacksonFeatureSet v0, v8, v9;
v0 := @this: com.fasterxml.jackson.core.util.JacksonFeatureSet;
v1 := @parameter0: com.fasterxml.jackson.core.util.JacksonFeature;
v2 = v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();
v4 = (int) -1;
v5 = v3 ^ v4;
v6 = v2 & v5;
v7 = v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;
if v6 != v7 goto label1;
v8 = v0;
goto label2;
label1:
v9 = new com.fasterxml.jackson.core.util.JacksonFeatureSet;
v8 = v9;
specialinvoke v9.<com.fasterxml.jackson.core.util.JacksonFeatureSet: void <init>(int)>(v6);
label2:
return v8;
}
public boolean isEnabled(com.fasterxml.jackson.core.util.JacksonFeature)
{
int v2, v3, v4;
com.fasterxml.jackson.core.util.JacksonFeatureSet v0;
com.fasterxml.jackson.core.util.JacksonFeature v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.core.util.JacksonFeatureSet;
v1 := @parameter0: com.fasterxml.jackson.core.util.JacksonFeature;
v2 = interfaceinvoke v1.<com.fasterxml.jackson.core.util.JacksonFeature: int getMask()>();
v3 = v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;
v4 = v2 & v3;
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public int asBitmask()
{
int v1;
com.fasterxml.jackson.core.util.JacksonFeatureSet v0;
v0 := @this: com.fasterxml.jackson.core.util.JacksonFeatureSet;
v1 = v0.<com.fasterxml.jackson.core.util.JacksonFeatureSet: int _enabled>;
return v1;
}
}