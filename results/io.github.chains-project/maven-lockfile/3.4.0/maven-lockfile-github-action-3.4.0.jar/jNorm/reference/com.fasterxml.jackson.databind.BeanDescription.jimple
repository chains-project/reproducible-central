public abstract class com.fasterxml.jackson.databind.BeanDescription extends java.lang.Object
{
protected final com.fasterxml.jackson.databind.JavaType _type;
protected void <init>(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.BeanDescription v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType _type> = v1;
return;
}
public com.fasterxml.jackson.databind.JavaType getType()
{
com.fasterxml.jackson.databind.BeanDescription v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 = v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType _type>;
return v1;
}
public java.lang.Class getBeanClass()
{
com.fasterxml.jackson.databind.BeanDescription v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 = v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType _type>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
return v2;
}
public boolean isRecordType()
{
com.fasterxml.jackson.databind.BeanDescription v0;
com.fasterxml.jackson.databind.JavaType v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 = v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType _type>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isRecordType()>();
return v2;
}
public boolean isNonStaticInnerClass()
{
com.fasterxml.jackson.databind.BeanDescription v0;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedClass: boolean isNonStaticInnerClass()>();
return v2;
}
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo();
public abstract com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo();
public abstract boolean hasKnownClassAnnotations();
public abstract com.fasterxml.jackson.databind.type.TypeBindings bindingsForBeanType();
public abstract com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type);
public abstract com.fasterxml.jackson.databind.util.Annotations getClassAnnotations();
public abstract java.util.List findProperties();
public abstract java.util.Set getIgnoredPropertyNames();
public abstract java.util.List findBackReferences();
public abstract java.util.Map findBackReferenceProperties();
public abstract java.util.List getConstructors();
public abstract java.util.List getConstructorsWithMode();
public abstract java.util.List getFactoryMethods();
public abstract java.util.List getFactoryMethodsWithMode();
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedConstructor findDefaultConstructor();
public abstract transient java.lang.reflect.Constructor findSingleArgConstructor(java.lang.Class[]);
public abstract transient java.lang.reflect.Method findFactoryMethod(java.lang.Class[]);
public com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor()
{
com.fasterxml.jackson.databind.BeanDescription v0;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
return null;
}
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor();
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter();
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor();
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedMethod findMethod(java.lang.String, java.lang.Class[]);
public abstract com.fasterxml.jackson.databind.introspect.AnnotatedMethod findJsonValueMethod();
public com.fasterxml.jackson.databind.introspect.AnnotatedMethod findAnySetter()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMember v1;
com.fasterxml.jackson.databind.BeanDescription v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor()>();
v2 = v1 instanceof com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
if v2 == 0 goto label1;
return v1;
label1:
return null;
}
public com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterField()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMember v1;
com.fasterxml.jackson.databind.BeanDescription v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnySetterAccessor()>();
v2 = v1 instanceof com.fasterxml.jackson.databind.introspect.AnnotatedField;
if v2 == 0 goto label1;
return v1;
label1:
return null;
}
public abstract com.fasterxml.jackson.'annotation'.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value);
public abstract com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value);
public abstract com.fasterxml.jackson.databind.util.Converter findSerializationConverter();
public abstract com.fasterxml.jackson.databind.util.Converter findDeserializationConverter();
public java.lang.String findClassDescription()
{
com.fasterxml.jackson.databind.BeanDescription v0;
v0 := @this: com.fasterxml.jackson.databind.BeanDescription;
return null;
}
public abstract java.util.Map findInjectables();
public abstract java.lang.Class findPOJOBuilder();
public abstract com.fasterxml.jackson.databind.'annotation'.JsonPOJOBuilder$Value findPOJOBuilderConfig();
public abstract java.lang.Object instantiateBean(boolean);
public abstract java.lang.Class[] findDefaultViews();
}