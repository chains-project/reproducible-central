public final enum class com.fasterxml.jackson.databind.JsonNode$OverwriteMode extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.databind.JsonNode$OverwriteMode NONE;
public static final enum com.fasterxml.jackson.databind.JsonNode$OverwriteMode NULLS;
public static final enum com.fasterxml.jackson.databind.JsonNode$OverwriteMode SCALARS;
public static final enum com.fasterxml.jackson.databind.JsonNode$OverwriteMode ALL;
private static final com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $VALUES;
public static com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] v0;
v0 = <com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.databind.JsonNode$OverwriteMode valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/databind/JsonNode$OverwriteMode;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.fasterxml.jackson.databind.JsonNode$OverwriteMode v0;
v0 := @this: com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $values()
{
com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] v0;
com.fasterxml.jackson.databind.JsonNode$OverwriteMode v1, v2, v3, v4;
v0 = newarray (com.fasterxml.jackson.databind.JsonNode$OverwriteMode)[4];
v1 = <com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode NONE>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode NULLS>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode SCALARS>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode ALL>;
v0[3] = v4;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] v4;
com.fasterxml.jackson.databind.JsonNode$OverwriteMode v0, v1, v2, v3;
v0 = new com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: void <init>(java.lang.String,int)>("NONE", 0);
<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode NONE> = v0;
v1 = new com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
specialinvoke v1.<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: void <init>(java.lang.String,int)>("NULLS", 1);
<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode NULLS> = v1;
v2 = new com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
specialinvoke v2.<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: void <init>(java.lang.String,int)>("SCALARS", 2);
<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode SCALARS> = v2;
v3 = new com.fasterxml.jackson.databind.JsonNode$OverwriteMode;
specialinvoke v3.<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: void <init>(java.lang.String,int)>("ALL", 3);
<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode ALL> = v3;
v4 = staticinvoke <com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $values()>();
<com.fasterxml.jackson.databind.JsonNode$OverwriteMode: com.fasterxml.jackson.databind.JsonNode$OverwriteMode[] $VALUES> = v4;
return;
}
}