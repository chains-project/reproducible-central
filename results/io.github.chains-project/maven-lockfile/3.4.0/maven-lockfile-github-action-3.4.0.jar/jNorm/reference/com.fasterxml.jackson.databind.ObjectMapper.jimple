public class com.fasterxml.jackson.databind.ObjectMapper extends com.fasterxml.jackson.core.ObjectCodec implements com.fasterxml.jackson.core.Versioned, java.io.Serializable
{
private static final long serialVersionUID;
protected static final com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR;
protected static final com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE;
protected final com.fasterxml.jackson.core.JsonFactory _jsonFactory;
protected com.fasterxml.jackson.databind.type.TypeFactory _typeFactory;
protected com.fasterxml.jackson.databind.InjectableValues _injectableValues;
protected com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver;
protected final com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides;
protected final com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs;
protected com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns;
protected com.fasterxml.jackson.databind.SerializationConfig _serializationConfig;
protected com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider;
protected com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory;
protected com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig;
protected com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext;
protected java.util.Set _registeredModuleTypes;
protected final java.util.concurrent.ConcurrentHashMap _rootDeserializers;
public void <init>()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
specialinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>(null, null, null);
return;
}
public void <init>(com.fasterxml.jackson.core.JsonFactory)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.core.JsonFactory,com.fasterxml.jackson.databind.ser.DefaultSerializerProvider,com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)>(v1, null, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ObjectMapper)
{
com.fasterxml.jackson.databind.ObjectMapper v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper;
specialinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.core.JsonFactory)>(v1, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ObjectMapper, com.fasterxml.jackson.core.JsonFactory)
{
com.fasterxml.jackson.databind.cfg.CoercionConfigs v13, v14, v28;
com.fasterxml.jackson.databind.SerializationConfig v18, v19;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v29, v30;
com.fasterxml.jackson.databind.type.TypeFactory v9;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v11, v12, v22, v27;
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v15, v16, v21, v26;
java.util.concurrent.ConcurrentHashMap v3;
java.util.Set v34;
com.fasterxml.jackson.databind.util.RootNameLookup v17;
com.fasterxml.jackson.databind.InjectableValues v10;
com.fasterxml.jackson.databind.ser.SerializerFactory v33;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v31, v32;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v20, v25, v7, v8;
com.fasterxml.jackson.databind.DeserializationConfig v23, v24;
java.util.LinkedHashSet v35;
com.fasterxml.jackson.databind.ObjectMapper v0, v1;
com.fasterxml.jackson.core.JsonFactory v2, v4, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper;
v2 := @parameter1: com.fasterxml.jackson.core.JsonFactory;
specialinvoke v0.<com.fasterxml.jackson.core.ObjectCodec: void <init>()>();
v3 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v3.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.6F, 2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = v3;
if v2 == null goto label1;
v4 = v2;
goto label2;
label1:
v5 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory copy()>();
label2:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> = v4;
v6 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v6.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec)>(v0);
v7 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: com.fasterxml.jackson.databind.jsontype.SubtypeResolver copy()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver> = v8;
v9 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = v9;
v10 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = v10;
v11 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: com.fasterxml.jackson.databind.cfg.ConfigOverrides copy()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides> = v12;
v13 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.cfg.CoercionConfigs: com.fasterxml.jackson.databind.cfg.CoercionConfigs copy()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs> = v14;
v15 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver copy()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns> = v16;
v17 = new com.fasterxml.jackson.databind.util.RootNameLookup;
specialinvoke v17.<com.fasterxml.jackson.databind.util.RootNameLookup: void <init>()>();
v18 = new com.fasterxml.jackson.databind.SerializationConfig;
v19 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v20 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;
v21 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
v22 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
specialinvoke v18.<com.fasterxml.jackson.databind.SerializationConfig: void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides)>(v19, v20, v21, v17, v22);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v18;
v23 = new com.fasterxml.jackson.databind.DeserializationConfig;
v24 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v25 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;
v26 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
v27 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v28 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;
specialinvoke v23.<com.fasterxml.jackson.databind.DeserializationConfig: void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.CoercionConfigs)>(v24, v25, v26, v17, v27, v28);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v23;
v29 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider>;
v30 = virtualinvoke v29.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider copy()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider> = v30;
v31 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext>;
v32 = virtualinvoke v31.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext copy()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext> = v32;
v33 = v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = v33;
v34 = v1.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;
if v34 != null goto label3;
v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes> = null;
goto label4;
label3:
v35 = new java.util.LinkedHashSet;
specialinvoke v35.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v34);
v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes> = v35;
label4:
return;
}
public void <init>(com.fasterxml.jackson.core.JsonFactory, com.fasterxml.jackson.databind.ser.DefaultSerializerProvider, com.fasterxml.jackson.databind.deser.DefaultDeserializationContext)
{
com.fasterxml.jackson.databind.introspect.ClassIntrospector v13;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl v35;
com.fasterxml.jackson.databind.cfg.CoercionConfigs v16, v24;
com.fasterxml.jackson.databind.SerializationConfig v17, v28;
com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v2, v34;
com.fasterxml.jackson.databind.type.TypeFactory v10;
boolean v27, v30, v31;
com.fasterxml.jackson.databind.cfg.DatatypeFeatures v20, v25;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v15, v19, v23;
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v11;
java.util.concurrent.ConcurrentHashMap v4;
com.fasterxml.jackson.databind.util.RootNameLookup v9;
com.fasterxml.jackson.databind.MappingJsonFactory v5;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v3, v36;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v18, v22;
com.fasterxml.jackson.core.ObjectCodec v6;
com.fasterxml.jackson.databind.DeserializationConfig v21;
com.fasterxml.jackson.databind.MapperFeature v29, v32;
com.fasterxml.jackson.databind.deser.BeanDeserializerFactory v37;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v38;
com.fasterxml.jackson.databind.cfg.BaseSettings v12, v14;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl v33;
com.fasterxml.jackson.core.JsonFactory v1, v26, v7;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext;
specialinvoke v0.<com.fasterxml.jackson.core.ObjectCodec: void <init>()>();
v4 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v4.<java.util.concurrent.ConcurrentHashMap: void <init>(int,float,int)>(64, 0.6F, 2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers> = v4;
if v1 != null goto label1;
v5 = new com.fasterxml.jackson.databind.MappingJsonFactory;
specialinvoke v5.<com.fasterxml.jackson.databind.MappingJsonFactory: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>(v0);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> = v5;
goto label2;
label1:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory> = v1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.ObjectCodec getCodec()>();
if v6 != null goto label2;
v7 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v7.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory setCodec(com.fasterxml.jackson.core.ObjectCodec)>(v0);
label2:
v8 = new com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver;
specialinvoke v8.<com.fasterxml.jackson.databind.jsontype.impl.StdSubtypeResolver: void <init>()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver> = v8;
v9 = new com.fasterxml.jackson.databind.util.RootNameLookup;
specialinvoke v9.<com.fasterxml.jackson.databind.util.RootNameLookup: void <init>()>();
v10 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = v10;
v11 = new com.fasterxml.jackson.databind.introspect.SimpleMixInResolver;
specialinvoke v11.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(null);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns> = v11;
v12 = <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE>;
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector()>();
v14 = virtualinvoke v12.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.cfg.BaseSettings withClassIntrospector(com.fasterxml.jackson.databind.introspect.ClassIntrospector)>(v13);
v15 = new com.fasterxml.jackson.databind.cfg.ConfigOverrides;
specialinvoke v15.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void <init>()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides> = v15;
v16 = new com.fasterxml.jackson.databind.cfg.CoercionConfigs;
specialinvoke v16.<com.fasterxml.jackson.databind.cfg.CoercionConfigs: void <init>()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs> = v16;
v17 = new com.fasterxml.jackson.databind.SerializationConfig;
v18 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;
v19 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v20 = staticinvoke <com.fasterxml.jackson.databind.cfg.DatatypeFeatures: com.fasterxml.jackson.databind.cfg.DatatypeFeatures defaultFeatures()>();
specialinvoke v17.<com.fasterxml.jackson.databind.SerializationConfig: void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.DatatypeFeatures)>(v14, v18, v11, v9, v19, v20);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v17;
v21 = new com.fasterxml.jackson.databind.DeserializationConfig;
v22 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;
v23 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v24 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;
v25 = staticinvoke <com.fasterxml.jackson.databind.cfg.DatatypeFeatures: com.fasterxml.jackson.databind.cfg.DatatypeFeatures defaultFeatures()>();
specialinvoke v21.<com.fasterxml.jackson.databind.DeserializationConfig: void <init>(com.fasterxml.jackson.databind.cfg.BaseSettings,com.fasterxml.jackson.databind.jsontype.SubtypeResolver,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver,com.fasterxml.jackson.databind.util.RootNameLookup,com.fasterxml.jackson.databind.cfg.ConfigOverrides,com.fasterxml.jackson.databind.cfg.CoercionConfigs,com.fasterxml.jackson.databind.cfg.DatatypeFeatures)>(v14, v22, v11, v9, v23, v24, v25);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v21;
v26 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v27 = virtualinvoke v26.<com.fasterxml.jackson.core.JsonFactory: boolean requiresPropertyOrdering()>();
v28 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v29 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY>;
v30 = virtualinvoke v28.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v29);
v31 = v27 ^ v30;
if v31 == 0 goto label3;
v32 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature SORT_PROPERTIES_ALPHABETICALLY>;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature,boolean)>(v32, v27);
label3:
if v2 != null goto label4;
v33 = new com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl;
v34 = v33;
specialinvoke v33.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider$Impl: void <init>()>();
goto label5;
label4:
v34 = v2;
label5:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider> = v34;
if v3 != null goto label6;
v35 = new com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl;
v36 = v35;
v37 = <com.fasterxml.jackson.databind.deser.BeanDeserializerFactory: com.fasterxml.jackson.databind.deser.BeanDeserializerFactory instance>;
specialinvoke v35.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext$Impl: void <init>(com.fasterxml.jackson.databind.deser.DeserializerFactory)>(v37);
goto label7;
label6:
v36 = v3;
label7:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext> = v36;
v38 = <com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance>;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = v38;
return;
}
protected com.fasterxml.jackson.databind.introspect.ClassIntrospector defaultClassIntrospector()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.introspect.BasicClassIntrospector v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = new com.fasterxml.jackson.databind.introspect.BasicClassIntrospector;
specialinvoke v1.<com.fasterxml.jackson.databind.introspect.BasicClassIntrospector: void <init>()>();
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper copy()
{
com.fasterxml.jackson.databind.ObjectMapper v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _checkInvalidCopy(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/ObjectMapper;");
v1 = new com.fasterxml.jackson.databind.ObjectMapper;
specialinvoke v1.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>(v0);
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper copyWith(com.fasterxml.jackson.core.JsonFactory)
{
com.fasterxml.jackson.databind.ObjectMapper v0, v2;
com.fasterxml.jackson.core.JsonFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _checkInvalidCopy(java.lang.Class)>(class "Lcom/fasterxml/jackson/databind/ObjectMapper;");
v2 = new com.fasterxml.jackson.databind.ObjectMapper;
specialinvoke v2.<com.fasterxml.jackson.databind.ObjectMapper: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.core.JsonFactory)>(v0, v1);
return v2;
}
protected void _checkInvalidCopy(java.lang.Class)
{
java.lang.IllegalStateException v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.Version v6;
java.lang.Class v1, v2, v4;
java.lang.String v5, v7;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v1 goto label1;
v3 = new java.lang.IllegalStateException;
v4 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.Version version()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,com.fasterxml.jackson.core.Version)>(v5, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed copy()/copyWith(): \u0001 (version: \u0001) does not override copy()/copyWith(); it has to");
specialinvoke v3.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v3;
label1:
return;
}
protected com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ObjectReader v2;
com.fasterxml.jackson.databind.DeserializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = new com.fasterxml.jackson.databind.ObjectReader;
specialinvoke v2.<com.fasterxml.jackson.databind.ObjectReader: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType, java.lang.Object, com.fasterxml.jackson.core.FormatSchema, com.fasterxml.jackson.databind.InjectableValues)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.core.FormatSchema v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v3;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: com.fasterxml.jackson.core.FormatSchema;
v5 := @parameter4: com.fasterxml.jackson.databind.InjectableValues;
v6 = new com.fasterxml.jackson.databind.ObjectReader;
specialinvoke v6.<com.fasterxml.jackson.databind.ObjectReader: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v0, v1, v2, v3, v4, v5);
return v6;
}
protected com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.ObjectWriter v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 = new com.fasterxml.jackson.databind.ObjectWriter;
specialinvoke v2.<com.fasterxml.jackson.databind.ObjectWriter: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig)>(v0, v1);
return v2;
}
protected com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.core.FormatSchema)
{
com.fasterxml.jackson.databind.ObjectWriter v3;
com.fasterxml.jackson.core.FormatSchema v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.core.FormatSchema;
v3 = new com.fasterxml.jackson.databind.ObjectWriter;
specialinvoke v3.<com.fasterxml.jackson.databind.ObjectWriter: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema)>(v0, v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.core.PrettyPrinter)
{
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.core.PrettyPrinter v3;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.core.PrettyPrinter;
v4 = new com.fasterxml.jackson.databind.ObjectWriter;
specialinvoke v4.<com.fasterxml.jackson.databind.ObjectWriter: void <init>(com.fasterxml.jackson.databind.ObjectMapper,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v0, v1, v2, v3);
return v4;
}
public com.fasterxml.jackson.core.Version version()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.Version v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = <com.fasterxml.jackson.databind.cfg.PackageVersion: com.fasterxml.jackson.core.Version VERSION>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module)
{
com.fasterxml.jackson.databind.Module v1;
java.lang.Iterable v6;
com.fasterxml.jackson.databind.MapperFeature v10;
java.lang.String v2;
java.util.LinkedHashSet v14;
boolean v11, v16, v8;
java.util.Iterator v7;
com.fasterxml.jackson.databind.ObjectMapper$1 v17;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.Version v4;
java.util.Set v13, v15;
java.lang.IllegalArgumentException v3, v5;
java.lang.Object v12, v9;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.Module;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("module", v1);
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.Module: java.lang.String getModuleName()>();
if v2 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined name");
throw v3;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.Module: com.fasterxml.jackson.core.Version version()>();
if v4 != null goto label2;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Module without defined version");
throw v5;
label2:
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.Module: java.lang.Iterable getDependencies()>();
v7 = interfaceinvoke v6.<java.lang.Iterable: java.util.Iterator iterator()>();
label3:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label4;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module)>(v9);
goto label3;
label4:
v10 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature IGNORE_DUPLICATE_MODULE_REGISTRATIONS>;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v10);
if v11 == 0 goto label6;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.Module: java.lang.Object getTypeId()>();
if v12 == null goto label6;
v13 = v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;
if v13 != null goto label5;
v14 = new java.util.LinkedHashSet;
specialinvoke v14.<java.util.LinkedHashSet: void <init>()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes> = v14;
label5:
v15 = v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;
v16 = interfaceinvoke v15.<java.util.Set: boolean add(java.lang.Object)>(v12);
if v16 != 0 goto label6;
return v0;
label6:
v17 = new com.fasterxml.jackson.databind.ObjectMapper$1;
specialinvoke v17.<com.fasterxml.jackson.databind.ObjectMapper$1: void <init>(com.fasterxml.jackson.databind.ObjectMapper)>(v0);
virtualinvoke v1.<com.fasterxml.jackson.databind.Module: void setupModule(com.fasterxml.jackson.databind.Module$SetupContext)>(v17);
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper registerModules(com.fasterxml.jackson.databind.Module[])
{
com.fasterxml.jackson.databind.Module v4;
com.fasterxml.jackson.databind.Module[] v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.Module[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable)
{
java.util.Iterator v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v4;
java.lang.Iterable v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Iterable;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("modules", v1);
v2 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper registerModule(com.fasterxml.jackson.databind.Module)>(v4);
goto label1;
label2:
return v0;
}
public java.util.Set getRegisteredModuleIds()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.util.Set v1, v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.Set _registeredModuleTypes>;
v2 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v3);
label2:
return v2;
}
public static java.util.List findModules()
{
java.util.List v0;
v0 = staticinvoke <com.fasterxml.jackson.databind.ObjectMapper: java.util.List findModules(java.lang.ClassLoader)>(null);
return v0;
}
public static java.util.List findModules(java.lang.ClassLoader)
{
java.util.Iterator v3;
java.lang.Object v5;
java.util.ServiceLoader v2;
java.lang.ClassLoader v0;
boolean v4;
java.util.ArrayList v1;
v0 := @parameter0: java.lang.ClassLoader;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = staticinvoke <com.fasterxml.jackson.databind.ObjectMapper: java.util.ServiceLoader secureGetServiceLoader(java.lang.Class,java.lang.ClassLoader)>(class "Lcom/fasterxml/jackson/databind/Module;", v0);
v3 = virtualinvoke v2.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v5);
goto label1;
label2:
return v1;
}
private static java.util.ServiceLoader secureGetServiceLoader(java.lang.Class, java.lang.ClassLoader)
{
com.fasterxml.jackson.databind.ObjectMapper$2 v4;
java.lang.Class v0;
java.lang.Object v5;
java.util.ServiceLoader v3;
java.lang.ClassLoader v1;
java.lang.SecurityManager v2;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.ClassLoader;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 != null goto label3;
if v1 != null goto label1;
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(v0);
goto label2;
label1:
v3 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(v0, v1);
label2:
return v3;
label3:
v4 = new com.fasterxml.jackson.databind.ObjectMapper$2;
specialinvoke v4.<com.fasterxml.jackson.databind.ObjectMapper$2: void <init>(java.lang.ClassLoader,java.lang.Class)>(v1, v0);
v5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v4);
return v5;
}
public com.fasterxml.jackson.databind.ObjectMapper findAndRegisterModules()
{
com.fasterxml.jackson.databind.ObjectMapper v0, v2;
java.util.List v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = staticinvoke <com.fasterxml.jackson.databind.ObjectMapper: java.util.List findModules()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper registerModules(java.lang.Iterable)>(v1);
return v2;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonEncoding v3;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.OutputStream;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("out", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v1, v3);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: void initialize(com.fasterxml.jackson.core.JsonGenerator)>(v4);
return v4;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("out", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v1, v2);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: void initialize(com.fasterxml.jackson.core.JsonGenerator)>(v4);
return v4;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.Writer v1;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Writer;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("w", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: void initialize(com.fasterxml.jackson.core.JsonGenerator)>(v3);
return v3;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File, com.fasterxml.jackson.core.JsonEncoding) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonEncoding v2;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v5;
java.io.File v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
v2 := @parameter1: com.fasterxml.jackson.core.JsonEncoding;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("outputFile", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)>(v1, v2);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: void initialize(com.fasterxml.jackson.core.JsonGenerator)>(v4);
return v4;
}
public com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput) throws java.io.IOException
{
java.io.DataOutput v1;
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.DataOutput;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("out", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: void initialize(com.fasterxml.jackson.core.JsonGenerator)>(v3);
return v3;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.File) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.File v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.net.URL) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
java.net.URL v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.net.URL;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.InputStream;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("in", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.Reader v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Reader;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("r", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(byte[]) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[])>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v6, v7;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.core.JsonFactory v5;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v1, v2, v3);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v6);
return v7;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(char[]) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
char[] v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: char[];
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(char[])>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createParser(char[], int, int) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v6, v7;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.core.JsonFactory v5;
int v2, v3;
char[] v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(char[],int,int)>(v1, v2, v3);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v6);
return v7;
}
public com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.DataInput v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.DataInput;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput)>(v1);
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v4);
return v5;
}
public com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser() throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonParser v3, v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createNonBlockingByteArrayParser()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
return v1;
}
public com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
return v1;
}
public com.fasterxml.jackson.databind.DeserializationContext getDeserializationContext()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setSerializerFactory(com.fasterxml.jackson.databind.ser.SerializerFactory)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ser.SerializerFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.SerializerFactory;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory> = v1;
return v0;
}
public com.fasterxml.jackson.databind.ser.SerializerFactory getSerializerFactory()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ser.SerializerFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setSerializerProvider(com.fasterxml.jackson.databind.ser.DefaultSerializerProvider)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider> = v1;
return v0;
}
public com.fasterxml.jackson.databind.SerializerProvider getSerializerProvider()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider>;
return v1;
}
public com.fasterxml.jackson.databind.SerializerProvider getSerializerProviderInstance()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper setMixIns(java.util.Map)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v2;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.util.Map;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: void setLocalDefinitions(java.util.Map)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
virtualinvoke v3.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: void addLocalDefinition(java.lang.Class,java.lang.Class)>(v1, v2);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setMixInResolver(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)
{
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v2, v3, v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v7, v8;
com.fasterxml.jackson.databind.DeserializationConfig v5, v6;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver withOverrides(com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
if v3 == v4 goto label1;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns> = v3;
v5 = new com.fasterxml.jackson.databind.DeserializationConfig;
v6 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
specialinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: void <init>(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)>(v6, v3);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v5;
v7 = new com.fasterxml.jackson.databind.SerializationConfig;
v8 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
specialinvoke v7.<com.fasterxml.jackson.databind.SerializationConfig: void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.SimpleMixInResolver)>(v8, v3);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v7;
label1:
return v0;
}
public java.lang.Class findMixInClassFor(java.lang.Class)
{
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(v1);
return v3;
}
public int mixInCount()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2;
com.fasterxml.jackson.databind.introspect.SimpleMixInResolver v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.introspect.SimpleMixInResolver _mixIns>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.SimpleMixInResolver: int localSize()>();
return v2;
}
public void setMixInAnnotations(java.util.Map)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.util.Map v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.util.Map;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setMixIns(java.util.Map)>(v1);
return;
}
public final void addMixInAnnotations(java.lang.Class, java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class)>(v1, v2);
return;
}
public com.fasterxml.jackson.databind.introspect.VisibilityChecker getVisibilityChecker()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.introspect.VisibilityChecker v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibilityChecker()>();
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.introspect.VisibilityChecker v1;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.VisibilityChecker;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.'annotation'.PropertyAccessor, com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility)
{
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility v2;
com.fasterxml.jackson.databind.introspect.VisibilityChecker v4, v5;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v3, v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.'annotation'.PropertyAccessor v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.PropertyAccessor;
v2 := @parameter1: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: com.fasterxml.jackson.databind.introspect.VisibilityChecker getDefaultVisibility()>();
v5 = interfaceinvoke v4.<com.fasterxml.jackson.databind.introspect.VisibilityChecker: com.fasterxml.jackson.databind.introspect.VisibilityChecker withVisibility(com.fasterxml.jackson.'annotation'.PropertyAccessor,com.fasterxml.jackson.'annotation'.JsonAutoDetect$Visibility)>(v1, v2);
v6 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
virtualinvoke v6.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(v5);
return v0;
}
public com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setSubtypeResolver(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v1;
com.fasterxml.jackson.databind.SerializationConfig v4, v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.SubtypeResolver;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver _subtypeResolver> = v1;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.jsontype.SubtypeResolver)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospector(com.fasterxml.jackson.databind.AnnotationIntrospector)
{
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.AnnotationIntrospector v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.AnnotationIntrospector)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.AnnotationIntrospector)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setAnnotationIntrospectors(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.AnnotationIntrospector)
{
com.fasterxml.jackson.databind.DeserializationConfig v5;
com.fasterxml.jackson.databind.AnnotationIntrospector v1, v2;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v4, v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v2 := @parameter1: com.fasterxml.jackson.databind.AnnotationIntrospector;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.AnnotationIntrospector)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v4;
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.AnnotationIntrospector)>(v2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v6;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setPropertyNamingStrategy(com.fasterxml.jackson.databind.PropertyNamingStrategy)
{
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.PropertyNamingStrategy v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.PropertyNamingStrategy;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.PropertyNamingStrategy)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.PropertyNamingStrategy)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.PropertyNamingStrategy v2;
com.fasterxml.jackson.databind.SerializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.PropertyNamingStrategy getPropertyNamingStrategy()>();
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper setAccessorNaming(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)
{
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
com.fasterxml.jackson.core.PrettyPrinter v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.PrettyPrinter;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig withDefaultPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
return v0;
}
public void setVisibilityChecker(com.fasterxml.jackson.databind.introspect.VisibilityChecker)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.introspect.VisibilityChecker v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.VisibilityChecker;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(v1);
return;
}
public com.fasterxml.jackson.databind.ObjectMapper setPolymorphicTypeValidator(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v5, v6;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
com.fasterxml.jackson.databind.cfg.BaseSettings v3, v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.cfg.BaseSettings 'with'(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig _withBase(com.fasterxml.jackson.databind.cfg.BaseSettings)>(v4);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v6;
return v0;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v3;
com.fasterxml.jackson.databind.cfg.BaseSettings v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.BaseSettings getBaseSettings()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.BaseSettings: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();
return v3;
}
public com.fasterxml.jackson.databind.ObjectMapper setSerializationInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Include)
{
com.fasterxml.jackson.'annotation'.JsonInclude$Include v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonInclude$Include;
v2 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value construct(com.fasterxml.jackson.'annotation'.JsonInclude$Include,com.fasterxml.jackson.'annotation'.JsonInclude$Include)>(v1, v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v2);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)
{
com.fasterxml.jackson.databind.ObjectMapper v0, v2;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonInclude$Value;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v1;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonInclude$Value;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Include)
{
com.fasterxml.jackson.'annotation'.JsonInclude$Include v1;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v3;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonInclude$Include;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v3 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value construct(com.fasterxml.jackson.'annotation'.JsonInclude$Include,com.fasterxml.jackson.'annotation'.JsonInclude$Include)>(v1, v1);
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v3);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultSetterInfo(com.fasterxml.jackson.'annotation'.JsonSetter$Value)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.'annotation'.JsonSetter$Value v1;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonSetter$Value;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultSetterInfo(com.fasterxml.jackson.'annotation'.JsonSetter$Value)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultVisibility(com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value)
{
com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value v1;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v3 = staticinvoke <com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std: com.fasterxml.jackson.databind.introspect.VisibilityChecker$Std construct(com.fasterxml.jackson.'annotation'.JsonAutoDetect$Value)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultVisibility(com.fasterxml.jackson.databind.introspect.VisibilityChecker)>(v3);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultMergeable(java.lang.Boolean)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Boolean v1;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Boolean;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultMergeable(java.lang.Boolean)>(v1);
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultLeniency(java.lang.Boolean)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Boolean v1;
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Boolean;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: void setDefaultLeniency(java.lang.Boolean)>(v1);
return v0;
}
public transient void registerSubtypes(java.lang.Class[])
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v2;
java.lang.Class[] v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class[];
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();
virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void registerSubtypes(java.lang.Class[])>(v1);
return;
}
public transient void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[])
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v2;
com.fasterxml.jackson.databind.jsontype.NamedType[] v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.NamedType[];
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();
virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void registerSubtypes(com.fasterxml.jackson.databind.jsontype.NamedType[])>(v1);
return;
}
public void registerSubtypes(java.util.Collection)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v2;
java.util.Collection v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.util.Collection;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();
virtualinvoke v2.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: void registerSubtypes(java.util.Collection)>(v1);
return;
}
public com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
com.fasterxml.jackson.databind.ObjectMapper v0, v3;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v2 = <com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping OBJECT_AND_NON_CONCRETE>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v3;
com.fasterxml.jackson.databind.ObjectMapper v0, v4;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v2 := @parameter1: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v3 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_ARRAY>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(v1, v2, v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)
{
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v3, v4;
com.fasterxml.jackson.databind.ObjectMapper v0, v11;
java.lang.IllegalArgumentException v5;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id v8;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v10, v7, v9;
java.lang.String v6;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v2 := @parameter1: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;
v4 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As EXTERNAL_PROPERTY>;
if v3 != v4 goto label1;
v5 = new java.lang.IllegalArgumentException;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot use includeAs of \u0001");
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v5;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v2, v1);
v8 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;
v9 = interfaceinvoke v7.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>(v8, null);
v10 = interfaceinvoke v9.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(v3);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(v10);
return v11;
}
public com.fasterxml.jackson.databind.ObjectMapper activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator, com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, java.lang.String)
{
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v7;
com.fasterxml.jackson.databind.ObjectMapper v0, v10;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id v5;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v4, v6, v8, v9;
java.lang.String v3;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v2 := @parameter1: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v2, v1);
v5 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;
v6 = interfaceinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id,com.fasterxml.jackson.databind.jsontype.TypeIdResolver)>(v5, null);
v7 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As PROPERTY>;
v8 = interfaceinvoke v6.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(v7);
v9 = interfaceinvoke v8.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String)>(v3);
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(v9);
return v10;
}
public com.fasterxml.jackson.databind.ObjectMapper deactivateDefaultTyping()
{
com.fasterxml.jackson.databind.ObjectMapper v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(null);
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping()
{
com.fasterxml.jackson.databind.ObjectMapper v0, v2;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping)
{
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v2;
com.fasterxml.jackson.databind.ObjectMapper v0, v3;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v2 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As WRAPPER_ARRAY>;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.ObjectMapper enableDefaultTyping(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v3;
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v2;
com.fasterxml.jackson.databind.ObjectMapper v0, v4;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v2 := @parameter1: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper activateDefaultTyping(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.'annotation'.JsonTypeInfo$As)>(v3, v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.ObjectMapper enableDefaultTypingAsProperty(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, java.lang.String)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v3;
com.fasterxml.jackson.databind.ObjectMapper v0, v4;
java.lang.String v2;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator getPolymorphicTypeValidator()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper activateDefaultTypingAsProperty(com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,java.lang.String)>(v3, v1, v2);
return v4;
}
public com.fasterxml.jackson.databind.ObjectMapper disableDefaultTyping()
{
com.fasterxml.jackson.databind.ObjectMapper v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper setDefaultTyping(com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder)>(null);
return v1;
}
public com.fasterxml.jackson.databind.cfg.MutableConfigOverride configOverride(java.lang.Class)
{
com.fasterxml.jackson.databind.cfg.ConfigOverrides v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.cfg.MutableConfigOverride v3;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.ConfigOverrides _configOverrides>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.ConfigOverrides: com.fasterxml.jackson.databind.cfg.MutableConfigOverride findOrCreateOverride(java.lang.Class)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigDefaults()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.cfg.CoercionConfigs v1;
com.fasterxml.jackson.databind.cfg.MutableCoercionConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.CoercionConfigs: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig defaultCoercions()>();
return v2;
}
public com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(com.fasterxml.jackson.databind.type.LogicalType)
{
com.fasterxml.jackson.databind.cfg.MutableCoercionConfig v3;
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.cfg.CoercionConfigs v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.type.LogicalType;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.CoercionConfigs: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(com.fasterxml.jackson.databind.type.LogicalType)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.cfg.MutableCoercionConfig coercionConfigFor(java.lang.Class)
{
com.fasterxml.jackson.databind.cfg.MutableCoercionConfig v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.cfg.CoercionConfigs v2;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.CoercionConfigs _coercionConfigs>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.CoercionConfigs: com.fasterxml.jackson.databind.cfg.MutableCoercionConfig findOrCreateCoercion(java.lang.Class)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.type.TypeFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setTypeFactory(com.fasterxml.jackson.databind.type.TypeFactory)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.type.TypeFactory v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory> = v1;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.type.TypeFactory)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.type.TypeFactory)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)
{
com.fasterxml.jackson.databind.type.TypeFactory v2;
java.lang.reflect.Type v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.reflect.Type;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("t", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)
{
com.fasterxml.jackson.databind.type.TypeFactory v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("typeRef", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
return v2;
}
public com.fasterxml.jackson.databind.ObjectMapper setNodeFactory(com.fasterxml.jackson.databind.node.JsonNodeFactory)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.node.JsonNodeFactory v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setConstructorDetector(com.fasterxml.jackson.databind.cfg.ConstructorDetector)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.cfg.ConstructorDetector v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.ConstructorDetector;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.cfg.ConstructorDetector)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper addHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.deser.DeserializationProblemHandler v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.DeserializationProblemHandler;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig withHandler(com.fasterxml.jackson.databind.deser.DeserializationProblemHandler)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper clearProblemHandlers()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig withNoProblemHandlers()>();
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v2;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setConfig(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("config", v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v1;
return v0;
}
public void setFilters(com.fasterxml.jackson.databind.ser.FilterProvider)
{
com.fasterxml.jackson.databind.ser.FilterProvider v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.FilterProvider;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig withFilters(com.fasterxml.jackson.databind.ser.FilterProvider)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
return;
}
public com.fasterxml.jackson.databind.ObjectMapper setFilterProvider(com.fasterxml.jackson.databind.ser.FilterProvider)
{
com.fasterxml.jackson.databind.ser.FilterProvider v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.FilterProvider;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig withFilters(com.fasterxml.jackson.databind.ser.FilterProvider)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setBase64Variant(com.fasterxml.jackson.core.Base64Variant)
{
com.fasterxml.jackson.core.Base64Variant v1;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.core.Base64Variant)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.core.Base64Variant)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setConfig(com.fasterxml.jackson.databind.SerializationConfig)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("config", v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v1;
return v0;
}
public com.fasterxml.jackson.core.JsonFactory tokenStreamFactory()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
return v1;
}
public com.fasterxml.jackson.core.JsonFactory getFactory()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setDateFormat(java.text.DateFormat)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4, v5;
java.text.DateFormat v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.text.DateFormat;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.text.DateFormat)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(java.text.DateFormat)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public java.text.DateFormat getDateFormat()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
java.text.DateFormat v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: java.text.DateFormat getDateFormat()>();
return v2;
}
public java.lang.Object setHandlerInstantiator(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
com.fasterxml.jackson.databind.cfg.HandlerInstantiator v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.HandlerInstantiator;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.cfg.HandlerInstantiator)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setInjectableValues(com.fasterxml.jackson.databind.InjectableValues)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.InjectableValues v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.InjectableValues;
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues> = v1;
return v0;
}
public com.fasterxml.jackson.databind.InjectableValues getInjectableValues()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.InjectableValues v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
return v1;
}
public com.fasterxml.jackson.databind.ObjectMapper setLocale(java.util.Locale)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
java.util.Locale v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.util.Locale;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.Locale)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.Locale)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setTimeZone(java.util.TimeZone)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
java.util.TimeZone v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.util.TimeZone;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.TimeZone)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(java.util.TimeZone)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper setDefaultAttributes(com.fasterxml.jackson.databind.cfg.ContextAttributes)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4, v5;
com.fasterxml.jackson.databind.cfg.ContextAttributes v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.ContextAttributes;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.cfg.ContextAttributes)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.cfg.ContextAttributes)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)
{
com.fasterxml.jackson.databind.MapperFeature v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.MapperFeature, boolean)
{
com.fasterxml.jackson.databind.MapperFeature[] v12, v4, v7, v9;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3, v6;
com.fasterxml.jackson.databind.DeserializationConfig v11, v8;
com.fasterxml.jackson.databind.MapperFeature v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v10, v5;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v4 = newarray (com.fasterxml.jackson.databind.MapperFeature)[1];
v4[0] = v1;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.MapperFeature[])>(v4);
goto label2;
label1:
v6 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v7 = newarray (com.fasterxml.jackson.databind.MapperFeature)[1];
v7[0] = v1;
virtualinvoke v6.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[])>(v7);
label2:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
if v2 == 0 goto label3;
v8 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v9 = newarray (com.fasterxml.jackson.databind.MapperFeature)[1];
v9[0] = v1;
v10 = virtualinvoke v8.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.MapperFeature[])>(v9);
goto label4;
label3:
v11 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v12 = newarray (com.fasterxml.jackson.databind.MapperFeature)[1];
v12[0] = v1;
virtualinvoke v11.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[])>(v12);
label4:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v10;
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.MapperFeature[])
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.MapperFeature[] v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature[];
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.MapperFeature[])>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.MapperFeature[])>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.MapperFeature[])
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.MapperFeature[] v1;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.MapperFeature[];
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[])>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.MapperFeature[])>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v5;
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.SerializationFeature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.SerializationFeature, boolean)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3, v4, v5;
com.fasterxml.jackson.databind.SerializationFeature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
goto label2;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
label2:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v4;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
com.fasterxml.jackson.databind.SerializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.SerializationFeature[])
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3, v4;
com.fasterxml.jackson.databind.SerializationFeature v1;
com.fasterxml.jackson.databind.SerializationFeature[] v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationFeature[];
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[])>(v1, v2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v4;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
com.fasterxml.jackson.databind.SerializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v3;
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.SerializationFeature[])
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3, v4;
com.fasterxml.jackson.databind.SerializationFeature v1;
com.fasterxml.jackson.databind.SerializationFeature[] v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationFeature[];
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[])>(v1, v2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v4;
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.DeserializationFeature, boolean)
{
com.fasterxml.jackson.databind.DeserializationConfig v3, v4, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.DeserializationFeature)>(v1);
goto label2;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v4 = virtualinvoke v5.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature)>(v1);
label2:
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v4;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.DeserializationFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.databind.DeserializationFeature, com.fasterxml.jackson.databind.DeserializationFeature[])
{
com.fasterxml.jackson.databind.DeserializationConfig v3, v4;
com.fasterxml.jackson.databind.DeserializationFeature[] v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationFeature[];
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[])>(v1, v2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v4;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature)
{
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v3;
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.databind.DeserializationFeature, com.fasterxml.jackson.databind.DeserializationFeature[])
{
com.fasterxml.jackson.databind.DeserializationConfig v3, v4;
com.fasterxml.jackson.databind.DeserializationFeature[] v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationFeature[];
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig without(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[])>(v1, v2);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v4;
return v0;
}
public com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.databind.cfg.DatatypeFeature, boolean)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v5, v9;
com.fasterxml.jackson.databind.DeserializationConfig v3, v7;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v10, v4, v6, v8;
com.fasterxml.jackson.databind.cfg.DatatypeFeature v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.DatatypeFeature;
v2 := @parameter1: boolean;
if v2 == 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v4;
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v6;
goto label2;
label1:
v7 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig> = v8;
v9 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase without(com.fasterxml.jackson.databind.cfg.DatatypeFeature)>(v1);
v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig> = v10;
label2:
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.core.JsonParser$Feature v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature,com.fasterxml.jackson.core.JsonFactory)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonParser$Feature, boolean)
{
com.fasterxml.jackson.core.JsonParser$Feature v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature;
v2 := @parameter1: boolean;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonParser$Feature,boolean)>(v1, v2);
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.core.JsonParser$Feature[])
{
com.fasterxml.jackson.core.JsonParser$Feature[] v1;
com.fasterxml.jackson.core.JsonParser$Feature v4;
com.fasterxml.jackson.core.JsonFactory v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonParser$Feature)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.core.JsonParser$Feature[])
{
com.fasterxml.jackson.core.JsonParser$Feature[] v1;
com.fasterxml.jackson.core.JsonParser$Feature v4;
com.fasterxml.jackson.core.JsonFactory v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser$Feature[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonParser$Feature)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig _serializationConfig>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature,com.fasterxml.jackson.core.JsonFactory)>(v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectMapper configure(com.fasterxml.jackson.core.JsonGenerator$Feature, boolean)
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonGenerator$Feature v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature;
v2 := @parameter1: boolean;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory configure(com.fasterxml.jackson.core.JsonGenerator$Feature,boolean)>(v1, v2);
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper enable(com.fasterxml.jackson.core.JsonGenerator$Feature[])
{
com.fasterxml.jackson.core.JsonFactory v5;
com.fasterxml.jackson.core.JsonGenerator$Feature v4;
com.fasterxml.jackson.core.JsonGenerator$Feature[] v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory enable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public transient com.fasterxml.jackson.databind.ObjectMapper disable(com.fasterxml.jackson.core.JsonGenerator$Feature[])
{
com.fasterxml.jackson.core.JsonFactory v5;
com.fasterxml.jackson.core.JsonGenerator$Feature v4;
com.fasterxml.jackson.core.JsonGenerator$Feature[] v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator$Feature[];
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label2;
v4 = v1[v3];
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonFactory disable(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v0;
}
public boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory$Feature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonFactory$Feature;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: boolean isEnabled(com.fasterxml.jackson.core.JsonFactory$Feature)>(v1);
return v3;
}
public boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)
{
com.fasterxml.jackson.core.JsonParser$Feature v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.StreamReadFeature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.StreamReadFeature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.JsonParser$Feature mappedFeature()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(com.fasterxml.jackson.core.JsonParser$Feature)>(v2);
return v3;
}
public boolean isEnabled(com.fasterxml.jackson.core.StreamWriteFeature)
{
com.fasterxml.jackson.core.JsonGenerator$Feature v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.StreamWriteFeature v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.StreamWriteFeature;
v2 = virtualinvoke v1.<com.fasterxml.jackson.core.StreamWriteFeature: com.fasterxml.jackson.core.JsonGenerator$Feature mappedFeature()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(com.fasterxml.jackson.core.JsonGenerator$Feature)>(v2);
return v3;
}
public java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v2;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v3, v1, v5);
return v6;
}
public java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v6;
com.fasterxml.jackson.databind.JavaType v5;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v3, v1, v5);
return v6;
}
public final java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v4;
com.fasterxml.jackson.core.type.ResolvedType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.type.ResolvedType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v3, v1, v2);
return v4;
}
public java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v4;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v3, v1, v2);
return v4;
}
public com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v7;
java.lang.Object v6;
com.fasterxml.jackson.core.JsonToken v3, v4;
com.fasterxml.jackson.databind.JavaType v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v3 != null goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(class "Lcom/fasterxml/jackson/databind/JsonNode;");
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v2, v1, v5);
if v6 != null goto label2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v6 = virtualinvoke v7.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
label2:
return v6;
}
public com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.ResolvedType) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.MappingIterator v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.type.ResolvedType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.type.ResolvedType;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
return v3;
}
public com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.MappingIterator v6;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.JsonDeserializer v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("p", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
v6 = new com.fasterxml.jackson.databind.MappingIterator;
specialinvoke v6.<com.fasterxml.jackson.databind.MappingIterator: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JsonDeserializer,boolean,java.lang.Object)>(v2, v1, v4, v5, 0, null);
return v6;
}
public com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.MappingIterator v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v2;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.MappingIterator v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.MappingIterator readValues(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public com.fasterxml.jackson.databind.JsonNode readTree(java.io.InputStream) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v4;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.InputStream;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("in", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode readTree(java.io.Reader) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v4;
java.io.Reader v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Reader;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("r", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode readTree(java.lang.String) throws com.fasterxml.jackson.core.JsonProcessingException, com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonProcessingException v5;
java.io.IOException v6;
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.databind.JsonNode v4;
com.fasterxml.jackson.databind.JsonMappingException v7;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.String;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
label1:
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
throw v5;
label4:
v6 := @caughtexception;
v7 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v6);
throw v7;
catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
public com.fasterxml.jackson.databind.JsonNode readTree(byte[]) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[])>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode readTree(byte[], int, int) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.JsonFactory v4;
com.fasterxml.jackson.core.JsonParser v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
int v2, v3;
com.fasterxml.jackson.databind.JsonNode v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v1, v2, v3);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v5);
return v6;
}
public com.fasterxml.jackson.databind.JsonNode readTree(java.io.File) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonParser v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v4;
java.io.File v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("file", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.JsonNode readTree(java.net.URL) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v2;
com.fasterxml.jackson.core.JsonParser v3;
java.net.URL v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.net.URL;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("source", v1);
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser)>(v3);
return v4;
}
public void writeValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamWriteException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v11;
com.fasterxml.jackson.databind.SerializationFeature v12, v4, v8;
java.lang.Object v2;
com.fasterxml.jackson.core.PrettyPrinter v6, v7;
boolean v10, v13, v5, v9;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("g", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature INDENT_OUTPUT>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 == 0 goto label1;
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.PrettyPrinter getPrettyPrinter()>();
if v6 != null goto label1;
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.core.PrettyPrinter constructDefaultPrettyPrinter()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.JsonGenerator setPrettyPrinter(com.fasterxml.jackson.core.PrettyPrinter)>(v7);
label1:
v8 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v8);
if v9 == 0 goto label2;
v10 = v2 instanceof java.io.Closeable;
if v10 == 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(v1, v2, v3);
goto label3;
label2:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
v12 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v12);
if v13 == 0 goto label3;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label3:
return;
}
public void writeTree(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.TreeNode) throws java.io.IOException
{
com.fasterxml.jackson.core.TreeNode v2;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
com.fasterxml.jackson.databind.SerializationFeature v5;
boolean v6;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.core.TreeNode;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("g", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
if v6 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label1:
return;
}
public void writeTree(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.JsonNode) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v2;
com.fasterxml.jackson.databind.SerializationConfig v3;
com.fasterxml.jackson.databind.SerializationFeature v5;
boolean v6;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.JsonNode;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("g", v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
if v6 == 0 goto label1;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label1:
return;
}
public com.fasterxml.jackson.databind.node.ObjectNode createObjectNode()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.node.ObjectNode v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
return v3;
}
public com.fasterxml.jackson.databind.node.ArrayNode createArrayNode()
{
com.fasterxml.jackson.databind.node.ArrayNode v3;
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
return v3;
}
public com.fasterxml.jackson.databind.JsonNode missingNode()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JsonNode v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.JsonNode missingNode()>();
return v3;
}
public com.fasterxml.jackson.databind.JsonNode nullNode()
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.node.NullNode v3;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v3;
}
public com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.TreeNode v1;
com.fasterxml.jackson.databind.node.TreeTraversingParser v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.TreeNode;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("n", v1);
v2 = new com.fasterxml.jackson.databind.node.TreeTraversingParser;
specialinvoke v2.<com.fasterxml.jackson.databind.node.TreeTraversingParser: void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.core.ObjectCodec)>(v1, v0);
return v2;
}
public java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode, java.lang.Class) throws java.lang.IllegalArgumentException, com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.core.JsonToken v7, v8;
java.lang.String v17;
boolean v11, v4, v6, v9;
com.fasterxml.jackson.core.TreeNode v1;
com.fasterxml.jackson.core.JsonParser v12;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonProcessingException v14;
java.io.IOException v15;
java.lang.IllegalArgumentException v16;
java.lang.Class v2, v3, v5;
java.lang.Object v10, v13;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.TreeNode;
v2 := @parameter1: java.lang.Class;
if v1 != null goto label1;
return null;
label1:
v3 = class "Lcom/fasterxml/jackson/core/TreeNode;";
v4 = virtualinvoke v3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v2);
if v4 == 0 goto label3;
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v5);
if v6 == 0 goto label3;
label2:
return v1;
label3:
v7 = interfaceinvoke v1.<com.fasterxml.jackson.core.TreeNode: com.fasterxml.jackson.core.JsonToken asToken()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v7 != v8 goto label5;
v9 = v1 instanceof com.fasterxml.jackson.databind.node.POJONode;
if v9 == 0 goto label5;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.POJONode: java.lang.Object getPojo()>();
if v10 == null goto label4;
v11 = virtualinvoke v2.<java.lang.Class: boolean isInstance(java.lang.Object)>(v10);
if v11 == 0 goto label5;
label4:
return v10;
label5:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode)>(v1);
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,java.lang.Class)>(v12, v2);
label6:
return v13;
label7:
v14 := @caughtexception;
throw v14;
label8:
v15 := @caughtexception;
v16 = new java.lang.IllegalArgumentException;
v17 = virtualinvoke v15.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v17, v15);
throw v16;
catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label7;
catch com.fasterxml.jackson.core.JsonProcessingException from label3 to label4 with label7;
catch com.fasterxml.jackson.core.JsonProcessingException from label5 to label6 with label7;
catch java.io.IOException from label1 to label2 with label8;
catch java.io.IOException from label3 to label4 with label8;
catch java.io.IOException from label5 to label6 with label8;
}
public java.lang.Object treeToValue(com.fasterxml.jackson.core.TreeNode, com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException, com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.core.JsonToken v6, v7;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v17;
boolean v11, v3, v5, v8;
com.fasterxml.jackson.core.TreeNode v1;
com.fasterxml.jackson.core.JsonParser v12;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonProcessingException v14;
java.io.IOException v15;
java.lang.IllegalArgumentException v16;
java.lang.Class v10, v4;
java.lang.Object v13, v9;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.TreeNode;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
if v1 != null goto label1;
return null;
label1:
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Lcom/fasterxml/jackson/core/TreeNode;");
if v3 == 0 goto label3;
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>(v4);
if v5 == 0 goto label3;
label2:
return v1;
label3:
v6 = interfaceinvoke v1.<com.fasterxml.jackson.core.TreeNode: com.fasterxml.jackson.core.JsonToken asToken()>();
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_EMBEDDED_OBJECT>;
if v6 != v7 goto label5;
v8 = v1 instanceof com.fasterxml.jackson.databind.node.POJONode;
if v8 == 0 goto label5;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.node.POJONode: java.lang.Object getPojo()>();
if v9 == null goto label4;
v10 = virtualinvoke v9.<java.lang.Object: java.lang.Class getClass()>();
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSuperTypeOf(java.lang.Class)>(v10);
if v11 == 0 goto label5;
label4:
return v9;
label5:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonParser treeAsTokens(com.fasterxml.jackson.core.TreeNode)>(v1);
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v12, v2);
label6:
return v13;
label7:
v14 := @caughtexception;
throw v14;
label8:
v15 := @caughtexception;
v16 = new java.lang.IllegalArgumentException;
v17 = virtualinvoke v15.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v17, v15);
throw v16;
catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label7;
catch com.fasterxml.jackson.core.JsonProcessingException from label3 to label4 with label7;
catch com.fasterxml.jackson.core.JsonProcessingException from label5 to label6 with label7;
catch java.io.IOException from label1 to label2 with label8;
catch java.io.IOException from label3 to label4 with label8;
catch java.io.IOException from label5 to label6 with label8;
}
public com.fasterxml.jackson.databind.JsonNode valueToTree(java.lang.Object) throws java.lang.IllegalArgumentException
{
java.lang.Throwable v13;
com.fasterxml.jackson.databind.SerializationConfig v4, v6;
com.fasterxml.jackson.databind.DeserializationFeature v9;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v7;
com.fasterxml.jackson.databind.node.NullNode v3;
java.lang.String v16;
boolean v10;
com.fasterxml.jackson.core.TreeNode v12;
com.fasterxml.jackson.core.JsonParser v11;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.IOException v14;
java.lang.IllegalArgumentException v15;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
com.fasterxml.jackson.databind.SerializationFeature v5;
java.lang.Object v1;
com.fasterxml.jackson.databind.util.TokenBuffer v8;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v3;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v6);
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec)>(v0);
v9 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v9);
if v10 == 0 goto label2;
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)>(1);
label2:
virtualinvoke v7.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v8, v1);
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();
label3:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.TreeNode readTree(com.fasterxml.jackson.core.JsonParser)>(v11);
label4:
if v11 == null goto label5;
virtualinvoke v11.<com.fasterxml.jackson.core.JsonParser: void close()>();
label5:
return v12;
label6:
v13 := @caughtexception;
throw v13;
label7:
v14 := @caughtexception;
v15 = new java.lang.IllegalArgumentException;
v16 = virtualinvoke v14.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v16, v14);
throw v15;
catch java.lang.Throwable from label3 to label4 with label6;
catch java.io.IOException from label2 to label5 with label7;
}
public boolean canSerialize(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.Class v1;
boolean v4;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v2);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean hasSerializerFor(java.lang.Class,java.util.concurrent.atomic.AtomicReference)>(v1, null);
return v4;
}
public boolean canSerialize(java.lang.Class, java.util.concurrent.atomic.AtomicReference)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Class v1;
java.util.concurrent.atomic.AtomicReference v2;
boolean v5;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.concurrent.atomic.AtomicReference;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: boolean hasSerializerFor(java.lang.Class,java.util.concurrent.atomic.AtomicReference)>(v1, v2);
return v5;
}
public boolean canDeserialize(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(null, v2);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference)>(v1, null);
return v4;
}
public boolean canDeserialize(com.fasterxml.jackson.databind.JavaType, java.util.concurrent.atomic.AtomicReference)
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v1;
java.util.concurrent.atomic.AtomicReference v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: java.util.concurrent.atomic.AtomicReference;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(null, v3);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: boolean hasValueDeserializerFor(com.fasterxml.jackson.databind.JavaType,java.util.concurrent.atomic.AtomicReference)>(v1, v2);
return v5;
}
public java.lang.Object readValue(java.io.File, java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.File v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Class v2;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.File, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.File v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.File, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
java.io.File v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.File)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v5;
}
public java.lang.Object readValue(java.net.URL, java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
java.net.URL v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Class v2;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.net.URL, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
java.net.URL v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.net.URL, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4;
java.net.URL v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.net.URL)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v5;
}
public java.lang.Object readValue(java.lang.String, java.lang.Class) throws com.fasterxml.jackson.core.JsonProcessingException, com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v2;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v4;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public java.lang.Object readValue(java.lang.String, com.fasterxml.jackson.core.type.TypeReference) throws com.fasterxml.jackson.core.JsonProcessingException, com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v4;
java.lang.String v1;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object readValue(java.lang.String,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public java.lang.Object readValue(java.lang.String, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.core.JsonProcessingException, com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonProcessingException v6;
java.io.IOException v7;
com.fasterxml.jackson.core.JsonFactory v3;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.JsonMappingException v8;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("content", v1);
label1:
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.lang.String)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
label2:
return v5;
label3:
v6 := @caughtexception;
throw v6;
label4:
v7 := @caughtexception;
v8 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v7);
throw v8;
catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
public java.lang.Object readValue(java.io.Reader, java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.Reader v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Class v2;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.Reader, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.Reader v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.Reader, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
java.io.Reader v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.Reader)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v5;
}
public java.lang.Object readValue(java.io.InputStream, java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Class v2;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.InputStream, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.core.type.TypeReference v2;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.InputStream, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
java.io.InputStream v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.InputStream)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v5;
}
public java.lang.Object readValue(byte[], java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Class v2;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[])>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(byte[], int, int, java.lang.Class) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v5;
com.fasterxml.jackson.databind.type.TypeFactory v7;
int v2, v3;
java.lang.Class v4;
java.lang.Object v9;
com.fasterxml.jackson.databind.JavaType v8;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v1, v2, v3);
v7 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v4);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v6, v8);
return v9;
}
public java.lang.Object readValue(byte[], com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[])>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(byte[], int, int, com.fasterxml.jackson.core.type.TypeReference) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v5;
com.fasterxml.jackson.databind.type.TypeFactory v7;
int v2, v3;
java.lang.Object v9;
com.fasterxml.jackson.databind.JavaType v8;
com.fasterxml.jackson.core.type.TypeReference v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v1, v2, v3);
v7 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v4);
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v6, v8);
return v9;
}
public java.lang.Object readValue(byte[], com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
byte[] v1;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[])>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v5;
}
public java.lang.Object readValue(byte[], int, int, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamReadException, com.fasterxml.jackson.databind.DatabindException
{
byte[] v1;
com.fasterxml.jackson.core.JsonParser v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v5;
int v2, v3;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(byte[],int,int)>(v1, v2, v3);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v6, v4);
return v7;
}
public java.lang.Object readValue(java.io.DataInput, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.databind.type.TypeFactory v5;
java.io.DataInput v1;
java.lang.Class v2;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.DataInput;
v2 := @parameter1: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v6);
return v7;
}
public java.lang.Object readValue(java.io.DataInput, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonParser v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.DataInput v1;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.DataInput;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("src", v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.JsonParser createParser(java.io.DataInput)>(v1);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
return v5;
}
public void writeValue(java.io.File, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamWriteException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonEncoding v3;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v2;
java.io.File v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.Object;
v3 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.File,com.fasterxml.jackson.core.JsonEncoding)>(v1, v3);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v4, v2);
return;
}
public void writeValue(java.io.OutputStream, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamWriteException, com.fasterxml.jackson.databind.DatabindException
{
java.io.OutputStream v1;
com.fasterxml.jackson.core.JsonEncoding v3;
com.fasterxml.jackson.core.JsonGenerator v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.OutputStream;
v2 := @parameter1: java.lang.Object;
v3 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v1, v3);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v4, v2);
return;
}
public void writeValue(java.io.DataOutput, java.lang.Object) throws java.io.IOException
{
java.io.DataOutput v1;
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.DataOutput;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.DataOutput)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v3, v2);
return;
}
public void writeValue(java.io.Writer, java.lang.Object) throws java.io.IOException, com.fasterxml.jackson.core.exc.StreamWriteException, com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.core.JsonGenerator v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.Writer v1;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.io.Writer;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v3, v2);
return;
}
public java.lang.String writeValueAsString(java.lang.Object) throws com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.core.JsonGenerator v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonProcessingException v7;
java.io.IOException v8;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.io.SegmentedStringWriter v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.JsonMappingException v9;
java.lang.String v6;
com.fasterxml.jackson.core.util.BufferRecycler v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
v2 = new com.fasterxml.jackson.core.io.SegmentedStringWriter;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();
specialinvoke v2.<com.fasterxml.jackson.core.io.SegmentedStringWriter: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>(v4);
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.Writer)>(v2);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v5, v1);
v6 = virtualinvoke v2.<com.fasterxml.jackson.core.io.SegmentedStringWriter: java.lang.String getAndClear()>();
label2:
return v6;
label3:
v7 := @caughtexception;
throw v7;
label4:
v8 := @caughtexception;
v9 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v8);
throw v9;
catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label2 with label3;
catch java.io.IOException from label1 to label2 with label4;
}
public byte[] writeValueAsBytes(java.lang.Object) throws com.fasterxml.jackson.core.JsonProcessingException
{
java.lang.Throwable v8;
byte[] v7;
com.fasterxml.jackson.core.JsonGenerator v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonProcessingException v9;
java.io.IOException v10;
com.fasterxml.jackson.core.JsonFactory v3;
com.fasterxml.jackson.core.JsonEncoding v5;
com.fasterxml.jackson.core.util.ByteArrayBuilder v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.JsonMappingException v11;
com.fasterxml.jackson.core.util.BufferRecycler v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
label1:
v2 = new com.fasterxml.jackson.core.util.ByteArrayBuilder;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.core.JsonFactory: com.fasterxml.jackson.core.util.BufferRecycler _getBufferRecycler()>();
specialinvoke v2.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void <init>(com.fasterxml.jackson.core.util.BufferRecycler)>(v4);
label2:
v5 = <com.fasterxml.jackson.core.JsonEncoding: com.fasterxml.jackson.core.JsonEncoding UTF8>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonGenerator createGenerator(java.io.OutputStream,com.fasterxml.jackson.core.JsonEncoding)>(v2, v5);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v6, v1);
v7 = virtualinvoke v2.<com.fasterxml.jackson.core.util.ByteArrayBuilder: byte[] toByteArray()>();
virtualinvoke v2.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void release()>();
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.util.ByteArrayBuilder: void close()>();
label4:
return v7;
label5:
v8 := @caughtexception;
throw v8;
label6:
v9 := @caughtexception;
throw v9;
label7:
v10 := @caughtexception;
v11 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v10);
throw v11;
catch java.lang.Throwable from label2 to label3 with label5;
catch com.fasterxml.jackson.core.JsonProcessingException from label1 to label4 with label6;
catch java.io.IOException from label1 to label4 with label7;
catch java.io.IOException from label5 to label6 with label7;
}
public com.fasterxml.jackson.databind.ObjectWriter writer()
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.ObjectWriter v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v1);
return v2;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature)
{
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
com.fasterxml.jackson.databind.SerializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
return v4;
}
public transient com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.SerializationFeature, com.fasterxml.jackson.databind.SerializationFeature[])
{
com.fasterxml.jackson.databind.ObjectWriter v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3, v4;
com.fasterxml.jackson.databind.SerializationFeature v1;
com.fasterxml.jackson.databind.SerializationFeature[] v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationFeature;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationFeature[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.SerializationFeature,com.fasterxml.jackson.databind.SerializationFeature[])>(v1, v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v4);
return v5;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(java.text.DateFormat)
{
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
java.text.DateFormat v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.text.DateFormat;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(java.text.DateFormat)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectWriter writerWithView(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig withView(java.lang.Class)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectWriter writerFor(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectWriter v5;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
if v1 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, v3, null);
return v5;
}
public com.fasterxml.jackson.databind.ObjectWriter writerFor(com.fasterxml.jackson.core.type.TypeReference)
{
com.fasterxml.jackson.databind.ObjectWriter v5;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
if v1 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v1);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, v3, null);
return v5;
}
public com.fasterxml.jackson.databind.ObjectWriter writerFor(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ObjectWriter v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, v1, null);
return v3;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.PrettyPrinter)
{
com.fasterxml.jackson.databind.ObjectWriter v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.core.PrettyPrinter v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.PrettyPrinter;
if v1 != null goto label1;
v1 = <com.fasterxml.jackson.databind.ObjectWriter: com.fasterxml.jackson.core.PrettyPrinter NULL_PRETTY_PRINTER>;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, null, v1);
return v3;
}
public com.fasterxml.jackson.databind.ObjectWriter writerWithDefaultPrettyPrinter()
{
com.fasterxml.jackson.databind.ObjectWriter v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.core.PrettyPrinter v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.core.PrettyPrinter getDefaultPrettyPrinter()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v1, null, v2);
return v3;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.ser.FilterProvider)
{
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.ser.FilterProvider v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.FilterProvider;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig withFilters(com.fasterxml.jackson.databind.ser.FilterProvider)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.FormatSchema)
{
com.fasterxml.jackson.databind.ObjectWriter v3;
com.fasterxml.jackson.core.FormatSchema v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.FormatSchema;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema)>(v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.core.FormatSchema)>(v2, v1);
return v3;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.Base64Variant)
{
com.fasterxml.jackson.core.Base64Variant v1;
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.core.Base64Variant)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.core.io.CharacterEscapes)
{
com.fasterxml.jackson.databind.ObjectWriter v3, v4;
com.fasterxml.jackson.core.io.CharacterEscapes v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.io.CharacterEscapes;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v2);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ObjectWriter: com.fasterxml.jackson.databind.ObjectWriter 'with'(com.fasterxml.jackson.core.io.CharacterEscapes)>(v1);
return v4;
}
public com.fasterxml.jackson.databind.ObjectWriter writer(com.fasterxml.jackson.databind.cfg.ContextAttributes)
{
com.fasterxml.jackson.databind.ObjectWriter v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2, v3;
com.fasterxml.jackson.databind.cfg.ContextAttributes v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.ContextAttributes;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig 'with'(com.fasterxml.jackson.databind.cfg.ContextAttributes)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectWriter writerWithType(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectWriter v5;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
if v1 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, v3, null);
return v5;
}
public com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.core.type.TypeReference)
{
com.fasterxml.jackson.databind.ObjectWriter v5;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
if v1 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v3 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v1);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, v3, null);
return v5;
}
public com.fasterxml.jackson.databind.ObjectWriter writerWithType(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ObjectWriter v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectWriter _newWriter(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.PrettyPrinter)>(v2, v1, null);
return v3;
}
public com.fasterxml.jackson.databind.ObjectReader reader()
{
com.fasterxml.jackson.databind.ObjectReader v2, v4;
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.InjectableValues v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v1);
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.ObjectReader 'with'(com.fasterxml.jackson.databind.InjectableValues)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature)
{
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.DeserializationFeature)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v3);
return v4;
}
public transient com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.DeserializationFeature, com.fasterxml.jackson.databind.DeserializationFeature[])
{
com.fasterxml.jackson.databind.ObjectReader v5;
com.fasterxml.jackson.databind.DeserializationConfig v3, v4;
com.fasterxml.jackson.databind.DeserializationFeature[] v2;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationFeature;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationFeature[];
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.DeserializationFeature,com.fasterxml.jackson.databind.DeserializationFeature[])>(v1, v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v4);
return v5;
}
public com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object)
{
com.fasterxml.jackson.databind.InjectableValues v6;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ObjectReader v7;
com.fasterxml.jackson.databind.DeserializationConfig v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
java.lang.Class v4;
java.lang.Object v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v4);
label2:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v6 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v5, v2, v1, null, v6);
return v7;
}
public com.fasterxml.jackson.databind.ObjectReader readerFor(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v1, null, null, v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader readerFor(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v2 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v4, v2, null, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ObjectReader readerFor(com.fasterxml.jackson.core.type.TypeReference)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("type", v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v4, null, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ObjectReader readerForArrayOf(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.type.ArrayType v4;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("type", v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.ArrayType constructArrayType(java.lang.Class)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v4, null, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ObjectReader readerForListOf(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.type.CollectionType v4;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("type", v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class)>(class "Ljava/util/List;", v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v4, null, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ObjectReader readerForMapOf(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.type.MapType v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("type", v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class)>(class "Ljava/util/Map;", class "Ljava/lang/String;", v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v4, null, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.node.JsonNodeFactory)
{
com.fasterxml.jackson.databind.ObjectReader v3, v4;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.node.JsonNodeFactory v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.node.JsonNodeFactory;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _assertNotNull(java.lang.String,java.lang.Object)>("nodeFactory", v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v2);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.ObjectReader 'with'(com.fasterxml.jackson.databind.node.JsonNodeFactory)>(v1);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.FormatSchema)
{
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v3;
com.fasterxml.jackson.core.FormatSchema v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.FormatSchema;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema)>(v1);
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, null, null, v1, v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.InjectableValues)
{
com.fasterxml.jackson.databind.ObjectReader v3;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.InjectableValues;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, null, null, null, v1);
return v3;
}
public com.fasterxml.jackson.databind.ObjectReader readerWithView(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig withView(java.lang.Class)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.Base64Variant)
{
com.fasterxml.jackson.core.Base64Variant v1;
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.cfg.MapperConfigBase v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.Base64Variant;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.cfg.MapperConfigBase 'with'(com.fasterxml.jackson.core.Base64Variant)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.cfg.ContextAttributes)
{
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2, v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.cfg.ContextAttributes v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.ContextAttributes;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.DeserializationConfig 'with'(com.fasterxml.jackson.databind.cfg.ContextAttributes)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig)>(v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ObjectReader v4;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v1, null, null, v3);
return v4;
}
public com.fasterxml.jackson.databind.ObjectReader reader(java.lang.Class)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v4, null, null, v5);
return v6;
}
public com.fasterxml.jackson.databind.ObjectReader reader(com.fasterxml.jackson.core.type.TypeReference)
{
com.fasterxml.jackson.databind.ObjectReader v6;
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v1);
v5 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader _newReader(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.databind.JavaType,java.lang.Object,com.fasterxml.jackson.core.FormatSchema,com.fasterxml.jackson.databind.InjectableValues)>(v2, v4, null, null, v5);
return v6;
}
public java.lang.Object convertValue(java.lang.Object, java.lang.Class) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v2;
java.lang.Object v1, v5;
com.fasterxml.jackson.databind.JavaType v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public java.lang.Object convertValue(java.lang.Object, com.fasterxml.jackson.core.type.TypeReference) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v1, v5;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.core.type.TypeReference v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.type.TypeReference;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(com.fasterxml.jackson.core.type.TypeReference)>(v2);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v1, v4);
return v5;
}
public java.lang.Object convertValue(java.lang.Object, com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v1, v3;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: java.lang.Object _convert(java.lang.Object,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
return v3;
}
protected java.lang.Object _convert(java.lang.Object, com.fasterxml.jackson.databind.JavaType) throws java.lang.IllegalArgumentException
{
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v14, v19;
com.fasterxml.jackson.databind.SerializationConfig v3, v5;
com.fasterxml.jackson.databind.DeserializationFeature v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v6;
com.fasterxml.jackson.databind.DeserializationConfig v11;
com.fasterxml.jackson.core.JsonToken v12, v13, v17, v18;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v23;
com.fasterxml.jackson.databind.JsonDeserializer v15, v20;
boolean v9;
com.fasterxml.jackson.core.JsonParser v10;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.IOException v21;
java.lang.IllegalArgumentException v22;
com.fasterxml.jackson.databind.SerializationFeature v4;
java.lang.Object v1, v16;
com.fasterxml.jackson.databind.util.TokenBuffer v7;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v5);
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec)>(v0);
v8 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v8);
if v9 == 0 goto label1;
v7 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)>(1);
label1:
virtualinvoke v6.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v7, v1);
v10 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v10, v2);
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v12 != v13 goto label2;
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(v10, v11);
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v14, v2);
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v14);
goto label5;
label2:
v17 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v12 == v17 goto label3;
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v12 != v18 goto label4;
label3:
v16 = null;
goto label5;
label4:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(v10, v11);
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v19, v2);
v16 = virtualinvoke v20.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v10, v19);
label5:
virtualinvoke v10.<com.fasterxml.jackson.core.JsonParser: void close()>();
label6:
return v16;
label7:
v21 := @caughtexception;
v22 = new java.lang.IllegalArgumentException;
v23 = virtualinvoke v21.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v22.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v23, v21);
throw v22;
catch java.io.IOException from label1 to label6 with label7;
}
public java.lang.Object updateValue(java.lang.Object, java.lang.Object) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v4, v6;
com.fasterxml.jackson.databind.DeserializationFeature v9;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v7;
com.fasterxml.jackson.databind.ObjectReader v12;
boolean v10, v14;
com.fasterxml.jackson.core.JsonParser v11;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.io.IOException v13;
com.fasterxml.jackson.databind.SerializationFeature v5;
java.lang.Object v1, v2, v3;
com.fasterxml.jackson.databind.JsonMappingException v15;
com.fasterxml.jackson.databind.util.TokenBuffer v8;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v1;
if v1 == null goto label5;
if v2 == null goto label5;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRAP_ROOT_VALUE>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.SerializationConfig without(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v6);
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.util.TokenBuffer bufferForValueConversion(com.fasterxml.jackson.core.ObjectCodec)>(v0);
v9 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v9);
if v10 == 0 goto label1;
v8 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.databind.util.TokenBuffer forceUseOfBigDecimal(boolean)>(1);
label1:
virtualinvoke v7.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v8, v2);
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.util.TokenBuffer: com.fasterxml.jackson.core.JsonParser asParser()>();
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectReader readerForUpdating(java.lang.Object)>(v1);
v3 = virtualinvoke v12.<com.fasterxml.jackson.databind.ObjectReader: java.lang.Object readValue(com.fasterxml.jackson.core.JsonParser)>(v11);
virtualinvoke v11.<com.fasterxml.jackson.core.JsonParser: void close()>();
label2:
goto label5;
label3:
v13 := @caughtexception;
v14 = v13 instanceof com.fasterxml.jackson.databind.JsonMappingException;
if v14 == 0 goto label4;
throw v13;
label4:
v15 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException fromUnexpectedIOE(java.io.IOException)>(v13);
throw v15;
label5:
return v3;
catch java.io.IOException from label1 to label2 with label3;
}
public com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsonschema.JsonSchema v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v2);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.jsonschema.JsonSchema generateJsonSchema(java.lang.Class)>(v1);
return v4;
}
public void acceptJsonFormatVisitor(java.lang.Class, com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)>(v4, v2);
return;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v4;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.IllegalArgumentException v3;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v2;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("type must be provided");
throw v3;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v4);
virtualinvoke v5.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper)>(v1, v2);
return;
}
protected com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder _constructDefaultTypeResolverBuilder(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v2;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping v1;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v3 = staticinvoke <com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder: com.fasterxml.jackson.databind.ObjectMapper$DefaultTypeResolverBuilder construct(com.fasterxml.jackson.databind.ObjectMapper$DefaultTyping,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)
{
com.fasterxml.jackson.databind.ser.SerializerFactory v3;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v2, v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider>;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.SerializerFactory _serializerFactory>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider createInstance(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.SerializerFactory)>(v1, v3);
return v4;
}
protected final void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Exception v8;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v7;
com.fasterxml.jackson.databind.SerializationFeature v4;
java.lang.Object v2;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature CLOSE_CLOSEABLE>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 == 0 goto label1;
v6 = v2 instanceof java.io.Closeable;
if v6 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object,com.fasterxml.jackson.databind.SerializationConfig)>(v1, v2, v3);
return;
label1:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
virtualinvoke v7.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
label2:
goto label4;
label3:
v8 := @caughtexception;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.lang.Exception)>(v1, v8);
return;
label4:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void close()>();
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private final void _writeCloseable(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.SerializationConfig) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
java.io.Closeable v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Object v2;
java.lang.Exception v6;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializationConfig;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
v5 = v2;
v2 = null;
interfaceinvoke v5.<java.io.Closeable: void close()>();
label2:
goto label4;
label3:
v6 := @caughtexception;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)>(v1, v2, v6);
return;
label4:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void close()>();
return;
catch java.lang.Exception from label1 to label2 with label3;
}
private final void _writeCloseableValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object, com.fasterxml.jackson.databind.SerializationConfig) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Exception v7;
com.fasterxml.jackson.databind.ser.DefaultSerializerProvider v4;
com.fasterxml.jackson.databind.SerializationFeature v5;
java.lang.Object v2;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializationConfig;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ser.DefaultSerializerProvider _serializerProvider(com.fasterxml.jackson.databind.SerializationConfig)>(v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.ser.DefaultSerializerProvider: void serializeValue(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FLUSH_AFTER_WRITE_VALUE>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
if v6 == 0 goto label4;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void flush()>();
label2:
goto label4;
label3:
v7 := @caughtexception;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void closeOnFailAndThrowAsIOE(com.fasterxml.jackson.core.JsonGenerator,java.io.Closeable,java.lang.Exception)>(null, v2, v7);
return;
label4:
interfaceinvoke v2.<java.io.Closeable: void close()>();
return;
catch java.lang.Exception from label1 to label2 with label3;
}
protected final void _configAndWriteValue(com.fasterxml.jackson.core.JsonGenerator, java.lang.Object) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.SerializationConfig v3;
java.lang.Object v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.SerializationConfig getSerializationConfig()>();
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: void initialize(com.fasterxml.jackson.core.JsonGenerator)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _writeValueAndClose(com.fasterxml.jackson.core.JsonGenerator,java.lang.Object)>(v1, v2);
return;
}
protected java.lang.Object _readValue(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonParser v2;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.DeserializationConfig v1;
java.lang.Object v8;
com.fasterxml.jackson.core.JsonToken v10, v4, v6, v9;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.JsonDeserializer v11, v7;
boolean v13;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 := @parameter1: com.fasterxml.jackson.core.JsonParser;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v2, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(v2, v1);
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v4 != v6 goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v5, v3);
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v5);
goto label4;
label1:
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v4 == v9 goto label2;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v4 != v10 goto label3;
label2:
v8 = null;
goto label4;
label3:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v5, v3);
v8 = virtualinvoke v5.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(v2, v3, v11, null);
label4:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonParser: void clearCurrentToken()>();
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS>;
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label5;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v2, v5, v3);
label5:
return v8;
}
protected java.lang.Object _readMapAndClose(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
java.lang.Throwable v15;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v4;
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonToken v10, v5, v6, v9;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.JsonDeserializer v11, v7;
boolean v13;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v14, v8;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
label1:
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(v1, v3);
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v5 != v6 goto label2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.JsonDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v4);
goto label5;
label2:
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v5 == v9 goto label3;
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v5 != v10 goto label4;
label3:
v8 = null;
goto label5;
label4:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v4, v2);
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(v1, v2, v11, null);
virtualinvoke v4.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: void checkUnresolvedObjectId()>();
label5:
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS>;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label6;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v1, v4, v2);
label6:
v14 = v8;
label7:
if v1 == null goto label8;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void close()>();
label8:
return v14;
label9:
v15 := @caughtexception;
throw v15;
catch java.lang.Throwable from label1 to label7 with label9;
}
protected com.fasterxml.jackson.databind.JsonNode _readTreeAndClose(com.fasterxml.jackson.core.JsonParser) throws java.io.IOException
{
java.lang.Throwable v14;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v7;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.databind.DeserializationFeature v12;
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.databind.node.JsonNodeFactory v5, v9;
com.fasterxml.jackson.databind.JsonNode v6;
java.lang.Object v11;
com.fasterxml.jackson.core.JsonToken v4, v8;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.JsonDeserializer v10;
boolean v13;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(class "Lcom/fasterxml/jackson/databind/JsonNode;");
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig getDeserializationConfig()>();
virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v1);
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v4 != null goto label3;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v4 != null goto label3;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.JsonNode missingNode()>();
label2:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void close()>();
return v6;
label3:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationConfig)>(v1, v3);
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v4 != v8 goto label4;
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
virtualinvoke v9.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
goto label5;
label4:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v7, v2);
v11 = virtualinvoke v7.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: java.lang.Object readRootValue(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Object)>(v1, v2, v10, null);
label5:
v12 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature FAIL_ON_TRAILING_TOKENS>;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v12);
if v13 == 0 goto label6;
virtualinvoke v0.<com.fasterxml.jackson.databind.ObjectMapper: void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.JavaType)>(v1, v7, v2);
label6:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: void close()>();
return v11;
label7:
v14 := @caughtexception;
throw v14;
catch java.lang.Throwable from label1 to label2 with label7;
catch java.lang.Throwable from label3 to label6 with label7;
}
protected com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createDeserializationContext(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v2;
com.fasterxml.jackson.databind.InjectableValues v4;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.DefaultDeserializationContext v3, v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationConfig;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext _deserializationContext>;
v4 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.InjectableValues _injectableValues>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.deser.DefaultDeserializationContext: com.fasterxml.jackson.databind.deser.DefaultDeserializationContext createInstance(com.fasterxml.jackson.databind.DeserializationConfig,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.InjectableValues)>(v2, v1, v4);
return v5;
}
protected com.fasterxml.jackson.core.JsonToken _initForReading(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationConfig v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.exc.MismatchedInputException v5;
com.fasterxml.jackson.databind.ObjectMapper v0;
com.fasterxml.jackson.core.JsonToken v4;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.DeserializationConfig _deserializationConfig>;
virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.core.JsonParser initialize(com.fasterxml.jackson.core.JsonParser)>(v1);
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
if v4 != null goto label1;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v4 != null goto label1;
v5 = staticinvoke <com.fasterxml.jackson.databind.exc.MismatchedInputException: com.fasterxml.jackson.databind.exc.MismatchedInputException 'from'(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v1, v2, "No content to map due to end-of-input");
throw v5;
label1:
return v4;
}
protected final void _verifyNoTrailingTokens(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Class v5;
com.fasterxml.jackson.core.JsonToken v4;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
if v4 == null goto label1;
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class rawClass(com.fasterxml.jackson.databind.JavaType)>(v3);
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportTrailingTokens(java.lang.Class,com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.core.JsonToken)>(v5, v1, v4);
label1:
return;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _findRootDeserializer(com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.DatabindException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.util.concurrent.ConcurrentHashMap v3, v8;
java.lang.Object v4, v7;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v6;
com.fasterxml.jackson.databind.JsonDeserializer v5;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;
v4 = virtualinvoke v3.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(v2);
if v4 == null goto label1;
return v4;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonDeserializer findRootValueDeserializer(com.fasterxml.jackson.databind.JavaType)>(v2);
if v5 != null goto label2;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.JavaType)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot find a deserializer for type \u0001");
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v6);
return v7;
label2:
v8 = v0.<com.fasterxml.jackson.databind.ObjectMapper: java.util.concurrent.ConcurrentHashMap _rootDeserializers>;
virtualinvoke v8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v5);
return v5;
}
protected void _verifySchemaType(com.fasterxml.jackson.core.FormatSchema)
{
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.IllegalArgumentException v4;
com.fasterxml.jackson.core.JsonFactory v2, v7;
com.fasterxml.jackson.core.FormatSchema v1;
java.lang.Class v5;
java.lang.String v6, v8, v9;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: com.fasterxml.jackson.core.FormatSchema;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonFactory: boolean canUseSchema(com.fasterxml.jackson.core.FormatSchema)>(v1);
if v3 != 0 goto label1;
v4 = new java.lang.IllegalArgumentException;
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = v0.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.core.JsonFactory _jsonFactory>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.core.JsonFactory: java.lang.String getFormatName()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v6, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot use FormatSchema of type \u0001 for format \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v4;
label1:
return;
}
protected final void _assertNotNull(java.lang.String, java.lang.Object)
{
java.lang.Object[] v4;
com.fasterxml.jackson.databind.ObjectMapper v0;
java.lang.Object v2;
java.lang.String v1, v5;
java.lang.IllegalArgumentException v3;
v0 := @this: com.fasterxml.jackson.databind.ObjectMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
if v2 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("argument \"%s\" is null", v4);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
return;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
com.fasterxml.jackson.databind.cfg.BaseSettings v1;
com.fasterxml.jackson.core.Base64Variant v6;
com.fasterxml.jackson.databind.type.TypeFactory v3;
java.util.Locale v5;
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator v7;
com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider v8;
com.fasterxml.jackson.databind.util.StdDateFormat v4;
v0 = new com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.JacksonAnnotationIntrospector: void <init>()>();
<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR> = v0;
v1 = new com.fasterxml.jackson.databind.cfg.BaseSettings;
v2 = <com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.AnnotationIntrospector DEFAULT_ANNOTATION_INTROSPECTOR>;
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.TypeFactory defaultInstance()>();
v4 = <com.fasterxml.jackson.databind.util.StdDateFormat: com.fasterxml.jackson.databind.util.StdDateFormat instance>;
v5 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
v6 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();
v7 = <com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;
v8 = new com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider;
specialinvoke v8.<com.fasterxml.jackson.databind.introspect.DefaultAccessorNamingStrategy$Provider: void <init>()>();
specialinvoke v1.<com.fasterxml.jackson.databind.cfg.BaseSettings: void <init>(com.fasterxml.jackson.databind.introspect.ClassIntrospector,com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.PropertyNamingStrategy,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder,java.text.DateFormat,com.fasterxml.jackson.databind.cfg.HandlerInstantiator,java.util.Locale,java.util.TimeZone,com.fasterxml.jackson.core.Base64Variant,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator,com.fasterxml.jackson.databind.introspect.AccessorNamingStrategy$Provider)>(null, v2, null, v3, null, v4, null, v5, null, v6, v7, v8);
<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.cfg.BaseSettings DEFAULT_BASE> = v1;
return;
}
}