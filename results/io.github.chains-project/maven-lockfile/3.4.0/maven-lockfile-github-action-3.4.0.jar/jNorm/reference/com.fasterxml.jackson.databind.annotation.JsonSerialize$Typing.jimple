public final enum class com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DYNAMIC;
public static final enum com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC;
public static final enum com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DEFAULT_TYPING;
private static final com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] $VALUES;
public static com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] v0;
v0 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/databind/annotation/JsonSerialize$Typing;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing v0;
v0 := @this: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] $values()
{
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] v0;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing v1, v2, v3;
v0 = newarray (com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing)[3];
v1 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DYNAMIC>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DEFAULT_TYPING>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] v3;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing v0, v1, v2;
v0 = new com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing;
specialinvoke v0.<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: void <init>(java.lang.String,int)>("DYNAMIC", 0);
<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DYNAMIC> = v0;
v1 = new com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing;
specialinvoke v1.<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: void <init>(java.lang.String,int)>("STATIC", 1);
<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC> = v1;
v2 = new com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing;
specialinvoke v2.<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: void <init>(java.lang.String,int)>("DEFAULT_TYPING", 2);
<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DEFAULT_TYPING> = v2;
v3 = staticinvoke <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] $values()>();
<com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing[] $VALUES> = v3;
return;
}
}