public final class com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
protected static final com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS;
protected static final com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS;
protected final com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers;
protected final com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers;
protected final com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers;
public void <init>()
{
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
specialinvoke v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[])>(null, null, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.Serializers[], com.fasterxml.jackson.databind.ser.Serializers[], com.fasterxml.jackson.databind.ser.BeanSerializerModifier[])
{
com.fasterxml.jackson.databind.ser.Serializers[] v1, v2, v4, v5;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v3, v6;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.Serializers[];
v2 := @parameter1: com.fasterxml.jackson.databind.ser.Serializers[];
v3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[];
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 != null goto label1;
v4 = <com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS>;
goto label2;
label1:
v4 = v1;
label2:
v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers> = v4;
if v2 != null goto label3;
v5 = <com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS>;
goto label4;
label3:
v5 = v2;
label4:
v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers> = v5;
if v3 != null goto label5;
v6 = <com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS>;
goto label6;
label5:
v6 = v3;
label6:
v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers> = v6;
return;
}
public com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)
{
java.lang.Object[] v4;
com.fasterxml.jackson.databind.ser.Serializers v1;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v7;
java.lang.IllegalArgumentException v2;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0, v5;
com.fasterxml.jackson.databind.ser.Serializers[] v3, v6;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.Serializers;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null Serializers");
throw v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers>;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>(v3, v1);
v5 = new com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v6 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers>;
v7 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers>;
specialinvoke v5.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[])>(v4, v6, v7);
return v5;
}
public com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
{
java.lang.Object[] v4;
com.fasterxml.jackson.databind.ser.Serializers v1;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v7;
java.lang.IllegalArgumentException v2;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0, v5;
com.fasterxml.jackson.databind.ser.Serializers[] v3, v6;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.Serializers;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null Serializers");
throw v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers>;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>(v3, v1);
v5 = new com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v6 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers>;
v7 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers>;
specialinvoke v5.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[])>(v6, v4, v7);
return v5;
}
public com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
{
java.lang.Object[] v4;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v3;
java.lang.IllegalArgumentException v2;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0, v5;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier v1;
com.fasterxml.jackson.databind.ser.Serializers[] v6, v7;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanSerializerModifier;
if v1 != null goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot pass null modifier");
throw v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers>;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object[] insertInListNoDup(java.lang.Object[],java.lang.Object)>(v3, v1);
v5 = new com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v6 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers>;
v7 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers>;
specialinvoke v5.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: void <init>(com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.Serializers[],com.fasterxml.jackson.databind.ser.BeanSerializerModifier[])>(v6, v7, v4);
return v5;
}
public boolean hasSerializers()
{
int v2;
com.fasterxml.jackson.databind.ser.Serializers[] v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers>;
v2 = lengthof v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean hasKeySerializers()
{
int v2;
com.fasterxml.jackson.databind.ser.Serializers[] v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers>;
v2 = lengthof v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean hasSerializerModifiers()
{
int v2;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers>;
v2 = lengthof v1;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public java.lang.Iterable serializers()
{
com.fasterxml.jackson.databind.ser.Serializers[] v2;
com.fasterxml.jackson.databind.util.ArrayIterator v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 = new com.fasterxml.jackson.databind.util.ArrayIterator;
v2 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalSerializers>;
specialinvoke v1.<com.fasterxml.jackson.databind.util.ArrayIterator: void <init>(java.lang.Object[])>(v2);
return v1;
}
public java.lang.Iterable keySerializers()
{
com.fasterxml.jackson.databind.ser.Serializers[] v2;
com.fasterxml.jackson.databind.util.ArrayIterator v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 = new com.fasterxml.jackson.databind.util.ArrayIterator;
v2 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] _additionalKeySerializers>;
specialinvoke v1.<com.fasterxml.jackson.databind.util.ArrayIterator: void <init>(java.lang.Object[])>(v2);
return v1;
}
public java.lang.Iterable serializerModifiers()
{
com.fasterxml.jackson.databind.util.ArrayIterator v1;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v2;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v0;
v0 := @this: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v1 = new com.fasterxml.jackson.databind.util.ArrayIterator;
v2 = v0.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] _modifiers>;
specialinvoke v1.<com.fasterxml.jackson.databind.util.ArrayIterator: void <init>(java.lang.Object[])>(v2);
return v1;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.Serializers[] v0;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] v1;
v0 = newarray (com.fasterxml.jackson.databind.ser.Serializers)[0];
<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.Serializers[] NO_SERIALIZERS> = v0;
v1 = newarray (com.fasterxml.jackson.databind.ser.BeanSerializerModifier)[0];
<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.ser.BeanSerializerModifier[] NO_MODIFIERS> = v1;
return;
}
}