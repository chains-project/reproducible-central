public class com.fasterxml.jackson.databind.deser.UnresolvedForwardReference extends com.fasterxml.jackson.databind.JsonMappingException
{
private static final long serialVersionUID;
private com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid;
private java.util.List _unresolvedIds;
public void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String, com.fasterxml.jackson.core.JsonLocation, com.fasterxml.jackson.databind.deser.impl.ReadableObjectId)
{
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v4;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
v4 := @parameter3: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String,com.fasterxml.jackson.core.JsonLocation)>(v1, v2, v3);
v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid> = v4;
return;
}
public void <init>(com.fasterxml.jackson.core.JsonParser, java.lang.String)
{
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
java.lang.String v2;
java.util.ArrayList v3;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: void <init>(java.io.Closeable,java.lang.String)>(v1, v2);
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.util.List _unresolvedIds> = v3;
return;
}
public com.fasterxml.jackson.databind.deser.impl.ReadableObjectId getRoid()
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v1;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 = v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid>;
return v1;
}
public java.lang.Object getUnresolvedId()
{
com.fasterxml.jackson.databind.deser.impl.ReadableObjectId v1;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
java.lang.Object v3;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey v2;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 = v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: com.fasterxml.jackson.databind.deser.impl.ReadableObjectId _roid>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.deser.impl.ReadableObjectId: com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey getKey()>();
v3 = v2.<com.fasterxml.jackson.'annotation'.ObjectIdGenerator$IdKey: java.lang.Object key>;
return v3;
}
public void addUnresolvedId(java.lang.Object, java.lang.Class, com.fasterxml.jackson.core.JsonLocation)
{
com.fasterxml.jackson.databind.deser.UnresolvedId v5;
java.util.List v4;
com.fasterxml.jackson.core.JsonLocation v3;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
java.lang.Class v2;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.core.JsonLocation;
v4 = v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.util.List _unresolvedIds>;
v5 = new com.fasterxml.jackson.databind.deser.UnresolvedId;
specialinvoke v5.<com.fasterxml.jackson.databind.deser.UnresolvedId: void <init>(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonLocation)>(v1, v2, v3);
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v5);
return;
}
public java.util.List getUnresolvedIds()
{
java.util.List v1;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 = v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.util.List _unresolvedIds>;
return v1;
}
public java.lang.String getMessage()
{
java.util.Iterator v5;
java.util.List v2, v4;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
java.lang.Object v7;
java.lang.StringBuilder v3;
java.lang.String v1, v10, v8;
boolean v6, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>();
v2 = v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.util.List _unresolvedIds>;
if v2 != null goto label1;
return v1;
label1:
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>(java.lang.String)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.deser.UnresolvedForwardReference: java.util.List _unresolvedIds>;
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label2:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.deser.UnresolvedId: java.lang.String toString()>();
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
v9 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label2;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
goto label2;
label3:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
v10 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v10;
}
public synchronized com.fasterxml.jackson.databind.deser.UnresolvedForwardReference fillInStackTrace()
{
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
return v0;
}
public com.fasterxml.jackson.databind.deser.UnresolvedForwardReference withStackTrace()
{
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v0;
v0 := @this: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.Throwable fillInStackTrace()>();
return v0;
}
}