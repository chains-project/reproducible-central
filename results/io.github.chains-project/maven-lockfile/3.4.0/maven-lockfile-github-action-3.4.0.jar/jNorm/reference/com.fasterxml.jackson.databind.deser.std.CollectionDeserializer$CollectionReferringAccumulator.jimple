public class com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator extends java.lang.Object
{
private final java.lang.Class _elementType;
private final java.util.Collection _result;
private java.util.List _accumulator;
public void <init>(java.lang.Class, java.util.Collection)
{
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator v0;
java.util.Collection v2;
java.lang.Class v1;
java.util.ArrayList v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.Collection;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator> = v3;
v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.lang.Class _elementType> = v1;
v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.Collection _result> = v2;
return;
}
public void add(java.lang.Object)
{
java.util.Collection v4;
java.util.List v10, v2, v5, v6;
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator v0;
int v7, v8;
java.lang.Object v1, v9;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;
v3 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.Collection _result>;
interfaceinvoke v4.<java.util.Collection: boolean add(java.lang.Object)>(v1);
goto label2;
label1:
v5 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;
v6 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;
v7 = interfaceinvoke v6.<java.util.List: int size()>();
v8 = v7 - 1;
v9 = interfaceinvoke v5.<java.util.List: java.lang.Object get(int)>(v8);
v10 = v9.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: java.util.List next>;
interfaceinvoke v10.<java.util.List: boolean add(java.lang.Object)>(v1);
label2:
return;
}
public com.fasterxml.jackson.databind.deser.impl.ReadableObjectId$Referring handleUnresolvedReference(com.fasterxml.jackson.databind.deser.UnresolvedForwardReference)
{
java.util.List v4;
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring v2;
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator v0;
com.fasterxml.jackson.databind.deser.UnresolvedForwardReference v1;
java.lang.Class v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.UnresolvedForwardReference;
v2 = new com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.lang.Class _elementType>;
specialinvoke v2.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: void <init>(com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator,com.fasterxml.jackson.databind.deser.UnresolvedForwardReference,java.lang.Class)>(v0, v1, v3);
v4 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v2);
return v2;
}
public void resolveForwardReference(java.lang.Object, java.lang.Object) throws java.io.IOException
{
java.util.Iterator v4;
java.util.Collection v5;
java.lang.IllegalArgumentException v10;
java.util.List v3, v9;
com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator v0;
java.lang.Object v1, v2, v7;
java.lang.String v11;
boolean v6, v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.List _accumulator>;
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
v5 = v0.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferringAccumulator: java.util.Collection _result>;
label1:
v6 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: boolean hasId(java.lang.Object)>(v1);
if v8 == 0 goto label2;
interfaceinvoke v4.<java.util.Iterator: void remove()>();
interfaceinvoke v5.<java.util.Collection: boolean add(java.lang.Object)>(v2);
v9 = v7.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: java.util.List next>;
interfaceinvoke v5.<java.util.Collection: boolean addAll(java.util.Collection)>(v9);
return;
label2:
v5 = v7.<com.fasterxml.jackson.databind.deser.std.CollectionDeserializer$CollectionReferring: java.util.List next>;
goto label1;
label3:
v10 = new java.lang.IllegalArgumentException;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Trying to resolve a forward reference with id [\u0001] that wasn\'t previously seen as unresolved.");
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v11);
throw v10;
}
}