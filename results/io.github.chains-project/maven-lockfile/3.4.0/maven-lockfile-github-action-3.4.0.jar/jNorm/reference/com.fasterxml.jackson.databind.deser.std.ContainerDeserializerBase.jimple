public abstract class com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase extends com.fasterxml.jackson.databind.deser.std.StdDeserializer implements com.fasterxml.jackson.databind.deser.ValueInstantiator$Gettable
{
protected final com.fasterxml.jackson.databind.JavaType _containerType;
protected final com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider;
protected final boolean _skipNullValues;
protected final java.lang.Boolean _unwrapSingle;
protected void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
com.fasterxml.jackson.databind.JavaType v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.NullValueProvider;
v3 := @parameter2: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType> = v1;
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Boolean _unwrapSingle> = v3;
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider> = v2;
v4 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: boolean isSkipper(com.fasterxml.jackson.databind.deser.NullValueProvider)>(v2);
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: boolean _skipNullValues> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, null, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase)
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0, v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v2 = v1.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider>;
v3 = v1.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Boolean _unwrapSingle>;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, v2, v3);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase, com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0, v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
com.fasterxml.jackson.databind.JavaType v4, v5;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.NullValueProvider;
v3 := @parameter2: java.lang.Boolean;
v4 = v1.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType>;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v4);
v5 = v1.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType>;
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType> = v5;
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.deser.NullValueProvider _nullProvider> = v2;
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Boolean _unwrapSingle> = v3;
v6 = staticinvoke <com.fasterxml.jackson.databind.deser.impl.NullsConstantProvider: boolean isSkipper(com.fasterxml.jackson.databind.deser.NullValueProvider)>(v2);
v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: boolean _skipNullValues> = v6;
return;
}
public com.fasterxml.jackson.databind.JavaType getValueType()
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType>;
return v1;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v2;
}
public com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String)
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
java.lang.Object[] v4;
java.lang.IllegalArgumentException v3;
java.lang.Class v5;
java.lang.String v1, v6, v7;
com.fasterxml.jackson.databind.JsonDeserializer v2;
com.fasterxml.jackson.databind.deser.SettableBeanProperty v8;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer()>();
if v2 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = newarray (java.lang.Object)[2];
v4[0] = v1;
v5 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v4[1] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot handle managed/back reference \'%s\': type: container deserializer of type %s returned null for \'getContentDeserializer()\'", v4);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v3;
label1:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JsonDeserializer: com.fasterxml.jackson.databind.deser.SettableBeanProperty findBackReference(java.lang.String)>(v1);
return v8;
}
public com.fasterxml.jackson.databind.JavaType getContentType()
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.JavaType v1, v2, v3, v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 = v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType>;
if v1 != null goto label1;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
return v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType _containerType>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
return v4;
}
public abstract com.fasterxml.jackson.databind.JsonDeserializer getContentDeserializer();
public com.fasterxml.jackson.databind.util.AccessPattern getEmptyAccessPattern()
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.util.AccessPattern v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 = <com.fasterxml.jackson.databind.util.AccessPattern: com.fasterxml.jackson.databind.util.AccessPattern DYNAMIC>;
return v1;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
java.lang.Object[] v5;
com.fasterxml.jackson.databind.deser.ValueInstantiator v2;
java.io.IOException v8;
java.lang.Object v7, v9;
com.fasterxml.jackson.databind.JavaType v4;
java.lang.String v6;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.deser.ValueInstantiator getValueInstantiator()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: boolean canCreateUsingDefault()>();
if v3 != 0 goto label2;
label1:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: com.fasterxml.jackson.databind.JavaType getValueType()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v4;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot create empty instance of %s, no default Creator", v5);
virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object reportBadDefinition(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v4, v6);
label2:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.deser.ValueInstantiator: java.lang.Object createUsingDefault(com.fasterxml.jackson.databind.DeserializationContext)>(v1);
label3:
return v7;
label4:
v8 := @caughtexception;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object throwAsMappingException(com.fasterxml.jackson.databind.DeserializationContext,java.io.IOException)>(v1, v8);
return v9;
catch java.io.IOException from label2 to label3 with label4;
}
protected java.lang.Object wrapAndThrow(java.lang.Throwable, java.lang.Object, java.lang.String) throws java.io.IOException
{
java.lang.Throwable v1;
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
java.lang.Object v2, v4;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase: java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext,java.lang.Throwable,java.lang.Object,java.lang.String)>(null, v1, v2, v3);
return v4;
}
protected java.lang.Object wrapAndThrow(com.fasterxml.jackson.databind.DeserializationContext, java.lang.Throwable, java.lang.Object, java.lang.String) throws java.io.IOException
{
java.lang.Throwable v2, v6;
com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase v0;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.DeserializationFeature v7;
java.lang.Object v11, v3;
com.fasterxml.jackson.databind.JsonMappingException v12;
java.lang.String v4;
boolean v10, v5, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.ContainerDeserializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 := @parameter1: java.lang.Throwable;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.String;
label1:
v5 = v2 instanceof java.lang.reflect.InvocationTargetException;
if v5 == 0 goto label2;
v6 = virtualinvoke v2.<java.lang.Throwable: java.lang.Throwable getCause()>();
if v6 == null goto label2;
v2 = virtualinvoke v2.<java.lang.Throwable: java.lang.Throwable getCause()>();
goto label1;
label2:
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfError(java.lang.Throwable)>(v2);
if v1 == null goto label3;
v7 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature WRAP_EXCEPTIONS>;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v7);
if v8 != 0 goto label3;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Throwable throwIfRTE(java.lang.Throwable)>(v2);
label3:
v9 = v2 instanceof java.io.IOException;
if v9 == 0 goto label4;
v10 = v2 instanceof com.fasterxml.jackson.databind.JsonMappingException;
if v10 != 0 goto label4;
throw v2;
label4:
v11 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object nonNull(java.lang.Object,java.lang.Object)>(v4, "N/A");
v12 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,java.lang.String)>(v2, v3, v11);
throw v12;
}
}