public class com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer extends com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer
{
private static final com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance;
protected void <init>()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(java.lang.Class,java.lang.Boolean)>(class "Lcom/fasterxml/jackson/databind/JsonNode;", null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer, boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0, v1;
boolean v2, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer,boolean,boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.JsonDeserializer _createWithMerge(boolean, boolean)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0, v3;
boolean v1, v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: void <init>(com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer,boolean,boolean)>(v0, v1, v2);
return v3;
}
public static com.fasterxml.jackson.databind.JsonDeserializer getDeserializer(java.lang.Class)
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer v2;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer v1;
java.lang.Class v0;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v3;
v0 := @parameter0: java.lang.Class;
if v0 != class "Lcom/fasterxml/jackson/databind/node/ObjectNode;" goto label1;
v1 = staticinvoke <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ObjectDeserializer getInstance()>();
return v1;
label1:
if v0 != class "Lcom/fasterxml/jackson/databind/node/ArrayNode;" goto label2;
v2 = staticinvoke <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer$ArrayDeserializer getInstance()>();
return v2;
label2:
v3 = <com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance>;
return v3;
}
public com.fasterxml.jackson.databind.JsonNode getNullValue(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.node.NullNode v3;
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.node.JsonNodeFactory v2;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.NullNode nullNode()>();
return v3;
}
public java.lang.Object getAbsentValue(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
return null;
}
public com.fasterxml.jackson.databind.JsonNode deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.node.ObjectNode v11, v6, v8;
com.fasterxml.jackson.databind.node.ArrayNode v9;
com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack v3;
com.fasterxml.jackson.databind.node.JsonNodeFactory v4;
int v5;
com.fasterxml.jackson.databind.node.ContainerNode v10, v7;
com.fasterxml.jackson.databind.JsonNode v12;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = new com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack: void <init>()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.node.JsonNodeFactory getNodeFactory()>();
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label5;
case 5: goto label4;
default: goto label5;
};
label1:
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v4, v3, v6);
return v7;
label2:
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ObjectNode objectNode()>();
return v8;
label3:
v9 = virtualinvoke v4.<com.fasterxml.jackson.databind.node.JsonNodeFactory: com.fasterxml.jackson.databind.node.ArrayNode arrayNode()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.node.ContainerNode _deserializeContainerNoRecursion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack,com.fasterxml.jackson.databind.node.ContainerNode)>(v1, v2, v4, v3, v9);
return v10;
label4:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.node.ObjectNode _deserializeObjectAtName(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.node.JsonNodeFactory,com.fasterxml.jackson.databind.deser.std.BaseNodeDeserializer$ContainerStack)>(v1, v2, v4, v3);
return v11;
label5:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.JsonNode _deserializeAnyScalar(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v12;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
java.lang.Boolean v2;
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: java.lang.Boolean _supportsUpdates>;
return v2;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer v0;
v0 = new com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer: com.fasterxml.jackson.databind.deser.std.JsonNodeDeserializer instance> = v0;
return;
}
}