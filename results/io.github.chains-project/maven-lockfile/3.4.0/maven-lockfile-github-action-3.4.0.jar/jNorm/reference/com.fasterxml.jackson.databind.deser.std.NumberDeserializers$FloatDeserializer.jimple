public class com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer extends com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer
{
private static final long serialVersionUID;
static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance;
static final com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance;
public void <init>(java.lang.Class, java.lang.Float)
{
java.lang.Float v2, v4;
com.fasterxml.jackson.databind.type.LogicalType v3;
java.lang.Class v1;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Float;
v3 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Float>;
v4 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$PrimitiveOrWrapperDeserializer: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.LogicalType,java.lang.Object,java.lang.Object)>(v1, v3, v2, v4);
return;
}
public java.lang.Float deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Float v10, v6, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
float v5, v8;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer v0;
boolean v4, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();
v6 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v5);
return v6;
label1:
v7 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: boolean _primitive>;
if v7 == 0 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: float _parseFloatPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v9 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v8);
return v9;
label2:
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v10;
}
protected final java.lang.Float _parseFloat(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Float v13, v18, v30;
boolean v25, v28;
com.fasterxml.jackson.core.StreamReadFeature v27;
float v12, v29;
java.lang.Object[] v33;
com.fasterxml.jackson.databind.cfg.CoercionAction v10, v19, v20, v22, v7, v8;
int v3;
com.fasterxml.jackson.databind.JavaType v16;
java.lang.String v24, v4;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer v0;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.IllegalArgumentException v31;
java.lang.Class v14, v32, v6;
java.lang.Object v11, v15, v17, v21, v23, v26, v34, v5, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label06;
case 2: goto label08;
case 3: goto label07;
case 4: goto label08;
case 5: goto label08;
case 6: goto label01;
case 7: goto label03;
case 8: goto label05;
case 9: goto label08;
case 10: goto label08;
case 11: goto label02;
default: goto label08;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
goto label09;
label02:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v5;
label03:
v6 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Class _valueClass>;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkIntToFloatCoercion(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Class)>(v1, v2, v6);
v8 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v7 != v8 goto label04;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v9;
label04:
v10 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v7 != v10 goto label05;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v11;
label05:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: float getFloatValue()>();
v13 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v12);
return v13;
label06:
v14 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Class _valueClass>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.String extractScalarFromObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.JsonDeserializer,java.lang.Class)>(v1, v0, v14);
goto label09;
label07:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v15;
label08:
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v16, v1);
return v17;
label09:
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Float _checkFloatSpecialValue(java.lang.String)>(v4);
if v18 == null goto label10;
return v18;
label10:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v4);
v20 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v19 != v20 goto label11;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v21;
label11:
v22 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v19 != v22 goto label12;
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v23;
label12:
v24 = virtualinvoke v4.<java.lang.String: java.lang.String trim()>();
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: boolean _checkTextualNull(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v24);
if v25 == 0 goto label13;
v26 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v26;
label13:
v27 = <com.fasterxml.jackson.core.StreamReadFeature: com.fasterxml.jackson.core.StreamReadFeature USE_FAST_DOUBLE_PARSER>;
v28 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isEnabled(com.fasterxml.jackson.core.StreamReadFeature)>(v27);
v29 = staticinvoke <com.fasterxml.jackson.core.io.NumberInput: float parseFloat(java.lang.String,boolean)>(v24, v28);
v30 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v29);
label14:
return v30;
label15:
v31 := @caughtexception;
v32 = v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: java.lang.Class _valueClass>;
v33 = newarray (java.lang.Object)[0];
v34 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v32, v24, "not a valid `Float` value", v33);
return v34;
catch java.lang.IllegalArgumentException from label13 to label14 with label15;
}
static void <clinit>()
{
java.lang.Float v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer v0, v3;
v0 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;
v1 = <java.lang.Float: java.lang.Class TYPE>;
v2 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(0.0F);
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>(v1, v2);
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer primitiveInstance> = v0;
v3 = new com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: void <init>(java.lang.Class,java.lang.Float)>(class "Ljava/lang/Float;", null);
<com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer: com.fasterxml.jackson.databind.deser.std.NumberDeserializers$FloatDeserializer wrapperInstance> = v3;
return;
}
}