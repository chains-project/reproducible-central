final class com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser extends com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(java.lang.Class)>(class "[Z");
return;
}
protected void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser, com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.NullValueProvider v2;
java.lang.Boolean v3;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0, v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v2 := @parameter1: com.fasterxml.jackson.databind.deser.NullValueProvider;
v3 := @parameter2: java.lang.Boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v1, v2, v3);
return;
}
protected com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers withResolved(com.fasterxml.jackson.databind.deser.NullValueProvider, java.lang.Boolean)
{
com.fasterxml.jackson.databind.deser.NullValueProvider v1;
java.lang.Boolean v2;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0, v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v1 := @parameter0: com.fasterxml.jackson.databind.deser.NullValueProvider;
v2 := @parameter1: java.lang.Boolean;
v3 = new com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
specialinvoke v3.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: void <init>(com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser,com.fasterxml.jackson.databind.deser.NullValueProvider,java.lang.Boolean)>(v0, v1, v2);
return v3;
}
protected boolean[] _constructEmpty()
{
boolean[] v1;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v1 = newarray (boolean)[0];
return v1;
}
public boolean[] deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
int v17, v18, v20, v21, v8;
com.fasterxml.jackson.core.JsonToken v10, v11, v13, v14, v9;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0;
boolean v12, v3;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.NullValueProvider v15, v16;
com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder v6;
java.lang.Exception v19;
com.fasterxml.jackson.databind.util.ArrayBuilders v5;
java.lang.Object v23, v4, v7;
com.fasterxml.jackson.databind.JsonMappingException v22;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean isExpectedStartArrayToken()>();
if v3 != 0 goto label01;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: java.lang.Object handleNonArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
label01:
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ArrayBuilders getArrayBuilders()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.util.ArrayBuilders: com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder getBooleanBuilder()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder: java.lang.Object resetAndStart()>();
v8 = 0;
label02:
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v9 == v10 goto label10;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_TRUE>;
if v9 != v11 goto label03;
v12 = 1;
goto label07;
label03:
v13 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_FALSE>;
if v9 != v13 goto label04;
v12 = 0;
goto label07;
label04:
v14 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NULL>;
if v9 != v14 goto label06;
v15 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
if v15 == null goto label05;
v16 = v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: com.fasterxml.jackson.databind.deser.NullValueProvider _nuller>;
interfaceinvoke v16.<com.fasterxml.jackson.databind.deser.NullValueProvider: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
goto label02;
label05:
virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: void _verifyNullForPrimitive(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v12 = 0;
goto label07;
label06:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label07:
v17 = lengthof v7;
if v8 < v17 goto label08;
virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder: java.lang.Object appendCompletedChunk(java.lang.Object,int)>(v7, v8);
v8 = 0;
label08:
v18 = v8;
v8 = v8 + 1;
v7[v18] = v12;
goto label02;
label09:
v19 := @caughtexception;
v20 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder: int bufferedSize()>();
v21 = v20 + v8;
v22 = staticinvoke <com.fasterxml.jackson.databind.JsonMappingException: com.fasterxml.jackson.databind.JsonMappingException wrapWithPath(java.lang.Throwable,java.lang.Object,int)>(v19, v7, v21);
throw v22;
label10:
v23 = virtualinvoke v6.<com.fasterxml.jackson.databind.util.ArrayBuilders$BooleanBuilder: java.lang.Object completeAndClearBuffer(java.lang.Object,int)>(v7, v8);
return v23;
catch java.lang.Exception from label02 to label09 with label09;
}
protected boolean[] handleSingleElementUnwrapped(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
boolean[] v3;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = newarray (boolean)[1];
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser: boolean _parseBooleanPrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v3[0] = v4;
return v3;
}
protected boolean[] _concat(boolean[], boolean[])
{
boolean[] v1, v2, v6;
int v3, v4, v5;
com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.PrimitiveArrayDeserializers$BooleanDeser;
v1 := @parameter0: boolean[];
v2 := @parameter1: boolean[];
v3 = lengthof v1;
v4 = lengthof v2;
v5 = v3 + v4;
v6 = staticinvoke <java.util.Arrays: boolean[] copyOf(boolean[],int)>(v1, v5);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v2, 0, v6, v3, v4);
return v6;
}
}