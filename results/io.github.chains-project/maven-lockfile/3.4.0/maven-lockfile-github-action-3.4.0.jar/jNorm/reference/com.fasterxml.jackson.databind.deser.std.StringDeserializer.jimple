public class com.fasterxml.jackson.databind.deser.std.StringDeserializer extends com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.databind.deser.std.StringDeserializer instance;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StringDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdScalarDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/String;");
return;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StringDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Textual>;
return v1;
}
public boolean isCachable()
{
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StringDeserializer;
return 1;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v1;
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
return "";
}
public java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
java.lang.Object v8;
com.fasterxml.jackson.core.JsonToken v3, v6;
java.lang.String v5, v9;
boolean v4, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v5;
label1:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v6);
if v7 == 0 goto label2;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v8;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String _parseString(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.deser.NullValueProvider)>(v1, v2, v0);
return v9;
}
public java.lang.String deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.deser.std.StringDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.StringDeserializer: java.lang.String deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.StringDeserializer v0;
v0 = new com.fasterxml.jackson.databind.deser.std.StringDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StringDeserializer: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.StringDeserializer: com.fasterxml.jackson.databind.deser.std.StringDeserializer instance> = v0;
return;
}
}