public class com.fasterxml.jackson.databind.deser.std.UUIDDeserializer extends com.fasterxml.jackson.databind.deser.std.FromStringDeserializer
{
private static final long serialVersionUID;
static final int[] HEX_DIGITS;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: void <init>(java.lang.Class)>(class "Ljava/util/UUID;");
return;
}
public java.lang.Object getEmptyValue(com.fasterxml.jackson.databind.DeserializationContext)
{
com.fasterxml.jackson.databind.DeserializationContext v1;
java.util.UUID v2;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationContext;
v2 = new java.util.UUID;
specialinvoke v2.<java.util.UUID: void <init>(long,long)>(0L, 0L);
return v2;
}
protected java.util.UUID _deserialize(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
byte[] v6;
long v14, v16, v18, v19, v24, v26, v27, v28;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
int v13, v15, v17, v20, v21, v22, v23, v25, v3, v4;
java.lang.String v1;
com.fasterxml.jackson.databind.DeserializationContext v2;
char v10, v11, v12, v9;
java.util.UUID v29, v7, v8;
com.fasterxml.jackson.core.Base64Variant v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
if v3 == 36 goto label2;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
if v4 != 24 goto label1;
v5 = staticinvoke <com.fasterxml.jackson.core.Base64Variants: com.fasterxml.jackson.core.Base64Variant getDefaultVariant()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.core.Base64Variant: byte[] decode(java.lang.String)>(v1);
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext)>(v6, v2);
return v7;
label1:
v8 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _badFormat(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v8;
label2:
v9 = virtualinvoke v1.<java.lang.String: char charAt(int)>(8);
if v9 != 45 goto label3;
v10 = virtualinvoke v1.<java.lang.String: char charAt(int)>(13);
if v10 != 45 goto label3;
v11 = virtualinvoke v1.<java.lang.String: char charAt(int)>(18);
if v11 != 45 goto label3;
v12 = virtualinvoke v1.<java.lang.String: char charAt(int)>(23);
if v12 == 45 goto label4;
label3:
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _badFormat(java.lang.String,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label4:
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int intFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, 0, v2);
v14 = v13 << 32;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, 9, v2);
v16 = v15 << 16;
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, 14, v2);
v18 = v16 | v17;
v19 = v14 + v18;
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, 19, v2);
v21 = v20 << 16;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int shortFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, 24, v2);
v23 = v21 | v22;
v24 = v23 << 32;
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int intFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, 28, v2);
v26 = v25 << 32;
v27 = v26 >>> 32;
v28 = v24 | v27;
v29 = new java.util.UUID;
specialinvoke v29.<java.util.UUID: void <init>(long,long)>(v19, v28);
return v29;
}
protected java.util.UUID _deserializeEmbedded(java.lang.Object, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
java.lang.Object v1, v5;
java.util.UUID v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = v1 instanceof byte[];
if v3 == 0 goto label1;
v4 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.util.UUID _fromBytes(byte[],com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v4;
label1:
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.FromStringDeserializer: java.lang.Object _deserializeEmbedded(java.lang.Object,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
}
private java.util.UUID _badFormat(java.lang.String, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v4;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
java.lang.Class v3;
java.lang.Object v5;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Class handledType()>();
v4 = newarray (java.lang.Object)[0];
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleWeirdStringValue(java.lang.Class,java.lang.String,java.lang.String,java.lang.Object[])>(v3, v1, "UUID has to be represented by standard 36-char representation", v4);
return v5;
}
int intFromChars(java.lang.String, int, com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
int v10, v11, v12, v13, v14, v15, v16, v2, v4, v5, v6, v7, v8, v9;
java.lang.String v1;
com.fasterxml.jackson.databind.DeserializationContext v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.databind.DeserializationContext;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2, v3);
v5 = v4 << 24;
v6 = v2 + 2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v6, v3);
v8 = v7 << 16;
v9 = v5 + v8;
v10 = v2 + 4;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v10, v3);
v12 = v11 << 8;
v13 = v9 + v12;
v14 = v2 + 6;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v14, v3);
v16 = v13 + v15;
return v16;
}
int shortFromChars(java.lang.String, int, com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v3;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
int v2, v4, v5, v6, v7, v8;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.databind.DeserializationContext;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2, v3);
v5 = v4 << 8;
v6 = v2 + 2;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int byteFromChars(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v6, v3);
v8 = v5 + v7;
return v8;
}
int byteFromChars(java.lang.String, int, com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
int[] v10, v13, v7;
int v11, v12, v14, v15, v16, v17, v2, v5, v8, v9;
java.lang.String v1;
com.fasterxml.jackson.databind.DeserializationContext v3;
char v4, v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.databind.DeserializationContext;
v4 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v2);
v5 = v2 + 1;
v6 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v5);
if v4 > 127 goto label2;
if v6 > 127 goto label1;
v7 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v8 = v7[v4];
v9 = v8 << 4;
v10 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v11 = v10[v6];
v12 = v9 | v11;
if v12 < 0 goto label1;
return v12;
label1:
if v4 > 127 goto label2;
v13 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v14 = v13[v4];
if v14 >= 0 goto label3;
label2:
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _badChar(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext,char)>(v1, v2, v3, v4);
return v15;
label3:
v16 = v2 + 1;
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _badChar(java.lang.String,int,com.fasterxml.jackson.databind.DeserializationContext,char)>(v1, v16, v3, v6);
return v17;
}
int _badChar(java.lang.String, int, com.fasterxml.jackson.databind.DeserializationContext, char) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.DeserializationContext v3;
java.lang.Object[] v6;
char v4;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
java.lang.Character v7;
int v2;
java.lang.Class v5;
com.fasterxml.jackson.databind.JsonMappingException v10;
java.lang.String v1, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: com.fasterxml.jackson.databind.DeserializationContext;
v4 := @parameter3: char;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Class handledType()>();
v6 = newarray (java.lang.Object)[2];
v7 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(v4);
v6[0] = v7;
v8 = staticinvoke <java.lang.Integer: java.lang.String toHexString(int)>(v4);
v6[1] = v8;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Non-hex character \'%c\' (value 0x%s), not valid for UUID String", v6);
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JsonMappingException weirdStringException(java.lang.String,java.lang.Class,java.lang.String)>(v1, v5, v9);
throw v10;
}
private java.util.UUID _fromBytes(byte[], com.fasterxml.jackson.databind.DeserializationContext) throws com.fasterxml.jackson.databind.JsonMappingException
{
byte[] v1;
com.fasterxml.jackson.databind.exc.InvalidFormatException v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v4;
long v10, v11;
java.util.UUID v9;
com.fasterxml.jackson.databind.deser.std.UUIDDeserializer v0;
int v3, v5;
java.lang.Class v7;
java.lang.String v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UUIDDeserializer;
v1 := @parameter0: byte[];
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = lengthof v1;
if v3 == 16 goto label1;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.core.JsonParser getParser()>();
v5 = lengthof v1;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Can only construct UUIDs from byte[16]; got \u0001 bytes");
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: java.lang.Class handledType()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.exc.InvalidFormatException: com.fasterxml.jackson.databind.exc.InvalidFormatException 'from'(com.fasterxml.jackson.core.JsonParser,java.lang.String,java.lang.Object,java.lang.Class)>(v4, v6, v1, v7);
throw v8;
label1:
v9 = new java.util.UUID;
v10 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: long _long(byte[],int)>(v1, 0);
v11 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: long _long(byte[],int)>(v1, 8);
specialinvoke v9.<java.util.UUID: void <init>(long,long)>(v10, v11);
return v9;
}
private static long _long(byte[], int)
{
byte[] v0;
long v3, v6, v7, v8;
int v1, v2, v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _int(byte[],int)>(v0, v1);
v3 = v2 << 32;
v4 = v1 + 4;
v5 = staticinvoke <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int _int(byte[],int)>(v0, v4);
v6 = v5 << 32;
v7 = v6 >>> 32;
v8 = v3 | v7;
return v8;
}
private static int _int(byte[], int)
{
byte[] v0;
short v11, v16, v6;
byte v10, v15, v2, v5;
int v1, v12, v13, v14, v17, v3, v4, v7, v8, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = v0[v1];
v3 = v2 << 24;
v4 = v1 + 1;
v5 = v0[v4];
v6 = v5 & 255;
v7 = v6 << 16;
v8 = v3 | v7;
v9 = v1 + 2;
v10 = v0[v9];
v11 = v10 & 255;
v12 = v11 << 8;
v13 = v8 | v12;
v14 = v1 + 3;
v15 = v0[v14];
v16 = v15 & 255;
v17 = v13 | v16;
return v17;
}
static void <clinit>()
{
int[] v0, v1, v10, v4, v7;
int v11, v12, v2, v3, v5, v6, v8, v9;
v0 = newarray (int)[127];
<com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS> = v0;
v1 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v2 = (int) -1;
staticinvoke <java.util.Arrays: void fill(int[],int)>(v1, v2);
v3 = 0;
label1:
if v3 >= 10 goto label2;
v4 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v5 = 48 + v3;
v4[v5] = v3;
v3 = v3 + 1;
goto label1;
label2:
v6 = 0;
label3:
if v6 >= 6 goto label4;
v7 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v8 = 97 + v6;
v9 = 10 + v6;
v7[v8] = v9;
v10 = <com.fasterxml.jackson.databind.deser.std.UUIDDeserializer: int[] HEX_DIGITS>;
v11 = 65 + v6;
v12 = 10 + v6;
v10[v11] = v12;
v6 = v6 + 1;
goto label3;
label4:
return;
}
}