public class com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla extends com.fasterxml.jackson.databind.deser.std.StdDeserializer
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std;
protected final boolean _nonMerging;
public void <init>()
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void <init>(boolean)>(0);
return;
}
protected void <init>(boolean)
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.StdDeserializer: void <init>(java.lang.Class)>(class "Ljava/lang/Object;");
v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: boolean _nonMerging> = v1;
return;
}
public static com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla instance(boolean)
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v1, v2;
boolean v0;
v0 := @parameter0: boolean;
if v0 == 0 goto label1;
v1 = new com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
specialinvoke v1.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void <init>(boolean)>(1);
return v1;
label1:
v2 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std>;
return v2;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
com.fasterxml.jackson.databind.type.LogicalType v1;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Untyped>;
return v1;
}
public java.lang.Boolean supportsUpdate(com.fasterxml.jackson.databind.DeserializationConfig)
{
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Boolean v3;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 = v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: boolean _nonMerging>;
if v2 == 0 goto label1;
v3 = <java.lang.Boolean: java.lang.Boolean FALSE>;
goto label2;
label1:
v3 = null;
label2:
return v3;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationFeature v10, v14, v24;
java.math.BigDecimal v26;
boolean v11, v15, v21, v25;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object[] v12, v16;
java.util.ArrayList v13;
java.util.LinkedHashMap v30, v6;
int v20, v3;
java.lang.Boolean v28, v29;
com.fasterxml.jackson.core.JsonToken v4, v5, v8, v9;
java.lang.String v19;
java.lang.Number v23, v27;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v17, v18, v22, v31, v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v3)
{
case 1: goto label01;
case 2: goto label15;
case 3: goto label03;
case 4: goto label17;
case 5: goto label02;
case 6: goto label08;
case 7: goto label09;
case 8: goto label11;
case 9: goto label13;
case 10: goto label14;
case 11: goto label16;
case 12: goto label07;
default: goto label17;
};
label01:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v4 != v5 goto label02;
v6 = new java.util.LinkedHashMap;
specialinvoke v6.<java.util.LinkedHashMap: void <init>(int)>(2);
return v6;
label02:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v7;
label03:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v8 != v9 goto label05;
v10 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY>;
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v10);
if v11 == 0 goto label04;
v12 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer: java.lang.Object[] NO_OBJECTS>;
return v12;
label04:
v13 = new java.util.ArrayList;
specialinvoke v13.<java.util.ArrayList: void <init>(int)>(2);
return v13;
label05:
v14 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_JAVA_ARRAY_FOR_JSON_ARRAY>;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v14);
if v15 == 0 goto label06;
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v16;
label06:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v17;
label07:
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v18;
label08:
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v19;
label09:
v20 = <com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: int F_MASK_INT_COERCIONS>;
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean hasSomeOfFeatures(int)>(v20);
if v21 == 0 goto label10;
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object _coerceIntegral(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v22;
label10:
v23 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v23;
label11:
v24 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v25 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v24);
if v25 == 0 goto label12;
v26 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
return v26;
label12:
v27 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v27;
label13:
v28 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v28;
label14:
v29 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v29;
label15:
v30 = new java.util.LinkedHashMap;
specialinvoke v30.<java.util.LinkedHashMap: void <init>(int)>(2);
return v30;
label16:
return null;
label17:
v31 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Ljava/lang/Object;", v1);
return v31;
}
public java.lang.Object deserializeWithType(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, com.fasterxml.jackson.databind.jsontype.TypeDeserializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.TypeDeserializer v3;
com.fasterxml.jackson.databind.DeserializationFeature v11, v7;
java.math.BigDecimal v13;
int v4;
java.lang.Boolean v15, v16;
java.math.BigInteger v9;
java.lang.String v6;
java.lang.Number v10, v14;
boolean v12, v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object v17, v18, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeDeserializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v4)
{
case 1: goto label01;
case 2: goto label11;
case 3: goto label01;
case 4: goto label11;
case 5: goto label01;
case 6: goto label02;
case 7: goto label03;
case 8: goto label05;
case 9: goto label07;
case 10: goto label08;
case 11: goto label10;
case 12: goto label09;
default: goto label11;
};
label01:
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeDeserializer: java.lang.Object deserializeTypedFromAny(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label02:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
return v6;
label03:
v7 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_INTEGER_FOR_INTS>;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v7);
if v8 == 0 goto label04;
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigInteger getBigIntegerValue()>();
return v9;
label04:
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v10;
label05:
v11 = <com.fasterxml.jackson.databind.DeserializationFeature: com.fasterxml.jackson.databind.DeserializationFeature USE_BIG_DECIMAL_FOR_FLOATS>;
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.DeserializationFeature)>(v11);
if v12 == 0 goto label06;
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.math.BigDecimal getDecimalValue()>();
return v13;
label06:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Number getNumberValue()>();
return v14;
label07:
v15 = <java.lang.Boolean: java.lang.Boolean TRUE>;
return v15;
label08:
v16 = <java.lang.Boolean: java.lang.Boolean FALSE>;
return v16;
label09:
v17 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.Object getEmbeddedObject()>();
return v17;
label10:
return null;
label11:
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(java.lang.Class,com.fasterxml.jackson.core.JsonParser)>(class "Ljava/lang/Object;", v1);
return v18;
}
public java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.lang.Object) throws java.io.IOException
{
int v6;
com.fasterxml.jackson.core.JsonToken v14, v15, v18, v19, v7, v8;
java.lang.String v10, v13;
boolean v16, v4, v9;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object v11, v12, v17, v20, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: boolean _nonMerging>;
if v4 == 0 goto label01;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v5;
label01:
v6 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v6)
{
case 1: goto label03;
case 2: goto label02;
case 3: goto label09;
case 4: goto label02;
case 5: goto label04;
default: goto label12;
};
label02:
return v3;
label03:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v8 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v7 != v8 goto label04;
return v3;
label04:
v9 = v3 instanceof java.util.Map;
if v9 == 0 goto label12;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
label05:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v11 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v10);
if v11 == null goto label06;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.Object)>(v1, v2, v11);
goto label07;
label06:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
label07:
if v12 == v11 goto label08;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v12);
label08:
v13 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
v10 = v13;
if v13 != null goto label05;
return v3;
label09:
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v14 != v15 goto label10;
return v3;
label10:
v16 = v3 instanceof java.util.Collection;
if v16 == 0 goto label12;
label11:
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
interfaceinvoke v3.<java.util.Collection: boolean add(java.lang.Object)>(v17);
v18 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v19 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v18 != v19 goto label11;
return v3;
label12:
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v20;
}
protected java.lang.Object mapArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Object[] v8;
java.util.ArrayList v16, v6;
int v10, v12, v13, v9;
com.fasterxml.jackson.core.JsonToken v14, v15, v4, v5;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object v11, v3;
com.fasterxml.jackson.databind.util.ObjectBuffer v7;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v4 != v5 goto label1;
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>(int)>(2);
virtualinvoke v6.<java.util.ArrayList: boolean add(java.lang.Object)>(v3);
return v6;
label1:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();
v9 = 1;
v8[0] = v3;
v10 = 1;
label2:
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v10 = v10 + 1;
v12 = lengthof v8;
if v9 < v12 goto label3;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>(v8);
v9 = 0;
label3:
v13 = v9;
v9 = v9 + 1;
v8[v13] = v11;
v14 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v15 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v14 != v15 goto label2;
v16 = new java.util.ArrayList;
specialinvoke v16.<java.util.ArrayList: void <init>(int)>(v10);
virtualinvoke v7.<com.fasterxml.jackson.databind.util.ObjectBuffer: void completeAndClearBuffer(java.lang.Object[],int,java.util.List)>(v8, v9, v16);
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)>(v7);
return v16;
}
protected java.lang.Object[] mapArrayToArray(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
java.lang.Object[] v11, v4;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
int v5, v7, v8;
java.lang.Object v6;
com.fasterxml.jackson.core.JsonToken v10, v9;
com.fasterxml.jackson.databind.util.ObjectBuffer v3;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.ObjectBuffer leaseObjectBuffer()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] resetAndStart()>();
v5 = 0;
label1:
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v7 = lengthof v4;
if v5 < v7 goto label2;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] appendCompletedChunk(java.lang.Object[])>(v4);
v5 = 0;
label2:
v8 = v5;
v5 = v5 + 1;
v4[v8] = v6;
v9 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v10 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_ARRAY>;
if v9 != v10 goto label1;
v11 = virtualinvoke v3.<com.fasterxml.jackson.databind.util.ObjectBuffer: java.lang.Object[] completeAndClearBuffer(java.lang.Object[],int)>(v4, v5);
virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: void returnObjectBuffer(com.fasterxml.jackson.databind.util.ObjectBuffer)>(v3);
return v11;
}
protected java.lang.Object mapObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.LinkedHashMap v6, v7;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object v11, v4, v8, v9;
java.lang.String v10, v12, v3, v5;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
if v5 != null goto label1;
v6 = new java.util.LinkedHashMap;
specialinvoke v6.<java.util.LinkedHashMap: void <init>(int)>(2);
virtualinvoke v6.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
return v6;
label1:
v7 = new java.util.LinkedHashMap;
specialinvoke v7.<java.util.LinkedHashMap: void <init>()>();
virtualinvoke v7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
label2:
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v9 = virtualinvoke v7.<java.util.LinkedHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v8);
if v9 == null goto label3;
v10 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.util.Map,java.lang.String,java.lang.Object,java.lang.Object,java.lang.String)>(v1, v2, v7, v5, v9, v8, v10);
return v11;
label3:
v12 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
v5 = v12;
if v12 != null goto label2;
return v7;
}
protected java.lang.Object _mapObjectWithDups(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext, java.util.Map, java.lang.String, java.lang.Object, java.lang.Object, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.core.StreamReadCapability v8;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.util.Map v3;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object v10, v11, v5, v6;
java.lang.String v4, v7;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.Object;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: java.lang.String;
v8 = <com.fasterxml.jackson.core.StreamReadCapability: com.fasterxml.jackson.core.StreamReadCapability DUPLICATE_PROPERTIES>;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.core.StreamReadCapability)>(v8);
if v9 == 0 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object)>(v3, v4, v5, v6);
label1:
if v7 == null goto label3;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: java.lang.Object deserialize(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
v11 = interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v10);
if v11 == null goto label2;
if v9 == 0 goto label2;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void _squashDups(java.util.Map,java.lang.String,java.lang.Object,java.lang.Object)>(v3, v7, v11, v10);
label2:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String nextFieldName()>();
goto label1;
label3:
return v3;
}
private void _squashDups(java.util.Map, java.lang.String, java.lang.Object, java.lang.Object)
{
java.util.Map v1;
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
java.lang.Object v3, v4;
java.lang.String v2;
boolean v5;
java.util.ArrayList v6;
v0 := @this: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 = v3 instanceof java.util.List;
if v5 == 0 goto label1;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
goto label2;
label1:
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>()>();
virtualinvoke v6.<java.util.ArrayList: boolean add(java.lang.Object)>(v3);
virtualinvoke v6.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v6);
label2:
return;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla v0;
v0 = new com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla;
specialinvoke v0.<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: void <init>()>();
<com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla: com.fasterxml.jackson.databind.deser.std.UntypedObjectDeserializer$Vanilla std> = v0;
return;
}
}