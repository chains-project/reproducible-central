public class com.fasterxml.jackson.databind.ext.NioPathSerializer extends com.fasterxml.jackson.databind.ser.std.StdScalarSerializer
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.ext.NioPathSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ext.NioPathSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdScalarSerializer: void <init>(java.lang.Class)>(class "Ljava/nio/file/Path;");
return;
}
public void serialize(java.nio.file.Path, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.ext.NioPathSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v5;
java.net.URI v4;
java.nio.file.Path v1;
v0 := @this: com.fasterxml.jackson.databind.ext.NioPathSerializer;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = interfaceinvoke v1.<java.nio.file.Path: java.net.URI toUri()>();
v5 = virtualinvoke v4.<java.net.URI: java.lang.String toString()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v5);
return;
}
public void serializeWithType(java.nio.file.Path, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
com.fasterxml.jackson.databind.ext.NioPathSerializer v0;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.nio.file.Path v1;
v0 := @this: com.fasterxml.jackson.databind.ext.NioPathSerializer;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,java.lang.Class,com.fasterxml.jackson.core.JsonToken)>(v1, class "Ljava/nio/file/Path;", v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
virtualinvoke v0.<com.fasterxml.jackson.databind.ext.NioPathSerializer: void serialize(java.nio.file.Path,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
}