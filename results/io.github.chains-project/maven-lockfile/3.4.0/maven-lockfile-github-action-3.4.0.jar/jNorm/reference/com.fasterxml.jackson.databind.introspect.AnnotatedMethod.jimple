public final class com.fasterxml.jackson.databind.introspect.AnnotatedMethod extends com.fasterxml.jackson.databind.introspect.AnnotatedWithParams implements java.io.Serializable
{
private static final long serialVersionUID;
protected final transient java.lang.reflect.Method _method;
protected java.lang.Class[] _paramClasses;
protected com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization;
public void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, java.lang.reflect.Method, com.fasterxml.jackson.databind.introspect.AnnotationMap, com.fasterxml.jackson.databind.introspect.AnnotationMap[])
{
com.fasterxml.jackson.databind.introspect.AnnotationMap v3;
com.fasterxml.jackson.databind.introspect.AnnotationMap[] v4;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.IllegalArgumentException v5;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter1: java.lang.reflect.Method;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotationMap;
v4 := @parameter3: com.fasterxml.jackson.databind.introspect.AnnotationMap[];
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedWithParams: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>(v1, v3, v4);
if v2 != null goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Cannot construct AnnotatedMethod with null Method");
throw v5;
label1:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method> = v2;
return;
}
protected void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization)
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization v1;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedWithParams: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>(null, null, null);
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method> = null;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization> = v1;
return;
}
public com.fasterxml.jackson.databind.introspect.AnnotatedMethod withAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationMap)
{
com.fasterxml.jackson.databind.introspect.AnnotationMap v1;
com.fasterxml.jackson.databind.introspect.AnnotationMap[] v5;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0, v2;
java.lang.reflect.Method v4;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotationMap;
v2 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext>;
v4 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotationMap[] _paramAnnotations>;
specialinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>(v3, v4, v1, v5);
return v2;
}
public java.lang.reflect.Method getAnnotated()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
return v1;
}
public int getModifiers()
{
int v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: int getModifiers()>();
return v2;
}
public java.lang.String getName()
{
java.lang.String v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.String getName()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType getType()
{
java.lang.reflect.Type v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext>;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
v4 = interfaceinvoke v1.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext: com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type)>(v3);
return v4;
}
public java.lang.Class getRawType()
{
java.lang.Class v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();
return v2;
}
public final java.lang.Object call() throws java.lang.Exception
{
java.lang.Object[] v2;
java.lang.Object v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = newarray (java.lang.Object)[0];
v3 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, v2);
return v3;
}
public final java.lang.Object call(java.lang.Object[]) throws java.lang.Exception
{
java.lang.Object[] v1;
java.lang.Object v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, v1);
return v3;
}
public final java.lang.Object call1(java.lang.Object) throws java.lang.Exception
{
java.lang.Object[] v3;
java.lang.Object v1, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(null, v3);
return v4;
}
public final java.lang.Object callOn(java.lang.Object) throws java.lang.Exception
{
java.lang.Object[] v3;
java.lang.Object v1, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = (java.lang.Object[]) null;
v4 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v3);
return v4;
}
public final transient java.lang.Object callOnWith(java.lang.Object, java.lang.Object[]) throws java.lang.Exception
{
java.lang.Object[] v2;
java.lang.Object v1, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v4 = virtualinvoke v3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v2);
return v4;
}
public int getParameterCount()
{
int v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: int getParameterCount()>();
return v2;
}
public java.lang.Class getRawParameterType(int)
{
int v1, v3;
java.lang.Class[] v2;
java.lang.Class v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] getRawParameterTypes()>();
v3 = lengthof v2;
if v1 < v3 goto label1;
v4 = null;
goto label2;
label1:
v4 = v2[v1];
label2:
return v4;
}
public com.fasterxml.jackson.databind.JavaType getParameterType(int)
{
java.lang.reflect.Type v6;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v5;
int v1, v4;
java.lang.reflect.Type[] v3;
com.fasterxml.jackson.databind.JavaType v7;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
v4 = lengthof v3;
if v1 < v4 goto label1;
return null;
label1:
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.TypeResolutionContext _typeContext>;
v6 = v3[v1];
v7 = interfaceinvoke v5.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext: com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type)>(v6);
return v7;
}
public java.lang.reflect.Type getGenericParameterType(int)
{
java.lang.reflect.Type v4;
int v1, v3;
java.lang.reflect.Type[] v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Type[] getGenericParameterTypes()>();
v3 = lengthof v2;
if v1 < v3 goto label1;
return null;
label1:
v4 = v2[v1];
return v4;
}
public java.lang.Class getDeclaringClass()
{
java.lang.Class v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getDeclaringClass()>();
return v2;
}
public java.lang.reflect.Method getMember()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
return v1;
}
public void setValue(java.lang.Object, java.lang.Object) throws java.lang.IllegalArgumentException
{
java.lang.Object[] v4;
java.lang.ReflectiveOperationException v5;
java.lang.IllegalArgumentException v6;
java.lang.Object v1, v2;
java.lang.String v7, v8, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
label1:
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v4 = newarray (java.lang.Object)[1];
v4[0] = v2;
virtualinvoke v3.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v4);
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v5);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to setValue() with method \u0001: \u0001");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v9, v5);
throw v6;
label4:
return;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
}
public java.lang.Object getValue(java.lang.Object) throws java.lang.IllegalArgumentException
{
java.lang.Object[] v3;
java.lang.ReflectiveOperationException v5;
java.lang.IllegalArgumentException v6;
java.lang.Object v1, v4;
java.lang.String v7, v8, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = (java.lang.Object[]) null;
v4 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v1, v3);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalArgumentException;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String exceptionMessage(java.lang.Throwable)>(v5);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v7, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to getValue() with method \u0001: \u0001");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String,java.lang.Throwable)>(v9, v5);
throw v6;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label3;
}
public java.lang.String getFullName()
{
java.lang.Object[] v7;
java.lang.Integer v10;
int v2, v9;
java.lang.Class v4;
java.lang.String v1, v11, v3, v5, v6, v8;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedWithParams: java.lang.String getFullName()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int getParameterCount()>();
lookupswitch(v2)
{
case 0: goto label1;
case 1: goto label2;
default: goto label3;
};
label1:
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001()");
return v3;
label2:
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawParameterType(int)>(0);
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(\u0001)");
return v6;
label3:
v7 = newarray (java.lang.Object)[2];
v8 = specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedWithParams: java.lang.String getFullName()>();
v7[0] = v8;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: int getParameterCount()>();
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v9);
v7[1] = v10;
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s(%d params)", v7);
return v11;
}
public java.lang.Class[] getRawParameterTypes()
{
java.lang.Class[] v1, v3, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] _paramClasses>;
if v1 != null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v3 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Class[] getParameterTypes()>();
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] _paramClasses> = v3;
label1:
v4 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class[] _paramClasses>;
return v4;
}
public java.lang.reflect.Type[] getGenericParameterTypes()
{
java.lang.reflect.Type[] v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.reflect.Type[] getGenericParameterTypes()>();
return v2;
}
public java.lang.Class getRawReturnType()
{
java.lang.Class v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Class getReturnType()>();
return v2;
}
public boolean hasReturnType()
{
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.Class getRawReturnType()>();
v2 = <java.lang.Void: java.lang.Class TYPE>;
if v1 == v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public java.lang.String toString()
{
java.lang.String v1, v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.String getFullName()>();
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("[method \u0001]");
return v2;
}
public int hashCode()
{
int v3;
java.lang.String v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v1;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v2 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.String getName()>();
v3 = virtualinvoke v2.<java.lang.String: int hashCode()>();
return v3;
}
public boolean equals(java.lang.Object)
{
java.lang.Class v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0;
java.lang.reflect.Method v4, v5, v7, v8;
boolean v3, v6, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean hasClass(java.lang.Object,java.lang.Class)>(v1, v2);
if v3 != 0 goto label2;
return 0;
label2:
v4 = v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
if v4 != null goto label5;
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
if v5 != null goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
label5:
v7 = v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v8 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
v9 = virtualinvoke v7.<java.lang.reflect.Method: boolean equals(java.lang.Object)>(v8);
return v9;
}
java.lang.Object writeReplace()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization v2;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0, v1;
java.lang.reflect.Method v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v2 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization;
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: java.lang.reflect.Method _method>;
specialinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization: void <init>(java.lang.reflect.Method)>(v3);
specialinvoke v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization)>(v2);
return v1;
}
java.lang.Object readResolve()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization v1, v12, v3, v5;
java.lang.String v13, v14, v15, v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v0, v9;
java.lang.reflect.Method v7;
boolean v8;
java.lang.Class[] v6;
java.lang.IllegalArgumentException v11;
java.lang.Exception v10;
java.lang.Class v2;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
v1 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization>;
v2 = v1.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization: java.lang.Class clazz>;
label1:
v3 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization>;
v4 = v3.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization: java.lang.String name>;
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization>;
v6 = v5.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization: java.lang.Class[] args>;
v7 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(v4, v6);
v8 = virtualinvoke v7.<java.lang.reflect.Method: boolean isAccessible()>();
if v8 != 0 goto label2;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>(v7, 0);
label2:
v9 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
specialinvoke v9.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationMap,com.fasterxml.jackson.databind.introspect.AnnotationMap[])>(null, v7, null, null);
label3:
return v9;
label4:
v10 := @caughtexception;
v11 = new java.lang.IllegalArgumentException;
v12 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod: com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization _serialization>;
v13 = v12.<com.fasterxml.jackson.databind.introspect.AnnotatedMethod$Serialization: java.lang.String name>;
v14 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v13, v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not find method \'\u0001\' from Class \'\u0001");
specialinvoke v11.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v11;
catch java.lang.Exception from label1 to label3 with label4;
}
}