public class com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector extends com.fasterxml.jackson.databind.introspect.CollectorBase
{
private final com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver;
private final boolean _collectAnnotations;
void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver, boolean)
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v1;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v2, v4;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v3 := @parameter2: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.CollectorBase: void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector)>(v1);
if v1 != null goto label1;
v4 = null;
goto label2;
label1:
v4 = v2;
label2:
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver> = v4;
v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: boolean _collectAnnotations> = v3;
return;
}
public static com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collectMethods(com.fasterxml.jackson.databind.AnnotationIntrospector, com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.JavaType, java.util.List, java.lang.Class, boolean)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v0;
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap v9;
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector v8;
java.util.List v5;
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
java.lang.Class v6;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v2;
boolean v7;
v0 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v1 := @parameter1: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver;
v3 := @parameter3: com.fasterxml.jackson.databind.type.TypeFactory;
v4 := @parameter4: com.fasterxml.jackson.databind.JavaType;
v5 := @parameter5: java.util.List;
v6 := @parameter6: java.lang.Class;
v7 := @parameter7: boolean;
v8 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector;
specialinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: void <init>(com.fasterxml.jackson.databind.AnnotationIntrospector,com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver,boolean)>(v0, v2, v7);
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collect(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.util.List,java.lang.Class)>(v3, v1, v4, v5, v6);
return v9;
}
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap collect(com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.JavaType, java.util.List, java.lang.Class)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v23;
com.fasterxml.jackson.databind.type.TypeFactory v1;
java.lang.reflect.Method v37;
boolean v18, v24, v27, v32, v43, v49, v9;
java.util.Set v25, v47;
com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap v44, v54;
java.lang.Exception v42;
java.util.List v4;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v2;
com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver v11, v13, v19, v20;
java.lang.'annotation'.Annotation[] v40;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic v15;
java.util.LinkedHashMap v45, v6;
com.fasterxml.jackson.databind.type.TypeBindings v16;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v39, v41;
int v33, v46;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v30, v31, v35;
com.fasterxml.jackson.databind.introspect.AnnotatedMethod v52;
java.util.Iterator v26, v48, v8;
java.lang.Class[] v36;
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector v0;
java.lang.Class v12, v14, v17, v21, v22, v34, v5, v7;
java.lang.Object v10, v28, v29, v38, v50, v51, v53;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeFactory;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: java.util.List;
v5 := @parameter4: java.lang.Class;
v6 = new java.util.LinkedHashMap;
specialinvoke v6.<java.util.LinkedHashMap: void <init>()>();
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class)>(v2, v7, v6, v5);
v8 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label01:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label04;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
v11 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
if v11 != null goto label02;
v12 = null;
goto label03;
label02:
v13 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v14 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v12 = interfaceinvoke v13.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(v14);
label03:
v15 = new com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic;
v16 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
specialinvoke v15.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings)>(v1, v16);
v17 = virtualinvoke v10.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class)>(v15, v17, v6, v12);
goto label01;
label04:
v18 = 0;
v19 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
if v19 == null goto label05;
v20 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver _mixInResolver>;
v21 = interfaceinvoke v20.<com.fasterxml.jackson.databind.introspect.ClassIntrospector$MixInResolver: java.lang.Class findMixInClassFor(java.lang.Class)>(class "Ljava/lang/Object;");
if v21 == null goto label05;
v22 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class)>(v2, v22, v6, v21);
v18 = 1;
label05:
if v18 == 0 goto label10;
v23 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
if v23 == null goto label10;
v24 = interfaceinvoke v6.<java.util.Map: boolean isEmpty()>();
if v24 != 0 goto label10;
v25 = interfaceinvoke v6.<java.util.Map: java.util.Set entrySet()>();
v26 = interfaceinvoke v25.<java.util.Set: java.util.Iterator iterator()>();
label06:
v27 = interfaceinvoke v26.<java.util.Iterator: boolean hasNext()>();
if v27 == 0 goto label10;
v28 = interfaceinvoke v26.<java.util.Iterator: java.lang.Object next()>();
v29 = interfaceinvoke v28.<java.util.Map$Entry: java.lang.Object getKey()>();
v30 = "hashCode";
v31 = virtualinvoke v29.<com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String getName()>();
v32 = virtualinvoke v30.<java.lang.String: boolean equals(java.lang.Object)>(v31);
if v32 == 0 goto label06;
v33 = virtualinvoke v29.<com.fasterxml.jackson.databind.introspect.MemberKey: int argCount()>();
if 0 != v33 goto label06;
label07:
v34 = class "Ljava/lang/Object;";
v35 = virtualinvoke v29.<com.fasterxml.jackson.databind.introspect.MemberKey: java.lang.String getName()>();
v36 = newarray (java.lang.Class)[0];
v37 = virtualinvoke v34.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>(v35, v36);
if v37 == null goto label06;
v38 = interfaceinvoke v28.<java.util.Map$Entry: java.lang.Object getValue()>();
v39 = v38.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations>;
v40 = virtualinvoke v37.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
v41 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v39, v40);
v38.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations> = v41;
v38.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: java.lang.reflect.Method method> = v37;
label08:
goto label06;
label09:
v42 := @caughtexception;
goto label06;
label10:
v43 = interfaceinvoke v6.<java.util.Map: boolean isEmpty()>();
if v43 == 0 goto label11;
v44 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;
specialinvoke v44.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void <init>()>();
return v44;
label11:
v45 = new java.util.LinkedHashMap;
v46 = interfaceinvoke v6.<java.util.Map: int size()>();
specialinvoke v45.<java.util.LinkedHashMap: void <init>(int)>(v46);
v47 = interfaceinvoke v6.<java.util.Map: java.util.Set entrySet()>();
v48 = interfaceinvoke v47.<java.util.Set: java.util.Iterator iterator()>();
label12:
v49 = interfaceinvoke v48.<java.util.Iterator: boolean hasNext()>();
if v49 == 0 goto label13;
v50 = interfaceinvoke v48.<java.util.Iterator: java.lang.Object next()>();
v51 = interfaceinvoke v50.<java.util.Map$Entry: java.lang.Object getValue()>();
v52 = virtualinvoke v51.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMethod build()>();
if v52 == null goto label12;
v53 = interfaceinvoke v50.<java.util.Map$Entry: java.lang.Object getKey()>();
interfaceinvoke v45.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v53, v52);
goto label12;
label13:
v54 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap;
specialinvoke v54.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodMap: void <init>(java.util.Map)>(v45);
return v54;
catch java.lang.Exception from label07 to label08 with label09;
}
private void _addMemberMethods(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, java.lang.Class, java.util.Map, java.lang.Class)
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder v15;
com.fasterxml.jackson.databind.AnnotationIntrospector v12;
java.lang.'annotation'.Annotation[] v14, v18;
java.lang.reflect.Method[] v5;
java.util.Map v3;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v13, v17, v19;
int v21, v23, v6, v7;
java.lang.reflect.Method v20, v8;
boolean v16, v22, v24, v9;
com.fasterxml.jackson.databind.introspect.MemberKey v10;
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector v0;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
java.lang.Class v2, v4;
java.lang.Object v11;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.lang.Class;
if v4 == null goto label01;
virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.Class,java.util.Map,java.lang.Class)>(v1, v2, v3, v4);
label01:
if v2 != null goto label02;
return;
label02:
v5 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.reflect.Method[] getClassMethods(java.lang.Class)>(v2);
v6 = lengthof v5;
v7 = 0;
label03:
if v7 >= v6 goto label10;
v8 = v5[v7];
v9 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: boolean _isIncludableMemberMethod(java.lang.reflect.Method)>(v8);
if v9 == 0 goto label09;
v10 = new com.fasterxml.jackson.databind.introspect.MemberKey;
specialinvoke v10.<com.fasterxml.jackson.databind.introspect.MemberKey: void <init>(java.lang.reflect.Method)>(v8);
v11 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v10);
if v11 != null goto label06;
v12 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
if v12 != null goto label04;
v13 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotationCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector emptyCollector()>();
goto label05;
label04:
v14 = virtualinvoke v8.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.'annotation'.Annotation[])>(v14);
label05:
v15 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder;
specialinvoke v15.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationCollector)>(v1, v8, v13);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v15);
goto label09;
label06:
v16 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: boolean _collectAnnotations>;
if v16 == 0 goto label07;
v17 = v11.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations>;
v18 = virtualinvoke v8.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v17, v18);
v11.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations> = v19;
label07:
v20 = v11.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: java.lang.reflect.Method method>;
if v20 != null goto label08;
v11.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: java.lang.reflect.Method method> = v8;
goto label09;
label08:
v21 = virtualinvoke v20.<java.lang.reflect.Method: int getModifiers()>();
v22 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(v21);
if v22 == 0 goto label09;
v23 = virtualinvoke v8.<java.lang.reflect.Method: int getModifiers()>();
v24 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(v23);
if v24 != 0 goto label09;
v11.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: java.lang.reflect.Method method> = v8;
v11.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.TypeResolutionContext typeContext> = v1;
label09:
v7 = v7 + 1;
goto label03;
label10:
return;
}
protected void _addMethodMixIns(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, java.lang.Class, java.util.Map, java.lang.Class)
{
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder v18;
com.fasterxml.jackson.databind.AnnotationIntrospector v5;
java.lang.'annotation'.Annotation[] v17;
java.lang.reflect.Method[] v10;
java.util.Map v3;
com.fasterxml.jackson.databind.introspect.AnnotationCollector v19, v20, v21;
int v11, v12;
java.lang.reflect.Method v13;
boolean v14, v8;
java.util.Iterator v7;
com.fasterxml.jackson.databind.introspect.MemberKey v15;
com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector v0;
java.util.List v6;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v1;
java.lang.Class v2, v4;
java.lang.Object v16, v9;
v0 := @this: com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.lang.Class;
v5 = v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.AnnotationIntrospector _intr>;
if v5 != null goto label1;
return;
label1:
v6 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.util.List findRawSuperTypes(java.lang.Class,java.lang.Class,boolean)>(v4, v2, 1);
v7 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
label2:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label6;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v9.<java.lang.Class: java.lang.reflect.Method[] getDeclaredMethods()>();
v11 = lengthof v10;
v12 = 0;
label3:
if v12 >= v11 goto label2;
v13 = v10[v12];
v14 = staticinvoke <com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: boolean _isIncludableMemberMethod(java.lang.reflect.Method)>(v13);
if v14 == 0 goto label5;
v15 = new com.fasterxml.jackson.databind.introspect.MemberKey;
specialinvoke v15.<com.fasterxml.jackson.databind.introspect.MemberKey: void <init>(java.lang.reflect.Method)>(v13);
v16 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v15);
v17 = virtualinvoke v13.<java.lang.reflect.Method: java.lang.'annotation'.Annotation[] getDeclaredAnnotations()>();
if v16 != null goto label4;
v18 = new com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder;
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectAnnotations(java.lang.'annotation'.Annotation[])>(v17);
specialinvoke v18.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: void <init>(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,java.lang.reflect.Method,com.fasterxml.jackson.databind.introspect.AnnotationCollector)>(v1, null, v19);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v18);
goto label5;
label4:
v20 = v16.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations>;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector: com.fasterxml.jackson.databind.introspect.AnnotationCollector collectDefaultAnnotations(com.fasterxml.jackson.databind.introspect.AnnotationCollector,java.lang.'annotation'.Annotation[])>(v20, v17);
v16.<com.fasterxml.jackson.databind.introspect.AnnotatedMethodCollector$MethodBuilder: com.fasterxml.jackson.databind.introspect.AnnotationCollector annotations> = v21;
label5:
v12 = v12 + 1;
goto label3;
label6:
return;
}
private static boolean _isIncludableMemberMethod(java.lang.reflect.Method)
{
int v1, v5;
java.lang.reflect.Method v0;
boolean v2, v3, v4, v6;
v0 := @parameter0: java.lang.reflect.Method;
v1 = virtualinvoke v0.<java.lang.reflect.Method: int getModifiers()>();
v2 = staticinvoke <java.lang.reflect.Modifier: boolean isStatic(int)>(v1);
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<java.lang.reflect.Method: boolean isSynthetic()>();
if v3 != 0 goto label1;
v4 = virtualinvoke v0.<java.lang.reflect.Method: boolean isBridge()>();
if v4 == 0 goto label2;
label1:
return 0;
label2:
v5 = virtualinvoke v0.<java.lang.reflect.Method: int getParameterCount()>();
if v5 > 2 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
}
}