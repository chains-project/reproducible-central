final class com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver extends java.lang.Object
{
void <init>()
{
com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver v0;
v0 := @this: com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static com.fasterxml.jackson.databind.introspect.TypeResolutionContext narrowMethodTypeParameters(java.lang.reflect.Method, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.introspect.TypeResolutionContext)
{
com.fasterxml.jackson.databind.type.TypeFactory v2;
com.fasterxml.jackson.databind.type.TypeBindings v4;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v3, v5;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic v6;
java.lang.reflect.Method v0;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: com.fasterxml.jackson.databind.type.TypeFactory;
v3 := @parameter3: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v4 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: com.fasterxml.jackson.databind.type.TypeBindings bindMethodTypeParameters(java.lang.reflect.Method,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.introspect.TypeResolutionContext)>(v0, v1, v3);
if v4 != null goto label1;
v5 = v3;
goto label2;
label1:
v6 = new com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic;
v5 = v6;
specialinvoke v6.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext$Basic: void <init>(com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.type.TypeBindings)>(v2, v4);
label2:
return v5;
}
static com.fasterxml.jackson.databind.type.TypeBindings bindMethodTypeParameters(java.lang.reflect.Method, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.introspect.TypeResolutionContext)
{
java.lang.reflect.Method v0;
boolean v11, v26, v30, v32, v34, v35, v36, v6, v8;
java.lang.reflect.Type v10, v19, v7;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v2;
java.lang.reflect.Type[] v12, v25;
java.util.ArrayList v13, v15;
com.fasterxml.jackson.databind.type.TypeBindings v22, v37, v5;
int v14, v16, v17, v18, v27, v28, v4;
com.fasterxml.jackson.databind.JavaType v1, v23;
java.lang.String v21;
java.lang.reflect.TypeVariable v20, v24;
java.lang.reflect.TypeVariable[] v3;
java.lang.Class v31, v33, v9;
java.lang.Object v29;
v0 := @parameter0: java.lang.reflect.Method;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v3 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v4 = lengthof v3;
if v4 == 0 goto label01;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.type.TypeBindings: boolean isEmpty()>();
if v6 == 0 goto label02;
label01:
return null;
label02:
v7 = virtualinvoke v0.<java.lang.reflect.Method: java.lang.reflect.Type getGenericReturnType()>();
v8 = v7 instanceof java.lang.reflect.ParameterizedType;
if v8 != 0 goto label03;
return null;
label03:
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v10 = interfaceinvoke v7.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v11 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v9, v10);
if v11 != 0 goto label04;
return null;
label04:
v12 = interfaceinvoke v7.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v13 = new java.util.ArrayList;
v14 = lengthof v3;
specialinvoke v13.<java.util.ArrayList: void <init>(int)>(v14);
v15 = new java.util.ArrayList;
v16 = lengthof v3;
specialinvoke v15.<java.util.ArrayList: void <init>(int)>(v16);
v17 = 0;
label05:
v18 = lengthof v12;
if v17 >= v18 goto label12;
v19 = v12[v17];
v20 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: java.lang.reflect.TypeVariable maybeGetTypeVariable(java.lang.reflect.Type)>(v19);
if v20 == null goto label11;
v21 = interfaceinvoke v20.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
if v21 != null goto label06;
return null;
label06:
v22 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v23 = virtualinvoke v22.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType getBoundType(int)>(v17);
if v23 != null goto label07;
return null;
label07:
v24 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: java.lang.reflect.TypeVariable findByName(java.lang.reflect.TypeVariable[],java.lang.String)>(v3, v21);
if v24 != null goto label08;
return null;
label08:
v25 = interfaceinvoke v24.<java.lang.reflect.TypeVariable: java.lang.reflect.Type[] getBounds()>();
v26 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: boolean pessimisticallyValidateBounds(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type[])>(v2, v23, v25);
if v26 == 0 goto label11;
v27 = virtualinvoke v13.<java.util.ArrayList: int indexOf(java.lang.Object)>(v21);
v28 = (int) -1;
if v27 == v28 goto label10;
v29 = virtualinvoke v15.<java.util.ArrayList: java.lang.Object get(int)>(v27);
v30 = virtualinvoke v23.<com.fasterxml.jackson.databind.JavaType: boolean equals(java.lang.Object)>(v29);
if v30 != 0 goto label11;
v31 = virtualinvoke v23.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v32 = virtualinvoke v29.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(v31);
v33 = virtualinvoke v29.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v34 = virtualinvoke v23.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(v33);
if v32 != 0 goto label09;
if v34 != 0 goto label09;
return null;
label09:
v35 = v32 ^ v34;
if v35 == 0 goto label11;
if v34 == 0 goto label11;
virtualinvoke v15.<java.util.ArrayList: java.lang.Object set(int,java.lang.Object)>(v27, v23);
goto label11;
label10:
virtualinvoke v13.<java.util.ArrayList: boolean add(java.lang.Object)>(v21);
virtualinvoke v15.<java.util.ArrayList: boolean add(java.lang.Object)>(v23);
label11:
v17 = v17 + 1;
goto label05;
label12:
v36 = virtualinvoke v13.<java.util.ArrayList: boolean isEmpty()>();
if v36 == 0 goto label13;
return null;
label13:
v37 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings create(java.util.List,java.util.List)>(v13, v15);
return v37;
}
private static java.lang.reflect.TypeVariable maybeGetTypeVariable(java.lang.reflect.Type)
{
java.lang.reflect.TypeVariable v8;
java.lang.reflect.Type v0, v7;
int v4, v6;
java.lang.reflect.Type[] v3, v5;
boolean v1, v2;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.reflect.TypeVariable;
if v1 == 0 goto label1;
return v0;
label1:
v2 = v0 instanceof java.lang.reflect.WildcardType;
if v2 == 0 goto label3;
v3 = interfaceinvoke v0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();
v4 = lengthof v3;
if v4 == 0 goto label2;
return null;
label2:
v5 = interfaceinvoke v0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
v6 = lengthof v5;
if v6 != 1 goto label3;
v7 = v5[0];
v8 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: java.lang.reflect.TypeVariable maybeGetTypeVariable(java.lang.reflect.Type)>(v7);
return v8;
label3:
return null;
}
private static java.lang.reflect.ParameterizedType maybeGetParameterizedType(java.lang.reflect.Type)
{
java.lang.reflect.ParameterizedType v8;
java.lang.reflect.Type v0, v7;
int v4, v6;
java.lang.reflect.Type[] v3, v5;
boolean v1, v2;
v0 := @parameter0: java.lang.reflect.Type;
v1 = v0 instanceof java.lang.reflect.ParameterizedType;
if v1 == 0 goto label1;
return v0;
label1:
v2 = v0 instanceof java.lang.reflect.WildcardType;
if v2 == 0 goto label3;
v3 = interfaceinvoke v0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getLowerBounds()>();
v4 = lengthof v3;
if v4 == 0 goto label2;
return null;
label2:
v5 = interfaceinvoke v0.<java.lang.reflect.WildcardType: java.lang.reflect.Type[] getUpperBounds()>();
v6 = lengthof v5;
if v6 != 1 goto label3;
v7 = v5[0];
v8 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: java.lang.reflect.ParameterizedType maybeGetParameterizedType(java.lang.reflect.Type)>(v7);
return v8;
label3:
return null;
}
private static boolean pessimisticallyValidateBounds(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.JavaType, java.lang.reflect.Type[])
{
java.lang.reflect.Type v5;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v0;
int v3, v4;
java.lang.reflect.Type[] v2;
com.fasterxml.jackson.databind.JavaType v1;
boolean v6;
v0 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: java.lang.reflect.Type[];
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: boolean pessimisticallyValidateBound(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type)>(v0, v1, v5);
if v6 != 0 goto label2;
return 0;
label2:
v4 = v4 + 1;
goto label1;
label3:
return 1;
}
private static boolean pessimisticallyValidateBound(com.fasterxml.jackson.databind.introspect.TypeResolutionContext, com.fasterxml.jackson.databind.JavaType, java.lang.reflect.Type)
{
com.fasterxml.jackson.databind.type.TypeBindings v11;
int v12, v13, v14, v15;
com.fasterxml.jackson.databind.JavaType v1, v16, v3;
boolean v18, v5, v9;
java.lang.reflect.ParameterizedType v6;
java.lang.reflect.Type v17, v2, v8;
com.fasterxml.jackson.databind.introspect.TypeResolutionContext v0;
java.lang.reflect.Type[] v10;
java.lang.Class v4, v7;
v0 := @parameter0: com.fasterxml.jackson.databind.introspect.TypeResolutionContext;
v1 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter2: java.lang.reflect.Type;
v3 = interfaceinvoke v0.<com.fasterxml.jackson.databind.introspect.TypeResolutionContext: com.fasterxml.jackson.databind.JavaType resolveType(java.lang.reflect.Type)>(v2);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(v4);
if v5 != 0 goto label1;
return 0;
label1:
v6 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: java.lang.reflect.ParameterizedType maybeGetParameterizedType(java.lang.reflect.Type)>(v2);
if v6 == null goto label5;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v8 = interfaceinvoke v6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 == 0 goto label5;
v10 = interfaceinvoke v6.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.type.TypeBindings: int size()>();
v13 = lengthof v10;
if v12 == v13 goto label2;
return 0;
label2:
v14 = 0;
label3:
v15 = virtualinvoke v11.<com.fasterxml.jackson.databind.type.TypeBindings: int size()>();
if v14 >= v15 goto label5;
v16 = virtualinvoke v11.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType getBoundType(int)>(v14);
v17 = v10[v14];
v18 = staticinvoke <com.fasterxml.jackson.databind.introspect.MethodGenericTypeResolver: boolean pessimisticallyValidateBound(com.fasterxml.jackson.databind.introspect.TypeResolutionContext,com.fasterxml.jackson.databind.JavaType,java.lang.reflect.Type)>(v0, v16, v17);
if v18 != 0 goto label4;
return 0;
label4:
v14 = v14 + 1;
goto label3;
label5:
return 1;
}
private static java.lang.reflect.TypeVariable findByName(java.lang.reflect.TypeVariable[], java.lang.String)
{
java.lang.reflect.TypeVariable[] v0;
java.lang.reflect.TypeVariable v4;
int v2, v3;
java.lang.String v1, v5;
boolean v6;
v0 := @parameter0: java.lang.reflect.TypeVariable[];
v1 := @parameter1: java.lang.String;
if v0 == null goto label1;
if v1 != null goto label2;
label1:
return null;
label2:
v2 = lengthof v0;
v3 = 0;
label3:
if v3 >= v2 goto label5;
v4 = v0[v3];
v5 = interfaceinvoke v4.<java.lang.reflect.TypeVariable: java.lang.String getName()>();
v6 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label4;
return v4;
label4:
v3 = v3 + 1;
goto label3;
label5:
return null;
}
}