public class com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator extends com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base implements java.io.Serializable
{
private static final long serialVersionUID;
protected final java.util.Set _invalidBaseTypes;
protected final com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers;
protected final com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers;
protected final com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers;
protected void <init>(java.util.Set, com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[], com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[], com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[])
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator v0;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] v3;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] v2, v4;
java.util.Set v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
v1 := @parameter0: java.util.Set;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[];
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[];
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[];
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Base: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: java.util.Set _invalidBaseTypes> = v1;
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers> = v2;
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers> = v3;
v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers> = v4;
return;
}
public static com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder builder()
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder v0;
v0 = new com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$Builder: void <init>()>();
return v0;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher v12;
int v10, v11;
com.fasterxml.jackson.databind.JavaType v2;
boolean v13, v6;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity v14, v15, v7;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator v0;
java.util.Set v4, v5;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] v8, v9;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: java.util.Set _invalidBaseTypes>;
if v4 == null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: java.util.Set _invalidBaseTypes>;
v6 = interfaceinvoke v5.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v6 == 0 goto label1;
v7 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED>;
return v7;
label1:
v8 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers>;
if v8 == null goto label4;
v9 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _baseTypeMatchers>;
v10 = lengthof v9;
v11 = 0;
label2:
if v11 >= v10 goto label4;
v12 = v9[v11];
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher: boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v3);
if v13 == 0 goto label3;
v14 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;
return v14;
label3:
v11 = v11 + 1;
goto label2;
label4:
v15 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE>;
return v15;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, java.lang.String) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity v10, v11;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator v0;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] v4, v5;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher v8;
int v6, v7;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v3;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: java.lang.String;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers>;
if v4 == null goto label3;
v5 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher[] _subTypeNameMatchers>;
v6 = lengthof v5;
v7 = 0;
label1:
if v7 >= v6 goto label3;
v8 = v5[v7];
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$NameMatcher: boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.String)>(v1, v3);
if v9 == 0 goto label2;
v10 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;
return v10;
label2:
v7 = v7 + 1;
goto label1;
label3:
v11 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE>;
return v11;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity v11, v12;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator v0;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] v4, v6;
com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher v9;
int v7, v8;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v5;
com.fasterxml.jackson.databind.JavaType v2, v3;
boolean v10;
v0 := @this: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers>;
if v4 == null goto label3;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = v0.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator: com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher[] _subClassMatchers>;
v7 = lengthof v6;
v8 = 0;
label1:
if v8 >= v7 goto label3;
v9 = v6[v8];
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.jsontype.BasicPolymorphicTypeValidator$TypeMatcher: boolean match(com.fasterxml.jackson.databind.cfg.MapperConfig,java.lang.Class)>(v1, v5);
if v10 == 0 goto label2;
v11 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;
return v11;
label2:
v8 = v8 + 1;
goto label1;
label3:
v12 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE>;
return v12;
}
}