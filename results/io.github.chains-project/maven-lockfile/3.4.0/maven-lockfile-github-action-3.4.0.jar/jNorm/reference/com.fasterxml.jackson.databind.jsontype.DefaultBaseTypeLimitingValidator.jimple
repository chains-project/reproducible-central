public class com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator extends com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator implements java.io.Serializable
{
private static final long serialVersionUID;
public void <init>()
{
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator: void <init>()>();
return;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity v4, v5;
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.JavaType v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator: boolean isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
if v3 == 0 goto label1;
v4 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED>;
return v4;
label1:
v5 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE>;
return v5;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubClassName(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, java.lang.String)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity v4;
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.JavaType v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: java.lang.String;
v4 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity INDETERMINATE>;
return v4;
}
public com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity validateSubType(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity v5;
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.JavaType v2, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator: boolean isSafeSubType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3);
if v4 == 0 goto label1;
v5 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity ALLOWED>;
goto label2;
label1:
v5 = <com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator$Validity DENIED>;
label2:
return v5;
}
protected boolean isUnsafeBaseType(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes v3;
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
java.lang.Class v4;
com.fasterxml.jackson.databind.JavaType v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = <com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes instance>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator$UnsafeBaseTypes: boolean isUnsafeBaseType(java.lang.Class)>(v4);
return v5;
}
protected boolean isSafeSubType(com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator v0;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.JavaType v2, v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.DefaultBaseTypeLimitingValidator;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
return 1;
}
}