public interface  com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder extends java.lang.Object
{
public abstract java.lang.Class getDefaultImpl();
public abstract com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection);
public abstract com.fasterxml.jackson.databind.jsontype.TypeDeserializer buildTypeDeserializer(com.fasterxml.jackson.databind.DeserializationConfig, com.fasterxml.jackson.databind.JavaType, java.util.Collection);
public abstract com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder init(com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id, com.fasterxml.jackson.databind.jsontype.TypeIdResolver);
public abstract com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder inclusion(com.fasterxml.jackson.'annotation'.JsonTypeInfo$As);
public abstract com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeProperty(java.lang.String);
public abstract com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class);
public abstract com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder typeIdVisibility(boolean);
public com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder withDefaultImpl(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v0, v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder;
v1 := @parameter0: java.lang.Class;
v2 = interfaceinvoke v0.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder defaultImpl(java.lang.Class)>(v1);
return v2;
}
}