public class com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer extends com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer
{
private static final long serialVersionUID;
private static final java.util.BitSet EMPTY_CLASS_FINGERPRINT;
private final java.util.Map fieldBitIndex;
private final java.util.Map subtypeFingerprints;
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.jsontype.TypeIdResolver, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.DeserializationConfig, java.util.Collection)
{
java.util.Collection v5;
java.util.HashMap v6;
com.fasterxml.jackson.databind.DeserializationConfig v4;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer v0;
java.util.Map v7;
com.fasterxml.jackson.databind.JavaType v1, v3;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v2;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.DeserializationConfig;
v5 := @parameter4: java.util.Collection;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.'annotation'.JsonTypeInfo$As,boolean)>(v1, v2, null, 0, v3, null, 1);
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex> = v6;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map buildFingerprints(com.fasterxml.jackson.databind.DeserializationConfig,java.util.Collection)>(v4, v5);
v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints> = v7;
return;
}
public void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer v0, v1;
java.util.Map v3, v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsPropertyTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>(v1, v2);
v3 = v1.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex> = v3;
v4 = v1.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;
v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints> = v4;
return;
}
public com.fasterxml.jackson.databind.jsontype.TypeDeserializer forProperty(com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.BeanProperty v1, v2;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer v0, v3;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanProperty;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: com.fasterxml.jackson.databind.BeanProperty _property>;
if v1 != v2 goto label1;
v3 = v0;
goto label2;
label1:
v3 = new com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
specialinvoke v3.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: void <init>(com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer,com.fasterxml.jackson.databind.BeanProperty)>(v0, v1);
label2:
return v3;
}
protected java.util.Map buildFingerprints(com.fasterxml.jackson.databind.DeserializationConfig, java.util.Collection)
{
java.lang.IllegalStateException v31;
java.lang.Integer v26;
com.fasterxml.jackson.databind.type.TypeFactory v10;
java.util.Map v22, v24;
com.fasterxml.jackson.databind.BeanDescription v13;
boolean v19, v4, v8;
java.util.Collection v2;
java.util.List v14;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer v0;
java.lang.Object[] v32;
java.util.HashMap v6;
com.fasterxml.jackson.databind.DeserializationConfig v1;
com.fasterxml.jackson.databind.MapperFeature v3;
int v16, v17, v25, v27, v5;
com.fasterxml.jackson.databind.JavaType v12;
java.lang.String v21, v29, v34, v35;
java.util.Iterator v18, v7;
java.lang.Class v11, v28, v33;
java.lang.Object v20, v23, v30, v9;
java.util.BitSet v15;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v2 := @parameter1: java.util.Collection;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
v5 = 0;
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>()>();
v7 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label6;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v11 = virtualinvoke v9.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v12 = virtualinvoke v10.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v11);
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v12);
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.BeanDescription: java.util.List findProperties()>();
v15 = new java.util.BitSet;
v16 = interfaceinvoke v14.<java.util.List: int size()>();
v17 = v5 + v16;
specialinvoke v15.<java.util.BitSet: void <init>(int)>(v17);
v18 = interfaceinvoke v14.<java.util.List: java.util.Iterator iterator()>();
label2:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label5;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v21 = virtualinvoke v20.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.String getName()>();
if v4 == 0 goto label3;
v21 = virtualinvoke v21.<java.lang.String: java.lang.String toLowerCase()>();
label3:
v22 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;
v23 = interfaceinvoke v22.<java.util.Map: java.lang.Object get(java.lang.Object)>(v21);
if v23 != null goto label4;
v23 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v24 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;
v25 = v5;
v5 = v5 + 1;
v26 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v25);
interfaceinvoke v24.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v21, v26);
label4:
v27 = virtualinvoke v23.<java.lang.Integer: int intValue()>();
virtualinvoke v15.<java.util.BitSet: void set(int)>(v27);
goto label2;
label5:
v28 = virtualinvoke v9.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v29 = virtualinvoke v28.<java.lang.Class: java.lang.String getName()>();
v30 = interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v29);
if v30 == null goto label1;
v31 = new java.lang.IllegalStateException;
v32 = newarray (java.lang.Object)[2];
v32[0] = v30;
v33 = virtualinvoke v9.<com.fasterxml.jackson.databind.jsontype.NamedType: java.lang.Class getType()>();
v34 = virtualinvoke v33.<java.lang.Class: java.lang.String getName()>();
v32[1] = v34;
v35 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Subtypes %s and %s have the same signature and cannot be uniquely deduced.", v32);
specialinvoke v31.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v35);
throw v31;
label6:
return v6;
}
public java.lang.Object deserializeTypedFromObject(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Integer v32;
java.util.Map v13, v20, v24, v8;
boolean v17;
java.util.Set v14;
com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer v0;
java.lang.Object[] v28;
com.fasterxml.jackson.databind.MapperFeature v16;
int v22, v23, v31;
com.fasterxml.jackson.core.JsonToken v18, v3, v4, v5, v7;
com.fasterxml.jackson.databind.JavaType v29;
java.lang.String v19, v30, v33;
java.util.LinkedList v12;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
java.lang.Object v10, v11, v21, v25, v26, v27, v34, v6;
java.util.BitSet v9;
com.fasterxml.jackson.databind.util.TokenBuffer v15;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken currentToken()>();
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_OBJECT>;
if v3 != v4 goto label1;
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
goto label2;
label1:
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v3 == v5 goto label2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String)>(v1, v2, null, "Unexpected input");
return v6;
label2:
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken END_OBJECT>;
if v3 != v7 goto label3;
v8 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;
v9 = <com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.BitSet EMPTY_CLASS_FINGERPRINT>;
v10 = interfaceinvoke v8.<java.util.Map: java.lang.Object get(java.lang.Object)>(v9);
if v10 == null goto label3;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String)>(v1, v2, null, v10);
return v11;
label3:
v12 = new java.util.LinkedList;
v13 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;
v14 = interfaceinvoke v13.<java.util.Map: java.util.Set keySet()>();
specialinvoke v12.<java.util.LinkedList: void <init>(java.util.Collection)>(v14);
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.util.TokenBuffer bufferForInputBuffering(com.fasterxml.jackson.core.JsonParser)>(v1);
v16 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_PROPERTIES>;
v17 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v16);
label4:
v18 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v3 != v18 goto label7;
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String currentName()>();
if v17 == 0 goto label5;
v19 = virtualinvoke v19.<java.lang.String: java.lang.String toLowerCase()>();
label5:
virtualinvoke v15.<com.fasterxml.jackson.databind.util.TokenBuffer: void copyCurrentStructure(com.fasterxml.jackson.core.JsonParser)>(v1);
v20 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map fieldBitIndex>;
v21 = interfaceinvoke v20.<java.util.Map: java.lang.Object get(java.lang.Object)>(v19);
if v21 == null goto label6;
v22 = virtualinvoke v21.<java.lang.Integer: int intValue()>();
staticinvoke <com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: void prune(java.util.List,int)>(v12, v22);
v23 = interfaceinvoke v12.<java.util.List: int size()>();
if v23 != 1 goto label6;
v24 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.Map subtypeFingerprints>;
v25 = interfaceinvoke v12.<java.util.List: java.lang.Object get(int)>(0);
v26 = interfaceinvoke v24.<java.util.Map: java.lang.Object get(java.lang.Object)>(v25);
v27 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.lang.Object _deserializeTypedForId(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String)>(v1, v2, v15, v26);
return v27;
label6:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: com.fasterxml.jackson.core.JsonToken nextToken()>();
goto label4;
label7:
v28 = newarray (java.lang.Object)[2];
v29 = v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: com.fasterxml.jackson.databind.JavaType _baseType>;
v30 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v29);
v28[0] = v30;
v31 = interfaceinvoke v12.<java.util.List: int size()>();
v32 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v31);
v28[1] = v32;
v33 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Cannot deduce unique subtype of %s (%d candidates match)", v28);
v34 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.lang.Object _deserializeTypedUsingDefaultImpl(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,com.fasterxml.jackson.databind.util.TokenBuffer,java.lang.String)>(v1, v2, v15, v33);
return v34;
}
private static void prune(java.util.List, int)
{
java.util.List v0;
java.util.Iterator v2;
int v1;
java.lang.Object v4;
boolean v3, v5;
v0 := @parameter0: java.util.List;
v1 := @parameter1: int;
v2 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v4.<java.util.BitSet: boolean get(int)>(v1);
if v5 != 0 goto label1;
interfaceinvoke v2.<java.util.Iterator: void remove()>();
goto label1;
label2:
return;
}
static void <clinit>()
{
java.util.BitSet v0;
v0 = new java.util.BitSet;
specialinvoke v0.<java.util.BitSet: void <init>(int)>(0);
<com.fasterxml.jackson.databind.jsontype.impl.AsDeductionTypeDeserializer: java.util.BitSet EMPTY_CLASS_FINGERPRINT> = v0;
return;
}
}