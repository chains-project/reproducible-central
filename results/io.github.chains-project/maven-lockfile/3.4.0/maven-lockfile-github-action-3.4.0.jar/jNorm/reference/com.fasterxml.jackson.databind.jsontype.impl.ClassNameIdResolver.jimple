public class com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver extends com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase
{
private static final java.lang.String JAVA_UTIL_PKG;
protected final com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator;
protected void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.type.TypeFactory)
{
com.fasterxml.jackson.databind.type.TypeFactory v2;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator v3;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeFactory;
v3 = <com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator: com.fasterxml.jackson.databind.jsontype.impl.LaissezFaireSubTypeValidator instance>;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v1, v2, v3);
return;
}
public void <init>(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.type.TypeFactory, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v3;
com.fasterxml.jackson.databind.type.TypeFactory v2;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeFactory;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory)>(v1, v2);
v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator> = v3;
return;
}
public static com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver construct(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.cfg.MapperConfig, com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)
{
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v2;
com.fasterxml.jackson.databind.type.TypeFactory v4;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v3;
com.fasterxml.jackson.databind.cfg.MapperConfig v1;
com.fasterxml.jackson.databind.JavaType v0;
v0 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v1 := @parameter1: com.fasterxml.jackson.databind.cfg.MapperConfig;
v2 := @parameter2: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator;
v3 = new com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.MapperConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
specialinvoke v3.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.type.TypeFactory,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v0, v4, v2);
return v3;
}
public com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id getMechanism()
{
com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id v1;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id: com.fasterxml.jackson.'annotation'.JsonTypeInfo$Id CLASS>;
return v1;
}
public void registerSubtype(java.lang.Class, java.lang.String)
{
java.lang.Class v1;
java.lang.String v2;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
return;
}
public java.lang.String idFromValue(java.lang.Object)
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
java.lang.Class v2;
java.lang.Object v1;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String _idFrom(java.lang.Object,java.lang.Class,com.fasterxml.jackson.databind.type.TypeFactory)>(v1, v2, v3);
return v4;
}
public java.lang.String idFromValueAndType(java.lang.Object, java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeFactory v3;
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
java.lang.Class v2;
java.lang.Object v1;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.type.TypeFactory _typeFactory>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: java.lang.String _idFrom(java.lang.Object,java.lang.Class,com.fasterxml.jackson.databind.type.TypeFactory)>(v1, v2, v3);
return v4;
}
public com.fasterxml.jackson.databind.JavaType typeFromId(com.fasterxml.jackson.databind.DatabindContext, java.lang.String) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
com.fasterxml.jackson.databind.JavaType v3;
java.lang.String v2;
com.fasterxml.jackson.databind.DatabindContext v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: com.fasterxml.jackson.databind.DatabindContext;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String,com.fasterxml.jackson.databind.DatabindContext)>(v2, v1);
return v3;
}
protected com.fasterxml.jackson.databind.JavaType _typeFromId(java.lang.String, com.fasterxml.jackson.databind.DatabindContext) throws java.io.IOException
{
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
com.fasterxml.jackson.databind.DatabindContext v2;
com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator v4;
com.fasterxml.jackson.databind.JavaType v3, v5, v7, v8;
java.lang.String v1;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.DatabindContext;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType _baseType>;
v4 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator _subTypeValidator>;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.DatabindContext: com.fasterxml.jackson.databind.JavaType resolveAndValidateSubType(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.PolymorphicTypeValidator)>(v3, v1, v4);
if v5 != null goto label1;
v6 = v2 instanceof com.fasterxml.jackson.databind.DeserializationContext;
if v6 == 0 goto label1;
v7 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType _baseType>;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: com.fasterxml.jackson.databind.JavaType handleUnknownTypeId(com.fasterxml.jackson.databind.JavaType,java.lang.String,com.fasterxml.jackson.databind.jsontype.TypeIdResolver,java.lang.String)>(v7, v1, v0, "no such class found");
return v8;
label1:
return v5;
}
protected java.lang.String _idFrom(java.lang.Object, java.lang.Class, com.fasterxml.jackson.databind.type.TypeFactory)
{
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
com.fasterxml.jackson.databind.type.TypeFactory v3;
int v14;
com.fasterxml.jackson.databind.JavaType v16, v19;
java.lang.String v6;
com.fasterxml.jackson.databind.type.MapType v13;
boolean v11, v4, v5, v7, v8;
com.fasterxml.jackson.databind.type.CollectionType v10;
java.lang.Class v12, v15, v17, v18, v2, v20, v9;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: com.fasterxml.jackson.databind.type.TypeFactory;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v2);
if v4 == 0 goto label1;
v5 = virtualinvoke v2.<java.lang.Class: boolean isEnum()>();
if v5 != 0 goto label1;
v2 = virtualinvoke v2.<java.lang.Class: java.lang.Class getSuperclass()>();
label1:
v6 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v7 = virtualinvoke v6.<java.lang.String: boolean startsWith(java.lang.String)>("java.util.");
if v7 == 0 goto label3;
v8 = v1 instanceof java.util.EnumSet;
if v8 == 0 goto label2;
v9 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.util.EnumSet)>(v1);
v10 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.CollectionType constructCollectionType(java.lang.Class,java.lang.Class)>(class "Ljava/util/EnumSet;", v9);
v6 = virtualinvoke v10.<com.fasterxml.jackson.databind.type.CollectionType: java.lang.String toCanonical()>();
goto label4;
label2:
v11 = v1 instanceof java.util.EnumMap;
if v11 == 0 goto label4;
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class findEnumType(java.util.EnumMap)>(v1);
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.type.MapType constructMapType(java.lang.Class,java.lang.Class,java.lang.Class)>(class "Ljava/util/EnumMap;", v12, class "Ljava/lang/Object;");
v6 = virtualinvoke v13.<com.fasterxml.jackson.databind.type.MapType: java.lang.String toCanonical()>();
goto label4;
label3:
v14 = virtualinvoke v6.<java.lang.String: int indexOf(int)>(36);
if v14 < 0 goto label4;
v15 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class getOuterClass(java.lang.Class)>(v2);
if v15 == null goto label4;
v16 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType _baseType>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v18 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class getOuterClass(java.lang.Class)>(v17);
if v18 != null goto label4;
v19 = v0.<com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver: com.fasterxml.jackson.databind.JavaType _baseType>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v20.<java.lang.Class: java.lang.String getName()>();
label4:
return v6;
}
public java.lang.String getDescForKnownTypeIds()
{
com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.ClassNameIdResolver;
return "class name used as type id";
}
}