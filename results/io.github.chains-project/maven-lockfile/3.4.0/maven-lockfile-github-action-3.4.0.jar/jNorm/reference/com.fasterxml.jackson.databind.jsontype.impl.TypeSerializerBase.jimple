public abstract class com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase extends com.fasterxml.jackson.databind.jsontype.TypeSerializer
{
protected final com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver;
protected final com.fasterxml.jackson.databind.BeanProperty _property;
protected void <init>(com.fasterxml.jackson.databind.jsontype.TypeIdResolver, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v1;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeIdResolver;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: void <init>()>();
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver> = v1;
v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
return;
}
public abstract com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion();
public java.lang.String getPropertyName()
{
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
return null;
}
public com.fasterxml.jackson.databind.jsontype.TypeIdResolver getTypeIdResolver()
{
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v1;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
return v1;
}
public com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException
{
com.fasterxml.jackson.core.type.WritableTypeId v2, v4;
com.fasterxml.jackson.core.JsonGenerator v1;
java.lang.Object v3;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.core.type.WritableTypeId;
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)>(v2);
v3 = v2.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object id>;
if v3 != null goto label1;
return null;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.type.WritableTypeId)>(v2);
return v4;
}
public com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.core.type.WritableTypeId) throws java.io.IOException
{
com.fasterxml.jackson.core.type.WritableTypeId v2, v3;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.core.type.WritableTypeId;
if v2 != null goto label1;
return null;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.type.WritableTypeId)>(v2);
return v3;
}
protected void _generateTypeId(com.fasterxml.jackson.core.type.WritableTypeId)
{
com.fasterxml.jackson.core.type.WritableTypeId v1;
java.lang.Class v4;
java.lang.Object v2, v3;
java.lang.String v5;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.core.type.WritableTypeId;
v2 = v1.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object id>;
if v2 != null goto label3;
v3 = v1.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object forValue>;
v4 = v1.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Class forValueType>;
if v4 != null goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: java.lang.String idFromValue(java.lang.Object)>(v3);
goto label2;
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(v3, v4);
label2:
v1.<com.fasterxml.jackson.core.type.WritableTypeId: java.lang.Object id> = v5;
label3:
return;
}
protected java.lang.String idFromValue(java.lang.Object)
{
java.lang.Object v1;
java.lang.String v3;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v2;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v3 = interfaceinvoke v2.<com.fasterxml.jackson.databind.jsontype.TypeIdResolver: java.lang.String idFromValue(java.lang.Object)>(v1);
if v3 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void handleMissingId(java.lang.Object)>(v1);
label1:
return v3;
}
protected java.lang.String idFromValueAndType(java.lang.Object, java.lang.Class)
{
java.lang.Class v2;
java.lang.Object v1;
java.lang.String v4;
com.fasterxml.jackson.databind.jsontype.TypeIdResolver v3;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Class;
v3 = v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: com.fasterxml.jackson.databind.jsontype.TypeIdResolver _idResolver>;
v4 = interfaceinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeIdResolver: java.lang.String idFromValueAndType(java.lang.Object,java.lang.Class)>(v1, v2);
if v4 != null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase: void handleMissingId(java.lang.Object)>(v1);
label1:
return v4;
}
protected void handleMissingId(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.jsontype.impl.TypeSerializerBase;
v1 := @parameter0: java.lang.Object;
return;
}
}