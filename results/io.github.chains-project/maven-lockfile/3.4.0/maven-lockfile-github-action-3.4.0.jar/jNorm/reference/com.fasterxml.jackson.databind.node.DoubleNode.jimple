public class com.fasterxml.jackson.databind.node.DoubleNode extends com.fasterxml.jackson.databind.node.NumericNode
{
protected final double _value;
public void <init>(double)
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 := @parameter0: double;
specialinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value> = v1;
return;
}
public static com.fasterxml.jackson.databind.node.DoubleNode valueOf(double)
{
com.fasterxml.jackson.databind.node.DoubleNode v1;
double v0;
v0 := @parameter0: double;
v1 = new com.fasterxml.jackson.databind.node.DoubleNode;
specialinvoke v1.<com.fasterxml.jackson.databind.node.DoubleNode: void <init>(double)>(v0);
return v1;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.node.DoubleNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
return v1;
}
public com.fasterxml.jackson.core.JsonParser$NumberType numberType()
{
com.fasterxml.jackson.core.JsonParser$NumberType v1;
com.fasterxml.jackson.databind.node.DoubleNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE>;
return v1;
}
public boolean isFloatingPointNumber()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
return 1;
}
public boolean isDouble()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
return 1;
}
public boolean canConvertToInt()
{
byte v2, v4;
com.fasterxml.jackson.databind.node.DoubleNode v0;
boolean v5;
double v1, v3;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = v1 cmpl -2.147483648E9;
if v2 < 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v4 = v3 cmpg 2.147483647E9;
if v4 > 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public boolean canConvertToLong()
{
byte v2, v4;
com.fasterxml.jackson.databind.node.DoubleNode v0;
boolean v5;
double v1, v3;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = v1 cmpl -9.223372036854776E18;
if v2 < 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v4 = v3 cmpg 9.223372036854776E18;
if v4 > 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
public boolean canConvertToExactIntegral()
{
byte v8;
com.fasterxml.jackson.databind.node.DoubleNode v0;
boolean v2, v4, v9;
double v1, v3, v5, v6, v7;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v1);
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v4 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(v3);
if v4 != 0 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v6 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v7 = staticinvoke <java.lang.Math: double rint(double)>(v6);
v8 = v5 cmpl v7;
if v8 != 0 goto label1;
v9 = 1;
goto label2;
label1:
v9 = 0;
label2:
return v9;
}
public java.lang.Number numberValue()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
java.lang.Double v2;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v1);
return v2;
}
public short shortValue()
{
int v1;
com.fasterxml.jackson.databind.node.DoubleNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
return v1;
}
public int intValue()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
return v1;
}
public long longValue()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
return v1;
}
public float floatValue()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
return v1;
}
public double doubleValue()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
return v1;
}
public java.math.BigDecimal decimalValue()
{
java.math.BigDecimal v2;
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(double)>(v1);
return v2;
}
public java.math.BigInteger bigIntegerValue()
{
java.math.BigDecimal v1;
java.math.BigInteger v2;
com.fasterxml.jackson.databind.node.DoubleNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.DoubleNode: java.math.BigDecimal decimalValue()>();
v2 = virtualinvoke v1.<java.math.BigDecimal: java.math.BigInteger toBigInteger()>();
return v2;
}
public java.lang.String asText()
{
java.lang.String v2;
com.fasterxml.jackson.databind.node.DoubleNode v0;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(double)>(v1);
return v2;
}
public boolean isNaN()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
boolean v2, v4, v5;
double v1, v3;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = staticinvoke <java.lang.Double: boolean isNaN(double)>(v1);
if v2 != 0 goto label1;
v3 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v4 = staticinvoke <java.lang.Double: boolean isInfinite(double)>(v3);
if v4 == 0 goto label2;
label1:
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
}
public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
double v3;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>(v3);
return;
}
public boolean equals(java.lang.Object)
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
int v5;
java.lang.Object v1;
boolean v2, v6;
double v3, v4;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.node.DoubleNode;
if v2 == 0 goto label5;
v3 = v1.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v4 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v5 = staticinvoke <java.lang.Double: int compare(double,double)>(v4, v3);
if v5 != 0 goto label3;
v6 = 1;
goto label4;
label3:
v6 = 0;
label4:
return v6;
label5:
return 0;
}
public int hashCode()
{
com.fasterxml.jackson.databind.node.DoubleNode v0;
int v4;
long v2, v3;
double v1;
v0 := @this: com.fasterxml.jackson.databind.node.DoubleNode;
v1 = v0.<com.fasterxml.jackson.databind.node.DoubleNode: double _value>;
v2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(v1);
v3 = v2 >> 32;
v4 = v2 ^ v3;
return v4;
}
}