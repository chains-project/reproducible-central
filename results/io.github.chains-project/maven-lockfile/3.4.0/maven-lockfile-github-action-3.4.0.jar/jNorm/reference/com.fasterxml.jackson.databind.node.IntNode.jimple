public class com.fasterxml.jackson.databind.node.IntNode extends com.fasterxml.jackson.databind.node.NumericNode
{
static final int MIN_CANONICAL;
static final int MAX_CANONICAL;
private static final com.fasterxml.jackson.databind.node.IntNode[] CANONICALS;
protected final int _value;
public void <init>(int)
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 := @parameter0: int;
specialinvoke v0.<com.fasterxml.jackson.databind.node.NumericNode: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.IntNode: int _value> = v1;
return;
}
public static com.fasterxml.jackson.databind.node.IntNode valueOf(int)
{
com.fasterxml.jackson.databind.node.IntNode v2, v6;
int v0, v1, v4, v5;
com.fasterxml.jackson.databind.node.IntNode[] v3;
v0 := @parameter0: int;
if v0 > 10 goto label1;
v1 = (int) -1;
if v0 >= v1 goto label2;
label1:
v2 = new com.fasterxml.jackson.databind.node.IntNode;
specialinvoke v2.<com.fasterxml.jackson.databind.node.IntNode: void <init>(int)>(v0);
return v2;
label2:
v3 = <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode[] CANONICALS>;
v4 = (int) -1;
v5 = v0 - v4;
v6 = v3[v5];
return v6;
}
public com.fasterxml.jackson.core.JsonToken asToken()
{
com.fasterxml.jackson.core.JsonToken v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
return v1;
}
public com.fasterxml.jackson.core.JsonParser$NumberType numberType()
{
com.fasterxml.jackson.core.JsonParser$NumberType v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType INT>;
return v1;
}
public boolean isIntegralNumber()
{
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
return 1;
}
public boolean isInt()
{
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
return 1;
}
public boolean canConvertToInt()
{
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
return 1;
}
public boolean canConvertToLong()
{
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
return 1;
}
public java.lang.Number numberValue()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
java.lang.Integer v2;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
return v2;
}
public short shortValue()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
return v1;
}
public int intValue()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
return v1;
}
public long longValue()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
return v1;
}
public float floatValue()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
return v1;
}
public double doubleValue()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
return v1;
}
public java.math.BigDecimal decimalValue()
{
int v1;
java.math.BigDecimal v2;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
v2 = staticinvoke <java.math.BigDecimal: java.math.BigDecimal valueOf(long)>(v1);
return v2;
}
public java.math.BigInteger bigIntegerValue()
{
int v1;
java.math.BigInteger v2;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
v2 = staticinvoke <java.math.BigInteger: java.math.BigInteger valueOf(long)>(v1);
return v2;
}
public java.lang.String asText()
{
int v1;
java.lang.String v2;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
v2 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: java.lang.String toString(int)>(v1);
return v2;
}
public boolean asBoolean(boolean)
{
com.fasterxml.jackson.databind.node.IntNode v0;
int v2;
boolean v1, v3;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 := @parameter0: boolean;
v2 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public final void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.node.IntNode v0;
com.fasterxml.jackson.core.JsonGenerator v1;
int v3;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v3);
return;
}
public boolean equals(java.lang.Object)
{
com.fasterxml.jackson.databind.node.IntNode v0;
int v3, v4;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = v1 instanceof com.fasterxml.jackson.databind.node.IntNode;
if v2 == 0 goto label5;
v3 = v1.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
v4 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
if v3 != v4 goto label3;
v5 = 1;
goto label4;
label3:
v5 = 0;
label4:
return v5;
label5:
return 0;
}
public int hashCode()
{
int v1;
com.fasterxml.jackson.databind.node.IntNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.IntNode;
v1 = v0.<com.fasterxml.jackson.databind.node.IntNode: int _value>;
return v1;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.node.IntNode v3;
int v1, v4, v5;
com.fasterxml.jackson.databind.node.IntNode[] v0, v2;
v0 = newarray (com.fasterxml.jackson.databind.node.IntNode)[12];
<com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode[] CANONICALS> = v0;
v1 = 0;
label1:
if v1 >= 12 goto label2;
v2 = <com.fasterxml.jackson.databind.node.IntNode: com.fasterxml.jackson.databind.node.IntNode[] CANONICALS>;
v3 = new com.fasterxml.jackson.databind.node.IntNode;
v4 = v5 - 1;
specialinvoke v3.<com.fasterxml.jackson.databind.node.IntNode: void <init>(int)>(v4);
v2[v1] = v3;
v1 = v1 + 1;
goto label1;
label2:
return;
}
}