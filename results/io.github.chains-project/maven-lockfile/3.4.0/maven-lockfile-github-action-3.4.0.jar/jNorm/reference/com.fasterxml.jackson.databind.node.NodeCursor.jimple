abstract class com.fasterxml.jackson.databind.node.NodeCursor extends com.fasterxml.jackson.core.JsonStreamContext
{
protected final com.fasterxml.jackson.databind.node.NodeCursor _parent;
protected java.lang.String _currentName;
protected java.lang.Object _currentValue;
public void <init>(int, com.fasterxml.jackson.databind.node.NodeCursor)
{
com.fasterxml.jackson.databind.node.NodeCursor v0, v2;
int v1, v3;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.databind.node.NodeCursor;
specialinvoke v0.<com.fasterxml.jackson.core.JsonStreamContext: void <init>()>();
v0.<com.fasterxml.jackson.databind.node.NodeCursor: int _type> = v1;
v3 = (int) -1;
v0.<com.fasterxml.jackson.databind.node.NodeCursor: int _index> = v3;
v0.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor _parent> = v2;
return;
}
public final com.fasterxml.jackson.databind.node.NodeCursor getParent()
{
com.fasterxml.jackson.databind.node.NodeCursor v0, v1;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 = v0.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.node.NodeCursor _parent>;
return v1;
}
public final java.lang.String getCurrentName()
{
com.fasterxml.jackson.databind.node.NodeCursor v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 = v0.<com.fasterxml.jackson.databind.node.NodeCursor: java.lang.String _currentName>;
return v1;
}
public void overrideCurrentName(java.lang.String)
{
com.fasterxml.jackson.databind.node.NodeCursor v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 := @parameter0: java.lang.String;
v0.<com.fasterxml.jackson.databind.node.NodeCursor: java.lang.String _currentName> = v1;
return;
}
public java.lang.Object getCurrentValue()
{
com.fasterxml.jackson.databind.node.NodeCursor v0;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 = v0.<com.fasterxml.jackson.databind.node.NodeCursor: java.lang.Object _currentValue>;
return v1;
}
public void setCurrentValue(java.lang.Object)
{
com.fasterxml.jackson.databind.node.NodeCursor v0;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 := @parameter0: java.lang.Object;
v0.<com.fasterxml.jackson.databind.node.NodeCursor: java.lang.Object _currentValue> = v1;
return;
}
public abstract com.fasterxml.jackson.core.JsonToken nextToken();
public abstract com.fasterxml.jackson.databind.JsonNode currentNode();
public abstract com.fasterxml.jackson.databind.node.NodeCursor startObject();
public abstract com.fasterxml.jackson.databind.node.NodeCursor startArray();
public final com.fasterxml.jackson.databind.node.NodeCursor iterateChildren()
{
java.lang.IllegalStateException v2, v7;
com.fasterxml.jackson.databind.node.NodeCursor v0;
com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor v6;
com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor v4;
com.fasterxml.jackson.databind.JsonNode v1;
java.lang.Class v8;
java.lang.String v10, v9;
boolean v3, v5;
v0 := @this: com.fasterxml.jackson.databind.node.NodeCursor;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.NodeCursor: com.fasterxml.jackson.databind.JsonNode currentNode()>();
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("No current node");
throw v2;
label1:
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: boolean isArray()>();
if v3 == 0 goto label2;
v4 = new com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor;
specialinvoke v4.<com.fasterxml.jackson.databind.node.NodeCursor$ArrayCursor: void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor)>(v1, v0);
return v4;
label2:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JsonNode: boolean isObject()>();
if v5 == 0 goto label3;
v6 = new com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor;
specialinvoke v6.<com.fasterxml.jackson.databind.node.NodeCursor$ObjectCursor: void <init>(com.fasterxml.jackson.databind.JsonNode,com.fasterxml.jackson.databind.node.NodeCursor)>(v1, v0);
return v6;
label3:
v7 = new java.lang.IllegalStateException;
v8 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Current node of type \u0001");
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v10);
throw v7;
}
}