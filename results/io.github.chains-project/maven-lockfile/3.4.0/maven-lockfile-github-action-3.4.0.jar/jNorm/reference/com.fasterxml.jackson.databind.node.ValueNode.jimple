public abstract class com.fasterxml.jackson.databind.node.ValueNode extends com.fasterxml.jackson.databind.node.BaseJsonNode
{
private static final long serialVersionUID;
protected void <init>()
{
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
specialinvoke v0.<com.fasterxml.jackson.databind.node.BaseJsonNode: void <init>()>();
return;
}
protected com.fasterxml.jackson.databind.JsonNode _at(com.fasterxml.jackson.core.JsonPointer)
{
com.fasterxml.jackson.core.JsonPointer v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonPointer;
return null;
}
public com.fasterxml.jackson.databind.JsonNode deepCopy()
{
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
return v0;
}
public abstract com.fasterxml.jackson.core.JsonToken asToken();
public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.type.WritableTypeId v5, v6;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.core.JsonToken v4;
com.fasterxml.jackson.databind.SerializerProvider v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.node.ValueNode: com.fasterxml.jackson.core.JsonToken asToken()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v0, v4);
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v1, v5);
virtualinvoke v0.<com.fasterxml.jackson.databind.node.ValueNode: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v1, v6);
return;
}
public boolean isEmpty()
{
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
return 1;
}
public final com.fasterxml.jackson.databind.JsonNode get(int)
{
int v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: int;
return null;
}
public final com.fasterxml.jackson.databind.JsonNode path(int)
{
int v1;
com.fasterxml.jackson.databind.node.MissingNode v2;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: int;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode getInstance()>();
return v2;
}
public final boolean has(int)
{
int v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: int;
return 0;
}
public final boolean hasNonNull(int)
{
int v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: int;
return 0;
}
public final com.fasterxml.jackson.databind.JsonNode get(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
return null;
}
public final com.fasterxml.jackson.databind.JsonNode path(java.lang.String)
{
com.fasterxml.jackson.databind.node.MissingNode v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <com.fasterxml.jackson.databind.node.MissingNode: com.fasterxml.jackson.databind.node.MissingNode getInstance()>();
return v2;
}
public final boolean has(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
return 0;
}
public final boolean hasNonNull(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
return 0;
}
public final com.fasterxml.jackson.databind.JsonNode findValue(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
return null;
}
public final com.fasterxml.jackson.databind.node.ObjectNode findParent(java.lang.String)
{
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
return null;
}
public final java.util.List findValues(java.lang.String, java.util.List)
{
java.util.List v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
return v2;
}
public final java.util.List findValuesAsText(java.lang.String, java.util.List)
{
java.util.List v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
return v2;
}
public final java.util.List findParents(java.lang.String, java.util.List)
{
java.util.List v2;
java.lang.String v1;
com.fasterxml.jackson.databind.node.ValueNode v0;
v0 := @this: com.fasterxml.jackson.databind.node.ValueNode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
return v2;
}
}