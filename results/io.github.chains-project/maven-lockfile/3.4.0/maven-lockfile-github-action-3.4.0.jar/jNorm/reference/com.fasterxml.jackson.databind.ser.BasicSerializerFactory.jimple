public abstract class com.fasterxml.jackson.databind.ser.BasicSerializerFactory extends com.fasterxml.jackson.databind.ser.SerializerFactory implements java.io.Serializable
{
protected static final java.util.HashMap _concrete;
protected static final java.util.HashMap _concreteLazy;
protected final com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig;
protected void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
{
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v1, v2;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.SerializerFactory: void <init>()>();
if v1 != null goto label1;
v2 = new com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
specialinvoke v2.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: void <init>()>();
goto label2;
label1:
v2 = v1;
label2:
v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig> = v2;
return;
}
public com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig getFactoryConfig()
{
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v1;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
return v1;
}
public abstract com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig);
public final com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)
{
com.fasterxml.jackson.databind.ser.SerializerFactory v4;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.ser.Serializers v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.Serializers;
v2 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalSerializers(com.fasterxml.jackson.databind.ser.Serializers)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(v3);
return v4;
}
public final com.fasterxml.jackson.databind.ser.SerializerFactory withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)
{
com.fasterxml.jackson.databind.ser.SerializerFactory v4;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.ser.Serializers v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.Serializers;
v2 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withAdditionalKeySerializers(com.fasterxml.jackson.databind.ser.Serializers)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(v3);
return v4;
}
public final com.fasterxml.jackson.databind.ser.SerializerFactory withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)
{
com.fasterxml.jackson.databind.ser.SerializerFactory v4;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.ser.BeanSerializerModifier v1;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanSerializerModifier;
v2 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig withSerializerModifier(com.fasterxml.jackson.databind.ser.BeanSerializerModifier)>(v1);
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(v3);
return v4;
}
public abstract com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException;
public com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v4;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v16;
com.fasterxml.jackson.databind.JsonSerializer v18, v3, v6;
com.fasterxml.jackson.databind.BeanDescription v5;
boolean v12, v19, v22, v27, v31, v8;
java.lang.reflect.Member v20;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v26, v28, v7, v9;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v14, v25;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Iterable v10, v29;
com.fasterxml.jackson.databind.MapperFeature v21;
com.fasterxml.jackson.databind.JavaType v17, v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer v23;
java.util.Iterator v11, v30;
java.lang.Class v15, v24;
java.lang.Object v13, v32;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v2);
v6 = null;
v7 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasKeySerializers()>();
if v8 == 0 goto label2;
v9 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable keySerializers()>();
v11 = interfaceinvoke v10.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v12 = interfaceinvoke v11.<java.util.Iterator: boolean hasNext()>();
if v12 == 0 goto label2;
v13 = interfaceinvoke v11.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v13.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v4, v2, v5);
if v6 != null goto label6;
goto label1;
label2:
if v6 != null goto label6;
v14 = virtualinvoke v5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v14);
if v6 != null goto label6;
v6 = v3;
if v3 != null goto label6;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean)>(v4, v15, 0);
if v6 != null goto label6;
v16 = virtualinvoke v5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonKeyAccessor()>();
if v16 != null goto label3;
v16 = virtualinvoke v5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor()>();
label3:
if v16 == null goto label5;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.JavaType getType()>();
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v17, v3);
v19 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: boolean canOverrideAccessModifiers()>();
if v19 == 0 goto label4;
v20 = virtualinvoke v16.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.reflect.Member getMember()>();
v21 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS>;
v22 = virtualinvoke v4.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v21);
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>(v20, v22);
label4:
v23 = new com.fasterxml.jackson.databind.ser.std.JsonValueSerializer;
specialinvoke v23.<com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v16, null, v18);
v6 = v23;
goto label6;
label5:
v24 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v25 = virtualinvoke v5.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v4, v24, v25);
label6:
v26 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v27 == 0 goto label8;
v28 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v29 = virtualinvoke v28.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v30 = interfaceinvoke v29.<java.lang.Iterable: java.util.Iterator iterator()>();
label7:
v31 = interfaceinvoke v30.<java.util.Iterator: boolean hasNext()>();
if v31 == 0 goto label8;
v32 = interfaceinvoke v30.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v32.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v4, v2, v5, v6);
goto label7;
label8:
return v6;
}
public com.fasterxml.jackson.databind.JsonSerializer createKeySerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.SerializationConfig v1;
java.lang.Iterable v19, v9;
com.fasterxml.jackson.databind.JsonSerializer v3, v5;
com.fasterxml.jackson.databind.BeanDescription v4;
com.fasterxml.jackson.databind.JavaType v2;
boolean v11, v17, v21, v7;
java.util.Iterator v10, v20;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v16, v18, v6, v8;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v15;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v13, v14;
java.lang.Object v12, v22;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v2);
v5 = null;
v6 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasKeySerializers()>();
if v7 == 0 goto label2;
v8 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable keySerializers()>();
v10 = interfaceinvoke v9.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v12.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v4);
if v5 != null goto label3;
goto label1;
label2:
if v5 != null goto label3;
v5 = v3;
if v3 != null goto label3;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer getStdKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,boolean)>(v1, v13, 0);
if v5 != null goto label3;
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v15 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v5 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdKeySerializers: com.fasterxml.jackson.databind.JsonSerializer getFallbackKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v1, v14, v15);
label3:
v16 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v17 == 0 goto label5;
v18 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v20 = interfaceinvoke v19.<java.lang.Iterable: java.util.Iterator iterator()>();
label4:
v21 = interfaceinvoke v20.<java.util.Iterator: boolean hasNext()>();
if v21 == 0 goto label5;
v22 = interfaceinvoke v20.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v22.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyKeySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v4, v5);
goto label4;
label5:
return v5;
}
public com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v6;
java.util.Collection v8;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v9;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v10;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v5;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.BeanDescription v4;
java.lang.Class v3;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v7;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)>(v3);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,com.fasterxml.jackson.databind.JavaType)>(v1, v5, v2);
v8 = null;
if v7 != null goto label1;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder getDefaultTyper(com.fasterxml.jackson.databind.JavaType)>(v2);
goto label2;
label1:
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();
v8 = virtualinvoke v9.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v1, v5);
label2:
if v7 != null goto label3;
return null;
label3:
v10 = interfaceinvoke v7.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(v1, v2, v8);
return v10;
}
protected abstract java.lang.Iterable customSerializers();
protected final com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, boolean)
{
com.fasterxml.jackson.databind.SerializationConfig v2;
java.util.HashMap v7, v9;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.BeanDescription v3;
java.lang.Class v5;
java.lang.Object v10, v11, v8;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.String v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concrete>;
v8 = virtualinvoke v7.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v6);
if v8 != null goto label1;
v9 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concreteLazy>;
v10 = virtualinvoke v9.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v6);
if v10 == null goto label1;
v11 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Object createInstance(java.lang.Class,boolean)>(v10, 0);
return v11;
label1:
return v8;
}
protected final com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v17;
com.fasterxml.jackson.databind.MapperFeature v11;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v8;
com.fasterxml.jackson.databind.JsonSerializer v14;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v13, v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v12, v6, v9;
com.fasterxml.jackson.databind.ser.std.JsonValueSerializer v18;
java.lang.reflect.Member v10;
com.fasterxml.jackson.databind.ser.std.SerializableSerializer v7;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v4, v5;
java.lang.Object v15, v16;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v5 = class "Lcom/fasterxml/jackson/databind/JsonSerializable;";
v6 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v4);
if v6 == 0 goto label1;
v7 = <com.fasterxml.jackson.databind.ser.std.SerializableSerializer: com.fasterxml.jackson.databind.ser.std.SerializableSerializer instance>;
return v7;
label1:
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findJsonValueAccessor()>();
if v8 == null goto label5;
v9 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean canOverrideAccessModifiers()>();
if v9 == 0 goto label2;
v10 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.reflect.Member getMember()>();
v11 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS>;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v11);
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void checkAndFixAccess(java.lang.reflect.Member,boolean)>(v10, v12);
label2:
v13 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.JavaType getType()>();
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v8);
if v14 != null goto label3;
v15 = virtualinvoke v13.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
label3:
v16 = virtualinvoke v13.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();
if v16 != null goto label4;
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v17, v13);
label4:
v18 = new com.fasterxml.jackson.databind.ser.std.JsonValueSerializer;
specialinvoke v18.<com.fasterxml.jackson.databind.ser.std.JsonValueSerializer: void <init>(com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v8, v16, v15);
return v18;
label5:
return null;
}
protected final com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.DateSerializer v15;
com.fasterxml.jackson.databind.ser.std.InetAddressSerializer v27;
com.fasterxml.jackson.databind.SerializationConfig v6;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v39;
int[] v40;
com.fasterxml.jackson.databind.JsonSerializer v21, v7, v9;
com.fasterxml.jackson.databind.BeanDescription v3;
boolean v11, v14, v17, v23, v26, v29, v32, v35, v38, v4, v47, v5;
com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer v48;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.ser.std.ToStringSerializer v36, v44;
com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer v33;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v41;
int v42, v43;
com.fasterxml.jackson.databind.JavaType v18, v19, v2, v20;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer v30;
com.fasterxml.jackson.databind.ser.std.CalendarSerializer v12;
com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer v24;
java.lang.Class v10, v13, v16, v22, v25, v28, v31, v34, v37, v46, v8;
com.fasterxml.jackson.databind.ser.std.NumberSerializer v45;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isEnumType()>();
if v5 == 0 goto label01;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v6, v2, v3);
return v7;
label01:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v4);
if v9 == null goto label02;
return v9;
label02:
v10 = class "Ljava/util/Calendar;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v11 == 0 goto label03;
v12 = <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance>;
return v12;
label03:
v13 = class "Ljava/util/Date;";
v14 = virtualinvoke v13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v14 == 0 goto label04;
v15 = <com.fasterxml.jackson.databind.ser.std.DateSerializer: com.fasterxml.jackson.databind.ser.std.DateSerializer instance>;
return v15;
label04:
v16 = class "Ljava/util/Map$Entry;";
v17 = virtualinvoke v16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v17 == 0 goto label05;
v18 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(class "Ljava/util/Map$Entry;");
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int)>(0);
v20 = virtualinvoke v18.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType containedTypeOrUnknown(int)>(1);
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v19, v20);
return v21;
label05:
v22 = class "Ljava/nio/ByteBuffer;";
v23 = virtualinvoke v22.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v23 == 0 goto label06;
v24 = new com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer;
specialinvoke v24.<com.fasterxml.jackson.databind.ser.std.ByteBufferSerializer: void <init>()>();
return v24;
label06:
v25 = class "Ljava/net/InetAddress;";
v26 = virtualinvoke v25.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v26 == 0 goto label07;
v27 = new com.fasterxml.jackson.databind.ser.std.InetAddressSerializer;
specialinvoke v27.<com.fasterxml.jackson.databind.ser.std.InetAddressSerializer: void <init>()>();
return v27;
label07:
v28 = class "Ljava/net/InetSocketAddress;";
v29 = virtualinvoke v28.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v29 == 0 goto label08;
v30 = new com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer;
specialinvoke v30.<com.fasterxml.jackson.databind.ser.std.InetSocketAddressSerializer: void <init>()>();
return v30;
label08:
v31 = class "Ljava/util/TimeZone;";
v32 = virtualinvoke v31.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v32 == 0 goto label09;
v33 = new com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer;
specialinvoke v33.<com.fasterxml.jackson.databind.ser.std.TimeZoneSerializer: void <init>()>();
return v33;
label09:
v34 = class "Ljava/nio/charset/Charset;";
v35 = virtualinvoke v34.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v35 == 0 goto label10;
v36 = <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;
return v36;
label10:
v37 = class "Ljava/lang/Number;";
v38 = virtualinvoke v37.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v38 == 0 goto label14;
v39 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v40 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonFormat$Shape>;
v41 = virtualinvoke v39.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v42 = virtualinvoke v41.<com.fasterxml.jackson.'annotation'.JsonFormat$Shape: int ordinal()>();
v43 = v40[v42];
tableswitch(v43)
{
case 1: goto label11;
case 2: goto label12;
case 3: goto label12;
default: goto label13;
};
label11:
v44 = <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;
return v44;
label12:
return null;
label13:
v45 = <com.fasterxml.jackson.databind.ser.std.NumberSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializer instance>;
return v45;
label14:
v46 = class "Ljava/lang/ClassLoader;";
v47 = virtualinvoke v46.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v8);
if v47 == 0 goto label15;
v48 = new com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer;
specialinvoke v48.<com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v2);
return v48;
label15:
return null;
}
protected com.fasterxml.jackson.databind.JsonSerializer findOptionalStdSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v6;
com.fasterxml.jackson.databind.ext.OptionalHandlerFactory v5;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v7;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = <com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: com.fasterxml.jackson.databind.ext.OptionalHandlerFactory instance>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.ext.OptionalHandlerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v6, v2, v3);
return v7;
}
protected final com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.ToStringSerializer v22;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.type.TypeFactory v15, v8;
int v10, v17;
com.fasterxml.jackson.databind.JsonSerializer v12, v19;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v11, v18, v2;
boolean v14, v21, v4, v7;
com.fasterxml.jackson.databind.JavaType[] v16, v9;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v13, v20, v5, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = class "Ljava/util/Iterator;";
v7 = virtualinvoke v6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v5);
if v7 == 0 goto label4;
v8 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v2, class "Ljava/util/Iterator;");
if v9 == null goto label1;
v10 = lengthof v9;
if v10 == 1 goto label2;
label1:
v11 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
goto label3;
label2:
v11 = v9[0];
label3:
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v11);
return v12;
label4:
v13 = class "Ljava/lang/Iterable;";
v14 = virtualinvoke v13.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v5);
if v14 == 0 goto label8;
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v2, class "Ljava/lang/Iterable;");
if v16 == null goto label5;
v17 = lengthof v16;
if v17 == 1 goto label6;
label5:
v18 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
goto label7;
label6:
v18 = v16[0];
label7:
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JavaType)>(v1, v2, v3, v4, v18);
return v19;
label8:
v20 = class "Ljava/lang/CharSequence;";
v21 = virtualinvoke v20.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v5);
if v21 == 0 goto label9;
v22 = <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;
return v22;
label9:
return null;
}
protected com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.Annotated) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v5, v6;
java.lang.Object v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v5);
return v6;
}
protected com.fasterxml.jackson.databind.JsonSerializer findConvertingSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.Annotated, com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.util.Converter v4;
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.type.TypeFactory v5;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v7;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v6;
com.fasterxml.jackson.databind.SerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v2);
if v4 != null goto label1;
return v3;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v6 = interfaceinvoke v4.<com.fasterxml.jackson.databind.util.Converter: com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)>(v5);
v7 = new com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
specialinvoke v7.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v4, v6, v3);
return v7;
}
protected com.fasterxml.jackson.databind.util.Converter findConverter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.Annotated) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.util.Converter v5;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Object v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findSerializationConverter(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.util.Converter converterInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v4);
return v5;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v5;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v11;
com.fasterxml.jackson.databind.JsonSerializer v13, v16, v18, v19, v33, v34, v47;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.type.MapLikeType v48;
boolean v14, v17, v22, v25, v29, v31, v32, v37, v4, v40, v44, v46, v6, v7, v9;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v24, v26, v39, v41;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v12, v15;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Iterable v20, v27, v35, v42;
com.fasterxml.jackson.databind.JavaType v10, v2, v8;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.type.CollectionLikeType v49;
java.util.Iterator v21, v28, v36, v43;
java.lang.Object v23, v30, v38, v45;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
if v4 != 0 goto label02;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean useStaticType()>();
if v6 == 0 goto label02;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v7 == 0 goto label01;
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v9 != 0 goto label02;
label01:
v4 = 1;
label02:
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v5, v10);
if v11 == null goto label03;
v4 = 0;
label03:
v12 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v12);
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isMapLikeType()>();
if v14 == 0 goto label10;
v15 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v15);
v17 = v2 instanceof com.fasterxml.jackson.databind.type.MapType;
if v17 == 0 goto label04;
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v48, v3, v4, v16, v11, v13);
return v18;
label04:
v19 = null;
v20 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();
v21 = interfaceinvoke v20.<java.lang.Iterable: java.util.Iterator iterator()>();
label05:
v22 = interfaceinvoke v21.<java.util.Iterator: boolean hasNext()>();
if v22 == 0 goto label06;
v23 = interfaceinvoke v21.<java.util.Iterator: java.lang.Object next()>();
v19 = interfaceinvoke v23.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v5, v2, v3, v16, v11, v13);
if v19 != null goto label07;
goto label05;
label06:
if v19 != null goto label07;
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3);
label07:
if v19 == null goto label09;
v24 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v25 = virtualinvoke v24.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v25 == 0 goto label09;
v26 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v28 = interfaceinvoke v27.<java.lang.Iterable: java.util.Iterator iterator()>();
label08:
v29 = interfaceinvoke v28.<java.util.Iterator: boolean hasNext()>();
if v29 == 0 goto label09;
v30 = interfaceinvoke v28.<java.util.Iterator: java.lang.Object next()>();
v19 = virtualinvoke v30.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyMapLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v5, v2, v3, v19);
goto label08;
label09:
return v19;
label10:
v31 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isCollectionLikeType()>();
if v31 == 0 goto label17;
v32 = v2 instanceof com.fasterxml.jackson.databind.type.CollectionType;
if v32 == 0 goto label11;
v33 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v49, v3, v4, v11, v13);
return v33;
label11:
v34 = null;
v35 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();
v36 = interfaceinvoke v35.<java.lang.Iterable: java.util.Iterator iterator()>();
label12:
v37 = interfaceinvoke v36.<java.util.Iterator: boolean hasNext()>();
if v37 == 0 goto label13;
v38 = interfaceinvoke v36.<java.util.Iterator: java.lang.Object next()>();
v34 = interfaceinvoke v38.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v5, v2, v3, v11, v13);
if v34 != null goto label14;
goto label12;
label13:
if v34 != null goto label14;
v34 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3);
label14:
if v34 == null goto label16;
v39 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v40 = virtualinvoke v39.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v40 == 0 goto label16;
v41 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v42 = virtualinvoke v41.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v43 = interfaceinvoke v42.<java.lang.Iterable: java.util.Iterator iterator()>();
label15:
v44 = interfaceinvoke v43.<java.util.Iterator: boolean hasNext()>();
if v44 == 0 goto label16;
v45 = interfaceinvoke v43.<java.util.Iterator: java.lang.Object next()>();
v34 = virtualinvoke v45.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyCollectionLikeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionLikeType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v5, v2, v3, v34);
goto label15;
label16:
return v34;
label17:
v46 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isArrayType()>();
if v46 == 0 goto label18;
v47 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v4, v11, v13);
return v47;
label18:
return null;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.type.CollectionType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v7;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v13;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
com.fasterxml.jackson.databind.JsonSerializer v6, v8;
com.fasterxml.jackson.databind.BeanDescription v3;
boolean v11, v18, v20, v23, v24, v26, v29, v33, v4;
com.fasterxml.jackson.databind.type.CollectionType v2;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v28, v30;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Iterable v31, v9;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v14, v15;
com.fasterxml.jackson.databind.JavaType v19, v21, v25, v27;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.util.Iterator v10, v32;
java.lang.Class v16, v17, v22;
java.lang.Object v12, v34;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.type.CollectionType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v8 = null;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();
v10 = interfaceinvoke v9.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label02;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v12.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v7, v2, v3, v5, v6);
if v8 != null goto label09;
goto label01;
label02:
if v8 != null goto label09;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3);
if v8 != null goto label09;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v14 = virtualinvoke v13.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v15 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;
if v14 != v15 goto label03;
return null;
label03:
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.CollectionType: java.lang.Class getRawClass()>();
v17 = class "Ljava/util/EnumSet;";
v18 = virtualinvoke v17.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v16);
if v18 == 0 goto label05;
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.JavaType: boolean isEnumImplType()>();
if v20 != 0 goto label04;
v19 = null;
label04:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)>(v19);
goto label09;
label05:
v21 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v22 = virtualinvoke v21.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v23 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: boolean isIndexedList(java.lang.Class)>(v16);
if v23 == 0 goto label07;
if v22 != class "Ljava/lang/String;" goto label06;
v24 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(v6);
if v24 == 0 goto label08;
v8 = <com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer: com.fasterxml.jackson.databind.ser.impl.IndexedStringListSerializer instance>;
goto label08;
label06:
v25 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v25, v4, v5, v6);
goto label08;
label07:
if v22 != class "Ljava/lang/String;" goto label08;
v26 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(v6);
if v26 == 0 goto label08;
v8 = <com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer: com.fasterxml.jackson.databind.ser.impl.StringCollectionSerializer instance>;
label08:
if v8 != null goto label09;
v27 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.CollectionType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v27, v4, v5, v6);
label09:
v28 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v29 = virtualinvoke v28.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v29 == 0 goto label11;
v30 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v31 = virtualinvoke v30.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v32 = interfaceinvoke v31.<java.lang.Iterable: java.util.Iterator iterator()>();
label10:
v33 = interfaceinvoke v32.<java.util.Iterator: boolean hasNext()>();
if v33 == 0 goto label11;
v34 = interfaceinvoke v32.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v34.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyCollectionSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.CollectionType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v7, v2, v3, v8);
goto label10;
label11:
return v8;
}
protected boolean isIndexedList(java.lang.Class)
{
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v1, v2;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: java.lang.Class;
v2 = class "Ljava/util/RandomAccess;";
v3 = virtualinvoke v2.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.ser.ContainerSerializer buildIndexedListSerializer(com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer v5;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v1;
boolean v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 = new com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer;
specialinvoke v5.<com.fasterxml.jackson.databind.ser.impl.IndexedListSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v4);
return v5;
}
public com.fasterxml.jackson.databind.ser.ContainerSerializer buildCollectionSerializer(com.fasterxml.jackson.databind.JavaType, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.ser.std.CollectionSerializer v5;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v4;
com.fasterxml.jackson.databind.JavaType v1;
boolean v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: boolean;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 := @parameter3: com.fasterxml.jackson.databind.JsonSerializer;
v5 = new com.fasterxml.jackson.databind.ser.std.CollectionSerializer;
specialinvoke v5.<com.fasterxml.jackson.databind.ser.std.CollectionSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v4);
return v5;
}
public com.fasterxml.jackson.databind.JsonSerializer buildEnumSetSerializer(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.ser.std.EnumSetSerializer v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = new com.fasterxml.jackson.databind.ser.std.EnumSetSerializer;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.std.EnumSetSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
return v2;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildMapSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.type.MapType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.JsonSerializer, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v12;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v8;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
com.fasterxml.jackson.databind.JsonSerializer v11, v5, v7;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.type.MapType v2;
boolean v15, v27, v31, v4;
java.util.Set v20, v21, v24;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v26, v28;
com.fasterxml.jackson.databind.ser.std.MapSerializer v25;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v18, v22;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value v19;
com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value v23;
java.lang.Iterable v13, v29;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v10, v9;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.util.Iterator v14, v30;
java.lang.Object v16, v17, v32;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.type.MapType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JsonSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v7 := @parameter6: com.fasterxml.jackson.databind.JsonSerializer;
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v9 = virtualinvoke v8.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v10 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;
if v9 != v10 goto label01;
return null;
label01:
v11 = null;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();
v14 = interfaceinvoke v13.<java.lang.Iterable: java.util.Iterator iterator()>();
label02:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label03;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v11 = interfaceinvoke v16.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v12, v2, v3, v5, v6, v7);
if v11 != null goto label08;
goto label02;
label03:
if v11 != null goto label08;
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3);
if v11 != null goto label08;
v17 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>(v12, v3);
v18 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v19 = virtualinvoke v12.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(class "Ljava/util/Map;", v18);
if v19 != null goto label04;
v20 = null;
goto label05;
label04:
v20 = virtualinvoke v19.<com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value: java.util.Set findIgnoredForSerialization()>();
label05:
v21 = v20;
v22 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v23 = virtualinvoke v12.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(class "Ljava/util/Map;", v22);
if v23 != null goto label06;
v24 = null;
goto label07;
label06:
v24 = virtualinvoke v23.<com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value: java.util.Set getIncluded()>();
label07:
v25 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(v21, v24, v2, v4, v6, v5, v7, v17);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.std.MapSerializer)>(v1, v3, v25);
label08:
v26 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v27 == 0 goto label10;
v28 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v29 = virtualinvoke v28.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v30 = interfaceinvoke v29.<java.lang.Iterable: java.util.Iterator iterator()>();
label09:
v31 = interfaceinvoke v30.<java.util.Iterator: boolean hasNext()>();
if v31 == 0 goto label10;
v32 = interfaceinvoke v30.<java.util.Iterator: java.lang.Object next()>();
v11 = virtualinvoke v32.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyMapSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.MapType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v12, v2, v3, v11);
goto label09;
label10:
return v11;
}
protected com.fasterxml.jackson.databind.ser.std.MapSerializer _checkMapContentInclusion(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.ser.std.MapSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.'annotation'.JsonInclude$Include v6, v7, v8;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v5;
int[] v13;
int v14, v15;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.JavaType v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v10, v12, v18, v19;
com.fasterxml.jackson.databind.ser.std.MapSerializer v11, v22, v3;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.SerializationFeature v9;
java.lang.Class v17, v21;
java.lang.Object v16, v20;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: com.fasterxml.jackson.databind.ser.std.MapSerializer;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.JavaType getContentType()>();
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v1, v2, v4, class "Ljava/util/Map;");
if v5 != null goto label01;
v6 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
goto label02;
label01:
v6 = virtualinvoke v5.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();
label02:
v7 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
if v6 == v7 goto label03;
v8 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;
if v6 != v8 goto label05;
label03:
v9 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_NULL_MAP_VALUES>;
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v9);
if v10 != 0 goto label04;
v11 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean)>(null, 1);
return v11;
label04:
return v3;
label05:
v12 = 1;
v13 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v14 = virtualinvoke v6.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v15 = v13[v14];
tableswitch(v15)
{
case 1: goto label06;
case 2: goto label07;
case 3: goto label10;
case 4: goto label11;
case 5: goto label13;
default: goto label13;
};
label06:
v16 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v4);
if v16 == null goto label14;
v17 = virtualinvoke v16.<java.lang.Object: java.lang.Class getClass()>();
v18 = virtualinvoke v17.<java.lang.Class: boolean isArray()>();
if v18 == 0 goto label14;
v16 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(v16);
goto label14;
label07:
v19 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v19 == 0 goto label08;
v20 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label09;
label08:
v20 = null;
label09:
v16 = v20;
goto label14;
label10:
v16 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label14;
label11:
v21 = virtualinvoke v5.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();
v16 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, v21);
if v16 != null goto label12;
v12 = 1;
goto label14;
label12:
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(v16);
goto label14;
label13:
v16 = null;
label14:
v22 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer withContentInclusion(java.lang.Object,boolean)>(v16, v12);
return v22;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildMapEntrySerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v13;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v7, v8, v9;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v14;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v17, v18, v19;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v16;
int[] v21;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v10, v11;
int v22, v23;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v15, v2, v5, v6;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v20, v26, v27, v4;
com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer v12, v30;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v25, v29;
java.lang.Object v24, v28;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType;
v6 := @parameter5: com.fasterxml.jackson.databind.JavaType;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.'annotation'.JsonFormat$Value getDefaultPropertyFormat(java.lang.Class)>(class "Ljava/util/Map$Entry;");
v8 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v9 = staticinvoke <com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Value merge(com.fasterxml.jackson.'annotation'.JsonFormat$Value,com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(v8, v7);
v10 = virtualinvoke v9.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v11 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;
if v10 != v11 goto label01;
return null;
label01:
v12 = new com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer;
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v13, v6);
specialinvoke v12.<com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v6, v5, v6, v4, v14, null);
v15 = virtualinvoke v12.<com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: com.fasterxml.jackson.databind.JavaType getContentType()>();
v16 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v1, v3, v15, class "Ljava/util/Map$Entry;");
if v16 != null goto label02;
v17 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
goto label03;
label02:
v17 = virtualinvoke v16.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();
label03:
v18 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
if v17 == v18 goto label04;
v19 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;
if v17 != v19 goto label05;
label04:
return v12;
label05:
v20 = 1;
v21 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v22 = virtualinvoke v17.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v23 = v21[v22];
tableswitch(v23)
{
case 1: goto label06;
case 2: goto label07;
case 3: goto label10;
case 4: goto label11;
case 5: goto label13;
default: goto label13;
};
label06:
v24 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v15);
if v24 == null goto label14;
v25 = virtualinvoke v24.<java.lang.Object: java.lang.Class getClass()>();
v26 = virtualinvoke v25.<java.lang.Class: boolean isArray()>();
if v26 == 0 goto label14;
v24 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(v24);
goto label14;
label07:
v27 = virtualinvoke v15.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v27 == 0 goto label08;
v28 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label09;
label08:
v28 = null;
label09:
v24 = v28;
goto label14;
label10:
v24 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label14;
label11:
v29 = virtualinvoke v16.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();
v24 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, v29);
if v24 != null goto label12;
v20 = 1;
goto label14;
label12:
v20 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(v24);
goto label14;
label13:
v24 = null;
label14:
v30 = virtualinvoke v12.<com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer: com.fasterxml.jackson.databind.ser.impl.MapEntrySerializer withContentInclusion(java.lang.Object,boolean)>(v24, v20);
return v30;
}
protected com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.JavaType, java.lang.Class) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v5;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v12, v16;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v10, v6, v7, v8;
int[] v11;
int v13, v14;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v15, v4, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: java.lang.Class;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion()>();
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonInclude$Value findPropertyInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v6);
v8 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v4, v7);
v9 = virtualinvoke v3.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v10 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonInclude$Value getDefaultPropertyInclusion(java.lang.Class,com.fasterxml.jackson.'annotation'.JsonInclude$Value)>(v9, null);
if v10 == null goto label3;
v11 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v12 = virtualinvoke v10.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getValueInclusion()>();
v13 = virtualinvoke v12.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v14 = v11[v13];
lookupswitch(v14)
{
case 4: goto label1;
case 6: goto label3;
default: goto label2;
};
label1:
v15 = virtualinvoke v10.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();
v8 = virtualinvoke v8.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value withContentFilter(java.lang.Class)>(v15);
goto label3;
label2:
v16 = virtualinvoke v10.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getValueInclusion()>();
v8 = virtualinvoke v8.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Value withContentInclusion(com.fasterxml.jackson.'annotation'.JsonInclude$Include)>(v16);
label3:
return v8;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildArraySerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.type.ArrayType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v7;
java.lang.Iterable v20, v9;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
com.fasterxml.jackson.databind.type.ArrayType v2;
com.fasterxml.jackson.databind.JsonSerializer v6, v8;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v16;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v11, v14, v18, v22, v4;
java.util.Iterator v10, v21;
com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer v15;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v17, v19;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v13;
java.lang.Object v12, v23;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.type.ArrayType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v8 = null;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();
v10 = interfaceinvoke v9.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v12.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v7, v2, v3, v5, v6);
if v8 != null goto label6;
goto label1;
label2:
if v8 != null goto label6;
v13 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.ArrayType: java.lang.Class getRawClass()>();
if v6 == null goto label3;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isJacksonStdImpl(java.lang.Object)>(v6);
if v14 == 0 goto label5;
label3:
if class "[Ljava/lang/String;" != v13 goto label4;
v8 = <com.fasterxml.jackson.databind.ser.impl.StringArraySerializer: com.fasterxml.jackson.databind.ser.impl.StringArraySerializer instance>;
goto label5;
label4:
v8 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdArraySerializers: com.fasterxml.jackson.databind.JsonSerializer findStandardImpl(java.lang.Class)>(v13);
label5:
if v8 != null goto label6;
v15 = new com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer;
v16 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.ArrayType: com.fasterxml.jackson.databind.JavaType getContentType()>();
specialinvoke v15.<com.fasterxml.jackson.databind.ser.std.ObjectArraySerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v16, v4, v5, v6);
v8 = v15;
label6:
v17 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v18 = virtualinvoke v17.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v18 == 0 goto label8;
v19 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v21 = interfaceinvoke v20.<java.lang.Iterable: java.util.Iterator iterator()>();
label7:
v22 = interfaceinvoke v21.<java.util.Iterator: boolean hasNext()>();
if v22 == 0 goto label8;
v23 = interfaceinvoke v21.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v23.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyArraySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ArrayType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v7, v2, v3, v8);
goto label7;
label8:
return v8;
}
public com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.type.ReferenceType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v7;
java.lang.Iterable v9;
com.fasterxml.jackson.databind.JsonSerializer v13, v15;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v5;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v11, v14, v4;
java.util.Iterator v10;
com.fasterxml.jackson.databind.type.ReferenceType v2;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Object v12, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.type.ReferenceType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.ReferenceType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getTypeHandler()>();
v7 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
if v6 != null goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v7, v5);
label1:
v8 = virtualinvoke v5.<com.fasterxml.jackson.databind.JavaType: java.lang.Object getValueHandler()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.lang.Iterable customSerializers()>();
v10 = interfaceinvoke v9.<java.lang.Iterable: java.util.Iterator iterator()>();
label2:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label3;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v7, v2, v3, v6, v8);
if v13 == null goto label2;
return v13;
label3:
v14 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.ReferenceType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Ljava/util/concurrent/atomic/AtomicReference;");
if v14 == 0 goto label4;
v15 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v4, v6, v8);
return v15;
label4:
return null;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildAtomicReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.type.ReferenceType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.jsontype.TypeSerializer, com.fasterxml.jackson.databind.JsonSerializer) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer v22;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v5;
com.fasterxml.jackson.'annotation'.JsonInclude$Include v10, v11, v9;
com.fasterxml.jackson.'annotation'.JsonInclude$Value v8;
int[] v14;
int v15, v16;
com.fasterxml.jackson.databind.JsonSerializer v6;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v7;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v13, v18, v19, v4;
com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer v23;
com.fasterxml.jackson.databind.type.ReferenceType v2;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v17, v21;
java.lang.Object v12, v20;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.type.ReferenceType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v6 := @parameter5: com.fasterxml.jackson.databind.JsonSerializer;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.ReferenceType: com.fasterxml.jackson.databind.JavaType getReferencedType()>();
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.'annotation'.JsonInclude$Value _findInclusionWithContent(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v1, v3, v7, class "Ljava/util/concurrent/atomic/AtomicReference;");
if v8 != null goto label01;
v9 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
goto label02;
label01:
v9 = virtualinvoke v8.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: com.fasterxml.jackson.'annotation'.JsonInclude$Include getContentInclusion()>();
label02:
v10 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include USE_DEFAULTS>;
if v9 == v10 goto label03;
v11 = <com.fasterxml.jackson.'annotation'.JsonInclude$Include: com.fasterxml.jackson.'annotation'.JsonInclude$Include ALWAYS>;
if v9 != v11 goto label04;
label03:
v12 = null;
v13 = 0;
goto label13;
label04:
v13 = 1;
v14 = <com.fasterxml.jackson.databind.ser.BasicSerializerFactory$1: int[] $SwitchMap$com$fasterxml$jackson$annotation$JsonInclude$Include>;
v15 = virtualinvoke v9.<com.fasterxml.jackson.'annotation'.JsonInclude$Include: int ordinal()>();
v16 = v14[v15];
tableswitch(v16)
{
case 1: goto label05;
case 2: goto label06;
case 3: goto label09;
case 4: goto label10;
case 5: goto label12;
default: goto label12;
};
label05:
v12 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.Object getDefaultValue(com.fasterxml.jackson.databind.JavaType)>(v7);
if v12 == null goto label13;
v17 = virtualinvoke v12.<java.lang.Object: java.lang.Class getClass()>();
v18 = virtualinvoke v17.<java.lang.Class: boolean isArray()>();
if v18 == 0 goto label13;
v12 = staticinvoke <com.fasterxml.jackson.databind.util.ArrayBuilders: java.lang.Object getArrayComparator(java.lang.Object)>(v12);
goto label13;
label06:
v19 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v19 == 0 goto label07;
v20 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label08;
label07:
v20 = null;
label08:
v12 = v20;
goto label13;
label09:
v12 = <com.fasterxml.jackson.databind.ser.std.MapSerializer: java.lang.Object MARKER_FOR_EMPTY>;
goto label13;
label10:
v21 = virtualinvoke v8.<com.fasterxml.jackson.'annotation'.JsonInclude$Value: java.lang.Class getContentFilter()>();
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object includeFilterInstance(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,java.lang.Class)>(null, v21);
if v12 != null goto label11;
v13 = 1;
goto label13;
label11:
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean includeFilterSuppressNulls(java.lang.Object)>(v12);
goto label13;
label12:
v12 = null;
label13:
v22 = new com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer;
specialinvoke v22.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: void <init>(com.fasterxml.jackson.databind.type.ReferenceType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer)>(v2, v4, v5, v6);
v23 = virtualinvoke v22.<com.fasterxml.jackson.databind.ser.std.AtomicReferenceSerializer: com.fasterxml.jackson.databind.ser.std.ReferenceTypeSerializer withContentInclusion(java.lang.Object,boolean)>(v12, v13);
return v23;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildIteratorSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v7;
com.fasterxml.jackson.databind.ser.impl.IteratorSerializer v6;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v2, v5;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType;
v6 = new com.fasterxml.jackson.databind.ser.impl.IteratorSerializer;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v1, v5);
specialinvoke v6.<com.fasterxml.jackson.databind.ser.impl.IteratorSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v5, v4, v7);
return v6;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildIterableSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v7;
com.fasterxml.jackson.databind.ser.std.IterableSerializer v6;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v2, v5;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.JavaType;
v6 = new com.fasterxml.jackson.databind.ser.std.IterableSerializer;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v1, v5);
specialinvoke v6.<com.fasterxml.jackson.databind.ser.std.IterableSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v5, v4, v7);
return v6;
}
protected com.fasterxml.jackson.databind.JsonSerializer buildEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v4;
java.lang.Iterable v12;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v5, v6;
com.fasterxml.jackson.databind.JsonSerializer v8;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v2;
boolean v10, v14;
java.util.Iterator v13;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v11, v9;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
java.lang.Class v7;
java.lang.Object v15;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.'annotation'.JsonFormat$Value findExpectedFormat(com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(null);
v5 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: com.fasterxml.jackson.'annotation'.JsonFormat$Shape getShape()>();
v6 = <com.fasterxml.jackson.'annotation'.JsonFormat$Shape: com.fasterxml.jackson.'annotation'.JsonFormat$Shape OBJECT>;
if v5 != v6 goto label1;
virtualinvoke v3.<com.fasterxml.jackson.databind.introspect.BasicBeanDescription: boolean removeProperty(java.lang.String)>("declaringClass");
return null;
label1:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.ser.std.EnumSerializer: com.fasterxml.jackson.databind.ser.std.EnumSerializer construct(java.lang.Class,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.'annotation'.JsonFormat$Value)>(v7, v1, v3, v4);
v9 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v10 == 0 goto label3;
v11 = v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v12 = virtualinvoke v11.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v13 = interfaceinvoke v12.<java.lang.Iterable: java.util.Iterator iterator()>();
label2:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label3;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v15.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifyEnumSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3, v8);
goto label2;
label3:
return v8;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findKeySerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.Annotated) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v5;
java.lang.Object v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findKeySerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v4 == null goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v4);
return v5;
label1:
return null;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findContentSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.Annotated) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.introspect.Annotated v2;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v5;
java.lang.Object v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.Annotated;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findContentSerializer(com.fasterxml.jackson.databind.introspect.Annotated)>(v2);
if v4 == null goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer serializerInstance(com.fasterxml.jackson.databind.introspect.Annotated,java.lang.Object)>(v2, v4);
return v5;
label1:
return null;
}
protected java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.introspect.AnnotatedClass v4;
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.SerializationConfig v1;
java.lang.Object v5;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Object findFilterId(com.fasterxml.jackson.databind.introspect.Annotated)>(v4);
return v5;
}
protected boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.jsontype.TypeSerializer)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing v6, v7, v8;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
com.fasterxml.jackson.databind.MapperFeature v10;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v5;
com.fasterxml.jackson.databind.ser.BasicSerializerFactory v0;
com.fasterxml.jackson.databind.BeanDescription v2;
boolean v11, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.BasicSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
if v3 == null goto label1;
return 0;
label1:
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing findSerializationTyping(com.fasterxml.jackson.databind.introspect.Annotated)>(v5);
if v6 == null goto label4;
v7 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing DEFAULT_TYPING>;
if v6 == v7 goto label4;
v8 = <com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing: com.fasterxml.jackson.databind.'annotation'.JsonSerialize$Typing STATIC>;
if v6 != v8 goto label2;
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
label4:
v10 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v11 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v10);
return v11;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.std.DateSerializer v31;
boolean v34, v37;
java.util.Collection v32;
com.fasterxml.jackson.databind.ser.std.ToStringSerializer v5;
java.util.HashMap v0, v1;
com.fasterxml.jackson.databind.ser.std.StringSerializer v4;
java.lang.String v11, v13, v15, v18, v21, v24, v27, v3, v30, v39, v41, v43, v7, v9;
java.util.Iterator v33;
com.fasterxml.jackson.databind.ser.std.CalendarSerializer v28;
java.lang.Class v10, v12, v14, v17, v2, v20, v23, v26, v29, v42, v6, v8;
java.lang.Object v35, v36, v38, v40;
com.fasterxml.jackson.databind.ser.std.BooleanSerializer v16, v19;
com.fasterxml.jackson.databind.ser.std.NumberSerializer v22, v25;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = class "Ljava/lang/String;";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = new com.fasterxml.jackson.databind.ser.std.StringSerializer;
specialinvoke v4.<com.fasterxml.jackson.databind.ser.std.StringSerializer: void <init>()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
v5 = <com.fasterxml.jackson.databind.ser.std.ToStringSerializer: com.fasterxml.jackson.databind.ser.std.ToStringSerializer instance>;
v6 = class "Ljava/lang/StringBuffer;";
v7 = virtualinvoke v6.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v7, v5);
v8 = class "Ljava/lang/StringBuilder;";
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v5);
v10 = class "Ljava/lang/Character;";
v11 = virtualinvoke v10.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v5);
v12 = <java.lang.Character: java.lang.Class TYPE>;
v13 = virtualinvoke v12.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v13, v5);
staticinvoke <com.fasterxml.jackson.databind.ser.std.NumberSerializers: void addAll(java.util.Map)>(v1);
v14 = <java.lang.Boolean: java.lang.Class TYPE>;
v15 = virtualinvoke v14.<java.lang.Class: java.lang.String getName()>();
v16 = new com.fasterxml.jackson.databind.ser.std.BooleanSerializer;
specialinvoke v16.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer: void <init>(boolean)>(1);
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v16);
v17 = class "Ljava/lang/Boolean;";
v18 = virtualinvoke v17.<java.lang.Class: java.lang.String getName()>();
v19 = new com.fasterxml.jackson.databind.ser.std.BooleanSerializer;
specialinvoke v19.<com.fasterxml.jackson.databind.ser.std.BooleanSerializer: void <init>(boolean)>(0);
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v18, v19);
v20 = class "Ljava/math/BigInteger;";
v21 = virtualinvoke v20.<java.lang.Class: java.lang.String getName()>();
v22 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer;
specialinvoke v22.<com.fasterxml.jackson.databind.ser.std.NumberSerializer: void <init>(java.lang.Class)>(class "Ljava/math/BigInteger;");
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v21, v22);
v23 = class "Ljava/math/BigDecimal;";
v24 = virtualinvoke v23.<java.lang.Class: java.lang.String getName()>();
v25 = new com.fasterxml.jackson.databind.ser.std.NumberSerializer;
specialinvoke v25.<com.fasterxml.jackson.databind.ser.std.NumberSerializer: void <init>(java.lang.Class)>(class "Ljava/math/BigDecimal;");
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v24, v25);
v26 = class "Ljava/util/Calendar;";
v27 = virtualinvoke v26.<java.lang.Class: java.lang.String getName()>();
v28 = <com.fasterxml.jackson.databind.ser.std.CalendarSerializer: com.fasterxml.jackson.databind.ser.std.CalendarSerializer instance>;
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v27, v28);
v29 = class "Ljava/util/Date;";
v30 = virtualinvoke v29.<java.lang.Class: java.lang.String getName()>();
v31 = <com.fasterxml.jackson.databind.ser.std.DateSerializer: com.fasterxml.jackson.databind.ser.std.DateSerializer instance>;
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v30, v31);
v32 = staticinvoke <com.fasterxml.jackson.databind.ser.std.StdJdkSerializers: java.util.Collection all()>();
v33 = interfaceinvoke v32.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v34 = interfaceinvoke v33.<java.util.Iterator: boolean hasNext()>();
if v34 == 0 goto label3;
v35 = interfaceinvoke v33.<java.util.Iterator: java.lang.Object next()>();
v36 = interfaceinvoke v35.<java.util.Map$Entry: java.lang.Object getValue()>();
v37 = v36 instanceof com.fasterxml.jackson.databind.JsonSerializer;
if v37 == 0 goto label2;
v38 = interfaceinvoke v35.<java.util.Map$Entry: java.lang.Object getKey()>();
v39 = virtualinvoke v38.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v39, v36);
goto label1;
label2:
v40 = interfaceinvoke v35.<java.util.Map$Entry: java.lang.Object getKey()>();
v41 = virtualinvoke v40.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v41, v36);
goto label1;
label3:
v42 = class "Lcom/fasterxml/jackson/databind/util/TokenBuffer;";
v43 = virtualinvoke v42.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v0.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v43, class "Lcom/fasterxml/jackson/databind/ser/std/TokenBufferSerializer;");
<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concrete> = v1;
<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: java.util.HashMap _concreteLazy> = v0;
return;
}
}