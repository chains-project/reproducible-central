public class com.fasterxml.jackson.databind.ser.BeanSerializerBuilder extends java.lang.Object
{
private static final com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES;
protected final com.fasterxml.jackson.databind.BeanDescription _beanDesc;
protected com.fasterxml.jackson.databind.SerializationConfig _config;
protected java.util.List _properties;
protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties;
protected com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter;
protected java.lang.Object _filterId;
protected com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId;
protected com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter;
public void <init>(com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.BeanDescription v1;
java.util.List v2;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties> = v2;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc> = v1;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
{
com.fasterxml.jackson.databind.ser.AnyGetterWriter v7;
com.fasterxml.jackson.databind.SerializationConfig v4;
java.util.List v2, v5;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v6;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v9;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v10;
com.fasterxml.jackson.databind.BeanDescription v3;
java.lang.Object v8;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties> = v2;
v3 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc> = v3;
v4 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config> = v4;
v5 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties> = v5;
v6 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties> = v6;
v7 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter> = v7;
v8 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.lang.Object _filterId>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.lang.Object _filterId> = v8;
v9 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = v9;
v10 = v1.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = v10;
return;
}
protected void setConfig(com.fasterxml.jackson.databind.SerializationConfig)
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config> = v1;
return;
}
public void setProperties(java.util.List)
{
java.util.List v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: java.util.List;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties> = v1;
return;
}
public void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
{
java.lang.Object[] v6;
java.lang.IllegalArgumentException v5;
java.lang.Integer v11, v8;
java.util.List v3, v9;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v1;
int v10, v2, v4, v7;
java.lang.String v12;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
if v1 == null goto label1;
v2 = lengthof v1;
v3 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
if v2 == v4 goto label1;
v5 = new java.lang.IllegalArgumentException;
v6 = newarray (java.lang.Object)[2];
v7 = lengthof v1;
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
v6[0] = v8;
v9 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v10 = interfaceinvoke v9.<java.util.List: int size()>();
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v10);
v6[1] = v11;
v12 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Trying to set %d filtered properties; must match length of non-filtered `properties` (%d)", v6);
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v12);
throw v5;
label1:
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties> = v1;
return;
}
public void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter)
{
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
com.fasterxml.jackson.databind.ser.AnyGetterWriter v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.AnyGetterWriter;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter> = v1;
return;
}
public void setFilterId(java.lang.Object)
{
java.lang.Object v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: java.lang.Object;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.lang.Object _filterId> = v1;
return;
}
public void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)
{
com.fasterxml.jackson.databind.introspect.AnnotatedMember v1, v2, v4;
java.lang.String v5;
java.lang.IllegalArgumentException v3;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v2 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;
if v2 == null goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v4, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Multiple type ids specified with \u0001 and \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId> = v1;
return;
}
public void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
{
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter> = v1;
return;
}
public com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()
{
com.fasterxml.jackson.databind.BeanDescription v1;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v2;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
return v2;
}
public com.fasterxml.jackson.databind.BeanDescription getBeanDescription()
{
com.fasterxml.jackson.databind.BeanDescription v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
return v1;
}
public java.util.List getProperties()
{
java.util.List v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
return v1;
}
public boolean hasProperties()
{
java.util.List v1, v2;
int v3;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v3 = interfaceinvoke v2.<java.util.List: int size()>();
if v3 <= 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] getFilteredProperties()
{
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties>;
return v1;
}
public com.fasterxml.jackson.databind.ser.AnyGetterWriter getAnyGetter()
{
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
com.fasterxml.jackson.databind.ser.AnyGetterWriter v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter>;
return v1;
}
public java.lang.Object getFilterId()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.lang.Object _filterId>;
return v1;
}
public com.fasterxml.jackson.databind.introspect.AnnotatedMember getTypeId()
{
com.fasterxml.jackson.databind.introspect.AnnotatedMember v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;
return v1;
}
public com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter getObjectIdWriter()
{
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v1;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer build()
{
java.lang.IllegalStateException v35;
com.fasterxml.jackson.databind.ser.BeanSerializer v44;
com.fasterxml.jackson.databind.SerializationConfig v11, v2, v23, v29, v6;
java.lang.Integer v39, v42;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v1, v5;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v16;
com.fasterxml.jackson.databind.BeanDescription v45;
boolean v14, v25, v4, v8;
com.fasterxml.jackson.databind.ser.AnyGetterWriter v10, v15, v9;
java.util.List v12, v13, v18, v19, v33, v37;
java.lang.Object[] v22, v36;
com.fasterxml.jackson.databind.MapperFeature v24, v3, v7;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v17, v21, v30, v31, v40, v47;
int v20, v26, v27, v32, v34, v38, v41;
com.fasterxml.jackson.databind.JavaType v46;
java.lang.String v43;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v28;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;
if v1 == null goto label1;
v2 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS>;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
if v4 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.introspect.AnnotatedMember _typeId>;
v6 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v7 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature OVERRIDE_PUBLIC_ACCESS_MODIFIERS>;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v7);
virtualinvoke v5.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: void fixAccess(boolean)>(v8);
label1:
v9 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter>;
if v9 == null goto label2;
v10 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter>;
v11 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
virtualinvoke v10.<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void fixAccess(com.fasterxml.jackson.databind.SerializationConfig)>(v11);
label2:
v12 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
if v12 == null goto label3;
v13 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v14 = interfaceinvoke v13.<java.util.List: boolean isEmpty()>();
if v14 == 0 goto label5;
label3:
v15 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.AnyGetterWriter _anyGetter>;
if v15 != null goto label4;
v16 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
if v16 != null goto label4;
return null;
label4:
v17 = <com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES>;
goto label7;
label5:
v18 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v19 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v20 = interfaceinvoke v19.<java.util.List: int size()>();
v21 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[v20];
v22 = interfaceinvoke v18.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v21);
v23 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
v24 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature CAN_OVERRIDE_ACCESS_MODIFIERS>;
v25 = virtualinvoke v23.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v24);
if v25 == 0 goto label7;
v26 = 0;
v27 = lengthof v22;
label6:
if v26 >= v27 goto label7;
v28 = v22[v26];
v29 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.SerializationConfig _config>;
virtualinvoke v28.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void fixAccess(com.fasterxml.jackson.databind.SerializationConfig)>(v29);
v26 = v26 + 1;
goto label6;
label7:
v30 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties>;
if v30 == null goto label8;
v31 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties>;
v32 = lengthof v31;
v33 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v34 = interfaceinvoke v33.<java.util.List: int size()>();
if v32 == v34 goto label8;
v35 = new java.lang.IllegalStateException;
v36 = newarray (java.lang.Object)[2];
v37 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List _properties>;
v38 = interfaceinvoke v37.<java.util.List: int size()>();
v39 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v38);
v36[0] = v39;
v40 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties>;
v41 = lengthof v40;
v42 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v41);
v36[1] = v42;
v43 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Mismatch between `properties` size (%d), `filteredProperties` (%s): should have as many (or `null` for latter)", v36);
specialinvoke v35.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v43);
throw v35;
label8:
v44 = new com.fasterxml.jackson.databind.ser.BeanSerializer;
v45 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v46 = virtualinvoke v45.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v47 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] _filteredProperties>;
specialinvoke v44.<com.fasterxml.jackson.databind.ser.BeanSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(v46, v0, v22, v47);
return v44;
}
public com.fasterxml.jackson.databind.ser.BeanSerializer createDummy()
{
com.fasterxml.jackson.databind.ser.BeanSerializer v3;
com.fasterxml.jackson.databind.BeanDescription v1;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v0;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.BeanDescription _beanDesc>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.ser.BeanSerializer: com.fasterxml.jackson.databind.ser.BeanSerializer createDummy(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>(v2, v0);
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v0;
v0 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[0];
<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] NO_PROPERTIES> = v0;
return;
}
}