public class com.fasterxml.jackson.databind.ser.BeanSerializerFactory extends com.fasterxml.jackson.databind.ser.BasicSerializerFactory implements java.io.Serializable
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance;
protected void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BasicSerializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(v1);
return;
}
public com.fasterxml.jackson.databind.ser.SerializerFactory withConfig(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)
{
java.lang.IllegalStateException v4;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0, v8;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v1, v2;
java.lang.Class v3, v5;
java.lang.String v6, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig;
v2 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
if v2 != v1 goto label1;
return v0;
label1:
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v3 == class "Lcom/fasterxml/jackson/databind/ser/BeanSerializerFactory;" goto label2;
v4 = new java.lang.IllegalStateException;
v5 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Subtype of BeanSerializerFactory (\u0001) has not properly overridden method \'withAdditionalSerializers\': cannot instantiate subtype with additional serializer definitions");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v4;
label2:
v8 = new com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
specialinvoke v8.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(v1);
return v8;
}
protected java.lang.Iterable customSerializers()
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v1;
java.lang.Iterable v2;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializers()>();
return v2;
}
public com.fasterxml.jackson.databind.JsonSerializer createSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.util.Converter v17;
java.lang.Object[] v12;
com.fasterxml.jackson.databind.AnnotationIntrospector v7;
com.fasterxml.jackson.databind.SerializationConfig v3;
com.fasterxml.jackson.databind.type.TypeFactory v19;
com.fasterxml.jackson.databind.JsonSerializer v18, v6;
com.fasterxml.jackson.databind.BeanDescription v4;
com.fasterxml.jackson.databind.JavaType v2, v20, v8;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v11;
boolean v14, v16, v22, v24;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v23, v5, v9;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v25;
java.lang.Class v15, v21;
java.lang.Object v13;
com.fasterxml.jackson.databind.JsonMappingException v10;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v2);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v5);
if v6 == null goto label01;
return v6;
label01:
v7 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
if v7 != null goto label02;
v8 = v2;
goto label05;
label02:
v9 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.JavaType refineSerializationType(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.JavaType)>(v3, v9, v2);
label03:
goto label05;
label04:
v10 := @caughtexception;
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.JsonMappingException: java.lang.String getMessage()>();
v12 = newarray (java.lang.Object)[0];
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[])>(v4, v11, v12);
return v13;
label05:
if v8 != v2 goto label06;
v14 = 0;
goto label07;
label06:
v14 = 1;
v15 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v16 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(v15);
if v16 != 0 goto label07;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v8);
label07:
v17 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.util.Converter findSerializationConverter()>();
if v17 != null goto label08;
v18 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v8, v4, v14);
return v18;
label08:
v19 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v20 = interfaceinvoke v17.<com.fasterxml.jackson.databind.util.Converter: com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)>(v19);
v21 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v22 = virtualinvoke v20.<com.fasterxml.jackson.databind.JavaType: boolean hasRawClass(java.lang.Class)>(v21);
if v22 != 0 goto label09;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspect(com.fasterxml.jackson.databind.JavaType)>(v20);
v23 = virtualinvoke v4.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v23);
label09:
if v6 != null goto label10;
v24 = virtualinvoke v20.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v24 != 0 goto label10;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v20, v4, 1);
label10:
v25 = new com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
specialinvoke v25.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v17, v20, v6);
return v25;
catch com.fasterxml.jackson.databind.JsonMappingException from label02 to label03 with label04;
}
protected com.fasterxml.jackson.databind.JsonSerializer _createSerializer2(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.SerializationConfig v6;
java.lang.Iterable v17, v9;
com.fasterxml.jackson.databind.JsonSerializer v5;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v11, v15, v19, v4, v7, v8;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v10, v18;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v14, v16;
java.lang.Class v13;
java.lang.Object v12, v20;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = null;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v7 == 0 goto label2;
if v4 != 0 goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v6, v3, null);
label1:
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer buildContainerSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v4);
if v5 == null goto label6;
return v5;
label2:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v8 == 0 goto label3;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findReferenceSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.type.ReferenceType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v4);
goto label5;
label3:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.lang.Iterable customSerializers()>();
v10 = interfaceinvoke v9.<java.lang.Iterable: java.util.Iterator iterator()>();
label4:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label5;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v12.<com.fasterxml.jackson.databind.ser.Serializers: com.fasterxml.jackson.databind.JsonSerializer findSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v6, v2, v3);
if v5 != null goto label7;
goto label4;
label5:
if v5 != null goto label7;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAnnotations(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3);
label6:
if v5 != null goto label7;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByLookup(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v2, v6, v3, v4);
if v5 != null goto label7;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByPrimaryType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v4);
if v5 != null goto label7;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v4);
if v5 != null goto label7;
v13 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(v13);
label7:
if v5 == null goto label9;
v14 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v15 = virtualinvoke v14.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v15 == 0 goto label9;
v16 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v18 = interfaceinvoke v17.<java.lang.Iterable: java.util.Iterator iterator()>();
label8:
v19 = interfaceinvoke v18.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label9;
v20 = interfaceinvoke v18.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v20.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.JsonSerializer modifySerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.JsonSerializer)>(v6, v3, v5);
goto label8;
label9:
return v5;
}
public com.fasterxml.jackson.databind.JsonSerializer findBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.MapperFeature v4;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v6;
com.fasterxml.jackson.databind.BeanDescription v3;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v5);
return v6;
}
public com.fasterxml.jackson.databind.JsonSerializer findBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v9;
com.fasterxml.jackson.databind.BeanDescription v3;
java.lang.Class v5, v7;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean isPotentialBeanType(java.lang.Class)>(v5);
if v6 != 0 goto label1;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v8 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isEnumType(java.lang.Class)>(v7);
if v8 != 0 goto label1;
return null;
label1:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v2, v3, v4);
return v9;
}
public com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMember) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
java.util.Collection v8;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v7;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v6;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v3;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v5;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)>(v2, v3, v1);
if v5 != null goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v2, v1);
goto label2;
label1:
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)>(v2, v3, v1);
v6 = interfaceinvoke v5.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(v2, v1, v8);
label2:
return v6;
}
public com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.introspect.AnnotatedMember) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.AnnotationIntrospector v5;
java.util.Collection v9;
com.fasterxml.jackson.databind.jsontype.SubtypeResolver v8;
com.fasterxml.jackson.databind.SerializationConfig v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v7;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v3;
com.fasterxml.jackson.databind.JavaType v1, v4;
com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder v6;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializationConfig;
v3 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v6 = virtualinvoke v5.<com.fasterxml.jackson.databind.AnnotationIntrospector: com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder findPropertyContentTypeResolver(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)>(v2, v3, v1);
if v6 != null goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v2, v4);
goto label2;
label1:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.jsontype.SubtypeResolver getSubtypeResolver()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.jsontype.SubtypeResolver: java.util.Collection collectAndResolveSubtypesByClass(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JavaType)>(v2, v3, v4);
v7 = interfaceinvoke v6.<com.fasterxml.jackson.databind.jsontype.TypeResolverBuilder: com.fasterxml.jackson.databind.jsontype.TypeSerializer buildTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,java.util.Collection)>(v2, v4, v9);
label2:
return v7;
}
protected com.fasterxml.jackson.databind.JsonSerializer constructBeanSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.MapperFeature v4;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.JsonSerializer v6;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.JavaType v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v4 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v4);
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v1, v3, v2, v5);
return v6;
}
protected com.fasterxml.jackson.databind.JsonSerializer constructBeanOrAddOnSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanSerializer v66, v68;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v38;
com.fasterxml.jackson.databind.JsonSerializer v39, v55, v6, v7;
com.fasterxml.jackson.databind.PropertyName v44;
java.util.Set v40;
java.lang.Object[] v57;
java.util.ArrayList v13;
com.fasterxml.jackson.databind.JavaType v2, v36, v37, v58;
java.lang.String v43, v60, v61;
java.lang.RuntimeException v56;
com.fasterxml.jackson.databind.BeanProperty$Std v45;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v11;
com.fasterxml.jackson.databind.AnnotationIntrospector v15;
com.fasterxml.jackson.databind.SerializationConfig v10;
com.fasterxml.jackson.databind.PropertyMetadata v46;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v35;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v33;
com.fasterxml.jackson.databind.BeanDescription v3;
boolean v18, v22, v27, v31, v4, v42, v49, v53, v63, v65, v67, v8;
com.fasterxml.jackson.databind.ser.AnyGetterWriter v47;
com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig v17, v19, v26, v28, v48, v50;
java.util.List v12, v14, v24, v25;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v16;
com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer v9;
java.lang.Iterable v20, v29, v51;
com.fasterxml.jackson.databind.MapperFeature v41;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v21, v30, v52;
java.lang.Class v5, v59, v64;
java.lang.Object v23, v32, v34, v54, v62;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 := @parameter3: boolean;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
if v5 != class "Ljava/lang/Object;" goto label01;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer getUnknownTypeSerializer(java.lang.Class)>(class "Ljava/lang/Object;");
return v6;
label01:
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer _findUnsupportedTypeSerializer(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2, v3);
if v7 == null goto label02;
return v7;
label02:
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean _isUnserializableJacksonType(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
if v8 == 0 goto label03;
v9 = new com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer;
specialinvoke v9.<com.fasterxml.jackson.databind.ser.std.ToEmptyObjectSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v2);
return v9;
label03:
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)>(v3);
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setConfig(com.fasterxml.jackson.databind.SerializationConfig)>(v10);
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>(v1, v3, v11);
if v12 != null goto label04;
v13 = new java.util.ArrayList;
specialinvoke v13.<java.util.ArrayList: void <init>()>();
v14 = v13;
goto label05;
label04:
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.util.List removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder,java.util.List)>(v1, v3, v11, v12);
label05:
v15 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v16 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
virtualinvoke v15.<com.fasterxml.jackson.databind.AnnotationIntrospector: void findAndAddVirtualProperties(com.fasterxml.jackson.databind.cfg.MapperConfig,com.fasterxml.jackson.databind.introspect.AnnotatedClass,java.util.List)>(v10, v16, v14);
v17 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v18 = virtualinvoke v17.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v18 == 0 goto label07;
v19 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v20 = virtualinvoke v19.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v21 = interfaceinvoke v20.<java.lang.Iterable: java.util.Iterator iterator()>();
label06:
v22 = interfaceinvoke v21.<java.util.Iterator: boolean hasNext()>();
if v22 == 0 goto label07;
v23 = interfaceinvoke v21.<java.util.Iterator: java.lang.Object next()>();
v14 = virtualinvoke v23.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: java.util.List changeProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v10, v3, v14);
goto label06;
label07:
v24 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.util.List filterUnwantedJDKProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v10, v3, v14);
v25 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v10, v3, v24);
v26 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v27 = virtualinvoke v26.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v27 == 0 goto label09;
v28 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v29 = virtualinvoke v28.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v30 = interfaceinvoke v29.<java.lang.Iterable: java.util.Iterator iterator()>();
label08:
v31 = interfaceinvoke v30.<java.util.Iterator: boolean hasNext()>();
if v31 == 0 goto label09;
v32 = interfaceinvoke v30.<java.util.Iterator: java.lang.Object next()>();
v25 = virtualinvoke v32.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: java.util.List orderProperties(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v10, v3, v25);
goto label08;
label09:
v33 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v1, v3, v25);
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(v33);
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setProperties(java.util.List)>(v25);
v34 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: java.lang.Object findFilterId(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>(v10, v3);
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setFilterId(java.lang.Object)>(v34);
v35 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedMember findAnyGetter()>();
if v35 == null goto label11;
v36 = virtualinvoke v35.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.JavaType getType()>();
v37 = virtualinvoke v36.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType getContentType()>();
v38 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer createTypeSerializer(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType)>(v10, v37);
v39 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v35);
if v39 != null goto label10;
v40 = null;
v41 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature USE_STATIC_TYPING>;
v42 = virtualinvoke v10.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v41);
v39 = staticinvoke <com.fasterxml.jackson.databind.ser.std.MapSerializer: com.fasterxml.jackson.databind.ser.std.MapSerializer construct(java.util.Set,com.fasterxml.jackson.databind.JavaType,boolean,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.JsonSerializer,java.lang.Object)>(v40, v36, v42, v38, null, null, null);
label10:
v43 = virtualinvoke v35.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.String getName()>();
v44 = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName construct(java.lang.String)>(v43);
v45 = new com.fasterxml.jackson.databind.BeanProperty$Std;
v46 = <com.fasterxml.jackson.databind.PropertyMetadata: com.fasterxml.jackson.databind.PropertyMetadata STD_OPTIONAL>;
specialinvoke v45.<com.fasterxml.jackson.databind.BeanProperty$Std: void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)>(v44, v37, null, v35, v46);
v47 = new com.fasterxml.jackson.databind.ser.AnyGetterWriter;
specialinvoke v47.<com.fasterxml.jackson.databind.ser.AnyGetterWriter: void <init>(com.fasterxml.jackson.databind.BeanProperty,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.JsonSerializer)>(v45, v35, v39);
virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setAnyGetter(com.fasterxml.jackson.databind.ser.AnyGetterWriter)>(v47);
label11:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void processViews(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>(v10, v11);
v48 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v49 = virtualinvoke v48.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: boolean hasSerializerModifiers()>();
if v49 == 0 goto label13;
v50 = v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig _factoryConfig>;
v51 = virtualinvoke v50.<com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig: java.lang.Iterable serializerModifiers()>();
v52 = interfaceinvoke v51.<java.lang.Iterable: java.util.Iterator iterator()>();
label12:
v53 = interfaceinvoke v52.<java.util.Iterator: boolean hasNext()>();
if v53 == 0 goto label13;
v54 = interfaceinvoke v52.<java.util.Iterator: java.lang.Object next()>();
v11 = virtualinvoke v54.<com.fasterxml.jackson.databind.ser.BeanSerializerModifier: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder updateBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)>(v10, v3, v11);
goto label12;
label13:
v55 = virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.JsonSerializer build()>();
label14:
goto label16;
label15:
v56 := @caughtexception;
v57 = newarray (java.lang.Object)[3];
v58 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v57[0] = v58;
v59 = virtualinvoke v56.<java.lang.Object: java.lang.Class getClass()>();
v60 = virtualinvoke v59.<java.lang.Class: java.lang.String getName()>();
v57[1] = v60;
v61 = virtualinvoke v56.<java.lang.RuntimeException: java.lang.String getMessage()>();
v57[2] = v61;
v62 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadTypeDefinition(com.fasterxml.jackson.databind.BeanDescription,java.lang.String,java.lang.Object[])>(v3, "Failed to construct BeanSerializer for %s: (%s) %s", v57);
return v62;
label16:
if v55 != null goto label18;
v63 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: boolean isRecordType()>();
if v63 == 0 goto label17;
v64 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v65 = staticinvoke <com.fasterxml.jackson.databind.util.NativeImageUtil: boolean needsReflectionConfiguration(java.lang.Class)>(v64);
if v65 != 0 goto label17;
v66 = virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanSerializer createDummy()>();
return v66;
label17:
v55 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerByAddonType(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.BeanDescription,boolean)>(v10, v2, v3, v4);
if v55 != null goto label18;
v67 = virtualinvoke v3.<com.fasterxml.jackson.databind.BeanDescription: boolean hasKnownClassAnnotations()>();
if v67 == 0 goto label18;
v68 = virtualinvoke v11.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: com.fasterxml.jackson.databind.ser.BeanSerializer createDummy()>();
return v68;
label18:
return v55;
catch java.lang.RuntimeException from label13 to label14 with label15;
}
protected com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter constructObjectIdHandler(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, java.util.List) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.type.TypeFactory v24;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v22, v31;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.introspect.ObjectIdInfo v4;
boolean v18, v21, v30;
com.fasterxml.jackson.databind.PropertyName v29, v6;
java.util.List v3;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v27;
java.lang.Object[] v11;
int v8, v9;
com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator v20;
com.fasterxml.jackson.databind.JavaType v12, v19, v23, v26;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v13, v14, v15, v17, v7;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.'annotation'.ObjectIdGenerator v28;
java.lang.IllegalArgumentException v10;
com.fasterxml.jackson.databind.JavaType[] v25;
java.lang.Class v5;
java.lang.Object v16;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.ObjectIdInfo getObjectIdInfo()>();
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: java.lang.Class getGeneratorType()>();
if v5 != class "Lcom/fasterxml/jackson/annotation/ObjectIdGenerators$PropertyGenerator;" goto label6;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: com.fasterxml.jackson.databind.PropertyName getPropertyName()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.PropertyName: java.lang.String getSimpleName()>();
v8 = 0;
v9 = interfaceinvoke v3.<java.util.List: int size()>();
label2:
if v8 != v9 goto label3;
v10 = new java.lang.IllegalArgumentException;
v11 = newarray (java.lang.Object)[2];
v12 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v13 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String getTypeDescription(com.fasterxml.jackson.databind.JavaType)>(v12);
v11[0] = v13;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String name(java.lang.String)>(v7);
v11[1] = v14;
v15 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Invalid Object Id definition for %s: cannot find property with name %s", v11);
specialinvoke v10.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v10;
label3:
v16 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v8);
v17 = virtualinvoke v16.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();
v18 = virtualinvoke v7.<java.lang.String: boolean equals(java.lang.Object)>(v17);
if v18 == 0 goto label4;
if v8 <= 0 goto label5;
interfaceinvoke v3.<java.util.List: java.lang.Object remove(int)>(v8);
interfaceinvoke v3.<java.util.List: void add(int,java.lang.Object)>(0, v16);
goto label5;
label4:
v8 = v8 + 1;
goto label2;
label5:
v19 = virtualinvoke v16.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.JavaType getType()>();
v20 = new com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator;
specialinvoke v20.<com.fasterxml.jackson.databind.ser.impl.PropertyBasedObjectIdGenerator: void <init>(com.fasterxml.jackson.databind.introspect.ObjectIdInfo,com.fasterxml.jackson.databind.ser.BeanPropertyWriter)>(v4, v16);
v21 = virtualinvoke v4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: boolean getAlwaysAsId()>();
v22 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.'annotation'.ObjectIdGenerator,boolean)>(v19, null, v20, v21);
return v22;
label6:
v23 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JavaType constructType(java.lang.reflect.Type)>(v5);
v24 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v25 = virtualinvoke v24.<com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType[] findTypeParameters(com.fasterxml.jackson.databind.JavaType,java.lang.Class)>(v23, class "Lcom/fasterxml/jackson/annotation/ObjectIdGenerator;");
v26 = v25[0];
v27 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v28 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.'annotation'.ObjectIdGenerator objectIdGeneratorInstance(com.fasterxml.jackson.databind.introspect.Annotated,com.fasterxml.jackson.databind.introspect.ObjectIdInfo)>(v27, v4);
v29 = virtualinvoke v4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: com.fasterxml.jackson.databind.PropertyName getPropertyName()>();
v30 = virtualinvoke v4.<com.fasterxml.jackson.databind.introspect.ObjectIdInfo: boolean getAlwaysAsId()>();
v31 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter construct(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.'annotation'.ObjectIdGenerator,boolean)>(v26, v29, v28, v30);
return v31;
}
protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter, java.lang.Class[])
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v1, v3;
java.lang.Class[] v2;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
v2 := @parameter1: java.lang.Class[];
v3 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.FilteredBeanPropertyWriter: com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructViewBased(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])>(v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.ser.PropertyBuilder v3;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.SerializationConfig v1;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 = new com.fasterxml.jackson.databind.ser.PropertyBuilder;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.PropertyBuilder: void <init>(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>(v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ser.BeanSerializerBuilder constructBeanSerializerBuilder(com.fasterxml.jackson.databind.BeanDescription)
{
com.fasterxml.jackson.databind.BeanDescription v1;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v2;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.BeanDescription;
v2 = new com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void <init>(com.fasterxml.jackson.databind.BeanDescription)>(v1);
return v2;
}
protected boolean isPotentialBeanType(java.lang.Class)
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.lang.Class v1;
java.lang.String v2;
boolean v3, v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.String canBeABeanType(java.lang.Class)>(v1);
if v2 != null goto label1;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: boolean isProxyType(java.lang.Class)>(v1);
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
protected java.util.List findBeanProperties(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.ser.BeanSerializerBuilder) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v10;
com.fasterxml.jackson.databind.SerializationConfig v5;
java.util.ArrayList v11;
com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty v18;
com.fasterxml.jackson.databind.MapperFeature v6;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v16;
int v12;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v14, v17, v19, v20, v7, v8, v9;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v13;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v21, v22;
java.util.List v4;
java.lang.Object v15;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: java.util.List findProperties()>();
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v5, v2, v4);
v6 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature REQUIRE_SETTERS_FOR_GETTERS>;
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v6);
if v7 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,java.util.List)>(v5, v2, v4);
label1:
v8 = interfaceinvoke v4.<java.util.List: boolean isEmpty()>();
if v8 == 0 goto label2;
return null;
label2:
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: boolean usesStaticTyping(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v5, v2, null);
v10 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.PropertyBuilder constructPropertyBuilder(com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.BeanDescription)>(v5, v2);
v11 = new java.util.ArrayList;
v12 = interfaceinvoke v4.<java.util.List: int size()>();
specialinvoke v11.<java.util.ArrayList: void <init>(int)>(v12);
v13 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label3:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label7;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor()>();
v17 = virtualinvoke v15.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: boolean isTypeId()>();
if v17 == 0 goto label4;
if v16 == null goto label3;
virtualinvoke v3.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setTypeId(com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v16);
goto label3;
label4:
v18 = virtualinvoke v15.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty findReferenceType()>();
if v18 == null goto label5;
v19 = virtualinvoke v18.<com.fasterxml.jackson.databind.AnnotationIntrospector$ReferenceProperty: boolean isBackReference()>();
if v19 != 0 goto label3;
label5:
v20 = v16 instanceof com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
if v20 == 0 goto label6;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v1, v15, v10, v9, v16);
virtualinvoke v11.<java.util.ArrayList: boolean add(java.lang.Object)>(v21);
goto label3;
label6:
v22 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.ser.PropertyBuilder,boolean,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v1, v15, v10, v9, v16);
virtualinvoke v11.<java.util.ArrayList: boolean add(java.lang.Object)>(v22);
goto label3;
label7:
return v11;
}
protected java.util.List filterBeanProperties(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
{
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value v6;
com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value v10;
com.fasterxml.jackson.databind.BeanDescription v2;
java.lang.String v16;
boolean v12, v14, v17;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v13;
java.util.Set v11, v7;
java.util.List v3;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v5, v9;
java.lang.Class v4, v8;
java.lang.Object v15;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v5 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value getDefaultPropertyIgnorals(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v4, v5);
v7 = null;
if v6 == null goto label1;
v7 = virtualinvoke v6.<com.fasterxml.jackson.'annotation'.JsonIgnoreProperties$Value: java.util.Set findIgnoredForSerialization()>();
label1:
v8 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: java.lang.Class getBeanClass()>();
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v10 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value getDefaultPropertyInclusions(java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v8, v9);
v11 = null;
if v10 == null goto label2;
v11 = virtualinvoke v10.<com.fasterxml.jackson.'annotation'.JsonIncludeProperties$Value: java.util.Set getIncluded()>();
label2:
if v11 != null goto label3;
if v7 == null goto label5;
v12 = interfaceinvoke v7.<java.util.Set: boolean isEmpty()>();
if v12 != 0 goto label5;
label3:
v13 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label4:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label5;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();
v17 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil: boolean shouldIgnore(java.lang.Object,java.util.Collection,java.util.Collection)>(v16, v7, v11);
if v17 == 0 goto label4;
interfaceinvoke v13.<java.util.Iterator: void remove()>();
goto label4;
label5:
return v3;
}
protected java.util.List filterUnwantedJDKProperties(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.SerializationConfig v1;
java.util.List v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v8;
int v6;
com.fasterxml.jackson.databind.BeanDescription v2;
java.lang.Class v13;
java.lang.Object v7;
com.fasterxml.jackson.databind.JavaType v4;
java.lang.String v10, v11;
boolean v12, v5, v9;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.JavaType getType()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: boolean isTypeOrSubTypeOf(java.lang.Class)>(class "Ljava/lang/CharSequence;");
if v5 == 0 goto label1;
v6 = interfaceinvoke v3.<java.util.List: int size()>();
if v6 != 1 goto label1;
v7 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(0);
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.introspect.AnnotatedMember getMember()>();
v9 = v8 instanceof com.fasterxml.jackson.databind.introspect.AnnotatedMethod;
if v9 == 0 goto label1;
v10 = "isEmpty";
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.String getName()>();
v12 = virtualinvoke v10.<java.lang.String: boolean equals(java.lang.Object)>(v11);
if v12 == 0 goto label1;
v13 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getDeclaringClass()>();
if v13 != class "Ljava/lang/CharSequence;" goto label1;
interfaceinvoke v3.<java.util.List: java.lang.Object remove(int)>(0);
label1:
return v3;
}
protected void processViews(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.ser.BeanSerializerBuilder)
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v13;
java.lang.Class[] v11;
com.fasterxml.jackson.databind.SerializationConfig v1;
com.fasterxml.jackson.databind.MapperFeature v4;
java.util.List v3;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v8;
int v12, v6, v7, v9;
java.lang.Object v10;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: java.util.List getProperties()>();
v4 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature DEFAULT_VIEW_INCLUSION>;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v4);
v6 = interfaceinvoke v3.<java.util.List: int size()>();
v7 = 0;
v8 = newarray (com.fasterxml.jackson.databind.ser.BeanPropertyWriter)[v6];
v9 = 0;
label1:
if v9 >= v6 goto label5;
v10 = interfaceinvoke v3.<java.util.List: java.lang.Object get(int)>(v9);
v11 = virtualinvoke v10.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.Class[] getViews()>();
if v11 == null goto label2;
v12 = lengthof v11;
if v12 != 0 goto label3;
label2:
if v5 == 0 goto label4;
v8[v9] = v10;
goto label4;
label3:
v7 = v7 + 1;
v13 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanPropertyWriter constructFilteredBeanWriter(com.fasterxml.jackson.databind.ser.BeanPropertyWriter,java.lang.Class[])>(v10, v11);
v8[v9] = v13;
label4:
v9 = v9 + 1;
goto label1;
label5:
if v5 == 0 goto label6;
if v7 != 0 goto label6;
return;
label6:
virtualinvoke v2.<com.fasterxml.jackson.databind.ser.BeanSerializerBuilder: void setFilteredProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(v8);
return;
}
protected void removeIgnorableTypes(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v4;
com.fasterxml.jackson.databind.SerializationConfig v1;
java.util.HashMap v5;
com.fasterxml.jackson.databind.cfg.ConfigOverride v12;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v9;
com.fasterxml.jackson.databind.BeanDescription v13, v2;
boolean v15, v7;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v6;
java.util.List v3;
com.fasterxml.jackson.databind.introspect.AnnotatedClass v14;
java.lang.Class v10;
java.lang.Object v11, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v5 = new java.util.HashMap;
specialinvoke v5.<java.util.HashMap: void <init>()>();
v6 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label5;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.introspect.AnnotatedMember getAccessor()>();
if v9 != null goto label2;
interfaceinvoke v6.<java.util.Iterator: void remove()>();
goto label1;
label2:
v10 = virtualinvoke v8.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: java.lang.Class getRawPrimaryType()>();
v11 = virtualinvoke v5.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v10);
if v11 != null goto label4;
v12 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.cfg.ConfigOverride getConfigOverride(java.lang.Class)>(v10);
v11 = virtualinvoke v12.<com.fasterxml.jackson.databind.cfg.ConfigOverride: java.lang.Boolean getIsIgnoredType()>();
if v11 != null goto label3;
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializationConfig: com.fasterxml.jackson.databind.BeanDescription introspectClassAnnotations(java.lang.Class)>(v10);
v14 = virtualinvoke v13.<com.fasterxml.jackson.databind.BeanDescription: com.fasterxml.jackson.databind.introspect.AnnotatedClass getClassInfo()>();
v11 = virtualinvoke v4.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Boolean isIgnorableType(com.fasterxml.jackson.databind.introspect.AnnotatedClass)>(v14);
if v11 != null goto label3;
v11 = <java.lang.Boolean: java.lang.Boolean FALSE>;
label3:
virtualinvoke v5.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v11);
label4:
v15 = virtualinvoke v11.<java.lang.Boolean: boolean booleanValue()>();
if v15 == 0 goto label1;
interfaceinvoke v6.<java.util.Iterator: void remove()>();
goto label1;
label5:
return;
}
protected void removeSetterlessGetters(com.fasterxml.jackson.databind.SerializationConfig, com.fasterxml.jackson.databind.BeanDescription, java.util.List)
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v4;
com.fasterxml.jackson.databind.SerializationConfig v1;
java.util.List v3;
com.fasterxml.jackson.databind.BeanDescription v2;
java.lang.Object v6;
boolean v5, v7, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializationConfig;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: java.util.List;
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: boolean couldDeserialize()>();
if v7 != 0 goto label1;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: boolean isExplicitlyIncluded()>();
if v8 != 0 goto label1;
interfaceinvoke v4.<java.util.Iterator: void remove()>();
goto label1;
label2:
return;
}
protected java.util.List removeOverlappingTypeIds(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanDescription, com.fasterxml.jackson.databind.ser.BeanSerializerBuilder, java.util.List)
{
com.fasterxml.jackson.'annotation'.JsonTypeInfo$As v10, v9;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v8;
int v5, v6;
com.fasterxml.jackson.databind.BeanDescription v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v11;
boolean v14, v16;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.util.Iterator v13;
com.fasterxml.jackson.databind.PropertyName v12;
java.util.List v4;
java.lang.Object v15, v7;
com.fasterxml.jackson.databind.ser.BeanSerializerBuilder v3;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanDescription;
v3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanSerializerBuilder;
v4 := @parameter3: java.util.List;
v5 = 0;
v6 = interfaceinvoke v4.<java.util.List: int size()>();
label1:
if v5 >= v6 goto label4;
v7 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(v5);
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: com.fasterxml.jackson.databind.jsontype.TypeSerializer getTypeSerializer()>();
if v8 == null goto label3;
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As getTypeInclusion()>();
v10 = <com.fasterxml.jackson.'annotation'.JsonTypeInfo$As: com.fasterxml.jackson.'annotation'.JsonTypeInfo$As EXTERNAL_PROPERTY>;
if v9 != v10 goto label3;
v11 = virtualinvoke v8.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: java.lang.String getPropertyName()>();
v12 = staticinvoke <com.fasterxml.jackson.databind.PropertyName: com.fasterxml.jackson.databind.PropertyName construct(java.lang.String)>(v11);
v13 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label2:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label3;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
if v15 == v7 goto label2;
v16 = virtualinvoke v15.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: boolean wouldConflictWithName(com.fasterxml.jackson.databind.PropertyName)>(v12);
if v16 == 0 goto label2;
virtualinvoke v7.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: void assignTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(null);
label3:
v5 = v5 + 1;
goto label1;
label4:
return v4;
}
protected com.fasterxml.jackson.databind.ser.BeanPropertyWriter _constructWriter(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition, com.fasterxml.jackson.databind.ser.PropertyBuilder, boolean, com.fasterxml.jackson.databind.introspect.AnnotatedMember) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.PropertyBuilder v3;
com.fasterxml.jackson.databind.SerializationConfig v17, v18;
com.fasterxml.jackson.databind.PropertyMetadata v10;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v14, v19;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v5;
com.fasterxml.jackson.databind.JsonSerializer v11, v13;
com.fasterxml.jackson.databind.JavaType v7;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v12, v15, v16, v4;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.PropertyName v6, v9;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v20;
com.fasterxml.jackson.databind.BeanProperty$Std v8;
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v2;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v3 := @parameter2: com.fasterxml.jackson.databind.ser.PropertyBuilder;
v4 := @parameter3: boolean;
v5 := @parameter4: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.PropertyName getFullName()>();
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: com.fasterxml.jackson.databind.JavaType getType()>();
v8 = new com.fasterxml.jackson.databind.BeanProperty$Std;
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.PropertyName getWrapperName()>();
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.PropertyMetadata getMetadata()>();
specialinvoke v8.<com.fasterxml.jackson.databind.BeanProperty$Std: void <init>(com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.PropertyName,com.fasterxml.jackson.databind.introspect.AnnotatedMember,com.fasterxml.jackson.databind.PropertyMetadata)>(v6, v7, v9, v5, v10);
v11 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.JsonSerializer findSerializerFromAnnotation(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.Annotated)>(v1, v5);
v12 = v11 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;
if v12 == 0 goto label1;
interfaceinvoke v11.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
label1:
v13 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handlePrimaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v11, v8);
v14 = null;
v15 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean isContainerType()>();
if v15 != 0 goto label2;
v16 = virtualinvoke v7.<com.fasterxml.jackson.databind.JavaType: boolean isReferenceType()>();
if v16 == 0 goto label3;
label2:
v17 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v14 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyContentTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v7, v17, v5);
label3:
v18 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v19 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.jsontype.TypeSerializer findPropertyTypeSerializer(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.SerializationConfig,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v7, v18, v5);
v20 = virtualinvoke v3.<com.fasterxml.jackson.databind.ser.PropertyBuilder: com.fasterxml.jackson.databind.ser.BeanPropertyWriter buildWriter(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.jsontype.TypeSerializer,com.fasterxml.jackson.databind.introspect.AnnotatedMember,boolean)>(v1, v2, v7, v13, v19, v14, v5, v4);
return v20;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findUnsupportedTypeSerializer(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.BeanDescription) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
com.fasterxml.jackson.databind.SerializationConfig v5;
com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer v8;
com.fasterxml.jackson.databind.BeanDescription v3;
java.lang.Class v6, v7;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
java.lang.String v4;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.BeanDescription;
v4 = staticinvoke <com.fasterxml.jackson.databind.util.BeanUtil: java.lang.String checkUnsupportedType(com.fasterxml.jackson.databind.JavaType)>(v2);
if v4 == null goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v6 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v7 = virtualinvoke v5.<com.fasterxml.jackson.databind.SerializationConfig: java.lang.Class findMixInClassFor(java.lang.Class)>(v6);
if v7 != null goto label1;
v8 = new com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer;
specialinvoke v8.<com.fasterxml.jackson.databind.ser.impl.UnsupportedTypeSerializer: void <init>(com.fasterxml.jackson.databind.JavaType,java.lang.String)>(v2, v4);
return v8;
label1:
return null;
}
protected boolean _isUnserializableJacksonType(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v11, v13, v15, v17, v18, v5, v7, v9;
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
java.lang.Class v10, v12, v14, v16, v3, v4, v6, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: java.lang.Class getRawClass()>();
v4 = class "Lcom/fasterxml/jackson/databind/ObjectMapper;";
v5 = virtualinvoke v4.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v5 != 0 goto label1;
v6 = class "Lcom/fasterxml/jackson/databind/ObjectReader;";
v7 = virtualinvoke v6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v7 != 0 goto label1;
v8 = class "Lcom/fasterxml/jackson/databind/ObjectWriter;";
v9 = virtualinvoke v8.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v9 != 0 goto label1;
v10 = class "Lcom/fasterxml/jackson/databind/DatabindContext;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v11 != 0 goto label1;
v12 = class "Lcom/fasterxml/jackson/core/TokenStreamFactory;";
v13 = virtualinvoke v12.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v13 != 0 goto label1;
v14 = class "Lcom/fasterxml/jackson/core/JsonParser;";
v15 = virtualinvoke v14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v15 != 0 goto label1;
v16 = class "Lcom/fasterxml/jackson/core/JsonGenerator;";
v17 = virtualinvoke v16.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v17 == 0 goto label2;
label1:
v18 = 1;
goto label3;
label2:
v18 = 0;
label3:
return v18;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.ser.BeanSerializerFactory v0;
v0 = new com.fasterxml.jackson.databind.ser.BeanSerializerFactory;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: void <init>(com.fasterxml.jackson.databind.cfg.SerializerFactoryConfig)>(null);
<com.fasterxml.jackson.databind.ser.BeanSerializerFactory: com.fasterxml.jackson.databind.ser.BeanSerializerFactory instance> = v0;
return;
}
}