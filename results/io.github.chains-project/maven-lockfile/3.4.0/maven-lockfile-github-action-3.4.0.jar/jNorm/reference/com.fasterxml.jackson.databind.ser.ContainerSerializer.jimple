public abstract class com.fasterxml.jackson.databind.ser.ContainerSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer
{
protected void <init>(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.ContainerSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(v1);
return;
}
protected void <init>(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.ser.ContainerSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
return;
}
protected void <init>(java.lang.Class, boolean)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.ContainerSerializer v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(v1, v2);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.ContainerSerializer)
{
java.lang.Class v2;
com.fasterxml.jackson.databind.ser.ContainerSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v2 = v1.<com.fasterxml.jackson.databind.ser.ContainerSerializer: java.lang.Class _handledType>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(v2, 0);
return;
}
public com.fasterxml.jackson.databind.ser.ContainerSerializer withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)
{
com.fasterxml.jackson.databind.ser.ContainerSerializer v0, v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v1;
v0 := @this: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
if v1 != null goto label1;
return v0;
label1:
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v1);
return v2;
}
public abstract com.fasterxml.jackson.databind.JavaType getContentType();
public abstract com.fasterxml.jackson.databind.JsonSerializer getContentSerializer();
public abstract boolean hasSingleElement(java.lang.Object);
protected abstract com.fasterxml.jackson.databind.ser.ContainerSerializer _withValueTypeSerializer(com.fasterxml.jackson.databind.jsontype.TypeSerializer);
protected boolean hasContentTypeAnnotation(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.databind.ser.ContainerSerializer v0;
com.fasterxml.jackson.databind.BeanProperty v2;
v0 := @this: com.fasterxml.jackson.databind.ser.ContainerSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
return 0;
}
}