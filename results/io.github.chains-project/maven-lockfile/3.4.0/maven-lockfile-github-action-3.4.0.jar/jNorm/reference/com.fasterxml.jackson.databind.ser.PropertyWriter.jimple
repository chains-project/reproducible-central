public abstract class com.fasterxml.jackson.databind.ser.PropertyWriter extends com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase implements java.io.Serializable
{
private static final long serialVersionUID;
protected void <init>(com.fasterxml.jackson.databind.PropertyMetadata)
{
com.fasterxml.jackson.databind.ser.PropertyWriter v0;
com.fasterxml.jackson.databind.PropertyMetadata v1;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.PropertyMetadata;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase: void <init>(com.fasterxml.jackson.databind.PropertyMetadata)>(v1);
return;
}
protected void <init>(com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition)
{
com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition v1;
com.fasterxml.jackson.databind.ser.PropertyWriter v0;
com.fasterxml.jackson.databind.PropertyMetadata v2;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.introspect.BeanPropertyDefinition: com.fasterxml.jackson.databind.PropertyMetadata getMetadata()>();
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase: void <init>(com.fasterxml.jackson.databind.PropertyMetadata)>(v2);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.PropertyWriter)
{
com.fasterxml.jackson.databind.ser.PropertyWriter v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyWriter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.PropertyWriter;
specialinvoke v0.<com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase: void <init>(com.fasterxml.jackson.databind.introspect.ConcreteBeanPropertyBase)>(v1);
return;
}
public abstract java.lang.String getName();
public abstract com.fasterxml.jackson.databind.PropertyName getFullName();
public java.lang.'annotation'.Annotation findAnnotation(java.lang.Class)
{
java.lang.'annotation'.Annotation v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.PropertyWriter v0;
v0 := @this: com.fasterxml.jackson.databind.ser.PropertyWriter;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyWriter: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(v1);
if v2 != null goto label1;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.PropertyWriter: java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class)>(v1);
label1:
return v2;
}
public abstract java.lang.'annotation'.Annotation getAnnotation(java.lang.Class);
public abstract java.lang.'annotation'.Annotation getContextAnnotation(java.lang.Class);
public abstract void serializeAsField(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.lang.Exception;
public abstract void serializeAsOmittedField(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.lang.Exception;
public abstract void serializeAsElement(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.lang.Exception;
public abstract void serializeAsPlaceholder(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.lang.Exception;
public abstract void depositSchemaProperty(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonObjectFormatVisitor, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
public abstract void depositSchemaProperty(com.fasterxml.jackson.databind.node.ObjectNode, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException;
}