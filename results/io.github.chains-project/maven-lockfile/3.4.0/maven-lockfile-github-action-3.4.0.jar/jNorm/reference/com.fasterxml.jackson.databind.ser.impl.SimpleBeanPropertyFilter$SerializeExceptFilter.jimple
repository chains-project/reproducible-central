public class com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter extends com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter implements java.io.Serializable
{
private static final long serialVersionUID;
static final com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter INCLUDE_ALL;
protected final java.util.Set _propertiesToExclude;
public void <init>(java.util.Set)
{
java.util.Set v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter;
v1 := @parameter0: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: void <init>()>();
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: java.util.Set _propertiesToExclude> = v1;
return;
}
protected boolean include(com.fasterxml.jackson.databind.ser.BeanPropertyWriter)
{
com.fasterxml.jackson.databind.ser.BeanPropertyWriter v1;
java.util.Set v2;
java.lang.String v3;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: java.util.Set _propertiesToExclude>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.BeanPropertyWriter: java.lang.String getName()>();
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
protected boolean include(com.fasterxml.jackson.databind.ser.PropertyWriter)
{
com.fasterxml.jackson.databind.ser.PropertyWriter v1;
java.util.Set v2;
java.lang.String v3;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.PropertyWriter;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: java.util.Set _propertiesToExclude>;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.ser.PropertyWriter: java.lang.String getName()>();
v4 = interfaceinvoke v2.<java.util.Set: boolean contains(java.lang.Object)>(v3);
if v4 != 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
static void <clinit>()
{
java.util.Set v1;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter v0;
v0 = new com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: void <init>(java.util.Set)>(v1);
<com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter$SerializeExceptFilter INCLUDE_ALL> = v0;
return;
}
}