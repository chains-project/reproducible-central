public class com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider extends com.fasterxml.jackson.databind.ser.FilterProvider implements java.io.Serializable
{
private static final long serialVersionUID;
protected final java.util.Map _filtersById;
protected com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter;
protected boolean _cfgFailOnUnknownId;
public void <init>()
{
java.util.HashMap v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: void <init>(java.util.Map)>(v1);
return;
}
public void <init>(java.util.Map)
{
java.util.Iterator v3;
java.util.Collection v2;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
java.util.Map v1, v7;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.FilterProvider: void <init>()>();
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: boolean _cfgFailOnUnknownId> = 1;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Collection values()>();
v3 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = v5 instanceof com.fasterxml.jackson.databind.ser.PropertyFilter;
if v6 != 0 goto label1;
v7 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _convert(java.util.Map)>(v1);
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById> = v7;
return;
label2:
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById> = v1;
return;
}
private static final java.util.Map _convert(java.util.Map)
{
java.util.HashMap v1;
java.util.Map v0;
java.lang.String v14, v15;
boolean v4, v7, v9;
java.util.Iterator v3;
java.util.Set v2;
java.lang.IllegalArgumentException v12;
com.fasterxml.jackson.databind.ser.PropertyFilter v11;
java.lang.Class v13;
java.lang.Object v10, v5, v6, v8;
v0 := @parameter0: java.util.Map;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = interfaceinvoke v0.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label4;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
v7 = v6 instanceof com.fasterxml.jackson.databind.ser.PropertyFilter;
if v7 == 0 goto label2;
v8 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v8, v6);
goto label1;
label2:
v9 = v6 instanceof com.fasterxml.jackson.databind.ser.BeanPropertyFilter;
if v9 == 0 goto label3;
v10 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v11 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _convert(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)>(v6);
virtualinvoke v1.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v11);
goto label1;
label3:
v12 = new java.lang.IllegalArgumentException;
v13 = virtualinvoke v6.<java.lang.Object: java.lang.Class getClass()>();
v14 = virtualinvoke v13.<java.lang.Class: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unrecognized filter type (\u0001)");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v12;
label4:
return v1;
}
private static final com.fasterxml.jackson.databind.ser.PropertyFilter _convert(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)
{
com.fasterxml.jackson.databind.ser.PropertyFilter v1;
com.fasterxml.jackson.databind.ser.BeanPropertyFilter v0;
v0 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyFilter;
v1 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: com.fasterxml.jackson.databind.ser.PropertyFilter 'from'(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)>(v0);
return v1;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)
{
com.fasterxml.jackson.databind.ser.PropertyFilter v2;
com.fasterxml.jackson.databind.ser.BeanPropertyFilter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyFilter;
v2 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter: com.fasterxml.jackson.databind.ser.PropertyFilter 'from'(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)>(v1);
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter> = v2;
return v0;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.PropertyFilter)
{
com.fasterxml.jackson.databind.ser.PropertyFilter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.PropertyFilter;
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter> = v1;
return v0;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setDefaultFilter(com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter)
{
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter> = v1;
return v0;
}
public com.fasterxml.jackson.databind.ser.PropertyFilter getDefaultFilter()
{
com.fasterxml.jackson.databind.ser.PropertyFilter v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter>;
return v1;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider setFailOnUnknownId(boolean)
{
boolean v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: boolean;
v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: boolean _cfgFailOnUnknownId> = v1;
return v0;
}
public boolean willFailOnUnknownId()
{
boolean v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: boolean _cfgFailOnUnknownId>;
return v1;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String, com.fasterxml.jackson.databind.ser.BeanPropertyFilter)
{
java.util.Map v3;
com.fasterxml.jackson.databind.ser.PropertyFilter v4;
java.lang.String v1;
com.fasterxml.jackson.databind.ser.BeanPropertyFilter v2;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyFilter;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById>;
v4 = staticinvoke <com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _convert(com.fasterxml.jackson.databind.ser.BeanPropertyFilter)>(v2);
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v4);
return v0;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String, com.fasterxml.jackson.databind.ser.PropertyFilter)
{
java.util.Map v3;
com.fasterxml.jackson.databind.ser.PropertyFilter v2;
java.lang.String v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.PropertyFilter;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider addFilter(java.lang.String, com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter)
{
java.util.Map v3;
com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter v2;
java.lang.String v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.impl.SimpleBeanPropertyFilter;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public com.fasterxml.jackson.databind.ser.PropertyFilter removeFilter(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.ser.BeanPropertyFilter findFilter(java.lang.Object)
{
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Access to deprecated filters not supported");
throw v2;
}
public com.fasterxml.jackson.databind.ser.PropertyFilter findPropertyFilter(java.lang.Object, java.lang.Object)
{
java.lang.IllegalArgumentException v6;
com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider v0;
java.util.Map v3;
java.lang.Class v7;
java.lang.Object v1, v2, v4;
java.lang.String v8, v9;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: java.util.Map _filtersById>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v4 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: com.fasterxml.jackson.databind.ser.PropertyFilter _defaultFilter>;
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.SimpleFilterProvider: boolean _cfgFailOnUnknownId>;
if v5 == 0 goto label1;
v6 = new java.lang.IllegalArgumentException;
v7 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v7.<java.lang.Class: java.lang.String getName()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.String)>(v1, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No filter configured with id \'\u0001\' (type \u0001)");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v6;
label1:
return v4;
}
}