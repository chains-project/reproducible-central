public class com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer extends com.fasterxml.jackson.databind.ser.std.BeanSerializerBase implements java.io.Serializable
{
private static final long serialVersionUID;
protected final com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer;
public void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase, com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.util.NameTransformer v2;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0;
com.fasterxml.jackson.databind.ser.std.BeanSerializerBase v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.BeanSerializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.util.NameTransformer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>(v1, v2);
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v2;
return;
}
public void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
{
com.fasterxml.jackson.databind.util.NameTransformer v3;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v1;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(v1, v2);
v3 = v1.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v3;
return;
}
public void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer, com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter, java.lang.Object)
{
com.fasterxml.jackson.databind.util.NameTransformer v4;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v1;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v2;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
v3 := @parameter2: java.lang.Object;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(v1, v2, v3);
v4 = v1.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer, java.util.Set)
{
java.util.Set v2;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v2 := @parameter1: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set,java.util.Set)>(v1, v2, null);
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer, java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.util.NameTransformer v4;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v1;
java.util.Set v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v2 := @parameter1: java.util.Set;
v3 := @parameter2: java.util.Set;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,java.util.Set,java.util.Set)>(v1, v2, v3);
v4 = v1.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer, com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
{
com.fasterxml.jackson.databind.util.NameTransformer v4;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v1;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
v3 := @parameter2: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.BeanSerializerBase: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(v1, v2, v3);
v4 = v1.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer>;
v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.util.NameTransformer _nameTransformer> = v4;
return;
}
public com.fasterxml.jackson.databind.JsonSerializer unwrappingSerializer(com.fasterxml.jackson.databind.util.NameTransformer)
{
com.fasterxml.jackson.databind.util.NameTransformer v1;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.NameTransformer;
v2 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.std.BeanSerializerBase,com.fasterxml.jackson.databind.util.NameTransformer)>(v0, v1);
return v2;
}
public boolean isUnwrappingSerializer()
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
return 1;
}
public com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withObjectIdWriter(com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)
{
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v1;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter;
v2 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter)>(v0, v1);
return v2;
}
public com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withFilterId(java.lang.Object)
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v2;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v3;
java.lang.Object v1;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: java.lang.Object;
v2 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v3 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
specialinvoke v2.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter,java.lang.Object)>(v0, v3, v1);
return v2;
}
protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withByNameInclusion(java.util.Set, java.util.Set)
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v3;
java.util.Set v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: java.util.Set;
v2 := @parameter1: java.util.Set;
v3 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,java.util.Set,java.util.Set)>(v0, v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase withProperties(com.fasterxml.jackson.databind.ser.BeanPropertyWriter[], com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0, v3;
com.fasterxml.jackson.databind.ser.BeanPropertyWriter[] v1, v2;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
v2 := @parameter1: com.fasterxml.jackson.databind.ser.BeanPropertyWriter[];
v3 = new com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void <init>(com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer,com.fasterxml.jackson.databind.ser.BeanPropertyWriter[],com.fasterxml.jackson.databind.ser.BeanPropertyWriter[])>(v0, v1, v2);
return v3;
}
protected com.fasterxml.jackson.databind.ser.std.BeanSerializerBase asArraySerializer()
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
return v0;
}
public final void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v4;
java.lang.Object v1, v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
v4 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
if v4 == null goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,boolean)>(v1, v2, v3, 0);
return;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.Object _propertyFilterId>;
if v5 == null goto label2;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
goto label3;
label2:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label3:
return;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0;
com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter v8;
com.fasterxml.jackson.databind.SerializationFeature v5;
java.lang.Class v7;
java.lang.Object v1, v9;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS>;
v6 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v5);
if v6 == 0 goto label1;
v7 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.Class handledType()>();
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: java.lang.Object reportBadDefinition(java.lang.Class,java.lang.String)>(v7, "Unwrapped property requires use of type information: cannot serialize without disabling `SerializationFeature.FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS`");
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
v8 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: com.fasterxml.jackson.databind.ser.impl.ObjectIdWriter _objectIdWriter>;
if v8 == null goto label2;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void _serializeWithObjectId(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v1, v2, v3, v4);
return;
label2:
v9 = v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.Object _propertyFilterId>;
if v9 == null goto label3;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void serializeFieldsFiltered(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
goto label4;
label3:
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: void serializeFields(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
label4:
return;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer v0;
java.lang.Class v1;
java.lang.String v2, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.impl.UnwrappingBeanSerializer: java.lang.Class handledType()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("UnwrappingBeanSerializer for \u0001");
return v3;
}
}