public abstract class com.fasterxml.jackson.databind.ser.std.ArraySerializerBase extends com.fasterxml.jackson.databind.ser.ContainerSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer
{
protected final com.fasterxml.jackson.databind.BeanProperty _property;
protected final java.lang.Boolean _unwrapSingle;
protected void <init>(java.lang.Class)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = null;
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = null;
return;
}
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.BeanProperty)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0;
com.fasterxml.jackson.databind.BeanProperty v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class)>(v1);
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = null;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase)
{
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0, v1;
com.fasterxml.jackson.databind.BeanProperty v3;
java.lang.Boolean v4;
java.lang.Class v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v2 = v1.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class _handledType>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(v2, 0);
v3 = v1.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property>;
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v3;
v4 = v1.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase, com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean)
{
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0, v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Boolean v3;
java.lang.Class v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 := @parameter2: java.lang.Boolean;
v4 = v1.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class _handledType>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(v4, 0);
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = v3;
return;
}
protected void <init>(com.fasterxml.jackson.databind.ser.std.ArraySerializerBase, com.fasterxml.jackson.databind.BeanProperty)
{
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0, v1;
com.fasterxml.jackson.databind.BeanProperty v2;
java.lang.Boolean v4;
java.lang.Class v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v1.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class _handledType>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.ContainerSerializer: void <init>(java.lang.Class,boolean)>(v3, 0);
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.BeanProperty _property> = v2;
v4 = v1.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;
v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle> = v4;
return;
}
public abstract com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty, java.lang.Boolean);
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.'annotation'.JsonFormat$Feature v5;
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.'annotation'.JsonFormat$Value v4;
com.fasterxml.jackson.databind.JsonSerializer v9;
java.lang.Boolean v6, v7;
java.lang.Class v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
if v2 == null goto label1;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Class handledType()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Value findFormatOverrides(com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.BeanProperty,java.lang.Class)>(v1, v2, v3);
if v4 == null goto label1;
v5 = <com.fasterxml.jackson.'annotation'.JsonFormat$Feature: com.fasterxml.jackson.'annotation'.JsonFormat$Feature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.'annotation'.JsonFormat$Value: java.lang.Boolean getFeature(com.fasterxml.jackson.'annotation'.JsonFormat$Feature)>(v5);
v7 = v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;
v8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v6, v7);
if v8 != 0 goto label1;
v9 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: com.fasterxml.jackson.databind.JsonSerializer _withResolved(com.fasterxml.jackson.databind.BeanProperty,java.lang.Boolean)>(v2, v6);
return v9;
label1:
return v0;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0;
com.fasterxml.jackson.core.JsonGenerator v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: boolean _shouldUnwrapSingle(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: boolean hasSingleElement(java.lang.Object)>(v1);
if v5 == 0 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
return;
label1:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
return;
}
public final void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void setCurrentValue(java.lang.Object)>(v1);
virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: void serializeContents(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
protected abstract void serializeContents(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException;
protected final boolean _shouldUnwrapSingle(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.databind.ser.std.ArraySerializerBase v0;
java.lang.Boolean v2, v5;
com.fasterxml.jackson.databind.SerializationFeature v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4, v6;
v0 := @this: com.fasterxml.jackson.databind.ser.std.ArraySerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;
if v2 != null goto label1;
v3 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v3);
return v4;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ser.std.ArraySerializerBase: java.lang.Boolean _unwrapSingle>;
v6 = virtualinvoke v5.<java.lang.Boolean: boolean booleanValue()>();
return v6;
}
}