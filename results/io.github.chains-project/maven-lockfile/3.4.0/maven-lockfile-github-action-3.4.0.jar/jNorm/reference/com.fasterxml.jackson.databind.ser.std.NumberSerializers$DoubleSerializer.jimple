public class com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer extends com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base
{
public void <init>(java.lang.Class)
{
com.fasterxml.jackson.core.JsonParser$NumberType v2;
java.lang.Class v1;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer;
v1 := @parameter0: java.lang.Class;
v2 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType DOUBLE>;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$Base: void <init>(java.lang.Class,com.fasterxml.jackson.core.JsonParser$NumberType,java.lang.String)>(v1, v2, "number");
return;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer v0;
double v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v1.<java.lang.Double: double doubleValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>(v4);
return;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer v0;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v8, v9;
java.lang.Object v1;
com.fasterxml.jackson.core.JsonToken v7;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v6;
double v10, v11, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = virtualinvoke v1.<java.lang.Double: double doubleValue()>();
v6 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(double)>(v5);
if v6 == 0 goto label1;
v7 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v8 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v7);
v9 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v8);
v10 = virtualinvoke v1.<java.lang.Double: double doubleValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>(v10);
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v9);
goto label2;
label1:
v11 = virtualinvoke v1.<java.lang.Double: double doubleValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(double)>(v11);
label2:
return;
}
public static boolean notFinite(double)
{
boolean v1;
double v0;
v0 := @parameter0: double;
v1 = staticinvoke <com.fasterxml.jackson.core.io.NumberOutput: boolean notFinite(double)>(v0);
return v1;
}
}