public class com.fasterxml.jackson.databind.ser.std.NumberSerializers extends java.lang.Object
{
protected void <init>()
{
com.fasterxml.jackson.databind.ser.std.NumberSerializers v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.NumberSerializers;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void addAll(java.util.Map)
{
com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer v23, v26;
java.util.Map v0;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer v17, v20;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer v3, v6;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer v10, v13;
java.lang.String v12, v16, v19, v2, v22, v25, v28, v31, v35, v38, v5, v9;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer v36, v39;
com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer v29, v32;
java.lang.Class v1, v11, v14, v15, v18, v21, v24, v27, v30, v33, v34, v37, v4, v7, v8;
v0 := @parameter0: java.util.Map;
v1 = class "Ljava/lang/Integer;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v3 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer;
specialinvoke v3.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer: void <init>(java.lang.Class)>(class "Ljava/lang/Integer;");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v2, v3);
v4 = <java.lang.Integer: java.lang.Class TYPE>;
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer;
v7 = <java.lang.Integer: java.lang.Class TYPE>;
specialinvoke v6.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntegerSerializer: void <init>(java.lang.Class)>(v7);
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v6);
v8 = class "Ljava/lang/Long;";
v9 = virtualinvoke v8.<java.lang.Class: java.lang.String getName()>();
v10 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer;
specialinvoke v10.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer: void <init>(java.lang.Class)>(class "Ljava/lang/Long;");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v10);
v11 = <java.lang.Long: java.lang.Class TYPE>;
v12 = virtualinvoke v11.<java.lang.Class: java.lang.String getName()>();
v13 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer;
v14 = <java.lang.Long: java.lang.Class TYPE>;
specialinvoke v13.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$LongSerializer: void <init>(java.lang.Class)>(v14);
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v13);
v15 = class "Ljava/lang/Byte;";
v16 = virtualinvoke v15.<java.lang.Class: java.lang.String getName()>();
v17 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance>;
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v17);
v18 = <java.lang.Byte: java.lang.Class TYPE>;
v19 = virtualinvoke v18.<java.lang.Class: java.lang.String getName()>();
v20 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$IntLikeSerializer instance>;
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v19, v20);
v21 = class "Ljava/lang/Short;";
v22 = virtualinvoke v21.<java.lang.Class: java.lang.String getName()>();
v23 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance>;
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v22, v23);
v24 = <java.lang.Short: java.lang.Class TYPE>;
v25 = virtualinvoke v24.<java.lang.Class: java.lang.String getName()>();
v26 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$ShortSerializer instance>;
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v25, v26);
v27 = class "Ljava/lang/Double;";
v28 = virtualinvoke v27.<java.lang.Class: java.lang.String getName()>();
v29 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer;
specialinvoke v29.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer: void <init>(java.lang.Class)>(class "Ljava/lang/Double;");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v28, v29);
v30 = <java.lang.Double: java.lang.Class TYPE>;
v31 = virtualinvoke v30.<java.lang.Class: java.lang.String getName()>();
v32 = new com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer;
v33 = <java.lang.Double: java.lang.Class TYPE>;
specialinvoke v32.<com.fasterxml.jackson.databind.ser.std.NumberSerializers$DoubleSerializer: void <init>(java.lang.Class)>(v33);
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v31, v32);
v34 = class "Ljava/lang/Float;";
v35 = virtualinvoke v34.<java.lang.Class: java.lang.String getName()>();
v36 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance>;
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v35, v36);
v37 = <java.lang.Float: java.lang.Class TYPE>;
v38 = virtualinvoke v37.<java.lang.Class: java.lang.String getName()>();
v39 = <com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer: com.fasterxml.jackson.databind.ser.std.NumberSerializers$FloatSerializer instance>;
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v38, v39);
return;
}
}