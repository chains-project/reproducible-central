public class com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer extends com.fasterxml.jackson.databind.ser.std.StdSerializer implements com.fasterxml.jackson.databind.ser.ContextualSerializer, com.fasterxml.jackson.databind.ser.ResolvableSerializer, com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitable
{
protected final com.fasterxml.jackson.databind.util.Converter _converter;
protected final com.fasterxml.jackson.databind.JavaType _delegateType;
protected final com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer;
public void <init>(com.fasterxml.jackson.databind.util.Converter)
{
com.fasterxml.jackson.databind.util.Converter v1;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.Converter;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class)>(class "Ljava/lang/Object;");
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter> = v1;
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JavaType _delegateType> = null;
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer> = null;
return;
}
public void <init>(java.lang.Class, com.fasterxml.jackson.databind.util.Converter)
{
java.lang.Class v1;
com.fasterxml.jackson.databind.util.Converter v2;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.util.Converter;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(java.lang.Class,boolean)>(v1, 0);
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JavaType _delegateType> = null;
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer> = null;
return;
}
public void <init>(com.fasterxml.jackson.databind.util.Converter, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.util.Converter v1;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.Converter;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: void <init>(com.fasterxml.jackson.databind.JavaType)>(v2);
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter> = v1;
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JavaType _delegateType> = v2;
v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer> = v3;
return;
}
protected com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JsonSerializer)
{
com.fasterxml.jackson.databind.util.Converter v1;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0, v4;
com.fasterxml.jackson.databind.JsonSerializer v3;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.util.Converter;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 := @parameter2: com.fasterxml.jackson.databind.JsonSerializer;
staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: void verifyMustOverride(java.lang.Class,java.lang.Object,java.lang.String)>(class "Lcom/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer;", v0, "withDelegate");
v4 = new com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
specialinvoke v4.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: void <init>(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v1, v2, v3);
return v4;
}
public void resolve(com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v2, v3, v5;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
if v2 == null goto label1;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v4 = v3 instanceof com.fasterxml.jackson.databind.ser.ResolvableSerializer;
if v4 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
interfaceinvoke v5.<com.fasterxml.jackson.databind.ser.ResolvableSerializer: void resolve(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
label1:
return;
}
public com.fasterxml.jackson.databind.JsonSerializer createContextual(com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.BeanProperty) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.util.Converter v11, v5;
com.fasterxml.jackson.databind.BeanProperty v2;
com.fasterxml.jackson.databind.type.TypeFactory v6;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0, v12;
com.fasterxml.jackson.databind.JsonSerializer v3, v9;
com.fasterxml.jackson.databind.JavaType v10, v4;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v7, v8;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: com.fasterxml.jackson.databind.BeanProperty;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JavaType _delegateType>;
if v3 != null goto label2;
if v4 != null goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter>;
v6 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.type.TypeFactory getTypeFactory()>();
v4 = interfaceinvoke v5.<com.fasterxml.jackson.databind.util.Converter: com.fasterxml.jackson.databind.JavaType getOutputType(com.fasterxml.jackson.databind.type.TypeFactory)>(v6);
label1:
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.JavaType: boolean isJavaLangObject()>();
if v7 != 0 goto label2;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(com.fasterxml.jackson.databind.JavaType)>(v4);
label2:
v8 = v3 instanceof com.fasterxml.jackson.databind.ser.ContextualSerializer;
if v8 == 0 goto label3;
v3 = virtualinvoke v1.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer handleSecondaryContextualization(com.fasterxml.jackson.databind.JsonSerializer,com.fasterxml.jackson.databind.BeanProperty)>(v3, v2);
label3:
v9 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
if v3 != v9 goto label4;
v10 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JavaType _delegateType>;
if v4 != v10 goto label4;
return v0;
label4:
v11 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter>;
v12 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer withDelegate(com.fasterxml.jackson.databind.util.Converter,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JsonSerializer)>(v11, v4, v3);
return v12;
}
protected com.fasterxml.jackson.databind.util.Converter getConverter()
{
com.fasterxml.jackson.databind.util.Converter v1;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter>;
return v1;
}
public com.fasterxml.jackson.databind.JsonSerializer getDelegatee()
{
com.fasterxml.jackson.databind.JsonSerializer v1;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
return v1;
}
public void serialize(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v5;
java.lang.Object v1, v4;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: java.lang.Object convertValue(java.lang.Object)>(v1);
if v4 != null goto label1;
virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: void defaultSerializeNull(com.fasterxml.jackson.core.JsonGenerator)>(v2);
return;
label1:
v5 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
if v5 != null goto label2;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider)>(v4, v3);
label2:
virtualinvoke v5.<com.fasterxml.jackson.databind.JsonSerializer: void serialize(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v4, v2, v3);
return;
}
public void serializeWithType(java.lang.Object, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v6;
java.lang.Object v1, v5;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: java.lang.Object convertValue(java.lang.Object)>(v1);
v6 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
if v6 != null goto label1;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v3);
label1:
virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: void serializeWithType(java.lang.Object,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider,com.fasterxml.jackson.databind.jsontype.TypeSerializer)>(v5, v2, v3, v4);
return;
}
public boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider, java.lang.Object)
{
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v4, v6;
java.lang.Object v2, v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v5, v7;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: java.lang.Object convertValue(java.lang.Object)>(v2);
if v3 != null goto label1;
return 1;
label1:
v4 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
if v4 != null goto label4;
if v2 != null goto label2;
v5 = 1;
goto label3;
label2:
v5 = 0;
label3:
return v5;
label4:
v6 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v7 = virtualinvoke v6.<com.fasterxml.jackson.databind.JsonSerializer: boolean isEmpty(com.fasterxml.jackson.databind.SerializerProvider,java.lang.Object)>(v1, v3);
return v7;
}
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v3, v5;
com.fasterxml.jackson.databind.JsonNode v6, v7;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v4 = v3 instanceof com.fasterxml.jackson.databind.jsonschema.SchemaAware;
if v4 == 0 goto label1;
v5 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v6 = interfaceinvoke v5.<com.fasterxml.jackson.databind.jsonschema.SchemaAware: com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)>(v1, v2);
return v6;
label1:
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)>(v1, v2);
return v7;
}
public com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider, java.lang.reflect.Type, boolean) throws com.fasterxml.jackson.databind.JsonMappingException
{
java.lang.reflect.Type v2;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v4, v6;
com.fasterxml.jackson.databind.JsonNode v7, v8;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v3, v5;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 := @parameter1: java.lang.reflect.Type;
v3 := @parameter2: boolean;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v5 = v4 instanceof com.fasterxml.jackson.databind.jsonschema.SchemaAware;
if v5 == 0 goto label1;
v6 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
v7 = interfaceinvoke v6.<com.fasterxml.jackson.databind.jsonschema.SchemaAware: com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type,boolean)>(v1, v2, v3);
return v7;
label1:
v8 = specialinvoke v0.<com.fasterxml.jackson.databind.ser.std.StdSerializer: com.fasterxml.jackson.databind.JsonNode getSchema(com.fasterxml.jackson.databind.SerializerProvider,java.lang.reflect.Type)>(v1, v2);
return v8;
}
public void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v3, v4;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.JsonSerializer _delegateSerializer>;
virtualinvoke v4.<com.fasterxml.jackson.databind.JsonSerializer: void acceptJsonFormatVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
label1:
return;
}
protected java.lang.Object convertValue(java.lang.Object)
{
com.fasterxml.jackson.databind.util.Converter v2;
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
java.lang.Object v1, v3;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer: com.fasterxml.jackson.databind.util.Converter _converter>;
v3 = interfaceinvoke v2.<com.fasterxml.jackson.databind.util.Converter: java.lang.Object convert(java.lang.Object)>(v1);
return v3;
}
protected com.fasterxml.jackson.databind.JsonSerializer _findSerializer(java.lang.Object, com.fasterxml.jackson.databind.SerializerProvider) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer v0;
com.fasterxml.jackson.databind.JsonSerializer v4;
java.lang.Class v3;
java.lang.Object v1;
com.fasterxml.jackson.databind.SerializerProvider v2;
v0 := @this: com.fasterxml.jackson.databind.ser.std.StdDelegatingSerializer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.JsonSerializer findValueSerializer(java.lang.Class)>(v3);
return v4;
}
}