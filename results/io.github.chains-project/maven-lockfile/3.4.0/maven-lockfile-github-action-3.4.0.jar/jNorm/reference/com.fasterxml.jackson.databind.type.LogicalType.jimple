public final enum class com.fasterxml.jackson.databind.type.LogicalType extends java.lang.Enum
{
public static final enum com.fasterxml.jackson.databind.type.LogicalType Array;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Collection;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Map;
public static final enum com.fasterxml.jackson.databind.type.LogicalType POJO;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Untyped;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Integer;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Float;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Boolean;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Enum;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Textual;
public static final enum com.fasterxml.jackson.databind.type.LogicalType Binary;
public static final enum com.fasterxml.jackson.databind.type.LogicalType DateTime;
public static final enum com.fasterxml.jackson.databind.type.LogicalType OtherScalar;
private static final com.fasterxml.jackson.databind.type.LogicalType[] $VALUES;
public static com.fasterxml.jackson.databind.type.LogicalType[] values()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.type.LogicalType[] v0;
v0 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.fasterxml.jackson.databind.type.LogicalType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/fasterxml/jackson/databind/type/LogicalType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
com.fasterxml.jackson.databind.type.LogicalType v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.type.LogicalType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public static com.fasterxml.jackson.databind.type.LogicalType fromClass(java.lang.Class, com.fasterxml.jackson.databind.type.LogicalType)
{
com.fasterxml.jackson.databind.type.LogicalType v1, v12, v13, v3, v5, v6, v9;
java.lang.Class v0, v10, v7;
boolean v11, v2, v4, v8;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: com.fasterxml.jackson.databind.type.LogicalType;
v2 = virtualinvoke v0.<java.lang.Class: boolean isEnum()>();
if v2 == 0 goto label1;
v3 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Enum>;
return v3;
label1:
v4 = virtualinvoke v0.<java.lang.Class: boolean isArray()>();
if v4 == 0 goto label3;
if v0 != class "[B" goto label2;
v5 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Binary>;
return v5;
label2:
v6 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Array>;
return v6;
label3:
v7 = class "Ljava/util/Collection;";
v8 = virtualinvoke v7.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v0);
if v8 == 0 goto label4;
v9 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Collection>;
return v9;
label4:
v10 = class "Ljava/util/Map;";
v11 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v0);
if v11 == 0 goto label5;
v12 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Map>;
return v12;
label5:
if v0 != class "Ljava/lang/String;" goto label6;
v13 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Textual>;
return v13;
label6:
return v1;
}
private static com.fasterxml.jackson.databind.type.LogicalType[] $values()
{
com.fasterxml.jackson.databind.type.LogicalType v1, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
com.fasterxml.jackson.databind.type.LogicalType[] v0;
v0 = newarray (com.fasterxml.jackson.databind.type.LogicalType)[13];
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Array>;
v0[0] = v1;
v2 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Collection>;
v0[1] = v2;
v3 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Map>;
v0[2] = v3;
v4 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType POJO>;
v0[3] = v4;
v5 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Untyped>;
v0[4] = v5;
v6 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer>;
v0[5] = v6;
v7 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Float>;
v0[6] = v7;
v8 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean>;
v0[7] = v8;
v9 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Enum>;
v0[8] = v9;
v10 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Textual>;
v0[9] = v10;
v11 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Binary>;
v0[10] = v11;
v12 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType DateTime>;
v0[11] = v12;
v13 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType OtherScalar>;
v0[12] = v13;
return v0;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.type.LogicalType v0, v1, v10, v11, v12, v2, v3, v4, v5, v6, v7, v8, v9;
com.fasterxml.jackson.databind.type.LogicalType[] v13;
v0 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v0.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Array", 0);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Array> = v0;
v1 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v1.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Collection", 1);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Collection> = v1;
v2 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v2.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Map", 2);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Map> = v2;
v3 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v3.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("POJO", 3);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType POJO> = v3;
v4 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v4.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Untyped", 4);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Untyped> = v4;
v5 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v5.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Integer", 5);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Integer> = v5;
v6 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v6.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Float", 6);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Float> = v6;
v7 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v7.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Boolean", 7);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Boolean> = v7;
v8 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v8.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Enum", 8);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Enum> = v8;
v9 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v9.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Textual", 9);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Textual> = v9;
v10 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v10.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("Binary", 10);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Binary> = v10;
v11 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v11.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("DateTime", 11);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType DateTime> = v11;
v12 = new com.fasterxml.jackson.databind.type.LogicalType;
specialinvoke v12.<com.fasterxml.jackson.databind.type.LogicalType: void <init>(java.lang.String,int)>("OtherScalar", 12);
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType OtherScalar> = v12;
v13 = staticinvoke <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType[] $values()>();
<com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType[] $VALUES> = v13;
return;
}
}