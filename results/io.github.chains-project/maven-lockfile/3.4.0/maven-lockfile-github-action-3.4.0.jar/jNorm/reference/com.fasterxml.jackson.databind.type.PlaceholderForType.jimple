public class com.fasterxml.jackson.databind.type.PlaceholderForType extends com.fasterxml.jackson.databind.type.IdentityEqualityType
{
private static final long serialVersionUID;
protected final int _ordinal;
protected com.fasterxml.jackson.databind.JavaType _actualType;
public void <init>(int)
{
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: int;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
v3 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
specialinvoke v0.<com.fasterxml.jackson.databind.type.IdentityEqualityType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)>(class "Ljava/lang/Object;", v2, v3, null, 1, null, null, 0);
v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: int _ordinal> = v1;
return;
}
public com.fasterxml.jackson.databind.JavaType actualType()
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 = v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: com.fasterxml.jackson.databind.JavaType _actualType>;
return v1;
}
public void actualType(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: com.fasterxml.jackson.databind.JavaType _actualType> = v1;
return;
}
protected java.lang.String buildCanonicalName()
{
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.String toString()>();
return v1;
}
public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
{
java.lang.StringBuilder v1, v2;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.StringBuilder;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>(v1);
return v2;
}
public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
{
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
int v3, v4;
java.lang.StringBuilder v1, v2;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.StringBuilder;
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(36);
v3 = v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: int _ordinal>;
v4 = v3 + 1;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v4);
return v1;
}
public com.fasterxml.jackson.databind.JavaType withTypeHandler(java.lang.Object)
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType withValueHandler(java.lang.Object)
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType withContentValueHandler(java.lang.Object)
{
java.lang.Object v1, v2;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType)
{
java.lang.Object v2;
com.fasterxml.jackson.databind.JavaType v1;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType withStaticTyping()
{
java.lang.Object v1;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v1;
}
public com.fasterxml.jackson.databind.JavaType refine(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
com.fasterxml.jackson.databind.type.TypeBindings v2;
java.lang.Class v1;
java.lang.Object v5;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v5;
}
protected com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)
{
java.lang.Class v1;
java.lang.Object v2;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 := @parameter0: java.lang.Class;
v2 = specialinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.Object _unsupported()>();
return v2;
}
public boolean isContainerType()
{
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
return 0;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
java.lang.StringBuilder v1, v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.PlaceholderForType: java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)>(v1);
v3 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v3;
}
private java.lang.Object _unsupported()
{
java.lang.UnsupportedOperationException v1;
com.fasterxml.jackson.databind.type.PlaceholderForType v0;
java.lang.Class v2;
java.lang.String v3, v4;
v0 := @this: com.fasterxml.jackson.databind.type.PlaceholderForType;
v1 = new java.lang.UnsupportedOperationException;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Operation should not be attempted on \u0001");
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v4);
throw v1;
}
}