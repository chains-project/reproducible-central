public class com.fasterxml.jackson.databind.type.SimpleType extends com.fasterxml.jackson.databind.type.TypeBase
{
private static final long serialVersionUID;
protected void <init>(java.lang.Class)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.type.TypeBindings v2;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
specialinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[])>(v1, v2, null, null);
return;
}
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
specialinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v1, v2, v3, v4, null, null, 0);
return;
}
protected void <init>(com.fasterxml.jackson.databind.type.TypeBase)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
com.fasterxml.jackson.databind.type.TypeBase v1;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeBase;
specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: void <init>(com.fasterxml.jackson.databind.type.TypeBase)>(v1);
return;
}
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[], java.lang.Object, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeBindings v2, v8;
int v9;
java.lang.Class v1;
java.lang.Object v5, v6;
com.fasterxml.jackson.databind.JavaType v3;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 := @parameter4: java.lang.Object;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: boolean;
if v2 != null goto label1;
v8 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
goto label2;
label1:
v8 = v2;
label2:
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.type.TypeBindings: int hashCode()>();
specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)>(v1, v2, v3, v4, v9, v5, v6, v7);
return;
}
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[], int, java.lang.Object, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v5;
java.lang.Class v1;
java.lang.Object v6, v7;
com.fasterxml.jackson.databind.JavaType v3;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 := @parameter4: int;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: java.lang.Object;
v8 := @parameter7: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],int,java.lang.Object,java.lang.Object,boolean)>(v1, v2, v3, v4, v5, v6, v7, v8);
return;
}
public static com.fasterxml.jackson.databind.type.SimpleType constructUnsafe(java.lang.Class)
{
com.fasterxml.jackson.databind.type.SimpleType v1;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 = new com.fasterxml.jackson.databind.type.SimpleType;
specialinvoke v1.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v0, null, null, null, null, null, 0);
return v1;
}
public static com.fasterxml.jackson.databind.type.SimpleType construct(java.lang.Class)
{
com.fasterxml.jackson.databind.type.SimpleType v16;
com.fasterxml.jackson.databind.type.TypeBindings v15;
com.fasterxml.jackson.databind.JavaType v18;
java.lang.String v10, v13, v14, v4, v5, v9;
boolean v11, v2, v7;
java.lang.IllegalArgumentException v12, v3, v8;
java.lang.Class v0, v1, v17, v6;
v0 := @parameter0: java.lang.Class;
v1 = class "Ljava/util/Map;";
v2 = virtualinvoke v1.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v0);
if v2 == 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot construct SimpleType for a Map (class: \u0001)");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v6 = class "Ljava/util/Collection;";
v7 = virtualinvoke v6.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v0);
if v7 == 0 goto label2;
v8 = new java.lang.IllegalArgumentException;
v9 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot construct SimpleType for a Collection (class: \u0001)");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v8;
label2:
v11 = virtualinvoke v0.<java.lang.Class: boolean isArray()>();
if v11 == 0 goto label3;
v12 = new java.lang.IllegalArgumentException;
v13 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot construct SimpleType for an array (class: \u0001)");
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v14);
throw v12;
label3:
v15 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
v16 = new com.fasterxml.jackson.databind.type.SimpleType;
v17 = virtualinvoke v0.<java.lang.Class: java.lang.Class getSuperclass()>();
v18 = staticinvoke <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _buildSuperClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v17, v15);
specialinvoke v16.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v0, v15, v18, null, null, null, 0);
return v16;
}
protected com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)
{
boolean v10, v18, v20, v26, v37, v39, v4, v46;
com.fasterxml.jackson.databind.type.SimpleType v0, v13, v22, v32, v41, v5;
com.fasterxml.jackson.databind.type.TypeBindings v14, v23, v33, v42, v6;
int v28, v29;
com.fasterxml.jackson.databind.JavaType v21, v40;
java.lang.String v48, v50, v51;
java.lang.Class[] v27;
java.lang.IllegalArgumentException v47;
com.fasterxml.jackson.databind.JavaType[] v15, v34, v43, v7;
java.lang.Class v1, v11, v12, v19, v2, v3, v30, v31, v38, v49;
java.lang.Object v16, v17, v24, v25, v35, v36, v44, v45, v8, v9;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
if v2 != v1 goto label1;
return v0;
label1:
v3 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v4 = virtualinvoke v3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v1);
if v4 != 0 goto label2;
v5 = new com.fasterxml.jackson.databind.type.SimpleType;
v6 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v7 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v8 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v9 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
v10 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v5.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v1, v6, v0, v7, v8, v9, v10);
return v5;
label2:
v11 = virtualinvoke v1.<java.lang.Class: java.lang.Class getSuperclass()>();
v12 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
if v11 != v12 goto label3;
v13 = new com.fasterxml.jackson.databind.type.SimpleType;
v14 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v15 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v16 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v17 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
v18 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v13.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v1, v14, v0, v15, v16, v17, v18);
return v13;
label3:
if v11 == null goto label4;
v19 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v20 = virtualinvoke v19.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v11);
if v20 == 0 goto label4;
v21 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)>(v11);
v22 = new com.fasterxml.jackson.databind.type.SimpleType;
v23 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v24 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v25 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
v26 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v22.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v1, v23, v21, null, v24, v25, v26);
return v22;
label4:
v27 = virtualinvoke v1.<java.lang.Class: java.lang.Class[] getInterfaces()>();
v28 = lengthof v27;
v29 = 0;
label5:
if v29 >= v28 goto label8;
v30 = v27[v29];
v31 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
if v30 != v31 goto label6;
v32 = new com.fasterxml.jackson.databind.type.SimpleType;
v33 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v34 = newarray (com.fasterxml.jackson.databind.JavaType)[1];
v34[0] = v0;
v35 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v36 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
v37 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v32.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v1, v33, null, v34, v35, v36, v37);
return v32;
label6:
v38 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v39 = virtualinvoke v38.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v30);
if v39 == 0 goto label7;
v40 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _narrow(java.lang.Class)>(v30);
v41 = new com.fasterxml.jackson.databind.type.SimpleType;
v42 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v43 = newarray (com.fasterxml.jackson.databind.JavaType)[1];
v43[0] = v40;
v44 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v45 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
v46 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v41.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v1, v42, null, v43, v44, v45, v46);
return v41;
label7:
v29 = v29 + 1;
goto label5;
label8:
v47 = new java.lang.IllegalArgumentException;
v48 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v49 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v50 = virtualinvoke v49.<java.lang.Class: java.lang.String getName()>();
v51 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v48, v50) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Internal error: Cannot resolve sub-type for Class \u0001 to \u0001");
specialinvoke v47.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v51);
throw v47;
}
public com.fasterxml.jackson.databind.JavaType withContentType(com.fasterxml.jackson.databind.JavaType)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
com.fasterxml.jackson.databind.JavaType v1;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: com.fasterxml.jackson.databind.JavaType;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Simple types have no content types; cannot call withContentType()");
throw v2;
}
public com.fasterxml.jackson.databind.type.SimpleType withTypeHandler(java.lang.Object)
{
com.fasterxml.jackson.databind.type.SimpleType v0, v3;
com.fasterxml.jackson.databind.JavaType[] v7;
com.fasterxml.jackson.databind.type.TypeBindings v5;
java.lang.Class v4;
java.lang.Object v1, v2, v8;
com.fasterxml.jackson.databind.JavaType v6;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
if v2 != v1 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.databind.type.SimpleType;
v4 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v5 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v6 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _superClass>;
v7 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v8 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v9 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v3.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v4, v5, v6, v7, v8, v1, v9);
return v3;
}
public com.fasterxml.jackson.databind.JavaType withContentTypeHandler(java.lang.Object)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Object v1;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Simple types have no content types; cannot call withContenTypeHandler()");
throw v2;
}
public com.fasterxml.jackson.databind.type.SimpleType withValueHandler(java.lang.Object)
{
com.fasterxml.jackson.databind.type.SimpleType v0, v3;
com.fasterxml.jackson.databind.JavaType[] v7;
com.fasterxml.jackson.databind.type.TypeBindings v5;
java.lang.Class v4;
java.lang.Object v1, v2, v8;
com.fasterxml.jackson.databind.JavaType v6;
boolean v9;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = new com.fasterxml.jackson.databind.type.SimpleType;
v4 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v5 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v6 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _superClass>;
v7 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v8 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
v9 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
specialinvoke v3.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v4, v5, v6, v7, v1, v8, v9);
return v3;
}
public com.fasterxml.jackson.databind.type.SimpleType withContentValueHandler(java.lang.Object)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Object v1;
java.lang.IllegalArgumentException v2;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Simple types have no content types; cannot call withContenValueHandler()");
throw v2;
}
public com.fasterxml.jackson.databind.type.SimpleType withStaticTyping()
{
com.fasterxml.jackson.databind.type.SimpleType v0, v2;
com.fasterxml.jackson.databind.JavaType[] v6;
com.fasterxml.jackson.databind.type.TypeBindings v4;
java.lang.Class v3;
java.lang.Object v7, v8;
com.fasterxml.jackson.databind.JavaType v5;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 = v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _asStatic>;
if v1 == 0 goto label1;
v2 = v0;
goto label2;
label1:
v2 = new com.fasterxml.jackson.databind.type.SimpleType;
v3 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v4 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v5 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _superClass>;
v6 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v7 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _valueHandler>;
v8 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Object _typeHandler>;
specialinvoke v2.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v3, v4, v5, v6, v7, v8, 1);
label2:
return v2;
}
public com.fasterxml.jackson.databind.JavaType refine(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[])
{
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeBindings v2;
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
return null;
}
protected java.lang.String buildCanonicalName()
{
com.fasterxml.jackson.databind.type.SimpleType v0;
com.fasterxml.jackson.databind.type.TypeBindings v4;
int v5, v7;
java.lang.Class v2;
java.lang.StringBuilder v1;
com.fasterxml.jackson.databind.JavaType v8;
java.lang.String v10, v3, v9;
boolean v6;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
v4 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeBindings: int size()>();
if v5 <= 0 goto label4;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: boolean _hasNTypeParameters(int)>(v5);
if v6 == 0 goto label4;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
v7 = 0;
label1:
if v7 >= v5 goto label3;
v8 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType containedType(int)>(v7);
if v7 <= 0 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(44);
label2:
v9 = virtualinvoke v8.<com.fasterxml.jackson.databind.JavaType: java.lang.String toCanonical()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v9);
v7 = v7 + 1;
goto label1;
label3:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
label4:
v10 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v10;
}
public boolean isContainerType()
{
com.fasterxml.jackson.databind.type.SimpleType v0;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
return 0;
}
public boolean hasContentType()
{
com.fasterxml.jackson.databind.type.SimpleType v0;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
return 0;
}
public java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Class v2;
java.lang.StringBuilder v1, v3;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.StringBuilder;
v2 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v3 = staticinvoke <com.fasterxml.jackson.databind.type.SimpleType: java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean)>(v2, v1, 1);
return v3;
}
public java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)
{
com.fasterxml.jackson.databind.type.TypeBindings v3;
int v4, v5;
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.Class v2;
java.lang.StringBuilder v1;
com.fasterxml.jackson.databind.JavaType v6;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.StringBuilder;
v2 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
staticinvoke <com.fasterxml.jackson.databind.type.SimpleType: java.lang.StringBuilder _classSignature(java.lang.Class,java.lang.StringBuilder,boolean)>(v2, v1, 0);
v3 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.type.TypeBindings: int size()>();
if v4 <= 0 goto label3;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(60);
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType containedType(int)>(v5);
v1 = virtualinvoke v6.<com.fasterxml.jackson.databind.JavaType: java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder)>(v1);
v5 = v5 + 1;
goto label1;
label2:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(62);
label3:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);
return v1;
}
private static com.fasterxml.jackson.databind.JavaType _buildSuperClass(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings)
{
com.fasterxml.jackson.databind.type.TypeBindings v1;
com.fasterxml.jackson.databind.type.SimpleType v5;
java.lang.Class v0, v3;
com.fasterxml.jackson.databind.JavaType v2, v4;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
if v0 != null goto label1;
return null;
label1:
if v0 != class "Ljava/lang/Object;" goto label2;
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
return v2;
label2:
v3 = virtualinvoke v0.<java.lang.Class: java.lang.Class getSuperclass()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.JavaType _buildSuperClass(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings)>(v3, v1);
v5 = new com.fasterxml.jackson.databind.type.SimpleType;
specialinvoke v5.<com.fasterxml.jackson.databind.type.SimpleType: void <init>(java.lang.Class,com.fasterxml.jackson.databind.type.TypeBindings,com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.databind.JavaType[],java.lang.Object,java.lang.Object,boolean)>(v0, v1, v4, null, null, null, 0);
return v5;
}
public java.lang.String toString()
{
com.fasterxml.jackson.databind.type.SimpleType v0;
java.lang.StringBuilder v1, v2, v4;
java.lang.String v3, v5;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>(int)>(40);
v2 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[simple type, class ");
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.String buildCanonicalName()>();
v4 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
v5 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v5;
}
public boolean equals(java.lang.Object)
{
com.fasterxml.jackson.databind.type.SimpleType v0;
com.fasterxml.jackson.databind.type.TypeBindings v6, v7;
java.lang.Class v2, v3, v4, v5;
java.lang.Object v1;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.type.SimpleType;
v1 := @parameter0: java.lang.Object;
if v1 != v0 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
return 0;
label3:
v4 = v1.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
v5 = v0.<com.fasterxml.jackson.databind.type.SimpleType: java.lang.Class _class>;
if v4 == v5 goto label4;
return 0;
label4:
v6 = v0.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v7 = v1.<com.fasterxml.jackson.databind.type.SimpleType: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v8 = virtualinvoke v6.<com.fasterxml.jackson.databind.type.TypeBindings: boolean equals(java.lang.Object)>(v7);
return v8;
}
}