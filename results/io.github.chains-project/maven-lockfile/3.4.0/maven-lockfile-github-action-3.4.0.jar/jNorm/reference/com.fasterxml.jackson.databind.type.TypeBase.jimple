public abstract class com.fasterxml.jackson.databind.type.TypeBase extends com.fasterxml.jackson.databind.JavaType implements com.fasterxml.jackson.databind.JsonSerializable
{
private static final long serialVersionUID;
private static final com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS;
private static final com.fasterxml.jackson.databind.JavaType[] NO_TYPES;
protected final com.fasterxml.jackson.databind.JavaType _superClass;
protected final com.fasterxml.jackson.databind.JavaType[] _superInterfaces;
protected final com.fasterxml.jackson.databind.type.TypeBindings _bindings;
transient volatile java.lang.String _canonicalName;
protected void <init>(java.lang.Class, com.fasterxml.jackson.databind.type.TypeBindings, com.fasterxml.jackson.databind.JavaType, com.fasterxml.jackson.databind.JavaType[], int, java.lang.Object, java.lang.Object, boolean)
{
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.JavaType[] v4;
com.fasterxml.jackson.databind.type.TypeBindings v2, v9;
int v5;
java.lang.Class v1;
java.lang.Object v6, v7;
com.fasterxml.jackson.databind.JavaType v3;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: com.fasterxml.jackson.databind.type.TypeBindings;
v3 := @parameter2: com.fasterxml.jackson.databind.JavaType;
v4 := @parameter3: com.fasterxml.jackson.databind.JavaType[];
v5 := @parameter4: int;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: java.lang.Object;
v8 := @parameter7: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.JavaType: void <init>(java.lang.Class,int,java.lang.Object,java.lang.Object,boolean)>(v1, v5, v6, v7, v8);
if v2 != null goto label1;
v9 = <com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS>;
goto label2;
label1:
v9 = v2;
label2:
v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings> = v9;
v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType _superClass> = v3;
v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.databind.type.TypeBase)
{
com.fasterxml.jackson.databind.JavaType[] v3;
com.fasterxml.jackson.databind.type.TypeBindings v4;
com.fasterxml.jackson.databind.type.TypeBase v0, v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: com.fasterxml.jackson.databind.type.TypeBase;
specialinvoke v0.<com.fasterxml.jackson.databind.JavaType: void <init>(com.fasterxml.jackson.databind.JavaType)>(v1);
v2 = v1.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType _superClass>;
v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType _superClass> = v2;
v3 = v1.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces> = v3;
v4 = v1.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings> = v4;
return;
}
public java.lang.String toCanonical()
{
com.fasterxml.jackson.databind.type.TypeBase v0;
java.lang.String v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeBase: java.lang.String _canonicalName>;
if v1 != null goto label1;
v1 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: java.lang.String buildCanonicalName()>();
label1:
return v1;
}
protected java.lang.String buildCanonicalName()
{
com.fasterxml.jackson.databind.type.TypeBase v0;
java.lang.Class v1;
java.lang.String v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeBase: java.lang.Class _class>;
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
return v2;
}
public abstract java.lang.StringBuilder getGenericSignature(java.lang.StringBuilder);
public abstract java.lang.StringBuilder getErasedSignature(java.lang.StringBuilder);
public com.fasterxml.jackson.databind.type.TypeBindings getBindings()
{
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.type.TypeBindings v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
return v1;
}
public int containedTypeCount()
{
int v2;
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.type.TypeBindings v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.type.TypeBindings: int size()>();
return v2;
}
public com.fasterxml.jackson.databind.JavaType containedType(int)
{
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v1;
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.JavaType v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType getBoundType(int)>(v1);
return v3;
}
public java.lang.String containedTypeName(int)
{
com.fasterxml.jackson.databind.type.TypeBindings v2;
int v1;
com.fasterxml.jackson.databind.type.TypeBase v0;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings _bindings>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.type.TypeBindings: java.lang.String getBoundName(int)>(v1);
return v3;
}
public com.fasterxml.jackson.databind.JavaType getSuperClass()
{
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.JavaType v1;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType _superClass>;
return v1;
}
public java.util.List getInterfaces()
{
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.JavaType[] v1, v3, v6, v9;
java.util.List v10, v2, v5, v8;
int v4;
com.fasterxml.jackson.databind.JavaType v7;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v2;
label1:
v3 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v4 = lengthof v3;
lookupswitch(v4)
{
case 0: goto label2;
case 1: goto label3;
default: goto label4;
};
label2:
v5 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v5;
label3:
v6 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v7 = v6[0];
v8 = staticinvoke <java.util.Collections: java.util.List singletonList(java.lang.Object)>(v7);
return v8;
label4:
v9 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v9);
return v10;
}
public final com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)
{
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.JavaType[] v4, v6, v8;
int v5, v7;
java.lang.Class v1, v2;
com.fasterxml.jackson.databind.JavaType v10, v11, v12, v13, v9;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: java.lang.Class;
v2 = v0.<com.fasterxml.jackson.databind.type.TypeBase: java.lang.Class _class>;
if v1 != v2 goto label1;
return v0;
label1:
v3 = virtualinvoke v1.<java.lang.Class: boolean isInterface()>();
if v3 == 0 goto label4;
v4 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
if v4 == null goto label4;
v5 = 0;
v6 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v7 = lengthof v6;
label2:
if v5 >= v7 goto label4;
v8 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] _superInterfaces>;
v9 = v8[v5];
v10 = virtualinvoke v9.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(v1);
if v10 == null goto label3;
return v10;
label3:
v5 = v5 + 1;
goto label2;
label4:
v11 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType _superClass>;
if v11 == null goto label5;
v12 = v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType _superClass>;
v13 = virtualinvoke v12.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(v1);
if v13 == null goto label5;
return v13;
label5:
return null;
}
public com.fasterxml.jackson.databind.JavaType[] findTypeParameters(java.lang.Class)
{
com.fasterxml.jackson.databind.JavaType[] v3, v5;
com.fasterxml.jackson.databind.type.TypeBindings v4;
com.fasterxml.jackson.databind.type.TypeBase v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType findSuperType(java.lang.Class)>(v1);
if v2 != null goto label1;
v3 = <com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] NO_TYPES>;
return v3;
label1:
v4 = virtualinvoke v2.<com.fasterxml.jackson.databind.JavaType: com.fasterxml.jackson.databind.type.TypeBindings getBindings()>();
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.JavaType[] typeParameterArray()>();
return v5;
}
public void serializeWithType(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.core.type.WritableTypeId v4;
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.core.JsonToken v5;
com.fasterxml.jackson.databind.SerializerProvider v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 := @parameter2: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v4 = new com.fasterxml.jackson.core.type.WritableTypeId;
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
specialinvoke v4.<com.fasterxml.jackson.core.type.WritableTypeId: void <init>(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v0, v5);
virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v1, v4);
virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: void serialize(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2);
virtualinvoke v3.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v1, v4);
return;
}
public void serialize(com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v1;
com.fasterxml.jackson.databind.type.TypeBase v0;
com.fasterxml.jackson.databind.SerializerProvider v2;
java.lang.String v3;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: com.fasterxml.jackson.core.JsonGenerator;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.type.TypeBase: java.lang.String toCanonical()>();
virtualinvoke v1.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v3);
return;
}
protected static java.lang.StringBuilder _classSignature(java.lang.Class, java.lang.StringBuilder, boolean)
{
java.lang.IllegalStateException v13;
int v17, v18;
java.lang.String v14, v15, v16;
boolean v2, v3;
char v19;
java.lang.Class v0, v10, v11, v12, v4, v5, v6, v7, v8, v9;
java.lang.StringBuilder v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.StringBuilder;
v2 := @parameter2: boolean;
v3 = virtualinvoke v0.<java.lang.Class: boolean isPrimitive()>();
if v3 == 0 goto label10;
v4 = <java.lang.Boolean: java.lang.Class TYPE>;
if v0 != v4 goto label01;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);
goto label14;
label01:
v5 = <java.lang.Byte: java.lang.Class TYPE>;
if v0 != v5 goto label02;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(66);
goto label14;
label02:
v6 = <java.lang.Short: java.lang.Class TYPE>;
if v0 != v6 goto label03;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(83);
goto label14;
label03:
v7 = <java.lang.Character: java.lang.Class TYPE>;
if v0 != v7 goto label04;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(67);
goto label14;
label04:
v8 = <java.lang.Integer: java.lang.Class TYPE>;
if v0 != v8 goto label05;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(73);
goto label14;
label05:
v9 = <java.lang.Long: java.lang.Class TYPE>;
if v0 != v9 goto label06;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(74);
goto label14;
label06:
v10 = <java.lang.Float: java.lang.Class TYPE>;
if v0 != v10 goto label07;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(70);
goto label14;
label07:
v11 = <java.lang.Double: java.lang.Class TYPE>;
if v0 != v11 goto label08;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(68);
goto label14;
label08:
v12 = <java.lang.Void: java.lang.Class TYPE>;
if v0 != v12 goto label09;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(86);
goto label14;
label09:
v13 = new java.lang.IllegalStateException;
v14 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unrecognized primitive type: \u0001");
specialinvoke v13.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v15);
throw v13;
label10:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(76);
v16 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v17 = 0;
v18 = virtualinvoke v16.<java.lang.String: int length()>();
label11:
if v17 >= v18 goto label13;
v19 = virtualinvoke v16.<java.lang.String: char charAt(int)>(v17);
if v19 != 46 goto label12;
v19 = 47;
label12:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v19);
v17 = v17 + 1;
goto label11;
label13:
if v2 == 0 goto label14;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(59);
label14:
return v1;
}
protected static com.fasterxml.jackson.databind.JavaType _bogusSuperClass(java.lang.Class)
{
java.lang.Class v0, v1;
com.fasterxml.jackson.databind.JavaType v2;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: java.lang.Class getSuperclass()>();
if v1 != null goto label1;
return null;
label1:
v2 = staticinvoke <com.fasterxml.jackson.databind.type.TypeFactory: com.fasterxml.jackson.databind.JavaType unknownType()>();
return v2;
}
protected boolean _hasNTypeParameters(int)
{
java.lang.reflect.TypeVariable[] v3;
int v1, v4;
com.fasterxml.jackson.databind.type.TypeBase v0;
java.lang.Class v2;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.type.TypeBase;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.type.TypeBase: java.lang.Class _class>;
v3 = virtualinvoke v2.<java.lang.Class: java.lang.reflect.TypeVariable[] getTypeParameters()>();
v4 = lengthof v3;
if v4 != v1 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
return v5;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.JavaType[] v1;
com.fasterxml.jackson.databind.type.TypeBindings v0;
v0 = staticinvoke <com.fasterxml.jackson.databind.type.TypeBindings: com.fasterxml.jackson.databind.type.TypeBindings emptyBindings()>();
<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.type.TypeBindings NO_BINDINGS> = v0;
v1 = newarray (com.fasterxml.jackson.databind.JavaType)[0];
<com.fasterxml.jackson.databind.type.TypeBase: com.fasterxml.jackson.databind.JavaType[] NO_TYPES> = v1;
return;
}
}