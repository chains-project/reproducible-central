public final class com.fasterxml.jackson.databind.util.CompactStringObjectMap extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private static final com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY;
private final int _hashMask;
private final int _spillCount;
private final java.lang.Object[] _hashArea;
private void <init>(int, int, java.lang.Object[])
{
java.lang.Object[] v3;
com.fasterxml.jackson.databind.util.CompactStringObjectMap v0;
int v1, v2;
v0 := @this: com.fasterxml.jackson.databind.util.CompactStringObjectMap;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Object[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _hashMask> = v1;
v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _spillCount> = v2;
v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea> = v3;
return;
}
public static com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map)
{
java.util.Map v0;
boolean v1, v13;
java.util.Set v11;
java.lang.Object[] v9;
com.fasterxml.jackson.databind.util.CompactStringObjectMap v2, v31;
int v10, v16, v17, v18, v20, v21, v23, v24, v25, v26, v27, v28, v29, v3, v4, v5, v6, v7, v8;
java.util.Iterator v12;
java.lang.Object v14, v15, v19, v22, v30;
v0 := @parameter0: java.util.Map;
v1 = interfaceinvoke v0.<java.util.Map: boolean isEmpty()>();
if v1 == 0 goto label1;
v2 = <com.fasterxml.jackson.databind.util.CompactStringObjectMap: com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY>;
return v2;
label1:
v3 = interfaceinvoke v0.<java.util.Map: int size()>();
v4 = staticinvoke <com.fasterxml.jackson.databind.util.CompactStringObjectMap: int findSize(int)>(v3);
v5 = v4 - 1;
v6 = v4 >> 1;
v7 = v4 + v6;
v8 = v7 * 2;
v9 = newarray (java.lang.Object)[v8];
v10 = 0;
v11 = interfaceinvoke v0.<java.util.Map: java.util.Set entrySet()>();
v12 = interfaceinvoke v11.<java.util.Set: java.util.Iterator iterator()>();
label2:
v13 = interfaceinvoke v12.<java.util.Iterator: boolean hasNext()>();
if v13 == 0 goto label4;
v14 = interfaceinvoke v12.<java.util.Iterator: java.lang.Object next()>();
v15 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getKey()>();
if v15 == null goto label2;
v16 = virtualinvoke v15.<java.lang.String: int hashCode()>();
v17 = v16 & v5;
v18 = v17 + v17;
v19 = v9[v18];
if v19 == null goto label3;
v20 = v17 >> 1;
v21 = v4 + v20;
v18 = v21 << 1;
v22 = v9[v18];
if v22 == null goto label3;
v23 = v4 >> 1;
v24 = v4 + v23;
v25 = v24 << 1;
v18 = v25 + v10;
v10 = v10 + 2;
v26 = lengthof v9;
if v18 < v26 goto label3;
v27 = lengthof v9;
v28 = v27 + 4;
v9 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOf(java.lang.Object[],int)>(v9, v28);
label3:
v9[v18] = v15;
v29 = v18 + 1;
v30 = interfaceinvoke v14.<java.util.Map$Entry: java.lang.Object getValue()>();
v9[v29] = v30;
goto label2;
label4:
v31 = new com.fasterxml.jackson.databind.util.CompactStringObjectMap;
specialinvoke v31.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: void <init>(int,int,java.lang.Object[])>(v5, v10, v9);
return v31;
}
private static final int findSize(int)
{
int v0, v1, v2, v3;
v0 := @parameter0: int;
if v0 > 5 goto label1;
return 8;
label1:
if v0 > 12 goto label2;
return 16;
label2:
v1 = v0 >> 2;
v2 = v0 + v1;
v3 = 32;
label3:
if v3 >= v2 goto label4;
v3 = v3 + v3;
goto label3;
label4:
return v3;
}
public java.lang.Object find(java.lang.String)
{
java.lang.Object[] v6, v9;
com.fasterxml.jackson.databind.util.CompactStringObjectMap v0;
int v10, v2, v3, v4, v5;
java.lang.Object v11, v12, v7;
java.lang.String v1;
boolean v8;
v0 := @this: com.fasterxml.jackson.databind.util.CompactStringObjectMap;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
v3 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _hashMask>;
v4 = v2 & v3;
v5 = v4 << 1;
v6 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v7 = v6[v5];
if v7 == v1 goto label1;
v8 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label2;
label1:
v9 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v10 = v5 + 1;
v11 = v9[v10];
return v11;
label2:
v12 = specialinvoke v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object _find2(java.lang.String,int,java.lang.Object)>(v1, v4, v7);
return v12;
}
private final java.lang.Object _find2(java.lang.String, int, java.lang.Object)
{
java.lang.Object[] v12, v20, v23, v9;
com.fasterxml.jackson.databind.util.CompactStringObjectMap v0;
int v13, v15, v16, v17, v18, v19, v2, v24, v4, v5, v6, v7, v8;
java.lang.String v1;
boolean v11, v22;
java.lang.Object v10, v14, v21, v25, v3;
v0 := @this: com.fasterxml.jackson.databind.util.CompactStringObjectMap;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.Object;
if v3 != null goto label1;
return null;
label1:
v4 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _hashMask>;
v5 = v4 + 1;
v6 = v2 >> 1;
v7 = v5 + v6;
v8 = v7 << 1;
v9 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v10 = v9[v8];
v11 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v11 == 0 goto label2;
v12 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v13 = v8 + 1;
v14 = v12[v13];
return v14;
label2:
if v10 == null goto label6;
v15 = v5 >> 1;
v16 = v5 + v15;
v17 = v16 << 1;
v18 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: int _spillCount>;
v19 = v17 + v18;
label3:
if v17 >= v19 goto label6;
v20 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v21 = v20[v17];
if v21 == v1 goto label4;
v22 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v21);
if v22 == 0 goto label5;
label4:
v23 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v24 = v17 + 1;
v25 = v23[v24];
return v25;
label5:
v17 = v17 + 2;
goto label3;
label6:
return null;
}
public java.lang.Object findCaseInsensitive(java.lang.String)
{
java.lang.Object[] v3, v5, v8;
com.fasterxml.jackson.databind.util.CompactStringObjectMap v0;
int v2, v4, v9;
java.lang.Object v10, v6;
java.lang.String v1;
boolean v7;
v0 := @this: com.fasterxml.jackson.databind.util.CompactStringObjectMap;
v1 := @parameter0: java.lang.String;
v2 = 0;
v3 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v4 = lengthof v3;
label1:
if v2 >= v4 goto label3;
v5 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v6 = v5[v2];
if v6 == null goto label2;
v7 = virtualinvoke v6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v1);
if v7 == 0 goto label2;
v8 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v9 = v2 + 1;
v10 = v8[v9];
return v10;
label2:
v2 = v2 + 2;
goto label1;
label3:
return null;
}
public java.util.List keys()
{
java.lang.Object[] v1, v6;
java.util.ArrayList v3;
com.fasterxml.jackson.databind.util.CompactStringObjectMap v0;
int v2, v4, v5;
java.lang.Object v7;
v0 := @this: com.fasterxml.jackson.databind.util.CompactStringObjectMap;
v1 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v2 = lengthof v1;
v3 = new java.util.ArrayList;
v4 = v2 >> 2;
specialinvoke v3.<java.util.ArrayList: void <init>(int)>(v4);
v5 = 0;
label1:
if v5 >= v2 goto label3;
v6 = v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: java.lang.Object[] _hashArea>;
v7 = v6[v5];
if v7 == null goto label2;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v7);
label2:
v5 = v5 + 2;
goto label1;
label3:
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.databind.util.CompactStringObjectMap v0;
java.lang.Object[] v1;
v0 = new com.fasterxml.jackson.databind.util.CompactStringObjectMap;
v1 = newarray (java.lang.Object)[4];
specialinvoke v0.<com.fasterxml.jackson.databind.util.CompactStringObjectMap: void <init>(int,int,java.lang.Object[])>(1, 0, v1);
<com.fasterxml.jackson.databind.util.CompactStringObjectMap: com.fasterxml.jackson.databind.util.CompactStringObjectMap EMPTY> = v0;
return;
}
}