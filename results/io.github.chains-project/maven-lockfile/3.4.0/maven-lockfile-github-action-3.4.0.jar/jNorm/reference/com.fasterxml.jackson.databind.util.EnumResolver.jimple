public class com.fasterxml.jackson.databind.util.EnumResolver extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
protected final java.lang.Class _enumClass;
protected final java.lang.Enum[] _enums;
protected final java.util.HashMap _enumsById;
protected final java.lang.Enum _defaultValue;
protected final boolean _isIgnoreCase;
protected final boolean _isFromIntValue;
protected void <init>(java.lang.Class, java.lang.Enum[], java.util.HashMap, java.lang.Enum, boolean, boolean)
{
java.lang.Enum v4;
com.fasterxml.jackson.databind.util.EnumResolver v0;
java.lang.Enum[] v2;
java.lang.Class v1;
java.util.HashMap v3;
boolean v5, v6;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Enum[];
v3 := @parameter2: java.util.HashMap;
v4 := @parameter3: java.lang.Enum;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass> = v1;
v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums> = v2;
v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.util.HashMap _enumsById> = v3;
v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _defaultValue> = v4;
v0.<com.fasterxml.jackson.databind.util.EnumResolver: boolean _isIgnoreCase> = v5;
v0.<com.fasterxml.jackson.databind.util.EnumResolver: boolean _isFromIntValue> = v6;
return;
}
public static com.fasterxml.jackson.databind.util.EnumResolver constructFor(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationConfig v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.util.EnumResolver v2;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver _constructFor(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class)>(v0, v1);
return v2;
}
protected static com.fasterxml.jackson.databind.util.EnumResolver _constructFor(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
java.lang.String[] v17, v8, v9;
java.util.HashMap v12;
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Enum v15, v22;
int v10, v13, v14, v18, v19, v7;
java.lang.String v16, v20;
boolean v4;
com.fasterxml.jackson.databind.util.EnumResolver v21;
java.lang.Enum[] v6;
java.lang.Class v1, v5;
java.lang.String[][] v11;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
v5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v1);
v6 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enumConstants(java.lang.Class)>(v1);
v7 = lengthof v6;
v8 = newarray (java.lang.String)[v7];
v9 = virtualinvoke v2.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.String[] findEnumValues(java.lang.Class,java.lang.Enum[],java.lang.String[])>(v5, v6, v8);
v10 = lengthof v9;
v11 = newarray (java.lang.String[])[v10];
virtualinvoke v2.<com.fasterxml.jackson.databind.AnnotationIntrospector: void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][])>(v5, v6, v11);
v12 = new java.util.HashMap;
specialinvoke v12.<java.util.HashMap: void <init>()>();
v13 = 0;
v14 = lengthof v6;
label1:
if v13 >= v14 goto label5;
v15 = v6[v13];
v16 = v9[v13];
if v16 != null goto label2;
v16 = virtualinvoke v15.<java.lang.Enum: java.lang.String name()>();
label2:
virtualinvoke v12.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v15);
v17 = v11[v13];
if v17 == null goto label4;
v18 = lengthof v17;
v19 = 0;
label3:
if v19 >= v18 goto label4;
v20 = v17[v19];
virtualinvoke v12.<java.util.HashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v20, v15);
v19 = v19 + 1;
goto label3;
label4:
v13 = v13 + 1;
goto label1;
label5:
v21 = new com.fasterxml.jackson.databind.util.EnumResolver;
v22 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class)>(v2, v5);
specialinvoke v21.<com.fasterxml.jackson.databind.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean)>(v5, v6, v12, v22, v4, 0);
return v21;
}
public static com.fasterxml.jackson.databind.util.EnumResolver constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationConfig v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.util.EnumResolver v2;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver _constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class)>(v0, v1);
return v2;
}
public static com.fasterxml.jackson.databind.util.EnumResolver constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.DeserializationConfig v0;
java.lang.Class v1;
com.fasterxml.jackson.databind.util.EnumResolver v2;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver _constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class)>(v0, v1);
return v2;
}
private static com.fasterxml.jackson.databind.util.EnumResolver _constructUsingIndex(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
java.util.HashMap v7;
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Enum v12, v9;
com.fasterxml.jackson.databind.util.EnumResolver v11;
int v8;
java.lang.Enum[] v6;
java.lang.Class v1, v5;
java.lang.String v10;
boolean v4;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
v5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v1);
v6 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enumConstants(java.lang.Class)>(v1);
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
v8 = lengthof v6;
label1:
v8 = v8 - 1;
if v8 < 0 goto label2;
v9 = v6[v8];
v10 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v8);
virtualinvoke v7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v9);
goto label1;
label2:
v11 = new com.fasterxml.jackson.databind.util.EnumResolver;
v12 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class)>(v2, v5);
specialinvoke v11.<com.fasterxml.jackson.databind.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean)>(v5, v6, v7, v12, v4, 0);
return v11;
}
public static com.fasterxml.jackson.databind.util.EnumResolver constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class, com.fasterxml.jackson.databind.EnumNamingStrategy)
{
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.EnumNamingStrategy v2;
com.fasterxml.jackson.databind.util.EnumResolver v3;
java.lang.Class v1;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.EnumNamingStrategy;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver _constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.EnumNamingStrategy)>(v0, v1, v2);
return v3;
}
private static com.fasterxml.jackson.databind.util.EnumResolver _constructUsingEnumNamingStrategy(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class, com.fasterxml.jackson.databind.EnumNamingStrategy)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
java.util.HashMap v8;
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.EnumNamingStrategy v2;
com.fasterxml.jackson.databind.MapperFeature v4;
java.lang.Enum v10, v14;
com.fasterxml.jackson.databind.util.EnumResolver v13;
int v9;
java.lang.Enum[] v7;
java.lang.Class v1, v6;
java.lang.String v11, v12;
boolean v5;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.EnumNamingStrategy;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v1);
v7 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enumConstants(java.lang.Class)>(v1);
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
v9 = lengthof v7;
label1:
v9 = v9 - 1;
if v9 < 0 goto label2;
v10 = v7[v9];
v11 = virtualinvoke v10.<java.lang.Enum: java.lang.String name()>();
v12 = interfaceinvoke v2.<com.fasterxml.jackson.databind.EnumNamingStrategy: java.lang.String convertEnumToExternalName(java.lang.String)>(v11);
virtualinvoke v8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v10);
goto label1;
label2:
v13 = new com.fasterxml.jackson.databind.util.EnumResolver;
v14 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class)>(v3, v6);
specialinvoke v13.<com.fasterxml.jackson.databind.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean)>(v6, v7, v8, v14, v5, 0);
return v13;
}
protected static com.fasterxml.jackson.databind.util.EnumResolver _constructUsingToString(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v2;
java.lang.String[] v13;
java.util.HashMap v7;
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.MapperFeature v3;
java.lang.Enum v11, v18;
int v10, v14, v15, v8;
java.lang.String v12, v16;
boolean v4;
com.fasterxml.jackson.databind.util.EnumResolver v17;
java.lang.Enum[] v6;
java.lang.Class v1, v5;
java.lang.String[][] v9;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v3 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS>;
v4 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v3);
v5 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v1);
v6 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enumConstants(java.lang.Class)>(v1);
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
v8 = lengthof v6;
v9 = newarray (java.lang.String[])[v8];
if v2 == null goto label1;
virtualinvoke v2.<com.fasterxml.jackson.databind.AnnotationIntrospector: void findEnumAliases(java.lang.Class,java.lang.Enum[],java.lang.String[][])>(v5, v6, v9);
label1:
v10 = lengthof v6;
label2:
v10 = v10 - 1;
if v10 < 0 goto label4;
v11 = v6[v10];
v12 = virtualinvoke v11.<java.lang.Enum: java.lang.String toString()>();
virtualinvoke v7.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v11);
v13 = v9[v10];
if v13 == null goto label2;
v14 = lengthof v13;
v15 = 0;
label3:
if v15 >= v14 goto label2;
v16 = v13[v15];
virtualinvoke v7.<java.util.HashMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v16, v11);
v15 = v15 + 1;
goto label3;
label4:
v17 = new com.fasterxml.jackson.databind.util.EnumResolver;
v18 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class)>(v2, v5);
specialinvoke v17.<com.fasterxml.jackson.databind.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean)>(v5, v6, v7, v18, v4, 0);
return v17;
}
public static com.fasterxml.jackson.databind.util.EnumResolver constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedMember)
{
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.util.EnumResolver v3;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v2;
java.lang.Class v1;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v3 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: com.fasterxml.jackson.databind.util.EnumResolver _constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig,java.lang.Class,com.fasterxml.jackson.databind.introspect.AnnotatedMember)>(v0, v1, v2);
return v3;
}
protected static com.fasterxml.jackson.databind.util.EnumResolver _constructUsingMethod(com.fasterxml.jackson.databind.DeserializationConfig, java.lang.Class, com.fasterxml.jackson.databind.introspect.AnnotatedMember)
{
com.fasterxml.jackson.databind.AnnotationIntrospector v3;
java.util.HashMap v8;
com.fasterxml.jackson.databind.DeserializationConfig v0;
com.fasterxml.jackson.databind.MapperFeature v4;
java.lang.Enum v10, v18;
com.fasterxml.jackson.databind.introspect.AnnotatedMember v2;
int v9;
java.lang.String v12, v15, v16;
boolean v20, v5;
java.lang.IllegalArgumentException v14;
java.lang.Exception v13;
com.fasterxml.jackson.databind.util.EnumResolver v17;
java.lang.Enum[] v7;
java.lang.Class v1, v19, v6;
java.lang.Object v11;
v0 := @parameter0: com.fasterxml.jackson.databind.DeserializationConfig;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: com.fasterxml.jackson.databind.introspect.AnnotatedMember;
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: com.fasterxml.jackson.databind.AnnotationIntrospector getAnnotationIntrospector()>();
v4 = <com.fasterxml.jackson.databind.MapperFeature: com.fasterxml.jackson.databind.MapperFeature ACCEPT_CASE_INSENSITIVE_ENUMS>;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.DeserializationConfig: boolean isEnabled(com.fasterxml.jackson.databind.MapperFeature)>(v4);
v6 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v1);
v7 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enumConstants(java.lang.Class)>(v1);
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
v9 = lengthof v7;
label1:
v9 = v9 - 1;
if v9 < 0 goto label5;
v10 = v7[v9];
label2:
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Object getValue(java.lang.Object)>(v10);
if v11 == null goto label1;
v12 = virtualinvoke v11.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v8.<java.util.HashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v10);
label3:
goto label1;
label4:
v13 := @caughtexception;
v14 = new java.lang.IllegalArgumentException;
v15 = virtualinvoke v13.<java.lang.Exception: java.lang.String getMessage()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Enum,java.lang.String)>(v10, v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to access @JsonValue of Enum value \u0001: \u0001");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v14;
label5:
v17 = new com.fasterxml.jackson.databind.util.EnumResolver;
v18 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector,java.lang.Class)>(v3, v6);
v19 = virtualinvoke v2.<com.fasterxml.jackson.databind.introspect.AnnotatedMember: java.lang.Class getRawType()>();
v20 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: boolean _isIntType(java.lang.Class)>(v19);
specialinvoke v17.<com.fasterxml.jackson.databind.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean)>(v6, v7, v8, v18, v5, v20);
return v17;
catch java.lang.Exception from label2 to label3 with label4;
}
public com.fasterxml.jackson.databind.util.CompactStringObjectMap constructLookup()
{
com.fasterxml.jackson.databind.util.CompactStringObjectMap v2;
java.util.HashMap v1;
com.fasterxml.jackson.databind.util.EnumResolver v0;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.util.HashMap _enumsById>;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.CompactStringObjectMap: com.fasterxml.jackson.databind.util.CompactStringObjectMap construct(java.util.Map)>(v1);
return v2;
}
protected static java.lang.Class _enumClass(java.lang.Class)
{
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
return v0;
}
protected static java.lang.Enum[] _enumConstants(java.lang.Class)
{
java.lang.Object[] v2;
java.lang.Class v0, v1;
java.lang.String v4, v5;
java.lang.IllegalArgumentException v3;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v0);
v2 = virtualinvoke v1.<java.lang.Class: java.lang.Object[] getEnumConstants()>();
if v2 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No enum constants for class \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
return v2;
}
protected static java.lang.Enum _enumDefault(com.fasterxml.jackson.databind.AnnotationIntrospector, java.lang.Class)
{
java.lang.Enum v3;
com.fasterxml.jackson.databind.AnnotationIntrospector v0;
java.lang.Class v1, v2;
v0 := @parameter0: com.fasterxml.jackson.databind.AnnotationIntrospector;
v1 := @parameter1: java.lang.Class;
if v0 == null goto label1;
v2 = staticinvoke <com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass(java.lang.Class)>(v1);
v3 = virtualinvoke v0.<com.fasterxml.jackson.databind.AnnotationIntrospector: java.lang.Enum findDefaultEnumValue(java.lang.Class)>(v2);
goto label2;
label1:
v3 = null;
label2:
return v3;
}
protected static boolean _isIntType(java.lang.Class)
{
java.lang.Class v0;
boolean v1, v2;
v0 := @parameter0: java.lang.Class;
v1 = virtualinvoke v0.<java.lang.Class: boolean isPrimitive()>();
if v1 == 0 goto label1;
v0 = staticinvoke <com.fasterxml.jackson.databind.util.ClassUtil: java.lang.Class wrapperType(java.lang.Class)>(v0);
label1:
if v0 == class "Ljava/lang/Long;" goto label2;
if v0 == class "Ljava/lang/Integer;" goto label2;
if v0 == class "Ljava/lang/Short;" goto label2;
if v0 != class "Ljava/lang/Byte;" goto label3;
label2:
v2 = 1;
goto label4;
label3:
v2 = 0;
label4:
return v2;
}
protected void <init>(java.lang.Class, java.lang.Enum[], java.util.HashMap, java.lang.Enum, boolean)
{
java.lang.Enum v4;
com.fasterxml.jackson.databind.util.EnumResolver v0;
java.lang.Enum[] v2;
java.lang.Class v1;
java.util.HashMap v3;
boolean v5;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.Enum[];
v3 := @parameter2: java.util.HashMap;
v4 := @parameter3: java.lang.Enum;
v5 := @parameter4: boolean;
specialinvoke v0.<com.fasterxml.jackson.databind.util.EnumResolver: void <init>(java.lang.Class,java.lang.Enum[],java.util.HashMap,java.lang.Enum,boolean,boolean)>(v1, v2, v3, v4, v5, 0);
return;
}
public java.lang.Enum findEnum(java.lang.String)
{
java.lang.Enum v5;
com.fasterxml.jackson.databind.util.EnumResolver v0;
java.lang.Object v3;
java.util.HashMap v2;
java.lang.String v1;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.util.HashMap _enumsById>;
v3 = virtualinvoke v2.<java.util.HashMap: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: boolean _isIgnoreCase>;
if v4 == 0 goto label1;
v5 = virtualinvoke v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _findEnumCaseInsensitive(java.lang.String)>(v1);
return v5;
label1:
return v3;
}
protected java.lang.Enum _findEnumCaseInsensitive(java.lang.String)
{
java.util.Iterator v4;
java.util.Set v3;
java.util.HashMap v2;
com.fasterxml.jackson.databind.util.EnumResolver v0;
java.lang.Object v6, v7, v9;
java.lang.String v1;
boolean v5, v8;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 := @parameter0: java.lang.String;
v2 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.util.HashMap _enumsById>;
v3 = virtualinvoke v2.<java.util.HashMap: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = virtualinvoke v1.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v7);
if v8 == 0 goto label1;
v9 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
return v9;
label2:
return null;
}
public java.lang.Enum getEnum(int)
{
java.lang.Enum v5;
com.fasterxml.jackson.databind.util.EnumResolver v0;
int v1, v3;
java.lang.Enum[] v2, v4;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 := @parameter0: int;
if v1 < 0 goto label1;
v2 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums>;
v3 = lengthof v2;
if v1 < v3 goto label2;
label1:
return null;
label2:
v4 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums>;
v5 = v4[v1];
return v5;
}
public java.lang.Enum getDefaultValue()
{
java.lang.Enum v1;
com.fasterxml.jackson.databind.util.EnumResolver v0;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum _defaultValue>;
return v1;
}
public java.lang.Enum[] getRawEnums()
{
java.lang.Enum[] v1;
com.fasterxml.jackson.databind.util.EnumResolver v0;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums>;
return v1;
}
public java.util.List getEnums()
{
java.util.ArrayList v1;
java.lang.Enum v7;
com.fasterxml.jackson.databind.util.EnumResolver v0;
int v3, v5, v6;
java.lang.Enum[] v2, v4;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = new java.util.ArrayList;
v2 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums>;
v3 = lengthof v2;
specialinvoke v1.<java.util.ArrayList: void <init>(int)>(v3);
v4 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums>;
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
virtualinvoke v1.<java.util.ArrayList: boolean add(java.lang.Object)>(v7);
v6 = v6 + 1;
goto label1;
label2:
return v1;
}
public java.util.Collection getEnumIds()
{
java.util.Set v2;
java.util.HashMap v1;
com.fasterxml.jackson.databind.util.EnumResolver v0;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.util.HashMap _enumsById>;
v2 = virtualinvoke v1.<java.util.HashMap: java.util.Set keySet()>();
return v2;
}
public java.lang.Class getEnumClass()
{
java.lang.Class v1;
com.fasterxml.jackson.databind.util.EnumResolver v0;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Class _enumClass>;
return v1;
}
public int lastValidIndex()
{
com.fasterxml.jackson.databind.util.EnumResolver v0;
int v2, v3;
java.lang.Enum[] v1;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: java.lang.Enum[] _enums>;
v2 = lengthof v1;
v3 = v2 - 1;
return v3;
}
public boolean isFromIntValue()
{
com.fasterxml.jackson.databind.util.EnumResolver v0;
boolean v1;
v0 := @this: com.fasterxml.jackson.databind.util.EnumResolver;
v1 = v0.<com.fasterxml.jackson.databind.util.EnumResolver: boolean _isFromIntValue>;
return v1;
}
}