public class com.fasterxml.jackson.databind.util.IgnorePropertiesUtil extends java.lang.Object
{
public void <init>()
{
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil v0;
v0 := @this: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static boolean shouldIgnore(java.lang.Object, java.util.Collection, java.util.Collection)
{
java.util.Collection v1, v2;
java.lang.Object v0;
boolean v3, v4, v5, v6, v7, v8;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.util.Collection;
v2 := @parameter2: java.util.Collection;
if v1 != null goto label1;
if v2 != null goto label2;
return 0;
label1:
if v2 != null goto label2;
v3 = interfaceinvoke v1.<java.util.Collection: boolean contains(java.lang.Object)>(v0);
return v3;
label2:
if v1 != null goto label5;
v4 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v0);
if v4 != 0 goto label3;
v5 = 1;
goto label4;
label3:
v5 = 0;
label4:
return v5;
label5:
v6 = interfaceinvoke v2.<java.util.Collection: boolean contains(java.lang.Object)>(v0);
if v6 == 0 goto label6;
v7 = interfaceinvoke v1.<java.util.Collection: boolean contains(java.lang.Object)>(v0);
if v7 == 0 goto label7;
label6:
v8 = 1;
goto label8;
label7:
v8 = 0;
label8:
return v8;
}
public static com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker buildCheckerIfNeeded(java.util.Set, java.util.Set)
{
java.util.Set v0, v1;
com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker v3;
boolean v2;
v0 := @parameter0: java.util.Set;
v1 := @parameter1: java.util.Set;
if v1 != null goto label2;
if v0 == null goto label1;
v2 = interfaceinvoke v0.<java.util.Set: boolean isEmpty()>();
if v2 == 0 goto label2;
label1:
return null;
label2:
v3 = staticinvoke <com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker: com.fasterxml.jackson.databind.util.IgnorePropertiesUtil$Checker construct(java.util.Set,java.util.Set)>(v0, v1);
return v3;
}
public static java.util.Set combineNamesToInclude(java.util.Set, java.util.Set)
{
java.util.HashSet v2;
java.util.Iterator v3;
java.util.Set v0, v1;
java.lang.Object v5;
boolean v4, v6;
v0 := @parameter0: java.util.Set;
v1 := @parameter1: java.util.Set;
if v0 != null goto label1;
return v1;
label1:
if v1 != null goto label2;
return v0;
label2:
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
v3 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label3:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label4;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v0.<java.util.Set: boolean contains(java.lang.Object)>(v5);
if v6 == 0 goto label3;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v5);
goto label3;
label4:
return v2;
}
}