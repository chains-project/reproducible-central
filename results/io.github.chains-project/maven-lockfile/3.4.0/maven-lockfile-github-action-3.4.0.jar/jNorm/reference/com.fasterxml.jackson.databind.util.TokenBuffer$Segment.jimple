public final class com.fasterxml.jackson.databind.util.TokenBuffer$Segment extends java.lang.Object
{
public static final int TOKENS_PER_SEGMENT;
private static final com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX;
protected com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next;
protected long _tokenTypes;
protected final java.lang.Object[] _tokens;
protected java.util.TreeMap _nativeIds;
public void <init>()
{
java.lang.Object[] v1;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = newarray (java.lang.Object)[16];
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens> = v1;
return;
}
public com.fasterxml.jackson.core.JsonToken type(int)
{
com.fasterxml.jackson.core.JsonToken[] v5;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1, v3, v4;
long v2;
com.fasterxml.jackson.core.JsonToken v6;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;
if v1 <= 0 goto label1;
v3 = v1 << 2;
v2 = v2 >> v3;
label1:
v4 = v2 & 15;
v5 = <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX>;
v6 = v5[v4];
return v6;
}
public int rawType(int)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1, v3, v4;
long v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;
if v1 <= 0 goto label1;
v3 = v1 << 2;
v2 = v2 >> v3;
label1:
v4 = v2 & 15;
return v4;
}
public java.lang.Object get(int)
{
java.lang.Object[] v2;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1;
java.lang.Object v3;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;
v3 = v2[v1];
return v3;
}
public com.fasterxml.jackson.databind.util.TokenBuffer$Segment next()
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0, v1;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
return v1;
}
public boolean hasIds()
{
java.util.TreeMap v1;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
boolean v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0, v3, v4, v5;
int v1;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
if v1 >= 16 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken)>(v1, v2);
return null;
label1:
v3 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v3.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = v3;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
specialinvoke v4.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken)>(0, v2);
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
return v5;
}
public com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0, v5, v6, v7;
int v1;
java.lang.Object v3, v4;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
if v1 >= 16 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>(v1, v2, v3, v4);
return null;
label1:
v5 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v5.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = v5;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
specialinvoke v6.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object)>(0, v2, v3, v4);
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
return v7;
}
public com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0, v4, v5, v6;
int v1;
java.lang.Object v3;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.Object;
if v1 >= 16 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(v1, v2, v3);
return null;
label1:
v4 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v4.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = v4;
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
specialinvoke v5.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object)>(0, v2, v3);
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
return v6;
}
public com.fasterxml.jackson.databind.util.TokenBuffer$Segment append(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0, v6, v7, v8;
int v1;
java.lang.Object v3, v4, v5;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: java.lang.Object;
if v1 >= 16 goto label1;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>(v1, v2, v3, v4, v5);
return null;
label1:
v6 = new com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
specialinvoke v6.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next> = v6;
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
specialinvoke v7.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void set(int,com.fasterxml.jackson.core.JsonToken,java.lang.Object,java.lang.Object,java.lang.Object)>(0, v2, v3, v4, v5);
v8 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.databind.util.TokenBuffer$Segment _next>;
return v8;
}
private void set(int, com.fasterxml.jackson.core.JsonToken)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1, v3, v4;
long v5, v6;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
if v1 <= 0 goto label1;
v4 = v1 << 2;
v3 = v3 << v4;
label1:
v5 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;
v6 = v5 | v3;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = v6;
return;
}
private void set(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
long v7, v8;
int v1, v5, v6;
java.lang.Object v3, v4;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
if v1 <= 0 goto label1;
v6 = v1 << 2;
v5 = v5 << v6;
label1:
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;
v8 = v7 | v5;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = v8;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void assignNativeIds(int,java.lang.Object,java.lang.Object)>(v1, v3, v4);
return;
}
private void set(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object)
{
java.lang.Object[] v4;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
long v7, v8;
int v1, v5, v6;
java.lang.Object v3;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;
v4[v1] = v3;
v5 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
if v1 <= 0 goto label1;
v6 = v1 << 2;
v5 = v5 << v6;
label1:
v7 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;
v8 = v7 | v5;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = v8;
return;
}
private void set(int, com.fasterxml.jackson.core.JsonToken, java.lang.Object, java.lang.Object, java.lang.Object)
{
java.lang.Object[] v6;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
long v10, v9;
int v1, v7, v8;
java.lang.Object v3, v4, v5;
com.fasterxml.jackson.core.JsonToken v2;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: com.fasterxml.jackson.core.JsonToken;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
v5 := @parameter4: java.lang.Object;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.lang.Object[] _tokens>;
v6[v1] = v3;
v7 = virtualinvoke v2.<com.fasterxml.jackson.core.JsonToken: int ordinal()>();
if v1 <= 0 goto label1;
v8 = v1 << 2;
v7 = v7 << v8;
label1:
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes>;
v10 = v9 | v7;
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: long _tokenTypes> = v10;
specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: void assignNativeIds(int,java.lang.Object,java.lang.Object)>(v1, v4, v5);
return;
}
private final void assignNativeIds(int, java.lang.Object, java.lang.Object)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
java.lang.Integer v11, v8;
java.util.TreeMap v4, v5, v6, v9;
int v1, v10, v7;
java.lang.Object v2, v3;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
if v4 != null goto label1;
v5 = new java.util.TreeMap;
specialinvoke v5.<java.util.TreeMap: void <init>()>();
v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds> = v5;
label1:
if v2 == null goto label2;
v6 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
v7 = specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _objectIdIndex(int)>(v1);
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
virtualinvoke v6.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v8, v2);
label2:
if v3 == null goto label3;
v9 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
v10 = specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _typeIdIndex(int)>(v1);
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v10);
virtualinvoke v9.<java.util.TreeMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v3);
label3:
return;
}
java.lang.Object findObjectId(int)
{
java.util.TreeMap v2, v4;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1, v5;
java.lang.Object v3;
java.lang.Integer v6;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _objectIdIndex(int)>(v1);
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v3 = virtualinvoke v4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(v6);
label2:
return v3;
}
java.lang.Object findTypeId(int)
{
java.util.TreeMap v2, v4;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1, v5;
java.lang.Object v3;
java.lang.Integer v6;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
if v2 != null goto label1;
v3 = null;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: java.util.TreeMap _nativeIds>;
v5 = specialinvoke v0.<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: int _typeIdIndex(int)>(v1);
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v3 = virtualinvoke v4.<java.util.TreeMap: java.lang.Object get(java.lang.Object)>(v6);
label2:
return v3;
}
private final int _typeIdIndex(int)
{
int v1, v2;
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v1 + v1;
return v2;
}
private final int _objectIdIndex(int)
{
com.fasterxml.jackson.databind.util.TokenBuffer$Segment v0;
int v1, v2, v3;
v0 := @this: com.fasterxml.jackson.databind.util.TokenBuffer$Segment;
v1 := @parameter0: int;
v2 = v1 + v1;
v3 = v2 + 1;
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.core.JsonToken[] v0, v1, v2;
int v3, v4, v5;
v0 = newarray (com.fasterxml.jackson.core.JsonToken)[16];
<com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX> = v0;
v1 = staticinvoke <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken[] values()>();
v2 = <com.fasterxml.jackson.databind.util.TokenBuffer$Segment: com.fasterxml.jackson.core.JsonToken[] TOKEN_TYPES_BY_INDEX>;
v3 = lengthof v1;
v4 = v3 - 1;
v5 = staticinvoke <java.lang.Math: int min(int,int)>(15, v4);
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, 1, v2, 1, v5);
return;
}
}