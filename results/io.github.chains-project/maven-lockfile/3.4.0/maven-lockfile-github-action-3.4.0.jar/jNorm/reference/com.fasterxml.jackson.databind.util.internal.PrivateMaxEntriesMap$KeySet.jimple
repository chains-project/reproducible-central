final class com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet extends java.util.AbstractSet
{
final com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map;
final com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0;
void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1, v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 := @parameter0: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0> = v1;
specialinvoke v0.<java.util.AbstractSet: void <init>()>();
v2 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map> = v2;
return;
}
public int size()
{
int v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map>;
v2 = virtualinvoke v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: int size()>();
return v2;
}
public void clear()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map>;
virtualinvoke v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: void clear()>();
return;
}
public java.util.Iterator iterator()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator v1;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 = new com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator;
v2 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
specialinvoke v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeyIterator: void <init>(com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap)>(v2);
return v1;
}
public boolean contains(java.lang.Object)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
java.lang.Object v1;
boolean v3;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap this$0>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: boolean containsKey(java.lang.Object)>(v1);
return v3;
}
public boolean remove(java.lang.Object)
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
java.lang.Object v1, v3;
boolean v4;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 := @parameter0: java.lang.Object;
v2 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map>;
v3 = virtualinvoke v2.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.lang.Object remove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public java.lang.Object[] toArray()
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v1;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
java.lang.Object[] v4;
java.util.Set v3;
java.util.concurrent.ConcurrentMap v2;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map>;
v2 = v1.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.util.concurrent.ConcurrentMap data>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.lang.Object[] toArray()>();
return v4;
}
public java.lang.Object[] toArray(java.lang.Object[])
{
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap v2;
com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet v0;
java.lang.Object[] v1, v5;
java.util.Set v4;
java.util.concurrent.ConcurrentMap v3;
v0 := @this: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap$KeySet: com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap map>;
v3 = v2.<com.fasterxml.jackson.databind.util.internal.PrivateMaxEntriesMap: java.util.concurrent.ConcurrentMap data>;
v4 = interfaceinvoke v3.<java.util.concurrent.ConcurrentMap: java.util.Set keySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v1);
return v5;
}
}