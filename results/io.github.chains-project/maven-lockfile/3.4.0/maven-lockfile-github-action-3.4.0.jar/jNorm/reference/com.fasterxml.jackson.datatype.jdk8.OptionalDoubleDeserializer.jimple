class com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer extends com.fasterxml.jackson.datatype.jdk8.BaseScalarOptionalDeserializer
{
private static final long serialVersionUID;
static final com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer INSTANCE;
public void <init>()
{
java.util.OptionalDouble v1;
com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer;
v1 = staticinvoke <java.util.OptionalDouble: java.util.OptionalDouble empty()>();
specialinvoke v0.<com.fasterxml.jackson.datatype.jdk8.BaseScalarOptionalDeserializer: void <init>(java.lang.Class,java.lang.Object)>(class "Ljava/util/OptionalDouble;", v1);
return;
}
public com.fasterxml.jackson.databind.type.LogicalType logicalType()
{
com.fasterxml.jackson.databind.type.LogicalType v1;
com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer;
v1 = <com.fasterxml.jackson.databind.type.LogicalType: com.fasterxml.jackson.databind.type.LogicalType Float>;
return v1;
}
public java.util.OptionalDouble deserialize(com.fasterxml.jackson.core.JsonParser, com.fasterxml.jackson.databind.DeserializationContext) throws java.io.IOException
{
java.lang.Double v9;
java.util.OptionalDouble v11, v18, v20, v6;
com.fasterxml.jackson.databind.cfg.CoercionAction v12, v13, v14;
int v7;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.JavaType v23;
java.lang.String v16, v8;
boolean v4;
double v10, v17, v19, v5;
com.fasterxml.jackson.databind.DeserializationContext v2;
com.fasterxml.jackson.core.JsonParser v1;
com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer v0;
java.lang.Object v15, v21, v22, v24;
v0 := @this: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer;
v1 := @parameter0: com.fasterxml.jackson.core.JsonParser;
v2 := @parameter1: com.fasterxml.jackson.databind.DeserializationContext;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
v4 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: boolean hasToken(com.fasterxml.jackson.core.JsonToken)>(v3);
if v4 == 0 goto label1;
v5 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
v6 = staticinvoke <java.util.OptionalDouble: java.util.OptionalDouble of(double)>(v5);
return v6;
label1:
v7 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: int currentTokenId()>();
tableswitch(v7)
{
case 3: goto label8;
case 4: goto label9;
case 5: goto label9;
case 6: goto label2;
case 7: goto label6;
case 8: goto label9;
case 9: goto label9;
case 10: goto label9;
case 11: goto label7;
default: goto label9;
};
label2:
v8 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: java.lang.String getText()>();
v9 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: java.lang.Double _checkDoubleSpecialValue(java.lang.String)>(v8);
if v9 == null goto label3;
v10 = virtualinvoke v9.<java.lang.Double: double doubleValue()>();
v11 = staticinvoke <java.util.OptionalDouble: java.util.OptionalDouble of(double)>(v10);
return v11;
label3:
v12 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: com.fasterxml.jackson.databind.cfg.CoercionAction _checkFromStringCoercion(com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v2, v8);
v13 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsNull>;
if v12 == v13 goto label4;
v14 = <com.fasterxml.jackson.databind.cfg.CoercionAction: com.fasterxml.jackson.databind.cfg.CoercionAction AsEmpty>;
if v12 != v14 goto label5;
label4:
v15 = v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: java.lang.Object _empty>;
return v15;
label5:
v16 = virtualinvoke v8.<java.lang.String: java.lang.String trim()>();
v17 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: double _parseDoublePrimitive(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext,java.lang.String)>(v1, v2, v16);
v18 = staticinvoke <java.util.OptionalDouble: java.util.OptionalDouble of(double)>(v17);
return v18;
label6:
v19 = virtualinvoke v1.<com.fasterxml.jackson.core.JsonParser: double getDoubleValue()>();
v20 = staticinvoke <java.util.OptionalDouble: java.util.OptionalDouble of(double)>(v19);
return v20;
label7:
v21 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: java.lang.Object getNullValue(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
return v21;
label8:
v22 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: java.lang.Object _deserializeFromArray(com.fasterxml.jackson.core.JsonParser,com.fasterxml.jackson.databind.DeserializationContext)>(v1, v2);
return v22;
label9:
v23 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: com.fasterxml.jackson.databind.JavaType getValueType(com.fasterxml.jackson.databind.DeserializationContext)>(v2);
v24 = virtualinvoke v2.<com.fasterxml.jackson.databind.DeserializationContext: java.lang.Object handleUnexpectedToken(com.fasterxml.jackson.databind.JavaType,com.fasterxml.jackson.core.JsonParser)>(v23, v1);
return v24;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer v0;
v0 = new com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: void <init>()>();
<com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer: com.fasterxml.jackson.datatype.jdk8.OptionalDoubleDeserializer INSTANCE> = v0;
return;
}
}