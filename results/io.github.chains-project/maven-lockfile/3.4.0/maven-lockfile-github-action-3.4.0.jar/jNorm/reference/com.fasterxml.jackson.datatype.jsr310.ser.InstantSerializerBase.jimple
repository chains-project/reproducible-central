public abstract class com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase extends com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase
{
private final java.time.format.DateTimeFormatter defaultFormat;
private final java.util.function.ToLongFunction getEpochMillis;
private final java.util.function.ToLongFunction getEpochSeconds;
private final java.util.function.ToIntFunction getNanoseconds;
protected void <init>(java.lang.Class, java.util.function.ToLongFunction, java.util.function.ToLongFunction, java.util.function.ToIntFunction, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v5;
java.util.function.ToIntFunction v4;
java.lang.Class v1;
java.util.function.ToLongFunction v2, v3;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.util.function.ToLongFunction;
v3 := @parameter2: java.util.function.ToLongFunction;
v4 := @parameter3: java.util.function.ToIntFunction;
v5 := @parameter4: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(v1, null);
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.time.format.DateTimeFormatter defaultFormat> = v5;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochMillis> = v2;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochSeconds> = v3;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToIntFunction getNanoseconds> = v4;
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase, java.lang.Boolean, java.time.format.DateTimeFormatter)
{
java.time.format.DateTimeFormatter v3;
java.lang.Boolean v2, v4;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.time.format.DateTimeFormatter;
v4 = v1.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.lang.Boolean _useNanoseconds>;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase,java.lang.Boolean,java.lang.Boolean,java.time.format.DateTimeFormatter)>(v1, v2, v4, v3);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase, java.lang.Boolean, java.lang.Boolean, java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v5;
java.time.format.DateTimeFormatter v4;
java.lang.Boolean v2, v3;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.lang.Boolean;
v4 := @parameter3: java.time.format.DateTimeFormatter;
v5 = v1.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: com.fasterxml.jackson.'annotation'.JsonFormat$Shape _shape>;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase,java.lang.Boolean,java.lang.Boolean,java.time.format.DateTimeFormatter,com.fasterxml.jackson.'annotation'.JsonFormat$Shape)>(v1, v2, v3, v4, v5);
return;
}
protected void <init>(com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase, java.lang.Boolean, java.lang.Boolean, java.time.format.DateTimeFormatter, com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
java.util.function.ToIntFunction v9;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v5;
java.time.format.DateTimeFormatter v4, v6;
java.lang.Boolean v2, v3;
java.util.function.ToLongFunction v7, v8;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0, v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.lang.Boolean;
v4 := @parameter3: java.time.format.DateTimeFormatter;
v5 := @parameter4: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase,java.lang.Boolean,java.lang.Boolean,java.time.format.DateTimeFormatter,com.fasterxml.jackson.'annotation'.JsonFormat$Shape)>(v1, v2, v3, v4, v5);
v6 = v1.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.time.format.DateTimeFormatter defaultFormat>;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.time.format.DateTimeFormatter defaultFormat> = v6;
v7 = v1.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochMillis>;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochMillis> = v7;
v8 = v1.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochSeconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochSeconds> = v8;
v9 = v1.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToIntFunction getNanoseconds>;
v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToIntFunction getNanoseconds> = v9;
return;
}
protected abstract com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase withFormat(java.lang.Boolean, java.time.format.DateTimeFormatter, com.fasterxml.jackson.'annotation'.JsonFormat$Shape);
public void serialize(java.time.temporal.Temporal, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.function.ToIntFunction v8;
long v12, v7;
java.math.BigDecimal v10;
int v9;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v13;
java.time.temporal.Temporal v1;
java.util.function.ToLongFunction v11, v6;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0;
boolean v4, v5;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: java.time.temporal.Temporal;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label2;
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: boolean useNanoseconds(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v5 == 0 goto label1;
v6 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochSeconds>;
v7 = interfaceinvoke v6.<java.util.function.ToLongFunction: long applyAsLong(java.lang.Object)>(v1);
v8 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToIntFunction getNanoseconds>;
v9 = interfaceinvoke v8.<java.util.function.ToIntFunction: int applyAsInt(java.lang.Object)>(v1);
v10 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.DecimalUtils: java.math.BigDecimal toBigDecimal(long,int)>(v7, v9);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(java.math.BigDecimal)>(v10);
return;
label1:
v11 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.util.function.ToLongFunction getEpochMillis>;
v12 = interfaceinvoke v11.<java.util.function.ToLongFunction: long applyAsLong(java.lang.Object)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(long)>(v12);
return;
label2:
v13 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.lang.String formatValue(java.time.temporal.Temporal,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v13);
return;
}
protected void _acceptTimestampVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.core.JsonParser$NumberType v6, v8;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor v7;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat v9;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor v5;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0;
boolean v4;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.SerializerProvider getProvider()>();
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: boolean useNanoseconds(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
v5 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor expectNumberFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v5 == null goto label2;
v6 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType BIG_DECIMAL>;
interfaceinvoke v5.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonNumberFormatVisitor: void numberType(com.fasterxml.jackson.core.JsonParser$NumberType)>(v6);
goto label2;
label1:
v7 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor expectIntegerFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v7 == null goto label2;
v8 = <com.fasterxml.jackson.core.JsonParser$NumberType: com.fasterxml.jackson.core.JsonParser$NumberType LONG>;
interfaceinvoke v7.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor: void numberType(com.fasterxml.jackson.core.JsonParser$NumberType)>(v8);
v9 = <com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat UTC_MILLISEC>;
interfaceinvoke v7.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonIntegerFormatVisitor: void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)>(v9);
label2:
return;
}
protected com.fasterxml.jackson.core.JsonToken serializationShape(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.core.JsonToken v4, v5, v6;
com.fasterxml.jackson.databind.SerializerProvider v1;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0;
boolean v2, v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
if v2 == 0 goto label2;
v3 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: boolean useNanoseconds(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
if v3 == 0 goto label1;
v4 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
return v4;
label1:
v5 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
return v5;
label2:
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
return v6;
}
protected java.lang.String formatValue(java.time.temporal.Temporal, com.fasterxml.jackson.databind.SerializerProvider)
{
java.util.TimeZone v11;
com.fasterxml.jackson.databind.SerializationConfig v7;
java.time.ZoneId v12, v6;
java.time.format.DateTimeFormatter v3, v4, v5;
com.fasterxml.jackson.databind.SerializationFeature v9;
com.fasterxml.jackson.databind.SerializerProvider v2;
java.lang.String v13, v14;
java.time.temporal.Temporal v1;
com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase v0;
boolean v10, v8;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase;
v1 := @parameter0: java.time.temporal.Temporal;
v2 := @parameter1: com.fasterxml.jackson.databind.SerializerProvider;
v3 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.time.format.DateTimeFormatter _formatter>;
if v3 == null goto label1;
v4 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.time.format.DateTimeFormatter _formatter>;
goto label2;
label1:
v4 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.InstantSerializerBase: java.time.format.DateTimeFormatter defaultFormat>;
label2:
v5 = v4;
if v4 == null goto label4;
v6 = virtualinvoke v4.<java.time.format.DateTimeFormatter: java.time.ZoneId getZone()>();
if v6 != null goto label3;
v7 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: com.fasterxml.jackson.databind.SerializationConfig getConfig()>();
v8 = virtualinvoke v7.<com.fasterxml.jackson.databind.SerializationConfig: boolean hasExplicitTimeZone()>();
if v8 == 0 goto label3;
v9 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_CONTEXT_TIME_ZONE>;
v10 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v9);
if v10 == 0 goto label3;
v11 = virtualinvoke v2.<com.fasterxml.jackson.databind.SerializerProvider: java.util.TimeZone getTimeZone()>();
v12 = virtualinvoke v11.<java.util.TimeZone: java.time.ZoneId toZoneId()>();
v5 = virtualinvoke v4.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v12);
label3:
v13 = virtualinvoke v5.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v1);
return v13;
label4:
v14 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v14;
}
}