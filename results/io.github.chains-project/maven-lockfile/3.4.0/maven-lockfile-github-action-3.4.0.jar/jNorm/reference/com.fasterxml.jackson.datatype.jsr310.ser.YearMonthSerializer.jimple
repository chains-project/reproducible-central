public class com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer extends com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase
{
private static final long serialVersionUID;
public static final com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer INSTANCE;
protected void <init>()
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: void <init>(java.time.format.DateTimeFormatter)>(null);
return;
}
public void <init>(java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
java.time.format.DateTimeFormatter v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(java.lang.Class,java.time.format.DateTimeFormatter)>(class "Ljava/time/YearMonth;", v1);
return;
}
private void <init>(com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer, java.lang.Boolean, java.time.format.DateTimeFormatter)
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0, v1;
java.time.format.DateTimeFormatter v3;
java.lang.Boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v2 := @parameter1: java.lang.Boolean;
v3 := @parameter2: java.time.format.DateTimeFormatter;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase,java.lang.Boolean,java.time.format.DateTimeFormatter,com.fasterxml.jackson.'annotation'.JsonFormat$Shape)>(v1, v2, v3, null);
return;
}
protected com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer withFormat(java.lang.Boolean, java.time.format.DateTimeFormatter, com.fasterxml.jackson.'annotation'.JsonFormat$Shape)
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0, v4;
com.fasterxml.jackson.'annotation'.JsonFormat$Shape v3;
java.time.format.DateTimeFormatter v2;
java.lang.Boolean v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: java.lang.Boolean;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 := @parameter2: com.fasterxml.jackson.'annotation'.JsonFormat$Shape;
v4 = new com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
specialinvoke v4.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: void <init>(com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer,java.lang.Boolean,java.time.format.DateTimeFormatter)>(v0, v1, v2);
return v4;
}
public void serialize(java.time.YearMonth, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v2;
java.time.format.DateTimeFormatter v5, v7;
java.time.YearMonth v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v6;
boolean v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: java.time.YearMonth;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeStartArray()>();
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: void _serializeAsArrayContents(java.time.YearMonth,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeEndArray()>();
return;
label1:
v5 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: java.time.format.DateTimeFormatter _formatter>;
if v5 != null goto label2;
v6 = virtualinvoke v1.<java.time.YearMonth: java.lang.String toString()>();
goto label3;
label2:
v7 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: java.time.format.DateTimeFormatter _formatter>;
v6 = virtualinvoke v1.<java.time.YearMonth: java.lang.String format(java.time.format.DateTimeFormatter)>(v7);
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v6);
return;
}
public void serializeWithType(java.time.YearMonth, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider, com.fasterxml.jackson.databind.jsontype.TypeSerializer) throws java.io.IOException
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v2;
com.fasterxml.jackson.databind.jsontype.TypeSerializer v4;
com.fasterxml.jackson.core.type.WritableTypeId v6, v7;
java.time.format.DateTimeFormatter v10, v12;
java.time.YearMonth v1;
com.fasterxml.jackson.core.JsonToken v5, v8, v9;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v11;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: java.time.YearMonth;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 := @parameter3: com.fasterxml.jackson.databind.jsontype.TypeSerializer;
v5 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: com.fasterxml.jackson.core.JsonToken serializationShape(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
v6 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId typeId(java.lang.Object,com.fasterxml.jackson.core.JsonToken)>(v1, v5);
v7 = virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypePrefix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v6);
v8 = v7.<com.fasterxml.jackson.core.type.WritableTypeId: com.fasterxml.jackson.core.JsonToken valueShape>;
v9 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
if v8 != v9 goto label1;
virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: void _serializeAsArrayContents(java.time.YearMonth,com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.databind.SerializerProvider)>(v1, v2, v3);
goto label4;
label1:
v10 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: java.time.format.DateTimeFormatter _formatter>;
if v10 != null goto label2;
v11 = virtualinvoke v1.<java.time.YearMonth: java.lang.String toString()>();
goto label3;
label2:
v12 = v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: java.time.format.DateTimeFormatter _formatter>;
v11 = virtualinvoke v1.<java.time.YearMonth: java.lang.String format(java.time.format.DateTimeFormatter)>(v12);
label3:
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v11);
label4:
virtualinvoke v4.<com.fasterxml.jackson.databind.jsontype.TypeSerializer: com.fasterxml.jackson.core.type.WritableTypeId writeTypeSuffix(com.fasterxml.jackson.core.JsonGenerator,com.fasterxml.jackson.core.type.WritableTypeId)>(v2, v7);
return;
}
protected void _serializeAsArrayContents(java.time.YearMonth, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
com.fasterxml.jackson.core.JsonGenerator v2;
int v4, v5;
java.time.YearMonth v1;
com.fasterxml.jackson.databind.SerializerProvider v3;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: java.time.YearMonth;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = virtualinvoke v1.<java.time.YearMonth: int getYear()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v4);
v5 = virtualinvoke v1.<java.time.YearMonth: int getMonthValue()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeNumber(int)>(v5);
return;
}
protected void _acceptTimestampVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper, com.fasterxml.jackson.databind.JavaType) throws com.fasterxml.jackson.databind.JsonMappingException
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor v6;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat v7;
com.fasterxml.jackson.databind.JavaType v2;
com.fasterxml.jackson.databind.SerializerProvider v3;
boolean v4, v5;
com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper v1;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper;
v2 := @parameter1: com.fasterxml.jackson.databind.JavaType;
v3 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.SerializerProvider getProvider()>();
if v3 == null goto label1;
v4 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v4 == 0 goto label1;
v5 = 1;
goto label2;
label1:
v5 = 0;
label2:
if v5 == 0 goto label3;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.JSR310FormattedSerializerBase: void _acceptTimestampVisitor(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper,com.fasterxml.jackson.databind.JavaType)>(v1, v2);
goto label4;
label3:
v6 = interfaceinvoke v1.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonFormatVisitorWrapper: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor expectStringFormat(com.fasterxml.jackson.databind.JavaType)>(v2);
if v6 == null goto label4;
v7 = <com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat: com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat DATE_TIME>;
interfaceinvoke v6.<com.fasterxml.jackson.databind.jsonFormatVisitors.JsonStringFormatVisitor: void format(com.fasterxml.jackson.databind.jsonFormatVisitors.JsonValueFormat)>(v7);
label4:
return;
}
protected com.fasterxml.jackson.core.JsonToken serializationShape(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
com.fasterxml.jackson.core.JsonToken v3;
com.fasterxml.jackson.databind.SerializerProvider v1;
boolean v2;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
v1 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v2 = virtualinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: boolean useTimestamp(com.fasterxml.jackson.databind.SerializerProvider)>(v1);
if v2 == 0 goto label1;
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken START_ARRAY>;
goto label2;
label1:
v3 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
label2:
return v3;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer v0;
v0 = new com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer: com.fasterxml.jackson.datatype.jsr310.ser.YearMonthSerializer INSTANCE> = v0;
return;
}
}