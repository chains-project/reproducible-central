public class com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer extends com.fasterxml.jackson.databind.JsonSerializer
{
public static final com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer INSTANCE;
private void <init>()
{
com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer v0;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonSerializer: void <init>()>();
return;
}
public void serialize(java.time.ZonedDateTime, com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException, com.fasterxml.jackson.core.JsonProcessingException
{
com.fasterxml.jackson.core.JsonGenerator v2;
java.time.ZonedDateTime v1;
long v10, v15;
java.math.BigDecimal v12;
int v11;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v13, v16, v18, v7;
boolean v5, v8, v9;
java.time.Instant v14;
com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer v0;
java.time.format.DateTimeFormatter v17, v6;
com.fasterxml.jackson.databind.SerializationFeature v4;
v0 := @this: com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer;
v1 := @parameter0: java.time.ZonedDateTime;
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATES_WITH_ZONE_ID>;
v5 = virtualinvoke v3.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v4);
if v5 == 0 goto label1;
v6 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_ZONED_DATE_TIME>;
v7 = virtualinvoke v6.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v7);
goto label4;
label1:
v8 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer: boolean useTimestamps(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v8 == 0 goto label3;
v9 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer: boolean useNanos(com.fasterxml.jackson.databind.SerializerProvider)>(v3);
if v9 == 0 goto label2;
v10 = virtualinvoke v1.<java.time.ZonedDateTime: long toEpochSecond()>();
v11 = virtualinvoke v1.<java.time.ZonedDateTime: int getNano()>();
v12 = staticinvoke <com.fasterxml.jackson.datatype.jsr310.DecimalUtils: java.math.BigDecimal toBigDecimal(long,int)>(v10, v11);
v13 = virtualinvoke v12.<java.math.BigDecimal: java.lang.String toString()>();
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v13);
goto label4;
label2:
v14 = virtualinvoke v1.<java.time.ZonedDateTime: java.time.Instant toInstant()>();
v15 = virtualinvoke v14.<java.time.Instant: long toEpochMilli()>();
v16 = staticinvoke <java.lang.String: java.lang.String valueOf(long)>(v15);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v16);
goto label4;
label3:
v17 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_OFFSET_DATE_TIME>;
v18 = virtualinvoke v17.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeFieldName(java.lang.String)>(v18);
label4:
return;
}
private static boolean useNanos(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.databind.SerializationFeature v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v1 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
return v2;
}
private static boolean useTimestamps(com.fasterxml.jackson.databind.SerializerProvider)
{
com.fasterxml.jackson.databind.SerializationFeature v1;
com.fasterxml.jackson.databind.SerializerProvider v0;
boolean v2;
v0 := @parameter0: com.fasterxml.jackson.databind.SerializerProvider;
v1 = <com.fasterxml.jackson.databind.SerializationFeature: com.fasterxml.jackson.databind.SerializationFeature WRITE_DATE_KEYS_AS_TIMESTAMPS>;
v2 = virtualinvoke v0.<com.fasterxml.jackson.databind.SerializerProvider: boolean isEnabled(com.fasterxml.jackson.databind.SerializationFeature)>(v1);
return v2;
}
static void <clinit>()
{
com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer v0;
v0 = new com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer;
specialinvoke v0.<com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer: void <init>()>();
<com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer: com.fasterxml.jackson.datatype.jsr310.ser.key.ZonedDateTimeKeySerializer INSTANCE> = v0;
return;
}
}