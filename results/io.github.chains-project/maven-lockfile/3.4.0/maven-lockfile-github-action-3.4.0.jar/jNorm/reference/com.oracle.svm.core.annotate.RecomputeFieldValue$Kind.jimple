public final enum class com.oracle.svm.core.annotate.RecomputeFieldValue$Kind extends java.lang.Enum
{
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind None;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Reset;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind NewInstance;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind NewInstanceWhenNotNull;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind FromAlias;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind FieldOffset;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayBaseOffset;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayIndexScale;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayIndexShift;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind AtomicFieldUpdaterOffset;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind TranslateFieldOffset;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Manual;
public static final enum com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Custom;
private static final com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] $VALUES;
public static com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] values()
{
java.lang.Object v1;
com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] v0;
v0 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static com.oracle.svm.core.annotate.RecomputeFieldValue$Kind valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lcom/oracle/svm/core/annotate/RecomputeFieldValue$Kind;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
com.oracle.svm.core.annotate.RecomputeFieldValue$Kind v0;
java.lang.String v1;
v0 := @this: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] $values()
{
com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] v0;
com.oracle.svm.core.annotate.RecomputeFieldValue$Kind v1, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (com.oracle.svm.core.annotate.RecomputeFieldValue$Kind)[13];
v1 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind None>;
v0[0] = v1;
v2 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Reset>;
v0[1] = v2;
v3 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind NewInstance>;
v0[2] = v3;
v4 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind NewInstanceWhenNotNull>;
v0[3] = v4;
v5 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind FromAlias>;
v0[4] = v5;
v6 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind FieldOffset>;
v0[5] = v6;
v7 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayBaseOffset>;
v0[6] = v7;
v8 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayIndexScale>;
v0[7] = v8;
v9 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayIndexShift>;
v0[8] = v9;
v10 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind AtomicFieldUpdaterOffset>;
v0[9] = v10;
v11 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind TranslateFieldOffset>;
v0[10] = v11;
v12 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Manual>;
v0[11] = v12;
v13 = <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Custom>;
v0[12] = v13;
return v0;
}
static void <clinit>()
{
com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] v13;
com.oracle.svm.core.annotate.RecomputeFieldValue$Kind v0, v1, v10, v11, v12, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v0.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("None", 0);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind None> = v0;
v1 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v1.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("Reset", 1);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Reset> = v1;
v2 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v2.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("NewInstance", 2);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind NewInstance> = v2;
v3 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v3.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("NewInstanceWhenNotNull", 3);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind NewInstanceWhenNotNull> = v3;
v4 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v4.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("FromAlias", 4);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind FromAlias> = v4;
v5 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v5.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("FieldOffset", 5);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind FieldOffset> = v5;
v6 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v6.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("ArrayBaseOffset", 6);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayBaseOffset> = v6;
v7 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v7.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("ArrayIndexScale", 7);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayIndexScale> = v7;
v8 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v8.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("ArrayIndexShift", 8);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind ArrayIndexShift> = v8;
v9 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v9.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("AtomicFieldUpdaterOffset", 9);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind AtomicFieldUpdaterOffset> = v9;
v10 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v10.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("TranslateFieldOffset", 10);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind TranslateFieldOffset> = v10;
v11 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v11.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("Manual", 11);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Manual> = v11;
v12 = new com.oracle.svm.core.annotate.RecomputeFieldValue$Kind;
specialinvoke v12.<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: void <init>(java.lang.String,int)>("Custom", 12);
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind Custom> = v12;
v13 = staticinvoke <com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] $values()>();
<com.oracle.svm.core.annotate.RecomputeFieldValue$Kind: com.oracle.svm.core.annotate.RecomputeFieldValue$Kind[] $VALUES> = v13;
return;
}
}