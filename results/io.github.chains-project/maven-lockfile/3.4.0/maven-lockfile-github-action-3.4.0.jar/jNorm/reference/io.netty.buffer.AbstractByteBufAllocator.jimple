public abstract class io.netty.buffer.AbstractByteBufAllocator extends java.lang.Object implements io.netty.buffer.ByteBufAllocator
{
static final int DEFAULT_INITIAL_CAPACITY;
static final int DEFAULT_MAX_CAPACITY;
static final int DEFAULT_MAX_COMPONENTS;
static final int CALCULATE_THRESHOLD;
private final boolean directByDefault;
private final io.netty.buffer.ByteBuf emptyBuf;
protected static io.netty.buffer.ByteBuf toLeakAwareBuffer(io.netty.buffer.ByteBuf)
{
io.netty.util.ResourceLeakDetector$Level v2;
io.netty.buffer.AdvancedLeakAwareByteBuf v10;
io.netty.util.ResourceLeakDetector v5, v8;
io.netty.buffer.ByteBuf v0;
int[] v1;
int v3, v4;
io.netty.buffer.SimpleLeakAwareByteBuf v7;
io.netty.util.ResourceLeakTracker v6, v9;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 = <io.netty.buffer.AbstractByteBufAllocator$1: int[] $SwitchMap$io$netty$util$ResourceLeakDetector$Level>;
v2 = staticinvoke <io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakDetector$Level getLevel()>();
v3 = virtualinvoke v2.<io.netty.util.ResourceLeakDetector$Level: int ordinal()>();
v4 = v1[v3];
tableswitch(v4)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label2;
default: goto label3;
};
label1:
v5 = <io.netty.buffer.AbstractByteBuf: io.netty.util.ResourceLeakDetector leakDetector>;
v6 = virtualinvoke v5.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v0);
if v6 == null goto label3;
v7 = new io.netty.buffer.SimpleLeakAwareByteBuf;
specialinvoke v7.<io.netty.buffer.SimpleLeakAwareByteBuf: void <init>(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v0, v6);
v0 = v7;
goto label3;
label2:
v8 = <io.netty.buffer.AbstractByteBuf: io.netty.util.ResourceLeakDetector leakDetector>;
v9 = virtualinvoke v8.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v0);
if v9 == null goto label3;
v10 = new io.netty.buffer.AdvancedLeakAwareByteBuf;
specialinvoke v10.<io.netty.buffer.AdvancedLeakAwareByteBuf: void <init>(io.netty.buffer.ByteBuf,io.netty.util.ResourceLeakTracker)>(v0, v9);
v0 = v10;
label3:
return v0;
}
protected static io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf)
{
io.netty.buffer.AdvancedLeakAwareCompositeByteBuf v10;
io.netty.util.ResourceLeakDetector$Level v2;
io.netty.util.ResourceLeakDetector v5, v8;
io.netty.buffer.CompositeByteBuf v0;
int[] v1;
int v3, v4;
io.netty.buffer.SimpleLeakAwareCompositeByteBuf v7;
io.netty.util.ResourceLeakTracker v6, v9;
v0 := @parameter0: io.netty.buffer.CompositeByteBuf;
v1 = <io.netty.buffer.AbstractByteBufAllocator$1: int[] $SwitchMap$io$netty$util$ResourceLeakDetector$Level>;
v2 = staticinvoke <io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakDetector$Level getLevel()>();
v3 = virtualinvoke v2.<io.netty.util.ResourceLeakDetector$Level: int ordinal()>();
v4 = v1[v3];
tableswitch(v4)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label2;
default: goto label3;
};
label1:
v5 = <io.netty.buffer.AbstractByteBuf: io.netty.util.ResourceLeakDetector leakDetector>;
v6 = virtualinvoke v5.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v0);
if v6 == null goto label3;
v7 = new io.netty.buffer.SimpleLeakAwareCompositeByteBuf;
specialinvoke v7.<io.netty.buffer.SimpleLeakAwareCompositeByteBuf: void <init>(io.netty.buffer.CompositeByteBuf,io.netty.util.ResourceLeakTracker)>(v0, v6);
v0 = v7;
goto label3;
label2:
v8 = <io.netty.buffer.AbstractByteBuf: io.netty.util.ResourceLeakDetector leakDetector>;
v9 = virtualinvoke v8.<io.netty.util.ResourceLeakDetector: io.netty.util.ResourceLeakTracker track(java.lang.Object)>(v0);
if v9 == null goto label3;
v10 = new io.netty.buffer.AdvancedLeakAwareCompositeByteBuf;
specialinvoke v10.<io.netty.buffer.AdvancedLeakAwareCompositeByteBuf: void <init>(io.netty.buffer.CompositeByteBuf,io.netty.util.ResourceLeakTracker)>(v0, v9);
v0 = v10;
label3:
return v0;
}
protected void <init>()
{
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
specialinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: void <init>(boolean)>(0);
return;
}
protected void <init>(boolean)
{
io.netty.buffer.EmptyByteBuf v4;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v1, v2, v3;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v1 == 0 goto label1;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault> = v3;
v4 = new io.netty.buffer.EmptyByteBuf;
specialinvoke v4.<io.netty.buffer.EmptyByteBuf: void <init>(io.netty.buffer.ByteBufAllocator)>(v0);
v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf emptyBuf> = v4;
return;
}
public io.netty.buffer.ByteBuf buffer()
{
io.netty.buffer.ByteBuf v2, v3;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v1;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault>;
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer()>();
return v2;
label1:
v3 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer()>();
return v3;
}
public io.netty.buffer.ByteBuf buffer(int)
{
io.netty.buffer.ByteBuf v3, v4;
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v2;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault>;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int)>(v1);
return v3;
label1:
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(v1);
return v4;
}
public io.netty.buffer.ByteBuf buffer(int, int)
{
io.netty.buffer.ByteBuf v4, v5;
int v1, v2;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v3;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault>;
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int,int)>(v1, v2);
return v4;
label1:
v5 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int,int)>(v1, v2);
return v5;
}
public io.netty.buffer.ByteBuf ioBuffer()
{
io.netty.buffer.ByteBuf v3, v4;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v1, v2;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v1 != 0 goto label1;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: boolean isDirectBufferPooled()>();
if v2 == 0 goto label2;
label1:
v3 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int)>(256);
return v3;
label2:
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(256);
return v4;
}
public io.netty.buffer.ByteBuf ioBuffer(int)
{
io.netty.buffer.ByteBuf v4, v5;
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v2, v3;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: boolean isDirectBufferPooled()>();
if v3 == 0 goto label2;
label1:
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int)>(v1);
return v4;
label2:
v5 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(v1);
return v5;
}
public io.netty.buffer.ByteBuf ioBuffer(int, int)
{
io.netty.buffer.ByteBuf v5, v6;
int v1, v2;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v3, v4;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v3 != 0 goto label1;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: boolean isDirectBufferPooled()>();
if v4 == 0 goto label2;
label1:
v5 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int,int)>(v1, v2);
return v5;
label2:
v6 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int,int)>(v1, v2);
return v6;
}
public io.netty.buffer.ByteBuf heapBuffer()
{
io.netty.buffer.AbstractByteBufAllocator v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int,int)>(256, 2147483647);
return v1;
}
public io.netty.buffer.ByteBuf heapBuffer(int)
{
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
io.netty.buffer.ByteBuf v2;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int,int)>(v1, 2147483647);
return v2;
}
public io.netty.buffer.ByteBuf heapBuffer(int, int)
{
io.netty.buffer.ByteBuf v3, v4;
int v1, v2;
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
if v1 != 0 goto label1;
if v2 != 0 goto label1;
v3 = v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf emptyBuf>;
return v3;
label1:
staticinvoke <io.netty.buffer.AbstractByteBufAllocator: void validate(int,int)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf newHeapBuffer(int,int)>(v1, v2);
return v4;
}
public io.netty.buffer.ByteBuf directBuffer()
{
io.netty.buffer.AbstractByteBufAllocator v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int,int)>(256, 2147483647);
return v1;
}
public io.netty.buffer.ByteBuf directBuffer(int)
{
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
io.netty.buffer.ByteBuf v2;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf directBuffer(int,int)>(v1, 2147483647);
return v2;
}
public io.netty.buffer.ByteBuf directBuffer(int, int)
{
io.netty.buffer.ByteBuf v3, v4;
int v1, v2;
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
if v1 != 0 goto label1;
if v2 != 0 goto label1;
v3 = v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf emptyBuf>;
return v3;
label1:
staticinvoke <io.netty.buffer.AbstractByteBufAllocator: void validate(int,int)>(v1, v2);
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.ByteBuf newDirectBuffer(int,int)>(v1, v2);
return v4;
}
public io.netty.buffer.CompositeByteBuf compositeBuffer()
{
io.netty.buffer.CompositeByteBuf v2, v3;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v1;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault>;
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeDirectBuffer()>();
return v2;
label1:
v3 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeHeapBuffer()>();
return v3;
}
public io.netty.buffer.CompositeByteBuf compositeBuffer(int)
{
io.netty.buffer.CompositeByteBuf v3, v4;
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
boolean v2;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault>;
if v2 == 0 goto label1;
v3 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int)>(v1);
return v3;
label1:
v4 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int)>(v1);
return v4;
}
public io.netty.buffer.CompositeByteBuf compositeHeapBuffer()
{
io.netty.buffer.CompositeByteBuf v1;
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int)>(16);
return v1;
}
public io.netty.buffer.CompositeByteBuf compositeHeapBuffer(int)
{
io.netty.buffer.CompositeByteBuf v2, v3;
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = new io.netty.buffer.CompositeByteBuf;
specialinvoke v2.<io.netty.buffer.CompositeByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,boolean,int)>(v0, 0, v1);
v3 = staticinvoke <io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf)>(v2);
return v3;
}
public io.netty.buffer.CompositeByteBuf compositeDirectBuffer()
{
io.netty.buffer.CompositeByteBuf v1;
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = virtualinvoke v0.<io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int)>(16);
return v1;
}
public io.netty.buffer.CompositeByteBuf compositeDirectBuffer(int)
{
io.netty.buffer.CompositeByteBuf v2, v3;
int v1;
io.netty.buffer.AbstractByteBufAllocator v0;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 = new io.netty.buffer.CompositeByteBuf;
specialinvoke v2.<io.netty.buffer.CompositeByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,boolean,int)>(v0, 1, v1);
v3 = staticinvoke <io.netty.buffer.AbstractByteBufAllocator: io.netty.buffer.CompositeByteBuf toLeakAwareBuffer(io.netty.buffer.CompositeByteBuf)>(v2);
return v3;
}
private static void validate(int, int)
{
java.lang.Object[] v3;
int v0, v1;
java.lang.String v6;
java.lang.IllegalArgumentException v2;
java.lang.Integer v4, v5;
v0 := @parameter0: int;
v1 := @parameter1: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v0, "initialCapacity");
if v0 <= v1 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = newarray (java.lang.Object)[2];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v3[1] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("initialCapacity: %d (expected: not greater than maxCapacity(%d)", v3);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v2;
label1:
return;
}
protected abstract io.netty.buffer.ByteBuf newHeapBuffer(int, int);
protected abstract io.netty.buffer.ByteBuf newDirectBuffer(int, int);
public java.lang.String toString()
{
io.netty.buffer.AbstractByteBufAllocator v0;
java.lang.String v1, v3;
boolean v2;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 = staticinvoke <io.netty.util.internal.StringUtil: java.lang.String simpleClassName(java.lang.Object)>(v0);
v2 = v0.<io.netty.buffer.AbstractByteBufAllocator: boolean directByDefault>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,boolean)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001(directByDefault: \u0001)");
return v3;
}
public int calculateNewCapacity(int, int)
{
java.lang.Object[] v4;
io.netty.buffer.AbstractByteBufAllocator v0;
java.lang.IllegalArgumentException v3;
java.lang.Integer v5, v6;
int v1, v10, v11, v12, v13, v14, v2, v8, v9;
java.lang.String v7;
v0 := @this: io.netty.buffer.AbstractByteBufAllocator;
v1 := @parameter0: int;
v2 := @parameter1: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "minNewCapacity");
if v1 <= v2 goto label1;
v3 = new java.lang.IllegalArgumentException;
v4 = newarray (java.lang.Object)[2];
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v4[0] = v5;
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v4[1] = v6;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("minNewCapacity: %d (expected: not greater than maxCapacity(%d)", v4);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v3;
label1:
if v1 != 4194304 goto label2;
return 4194304;
label2:
if v1 <= 4194304 goto label5;
v8 = v1 / 4194304;
v9 = v8 * 4194304;
v10 = v2 - 4194304;
if v9 <= v10 goto label3;
v11 = v2;
goto label4;
label3:
v11 = v9 + 4194304;
label4:
return v11;
label5:
v12 = staticinvoke <java.lang.Math: int max(int,int)>(v1, 64);
v13 = staticinvoke <io.netty.util.internal.MathUtil: int findNextPositivePowerOfTwo(int)>(v12);
v14 = staticinvoke <java.lang.Math: int min(int,int)>(v13, v2);
return v14;
}
static void <clinit>()
{
java.lang.String[] v0;
v0 = newarray (java.lang.String)[1];
v0[0] = "toLeakAwareBuffer";
staticinvoke <io.netty.util.ResourceLeakDetector: void addExclusions(java.lang.Class,java.lang.String[])>(class "Lio/netty/buffer/AbstractByteBufAllocator;", v0);
return;
}
}