abstract class io.netty.buffer.AbstractUnsafeSwappedByteBuf extends io.netty.buffer.SwappedByteBuf
{
private final boolean nativeByteOrder;
private final io.netty.buffer.AbstractByteBuf wrapped;
static final boolean $assertionsDisabled;
void <init>(io.netty.buffer.AbstractByteBuf)
{
io.netty.buffer.AbstractByteBuf v1;
java.lang.AssertionError v4;
java.nio.ByteOrder v6, v7;
boolean v2, v3, v5, v8, v9;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: io.netty.buffer.AbstractByteBuf;
specialinvoke v0.<io.netty.buffer.SwappedByteBuf: void <init>(io.netty.buffer.ByteBuf)>(v1);
v2 = <io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean $assertionsDisabled>;
if v2 != 0 goto label1;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean isUnaligned()>();
if v3 != 0 goto label1;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label1:
v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped> = v1;
v5 = <io.netty.util.internal.PlatformDependent: boolean BIG_ENDIAN_NATIVE_ORDER>;
v6 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: java.nio.ByteOrder order()>();
v7 = <java.nio.ByteOrder: java.nio.ByteOrder BIG_ENDIAN>;
if v6 != v7 goto label2;
v8 = 1;
goto label3;
label2:
v8 = 0;
label3:
if v5 != v8 goto label4;
v9 = 1;
goto label5;
label4:
v9 = 0;
label5:
v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder> = v9;
return;
}
public final long getLong(int)
{
io.netty.buffer.AbstractByteBuf v2, v3;
int v1;
long v4, v6;
boolean v5;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v2.<io.netty.buffer.AbstractByteBuf: void checkIndex(int,int)>(v1, 8);
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: long _getLong(io.netty.buffer.AbstractByteBuf,int)>(v3, v1);
v5 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v5 == 0 goto label1;
v6 = v4;
goto label2;
label1:
v6 = staticinvoke <java.lang.Long: long reverseBytes(long)>(v4);
label2:
return v6;
}
public final float getFloat(int)
{
int v1, v2;
float v3;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: int getInt(int)>(v1);
v3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(v2);
return v3;
}
public final double getDouble(int)
{
int v1;
long v2;
double v3;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: long getLong(int)>(v1);
v3 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(v2);
return v3;
}
public final char getChar(int)
{
int v1;
short v2;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: short getShort(int)>(v1);
return v2;
}
public final long getUnsignedInt(int)
{
int v1, v2;
long v3;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: int getInt(int)>(v1);
v3 = v2 & 4294967295L;
return v3;
}
public final int getInt(int)
{
io.netty.buffer.AbstractByteBuf v2, v3;
int v1, v4, v6;
boolean v5;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v2.<io.netty.buffer.AbstractByteBuf: void checkIndex(int,int)>(v1, 4);
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: int _getInt(io.netty.buffer.AbstractByteBuf,int)>(v3, v1);
v5 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v5 == 0 goto label1;
v6 = v4;
goto label2;
label1:
v6 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(v4);
label2:
return v6;
}
public final int getUnsignedShort(int)
{
short v2;
int v1, v3, v4;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: short getShort(int)>(v1);
v3 = (int) 65535;
v4 = v2 & v3;
return v4;
}
public final short getShort(int)
{
io.netty.buffer.AbstractByteBuf v2, v3;
short v4, v6;
int v1;
boolean v5;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v2.<io.netty.buffer.AbstractByteBuf: void checkIndex(int,int)>(v1, 2);
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v4 = virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: short _getShort(io.netty.buffer.AbstractByteBuf,int)>(v3, v1);
v5 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v5 == 0 goto label1;
v6 = v4;
goto label2;
label1:
v6 = staticinvoke <java.lang.Short: short reverseBytes(short)>(v4);
label2:
return v6;
}
public final io.netty.buffer.ByteBuf setShort(int, int)
{
io.netty.buffer.AbstractByteBuf v3, v4;
int v1, v2;
boolean v5;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v3.<io.netty.buffer.AbstractByteBuf: void checkIndex(int,int)>(v1, 2);
v4 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v5 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v5 != 0 goto label1;
v2 = staticinvoke <java.lang.Short: short reverseBytes(short)>(v2);
label1:
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: void _setShort(io.netty.buffer.AbstractByteBuf,int,short)>(v4, v1, v2);
return v0;
}
public final io.netty.buffer.ByteBuf setInt(int, int)
{
io.netty.buffer.AbstractByteBuf v3, v4;
int v1, v2, v6;
boolean v5;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v3.<io.netty.buffer.AbstractByteBuf: void checkIndex(int,int)>(v1, 4);
v4 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v5 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v5 == 0 goto label1;
v6 = v2;
goto label2;
label1:
v6 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(v2);
label2:
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: void _setInt(io.netty.buffer.AbstractByteBuf,int,int)>(v4, v1, v6);
return v0;
}
public final io.netty.buffer.ByteBuf setLong(int, long)
{
io.netty.buffer.AbstractByteBuf v3, v4;
int v1;
long v2, v6;
boolean v5;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: long;
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v3.<io.netty.buffer.AbstractByteBuf: void checkIndex(int,int)>(v1, 8);
v4 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v5 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v5 == 0 goto label1;
v6 = v2;
goto label2;
label1:
v6 = staticinvoke <java.lang.Long: long reverseBytes(long)>(v2);
label2:
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: void _setLong(io.netty.buffer.AbstractByteBuf,int,long)>(v4, v1, v6);
return v0;
}
public final io.netty.buffer.ByteBuf setChar(int, int)
{
int v1, v2;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: int;
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.ByteBuf setShort(int,int)>(v1, v2);
return v0;
}
public final io.netty.buffer.ByteBuf setFloat(int, float)
{
int v1, v3;
float v2;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: float;
v3 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(v2);
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v1, v3);
return v0;
}
public final io.netty.buffer.ByteBuf setDouble(int, double)
{
int v1;
long v3;
double v2;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 := @parameter1: double;
v3 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(v2);
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.ByteBuf setLong(int,long)>(v1, v3);
return v0;
}
public final io.netty.buffer.ByteBuf writeShort(int)
{
io.netty.buffer.AbstractByteBuf v2, v3, v4, v7;
int v1, v5, v8, v9;
boolean v6;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v2.<io.netty.buffer.AbstractByteBuf: void ensureWritable0(int)>(2);
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v4 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v5 = v4.<io.netty.buffer.AbstractByteBuf: int writerIndex>;
v6 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v6 != 0 goto label1;
v1 = staticinvoke <java.lang.Short: short reverseBytes(short)>(v1);
label1:
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: void _setShort(io.netty.buffer.AbstractByteBuf,int,short)>(v3, v5, v1);
v7 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v8 = v7.<io.netty.buffer.AbstractByteBuf: int writerIndex>;
v9 = v8 + 2;
v7.<io.netty.buffer.AbstractByteBuf: int writerIndex> = v9;
return v0;
}
public final io.netty.buffer.ByteBuf writeInt(int)
{
io.netty.buffer.AbstractByteBuf v2, v3, v4, v8;
int v1, v10, v5, v7, v9;
boolean v6;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v2.<io.netty.buffer.AbstractByteBuf: void ensureWritable0(int)>(4);
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v4 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v5 = v4.<io.netty.buffer.AbstractByteBuf: int writerIndex>;
v6 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v6 == 0 goto label1;
v7 = v1;
goto label2;
label1:
v7 = staticinvoke <java.lang.Integer: int reverseBytes(int)>(v1);
label2:
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: void _setInt(io.netty.buffer.AbstractByteBuf,int,int)>(v3, v5, v7);
v8 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v9 = v8.<io.netty.buffer.AbstractByteBuf: int writerIndex>;
v10 = v9 + 4;
v8.<io.netty.buffer.AbstractByteBuf: int writerIndex> = v10;
return v0;
}
public final io.netty.buffer.ByteBuf writeLong(long)
{
io.netty.buffer.AbstractByteBuf v2, v3, v4, v8;
long v1, v7;
int v10, v5, v9;
boolean v6;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: long;
v2 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
virtualinvoke v2.<io.netty.buffer.AbstractByteBuf: void ensureWritable0(int)>(8);
v3 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v4 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v5 = v4.<io.netty.buffer.AbstractByteBuf: int writerIndex>;
v6 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean nativeByteOrder>;
if v6 == 0 goto label1;
v7 = v1;
goto label2;
label1:
v7 = staticinvoke <java.lang.Long: long reverseBytes(long)>(v1);
label2:
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: void _setLong(io.netty.buffer.AbstractByteBuf,int,long)>(v3, v5, v7);
v8 = v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.AbstractByteBuf wrapped>;
v9 = v8.<io.netty.buffer.AbstractByteBuf: int writerIndex>;
v10 = v9 + 8;
v8.<io.netty.buffer.AbstractByteBuf: int writerIndex> = v10;
return v0;
}
public final io.netty.buffer.ByteBuf writeChar(int)
{
int v1;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: int;
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v1);
return v0;
}
public final io.netty.buffer.ByteBuf writeFloat(float)
{
int v2;
float v1;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: float;
v2 = staticinvoke <java.lang.Float: int floatToRawIntBits(float)>(v1);
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(v2);
return v0;
}
public final io.netty.buffer.ByteBuf writeDouble(double)
{
long v2;
double v1;
io.netty.buffer.AbstractUnsafeSwappedByteBuf v0;
v0 := @this: io.netty.buffer.AbstractUnsafeSwappedByteBuf;
v1 := @parameter0: double;
v2 = staticinvoke <java.lang.Double: long doubleToRawLongBits(double)>(v1);
virtualinvoke v0.<io.netty.buffer.AbstractUnsafeSwappedByteBuf: io.netty.buffer.ByteBuf writeLong(long)>(v2);
return v0;
}
protected abstract short _getShort(io.netty.buffer.AbstractByteBuf, int);
protected abstract int _getInt(io.netty.buffer.AbstractByteBuf, int);
protected abstract long _getLong(io.netty.buffer.AbstractByteBuf, int);
protected abstract void _setShort(io.netty.buffer.AbstractByteBuf, int, short);
protected abstract void _setInt(io.netty.buffer.AbstractByteBuf, int, int);
protected abstract void _setLong(io.netty.buffer.AbstractByteBuf, int, long);
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/buffer/AbstractUnsafeSwappedByteBuf;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.buffer.AbstractUnsafeSwappedByteBuf: boolean $assertionsDisabled> = v2;
return;
}
}