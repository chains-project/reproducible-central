public class io.netty.buffer.ByteBufInputStream extends java.io.InputStream implements java.io.DataInput
{
private final io.netty.buffer.ByteBuf buffer;
private final int startIndex;
private final int endIndex;
private boolean closed;
private final boolean releaseOnClose;
private java.lang.StringBuilder lineBuf;
public void <init>(io.netty.buffer.ByteBuf)
{
int v2;
io.netty.buffer.ByteBuf v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void <init>(io.netty.buffer.ByteBuf,int)>(v1, v2);
return;
}
public void <init>(io.netty.buffer.ByteBuf, int)
{
int v2;
io.netty.buffer.ByteBuf v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void <init>(io.netty.buffer.ByteBuf,int,boolean)>(v1, v2, 0);
return;
}
public void <init>(io.netty.buffer.ByteBuf, boolean)
{
io.netty.buffer.ByteBuf v1;
int v3;
io.netty.buffer.ByteBufInputStream v0;
boolean v2;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void <init>(io.netty.buffer.ByteBuf,int,boolean)>(v1, v3, v2);
return;
}
public void <init>(io.netty.buffer.ByteBuf, int, boolean)
{
java.lang.IndexOutOfBoundsException v5;
io.netty.buffer.ByteBuf v1;
int v10, v2, v4, v6, v8, v9;
java.lang.String v7;
io.netty.buffer.ByteBufInputStream v0;
boolean v3;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
specialinvoke v0.<java.io.InputStream: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "buffer");
if v2 >= 0 goto label2;
if v3 == 0 goto label1;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
label1:
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v2, "length");
label2:
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v2 <= v4 goto label4;
if v3 == 0 goto label3;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
label3:
v5 = new java.lang.IndexOutOfBoundsException;
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v2, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Too many bytes to be read - Needs \u0001, maximum is \u0001");
specialinvoke v5.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v7);
throw v5;
label4:
v0.<io.netty.buffer.ByteBufInputStream: boolean releaseOnClose> = v3;
v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer> = v1;
v8 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v0.<io.netty.buffer.ByteBufInputStream: int startIndex> = v8;
v9 = v0.<io.netty.buffer.ByteBufInputStream: int startIndex>;
v10 = v9 + v2;
v0.<io.netty.buffer.ByteBufInputStream: int endIndex> = v10;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf markReaderIndex()>();
return;
}
public int readBytes()
{
io.netty.buffer.ByteBuf v1;
int v2, v3, v4;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v3 = v0.<io.netty.buffer.ByteBufInputStream: int startIndex>;
v4 = v2 - v3;
return v4;
}
public void close() throws java.io.IOException
{
io.netty.buffer.ByteBuf v3;
io.netty.buffer.ByteBufInputStream v0;
boolean v1, v2;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = v0.<io.netty.buffer.ByteBufInputStream: boolean releaseOnClose>;
if v1 == 0 goto label1;
v2 = v0.<io.netty.buffer.ByteBufInputStream: boolean closed>;
if v2 != 0 goto label1;
v0.<io.netty.buffer.ByteBufInputStream: boolean closed> = 1;
v3 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
label1:
return;
}
public int available() throws java.io.IOException
{
io.netty.buffer.ByteBuf v2;
int v1, v3, v4;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = v0.<io.netty.buffer.ByteBufInputStream: int endIndex>;
v2 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v4 = v1 - v3;
return v4;
}
public void mark(int)
{
int v1;
io.netty.buffer.ByteBuf v2;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf markReaderIndex()>();
return;
}
public boolean markSupported()
{
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
return 1;
}
public int read() throws java.io.IOException
{
short v5;
byte v4;
io.netty.buffer.ByteBuf v3;
int v1, v2;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
if v1 != 0 goto label1;
v2 = (int) -1;
return v2;
label1:
v3 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: byte readByte()>();
v5 = v4 & 255;
return v5;
}
public int read(byte[], int, int) throws java.io.IOException
{
byte[] v1;
io.netty.buffer.ByteBuf v7;
int v2, v3, v4, v5, v6;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
if v4 != 0 goto label1;
v5 = (int) -1;
return v5;
label1:
v6 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v3);
v7 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v7.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readBytes(byte[],int,int)>(v1, v2, v6);
return v6;
}
public void reset() throws java.io.IOException
{
io.netty.buffer.ByteBuf v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf resetReaderIndex()>();
return;
}
public long skip(long) throws java.io.IOException
{
byte v2;
int v3, v4;
long v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: long;
v2 = v1 cmp 2147483647L;
if v2 <= 0 goto label1;
v3 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int skipBytes(int)>(2147483647);
return v3;
label1:
v4 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int skipBytes(int)>(v1);
return v4;
}
public boolean readBoolean() throws java.io.IOException
{
int v1;
io.netty.buffer.ByteBufInputStream v0;
boolean v2;
v0 := @this: io.netty.buffer.ByteBufInputStream;
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void checkAvailable(int)>(1);
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int read()>();
if v1 == 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public byte readByte() throws java.io.IOException
{
byte v4;
io.netty.buffer.ByteBuf v3;
int v1;
java.io.EOFException v2;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
if v1 != 0 goto label1;
v2 = new java.io.EOFException;
specialinvoke v2.<java.io.EOFException: void <init>()>();
throw v2;
label1:
v3 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: byte readByte()>();
return v4;
}
public char readChar() throws java.io.IOException
{
short v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: short readShort()>();
return v1;
}
public double readDouble() throws java.io.IOException
{
long v1;
io.netty.buffer.ByteBufInputStream v0;
double v2;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: long readLong()>();
v2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(v1);
return v2;
}
public float readFloat() throws java.io.IOException
{
int v1;
float v2;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int readInt()>();
v2 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(v1);
return v2;
}
public void readFully(byte[]) throws java.io.IOException
{
int v2;
byte[] v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: byte[];
v2 = lengthof v1;
virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: void readFully(byte[],int,int)>(v1, 0, v2);
return;
}
public void readFully(byte[], int, int) throws java.io.IOException
{
byte[] v1;
io.netty.buffer.ByteBuf v4;
int v2, v3;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void checkAvailable(int)>(v3);
v4 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readBytes(byte[],int,int)>(v1, v2, v3);
return;
}
public int readInt() throws java.io.IOException
{
int v2;
io.netty.buffer.ByteBuf v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void checkAvailable(int)>(4);
v1 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readInt()>();
return v2;
}
public java.lang.String readLine() throws java.io.IOException
{
short v5;
io.netty.buffer.ByteBuf v4, v6, v7, v9;
int v1, v15, v8;
java.lang.String v17;
io.netty.buffer.ByteBufInputStream v0;
char v18;
java.lang.StringBuilder v10, v11, v12, v13, v14, v16, v2, v3;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
if v1 != 0 goto label1;
return null;
label1:
v2 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
if v2 == null goto label2;
v3 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
virtualinvoke v3.<java.lang.StringBuilder: void setLength(int)>(0);
label2:
v4 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v5 = virtualinvoke v4.<io.netty.buffer.ByteBuf: short readUnsignedByte()>();
v1 = v1 - 1;
lookupswitch(v5)
{
case 10: goto label6;
case 13: goto label3;
default: goto label4;
};
label3:
if v1 <= 0 goto label6;
v6 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v7 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v8 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v6.<io.netty.buffer.ByteBuf: short getUnsignedByte(int)>(v8);
if v18 != 10 goto label6;
v9 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v9.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(1);
goto label6;
label4:
v10 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
if v10 != null goto label5;
v11 = new java.lang.StringBuilder;
specialinvoke v11.<java.lang.StringBuilder: void <init>()>();
v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf> = v11;
label5:
v12 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
virtualinvoke v12.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v5);
if v1 > 0 goto label2;
label6:
v13 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
if v13 == null goto label7;
v14 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
v15 = virtualinvoke v14.<java.lang.StringBuilder: int length()>();
if v15 <= 0 goto label7;
v16 = v0.<io.netty.buffer.ByteBufInputStream: java.lang.StringBuilder lineBuf>;
v17 = virtualinvoke v16.<java.lang.StringBuilder: java.lang.String toString()>();
goto label8;
label7:
v17 = "";
label8:
return v17;
}
public long readLong() throws java.io.IOException
{
long v2;
io.netty.buffer.ByteBuf v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void checkAvailable(int)>(8);
v1 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: long readLong()>();
return v2;
}
public short readShort() throws java.io.IOException
{
short v2;
io.netty.buffer.ByteBuf v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
specialinvoke v0.<io.netty.buffer.ByteBufInputStream: void checkAvailable(int)>(2);
v1 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: short readShort()>();
return v2;
}
public java.lang.String readUTF() throws java.io.IOException
{
java.lang.String v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = staticinvoke <java.io.DataInputStream: java.lang.String readUTF(java.io.DataInput)>(v0);
return v1;
}
public int readUnsignedByte() throws java.io.IOException
{
short v2;
byte v1;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: byte readByte()>();
v2 = v1 & 255;
return v2;
}
public int readUnsignedShort() throws java.io.IOException
{
short v1;
int v2, v3;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: short readShort()>();
v2 = (int) 65535;
v3 = v1 & v2;
return v3;
}
public int skipBytes(int) throws java.io.IOException
{
io.netty.buffer.ByteBuf v4;
int v1, v2, v3;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
v3 = staticinvoke <java.lang.Math: int min(int,int)>(v2, v1);
v4 = v0.<io.netty.buffer.ByteBufInputStream: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v3);
return v3;
}
private void checkAvailable(int) throws java.io.IOException
{
java.lang.IndexOutOfBoundsException v2;
int v1, v3, v5;
java.lang.String v6;
java.io.EOFException v4;
io.netty.buffer.ByteBufInputStream v0;
v0 := @this: io.netty.buffer.ByteBufInputStream;
v1 := @parameter0: int;
if v1 >= 0 goto label1;
v2 = new java.lang.IndexOutOfBoundsException;
specialinvoke v2.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>("fieldSize cannot be a negative number");
throw v2;
label1:
v3 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
if v1 <= v3 goto label2;
v4 = new java.io.EOFException;
v5 = virtualinvoke v0.<io.netty.buffer.ByteBufInputStream: int available()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("fieldSize is too long! Length is \u0001, but maximum is \u0001");
specialinvoke v4.<java.io.EOFException: void <init>(java.lang.String)>(v6);
throw v4;
label2:
return;
}
}