final class io.netty.buffer.PoolArena$DirectArena extends io.netty.buffer.PoolArena
{
void <init>(io.netty.buffer.PooledByteBufAllocator, int, int, int, int)
{
int v2, v3, v4, v5;
io.netty.buffer.PoolArena$DirectArena v0;
io.netty.buffer.PooledByteBufAllocator v1;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
v1 := @parameter0: io.netty.buffer.PooledByteBufAllocator;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
specialinvoke v0.<io.netty.buffer.PoolArena: void <init>(io.netty.buffer.PooledByteBufAllocator,int,int,int,int)>(v1, v2, v3, v4, v5);
return;
}
boolean isDirect()
{
io.netty.buffer.PoolArena$DirectArena v0;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
return 1;
}
protected io.netty.buffer.PoolChunk newChunk(int, int, int, int)
{
java.nio.ByteBuffer v10, v12, v6;
int v1, v11, v2, v3, v4, v5, v8, v9;
io.netty.buffer.PoolArena$DirectArena v0;
io.netty.buffer.PoolChunk v13, v7;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<io.netty.buffer.PoolArena$DirectArena: int directMemoryCacheAlignment>;
if v5 != 0 goto label1;
v6 = staticinvoke <io.netty.buffer.PoolArena$DirectArena: java.nio.ByteBuffer allocateDirect(int)>(v4);
v7 = new io.netty.buffer.PoolChunk;
specialinvoke v7.<io.netty.buffer.PoolChunk: void <init>(io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int,int,int,int)>(v0, v6, v6, v1, v3, v4, v2);
return v7;
label1:
v8 = v0.<io.netty.buffer.PoolArena$DirectArena: int directMemoryCacheAlignment>;
v9 = v4 + v8;
v10 = staticinvoke <io.netty.buffer.PoolArena$DirectArena: java.nio.ByteBuffer allocateDirect(int)>(v9);
v11 = v0.<io.netty.buffer.PoolArena$DirectArena: int directMemoryCacheAlignment>;
v12 = staticinvoke <io.netty.util.internal.PlatformDependent: java.nio.ByteBuffer alignDirectBuffer(java.nio.ByteBuffer,int)>(v10, v11);
v13 = new io.netty.buffer.PoolChunk;
specialinvoke v13.<io.netty.buffer.PoolChunk: void <init>(io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int,int,int,int)>(v0, v10, v12, v1, v3, v4, v2);
return v13;
}
protected io.netty.buffer.PoolChunk newUnpooledChunk(int)
{
java.nio.ByteBuffer v3, v7, v9;
int v1, v2, v5, v6, v8;
io.netty.buffer.PoolArena$DirectArena v0;
io.netty.buffer.PoolChunk v10, v4;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
v1 := @parameter0: int;
v2 = v0.<io.netty.buffer.PoolArena$DirectArena: int directMemoryCacheAlignment>;
if v2 != 0 goto label1;
v3 = staticinvoke <io.netty.buffer.PoolArena$DirectArena: java.nio.ByteBuffer allocateDirect(int)>(v1);
v4 = new io.netty.buffer.PoolChunk;
specialinvoke v4.<io.netty.buffer.PoolChunk: void <init>(io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int)>(v0, v3, v3, v1);
return v4;
label1:
v5 = v0.<io.netty.buffer.PoolArena$DirectArena: int directMemoryCacheAlignment>;
v6 = v1 + v5;
v7 = staticinvoke <io.netty.buffer.PoolArena$DirectArena: java.nio.ByteBuffer allocateDirect(int)>(v6);
v8 = v0.<io.netty.buffer.PoolArena$DirectArena: int directMemoryCacheAlignment>;
v9 = staticinvoke <io.netty.util.internal.PlatformDependent: java.nio.ByteBuffer alignDirectBuffer(java.nio.ByteBuffer,int)>(v7, v8);
v10 = new io.netty.buffer.PoolChunk;
specialinvoke v10.<io.netty.buffer.PoolChunk: void <init>(io.netty.buffer.PoolArena,java.lang.Object,java.lang.Object,int)>(v0, v7, v9, v1);
return v10;
}
private static java.nio.ByteBuffer allocateDirect(int)
{
int v0;
java.nio.ByteBuffer v2;
boolean v1;
v0 := @parameter0: int;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean useDirectBufferNoCleaner()>();
if v1 == 0 goto label1;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: java.nio.ByteBuffer allocateDirectNoCleaner(int)>(v0);
goto label2;
label1:
v2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(v0);
label2:
return v2;
}
protected void destroyChunk(io.netty.buffer.PoolChunk)
{
io.netty.buffer.PoolArena$DirectArena v0;
io.netty.buffer.PoolChunk v1;
java.lang.Object v3, v4;
boolean v2;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
v1 := @parameter0: io.netty.buffer.PoolChunk;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean useDirectBufferNoCleaner()>();
if v2 == 0 goto label1;
v3 = v1.<io.netty.buffer.PoolChunk: java.lang.Object base>;
staticinvoke <io.netty.util.internal.PlatformDependent: void freeDirectNoCleaner(java.nio.ByteBuffer)>(v3);
goto label2;
label1:
v4 = v1.<io.netty.buffer.PoolChunk: java.lang.Object base>;
staticinvoke <io.netty.util.internal.PlatformDependent: void freeDirectBuffer(java.nio.ByteBuffer)>(v4);
label2:
return;
}
protected io.netty.buffer.PooledByteBuf newByteBuf(int)
{
io.netty.buffer.PooledUnsafeDirectByteBuf v3;
int v1;
io.netty.buffer.PoolArena$DirectArena v0;
io.netty.buffer.PooledDirectByteBuf v4;
boolean v2;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
v1 := @parameter0: int;
v2 = <io.netty.buffer.PoolArena: boolean HAS_UNSAFE>;
if v2 == 0 goto label1;
v3 = staticinvoke <io.netty.buffer.PooledUnsafeDirectByteBuf: io.netty.buffer.PooledUnsafeDirectByteBuf newInstance(int)>(v1);
return v3;
label1:
v4 = staticinvoke <io.netty.buffer.PooledDirectByteBuf: io.netty.buffer.PooledDirectByteBuf newInstance(int)>(v1);
return v4;
}
protected void memoryCopy(java.nio.ByteBuffer, int, io.netty.buffer.PooledByteBuf, int)
{
long v11, v6, v7, v9;
java.nio.ByteBuffer v1, v12, v13, v14;
int v10, v15, v16, v2, v4;
boolean v5;
io.netty.buffer.PooledByteBuf v3;
io.netty.buffer.PoolArena$DirectArena v0;
java.lang.Object v8;
v0 := @this: io.netty.buffer.PoolArena$DirectArena;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.buffer.PooledByteBuf;
v4 := @parameter3: int;
if v4 != 0 goto label1;
return;
label1:
v5 = <io.netty.buffer.PoolArena: boolean HAS_UNSAFE>;
if v5 == 0 goto label2;
v6 = staticinvoke <io.netty.util.internal.PlatformDependent: long directBufferAddress(java.nio.ByteBuffer)>(v1);
v7 = v6 + v2;
v8 = v3.<io.netty.buffer.PooledByteBuf: java.lang.Object memory>;
v9 = staticinvoke <io.netty.util.internal.PlatformDependent: long directBufferAddress(java.nio.ByteBuffer)>(v8);
v10 = v3.<io.netty.buffer.PooledByteBuf: int offset>;
v11 = v9 + v10;
staticinvoke <io.netty.util.internal.PlatformDependent: void copyMemory(long,long,long)>(v7, v11, v4);
goto label3;
label2:
v12 = virtualinvoke v1.<java.nio.ByteBuffer: java.nio.ByteBuffer duplicate()>();
v13 = virtualinvoke v3.<io.netty.buffer.PooledByteBuf: java.nio.ByteBuffer internalNioBuffer()>();
v14 = virtualinvoke v12.<java.nio.ByteBuffer: java.nio.ByteBuffer position(int)>(v2);
v15 = v2 + v4;
virtualinvoke v14.<java.nio.ByteBuffer: java.nio.ByteBuffer limit(int)>(v15);
v16 = v3.<io.netty.buffer.PooledByteBuf: int offset>;
virtualinvoke v13.<java.nio.ByteBuffer: java.nio.Buffer position(int)>(v16);
virtualinvoke v13.<java.nio.ByteBuffer: java.nio.ByteBuffer put(java.nio.ByteBuffer)>(v12);
label3:
return;
}
}