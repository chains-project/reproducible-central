class io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf extends io.netty.buffer.UnpooledUnsafeDirectByteBuf
{
void <init>(io.netty.buffer.ByteBufAllocator, int, int)
{
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf v0;
io.netty.buffer.ByteBufAllocator v1;
int v2, v3;
v0 := @this: io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<io.netty.buffer.UnpooledUnsafeDirectByteBuf: void <init>(io.netty.buffer.ByteBufAllocator,int,int)>(v1, v2, v3);
return;
}
protected java.nio.ByteBuffer allocateDirect(int)
{
int v1;
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf v0;
java.nio.ByteBuffer v2;
v0 := @this: io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: int;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: java.nio.ByteBuffer allocateDirectNoCleaner(int)>(v1);
return v2;
}
java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer, int)
{
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf v0;
int v2;
java.nio.ByteBuffer v1, v3;
v0 := @this: io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: java.nio.ByteBuffer;
v2 := @parameter1: int;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer,int)>(v1, v2);
return v3;
}
protected void freeDirect(java.nio.ByteBuffer)
{
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf v0;
java.nio.ByteBuffer v1;
v0 := @this: io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: java.nio.ByteBuffer;
staticinvoke <io.netty.util.internal.PlatformDependent: void freeDirectNoCleaner(java.nio.ByteBuffer)>(v1);
return;
}
public io.netty.buffer.ByteBuf capacity(int)
{
io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf v0;
int v1, v2;
java.nio.ByteBuffer v3, v4;
v0 := @this: io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf;
v1 := @parameter0: int;
virtualinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: void checkNewCapacity(int)>(v1);
v2 = virtualinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: int capacity()>();
if v1 != v2 goto label1;
return v0;
label1:
virtualinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: void trimIndicesToCapacity(int)>(v1);
v3 = v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: java.nio.ByteBuffer buffer>;
v4 = virtualinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: java.nio.ByteBuffer reallocateDirect(java.nio.ByteBuffer,int)>(v3, v1);
virtualinvoke v0.<io.netty.buffer.UnpooledUnsafeNoCleanerDirectByteBuf: void setByteBuffer(java.nio.ByteBuffer,boolean)>(v4, 0);
return v0;
}
}