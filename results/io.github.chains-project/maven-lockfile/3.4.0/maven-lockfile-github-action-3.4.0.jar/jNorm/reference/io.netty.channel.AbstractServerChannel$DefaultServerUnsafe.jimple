final class io.netty.channel.AbstractServerChannel$DefaultServerUnsafe extends io.netty.channel.AbstractChannel$AbstractUnsafe
{
final io.netty.channel.AbstractServerChannel this$0;
private void <init>(io.netty.channel.AbstractServerChannel)
{
io.netty.channel.AbstractServerChannel v1;
io.netty.channel.AbstractServerChannel$DefaultServerUnsafe v0;
v0 := @this: io.netty.channel.AbstractServerChannel$DefaultServerUnsafe;
v1 := @parameter0: io.netty.channel.AbstractServerChannel;
v0.<io.netty.channel.AbstractServerChannel$DefaultServerUnsafe: io.netty.channel.AbstractServerChannel this$0> = v1;
specialinvoke v0.<io.netty.channel.AbstractChannel$AbstractUnsafe: void <init>(io.netty.channel.AbstractChannel)>(v1);
return;
}
public void connect(java.net.SocketAddress, java.net.SocketAddress, io.netty.channel.ChannelPromise)
{
java.lang.UnsupportedOperationException v4;
io.netty.channel.ChannelPromise v3;
java.net.SocketAddress v1, v2;
io.netty.channel.AbstractServerChannel$DefaultServerUnsafe v0;
v0 := @this: io.netty.channel.AbstractServerChannel$DefaultServerUnsafe;
v1 := @parameter0: java.net.SocketAddress;
v2 := @parameter1: java.net.SocketAddress;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
virtualinvoke v0.<io.netty.channel.AbstractServerChannel$DefaultServerUnsafe: void safeSetFailure(io.netty.channel.ChannelPromise,java.lang.Throwable)>(v3, v4);
return;
}
}