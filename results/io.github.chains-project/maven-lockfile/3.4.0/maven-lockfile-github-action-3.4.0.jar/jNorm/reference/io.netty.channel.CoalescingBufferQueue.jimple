public final class io.netty.channel.CoalescingBufferQueue extends io.netty.channel.AbstractCoalescingBufferQueue
{
private final io.netty.channel.Channel channel;
public void <init>(io.netty.channel.Channel)
{
io.netty.channel.Channel v1;
io.netty.channel.CoalescingBufferQueue v0;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 := @parameter0: io.netty.channel.Channel;
specialinvoke v0.<io.netty.channel.CoalescingBufferQueue: void <init>(io.netty.channel.Channel,int)>(v1, 4);
return;
}
public void <init>(io.netty.channel.Channel, int)
{
int v2;
io.netty.channel.Channel v1;
io.netty.channel.CoalescingBufferQueue v0;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 := @parameter0: io.netty.channel.Channel;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.channel.CoalescingBufferQueue: void <init>(io.netty.channel.Channel,int,boolean)>(v1, v2, 0);
return;
}
public void <init>(io.netty.channel.Channel, int, boolean)
{
io.netty.channel.Channel v1, v4;
int v2;
io.netty.channel.CoalescingBufferQueue v0;
java.lang.Object v5;
boolean v3;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 := @parameter0: io.netty.channel.Channel;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
if v3 == 0 goto label1;
v4 = v1;
goto label2;
label1:
v4 = null;
label2:
specialinvoke v0.<io.netty.channel.AbstractCoalescingBufferQueue: void <init>(io.netty.channel.Channel,int)>(v4, v2);
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "channel");
v0.<io.netty.channel.CoalescingBufferQueue: io.netty.channel.Channel channel> = v5;
return;
}
public io.netty.buffer.ByteBuf remove(int, io.netty.channel.ChannelPromise)
{
io.netty.channel.Channel v3;
io.netty.buffer.ByteBuf v5;
io.netty.channel.ChannelPromise v2;
io.netty.buffer.ByteBufAllocator v4;
int v1;
io.netty.channel.CoalescingBufferQueue v0;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.channel.CoalescingBufferQueue: io.netty.channel.Channel channel>;
v4 = interfaceinvoke v3.<io.netty.channel.Channel: io.netty.buffer.ByteBufAllocator alloc()>();
v5 = virtualinvoke v0.<io.netty.channel.CoalescingBufferQueue: io.netty.buffer.ByteBuf remove(io.netty.buffer.ByteBufAllocator,int,io.netty.channel.ChannelPromise)>(v4, v1, v2);
return v5;
}
public void releaseAndFailAll(java.lang.Throwable)
{
io.netty.channel.Channel v2;
java.lang.Throwable v1;
io.netty.channel.CoalescingBufferQueue v0;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.netty.channel.CoalescingBufferQueue: io.netty.channel.Channel channel>;
virtualinvoke v0.<io.netty.channel.CoalescingBufferQueue: void releaseAndFailAll(io.netty.channel.ChannelOutboundInvoker,java.lang.Throwable)>(v2, v1);
return;
}
protected io.netty.buffer.ByteBuf compose(io.netty.buffer.ByteBufAllocator, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v2, v3, v5;
io.netty.buffer.ByteBufAllocator v1;
io.netty.channel.CoalescingBufferQueue v0;
boolean v4;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 := @parameter0: io.netty.buffer.ByteBufAllocator;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v2 instanceof io.netty.buffer.CompositeByteBuf;
if v4 == 0 goto label1;
virtualinvoke v2.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf)>(1, v3);
return v2;
label1:
v5 = virtualinvoke v0.<io.netty.channel.CoalescingBufferQueue: io.netty.buffer.ByteBuf composeIntoComposite(io.netty.buffer.ByteBufAllocator,io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v1, v2, v3);
return v5;
}
protected io.netty.buffer.ByteBuf removeEmptyValue()
{
io.netty.channel.CoalescingBufferQueue v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.channel.CoalescingBufferQueue;
v1 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
return v1;
}
}