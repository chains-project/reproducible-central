final class io.netty.channel.FailedChannelFuture extends io.netty.channel.CompleteChannelFuture
{
private final java.lang.Throwable cause;
void <init>(io.netty.channel.Channel, io.netty.util.concurrent.EventExecutor, java.lang.Throwable)
{
io.netty.channel.Channel v1;
io.netty.util.concurrent.EventExecutor v2;
java.lang.Throwable v3;
io.netty.channel.FailedChannelFuture v0;
java.lang.Object v4;
v0 := @this: io.netty.channel.FailedChannelFuture;
v1 := @parameter0: io.netty.channel.Channel;
v2 := @parameter1: io.netty.util.concurrent.EventExecutor;
v3 := @parameter2: java.lang.Throwable;
specialinvoke v0.<io.netty.channel.CompleteChannelFuture: void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v1, v2);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "cause");
v0.<io.netty.channel.FailedChannelFuture: java.lang.Throwable cause> = v4;
return;
}
public java.lang.Throwable cause()
{
java.lang.Throwable v1;
io.netty.channel.FailedChannelFuture v0;
v0 := @this: io.netty.channel.FailedChannelFuture;
v1 = v0.<io.netty.channel.FailedChannelFuture: java.lang.Throwable cause>;
return v1;
}
public boolean isSuccess()
{
io.netty.channel.FailedChannelFuture v0;
v0 := @this: io.netty.channel.FailedChannelFuture;
return 0;
}
public io.netty.channel.ChannelFuture sync()
{
java.lang.Throwable v1;
io.netty.channel.FailedChannelFuture v0;
v0 := @this: io.netty.channel.FailedChannelFuture;
v1 = v0.<io.netty.channel.FailedChannelFuture: java.lang.Throwable cause>;
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v1);
return v0;
}
public io.netty.channel.ChannelFuture syncUninterruptibly()
{
java.lang.Throwable v1;
io.netty.channel.FailedChannelFuture v0;
v0 := @this: io.netty.channel.FailedChannelFuture;
v1 = v0.<io.netty.channel.FailedChannelFuture: java.lang.Throwable cause>;
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v1);
return v0;
}
}