public final class io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator extends java.lang.Object implements java.util.Iterator
{
private final java.util.Iterator channelIterator;
private static final java.util.Iterator EMPTY;
public void <init>(java.lang.Iterable)
{
java.util.Iterator v3;
io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator v0;
java.lang.Object v2;
java.lang.Iterable v1;
v0 := @this: io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator;
v1 := @parameter0: java.lang.Iterable;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "channelIterable");
v3 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
v0.<io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator: java.util.Iterator channelIterator> = v3;
return;
}
public boolean hasNext()
{
io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator v0;
java.util.Iterator v1;
boolean v2;
v0 := @this: io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator;
v1 = v0.<io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator: java.util.Iterator channelIterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public io.netty.channel.Channel next()
{
io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator v0;
java.lang.Object v2;
java.util.Iterator v1;
v0 := @this: io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator;
v1 = v0.<io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator: java.util.Iterator channelIterator>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
return v2;
}
public void remove()
{
java.lang.UnsupportedOperationException v1;
io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator v0;
v0 := @this: io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("remove");
throw v1;
}
public static java.util.Iterator empty()
{
java.util.Iterator v0;
v0 = <io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator: java.util.Iterator EMPTY>;
return v0;
}
static void <clinit>()
{
io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator$1 v0;
v0 = new io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator$1;
specialinvoke v0.<io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator$1: void <init>()>();
<io.netty.channel.SingleThreadEventLoop$ChannelsReadOnlyIterator: java.util.Iterator EMPTY> = v0;
return;
}
}