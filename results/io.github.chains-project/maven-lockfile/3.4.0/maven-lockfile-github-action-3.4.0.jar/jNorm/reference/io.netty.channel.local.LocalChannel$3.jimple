class io.netty.channel.local.LocalChannel$3 extends java.lang.Object implements java.lang.Runnable
{
final io.netty.channel.local.LocalChannel val$peer;
final io.netty.channel.local.LocalChannel this$0;
void <init>(io.netty.channel.local.LocalChannel, io.netty.channel.local.LocalChannel)
{
io.netty.channel.local.LocalChannel v1, v2;
io.netty.channel.local.LocalChannel$3 v0;
v0 := @this: io.netty.channel.local.LocalChannel$3;
v1 := @parameter0: io.netty.channel.local.LocalChannel;
v2 := @parameter1: io.netty.channel.local.LocalChannel;
v0.<io.netty.channel.local.LocalChannel$3: io.netty.channel.local.LocalChannel this$0> = v1;
v0.<io.netty.channel.local.LocalChannel$3: io.netty.channel.local.LocalChannel val$peer> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
io.netty.channel.ChannelPromise v2;
io.netty.channel.local.LocalChannel v1, v4;
io.netty.channel.local.LocalChannel$3 v0;
io.netty.channel.ChannelPipeline v5;
boolean v3;
v0 := @this: io.netty.channel.local.LocalChannel$3;
v1 = v0.<io.netty.channel.local.LocalChannel$3: io.netty.channel.local.LocalChannel val$peer>;
v2 = v1.<io.netty.channel.local.LocalChannel: io.netty.channel.ChannelPromise connectPromise>;
if v2 == null goto label1;
v3 = interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean trySuccess()>();
if v3 == 0 goto label1;
v4 = v0.<io.netty.channel.local.LocalChannel$3: io.netty.channel.local.LocalChannel val$peer>;
v5 = virtualinvoke v4.<io.netty.channel.local.LocalChannel: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v5.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline fireChannelActive()>();
label1:
return;
}
}