public class io.netty.channel.nio.NioEventLoopGroup extends io.netty.channel.MultithreadEventLoopGroup
{
public void <init>()
{
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int)>(0);
return;
}
public void <init>(int)
{
int v1;
java.util.concurrent.Executor v2;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 = null;
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.Executor)>(v1, v2);
return;
}
public void <init>(java.util.concurrent.ThreadFactory)
{
java.nio.channels.spi.SelectorProvider v2;
java.util.concurrent.ThreadFactory v1;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: java.util.concurrent.ThreadFactory;
v2 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider)>(0, v1, v2);
return;
}
public void <init>(int, java.util.concurrent.ThreadFactory)
{
java.nio.channels.spi.SelectorProvider v3;
int v1;
java.util.concurrent.ThreadFactory v2;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
v3 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider)>(v1, v2, v3);
return;
}
public void <init>(int, java.util.concurrent.Executor)
{
java.nio.channels.spi.SelectorProvider v3;
java.util.concurrent.Executor v2;
int v1;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 = staticinvoke <java.nio.channels.spi.SelectorProvider: java.nio.channels.spi.SelectorProvider provider()>();
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider)>(v1, v2, v3);
return;
}
public void <init>(int, java.util.concurrent.ThreadFactory, java.nio.channels.spi.SelectorProvider)
{
java.nio.channels.spi.SelectorProvider v3;
int v1;
io.netty.channel.SelectStrategyFactory v4;
java.util.concurrent.ThreadFactory v2;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
v3 := @parameter2: java.nio.channels.spi.SelectorProvider;
v4 = <io.netty.channel.DefaultSelectStrategyFactory: io.netty.channel.SelectStrategyFactory INSTANCE>;
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.ThreadFactory,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategyFactory)>(v1, v2, v3, v4);
return;
}
public void <init>(int, java.util.concurrent.ThreadFactory, java.nio.channels.spi.SelectorProvider, io.netty.channel.SelectStrategyFactory)
{
java.nio.channels.spi.SelectorProvider v3;
java.lang.Object[] v5;
int v1;
io.netty.channel.SelectStrategyFactory v4;
java.util.concurrent.ThreadFactory v2;
io.netty.util.concurrent.RejectedExecutionHandler v6;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.ThreadFactory;
v3 := @parameter2: java.nio.channels.spi.SelectorProvider;
v4 := @parameter3: io.netty.channel.SelectStrategyFactory;
v5 = newarray (java.lang.Object)[3];
v5[0] = v3;
v5[1] = v4;
v6 = staticinvoke <io.netty.util.concurrent.RejectedExecutionHandlers: io.netty.util.concurrent.RejectedExecutionHandler reject()>();
v5[2] = v6;
specialinvoke v0.<io.netty.channel.MultithreadEventLoopGroup: void <init>(int,java.util.concurrent.ThreadFactory,java.lang.Object[])>(v1, v2, v5);
return;
}
public void <init>(int, java.util.concurrent.Executor, java.nio.channels.spi.SelectorProvider)
{
java.nio.channels.spi.SelectorProvider v3;
java.util.concurrent.Executor v2;
int v1;
io.netty.channel.SelectStrategyFactory v4;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: java.nio.channels.spi.SelectorProvider;
v4 = <io.netty.channel.DefaultSelectStrategyFactory: io.netty.channel.SelectStrategyFactory INSTANCE>;
specialinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: void <init>(int,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategyFactory)>(v1, v2, v3, v4);
return;
}
public void <init>(int, java.util.concurrent.Executor, java.nio.channels.spi.SelectorProvider, io.netty.channel.SelectStrategyFactory)
{
java.nio.channels.spi.SelectorProvider v3;
java.lang.Object[] v5;
java.util.concurrent.Executor v2;
int v1;
io.netty.channel.SelectStrategyFactory v4;
io.netty.util.concurrent.RejectedExecutionHandler v6;
io.netty.channel.nio.NioEventLoopGroup v0;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: java.nio.channels.spi.SelectorProvider;
v4 := @parameter3: io.netty.channel.SelectStrategyFactory;
v5 = newarray (java.lang.Object)[3];
v5[0] = v3;
v5[1] = v4;
v6 = staticinvoke <io.netty.util.concurrent.RejectedExecutionHandlers: io.netty.util.concurrent.RejectedExecutionHandler reject()>();
v5[2] = v6;
specialinvoke v0.<io.netty.channel.MultithreadEventLoopGroup: void <init>(int,java.util.concurrent.Executor,java.lang.Object[])>(v1, v2, v5);
return;
}
public void <init>(int, java.util.concurrent.Executor, io.netty.util.concurrent.EventExecutorChooserFactory, java.nio.channels.spi.SelectorProvider, io.netty.channel.SelectStrategyFactory)
{
java.lang.Object[] v6;
java.util.concurrent.Executor v2;
io.netty.util.concurrent.EventExecutorChooserFactory v3;
io.netty.channel.nio.NioEventLoopGroup v0;
java.nio.channels.spi.SelectorProvider v4;
int v1;
io.netty.channel.SelectStrategyFactory v5;
io.netty.util.concurrent.RejectedExecutionHandler v7;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: io.netty.util.concurrent.EventExecutorChooserFactory;
v4 := @parameter3: java.nio.channels.spi.SelectorProvider;
v5 := @parameter4: io.netty.channel.SelectStrategyFactory;
v6 = newarray (java.lang.Object)[3];
v6[0] = v4;
v6[1] = v5;
v7 = staticinvoke <io.netty.util.concurrent.RejectedExecutionHandlers: io.netty.util.concurrent.RejectedExecutionHandler reject()>();
v6[2] = v7;
specialinvoke v0.<io.netty.channel.MultithreadEventLoopGroup: void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[])>(v1, v2, v3, v6);
return;
}
public void <init>(int, java.util.concurrent.Executor, io.netty.util.concurrent.EventExecutorChooserFactory, java.nio.channels.spi.SelectorProvider, io.netty.channel.SelectStrategyFactory, io.netty.util.concurrent.RejectedExecutionHandler)
{
java.lang.Object[] v7;
java.util.concurrent.Executor v2;
io.netty.util.concurrent.EventExecutorChooserFactory v3;
io.netty.channel.nio.NioEventLoopGroup v0;
java.nio.channels.spi.SelectorProvider v4;
int v1;
io.netty.channel.SelectStrategyFactory v5;
io.netty.util.concurrent.RejectedExecutionHandler v6;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: io.netty.util.concurrent.EventExecutorChooserFactory;
v4 := @parameter3: java.nio.channels.spi.SelectorProvider;
v5 := @parameter4: io.netty.channel.SelectStrategyFactory;
v6 := @parameter5: io.netty.util.concurrent.RejectedExecutionHandler;
v7 = newarray (java.lang.Object)[3];
v7[0] = v4;
v7[1] = v5;
v7[2] = v6;
specialinvoke v0.<io.netty.channel.MultithreadEventLoopGroup: void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[])>(v1, v2, v3, v7);
return;
}
public void <init>(int, java.util.concurrent.Executor, io.netty.util.concurrent.EventExecutorChooserFactory, java.nio.channels.spi.SelectorProvider, io.netty.channel.SelectStrategyFactory, io.netty.util.concurrent.RejectedExecutionHandler, io.netty.channel.EventLoopTaskQueueFactory)
{
java.lang.Object[] v8;
io.netty.channel.EventLoopTaskQueueFactory v7;
java.util.concurrent.Executor v2;
io.netty.util.concurrent.EventExecutorChooserFactory v3;
io.netty.channel.nio.NioEventLoopGroup v0;
java.nio.channels.spi.SelectorProvider v4;
int v1;
io.netty.channel.SelectStrategyFactory v5;
io.netty.util.concurrent.RejectedExecutionHandler v6;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: io.netty.util.concurrent.EventExecutorChooserFactory;
v4 := @parameter3: java.nio.channels.spi.SelectorProvider;
v5 := @parameter4: io.netty.channel.SelectStrategyFactory;
v6 := @parameter5: io.netty.util.concurrent.RejectedExecutionHandler;
v7 := @parameter6: io.netty.channel.EventLoopTaskQueueFactory;
v8 = newarray (java.lang.Object)[4];
v8[0] = v4;
v8[1] = v5;
v8[2] = v6;
v8[3] = v7;
specialinvoke v0.<io.netty.channel.MultithreadEventLoopGroup: void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[])>(v1, v2, v3, v8);
return;
}
public void <init>(int, java.util.concurrent.Executor, io.netty.util.concurrent.EventExecutorChooserFactory, java.nio.channels.spi.SelectorProvider, io.netty.channel.SelectStrategyFactory, io.netty.util.concurrent.RejectedExecutionHandler, io.netty.channel.EventLoopTaskQueueFactory, io.netty.channel.EventLoopTaskQueueFactory)
{
java.lang.Object[] v9;
io.netty.channel.EventLoopTaskQueueFactory v7, v8;
java.util.concurrent.Executor v2;
io.netty.util.concurrent.EventExecutorChooserFactory v3;
io.netty.channel.nio.NioEventLoopGroup v0;
java.nio.channels.spi.SelectorProvider v4;
int v1;
io.netty.channel.SelectStrategyFactory v5;
io.netty.util.concurrent.RejectedExecutionHandler v6;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 := @parameter1: java.util.concurrent.Executor;
v3 := @parameter2: io.netty.util.concurrent.EventExecutorChooserFactory;
v4 := @parameter3: java.nio.channels.spi.SelectorProvider;
v5 := @parameter4: io.netty.channel.SelectStrategyFactory;
v6 := @parameter5: io.netty.util.concurrent.RejectedExecutionHandler;
v7 := @parameter6: io.netty.channel.EventLoopTaskQueueFactory;
v8 := @parameter7: io.netty.channel.EventLoopTaskQueueFactory;
v9 = newarray (java.lang.Object)[5];
v9[0] = v4;
v9[1] = v5;
v9[2] = v6;
v9[3] = v7;
v9[4] = v8;
specialinvoke v0.<io.netty.channel.MultithreadEventLoopGroup: void <init>(int,java.util.concurrent.Executor,io.netty.util.concurrent.EventExecutorChooserFactory,java.lang.Object[])>(v1, v2, v3, v9);
return;
}
public void setIoRatio(int)
{
io.netty.util.concurrent.EventExecutor v4;
java.util.Iterator v2;
int v1;
io.netty.channel.nio.NioEventLoopGroup v0;
boolean v3;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: int;
v2 = virtualinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v4.<io.netty.channel.nio.NioEventLoop: void setIoRatio(int)>(v1);
goto label1;
label2:
return;
}
public void rebuildSelectors()
{
io.netty.util.concurrent.EventExecutor v3;
java.util.Iterator v1;
io.netty.channel.nio.NioEventLoopGroup v0;
boolean v2;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 = virtualinvoke v0.<io.netty.channel.nio.NioEventLoopGroup: java.util.Iterator iterator()>();
label1:
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label2;
interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v3.<io.netty.channel.nio.NioEventLoop: void rebuildSelector()>();
goto label1;
label2:
return;
}
protected transient io.netty.channel.EventLoop newChild(java.util.concurrent.Executor, java.lang.Object[]) throws java.lang.Exception
{
java.lang.Object[] v2;
java.util.concurrent.Executor v1;
io.netty.channel.SelectStrategy v10;
io.netty.channel.nio.NioEventLoopGroup v0;
int v6;
io.netty.channel.nio.NioEventLoop v9;
java.lang.Object v3, v4, v5, v7, v8;
v0 := @this: io.netty.channel.nio.NioEventLoopGroup;
v1 := @parameter0: java.util.concurrent.Executor;
v2 := @parameter1: java.lang.Object[];
v3 = v2[0];
v4 = v2[1];
v5 = v2[2];
v6 = lengthof v2;
if v6 <= 3 goto label1;
v7 = v2[3];
label1:
if v6 <= 4 goto label2;
v8 = v2[4];
label2:
v9 = new io.netty.channel.nio.NioEventLoop;
v10 = interfaceinvoke v4.<io.netty.channel.SelectStrategyFactory: io.netty.channel.SelectStrategy newSelectStrategy()>();
specialinvoke v9.<io.netty.channel.nio.NioEventLoop: void <init>(io.netty.channel.nio.NioEventLoopGroup,java.util.concurrent.Executor,java.nio.channels.spi.SelectorProvider,io.netty.channel.SelectStrategy,io.netty.util.concurrent.RejectedExecutionHandler,io.netty.channel.EventLoopTaskQueueFactory,io.netty.channel.EventLoopTaskQueueFactory)>(v0, v1, v3, v10, v5, v7, v8);
return v9;
}
}