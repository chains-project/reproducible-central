final class io.netty.channel.nio.SelectedSelectionKeySet extends java.util.AbstractSet
{
java.nio.channels.SelectionKey[] keys;
int size;
void <init>()
{
io.netty.channel.nio.SelectedSelectionKeySet v0;
java.nio.channels.SelectionKey[] v1;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
specialinvoke v0.<java.util.AbstractSet: void <init>()>();
v1 = newarray (java.nio.channels.SelectionKey)[1024];
v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys> = v1;
return;
}
public boolean add(java.nio.channels.SelectionKey)
{
io.netty.channel.nio.SelectedSelectionKeySet v0;
java.nio.channels.SelectionKey v1;
java.nio.channels.SelectionKey[] v3, v5;
int v2, v4, v6, v7;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 := @parameter0: java.nio.channels.SelectionKey;
if v1 != null goto label1;
return 0;
label1:
v2 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size>;
v3 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys>;
v4 = lengthof v3;
if v2 != v4 goto label2;
specialinvoke v0.<io.netty.channel.nio.SelectedSelectionKeySet: void increaseCapacity()>();
label2:
v5 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys>;
v6 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size>;
v7 = v6 + 1;
v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size> = v7;
v5[v6] = v1;
return 1;
}
public boolean remove(java.lang.Object)
{
java.lang.Object v1;
io.netty.channel.nio.SelectedSelectionKeySet v0;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 := @parameter0: java.lang.Object;
return 0;
}
public boolean contains(java.lang.Object)
{
java.lang.Object v1;
io.netty.channel.nio.SelectedSelectionKeySet v0;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 := @parameter0: java.lang.Object;
return 0;
}
public int size()
{
int v1;
io.netty.channel.nio.SelectedSelectionKeySet v0;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size>;
return v1;
}
public java.util.Iterator iterator()
{
io.netty.channel.nio.SelectedSelectionKeySet v0;
io.netty.channel.nio.SelectedSelectionKeySet$1 v1;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 = new io.netty.channel.nio.SelectedSelectionKeySet$1;
specialinvoke v1.<io.netty.channel.nio.SelectedSelectionKeySet$1: void <init>(io.netty.channel.nio.SelectedSelectionKeySet)>(v0);
return v1;
}
void reset()
{
io.netty.channel.nio.SelectedSelectionKeySet v0;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
virtualinvoke v0.<io.netty.channel.nio.SelectedSelectionKeySet: void reset(int)>(0);
return;
}
void reset(int)
{
io.netty.channel.nio.SelectedSelectionKeySet v0;
java.nio.channels.SelectionKey[] v2;
int v1, v3;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 := @parameter0: int;
v2 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys>;
v3 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size>;
staticinvoke <java.util.Arrays: void fill(java.lang.Object[],int,int,java.lang.Object)>(v2, v1, v3, null);
v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size> = 0;
return;
}
private void increaseCapacity()
{
io.netty.channel.nio.SelectedSelectionKeySet v0;
java.nio.channels.SelectionKey[] v1, v4, v5;
int v2, v3, v6;
v0 := @this: io.netty.channel.nio.SelectedSelectionKeySet;
v1 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys>;
v2 = lengthof v1;
v3 = v2 << 1;
v4 = newarray (java.nio.channels.SelectionKey)[v3];
v5 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys>;
v6 = v0.<io.netty.channel.nio.SelectedSelectionKeySet: int size>;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v5, 0, v4, 0, v6);
v0.<io.netty.channel.nio.SelectedSelectionKeySet: java.nio.channels.SelectionKey[] keys> = v4;
return;
}
}