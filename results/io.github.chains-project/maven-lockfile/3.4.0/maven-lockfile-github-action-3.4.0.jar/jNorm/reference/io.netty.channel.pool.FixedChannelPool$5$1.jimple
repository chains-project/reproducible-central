class io.netty.channel.pool.FixedChannelPool$5$1 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.channel.pool.FixedChannelPool$5 this$1;
void <init>(io.netty.channel.pool.FixedChannelPool$5)
{
io.netty.channel.pool.FixedChannelPool$5 v1;
io.netty.channel.pool.FixedChannelPool$5$1 v0;
v0 := @this: io.netty.channel.pool.FixedChannelPool$5$1;
v1 := @parameter0: io.netty.channel.pool.FixedChannelPool$5;
v0.<io.netty.channel.pool.FixedChannelPool$5$1: io.netty.channel.pool.FixedChannelPool$5 this$1> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v7;
io.netty.util.concurrent.Promise v4, v6;
io.netty.channel.pool.FixedChannelPool$5 v3, v5;
io.netty.util.concurrent.Future v1;
boolean v2;
io.netty.channel.pool.FixedChannelPool$5$1 v0;
v0 := @this: io.netty.channel.pool.FixedChannelPool$5$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.channel.pool.FixedChannelPool$5$1: io.netty.channel.pool.FixedChannelPool$5 this$1>;
v4 = v3.<io.netty.channel.pool.FixedChannelPool$5: io.netty.util.concurrent.Promise val$closeComplete>;
interfaceinvoke v4.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(null);
goto label2;
label1:
v5 = v0.<io.netty.channel.pool.FixedChannelPool$5$1: io.netty.channel.pool.FixedChannelPool$5 this$1>;
v6 = v5.<io.netty.channel.pool.FixedChannelPool$5: io.netty.util.concurrent.Promise val$closeComplete>;
v7 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
interfaceinvoke v6.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v7);
label2:
return;
}
}