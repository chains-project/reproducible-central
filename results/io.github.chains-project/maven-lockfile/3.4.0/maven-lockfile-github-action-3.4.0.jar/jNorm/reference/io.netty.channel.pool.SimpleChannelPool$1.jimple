class io.netty.channel.pool.SimpleChannelPool$1 extends io.netty.channel.ChannelInitializer
{
static final boolean $assertionsDisabled;
final io.netty.channel.pool.ChannelPoolHandler val$handler;
final io.netty.channel.pool.SimpleChannelPool this$0;
void <init>(io.netty.channel.pool.SimpleChannelPool, io.netty.channel.pool.ChannelPoolHandler)
{
io.netty.channel.pool.ChannelPoolHandler v2;
io.netty.channel.pool.SimpleChannelPool v1;
io.netty.channel.pool.SimpleChannelPool$1 v0;
v0 := @this: io.netty.channel.pool.SimpleChannelPool$1;
v1 := @parameter0: io.netty.channel.pool.SimpleChannelPool;
v2 := @parameter1: io.netty.channel.pool.ChannelPoolHandler;
v0.<io.netty.channel.pool.SimpleChannelPool$1: io.netty.channel.pool.SimpleChannelPool this$0> = v1;
v0.<io.netty.channel.pool.SimpleChannelPool$1: io.netty.channel.pool.ChannelPoolHandler val$handler> = v2;
specialinvoke v0.<io.netty.channel.ChannelInitializer: void <init>()>();
return;
}
protected void initChannel(io.netty.channel.Channel) throws java.lang.Exception
{
io.netty.channel.Channel v1;
io.netty.channel.pool.ChannelPoolHandler v6;
java.lang.AssertionError v5;
io.netty.channel.EventLoop v3;
io.netty.channel.pool.SimpleChannelPool$1 v0;
boolean v2, v4;
v0 := @this: io.netty.channel.pool.SimpleChannelPool$1;
v1 := @parameter0: io.netty.channel.Channel;
v2 = <io.netty.channel.pool.SimpleChannelPool$1: boolean $assertionsDisabled>;
if v2 != 0 goto label1;
v3 = interfaceinvoke v1.<io.netty.channel.Channel: io.netty.channel.EventLoop eventLoop()>();
v4 = interfaceinvoke v3.<io.netty.channel.EventLoop: boolean inEventLoop()>();
if v4 != 0 goto label1;
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label1:
v6 = v0.<io.netty.channel.pool.SimpleChannelPool$1: io.netty.channel.pool.ChannelPoolHandler val$handler>;
interfaceinvoke v6.<io.netty.channel.pool.ChannelPoolHandler: void channelCreated(io.netty.channel.Channel)>(v1);
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/channel/pool/SimpleChannelPool;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.channel.pool.SimpleChannelPool$1: boolean $assertionsDisabled> = v2;
return;
}
}