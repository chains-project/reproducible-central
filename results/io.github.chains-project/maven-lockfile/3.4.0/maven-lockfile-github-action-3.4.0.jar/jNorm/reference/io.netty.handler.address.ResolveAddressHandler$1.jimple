class io.netty.handler.address.ResolveAddressHandler$1 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.channel.ChannelPromise val$promise;
final io.netty.channel.ChannelHandlerContext val$ctx;
final java.net.SocketAddress val$localAddress;
final io.netty.handler.address.ResolveAddressHandler this$0;
void <init>(io.netty.handler.address.ResolveAddressHandler, io.netty.channel.ChannelPromise, io.netty.channel.ChannelHandlerContext, java.net.SocketAddress)
{
io.netty.channel.ChannelHandlerContext v3;
io.netty.channel.ChannelPromise v2;
io.netty.handler.address.ResolveAddressHandler$1 v0;
java.net.SocketAddress v4;
io.netty.handler.address.ResolveAddressHandler v1;
v0 := @this: io.netty.handler.address.ResolveAddressHandler$1;
v1 := @parameter0: io.netty.handler.address.ResolveAddressHandler;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 := @parameter2: io.netty.channel.ChannelHandlerContext;
v4 := @parameter3: java.net.SocketAddress;
v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.handler.address.ResolveAddressHandler this$0> = v1;
v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.channel.ChannelPromise val$promise> = v2;
v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.channel.ChannelHandlerContext val$ctx> = v3;
v0.<io.netty.handler.address.ResolveAddressHandler$1: java.net.SocketAddress val$localAddress> = v4;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
java.lang.Throwable v2;
io.netty.handler.address.ResolveAddressHandler$1 v0;
java.net.SocketAddress v6;
io.netty.channel.ChannelPipeline v9;
io.netty.channel.ChannelHandlerContext v4, v8;
io.netty.channel.ChannelPromise v3, v7;
io.netty.handler.address.ResolveAddressHandler v10;
java.lang.Object v5;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.handler.address.ResolveAddressHandler$1;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
if v2 == null goto label1;
v3 = v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v3.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v2);
goto label2;
label1:
v4 = v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.channel.ChannelHandlerContext val$ctx>;
v5 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
v6 = v0.<io.netty.handler.address.ResolveAddressHandler$1: java.net.SocketAddress val$localAddress>;
v7 = v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v4.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture connect(java.net.SocketAddress,java.net.SocketAddress,io.netty.channel.ChannelPromise)>(v5, v6, v7);
label2:
v8 = v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.channel.ChannelHandlerContext val$ctx>;
v9 = interfaceinvoke v8.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v10 = v0.<io.netty.handler.address.ResolveAddressHandler$1: io.netty.handler.address.ResolveAddressHandler this$0>;
interfaceinvoke v9.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v10);
return;
}
}