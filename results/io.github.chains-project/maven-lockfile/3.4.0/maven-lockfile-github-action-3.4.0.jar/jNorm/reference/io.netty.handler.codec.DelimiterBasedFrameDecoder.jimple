public class io.netty.handler.codec.DelimiterBasedFrameDecoder extends io.netty.handler.codec.ByteToMessageDecoder
{
private final io.netty.buffer.ByteBuf[] delimiters;
private final int maxFrameLength;
private final boolean stripDelimiter;
private final boolean failFast;
private boolean discardingTooLongFrame;
private int tooLongFrameLength;
private final io.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder;
public void <init>(int, io.netty.buffer.ByteBuf)
{
int v1;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void <init>(int,boolean,io.netty.buffer.ByteBuf)>(v1, 1, v2);
return;
}
public void <init>(int, boolean, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v3;
int v1;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
boolean v2;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: io.netty.buffer.ByteBuf;
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void <init>(int,boolean,boolean,io.netty.buffer.ByteBuf)>(v1, v2, 1, v3);
return;
}
public void <init>(int, boolean, boolean, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf[] v5;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
io.netty.buffer.ByteBuf v4, v8;
int v1, v6, v7;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
v4 := @parameter3: io.netty.buffer.ByteBuf;
v5 = newarray (io.netty.buffer.ByteBuf)[1];
v6 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readerIndex()>();
v7 = virtualinvoke v4.<io.netty.buffer.ByteBuf: int readableBytes()>();
v8 = virtualinvoke v4.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(v6, v7);
v5[0] = v8;
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void <init>(int,boolean,boolean,io.netty.buffer.ByteBuf[])>(v1, v2, v3, v5);
return;
}
public transient void <init>(int, io.netty.buffer.ByteBuf[])
{
int v1;
io.netty.buffer.ByteBuf[] v2;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: int;
v2 := @parameter1: io.netty.buffer.ByteBuf[];
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void <init>(int,boolean,io.netty.buffer.ByteBuf[])>(v1, 1, v2);
return;
}
public transient void <init>(int, boolean, io.netty.buffer.ByteBuf[])
{
io.netty.buffer.ByteBuf[] v3;
int v1;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
boolean v2;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: io.netty.buffer.ByteBuf[];
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void <init>(int,boolean,boolean,io.netty.buffer.ByteBuf[])>(v1, v2, 1, v3);
return;
}
public transient void <init>(int, boolean, boolean, io.netty.buffer.ByteBuf[])
{
io.netty.buffer.ByteBuf v12, v16;
int v1, v10, v11, v14, v15, v8;
boolean v2, v3, v5, v6;
io.netty.buffer.ByteBuf[] v13, v4, v9;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
io.netty.handler.codec.LineBasedFrameDecoder v7;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: int;
v2 := @parameter1: boolean;
v3 := @parameter2: boolean;
v4 := @parameter3: io.netty.buffer.ByteBuf[];
specialinvoke v0.<io.netty.handler.codec.ByteToMessageDecoder: void <init>()>();
staticinvoke <io.netty.handler.codec.DelimiterBasedFrameDecoder: void validateMaxFrameLength(int)>(v1);
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object[] checkNonEmpty(java.lang.Object[],java.lang.String)>(v4, "delimiters");
v5 = staticinvoke <io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean isLineBased(io.netty.buffer.ByteBuf[])>(v4);
if v5 == 0 goto label1;
v6 = specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean isSubclass()>();
if v6 != 0 goto label1;
v7 = new io.netty.handler.codec.LineBasedFrameDecoder;
specialinvoke v7.<io.netty.handler.codec.LineBasedFrameDecoder: void <init>(int,boolean,boolean)>(v1, v2, v3);
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder> = v7;
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.buffer.ByteBuf[] delimiters> = null;
goto label4;
label1:
v8 = lengthof v4;
v9 = newarray (io.netty.buffer.ByteBuf)[v8];
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.buffer.ByteBuf[] delimiters> = v9;
v10 = 0;
label2:
v11 = lengthof v4;
if v10 >= v11 goto label3;
v12 = v4[v10];
staticinvoke <io.netty.handler.codec.DelimiterBasedFrameDecoder: void validateDelimiter(io.netty.buffer.ByteBuf)>(v12);
v13 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.buffer.ByteBuf[] delimiters>;
v14 = virtualinvoke v12.<io.netty.buffer.ByteBuf: int readerIndex()>();
v15 = virtualinvoke v12.<io.netty.buffer.ByteBuf: int readableBytes()>();
v16 = virtualinvoke v12.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf slice(int,int)>(v14, v15);
v13[v10] = v16;
v10 = v10 + 1;
goto label2;
label3:
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder> = null;
label4:
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int maxFrameLength> = v1;
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean stripDelimiter> = v2;
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean failFast> = v3;
return;
}
private static boolean isLineBased(io.netty.buffer.ByteBuf[])
{
io.netty.buffer.ByteBuf[] v0;
byte v10, v8, v9;
io.netty.buffer.ByteBuf v2, v3;
int v1, v4, v5, v6, v7;
boolean v11;
v0 := @parameter0: io.netty.buffer.ByteBuf[];
v1 = lengthof v0;
if v1 == 2 goto label1;
return 0;
label1:
v2 = v0[0];
v3 = v0[1];
v4 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int capacity()>();
v5 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int capacity()>();
if v4 >= v5 goto label2;
v2 = v0[1];
v3 = v0[0];
label2:
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int capacity()>();
if v6 != 2 goto label3;
v7 = virtualinvoke v3.<io.netty.buffer.ByteBuf: int capacity()>();
if v7 != 1 goto label3;
v8 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(0);
if v8 != 13 goto label3;
v9 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte getByte(int)>(1);
if v9 != 10 goto label3;
v10 = virtualinvoke v3.<io.netty.buffer.ByteBuf: byte getByte(int)>(0);
if v10 != 10 goto label3;
v11 = 1;
goto label4;
label3:
v11 = 0;
label4:
return v11;
}
private boolean isSubclass()
{
java.lang.Class v1;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
boolean v2;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
if v1 == class "Lio/netty/handler/codec/DelimiterBasedFrameDecoder;" goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
protected final void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
java.util.List v3;
io.netty.buffer.ByteBuf v2;
java.lang.Object v4;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)>(v1, v2);
if v4 == null goto label1;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v4);
label1:
return;
}
protected java.lang.Object decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
boolean v14, v17, v20, v23, v28;
io.netty.buffer.ByteBuf[] v8;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
io.netty.handler.codec.LineBasedFrameDecoder v3, v4;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v11, v2, v21, v7;
int v10, v12, v13, v15, v16, v18, v19, v22, v24, v25, v26, v27, v29, v30, v31, v32, v33, v6, v9;
java.lang.Object v5;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder>;
if v3 == null goto label01;
v4 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.handler.codec.LineBasedFrameDecoder lineBasedDecoder>;
v5 = virtualinvoke v4.<io.netty.handler.codec.LineBasedFrameDecoder: java.lang.Object decode(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf)>(v1, v2);
return v5;
label01:
v6 = 2147483647;
v7 = null;
v8 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: io.netty.buffer.ByteBuf[] delimiters>;
v9 = lengthof v8;
v10 = 0;
label02:
if v10 >= v9 goto label04;
v11 = v8[v10];
v12 = staticinvoke <io.netty.handler.codec.DelimiterBasedFrameDecoder: int indexOf(io.netty.buffer.ByteBuf,io.netty.buffer.ByteBuf)>(v2, v11);
if v12 < 0 goto label03;
if v12 >= v6 goto label03;
v6 = v12;
v7 = v11;
label03:
v10 = v10 + 1;
goto label02;
label04:
if v7 == null goto label10;
v13 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int capacity()>();
v14 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean discardingTooLongFrame>;
if v14 == 0 goto label06;
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean discardingTooLongFrame> = 0;
v15 = v6 + v13;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v15);
v16 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int tooLongFrameLength>;
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int tooLongFrameLength> = 0;
v17 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean failFast>;
if v17 != 0 goto label05;
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void fail(long)>(v16);
label05:
return null;
label06:
v18 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int maxFrameLength>;
if v6 <= v18 goto label07;
v19 = v6 + v13;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v19);
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void fail(long)>(v6);
return null;
label07:
v20 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean stripDelimiter>;
if v20 == 0 goto label08;
v21 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v6);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v13);
goto label09;
label08:
v22 = v6 + v13;
v21 = virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readRetainedSlice(int)>(v22);
label09:
return v21;
label10:
v23 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean discardingTooLongFrame>;
if v23 != 0 goto label11;
v24 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v25 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int maxFrameLength>;
if v24 <= v25 goto label12;
v26 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int tooLongFrameLength> = v26;
v27 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v27);
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean discardingTooLongFrame> = 1;
v28 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: boolean failFast>;
if v28 == 0 goto label12;
v29 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int tooLongFrameLength>;
specialinvoke v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: void fail(long)>(v29);
goto label12;
label11:
v30 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int tooLongFrameLength>;
v31 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v32 = v30 + v31;
v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int tooLongFrameLength> = v32;
v33 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v33);
label12:
return null;
}
private void fail(long)
{
io.netty.handler.codec.TooLongFrameException v3, v6;
long v1;
io.netty.handler.codec.DelimiterBasedFrameDecoder v0;
byte v2;
int v4, v7;
java.lang.String v5, v8;
v0 := @this: io.netty.handler.codec.DelimiterBasedFrameDecoder;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = new io.netty.handler.codec.TooLongFrameException;
v4 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int maxFrameLength>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,long)>(v4, v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("frame length exceeds \u0001: \u0001 - discarded");
specialinvoke v3.<io.netty.handler.codec.TooLongFrameException: void <init>(java.lang.String)>(v5);
throw v3;
label1:
v6 = new io.netty.handler.codec.TooLongFrameException;
v7 = v0.<io.netty.handler.codec.DelimiterBasedFrameDecoder: int maxFrameLength>;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("frame length exceeds \u0001 - discarding");
specialinvoke v6.<io.netty.handler.codec.TooLongFrameException: void <init>(java.lang.String)>(v8);
throw v6;
}
private static int indexOf(io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf)
{
byte v7, v8;
io.netty.buffer.ByteBuf v0, v1;
int v10, v11, v12, v13, v14, v15, v16, v2, v3, v4, v5, v6, v9;
v0 := @parameter0: io.netty.buffer.ByteBuf;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
label1:
v3 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
if v2 >= v3 goto label6;
v4 = v2;
v5 = 0;
label2:
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int capacity()>();
if v5 >= v6 goto label4;
v7 = virtualinvoke v0.<io.netty.buffer.ByteBuf: byte getByte(int)>(v4);
v8 = virtualinvoke v1.<io.netty.buffer.ByteBuf: byte getByte(int)>(v5);
if v7 != v8 goto label4;
v4 = v4 + 1;
v9 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int writerIndex()>();
if v4 != v9 goto label3;
v10 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int capacity()>();
v11 = v10 - 1;
if v5 == v11 goto label3;
v12 = (int) -1;
return v12;
label3:
v5 = v5 + 1;
goto label2;
label4:
v13 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int capacity()>();
if v5 != v13 goto label5;
v14 = virtualinvoke v0.<io.netty.buffer.ByteBuf: int readerIndex()>();
v15 = v2 - v14;
return v15;
label5:
v2 = v2 + 1;
goto label1;
label6:
v16 = (int) -1;
return v16;
}
private static void validateDelimiter(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v0;
java.lang.IllegalArgumentException v2;
boolean v1;
v0 := @parameter0: io.netty.buffer.ByteBuf;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "delimiter");
v1 = virtualinvoke v0.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v1 != 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("empty delimiter");
throw v2;
label1:
return;
}
private static void validateMaxFrameLength(int)
{
int v0;
v0 := @parameter0: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v0, "maxFrameLength");
return;
}
}