public abstract class io.netty.handler.codec.MessageAggregator extends io.netty.handler.codec.MessageToMessageDecoder
{
private static final int DEFAULT_MAX_COMPOSITEBUFFER_COMPONENTS;
private final int maxContentLength;
private io.netty.buffer.ByteBufHolder currentMessage;
private boolean handlingOversizedMessage;
private int maxCumulationBufferComponents;
private io.netty.channel.ChannelHandlerContext ctx;
private io.netty.channel.ChannelFutureListener continueResponseWriteListener;
private boolean aggregating;
private boolean handleIncompleteAggregateDuringClose;
protected void <init>(int)
{
int v1;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void <init>()>();
v0.<io.netty.handler.codec.MessageAggregator: int maxCumulationBufferComponents> = 1024;
v0.<io.netty.handler.codec.MessageAggregator: boolean handleIncompleteAggregateDuringClose> = 1;
staticinvoke <io.netty.handler.codec.MessageAggregator: void validateMaxContentLength(int)>(v1);
v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength> = v1;
return;
}
protected void <init>(int, java.lang.Class)
{
int v1;
java.lang.Class v2;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Class;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void <init>(java.lang.Class)>(v2);
v0.<io.netty.handler.codec.MessageAggregator: int maxCumulationBufferComponents> = 1024;
v0.<io.netty.handler.codec.MessageAggregator: boolean handleIncompleteAggregateDuringClose> = 1;
staticinvoke <io.netty.handler.codec.MessageAggregator: void validateMaxContentLength(int)>(v1);
v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength> = v1;
return;
}
private static void validateMaxContentLength(int)
{
int v0;
v0 := @parameter0: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v0, "maxContentLength");
return;
}
public boolean acceptInboundMessage(java.lang.Object) throws java.lang.Exception
{
java.lang.Object v1;
io.netty.handler.codec.MessageAggregator v0;
boolean v2, v3, v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: boolean acceptInboundMessage(java.lang.Object)>(v1);
if v2 != 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isAggregated(java.lang.Object)>(v1);
if v3 == 0 goto label2;
return 0;
label2:
v4 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isStartMessage(java.lang.Object)>(v1);
if v4 == 0 goto label3;
return 1;
label3:
v5 = v0.<io.netty.handler.codec.MessageAggregator: boolean aggregating>;
if v5 == 0 goto label4;
v6 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isContentMessage(java.lang.Object)>(v1);
if v6 == 0 goto label4;
v7 = 1;
goto label5;
label4:
v7 = 0;
label5:
return v7;
}
protected abstract boolean isStartMessage(java.lang.Object) throws java.lang.Exception;
protected abstract boolean isContentMessage(java.lang.Object) throws java.lang.Exception;
protected abstract boolean isLastContentMessage(io.netty.buffer.ByteBufHolder) throws java.lang.Exception;
protected abstract boolean isAggregated(java.lang.Object) throws java.lang.Exception;
public final int maxContentLength()
{
int v1;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 = v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength>;
return v1;
}
public final int maxCumulationBufferComponents()
{
int v1;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 = v0.<io.netty.handler.codec.MessageAggregator: int maxCumulationBufferComponents>;
return v1;
}
public final void setMaxCumulationBufferComponents(int)
{
io.netty.channel.ChannelHandlerContext v4;
java.lang.IllegalStateException v5;
int v1;
io.netty.handler.codec.MessageAggregator v0;
java.lang.String v3;
java.lang.IllegalArgumentException v2;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: int;
if v1 >= 2 goto label1;
v2 = new java.lang.IllegalArgumentException;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("maxCumulationBufferComponents: \u0001 (expected: >= 2)");
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.channel.ChannelHandlerContext ctx>;
if v4 != null goto label2;
v0.<io.netty.handler.codec.MessageAggregator: int maxCumulationBufferComponents> = v1;
goto label3;
label2:
v5 = new java.lang.IllegalStateException;
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>("decoder properties cannot be changed once the decoder is added to a pipeline.");
throw v5;
label3:
return;
}
public final boolean isHandlingOversizedMessage()
{
io.netty.handler.codec.MessageAggregator v0;
boolean v1;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 = v0.<io.netty.handler.codec.MessageAggregator: boolean handlingOversizedMessage>;
return v1;
}
protected final io.netty.channel.ChannelHandlerContext ctx()
{
io.netty.channel.ChannelHandlerContext v1, v3;
java.lang.IllegalStateException v2;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.channel.ChannelHandlerContext ctx>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not added to a pipeline yet");
throw v2;
label1:
v3 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.channel.ChannelHandlerContext ctx>;
return v3;
}
protected void decode(io.netty.channel.ChannelHandlerContext, java.lang.Object, java.util.List) throws java.lang.Exception
{
io.netty.buffer.ByteBufAllocator v29;
io.netty.buffer.ByteBufHolder v27, v34, v36, v37, v44, v46, v5, v50, v52, v56, v57, v59, v6;
io.netty.handler.codec.MessageAggregationException v58, v7;
boolean v13, v14, v18, v20, v21, v23, v24, v32, v35, v4, v47, v49, v51, v55;
io.netty.channel.ChannelPipeline v9;
io.netty.buffer.CompositeByteBuf v31;
io.netty.handler.codec.DecoderResult v22, v48, v54;
java.util.List v3;
java.lang.Throwable v53;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v25, v26, v28, v33, v38, v41, v45;
io.netty.channel.ChannelFutureListener v11, v17;
int v19, v30, v39, v40, v42, v43, v8;
io.netty.handler.codec.MessageAggregator v0;
io.netty.handler.codec.MessageAggregator$1 v12;
io.netty.channel.ChannelFuture v15, v16;
java.lang.Object v10, v2;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.util.List;
v4 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isStartMessage(java.lang.Object)>(v2);
if v4 == 0 goto label10;
v0.<io.netty.handler.codec.MessageAggregator: boolean aggregating> = 1;
v0.<io.netty.handler.codec.MessageAggregator: boolean handlingOversizedMessage> = 0;
v5 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
if v5 == null goto label01;
v6 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
interfaceinvoke v6.<io.netty.buffer.ByteBufHolder: boolean release()>();
v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage> = null;
v7 = new io.netty.handler.codec.MessageAggregationException;
specialinvoke v7.<io.netty.handler.codec.MessageAggregationException: void <init>()>();
throw v7;
label01:
v8 = v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength>;
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v10 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: java.lang.Object newContinueResponse(java.lang.Object,int,io.netty.channel.ChannelPipeline)>(v2, v8, v9);
if v10 == null goto label04;
v11 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.channel.ChannelFutureListener continueResponseWriteListener>;
if v11 != null goto label02;
v12 = new io.netty.handler.codec.MessageAggregator$1;
specialinvoke v12.<io.netty.handler.codec.MessageAggregator$1: void <init>(io.netty.handler.codec.MessageAggregator,io.netty.channel.ChannelHandlerContext)>(v0, v1);
v11 = v12;
v0.<io.netty.handler.codec.MessageAggregator: io.netty.channel.ChannelFutureListener continueResponseWriteListener> = v12;
label02:
v13 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean closeAfterContinueResponse(java.lang.Object)>(v10);
v14 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean ignoreContentAfterContinueResponse(java.lang.Object)>(v10);
v0.<io.netty.handler.codec.MessageAggregator: boolean handlingOversizedMessage> = v14;
v15 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v10);
v16 = interfaceinvoke v15.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v11);
if v13 == 0 goto label03;
v0.<io.netty.handler.codec.MessageAggregator: boolean handleIncompleteAggregateDuringClose> = 0;
v17 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE>;
interfaceinvoke v16.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v17);
return;
label03:
v18 = v0.<io.netty.handler.codec.MessageAggregator: boolean handlingOversizedMessage>;
if v18 == 0 goto label05;
return;
label04:
v19 = v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength>;
v20 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isContentLengthInvalid(java.lang.Object,int)>(v2, v19);
if v20 == 0 goto label05;
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void invokeHandleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
label05:
v21 = v2 instanceof io.netty.handler.codec.DecoderResultProvider;
if v21 == 0 goto label08;
v22 = interfaceinvoke v2.<io.netty.handler.codec.DecoderResultProvider: io.netty.handler.codec.DecoderResult decoderResult()>();
v23 = virtualinvoke v22.<io.netty.handler.codec.DecoderResult: boolean isSuccess()>();
if v23 != 0 goto label08;
v24 = v2 instanceof io.netty.buffer.ByteBufHolder;
if v24 == 0 goto label06;
v25 = interfaceinvoke v2.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
v26 = virtualinvoke v25.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
v27 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf)>(v2, v26);
goto label07;
label06:
v28 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
v27 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf)>(v2, v28);
label07:
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void finishAggregation0(io.netty.buffer.ByteBufHolder)>(v27);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v27);
return;
label08:
v29 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v30 = v0.<io.netty.handler.codec.MessageAggregator: int maxCumulationBufferComponents>;
v31 = interfaceinvoke v29.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.CompositeByteBuf compositeBuffer(int)>(v30);
v32 = v2 instanceof io.netty.buffer.ByteBufHolder;
if v32 == 0 goto label09;
v33 = interfaceinvoke v2.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
staticinvoke <io.netty.handler.codec.MessageAggregator: void appendPartialContent(io.netty.buffer.CompositeByteBuf,io.netty.buffer.ByteBuf)>(v31, v33);
label09:
v34 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object,io.netty.buffer.ByteBuf)>(v2, v31);
v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage> = v34;
goto label18;
label10:
v35 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isContentMessage(java.lang.Object)>(v2);
if v35 == 0 goto label17;
v36 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
if v36 != null goto label11;
return;
label11:
v37 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
v38 = interfaceinvoke v37.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
v39 = virtualinvoke v38.<io.netty.buffer.CompositeByteBuf: int readableBytes()>();
v40 = v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength>;
v41 = interfaceinvoke v2.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
v42 = virtualinvoke v41.<io.netty.buffer.ByteBuf: int readableBytes()>();
v43 = v40 - v42;
if v39 <= v43 goto label12;
v44 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void invokeHandleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v44);
return;
label12:
v45 = interfaceinvoke v2.<io.netty.buffer.ByteBufHolder: io.netty.buffer.ByteBuf content()>();
staticinvoke <io.netty.handler.codec.MessageAggregator: void appendPartialContent(io.netty.buffer.CompositeByteBuf,io.netty.buffer.ByteBuf)>(v38, v45);
v46 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: void aggregate(io.netty.buffer.ByteBufHolder,io.netty.buffer.ByteBufHolder)>(v46, v2);
v47 = v2 instanceof io.netty.handler.codec.DecoderResultProvider;
if v47 == 0 goto label15;
v48 = interfaceinvoke v59.<io.netty.handler.codec.DecoderResultProvider: io.netty.handler.codec.DecoderResult decoderResult()>();
v49 = virtualinvoke v48.<io.netty.handler.codec.DecoderResult: boolean isSuccess()>();
if v49 != 0 goto label14;
v50 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
v51 = v50 instanceof io.netty.handler.codec.DecoderResultProvider;
if v51 == 0 goto label13;
v52 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
v53 = virtualinvoke v48.<io.netty.handler.codec.DecoderResult: java.lang.Throwable cause()>();
v54 = staticinvoke <io.netty.handler.codec.DecoderResult: io.netty.handler.codec.DecoderResult failure(java.lang.Throwable)>(v53);
interfaceinvoke v52.<io.netty.handler.codec.DecoderResultProvider: void setDecoderResult(io.netty.handler.codec.DecoderResult)>(v54);
label13:
v55 = 1;
goto label16;
label14:
v55 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isLastContentMessage(io.netty.buffer.ByteBufHolder)>(v2);
goto label16;
label15:
v55 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: boolean isLastContentMessage(io.netty.buffer.ByteBufHolder)>(v2);
label16:
if v55 == 0 goto label18;
v56 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void finishAggregation0(io.netty.buffer.ByteBufHolder)>(v56);
v57 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v57);
v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage> = null;
goto label18;
label17:
v58 = new io.netty.handler.codec.MessageAggregationException;
specialinvoke v58.<io.netty.handler.codec.MessageAggregationException: void <init>()>();
throw v58;
label18:
return;
}
private static void appendPartialContent(io.netty.buffer.CompositeByteBuf, io.netty.buffer.ByteBuf)
{
io.netty.buffer.CompositeByteBuf v0;
io.netty.buffer.ByteBuf v1, v3;
boolean v2;
v0 := @parameter0: io.netty.buffer.CompositeByteBuf;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
virtualinvoke v0.<io.netty.buffer.CompositeByteBuf: io.netty.buffer.CompositeByteBuf addComponent(boolean,io.netty.buffer.ByteBuf)>(1, v3);
label1:
return;
}
protected abstract boolean isContentLengthInvalid(java.lang.Object, int) throws java.lang.Exception;
protected abstract java.lang.Object newContinueResponse(java.lang.Object, int, io.netty.channel.ChannelPipeline) throws java.lang.Exception;
protected abstract boolean closeAfterContinueResponse(java.lang.Object) throws java.lang.Exception;
protected abstract boolean ignoreContentAfterContinueResponse(java.lang.Object) throws java.lang.Exception;
protected abstract io.netty.buffer.ByteBufHolder beginAggregation(java.lang.Object, io.netty.buffer.ByteBuf) throws java.lang.Exception;
protected void aggregate(io.netty.buffer.ByteBufHolder, io.netty.buffer.ByteBufHolder) throws java.lang.Exception
{
io.netty.handler.codec.MessageAggregator v0;
io.netty.buffer.ByteBufHolder v1, v2;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.buffer.ByteBufHolder;
v2 := @parameter1: io.netty.buffer.ByteBufHolder;
return;
}
private void finishAggregation0(io.netty.buffer.ByteBufHolder) throws java.lang.Exception
{
io.netty.handler.codec.MessageAggregator v0;
io.netty.buffer.ByteBufHolder v1;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.buffer.ByteBufHolder;
v0.<io.netty.handler.codec.MessageAggregator: boolean aggregating> = 0;
virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: void finishAggregation(io.netty.buffer.ByteBufHolder)>(v1);
return;
}
protected void finishAggregation(io.netty.buffer.ByteBufHolder) throws java.lang.Exception
{
io.netty.handler.codec.MessageAggregator v0;
io.netty.buffer.ByteBufHolder v1;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.buffer.ByteBufHolder;
return;
}
private void invokeHandleOversizedMessage(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
java.lang.Throwable v3;
io.netty.channel.ChannelHandlerContext v1;
java.lang.Object v2;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v0.<io.netty.handler.codec.MessageAggregator: boolean handlingOversizedMessage> = 1;
v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage> = null;
v0.<io.netty.handler.codec.MessageAggregator: boolean handleIncompleteAggregateDuringClose> = 0;
label1:
virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: void handleOversizedMessage(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
label2:
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
goto label4;
label3:
v3 := @caughtexception;
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
protected void handleOversizedMessage(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
int v4;
io.netty.handler.codec.TooLongFrameException v3;
java.lang.Object v2;
io.netty.handler.codec.MessageAggregator v0;
java.lang.String v5;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = new io.netty.handler.codec.TooLongFrameException;
v4 = virtualinvoke v0.<io.netty.handler.codec.MessageAggregator: int maxContentLength()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("content length exceeded \u0001 bytes.");
specialinvoke v3.<io.netty.handler.codec.TooLongFrameException: void <init>(java.lang.String)>(v5);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v3);
return;
}
public void channelReadComplete(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.Channel v3;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelConfig v4;
io.netty.handler.codec.MessageAggregator v0;
io.netty.buffer.ByteBufHolder v2;
boolean v5;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
if v2 == null goto label1;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v4 = interfaceinvoke v3.<io.netty.channel.Channel: io.netty.channel.ChannelConfig config()>();
v5 = interfaceinvoke v4.<io.netty.channel.ChannelConfig: boolean isAutoRead()>();
if v5 != 0 goto label1;
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext read()>();
label1:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireChannelReadComplete()>();
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v5;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.PrematureChannelClosureException v4;
io.netty.handler.codec.MessageAggregator v0;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.MessageAggregator: boolean aggregating>;
if v2 == 0 goto label1;
v3 = v0.<io.netty.handler.codec.MessageAggregator: boolean handleIncompleteAggregateDuringClose>;
if v3 == 0 goto label1;
v4 = new io.netty.handler.codec.PrematureChannelClosureException;
specialinvoke v4.<io.netty.handler.codec.PrematureChannelClosureException: void <init>(java.lang.String)>("Channel closed while still aggregating message");
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext fireExceptionCaught(java.lang.Throwable)>(v4);
label1:
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
label2:
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void releaseCurrentMessage()>();
goto label4;
label3:
v5 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void releaseCurrentMessage()>();
throw v5;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.MessageAggregator: io.netty.channel.ChannelHandlerContext ctx> = v1;
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.MessageAggregator v0;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
label1:
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
label2:
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void releaseCurrentMessage()>();
goto label4;
label3:
v2 := @caughtexception;
specialinvoke v0.<io.netty.handler.codec.MessageAggregator: void releaseCurrentMessage()>();
throw v2;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void releaseCurrentMessage()
{
io.netty.handler.codec.MessageAggregator v0;
io.netty.buffer.ByteBufHolder v1, v2;
v0 := @this: io.netty.handler.codec.MessageAggregator;
v1 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage>;
interfaceinvoke v2.<io.netty.buffer.ByteBufHolder: boolean release()>();
v0.<io.netty.handler.codec.MessageAggregator: io.netty.buffer.ByteBufHolder currentMessage> = null;
v0.<io.netty.handler.codec.MessageAggregator: boolean handlingOversizedMessage> = 0;
v0.<io.netty.handler.codec.MessageAggregator: boolean aggregating> = 0;
label1:
return;
}
}