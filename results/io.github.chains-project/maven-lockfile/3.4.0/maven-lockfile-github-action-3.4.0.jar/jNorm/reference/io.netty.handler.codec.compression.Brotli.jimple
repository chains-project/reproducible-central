public final class io.netty.handler.codec.compression.Brotli extends java.lang.Object
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final java.lang.ClassNotFoundException CNFE;
private static java.lang.Throwable cause;
public static boolean isAvailable()
{
java.lang.ClassNotFoundException v0;
boolean v1, v2;
v0 = <io.netty.handler.codec.compression.Brotli: java.lang.ClassNotFoundException CNFE>;
if v0 != null goto label1;
v1 = staticinvoke <com.aayushatharva.brotli4j.Brotli4jLoader: boolean isAvailable()>();
if v1 == 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public static void ensureAvailability() throws java.lang.Throwable
{
java.lang.ClassNotFoundException v0, v1;
v0 = <io.netty.handler.codec.compression.Brotli: java.lang.ClassNotFoundException CNFE>;
if v0 == null goto label1;
v1 = <io.netty.handler.codec.compression.Brotli: java.lang.ClassNotFoundException CNFE>;
throw v1;
label1:
staticinvoke <com.aayushatharva.brotli4j.Brotli4jLoader: void ensureAvailability()>();
return;
}
public static java.lang.Throwable cause()
{
java.lang.Throwable v0;
v0 = <io.netty.handler.codec.compression.Brotli: java.lang.Throwable cause>;
return v0;
}
private void <init>()
{
io.netty.handler.codec.compression.Brotli v0;
v0 := @this: io.netty.handler.codec.compression.Brotli;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.lang.Throwable v5, v6, v8;
io.netty.util.internal.logging.InternalLogger v0, v4, v7;
java.lang.ClassNotFoundException v1, v3;
java.lang.ClassLoader v2;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/compression/Brotli;");
<io.netty.handler.codec.compression.Brotli: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = null;
label1:
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class "Lio/netty/handler/codec/compression/Brotli;");
staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("com.aayushatharva.brotli4j.Brotli4jLoader", 0, v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v1 = v3;
v4 = <io.netty.handler.codec.compression.Brotli: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v4.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("brotli4j not in the classpath; Brotli support will be unavailable.");
label4:
<io.netty.handler.codec.compression.Brotli: java.lang.ClassNotFoundException CNFE> = v1;
if v1 != null goto label5;
v5 = staticinvoke <com.aayushatharva.brotli4j.Brotli4jLoader: java.lang.Throwable getUnavailabilityCause()>();
<io.netty.handler.codec.compression.Brotli: java.lang.Throwable cause> = v5;
v6 = <io.netty.handler.codec.compression.Brotli: java.lang.Throwable cause>;
if v6 == null goto label5;
v7 = <io.netty.handler.codec.compression.Brotli: io.netty.util.internal.logging.InternalLogger logger>;
v8 = <io.netty.handler.codec.compression.Brotli: java.lang.Throwable cause>;
interfaceinvoke v7.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Failed to load brotli4j; Brotli support will be unavailable.", v8);
label5:
return;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
}