final class io.netty.handler.codec.compression.Bzip2DivSufSort extends java.lang.Object
{
private static final int STACK_SIZE;
private static final int BUCKET_A_SIZE;
private static final int BUCKET_B_SIZE;
private static final int SS_BLOCKSIZE;
private static final int INSERTIONSORT_THRESHOLD;
private static final int[] LOG_2_TABLE;
private final int[] SA;
private final byte[] T;
private final int n;
void <init>(byte[], int[], int)
{
byte[] v1;
int[] v2;
int v3;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: byte[];
v2 := @parameter1: int[];
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T> = v1;
v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA> = v2;
v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int n> = v3;
return;
}
private static void swapElements(int[], int, int[], int)
{
int[] v0, v2;
int v1, v3, v4, v5;
v0 := @parameter0: int[];
v1 := @parameter1: int;
v2 := @parameter2: int[];
v3 := @parameter3: int;
v4 = v0[v1];
v5 = v2[v3];
v0[v1] = v5;
v2[v3] = v4;
return;
}
private int ssCompare(int, int, int)
{
byte[] v5;
short v19, v21;
byte v16, v17, v18, v20;
int[] v4;
int v1, v10, v11, v12, v13, v14, v15, v2, v22, v23, v3, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v6 = v1 + 1;
v7 = v4[v6];
v8 = v7 + 2;
v9 = v2 + 1;
v10 = v4[v9];
v11 = v10 + 2;
v12 = v4[v1];
v13 = v3 + v12;
v14 = v4[v2];
v15 = v3 + v14;
label1:
if v13 >= v8 goto label4;
if v15 >= v11 goto label2;
v16 = v5[v13];
v17 = v5[v15];
if v16 != v17 goto label2;
v13 = v13 + 1;
v15 = v15 + 1;
goto label1;
label2:
if v13 >= v8 goto label4;
if v15 >= v11 goto label3;
v18 = v5[v13];
v19 = v18 & 255;
v20 = v5[v15];
v21 = v20 & 255;
v22 = v19 - v21;
goto label6;
label3:
v22 = 1;
goto label6;
label4:
if v15 >= v11 goto label5;
v23 = (int) -1;
v22 = v23;
goto label6;
label5:
v22 = 0;
label6:
return v22;
}
private int ssCompareLast(int, int, int, int, int)
{
byte[] v7;
byte v15, v16, v17, v19, v25, v26, v27, v29;
int[] v6;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
short v18, v20, v28, v30;
int v1, v10, v11, v12, v13, v14, v2, v21, v22, v23, v24, v3, v31, v32, v4, v5, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v8 = v6[v2];
v9 = v4 + v8;
v10 = v6[v3];
v11 = v4 + v10;
v12 = v3 + 1;
v13 = v6[v12];
v14 = v13 + 2;
label01:
if v9 >= v5 goto label05;
if v11 >= v14 goto label02;
v15 = v7[v9];
v16 = v7[v11];
if v15 != v16 goto label02;
v9 = v9 + 1;
v11 = v11 + 1;
goto label01;
label02:
if v9 >= v5 goto label05;
if v11 >= v14 goto label03;
v17 = v7[v9];
v18 = v17 & 255;
v19 = v7[v11];
v20 = v19 & 255;
v21 = v18 - v20;
goto label04;
label03:
v21 = 1;
label04:
return v21;
label05:
if v11 != v14 goto label06;
return 1;
label06:
v22 = v9 % v5;
v23 = v6[v1];
v24 = v23 + 2;
label07:
if v22 >= v24 goto label10;
if v11 >= v14 goto label08;
v25 = v7[v22];
v26 = v7[v11];
if v25 != v26 goto label08;
v22 = v22 + 1;
v11 = v11 + 1;
goto label07;
label08:
if v22 >= v24 goto label10;
if v11 >= v14 goto label09;
v27 = v7[v22];
v28 = v27 & 255;
v29 = v7[v11];
v30 = v29 & 255;
v31 = v28 - v30;
goto label12;
label09:
v31 = 1;
goto label12;
label10:
if v11 >= v14 goto label11;
v32 = (int) -1;
v31 = v32;
goto label12;
label11:
v31 = 0;
label12:
return v31;
}
private void ssInsertionSort(int, int, int, int)
{
int[] v5;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v3, v4, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v6 = v3 - 2;
label1:
if v2 > v6 goto label7;
v7 = v5[v6];
v8 = v6 + 1;
label2:
v9 = v1 + v7;
v10 = v5[v8];
v11 = v1 + v10;
v12 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssCompare(int,int,int)>(v9, v11, v4);
if 0 >= v12 goto label5;
label3:
v13 = v8 - 1;
v14 = v5[v8];
v5[v13] = v14;
v8 = v8 + 1;
if v8 >= v3 goto label4;
v15 = v5[v8];
if v15 < 0 goto label3;
label4:
if v3 > v8 goto label2;
label5:
if v12 != 0 goto label6;
v16 = v5[v8];
v17 = (int) -1;
v18 = v16 ^ v17;
v5[v8] = v18;
label6:
v19 = v8 - 1;
v5[v19] = v7;
v6 = v6 - 1;
goto label1;
label7:
return;
}
private void ssFixdown(int, int, int, int, int)
{
byte[] v7;
byte v13, v24, v31;
int[] v6;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
short v14, v25, v32;
int v1, v10, v11, v12, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v26, v27, v28, v29, v3, v30, v33, v34, v35, v36, v4, v5, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v8 = v3 + v4;
v9 = v6[v8];
v10 = v2 + v9;
v11 = v6[v10];
v12 = v1 + v11;
v13 = v7[v12];
v14 = v13 & 255;
label1:
v15 = 2 * v4;
v16 = v15 + 1;
if v16 >= v5 goto label3;
v17 = v16 + 1;
v18 = v16;
v19 = v3 + v16;
v20 = v6[v19];
v21 = v2 + v20;
v22 = v6[v21];
v23 = v1 + v22;
v24 = v7[v23];
v25 = v24 & 255;
v26 = v3 + v17;
v27 = v6[v26];
v28 = v2 + v27;
v29 = v6[v28];
v30 = v1 + v29;
v31 = v7[v30];
v32 = v31 & 255;
if v25 >= v32 goto label2;
v18 = v17;
v25 = v32;
label2:
if v25 <= v14 goto label3;
v33 = v3 + v4;
v34 = v3 + v18;
v35 = v6[v34];
v6[v33] = v35;
v4 = v18;
goto label1;
label3:
v36 = v3 + v4;
v6[v36] = v9;
return;
}
private void ssHeapSort(int, int, int, int)
{
byte[] v6;
byte v15, v22;
int[] v5;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
short v16, v23;
int v1, v10, v11, v12, v13, v14, v17, v18, v19, v2, v20, v21, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v4, v7, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v7 = v4;
v8 = v4 % 2;
if v8 != 0 goto label1;
v7 = v4 - 1;
v9 = v7 / 2;
v10 = v3 + v9;
v11 = v5[v10];
v12 = v2 + v11;
v13 = v5[v12];
v14 = v1 + v13;
v15 = v6[v14];
v16 = v15 & 255;
v17 = v3 + v7;
v18 = v5[v17];
v19 = v2 + v18;
v20 = v5[v19];
v21 = v1 + v20;
v22 = v6[v21];
v23 = v22 & 255;
if v16 >= v23 goto label1;
v24 = v3 + v7;
v25 = v7 / 2;
v26 = v3 + v25;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v24, v5, v26);
label1:
v27 = v7 / 2;
v28 = v27 - 1;
label2:
if 0 > v28 goto label3;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssFixdown(int,int,int,int,int)>(v1, v2, v3, v28, v7);
v28 = v28 - 1;
goto label2;
label3:
v29 = v4 % 2;
if v29 != 0 goto label4;
v30 = v3 + v7;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v3, v5, v30);
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssFixdown(int,int,int,int,int)>(v1, v2, v3, 0, v7);
label4:
v31 = v7 - 1;
label5:
if 0 >= v31 goto label6;
v32 = v5[v3];
v33 = v3 + v31;
v34 = v5[v33];
v5[v3] = v34;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssFixdown(int,int,int,int,int)>(v1, v2, v3, 0, v31);
v35 = v3 + v31;
v5[v35] = v32;
v31 = v31 - 1;
goto label5;
label6:
return;
}
private int ssMedian3(int, int, int, int, int)
{
byte[] v7;
short v13, v19, v25, v27;
byte v12, v18, v24;
int[] v6;
int v1, v10, v11, v14, v15, v16, v17, v2, v20, v21, v22, v23, v26, v3, v4, v5, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v8 = v6[v3];
v9 = v2 + v8;
v10 = v6[v9];
v11 = v1 + v10;
v12 = v7[v11];
v13 = v12 & 255;
v14 = v6[v4];
v15 = v2 + v14;
v16 = v6[v15];
v17 = v1 + v16;
v18 = v7[v17];
v19 = v18 & 255;
v20 = v6[v5];
v21 = v2 + v20;
v22 = v6[v21];
v23 = v1 + v22;
v24 = v7[v23];
v25 = v24 & 255;
if v13 <= v19 goto label1;
v26 = v3;
v3 = v4;
v4 = v26;
v27 = v13;
v13 = v19;
v19 = v27;
label1:
if v19 <= v25 goto label3;
if v13 <= v25 goto label2;
return v3;
label2:
return v5;
label3:
return v4;
}
private int ssMedian5(int, int, int, int, int, int, int)
{
byte[] v9;
byte v14, v20, v26, v32, v38;
int[] v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
short v15, v21, v27, v33, v39, v41, v43, v45, v47;
int v1, v10, v11, v12, v13, v16, v17, v18, v19, v2, v22, v23, v24, v25, v28, v29, v3, v30, v31, v34, v35, v36, v37, v4, v40, v42, v44, v46, v5, v6, v7;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v9 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v10 = v8[v3];
v11 = v2 + v10;
v12 = v8[v11];
v13 = v1 + v12;
v14 = v9[v13];
v15 = v14 & 255;
v16 = v8[v4];
v17 = v2 + v16;
v18 = v8[v17];
v19 = v1 + v18;
v20 = v9[v19];
v21 = v20 & 255;
v22 = v8[v5];
v23 = v2 + v22;
v24 = v8[v23];
v25 = v1 + v24;
v26 = v9[v25];
v27 = v26 & 255;
v28 = v8[v6];
v29 = v2 + v28;
v30 = v8[v29];
v31 = v1 + v30;
v32 = v9[v31];
v33 = v32 & 255;
v34 = v8[v7];
v35 = v2 + v34;
v36 = v8[v35];
v37 = v1 + v36;
v38 = v9[v37];
v39 = v38 & 255;
if v21 <= v27 goto label1;
v40 = v4;
v4 = v5;
v5 = v40;
v41 = v21;
v21 = v27;
v27 = v41;
label1:
if v33 <= v39 goto label2;
v42 = v6;
v6 = v7;
v7 = v42;
v43 = v33;
v33 = v39;
v39 = v43;
label2:
if v21 <= v33 goto label3;
v6 = v4;
v33 = v21;
v44 = v5;
v5 = v7;
v7 = v44;
v45 = v27;
v27 = v39;
v39 = v45;
label3:
if v15 <= v27 goto label4;
v46 = v3;
v3 = v5;
v5 = v46;
v47 = v15;
v15 = v27;
v27 = v47;
label4:
if v15 <= v33 goto label5;
v6 = v3;
v33 = v15;
v5 = v7;
v27 = v39;
label5:
if v27 <= v33 goto label6;
return v6;
label6:
return v5;
}
private int ssPivot(int, int, int, int)
{
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v4, v5, v6, v7, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v4 - v3;
v6 = v5 / 2;
v7 = v3 + v6;
if v5 > 512 goto label2;
if v5 > 32 goto label1;
v8 = v4 - 1;
v9 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssMedian3(int,int,int,int,int)>(v1, v2, v3, v7, v8);
return v9;
label1:
v10 = v5 >> 2;
v11 = v3 + v10;
v12 = v4 - 1;
v13 = v12 - v10;
v14 = v4 - 1;
v15 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssMedian5(int,int,int,int,int,int,int)>(v1, v2, v3, v11, v7, v13, v14);
return v15;
label2:
v16 = v5 >> 3;
v17 = v3 + v16;
v18 = v16 << 1;
v19 = v3 + v18;
v20 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssMedian3(int,int,int,int,int)>(v1, v2, v3, v17, v19);
v21 = v7 - v16;
v22 = v7 + v16;
v23 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssMedian3(int,int,int,int,int)>(v1, v2, v21, v7, v22);
v24 = v4 - 1;
v25 = v16 << 1;
v26 = v24 - v25;
v27 = v4 - 1;
v28 = v27 - v16;
v29 = v4 - 1;
v30 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssMedian3(int,int,int,int,int)>(v1, v2, v26, v28, v29);
v31 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssMedian3(int,int,int,int,int)>(v1, v2, v20, v23, v30);
return v31;
}
private static int ssLog(int)
{
int[] v3, v8;
int v0, v1, v2, v4, v5, v6, v7, v9;
v0 := @parameter0: int;
v1 = (int) 65280;
v2 = v0 & v1;
if v2 == 0 goto label1;
v3 = <io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE>;
v4 = v0 >> 8;
v5 = v4 & 255;
v6 = v3[v5];
v7 = 8 + v6;
goto label2;
label1:
v8 = <io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE>;
v9 = v0 & 255;
v7 = v8[v9];
label2:
return v7;
}
private int ssSubstringPartition(int, int, int, int)
{
int[] v5;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v4, v6, v7, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v6 = v2 - 1;
v7 = v3;
label1:
v6 = v6 + 1;
if v6 >= v7 goto label2;
v8 = v5[v6];
v9 = v1 + v8;
v10 = v5[v9];
v11 = v10 + v4;
v12 = v5[v6];
v13 = v1 + v12;
v14 = v13 + 1;
v15 = v5[v14];
v16 = v15 + 1;
if v11 < v16 goto label2;
v17 = v5[v6];
v18 = (int) -1;
v19 = v17 ^ v18;
v5[v6] = v19;
goto label1;
label2:
v7 = v7 - 1;
label3:
if v6 >= v7 goto label4;
v20 = v5[v7];
v21 = v1 + v20;
v22 = v5[v21];
v23 = v22 + v4;
v24 = v5[v7];
v25 = v1 + v24;
v26 = v25 + 1;
v27 = v5[v26];
v28 = v27 + 1;
if v23 >= v28 goto label4;
v7 = v7 - 1;
goto label3;
label4:
if v7 <= v6 goto label5;
v29 = v5[v7];
v30 = (int) -1;
v31 = v29 ^ v30;
v32 = v5[v6];
v5[v7] = v32;
v5[v6] = v31;
goto label1;
label5:
if v2 >= v6 goto label6;
v33 = v5[v2];
v34 = (int) -1;
v35 = v33 ^ v34;
v5[v2] = v35;
label6:
return v6;
}
private void ssMultiKeyIntroSort(int, int, int, int)
{
byte[] v6;
byte v100, v123, v173, v23, v29, v37, v60, v67, v74, v81, v88, v94;
short v101, v124, v174, v24, v30, v38, v61, v68, v75, v8, v82, v89, v95;
int[] v5;
int v1, v10, v102, v103, v104, v105, v106, v107, v108, v109, v11, v110, v111, v112, v113, v114, v115, v116, v117, v118, v119, v12, v120, v121, v122, v125, v126, v127, v128, v129, v13, v130, v132, v133, v134, v136, v137, v138, v141, v142, v143, v144, v147, v148, v149, v15, v150, v152, v153, v154, v156, v157, v158, v16, v161, v162, v163, v164, v167, v168, v169, v17, v170, v171, v172, v175, v18, v19, v2, v20, v21, v22, v25, v26, v27, v28, v3, v31, v32, v33, v34, v35, v36, v39, v4, v40, v41, v42, v44, v45, v46, v47, v48, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v62, v63, v64, v65, v66, v69, v70, v71, v72, v73, v76, v77, v78, v79, v80, v83, v84, v85, v86, v87, v9, v90, v91, v92, v93, v96, v97, v98, v99;
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry[] v7;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry v131, v135, v139, v14, v140, v145, v146, v151, v155, v159, v160, v165, v166, v43, v49;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v7 = newarray (io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry)[64];
v8 = 0;
v9 = 0;
v10 = v3 - v2;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v10);
label01:
v12 = v3 - v2;
if v12 > 8 goto label04;
v13 = v3 - v2;
if 1 >= v13 goto label02;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssInsertionSort(int,int,int,int)>(v1, v2, v3, v4);
label02:
if v9 != 0 goto label03;
return;
label03:
v9 = v9 - 1;
v14 = v7[v9];
v2 = v14.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v3 = v14.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v4 = v14.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v11 = v14.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label04:
v15 = v4;
v16 = v11;
v11 = v11 - 1;
if v16 != 0 goto label05;
v17 = v3 - v2;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssHeapSort(int,int,int,int)>(v4, v1, v2, v17);
label05:
if v11 >= 0 goto label13;
v18 = v2 + 1;
v19 = v5[v2];
v20 = v1 + v19;
v21 = v5[v20];
v22 = v15 + v21;
v23 = v6[v22];
v24 = v23 & 255;
label06:
if v18 >= v3 goto label08;
v25 = v5[v18];
v26 = v1 + v25;
v27 = v5[v26];
v28 = v15 + v27;
v29 = v6[v28];
v30 = v29 & 255;
v8 = v30;
if v30 == v24 goto label07;
v31 = v18 - v2;
if 1 < v31 goto label08;
v24 = v30;
v2 = v18;
label07:
v18 = v18 + 1;
goto label06;
label08:
v32 = v5[v2];
v33 = v1 + v32;
v34 = v5[v33];
v35 = v15 + v34;
v36 = v35 - 1;
v37 = v6[v36];
v38 = v37 & 255;
if v38 >= v24 goto label09;
v2 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssSubstringPartition(int,int,int,int)>(v1, v2, v18, v4);
label09:
v39 = v18 - v2;
v40 = v3 - v18;
if v39 > v40 goto label11;
v41 = v18 - v2;
if 1 >= v41 goto label10;
v42 = v9;
v9 = v9 + 1;
v43 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v44 = (int) -1;
specialinvoke v43.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v18, v3, v4, v44);
v7[v42] = v43;
v3 = v18;
v4 = v4 + 1;
v45 = v18 - v2;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v45);
goto label01;
label10:
v2 = v18;
v46 = (int) -1;
v11 = v46;
goto label01;
label11:
v47 = v3 - v18;
if 1 >= v47 goto label12;
v48 = v9;
v9 = v9 + 1;
v49 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v50 = v4 + 1;
v51 = v18 - v2;
v52 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v51);
specialinvoke v49.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v18, v50, v52);
v7[v48] = v49;
v2 = v18;
v53 = (int) -1;
v11 = v53;
goto label01;
label12:
v3 = v18;
v4 = v4 + 1;
v54 = v18 - v2;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v54);
goto label01;
label13:
v55 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssPivot(int,int,int,int)>(v15, v1, v2, v3);
v56 = v5[v55];
v57 = v1 + v56;
v58 = v5[v57];
v59 = v15 + v58;
v60 = v6[v59];
v61 = v60 & 255;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v2, v5, v55);
v62 = v2 + 1;
label14:
if v62 >= v3 goto label15;
v63 = v5[v62];
v64 = v1 + v63;
v65 = v5[v64];
v66 = v15 + v65;
v67 = v6[v66];
v68 = v67 & 255;
v8 = v68;
if v68 != v61 goto label15;
v62 = v62 + 1;
goto label14;
label15:
v69 = v62;
if v62 >= v3 goto label17;
if v8 >= v61 goto label17;
label16:
v62 = v62 + 1;
if v62 >= v3 goto label17;
v70 = v5[v62];
v71 = v1 + v70;
v72 = v5[v71];
v73 = v15 + v72;
v74 = v6[v73];
v75 = v74 & 255;
v8 = v75;
if v75 > v61 goto label17;
if v75 != v61 goto label16;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v62, v5, v69);
v69 = v69 + 1;
goto label16;
label17:
v76 = v3 - 1;
label18:
if v62 >= v76 goto label19;
v77 = v5[v76];
v78 = v1 + v77;
v79 = v5[v78];
v80 = v15 + v79;
v81 = v6[v80];
v82 = v81 & 255;
v8 = v82;
if v82 != v61 goto label19;
v76 = v76 - 1;
goto label18;
label19:
v83 = v76;
if v62 >= v76 goto label24;
if v8 <= v61 goto label21;
label20:
v76 = v76 - 1;
if v62 >= v76 goto label24;
v84 = v5[v76];
v85 = v1 + v84;
v86 = v5[v85];
v87 = v15 + v86;
v88 = v6[v87];
v89 = v88 & 255;
v8 = v89;
if v89 < v61 goto label21;
if v89 != v61 goto label20;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v76, v5, v83);
v83 = v83 - 1;
goto label20;
label21:
if v62 >= v76 goto label24;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v62, v5, v76);
label22:
v62 = v62 + 1;
if v62 >= v76 goto label23;
v90 = v5[v62];
v91 = v1 + v90;
v92 = v5[v91];
v93 = v15 + v92;
v94 = v6[v93];
v95 = v94 & 255;
v8 = v95;
if v95 > v61 goto label23;
if v95 != v61 goto label22;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v62, v5, v69);
v69 = v69 + 1;
goto label22;
label23:
v76 = v76 - 1;
if v62 >= v76 goto label24;
v96 = v5[v76];
v97 = v1 + v96;
v98 = v5[v97];
v99 = v15 + v98;
v100 = v6[v99];
v101 = v100 & 255;
v8 = v101;
if v101 < v61 goto label21;
if v101 != v61 goto label23;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v76, v5, v83);
v83 = v83 - 1;
goto label23;
label24:
if v69 > v83 goto label38;
v102 = v62 - 1;
v103 = v69 - v2;
v104 = v103;
v105 = v62 - v69;
if v103 <= v105 goto label25;
v104 = v105;
label25:
v106 = v2;
v107 = v62 - v104;
label26:
if 0 >= v104 goto label27;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v106, v5, v107);
v104 = v104 - 1;
v106 = v106 + 1;
v107 = v107 + 1;
goto label26;
label27:
v108 = v83 - v102;
v109 = v108;
v110 = v3 - v83;
v111 = v110 - 1;
if v108 <= v111 goto label28;
v109 = v111;
label28:
v112 = v62;
v113 = v3 - v109;
label29:
if 0 >= v109 goto label30;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v5, v112, v5, v113);
v109 = v109 - 1;
v112 = v112 + 1;
v113 = v113 + 1;
goto label29;
label30:
v114 = v62 - v69;
v115 = v2 + v114;
v116 = v83 - v102;
v117 = v3 - v116;
v118 = v5[v115];
v119 = v1 + v118;
v120 = v5[v119];
v121 = v15 + v120;
v122 = v121 - 1;
v123 = v6[v122];
v124 = v123 & 255;
if v61 > v124 goto label31;
v125 = v115;
goto label32;
label31:
v125 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssSubstringPartition(int,int,int,int)>(v1, v115, v117, v4);
label32:
v126 = v115 - v2;
v127 = v3 - v117;
if v126 > v127 goto label35;
v128 = v3 - v117;
v129 = v117 - v125;
if v128 > v129 goto label33;
v130 = v9 + 1;
v131 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v132 = v4 + 1;
v133 = v117 - v125;
v134 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v133);
specialinvoke v131.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v125, v117, v132, v134);
v7[v9] = v131;
v9 = v130 + 1;
v135 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v135.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v117, v3, v4, v11);
v7[v130] = v135;
v3 = v115;
goto label01;
label33:
v136 = v115 - v2;
v137 = v117 - v125;
if v136 > v137 goto label34;
v138 = v9 + 1;
v139 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v139.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v117, v3, v4, v11);
v7[v9] = v139;
v9 = v138 + 1;
v140 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v141 = v4 + 1;
v142 = v117 - v125;
v143 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v142);
specialinvoke v140.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v125, v117, v141, v143);
v7[v138] = v140;
v3 = v115;
goto label01;
label34:
v144 = v9 + 1;
v145 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v145.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v117, v3, v4, v11);
v7[v9] = v145;
v9 = v144 + 1;
v146 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v146.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v115, v4, v11);
v7[v144] = v146;
v2 = v125;
v3 = v117;
v4 = v4 + 1;
v147 = v117 - v125;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v147);
goto label01;
label35:
v148 = v115 - v2;
v149 = v117 - v125;
if v148 > v149 goto label36;
v150 = v9 + 1;
v151 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v152 = v4 + 1;
v153 = v117 - v125;
v154 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v153);
specialinvoke v151.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v125, v117, v152, v154);
v7[v9] = v151;
v9 = v150 + 1;
v155 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v155.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v115, v4, v11);
v7[v150] = v155;
v2 = v117;
goto label01;
label36:
v156 = v3 - v117;
v157 = v117 - v125;
if v156 > v157 goto label37;
v158 = v9 + 1;
v159 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v159.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v115, v4, v11);
v7[v9] = v159;
v9 = v158 + 1;
v160 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v161 = v4 + 1;
v162 = v117 - v125;
v163 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v162);
specialinvoke v160.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v125, v117, v161, v163);
v7[v158] = v160;
v2 = v117;
goto label01;
label37:
v164 = v9 + 1;
v165 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v165.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v115, v4, v11);
v7[v9] = v165;
v9 = v164 + 1;
v166 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v166.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v117, v3, v4, v11);
v7[v164] = v166;
v2 = v125;
v3 = v117;
v4 = v4 + 1;
v167 = v117 - v125;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v167);
goto label01;
label38:
v11 = v11 + 1;
v168 = v5[v2];
v169 = v1 + v168;
v170 = v5[v169];
v171 = v15 + v170;
v172 = v171 - 1;
v173 = v6[v172];
v174 = v173 & 255;
if v174 >= v61 goto label39;
v2 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssSubstringPartition(int,int,int,int)>(v1, v2, v3, v4);
v175 = v3 - v2;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int ssLog(int)>(v175);
label39:
v4 = v4 + 1;
goto label01;
}
private static void ssBlockSwap(int[], int, int[], int, int)
{
int[] v0, v2;
int v1, v3, v4, v5, v6, v7;
v0 := @parameter0: int[];
v1 := @parameter1: int;
v2 := @parameter2: int[];
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = v4;
v6 = v1;
v7 = v3;
label1:
if 0 >= v5 goto label2;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v0, v6, v2, v7);
v5 = v5 - 1;
v6 = v6 + 1;
v7 = v7 + 1;
goto label1;
label2:
return;
}
private void ssMergeForward(int, int[], int, int, int, int, int)
{
int[] v2, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5, v50, v51, v52, v53, v54, v6, v7, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v9 = v5 - v4;
v10 = v3 + v9;
v11 = v10 - 1;
v12 = v5 - v4;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void ssBlockSwap(int[],int,int[],int,int)>(v2, v3, v8, v4, v12);
v13 = v8[v4];
v14 = v4;
v15 = v3;
v16 = v5;
label01:
v17 = v2[v15];
v18 = v1 + v17;
v19 = v8[v16];
v20 = v1 + v19;
v21 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssCompare(int,int,int)>(v18, v20, v7);
if v21 >= 0 goto label04;
label02:
v22 = v14;
v14 = v14 + 1;
v23 = v2[v15];
v8[v22] = v23;
if v11 > v15 goto label03;
v2[v15] = v13;
return;
label03:
v24 = v15;
v15 = v15 + 1;
v25 = v8[v14];
v2[v24] = v25;
v26 = v2[v15];
if v26 < 0 goto label02;
goto label01;
label04:
if v21 <= 0 goto label09;
label05:
v27 = v14;
v14 = v14 + 1;
v28 = v8[v16];
v8[v27] = v28;
v29 = v16;
v16 = v16 + 1;
v30 = v8[v14];
v8[v29] = v30;
if v6 > v16 goto label08;
label06:
if v15 >= v11 goto label07;
v31 = v14;
v14 = v14 + 1;
v32 = v2[v15];
v8[v31] = v32;
v33 = v15;
v15 = v15 + 1;
v34 = v8[v14];
v2[v33] = v34;
goto label06;
label07:
v35 = v2[v15];
v8[v14] = v35;
v2[v15] = v13;
return;
label08:
v36 = v8[v16];
if v36 < 0 goto label05;
goto label01;
label09:
v37 = v8[v16];
v38 = (int) -1;
v39 = v37 ^ v38;
v8[v16] = v39;
label10:
v40 = v14;
v14 = v14 + 1;
v41 = v2[v15];
v8[v40] = v41;
if v11 > v15 goto label11;
v2[v15] = v13;
return;
label11:
v42 = v15;
v15 = v15 + 1;
v43 = v8[v14];
v2[v42] = v43;
v44 = v2[v15];
if v44 < 0 goto label10;
label12:
v45 = v14;
v14 = v14 + 1;
v46 = v8[v16];
v8[v45] = v46;
v47 = v16;
v16 = v16 + 1;
v48 = v8[v14];
v8[v47] = v48;
if v6 > v16 goto label15;
label13:
if v15 >= v11 goto label14;
v49 = v14;
v14 = v14 + 1;
v50 = v2[v15];
v8[v49] = v50;
v51 = v15;
v15 = v15 + 1;
v52 = v8[v14];
v2[v51] = v52;
goto label13;
label14:
v53 = v2[v15];
v8[v14] = v53;
v2[v15] = v13;
return;
label15:
v54 = v8[v16];
if v54 < 0 goto label12;
goto label01;
}
private void ssMergeBackward(int, int[], int, int, int, int, int)
{
byte v12, v37, v52, v72, v84;
int[] v2, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v100, v101, v102, v103, v104, v105, v106, v107, v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v38, v39, v4, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5, v50, v51, v53, v54, v55, v56, v57, v58, v59, v6, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v7, v70, v71, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v85, v86, v87, v88, v89, v9, v90, v91, v92, v93, v94, v95, v96, v97, v98, v99;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int[];
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v9 = v6 - v5;
v10 = v3 + v9;
v11 = v6 - v5;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void ssBlockSwap(int[],int,int[],int,int)>(v2, v3, v8, v5, v11);
v12 = 0;
v13 = v10 - 1;
v14 = v2[v13];
if v14 >= 0 goto label01;
v12 = 1;
v15 = v10 - 1;
v16 = v2[v15];
v17 = (int) -1;
v18 = v16 ^ v17;
v19 = v1 + v18;
goto label02;
label01:
v20 = v10 - 1;
v21 = v2[v20];
v19 = v1 + v21;
label02:
v22 = v5 - 1;
v23 = v8[v22];
if v23 >= 0 goto label03;
v12 = v12 | 2;
v24 = v5 - 1;
v25 = v8[v24];
v26 = (int) -1;
v27 = v25 ^ v26;
v28 = v1 + v27;
goto label04;
label03:
v29 = v5 - 1;
v30 = v8[v29];
v28 = v1 + v30;
label04:
v31 = v6 - 1;
v32 = v8[v31];
v33 = v6 - 1;
v34 = v10 - 1;
v35 = v5 - 1;
label05:
v36 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssCompare(int,int,int)>(v19, v28, v7);
if v36 <= 0 goto label10;
v37 = v12 & 1;
if v37 == 0 goto label07;
label06:
v38 = v33;
v33 = v33 - 1;
v39 = v2[v34];
v8[v38] = v39;
v40 = v34;
v34 = v34 - 1;
v41 = v8[v33];
v2[v40] = v41;
v42 = v2[v34];
if v42 < 0 goto label06;
v12 = v12 ^ 1;
label07:
v43 = v33;
v33 = v33 - 1;
v44 = v2[v34];
v8[v43] = v44;
if v34 > v3 goto label08;
v2[v34] = v32;
return;
label08:
v45 = v34;
v34 = v34 - 1;
v46 = v8[v33];
v2[v45] = v46;
v47 = v2[v34];
if v47 >= 0 goto label09;
v12 = v12 | 1;
v48 = v2[v34];
v49 = (int) -1;
v50 = v48 ^ v49;
v19 = v1 + v50;
goto label05;
label09:
v51 = v2[v34];
v19 = v1 + v51;
goto label05;
label10:
if v36 >= 0 goto label17;
v52 = v12 & 2;
if v52 == 0 goto label12;
label11:
v53 = v33;
v33 = v33 - 1;
v54 = v8[v35];
v8[v53] = v54;
v55 = v35;
v35 = v35 - 1;
v56 = v8[v33];
v8[v55] = v56;
v57 = v8[v35];
if v57 < 0 goto label11;
v12 = v12 ^ 2;
label12:
v58 = v33;
v33 = v33 - 1;
v59 = v8[v35];
v8[v58] = v59;
v60 = v35;
v35 = v35 - 1;
v61 = v8[v33];
v8[v60] = v61;
if v35 >= v4 goto label15;
label13:
if v3 >= v34 goto label14;
v62 = v33;
v33 = v33 - 1;
v63 = v2[v34];
v8[v62] = v63;
v64 = v34;
v34 = v34 - 1;
v65 = v8[v33];
v2[v64] = v65;
goto label13;
label14:
v66 = v2[v34];
v8[v33] = v66;
v2[v34] = v32;
return;
label15:
v67 = v8[v35];
if v67 >= 0 goto label16;
v12 = v12 | 2;
v68 = v8[v35];
v69 = (int) -1;
v70 = v68 ^ v69;
v28 = v1 + v70;
goto label05;
label16:
v71 = v8[v35];
v28 = v1 + v71;
goto label05;
label17:
v72 = v12 & 1;
if v72 == 0 goto label19;
label18:
v73 = v33;
v33 = v33 - 1;
v74 = v2[v34];
v8[v73] = v74;
v75 = v34;
v34 = v34 - 1;
v76 = v8[v33];
v2[v75] = v76;
v77 = v2[v34];
if v77 < 0 goto label18;
v12 = v12 ^ 1;
label19:
v78 = v33 - 1;
v79 = v2[v34];
v80 = (int) -1;
v81 = v79 ^ v80;
v8[v33] = v81;
if v34 > v3 goto label20;
v2[v34] = v32;
return;
label20:
v82 = v34;
v34 = v34 - 1;
v83 = v8[v78];
v2[v82] = v83;
v84 = v12 & 2;
if v84 == 0 goto label22;
label21:
v85 = v78;
v78 = v78 - 1;
v86 = v8[v35];
v8[v85] = v86;
v87 = v35;
v35 = v35 - 1;
v88 = v8[v78];
v8[v87] = v88;
v89 = v8[v35];
if v89 < 0 goto label21;
v12 = v12 ^ 2;
label22:
v33 = v78 - 1;
v90 = v8[v35];
v8[v78] = v90;
v91 = v35;
v35 = v35 - 1;
v92 = v8[v33];
v8[v91] = v92;
if v35 >= v4 goto label25;
label23:
if v3 >= v34 goto label24;
v93 = v33;
v33 = v33 - 1;
v94 = v2[v34];
v8[v93] = v94;
v95 = v34;
v34 = v34 - 1;
v96 = v8[v33];
v2[v95] = v96;
goto label23;
label24:
v97 = v2[v34];
v8[v33] = v97;
v2[v34] = v32;
return;
label25:
v98 = v2[v34];
if v98 >= 0 goto label26;
v12 = v12 | 1;
v99 = v2[v34];
v100 = (int) -1;
v101 = v99 ^ v100;
v19 = v1 + v101;
goto label27;
label26:
v102 = v2[v34];
v19 = v1 + v102;
label27:
v103 = v8[v35];
if v103 >= 0 goto label28;
v12 = v12 | 2;
v104 = v8[v35];
v105 = (int) -1;
v106 = v104 ^ v105;
v28 = v1 + v106;
goto label05;
label28:
v107 = v8[v35];
v28 = v1 + v107;
goto label05;
}
private static int getIDX(int)
{
int v0, v1, v2;
v0 := @parameter0: int;
if 0 > v0 goto label1;
v1 = v0;
goto label2;
label1:
v2 = (int) -1;
v1 = v0 ^ v2;
label2:
return v1;
}
private void ssMergeCheckEqual(int, int, int)
{
int[] v4;
int v1, v10, v11, v12, v13, v14, v15, v2, v3, v5, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = v4[v3];
if 0 > v5 goto label1;
v6 = v3 - 1;
v7 = v4[v6];
v8 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int getIDX(int)>(v7);
v9 = v1 + v8;
v10 = v4[v3];
v11 = v1 + v10;
v12 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssCompare(int,int,int)>(v9, v11, v2);
if v12 != 0 goto label1;
v13 = v4[v3];
v14 = (int) -1;
v15 = v13 ^ v14;
v4[v3] = v15;
label1:
return;
}
private void ssMerge(int, int, int, int, int[], int, int, int)
{
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry[] v10;
int[] v5, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v11, v12, v13, v14, v15, v17, v18, v19, v2, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v50, v51, v52, v53, v54, v55, v56, v57, v58, v6, v60, v61, v62, v63, v64, v66, v67, v68, v69, v7, v70, v71, v72, v73, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry v16, v20, v59, v65, v74;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int[];
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: int;
v9 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v10 = newarray (io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry)[64];
v11 = 0;
v12 = 0;
label01:
v13 = v4 - v3;
if v13 > v7 goto label06;
if v2 >= v3 goto label02;
if v3 >= v4 goto label02;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeBackward(int,int[],int,int,int,int,int)>(v1, v5, v6, v2, v3, v4, v8);
label02:
v14 = v11 & 1;
if v14 == 0 goto label03;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v2);
label03:
v15 = v11 & 2;
if v15 == 0 goto label04;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v4);
label04:
if v12 != 0 goto label05;
return;
label05:
v12 = v12 - 1;
v16 = v10[v12];
v2 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v3 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v4 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v11 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label06:
v17 = v3 - v2;
if v17 > v7 goto label11;
if v2 >= v3 goto label07;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeForward(int,int[],int,int,int,int,int)>(v1, v5, v6, v2, v3, v4, v8);
label07:
v18 = v11 & 1;
if v18 == 0 goto label08;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v2);
label08:
v19 = v11 & 2;
if v19 == 0 goto label09;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v4);
label09:
if v12 != 0 goto label10;
return;
label10:
v12 = v12 - 1;
v20 = v10[v12];
v2 = v20.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v3 = v20.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v4 = v20.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v11 = v20.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label11:
v21 = 0;
v22 = v3 - v2;
v23 = v4 - v3;
v24 = staticinvoke <java.lang.Math: int min(int,int)>(v22, v23);
v25 = v24 >> 1;
label12:
if 0 >= v24 goto label14;
v26 = v3 + v21;
v27 = v26 + v25;
v28 = v9[v27];
v29 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int getIDX(int)>(v28);
v30 = v1 + v29;
v31 = v3 - v21;
v32 = v31 - v25;
v33 = v32 - 1;
v34 = v9[v33];
v35 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int getIDX(int)>(v34);
v36 = v1 + v35;
v37 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssCompare(int,int,int)>(v30, v36, v8);
if v37 >= 0 goto label13;
v38 = v25 + 1;
v21 = v21 + v38;
v39 = v24 & 1;
v40 = v39 ^ 1;
v25 = v25 - v40;
label13:
v24 = v25;
v25 = v25 >> 1;
goto label12;
label14:
if 0 >= v21 goto label23;
v41 = v3 - v21;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void ssBlockSwap(int[],int,int[],int,int)>(v9, v41, v9, v3, v21);
v42 = v3;
v43 = v3;
v44 = 0;
v45 = v3 + v21;
if v45 >= v4 goto label20;
v46 = v3 + v21;
v47 = v9[v46];
if v47 >= 0 goto label17;
label15:
v48 = v43 - 1;
v49 = v9[v48];
if v49 >= 0 goto label16;
v43 = v43 - 1;
goto label15;
label16:
v50 = v3 + v21;
v51 = v3 + v21;
v52 = v9[v51];
v53 = (int) -1;
v54 = v52 ^ v53;
v9[v50] = v54;
label17:
v42 = v3;
label18:
v55 = v9[v42];
if v55 >= 0 goto label19;
v42 = v42 + 1;
goto label18;
label19:
v44 = 1;
label20:
v56 = v43 - v2;
v57 = v4 - v42;
if v56 > v57 goto label21;
v58 = v12;
v12 = v12 + 1;
v59 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v60 = v3 + v21;
v61 = v11 & 2;
v62 = v44 & 1;
v63 = v61 | v62;
specialinvoke v59.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v42, v60, v4, v63);
v10[v58] = v59;
v3 = v3 - v21;
v4 = v43;
v11 = v11 & 1;
goto label01;
label21:
if v43 != v3 goto label22;
if v3 != v42 goto label22;
v44 = v44 << 1;
label22:
v64 = v12;
v12 = v12 + 1;
v65 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v66 = v3 - v21;
v67 = v11 & 1;
v68 = v44 & 2;
v69 = v67 | v68;
specialinvoke v65.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v66, v43, v69);
v10[v64] = v65;
v2 = v42;
v3 = v3 + v21;
v70 = v11 & 2;
v71 = v44 & 1;
v11 = v70 | v71;
goto label01;
label23:
v72 = v11 & 1;
if v72 == 0 goto label24;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v2);
label24:
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v3);
v73 = v11 & 2;
if v73 == 0 goto label25;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMergeCheckEqual(int,int,int)>(v1, v8, v4);
label25:
if v12 != 0 goto label26;
return;
label26:
v12 = v12 - 1;
v74 = v10[v12];
v2 = v74.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v3 = v74.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v4 = v74.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v11 = v74.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
}
private void subStringSort(int, int, int, int[], int, int, int, boolean, int)
{
int[] v10, v15, v4;
boolean v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v11, v12, v13, v14, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v5, v6, v7, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int[];
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 := @parameter8: int;
v10 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
if v8 == 0 goto label01;
v2 = v2 + 1;
label01:
v11 = v2;
v12 = 0;
label02:
v13 = v11 + 1024;
if v13 >= v3 goto label06;
v14 = v11 + 1024;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMultiKeyIntroSort(int,int,int,int)>(v1, v11, v14, v7);
v15 = v10;
v16 = v11 + 1024;
v17 = v11 + 1024;
v18 = v3 - v17;
if v18 > v6 goto label03;
v18 = v6;
v15 = v4;
v16 = v5;
label03:
v19 = v11;
v20 = 1024;
v21 = v12;
label04:
v22 = v21 & 1;
if v22 == 0 goto label05;
v23 = v19 - v20;
v24 = v19 + v20;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMerge(int,int,int,int,int[],int,int,int)>(v1, v23, v19, v24, v15, v16, v18, v7);
v19 = v19 - v20;
v20 = v20 << 1;
v21 = v21 >>> 1;
goto label04;
label05:
v11 = v11 + 1024;
v12 = v12 + 1;
goto label02;
label06:
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMultiKeyIntroSort(int,int,int,int)>(v1, v11, v3, v7);
v25 = 1024;
label07:
if v12 == 0 goto label09;
v26 = v12 & 1;
if v26 == 0 goto label08;
v27 = v11 - v25;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void ssMerge(int,int,int,int,int[],int,int,int)>(v1, v27, v11, v3, v4, v5, v6, v7);
v11 = v11 - v25;
label08:
v25 = v25 << 1;
v12 = v12 >> 1;
goto label07;
label09:
if v8 == 0 goto label14;
v28 = v2;
v29 = v2 - 1;
v30 = v10[v29];
v31 = 1;
label10:
if v28 >= v3 goto label12;
v32 = v10[v28];
if v32 < 0 goto label11;
v33 = v1 + v30;
v34 = v10[v28];
v35 = v1 + v34;
v36 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int ssCompareLast(int,int,int,int,int)>(v1, v33, v35, v7, v9);
v31 = v36;
if 0 >= v36 goto label12;
label11:
v37 = v28 - 1;
v38 = v10[v28];
v10[v37] = v38;
v28 = v28 + 1;
goto label10;
label12:
if v31 != 0 goto label13;
v39 = v10[v28];
v40 = (int) -1;
v41 = v39 ^ v40;
v10[v28] = v41;
label13:
v42 = v28 - 1;
v10[v42] = v30;
label14:
return;
}
private int trGetC(int, int, int, int)
{
int[] v6, v9;
int v1, v10, v11, v12, v13, v14, v2, v3, v4, v5, v7, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 = v2 + v4;
if v5 >= v3 goto label1;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = v2 + v4;
v8 = v6[v7];
goto label2;
label1:
v9 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v10 = v2 - v1;
v11 = v10 + v4;
v12 = v3 - v1;
v13 = v11 % v12;
v14 = v1 + v13;
v8 = v9[v14];
label2:
return v8;
}
private void trFixdown(int, int, int, int, int, int)
{
int[] v7;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v3, v4, v5, v6, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v8 = v4 + v5;
v9 = v7[v8];
v10 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v9);
label1:
v11 = 2 * v5;
v12 = v11 + 1;
if v12 >= v6 goto label3;
v13 = v12 + 1;
v14 = v12;
v15 = v4 + v12;
v16 = v7[v15];
v17 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v16);
v18 = v4 + v13;
v19 = v7[v18];
v20 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v19);
if v17 >= v20 goto label2;
v14 = v13;
v17 = v20;
label2:
if v17 <= v10 goto label3;
v21 = v4 + v5;
v22 = v4 + v14;
v23 = v7[v22];
v7[v21] = v23;
v5 = v14;
goto label1;
label3:
v24 = v4 + v5;
v7[v24] = v9;
return;
}
private void trHeapSort(int, int, int, int, int)
{
int[] v6;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v3, v4, v5, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = v5;
v8 = v5 % 2;
if v8 != 0 goto label1;
v7 = v5 - 1;
v9 = v7 / 2;
v10 = v4 + v9;
v11 = v6[v10];
v12 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v11);
v13 = v4 + v7;
v14 = v6[v13];
v15 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v14);
if v12 >= v15 goto label1;
v16 = v4 + v7;
v17 = v7 / 2;
v18 = v4 + v17;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v16, v6, v18);
label1:
v19 = v7 / 2;
v20 = v19 - 1;
label2:
if 0 > v20 goto label3;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trFixdown(int,int,int,int,int,int)>(v1, v2, v3, v4, v20, v7);
v20 = v20 - 1;
goto label2;
label3:
v21 = v5 % 2;
if v21 != 0 goto label4;
v22 = v4 + v7;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v4, v6, v22);
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trFixdown(int,int,int,int,int,int)>(v1, v2, v3, v4, 0, v7);
label4:
v23 = v7 - 1;
label5:
if 0 >= v23 goto label6;
v24 = v6[v4];
v25 = v4 + v23;
v26 = v6[v25];
v6[v4] = v26;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trFixdown(int,int,int,int,int,int)>(v1, v2, v3, v4, 0, v23);
v27 = v4 + v23;
v6[v27] = v24;
v23 = v23 - 1;
goto label5;
label6:
return;
}
private void trInsertionSort(int, int, int, int, int)
{
int[] v6;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v3, v4, v5, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = v4 + 1;
label1:
if v7 >= v5 goto label7;
v8 = v6[v7];
v9 = v7 - 1;
label2:
v10 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v8);
v11 = v6[v9];
v12 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v11);
v13 = v10 - v12;
if 0 <= v13 goto label5;
label3:
v14 = v9 + 1;
v15 = v6[v9];
v6[v14] = v15;
v9 = v9 - 1;
if v4 > v9 goto label4;
v16 = v6[v9];
if v16 < 0 goto label3;
label4:
if v9 >= v4 goto label2;
label5:
if v13 != 0 goto label6;
v17 = v6[v9];
v18 = (int) -1;
v19 = v17 ^ v18;
v6[v9] = v19;
label6:
v20 = v9 + 1;
v6[v20] = v8;
v7 = v7 + 1;
goto label1;
label7:
return;
}
private static int trLog(int)
{
int[] v13, v17, v3, v8;
int v0, v1, v10, v11, v12, v14, v15, v16, v18, v2, v4, v5, v6, v7, v9;
v0 := @parameter0: int;
v1 = v0 & -65536;
if v1 == 0 goto label2;
v2 = v0 & -16777216;
if v2 == 0 goto label1;
v3 = <io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE>;
v4 = v0 >> 24;
v5 = v4 & 255;
v6 = v3[v5];
v7 = 24 + v6;
goto label4;
label1:
v8 = <io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE>;
v9 = v0 >> 16;
v10 = v9 & 271;
v7 = v8[v10];
goto label4;
label2:
v11 = (int) 65280;
v12 = v0 & v11;
if v12 == 0 goto label3;
v13 = <io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE>;
v14 = v0 >> 8;
v15 = v14 & 255;
v16 = v13[v15];
v7 = 8 + v16;
goto label4;
label3:
v17 = <io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE>;
v18 = v0 & 255;
v7 = v17[v18];
label4:
return v7;
}
private int trMedian3(int, int, int, int, int, int)
{
int[] v7;
int v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v8 = v7[v4];
v9 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v8);
v10 = v7[v5];
v11 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v10);
v12 = v7[v6];
v13 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v12);
if v9 <= v11 goto label1;
v14 = v4;
v4 = v5;
v5 = v14;
v15 = v9;
v9 = v11;
v11 = v15;
label1:
if v11 <= v13 goto label3;
if v9 <= v13 goto label2;
return v4;
label2:
return v6;
label3:
return v5;
}
private int trMedian5(int, int, int, int, int, int, int, int)
{
int[] v9;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v3, v4, v5, v6, v7, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 := @parameter7: int;
v9 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v10 = v9[v4];
v11 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v10);
v12 = v9[v5];
v13 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v12);
v14 = v9[v6];
v15 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v14);
v16 = v9[v7];
v17 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v16);
v18 = v9[v8];
v19 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v18);
if v13 <= v15 goto label1;
v20 = v5;
v5 = v6;
v6 = v20;
v21 = v13;
v13 = v15;
v15 = v21;
label1:
if v17 <= v19 goto label2;
v22 = v7;
v7 = v8;
v8 = v22;
v23 = v17;
v17 = v19;
v19 = v23;
label2:
if v13 <= v17 goto label3;
v7 = v5;
v17 = v13;
v24 = v6;
v6 = v8;
v8 = v24;
v25 = v15;
v15 = v19;
v19 = v25;
label3:
if v11 <= v15 goto label4;
v26 = v4;
v4 = v6;
v6 = v26;
v27 = v11;
v11 = v15;
v15 = v27;
label4:
if v11 <= v17 goto label5;
v7 = v4;
v17 = v11;
v6 = v8;
v15 = v19;
label5:
if v15 <= v17 goto label6;
return v7;
label6:
return v6;
}
private int trPivot(int, int, int, int, int)
{
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v4, v5, v6, v7, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v5 - v4;
v7 = v6 / 2;
v8 = v4 + v7;
if v6 > 512 goto label2;
if v6 > 32 goto label1;
v9 = v5 - 1;
v10 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trMedian3(int,int,int,int,int,int)>(v1, v2, v3, v4, v8, v9);
return v10;
label1:
v11 = v6 >> 2;
v12 = v4 + v11;
v13 = v5 - 1;
v14 = v13 - v11;
v15 = v5 - 1;
v16 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trMedian5(int,int,int,int,int,int,int,int)>(v1, v2, v3, v4, v12, v8, v14, v15);
return v16;
label2:
v17 = v6 >> 3;
v18 = v4 + v17;
v19 = v17 << 1;
v20 = v4 + v19;
v21 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trMedian3(int,int,int,int,int,int)>(v1, v2, v3, v4, v18, v20);
v22 = v8 - v17;
v23 = v8 + v17;
v24 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trMedian3(int,int,int,int,int,int)>(v1, v2, v3, v22, v8, v23);
v25 = v5 - 1;
v26 = v17 << 1;
v27 = v25 - v26;
v28 = v5 - 1;
v29 = v28 - v17;
v30 = v5 - 1;
v31 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trMedian3(int,int,int,int,int,int)>(v1, v2, v3, v27, v29, v30);
v32 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trMedian3(int,int,int,int,int,int)>(v1, v2, v3, v21, v24, v31);
return v32;
}
private void lsUpdateGroup(int, int, int)
{
int[] v4;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v3, v5, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = v2;
label1:
if v5 >= v3 goto label7;
v6 = v4[v5];
if 0 > v6 goto label4;
v7 = v5;
label2:
v8 = v4[v5];
v9 = v1 + v8;
v4[v9] = v5;
v5 = v5 + 1;
if v5 >= v3 goto label3;
v10 = v4[v5];
if 0 <= v10 goto label2;
label3:
v11 = v7 - v5;
v4[v7] = v11;
if v3 <= v5 goto label7;
label4:
v12 = v5;
label5:
v13 = v4[v5];
v14 = (int) -1;
v15 = v13 ^ v14;
v4[v5] = v15;
v5 = v5 + 1;
v16 = v4[v5];
if v16 < 0 goto label5;
v17 = v5;
label6:
v18 = v4[v12];
v19 = v1 + v18;
v4[v19] = v17;
v12 = v12 + 1;
if v12 <= v5 goto label6;
v5 = v5 + 1;
goto label1;
label7:
return;
}
private void lsIntroSort(int, int, int, int, int)
{
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry[] v7;
int[] v6;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v11, v12, v13, v14, v15, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v4, v40, v41, v42, v43, v44, v45, v46, v47, v48, v49, v5, v50, v51, v52, v53, v54, v55, v56, v57, v58, v59, v60, v61, v62, v63, v64, v65, v66, v67, v68, v69, v70, v71, v72, v73, v74, v75, v77, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry v16, v27, v76, v78, v79;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v7 = newarray (io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry)[64];
v8 = 0;
v9 = 0;
v10 = v5 - v4;
v11 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v10);
label01:
v12 = v5 - v4;
if v12 > 8 goto label05;
v13 = v5 - v4;
if 1 >= v13 goto label02;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trInsertionSort(int,int,int,int,int)>(v1, v2, v3, v4, v5);
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void lsUpdateGroup(int,int,int)>(v1, v4, v5);
goto label03;
label02:
v14 = v5 - v4;
if v14 != 1 goto label03;
v15 = (int) -1;
v6[v4] = v15;
label03:
if v9 != 0 goto label04;
return;
label04:
v9 = v9 - 1;
v16 = v7[v9];
v4 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v5 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v11 = v16.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
goto label01;
label05:
v17 = v11;
v11 = v11 - 1;
if v17 != 0 goto label11;
v18 = v5 - v4;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trHeapSort(int,int,int,int,int)>(v1, v2, v3, v4, v18);
v19 = v5 - 1;
label06:
if v4 >= v19 goto label09;
v20 = v6[v19];
v8 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v20);
v21 = v19 - 1;
label07:
if v4 > v21 goto label08;
v22 = v6[v21];
v23 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v22);
if v23 != v8 goto label08;
v24 = v6[v21];
v25 = (int) -1;
v26 = v24 ^ v25;
v6[v21] = v26;
v21 = v21 - 1;
goto label07;
label08:
v19 = v21;
goto label06;
label09:
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void lsUpdateGroup(int,int,int)>(v1, v4, v5);
if v9 != 0 goto label10;
return;
label10:
v9 = v9 - 1;
v27 = v7[v9];
v4 = v27.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v5 = v27.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v11 = v27.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
goto label01;
label11:
v28 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trPivot(int,int,int,int,int)>(v1, v2, v3, v4, v5);
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v4, v6, v28);
v29 = v6[v4];
v30 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v29);
v31 = v4 + 1;
label12:
if v31 >= v5 goto label13;
v32 = v6[v31];
v33 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v32);
v8 = v33;
if v33 != v30 goto label13;
v31 = v31 + 1;
goto label12;
label13:
v34 = v31;
if v31 >= v5 goto label15;
if v8 >= v30 goto label15;
label14:
v31 = v31 + 1;
if v31 >= v5 goto label15;
v35 = v6[v31];
v36 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v35);
v8 = v36;
if v36 > v30 goto label15;
if v36 != v30 goto label14;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v31, v6, v34);
v34 = v34 + 1;
goto label14;
label15:
v37 = v5 - 1;
label16:
if v31 >= v37 goto label17;
v38 = v6[v37];
v39 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v38);
v8 = v39;
if v39 != v30 goto label17;
v37 = v37 - 1;
goto label16;
label17:
v40 = v37;
if v31 >= v37 goto label22;
if v8 <= v30 goto label19;
label18:
v37 = v37 - 1;
if v31 >= v37 goto label22;
v41 = v6[v37];
v42 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v41);
v8 = v42;
if v42 < v30 goto label19;
if v42 != v30 goto label18;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v37, v6, v40);
v40 = v40 - 1;
goto label18;
label19:
if v31 >= v37 goto label22;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v31, v6, v37);
label20:
v31 = v31 + 1;
if v31 >= v37 goto label21;
v43 = v6[v31];
v44 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v43);
v8 = v44;
if v44 > v30 goto label21;
if v44 != v30 goto label20;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v31, v6, v34);
v34 = v34 + 1;
goto label20;
label21:
v37 = v37 - 1;
if v31 >= v37 goto label22;
v45 = v6[v37];
v46 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v45);
v8 = v46;
if v46 < v30 goto label19;
if v46 != v30 goto label21;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v37, v6, v40);
v40 = v40 - 1;
goto label21;
label22:
if v34 > v40 goto label37;
v47 = v31 - 1;
v48 = v34 - v4;
v49 = v48;
v50 = v31 - v34;
if v48 <= v50 goto label23;
v49 = v50;
label23:
v51 = v4;
v52 = v31 - v49;
label24:
if 0 >= v49 goto label25;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v51, v6, v52);
v49 = v49 - 1;
v51 = v51 + 1;
v52 = v52 + 1;
goto label24;
label25:
v53 = v40 - v47;
v54 = v53;
v55 = v5 - v40;
v56 = v55 - 1;
if v53 <= v56 goto label26;
v54 = v56;
label26:
v57 = v31;
v58 = v5 - v54;
label27:
if 0 >= v54 goto label28;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v6, v57, v6, v58);
v54 = v54 - 1;
v57 = v57 + 1;
v58 = v58 + 1;
goto label27;
label28:
v59 = v31 - v34;
v60 = v4 + v59;
v61 = v40 - v47;
v62 = v5 - v61;
v63 = v4;
v64 = v60 - 1;
label29:
if v63 >= v60 goto label30;
v65 = v6[v63];
v66 = v1 + v65;
v6[v66] = v64;
v63 = v63 + 1;
goto label29;
label30:
if v62 >= v5 goto label32;
v67 = v60;
v68 = v62 - 1;
label31:
if v67 >= v62 goto label32;
v69 = v6[v67];
v70 = v1 + v69;
v6[v70] = v68;
v67 = v67 + 1;
goto label31;
label32:
v71 = v62 - v60;
if v71 != 1 goto label33;
v72 = (int) -1;
v6[v60] = v72;
label33:
v73 = v60 - v4;
v74 = v5 - v62;
if v73 > v74 goto label35;
if v4 >= v60 goto label34;
v75 = v9;
v9 = v9 + 1;
v76 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v76.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v62, v5, v11, 0);
v7[v75] = v76;
v5 = v60;
goto label01;
label34:
v4 = v62;
goto label01;
label35:
if v62 >= v5 goto label36;
v77 = v9;
v9 = v9 + 1;
v78 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v78.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v4, v60, v11, 0);
v7[v77] = v78;
v4 = v62;
goto label01;
label36:
v5 = v60;
goto label01;
label37:
if v9 != 0 goto label38;
return;
label38:
v9 = v9 - 1;
v79 = v7[v9];
v4 = v79.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v5 = v79.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v11 = v79.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
goto label01;
}
private void lsSort(int, int, int)
{
int[] v4;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v3, v5, v6, v7, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = v1 + v3;
label01:
v6 = neg v2;
v7 = v4[0];
if v6 >= v7 goto label13;
v8 = 0;
v9 = 0;
label02:
v10 = v4[v8];
if v10 >= 0 goto label03;
v8 = v8 - v10;
v9 = v9 + v10;
goto label05;
label03:
if v9 == 0 goto label04;
v11 = v8 + v9;
v4[v11] = v9;
v9 = 0;
label04:
v12 = v1 + v10;
v13 = v4[v12];
v14 = v13 + 1;
v15 = v1 + v2;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void lsIntroSort(int,int,int,int,int)>(v1, v5, v15, v8, v14);
v8 = v14;
label05:
if v8 < v2 goto label02;
if v9 == 0 goto label06;
v16 = v8 + v9;
v4[v16] = v9;
label06:
v17 = v5 - v1;
if v2 >= v17 goto label12;
v18 = 0;
label07:
v19 = v4[v18];
if v19 >= 0 goto label08;
v18 = v18 - v19;
goto label11;
label08:
v20 = v1 + v19;
v21 = v4[v20];
v22 = v21 + 1;
v23 = v18;
label09:
if v23 >= v22 goto label10;
v24 = v4[v23];
v25 = v1 + v24;
v4[v25] = v23;
v23 = v23 + 1;
goto label09;
label10:
v18 = v22;
label11:
if v18 < v2 goto label07;
goto label13;
label12:
v26 = v5 - v1;
v5 = v5 + v26;
goto label01;
label13:
return;
}
private io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult trPartition(int, int, int, int, int, int)
{
int[] v7;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v4, v5, v6, v8, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult v39;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v8 = 0;
v9 = v4;
label01:
if v9 >= v5 goto label02;
v10 = v7[v9];
v11 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v10);
v8 = v11;
if v11 != v6 goto label02;
v9 = v9 + 1;
goto label01;
label02:
v12 = v9;
if v9 >= v5 goto label04;
if v8 >= v6 goto label04;
label03:
v9 = v9 + 1;
if v9 >= v5 goto label04;
v13 = v7[v9];
v14 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v13);
v8 = v14;
if v14 > v6 goto label04;
if v14 != v6 goto label03;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v9, v7, v12);
v12 = v12 + 1;
goto label03;
label04:
v15 = v5 - 1;
label05:
if v9 >= v15 goto label06;
v16 = v7[v15];
v17 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v16);
v8 = v17;
if v17 != v6 goto label06;
v15 = v15 - 1;
goto label05;
label06:
v18 = v15;
if v9 >= v15 goto label11;
if v8 <= v6 goto label08;
label07:
v15 = v15 - 1;
if v9 >= v15 goto label11;
v19 = v7[v15];
v20 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v19);
if v20 < v6 goto label08;
if v20 != v6 goto label07;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v15, v7, v18);
v18 = v18 - 1;
goto label07;
label08:
if v9 >= v15 goto label11;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v9, v7, v15);
label09:
v9 = v9 + 1;
if v9 >= v15 goto label10;
v21 = v7[v9];
v22 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v21);
if v22 > v6 goto label10;
if v22 != v6 goto label09;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v9, v7, v12);
v12 = v12 + 1;
goto label09;
label10:
v15 = v15 - 1;
if v9 >= v15 goto label11;
v23 = v7[v15];
v24 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v23);
if v24 < v6 goto label08;
if v24 != v6 goto label10;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v15, v7, v18);
v18 = v18 - 1;
goto label10;
label11:
if v12 > v18 goto label18;
v25 = v9 - 1;
v26 = v12 - v4;
v27 = v26;
v28 = v9 - v12;
if v26 <= v28 goto label12;
v27 = v28;
label12:
v29 = v4;
v30 = v9 - v27;
label13:
if 0 >= v27 goto label14;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v29, v7, v30);
v27 = v27 - 1;
v29 = v29 + 1;
v30 = v30 + 1;
goto label13;
label14:
v31 = v18 - v25;
v32 = v31;
v33 = v5 - v18;
v34 = v33 - 1;
if v31 <= v34 goto label15;
v32 = v34;
label15:
v35 = v9;
v36 = v5 - v32;
label16:
if 0 >= v32 goto label17;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v7, v35, v7, v36);
v32 = v32 - 1;
v35 = v35 + 1;
v36 = v36 + 1;
goto label16;
label17:
v37 = v9 - v12;
v4 = v4 + v37;
v38 = v18 - v25;
v5 = v5 - v38;
label18:
v39 = new io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult;
specialinvoke v39.<io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult: void <init>(int,int)>(v4, v5);
return v39;
}
private void trCopy(int, int, int, int, int, int, int)
{
int[] v8;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v3, v4, v5, v6, v7, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: int;
v7 := @parameter6: int;
v8 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v9 = v5 - 1;
v10 = v3;
v11 = v4 - 1;
label1:
if v10 > v11 goto label4;
v12 = v8[v10];
v13 = v12 - v7;
v14 = v13;
if v13 >= 0 goto label2;
v15 = v2 - v1;
v14 = v13 + v15;
label2:
v16 = v1 + v14;
v17 = v8[v16];
if v17 != v9 goto label3;
v11 = v11 + 1;
v8[v11] = v14;
v18 = v1 + v14;
v8[v18] = v11;
label3:
v10 = v10 + 1;
goto label1;
label4:
v19 = v6 - 1;
v20 = v11 + 1;
v21 = v5;
label5:
if v20 >= v21 goto label8;
v22 = v8[v19];
v23 = v22 - v7;
v24 = v23;
if v23 >= 0 goto label6;
v25 = v2 - v1;
v24 = v23 + v25;
label6:
v26 = v1 + v24;
v27 = v8[v26];
if v27 != v9 goto label7;
v21 = v21 - 1;
v8[v21] = v24;
v28 = v1 + v24;
v8[v28] = v21;
label7:
v19 = v19 - 1;
goto label5;
label8:
return;
}
private void trIntroSort(int, int, int, int, int, io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget, int)
{
int[] v8;
io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget v6;
int v1, v10, v101, v102, v104, v105, v107, v108, v109, v11, v111, v112, v113, v114, v115, v116, v117, v118, v119, v12, v120, v121, v122, v123, v124, v125, v126, v127, v128, v129, v13, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v14, v140, v141, v142, v143, v144, v145, v146, v147, v148, v149, v15, v150, v151, v152, v153, v154, v155, v156, v157, v158, v159, v160, v161, v162, v163, v164, v165, v166, v167, v168, v169, v17, v170, v171, v172, v173, v174, v175, v176, v178, v18, v180, v181, v183, v184, v186, v187, v188, v189, v192, v193, v194, v196, v197, v2, v20, v200, v202, v203, v204, v205, v207, v209, v21, v210, v212, v213, v214, v216, v217, v218, v219, v22, v222, v223, v224, v226, v227, v23, v230, v232, v234, v236, v237, v239, v24, v241, v25, v26, v27, v28, v29, v3, v30, v33, v34, v35, v36, v37, v38, v4, v40, v41, v42, v43, v44, v46, v47, v49, v5, v50, v51, v52, v53, v55, v56, v57, v59, v60, v62, v64, v65, v67, v68, v69, v7, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v86, v87, v88, v89, v90, v91, v92, v93, v94, v95, v97, v98, v99;
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry[] v9;
io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult v19;
boolean v106, v110, v16, v233;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry v100, v103, v177, v179, v182, v185, v190, v191, v195, v198, v199, v201, v206, v208, v211, v215, v220, v221, v225, v228, v229, v231, v235, v238, v240, v31, v32, v39, v45, v48, v54, v58, v61, v63, v66, v96;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: int;
v6 := @parameter5: io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget;
v7 := @parameter6: int;
v8 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v9 = newarray (io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry)[64];
v10 = 0;
v11 = 0;
v12 = v5 - v4;
v13 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v12);
label01:
if v13 >= 0 goto label33;
v14 = (int) -1;
if v13 != v14 goto label18;
v15 = v5 - v4;
v16 = virtualinvoke v6.<io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget: boolean update(int,int)>(v7, v15);
if v16 == 0 goto label82;
v17 = v2 - 1;
v18 = v5 - 1;
v19 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult trPartition(int,int,int,int,int,int)>(v1, v17, v3, v4, v5, v18);
v20 = v19.<io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult: int first>;
v21 = v19.<io.netty.handler.codec.compression.Bzip2DivSufSort$PartitionResult: int last>;
if v4 < v20 goto label02;
if v21 >= v5 goto label14;
label02:
if v20 >= v5 goto label04;
v22 = v4;
v23 = v20 - 1;
label03:
if v22 >= v20 goto label04;
v24 = v8[v22];
v25 = v1 + v24;
v8[v25] = v23;
v22 = v22 + 1;
goto label03;
label04:
if v21 >= v5 goto label06;
v26 = v20;
v27 = v21 - 1;
label05:
if v26 >= v21 goto label06;
v28 = v8[v26];
v29 = v1 + v28;
v8[v29] = v27;
v26 = v26 + 1;
goto label05;
label06:
v30 = v11 + 1;
v31 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v31.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(0, v20, v21, 0);
v9[v11] = v31;
v11 = v30 + 1;
v32 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v33 = v2 - 1;
v34 = (int) -2;
specialinvoke v32.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v33, v4, v5, v34);
v9[v30] = v32;
v35 = v20 - v4;
v36 = v5 - v21;
if v35 > v36 goto label10;
v37 = v20 - v4;
if 1 >= v37 goto label07;
v38 = v11;
v11 = v11 + 1;
v39 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v40 = v5 - v21;
v41 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v40);
specialinvoke v39.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v21, v5, v41);
v9[v38] = v39;
v5 = v20;
v42 = v20 - v4;
v13 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v42);
goto label01;
label07:
v43 = v5 - v21;
if 1 >= v43 goto label08;
v4 = v21;
v44 = v5 - v21;
v13 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v44);
goto label01;
label08:
if v11 != 0 goto label09;
return;
label09:
v11 = v11 - 1;
v45 = v9[v11];
v2 = v45.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v4 = v45.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v5 = v45.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v13 = v45.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label10:
v46 = v5 - v21;
if 1 >= v46 goto label11;
v47 = v11;
v11 = v11 + 1;
v48 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v49 = v20 - v4;
v50 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v49);
specialinvoke v48.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v20, v50);
v9[v47] = v48;
v4 = v21;
v51 = v5 - v21;
v13 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v51);
goto label01;
label11:
v52 = v20 - v4;
if 1 >= v52 goto label12;
v5 = v20;
v53 = v20 - v4;
v13 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v53);
goto label01;
label12:
if v11 != 0 goto label13;
return;
label13:
v11 = v11 - 1;
v54 = v9[v11];
v2 = v54.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v4 = v54.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v5 = v54.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v13 = v54.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label14:
v55 = v4;
label15:
if v55 >= v5 goto label16;
v56 = v8[v55];
v57 = v1 + v56;
v8[v57] = v55;
v55 = v55 + 1;
goto label15;
label16:
if v11 != 0 goto label17;
return;
label17:
v11 = v11 - 1;
v58 = v9[v11];
v2 = v58.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v4 = v58.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v5 = v58.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v13 = v58.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label18:
v59 = (int) -2;
if v13 != v59 goto label20;
v60 = v11 - 1;
v61 = v9[v60];
v62 = v61.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v63 = v9[v60];
v64 = v63.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v65 = v2 - v1;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trCopy(int,int,int,int,int,int,int)>(v1, v3, v4, v62, v64, v5, v65);
if v60 != 0 goto label19;
return;
label19:
v11 = v60 - 1;
v66 = v9[v11];
v2 = v66.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v4 = v66.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v5 = v66.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v13 = v66.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label20:
v67 = v8[v4];
if 0 > v67 goto label23;
v68 = v4;
label21:
v69 = v8[v68];
v70 = v1 + v69;
v8[v70] = v68;
v68 = v68 + 1;
if v68 >= v5 goto label22;
v71 = v8[v68];
if 0 <= v71 goto label21;
label22:
v4 = v68;
label23:
if v4 >= v5 goto label31;
v72 = v4;
label24:
v73 = v8[v72];
v74 = (int) -1;
v75 = v73 ^ v74;
v8[v72] = v75;
v72 = v72 + 1;
v76 = v8[v72];
if v76 < 0 goto label24;
v77 = v8[v72];
v78 = v1 + v77;
v79 = v8[v78];
v80 = v8[v72];
v81 = v2 + v80;
v82 = v8[v81];
if v79 == v82 goto label25;
v83 = v72 - v4;
v84 = v83 + 1;
v85 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v84);
goto label26;
label25:
v86 = (int) -1;
v85 = v86;
label26:
v87 = v85;
v88 = v72 + 1;
if v88 >= v5 goto label28;
v89 = v4;
v90 = v88 - 1;
label27:
if v89 >= v88 goto label28;
v91 = v8[v89];
v92 = v1 + v91;
v8[v92] = v90;
v89 = v89 + 1;
goto label27;
label28:
v93 = v88 - v4;
v94 = v5 - v88;
if v93 > v94 goto label29;
v95 = v11;
v11 = v11 + 1;
v96 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v97 = (int) -3;
specialinvoke v96.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v88, v5, v97);
v9[v95] = v96;
v2 = v2 + 1;
v5 = v88;
v13 = v87;
goto label01;
label29:
v98 = v5 - v88;
if 1 >= v98 goto label30;
v99 = v11;
v11 = v11 + 1;
v100 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v101 = v2 + 1;
specialinvoke v100.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v101, v4, v88, v87);
v9[v99] = v100;
v4 = v88;
v102 = (int) -3;
v13 = v102;
goto label01;
label30:
v2 = v2 + 1;
v5 = v88;
v13 = v87;
goto label01;
label31:
if v11 != 0 goto label32;
return;
label32:
v11 = v11 - 1;
v103 = v9[v11];
v2 = v103.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v4 = v103.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v5 = v103.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v13 = v103.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label33:
v104 = v5 - v4;
if v104 > 8 goto label34;
v105 = v5 - v4;
v106 = virtualinvoke v6.<io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget: boolean update(int,int)>(v7, v105);
if v106 == 0 goto label82;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trInsertionSort(int,int,int,int,int)>(v1, v2, v3, v4, v5);
v107 = (int) -3;
v13 = v107;
goto label01;
label34:
v108 = v13;
v13 = v13 - 1;
if v108 != 0 goto label39;
v109 = v5 - v4;
v110 = virtualinvoke v6.<io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget: boolean update(int,int)>(v7, v109);
if v110 == 0 goto label82;
v111 = v5 - v4;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trHeapSort(int,int,int,int,int)>(v1, v2, v3, v4, v111);
v112 = v5 - 1;
label35:
if v4 >= v112 goto label38;
v113 = v8[v112];
v10 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v113);
v114 = v112 - 1;
label36:
if v4 > v114 goto label37;
v115 = v8[v114];
v116 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v115);
if v116 != v10 goto label37;
v117 = v8[v114];
v118 = (int) -1;
v119 = v117 ^ v118;
v8[v114] = v119;
v114 = v114 - 1;
goto label36;
label37:
v112 = v114;
goto label35;
label38:
v120 = (int) -3;
v13 = v120;
goto label01;
label39:
v121 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trPivot(int,int,int,int,int)>(v1, v2, v3, v4, v5);
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v4, v8, v121);
v122 = v8[v4];
v123 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v122);
v124 = v4 + 1;
label40:
if v124 >= v5 goto label41;
v125 = v8[v124];
v126 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v125);
v10 = v126;
if v126 != v123 goto label41;
v124 = v124 + 1;
goto label40;
label41:
v127 = v124;
if v124 >= v5 goto label43;
if v10 >= v123 goto label43;
label42:
v124 = v124 + 1;
if v124 >= v5 goto label43;
v128 = v8[v124];
v129 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v128);
v10 = v129;
if v129 > v123 goto label43;
if v129 != v123 goto label42;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v124, v8, v127);
v127 = v127 + 1;
goto label42;
label43:
v130 = v5 - 1;
label44:
if v124 >= v130 goto label45;
v131 = v8[v130];
v132 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v131);
v10 = v132;
if v132 != v123 goto label45;
v130 = v130 - 1;
goto label44;
label45:
v133 = v130;
if v124 >= v130 goto label50;
if v10 <= v123 goto label47;
label46:
v130 = v130 - 1;
if v124 >= v130 goto label50;
v134 = v8[v130];
v135 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v134);
v10 = v135;
if v135 < v123 goto label47;
if v135 != v123 goto label46;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v130, v8, v133);
v133 = v133 - 1;
goto label46;
label47:
if v124 >= v130 goto label50;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v124, v8, v130);
label48:
v124 = v124 + 1;
if v124 >= v130 goto label49;
v136 = v8[v124];
v137 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v136);
v10 = v137;
if v137 > v123 goto label49;
if v137 != v123 goto label48;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v124, v8, v127);
v127 = v127 + 1;
goto label48;
label49:
v130 = v130 - 1;
if v124 >= v130 goto label50;
v138 = v8[v130];
v139 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int trGetC(int,int,int,int)>(v1, v2, v3, v138);
v10 = v139;
if v139 < v123 goto label47;
if v139 != v123 goto label49;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v130, v8, v133);
v133 = v133 - 1;
goto label49;
label50:
if v127 > v133 goto label81;
v140 = v124 - 1;
v141 = v127 - v4;
v142 = v141;
v143 = v124 - v127;
if v141 <= v143 goto label51;
v142 = v143;
label51:
v144 = v4;
v145 = v124 - v142;
label52:
if 0 >= v142 goto label53;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v144, v8, v145);
v142 = v142 - 1;
v144 = v144 + 1;
v145 = v145 + 1;
goto label52;
label53:
v146 = v133 - v140;
v147 = v146;
v148 = v5 - v133;
v149 = v148 - 1;
if v146 <= v149 goto label54;
v147 = v149;
label54:
v150 = v124;
v151 = v5 - v147;
label55:
if 0 >= v147 goto label56;
staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: void swapElements(int[],int,int[],int)>(v8, v150, v8, v151);
v147 = v147 - 1;
v150 = v150 + 1;
v151 = v151 + 1;
goto label55;
label56:
v152 = v124 - v127;
v153 = v4 + v152;
v154 = v133 - v140;
v155 = v5 - v154;
v156 = v8[v153];
v157 = v1 + v156;
v158 = v8[v157];
if v158 == v123 goto label57;
v159 = v155 - v153;
v160 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v159);
goto label58;
label57:
v161 = (int) -1;
v160 = v161;
label58:
v162 = v160;
v163 = v4;
v164 = v153 - 1;
label59:
if v163 >= v153 goto label60;
v165 = v8[v163];
v166 = v1 + v165;
v8[v166] = v164;
v163 = v163 + 1;
goto label59;
label60:
if v155 >= v5 goto label62;
v167 = v153;
v168 = v155 - 1;
label61:
if v167 >= v155 goto label62;
v169 = v8[v167];
v170 = v1 + v169;
v8[v170] = v168;
v167 = v167 + 1;
goto label61;
label62:
v171 = v153 - v4;
v172 = v5 - v155;
if v171 > v172 goto label72;
v173 = v5 - v155;
v174 = v155 - v153;
if v173 > v174 goto label67;
v175 = v153 - v4;
if 1 >= v175 goto label63;
v176 = v11 + 1;
v177 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v178 = v2 + 1;
specialinvoke v177.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v178, v153, v155, v162);
v9[v11] = v177;
v11 = v176 + 1;
v179 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v179.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v155, v5, v13);
v9[v176] = v179;
v5 = v153;
goto label01;
label63:
v180 = v5 - v155;
if 1 >= v180 goto label64;
v181 = v11;
v11 = v11 + 1;
v182 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v183 = v2 + 1;
specialinvoke v182.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v183, v153, v155, v162);
v9[v181] = v182;
v4 = v155;
goto label01;
label64:
v184 = v155 - v153;
if 1 >= v184 goto label65;
v2 = v2 + 1;
v4 = v153;
v5 = v155;
v13 = v162;
goto label01;
label65:
if v11 != 0 goto label66;
return;
label66:
v11 = v11 - 1;
v185 = v9[v11];
v2 = v185.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int a>;
v4 = v185.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v5 = v185.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
v13 = v185.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
goto label01;
label67:
v186 = v153 - v4;
v187 = v155 - v153;
if v186 > v187 goto label70;
v188 = v153 - v4;
if 1 >= v188 goto label68;
v189 = v11 + 1;
v190 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v190.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v155, v5, v13);
v9[v11] = v190;
v11 = v189 + 1;
v191 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v192 = v2 + 1;
specialinvoke v191.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v192, v153, v155, v162);
v9[v189] = v191;
v5 = v153;
goto label01;
label68:
v193 = v155 - v153;
if 1 >= v193 goto label69;
v194 = v11;
v11 = v11 + 1;
v195 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v195.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v155, v5, v13);
v9[v194] = v195;
v2 = v2 + 1;
v4 = v153;
v5 = v155;
v13 = v162;
goto label01;
label69:
v4 = v155;
goto label01;
label70:
v196 = v155 - v153;
if 1 >= v196 goto label71;
v197 = v11 + 1;
v198 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v198.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v155, v5, v13);
v9[v11] = v198;
v11 = v197 + 1;
v199 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v199.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v153, v13);
v9[v197] = v199;
v2 = v2 + 1;
v4 = v153;
v5 = v155;
v13 = v162;
goto label01;
label71:
v200 = v11;
v11 = v11 + 1;
v201 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v201.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v155, v5, v13);
v9[v200] = v201;
v5 = v153;
goto label01;
label72:
v202 = v153 - v4;
v203 = v155 - v153;
if v202 > v203 goto label76;
v204 = v5 - v155;
if 1 >= v204 goto label73;
v205 = v11 + 1;
v206 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v207 = v2 + 1;
specialinvoke v206.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v207, v153, v155, v162);
v9[v11] = v206;
v11 = v205 + 1;
v208 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v208.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v153, v13);
v9[v205] = v208;
v4 = v155;
goto label01;
label73:
v209 = v153 - v4;
if 1 >= v209 goto label74;
v210 = v11;
v11 = v11 + 1;
v211 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v212 = v2 + 1;
specialinvoke v211.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v212, v153, v155, v162);
v9[v210] = v211;
v5 = v153;
goto label01;
label74:
v213 = v155 - v153;
if 1 >= v213 goto label75;
v2 = v2 + 1;
v4 = v153;
v5 = v155;
v13 = v162;
goto label01;
label75:
v214 = v11;
v11 = v11 + 1;
v215 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v215.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v5, v13);
v9[v214] = v215;
goto label01;
label76:
v216 = v5 - v155;
v217 = v155 - v153;
if v216 > v217 goto label79;
v218 = v5 - v155;
if 1 >= v218 goto label77;
v219 = v11 + 1;
v220 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v220.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v153, v13);
v9[v11] = v220;
v11 = v219 + 1;
v221 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
v222 = v2 + 1;
specialinvoke v221.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v222, v153, v155, v162);
v9[v219] = v221;
v4 = v155;
goto label01;
label77:
v223 = v155 - v153;
if 1 >= v223 goto label78;
v224 = v11;
v11 = v11 + 1;
v225 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v225.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v153, v13);
v9[v224] = v225;
v2 = v2 + 1;
v4 = v153;
v5 = v155;
v13 = v162;
goto label01;
label78:
v5 = v153;
goto label01;
label79:
v226 = v155 - v153;
if 1 >= v226 goto label80;
v227 = v11 + 1;
v228 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v228.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v153, v13);
v9[v11] = v228;
v11 = v227 + 1;
v229 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v229.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v155, v5, v13);
v9[v227] = v229;
v2 = v2 + 1;
v4 = v153;
v5 = v155;
v13 = v162;
goto label01;
label80:
v230 = v11;
v11 = v11 + 1;
v231 = new io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry;
specialinvoke v231.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: void <init>(int,int,int,int)>(v2, v4, v153, v13);
v9[v230] = v231;
v4 = v155;
goto label01;
label81:
v232 = v5 - v4;
v233 = virtualinvoke v6.<io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget: boolean update(int,int)>(v7, v232);
if v233 == 0 goto label82;
v13 = v13 + 1;
v2 = v2 + 1;
goto label01;
label82:
v234 = 0;
label83:
if v234 >= v11 goto label85;
v235 = v9[v234];
v236 = v235.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int d>;
v237 = (int) -3;
if v236 != v237 goto label84;
v238 = v9[v234];
v239 = v238.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int b>;
v240 = v9[v234];
v241 = v240.<io.netty.handler.codec.compression.Bzip2DivSufSort$StackEntry: int c>;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void lsUpdateGroup(int,int,int)>(v1, v239, v241);
label84:
v234 = v234 + 1;
goto label83;
label85:
return;
}
private void trSort(int, int, int)
{
int[] v4;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v3, v5, v6, v7, v9;
io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = 0;
v6 = neg v2;
v7 = v4[0];
if v6 >= v7 goto label6;
v8 = new io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget;
v9 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int trLog(int)>(v2);
v10 = v9 * 2;
v11 = v10 / 3;
v12 = v11 + 1;
specialinvoke v8.<io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget: void <init>(int,int)>(v2, v12);
label1:
v13 = v4[v5];
if v13 >= 0 goto label2;
v5 = v5 - v13;
goto label5;
label2:
v14 = v1 + v13;
v15 = v4[v14];
v16 = v15 + 1;
v17 = v16 - v5;
if 1 >= v17 goto label4;
v18 = v1 + v3;
v19 = v1 + v2;
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trIntroSort(int,int,int,int,int,io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget,int)>(v1, v18, v19, v5, v16, v8, v2);
v20 = v8.<io.netty.handler.codec.compression.Bzip2DivSufSort$TRBudget: int chance>;
if v20 != 0 goto label4;
if 0 >= v5 goto label3;
v21 = neg v5;
v4[0] = v21;
label3:
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void lsSort(int,int,int)>(v1, v2, v3);
goto label6;
label4:
v5 = v16;
label5:
if v5 < v2 goto label1;
label6:
return;
}
private static int BUCKET_B(int, int)
{
int v0, v1, v2, v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = v1 << 8;
v3 = v2 | v0;
return v3;
}
private static int BUCKET_BSTAR(int, int)
{
int v0, v1, v2, v3;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = v0 << 8;
v3 = v2 | v1;
return v3;
}
private int sortTypeBstar(int[], int[])
{
byte[] v3;
byte v10, v100, v11, v13, v141, v143, v145, v146, v149, v15, v152, v154, v157, v161, v164, v19, v21, v23, v24, v31, v34, v39, v43, v46, v48, v51, v56, v59, v86, v89, v97;
short v101, v14, v142, v144, v150, v153, v155, v158, v16, v162, v165, v20, v22, v32, v35, v40, v44, v47, v49, v52, v57, v60, v87, v90, v98;
int[] v1, v106, v117, v2, v4, v6;
int v102, v103, v104, v105, v107, v108, v109, v110, v111, v112, v113, v114, v115, v116, v118, v119, v12, v120, v121, v123, v124, v125, v126, v127, v128, v129, v130, v131, v132, v133, v134, v135, v136, v137, v138, v139, v140, v147, v148, v151, v156, v159, v160, v163, v166, v167, v168, v169, v17, v170, v171, v172, v173, v174, v175, v176, v177, v178, v179, v18, v180, v181, v182, v183, v184, v185, v25, v26, v27, v28, v29, v30, v33, v36, v37, v38, v41, v42, v45, v5, v50, v53, v54, v55, v58, v61, v62, v63, v64, v65, v66, v67, v68, v69, v7, v70, v71, v72, v73, v74, v75, v76, v77, v78, v79, v80, v81, v82, v83, v84, v85, v88, v9, v91, v92, v93, v94, v95, v96, v99;
boolean v122, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int[];
v2 := @parameter1: int[];
v3 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int n>;
v6 = newarray (int)[256];
v7 = 1;
v8 = 1;
label01:
if v7 >= v5 goto label03;
v9 = v7 - 1;
v10 = v3[v9];
v11 = v3[v7];
if v10 == v11 goto label02;
v12 = v7 - 1;
v13 = v3[v12];
v14 = v13 & 255;
v15 = v3[v7];
v16 = v15 & 255;
if v14 <= v16 goto label03;
v8 = 0;
goto label03;
label02:
v7 = v7 + 1;
goto label01;
label03:
v17 = v5 - 1;
v18 = v5;
v19 = v3[v17];
v20 = v19 & 255;
v21 = v3[0];
v22 = v21 & 255;
if v20 < v22 goto label04;
v23 = v3[v17];
v24 = v3[0];
if v23 != v24 goto label08;
if v8 == 0 goto label08;
label04:
if v8 != 0 goto label05;
v25 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v20, v22);
v26 = v2[v25];
v27 = v26 + 1;
v2[v25] = v27;
v18 = v5 - 1;
v4[v18] = v17;
goto label06;
label05:
v28 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v20, v22);
v29 = v2[v28];
v30 = v29 + 1;
v2[v28] = v30;
label06:
v17 = v17 - 1;
label07:
if 0 > v17 goto label11;
v31 = v3[v17];
v32 = v31 & 255;
v33 = v17 + 1;
v34 = v3[v33];
v35 = v34 & 255;
if v32 > v35 goto label08;
v36 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v32, v35);
v37 = v2[v36];
v38 = v37 + 1;
v2[v36] = v38;
v17 = v17 - 1;
goto label07;
label08:
if 0 > v17 goto label11;
label09:
v39 = v3[v17];
v40 = v39 & 255;
v41 = v1[v40];
v42 = v41 + 1;
v1[v40] = v42;
v17 = v17 - 1;
if 0 > v17 goto label11;
v43 = v3[v17];
v44 = v43 & 255;
v45 = v17 + 1;
v46 = v3[v45];
v47 = v46 & 255;
if v44 >= v47 goto label09;
if 0 > v17 goto label11;
v48 = v3[v17];
v49 = v48 & 255;
v50 = v17 + 1;
v51 = v3[v50];
v52 = v51 & 255;
v53 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v49, v52);
v54 = v2[v53];
v55 = v54 + 1;
v2[v53] = v55;
v18 = v18 - 1;
v4[v18] = v17;
v17 = v17 - 1;
label10:
if 0 > v17 goto label11;
v56 = v3[v17];
v57 = v56 & 255;
v58 = v17 + 1;
v59 = v3[v58];
v60 = v59 & 255;
if v57 > v60 goto label08;
v61 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v57, v60);
v62 = v2[v61];
v63 = v62 + 1;
v2[v61] = v63;
v17 = v17 - 1;
goto label10;
label11:
v64 = v5 - v18;
if v64 != 0 goto label14;
v65 = 0;
label12:
if v65 >= v5 goto label13;
v4[v65] = v65;
v65 = v65 + 1;
goto label12;
label13:
return 0;
label14:
v66 = 0;
v67 = (int) -1;
v68 = v67;
v69 = 0;
label15:
if v66 >= 256 goto label18;
v70 = v1[v66];
v71 = v68 + v70;
v72 = v68 + v69;
v1[v66] = v72;
v73 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v66, v66);
v74 = v2[v73];
v68 = v71 + v74;
v75 = v66 + 1;
label16:
if v75 >= 256 goto label17;
v76 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v66, v75);
v77 = v2[v76];
v69 = v69 + v77;
v78 = v66 << 8;
v79 = v78 | v75;
v2[v79] = v69;
v80 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v66, v75);
v81 = v2[v80];
v68 = v68 + v81;
v75 = v75 + 1;
goto label16;
label17:
v66 = v66 + 1;
goto label15;
label18:
v82 = v5 - v64;
v83 = v64 - 2;
label19:
if 0 > v83 goto label20;
v84 = v82 + v83;
v85 = v4[v84];
v86 = v3[v85];
v87 = v86 & 255;
v88 = v85 + 1;
v89 = v3[v88];
v90 = v89 & 255;
v91 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v87, v90);
v92 = v2[v91];
v93 = v92 - 1;
v2[v91] = v93;
v4[v93] = v83;
v83 = v83 - 1;
goto label19;
label20:
v94 = v82 + v64;
v95 = v94 - 1;
v96 = v4[v95];
v97 = v3[v96];
v98 = v97 & 255;
v99 = v96 + 1;
v100 = v3[v99];
v101 = v100 & 255;
v102 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v98, v101);
v103 = v2[v102];
v104 = v103 - 1;
v2[v102] = v104;
v105 = v64 - 1;
v4[v104] = v105;
v106 = v4;
v107 = v64;
v108 = 2 * v64;
v109 = v5 - v108;
if v109 > 256 goto label21;
v106 = v6;
v107 = 0;
v109 = 256;
label21:
v110 = 255;
v111 = v64;
label22:
if 0 >= v111 goto label28;
v112 = 255;
label23:
if v110 >= v112 goto label27;
v113 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v110, v112);
v114 = v2[v113];
v115 = v111 - v114;
if 1 >= v115 goto label26;
v116 = v111;
v117 = v106;
v118 = v107;
v119 = v109;
v120 = v4[v114];
v121 = v64 - 1;
if v120 != v121 goto label24;
v122 = 1;
goto label25;
label24:
v122 = 0;
label25:
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void subStringSort(int,int,int,int[],int,int,int,boolean,int)>(v82, v114, v116, v117, v118, v119, 2, v122, v5);
label26:
v111 = v114;
v112 = v112 - 1;
goto label23;
label27:
v110 = v110 - 1;
goto label22;
label28:
v123 = v64 - 1;
label29:
if 0 > v123 goto label34;
v124 = v4[v123];
if 0 > v124 goto label32;
v125 = v123;
label30:
v126 = v4[v123];
v127 = v64 + v126;
v4[v127] = v123;
v123 = v123 - 1;
if 0 > v123 goto label31;
v128 = v4[v123];
if 0 <= v128 goto label30;
label31:
v129 = v123 + 1;
v130 = v123 - v125;
v4[v129] = v130;
if v123 <= 0 goto label34;
label32:
v131 = v123;
label33:
v132 = v4[v123];
v133 = (int) -1;
v134 = v132 ^ v133;
v4[v123] = v134;
v135 = v64 + v134;
v4[v135] = v131;
v123 = v123 - 1;
v136 = v4[v123];
if v136 < 0 goto label33;
v137 = v4[v123];
v138 = v64 + v137;
v4[v138] = v131;
v123 = v123 - 1;
goto label29;
label34:
specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: void trSort(int,int,int)>(v64, v64, 1);
v139 = v5 - 1;
v140 = v64;
v141 = v3[v139];
v142 = v141 & 255;
v143 = v3[0];
v144 = v143 & 255;
if v142 < v144 goto label35;
v145 = v3[v139];
v146 = v3[0];
if v145 != v146 goto label38;
if v8 == 0 goto label38;
label35:
if v8 != 0 goto label36;
v140 = v64 - 1;
v147 = v64 + v140;
v148 = v4[v147];
v4[v148] = v139;
label36:
v139 = v139 - 1;
label37:
if 0 > v139 goto label42;
v149 = v3[v139];
v150 = v149 & 255;
v151 = v139 + 1;
v152 = v3[v151];
v153 = v152 & 255;
if v150 > v153 goto label38;
v139 = v139 - 1;
goto label37;
label38:
if 0 > v139 goto label42;
v139 = v139 - 1;
label39:
if 0 > v139 goto label42;
v154 = v3[v139];
v155 = v154 & 255;
v156 = v139 + 1;
v157 = v3[v156];
v158 = v157 & 255;
if v155 < v158 goto label40;
v139 = v139 - 1;
goto label39;
label40:
if 0 > v139 goto label42;
v140 = v140 - 1;
v159 = v64 + v140;
v160 = v4[v159];
v4[v160] = v139;
v139 = v139 - 1;
label41:
if 0 > v139 goto label42;
v161 = v3[v139];
v162 = v161 & 255;
v163 = v139 + 1;
v164 = v3[v163];
v165 = v164 & 255;
if v162 > v165 goto label38;
v139 = v139 - 1;
goto label41;
label42:
v166 = 255;
v167 = v5 - 1;
v168 = v64 - 1;
label43:
if 0 > v166 goto label49;
v169 = 255;
label44:
if v166 >= v169 goto label47;
v170 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v166, v169);
v171 = v2[v170];
v172 = v167 - v171;
v173 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v166, v169);
v174 = v167 + 1;
v2[v173] = v174;
v167 = v172;
v175 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v166, v169);
v176 = v2[v175];
label45:
if v176 > v168 goto label46;
v177 = v4[v168];
v4[v167] = v177;
v167 = v167 - 1;
v168 = v168 - 1;
goto label45;
label46:
v169 = v169 - 1;
goto label44;
label47:
v178 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v166, v166);
v179 = v2[v178];
v180 = v167 - v179;
v181 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v166, v166);
v182 = v167 + 1;
v2[v181] = v182;
if v166 >= 255 goto label48;
v183 = v166 + 1;
v184 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v166, v183);
v185 = v180 + 1;
v2[v184] = v185;
label48:
v167 = v1[v166];
v166 = v166 - 1;
goto label43;
label49:
return v64;
}
private int constructBWT(int[], int[])
{
byte[] v3;
byte v18, v23, v36, v39, v42, v50, v52;
int[] v1, v2, v4;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
short v19, v24, v37, v40, v43, v7;
int v10, v11, v12, v13, v14, v15, v16, v17, v20, v21, v22, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v38, v41, v44, v45, v46, v47, v48, v49, v5, v51, v6, v8, v9;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 := @parameter0: int[];
v2 := @parameter1: int[];
v3 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v4 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v5 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int n>;
v6 = 0;
v7 = 0;
v8 = (int) -1;
v9 = v8;
v10 = 254;
label01:
if 0 > v10 goto label10;
v11 = v10 + 1;
v12 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_BSTAR(int,int)>(v10, v11);
v13 = v2[v12];
v14 = v10 + 1;
v15 = v1[v14];
v6 = 0;
v7 = -1;
label02:
if v13 > v15 goto label09;
v16 = v4[v15];
if 0 > v16 goto label07;
v17 = v16 - 1;
if v17 >= 0 goto label03;
v17 = v5 - 1;
label03:
v18 = v3[v17];
v19 = v18 & 255;
if v19 > v10 goto label08;
v20 = (int) -1;
v21 = v16 ^ v20;
v4[v15] = v21;
if 0 >= v17 goto label04;
v22 = v17 - 1;
v23 = v3[v22];
v24 = v23 & 255;
if v24 <= v19 goto label04;
v25 = (int) -1;
v17 = v17 ^ v25;
label04:
if v7 != v19 goto label05;
v6 = v6 - 1;
v4[v6] = v17;
goto label08;
label05:
if 0 > v7 goto label06;
v26 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v7, v10);
v2[v26] = v6;
label06:
v7 = v19;
v27 = staticinvoke <io.netty.handler.codec.compression.Bzip2DivSufSort: int BUCKET_B(int,int)>(v19, v10);
v28 = v2[v27];
v29 = v28 - 1;
v6 = v29;
v4[v29] = v17;
goto label08;
label07:
v30 = (int) -1;
v31 = v16 ^ v30;
v4[v15] = v31;
label08:
v15 = v15 - 1;
goto label02;
label09:
v10 = v10 - 1;
goto label01;
label10:
v32 = 0;
label11:
if v32 >= v5 goto label20;
v33 = v4[v32];
v34 = v33;
if 0 > v33 goto label16;
v35 = v33 - 1;
if v35 >= 0 goto label12;
v35 = v5 - 1;
label12:
v36 = v3[v35];
v37 = v36 & 255;
v38 = v35 + 1;
v39 = v3[v38];
v40 = v39 & 255;
if v37 < v40 goto label17;
if 0 >= v35 goto label13;
v41 = v35 - 1;
v42 = v3[v41];
v43 = v42 & 255;
if v43 >= v37 goto label13;
v44 = (int) -1;
v35 = v35 ^ v44;
label13:
if v37 != v7 goto label14;
v6 = v6 + 1;
v4[v6] = v35;
goto label17;
label14:
v45 = (int) -1;
if v7 == v45 goto label15;
v1[v7] = v6;
label15:
v7 = v37;
v46 = v1[v37];
v47 = v46 + 1;
v6 = v47;
v4[v47] = v35;
goto label17;
label16:
v48 = (int) -1;
v34 = v33 ^ v48;
label17:
if v34 != 0 goto label18;
v49 = v5 - 1;
v50 = v3[v49];
v4[v32] = v50;
v9 = v32;
goto label19;
label18:
v51 = v34 - 1;
v52 = v3[v51];
v4[v32] = v52;
label19:
v32 = v32 + 1;
goto label11;
label20:
return v9;
}
public int bwt()
{
byte[] v2;
byte v6;
int[] v1, v4, v5;
int v3, v7, v8;
io.netty.handler.codec.compression.Bzip2DivSufSort v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2DivSufSort;
v1 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] SA>;
v2 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: byte[] T>;
v3 = v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int n>;
v4 = newarray (int)[256];
v5 = newarray (int)[65536];
if v3 != 0 goto label1;
return 0;
label1:
if v3 != 1 goto label2;
v6 = v2[0];
v1[0] = v6;
return 0;
label2:
v7 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int sortTypeBstar(int[],int[])>(v4, v5);
if 0 >= v7 goto label3;
v8 = specialinvoke v0.<io.netty.handler.codec.compression.Bzip2DivSufSort: int constructBWT(int[],int[])>(v4, v5);
return v8;
label3:
return 0;
}
static void <clinit>()
{
int v1;
int[] v0;
v0 = newarray (int)[256];
v1 = (int) -1;
v0[0] = v1;
v0[1] = 0;
v0[2] = 1;
v0[3] = 1;
v0[4] = 2;
v0[5] = 2;
v0[6] = 2;
v0[7] = 2;
v0[8] = 3;
v0[9] = 3;
v0[10] = 3;
v0[11] = 3;
v0[12] = 3;
v0[13] = 3;
v0[14] = 3;
v0[15] = 3;
v0[16] = 4;
v0[17] = 4;
v0[18] = 4;
v0[19] = 4;
v0[20] = 4;
v0[21] = 4;
v0[22] = 4;
v0[23] = 4;
v0[24] = 4;
v0[25] = 4;
v0[26] = 4;
v0[27] = 4;
v0[28] = 4;
v0[29] = 4;
v0[30] = 4;
v0[31] = 4;
v0[32] = 5;
v0[33] = 5;
v0[34] = 5;
v0[35] = 5;
v0[36] = 5;
v0[37] = 5;
v0[38] = 5;
v0[39] = 5;
v0[40] = 5;
v0[41] = 5;
v0[42] = 5;
v0[43] = 5;
v0[44] = 5;
v0[45] = 5;
v0[46] = 5;
v0[47] = 5;
v0[48] = 5;
v0[49] = 5;
v0[50] = 5;
v0[51] = 5;
v0[52] = 5;
v0[53] = 5;
v0[54] = 5;
v0[55] = 5;
v0[56] = 5;
v0[57] = 5;
v0[58] = 5;
v0[59] = 5;
v0[60] = 5;
v0[61] = 5;
v0[62] = 5;
v0[63] = 5;
v0[64] = 6;
v0[65] = 6;
v0[66] = 6;
v0[67] = 6;
v0[68] = 6;
v0[69] = 6;
v0[70] = 6;
v0[71] = 6;
v0[72] = 6;
v0[73] = 6;
v0[74] = 6;
v0[75] = 6;
v0[76] = 6;
v0[77] = 6;
v0[78] = 6;
v0[79] = 6;
v0[80] = 6;
v0[81] = 6;
v0[82] = 6;
v0[83] = 6;
v0[84] = 6;
v0[85] = 6;
v0[86] = 6;
v0[87] = 6;
v0[88] = 6;
v0[89] = 6;
v0[90] = 6;
v0[91] = 6;
v0[92] = 6;
v0[93] = 6;
v0[94] = 6;
v0[95] = 6;
v0[96] = 6;
v0[97] = 6;
v0[98] = 6;
v0[99] = 6;
v0[100] = 6;
v0[101] = 6;
v0[102] = 6;
v0[103] = 6;
v0[104] = 6;
v0[105] = 6;
v0[106] = 6;
v0[107] = 6;
v0[108] = 6;
v0[109] = 6;
v0[110] = 6;
v0[111] = 6;
v0[112] = 6;
v0[113] = 6;
v0[114] = 6;
v0[115] = 6;
v0[116] = 6;
v0[117] = 6;
v0[118] = 6;
v0[119] = 6;
v0[120] = 6;
v0[121] = 6;
v0[122] = 6;
v0[123] = 6;
v0[124] = 6;
v0[125] = 6;
v0[126] = 6;
v0[127] = 6;
v0[128] = 7;
v0[129] = 7;
v0[130] = 7;
v0[131] = 7;
v0[132] = 7;
v0[133] = 7;
v0[134] = 7;
v0[135] = 7;
v0[136] = 7;
v0[137] = 7;
v0[138] = 7;
v0[139] = 7;
v0[140] = 7;
v0[141] = 7;
v0[142] = 7;
v0[143] = 7;
v0[144] = 7;
v0[145] = 7;
v0[146] = 7;
v0[147] = 7;
v0[148] = 7;
v0[149] = 7;
v0[150] = 7;
v0[151] = 7;
v0[152] = 7;
v0[153] = 7;
v0[154] = 7;
v0[155] = 7;
v0[156] = 7;
v0[157] = 7;
v0[158] = 7;
v0[159] = 7;
v0[160] = 7;
v0[161] = 7;
v0[162] = 7;
v0[163] = 7;
v0[164] = 7;
v0[165] = 7;
v0[166] = 7;
v0[167] = 7;
v0[168] = 7;
v0[169] = 7;
v0[170] = 7;
v0[171] = 7;
v0[172] = 7;
v0[173] = 7;
v0[174] = 7;
v0[175] = 7;
v0[176] = 7;
v0[177] = 7;
v0[178] = 7;
v0[179] = 7;
v0[180] = 7;
v0[181] = 7;
v0[182] = 7;
v0[183] = 7;
v0[184] = 7;
v0[185] = 7;
v0[186] = 7;
v0[187] = 7;
v0[188] = 7;
v0[189] = 7;
v0[190] = 7;
v0[191] = 7;
v0[192] = 7;
v0[193] = 7;
v0[194] = 7;
v0[195] = 7;
v0[196] = 7;
v0[197] = 7;
v0[198] = 7;
v0[199] = 7;
v0[200] = 7;
v0[201] = 7;
v0[202] = 7;
v0[203] = 7;
v0[204] = 7;
v0[205] = 7;
v0[206] = 7;
v0[207] = 7;
v0[208] = 7;
v0[209] = 7;
v0[210] = 7;
v0[211] = 7;
v0[212] = 7;
v0[213] = 7;
v0[214] = 7;
v0[215] = 7;
v0[216] = 7;
v0[217] = 7;
v0[218] = 7;
v0[219] = 7;
v0[220] = 7;
v0[221] = 7;
v0[222] = 7;
v0[223] = 7;
v0[224] = 7;
v0[225] = 7;
v0[226] = 7;
v0[227] = 7;
v0[228] = 7;
v0[229] = 7;
v0[230] = 7;
v0[231] = 7;
v0[232] = 7;
v0[233] = 7;
v0[234] = 7;
v0[235] = 7;
v0[236] = 7;
v0[237] = 7;
v0[238] = 7;
v0[239] = 7;
v0[240] = 7;
v0[241] = 7;
v0[242] = 7;
v0[243] = 7;
v0[244] = 7;
v0[245] = 7;
v0[246] = 7;
v0[247] = 7;
v0[248] = 7;
v0[249] = 7;
v0[250] = 7;
v0[251] = 7;
v0[252] = 7;
v0[253] = 7;
v0[254] = 7;
v0[255] = 7;
<io.netty.handler.codec.compression.Bzip2DivSufSort: int[] LOG_2_TABLE> = v0;
return;
}
}