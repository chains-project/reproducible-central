final class io.netty.handler.codec.compression.Bzip2HuffmanAllocator extends java.lang.Object
{
private static int first(int[], int, int)
{
int[] v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = lengthof v0;
v4 = v1;
v5 = lengthof v0;
v6 = v5 - 2;
label1:
if v1 < v2 goto label2;
v7 = v0[v1];
v8 = v7 % v3;
if v8 <= v4 goto label2;
v6 = v1;
v9 = v4 - v1;
v10 = v9 + 1;
v1 = v1 - v10;
goto label1;
label2:
v11 = v2 - 1;
v12 = staticinvoke <java.lang.Math: int max(int,int)>(v11, v1);
label3:
v13 = v12 + 1;
if v6 <= v13 goto label5;
v14 = v12 + v6;
v15 = v14 >>> 1;
v16 = v0[v15];
v17 = v16 % v3;
if v17 <= v4 goto label4;
v6 = v15;
goto label3;
label4:
v12 = v15;
goto label3;
label5:
return v6;
}
private static void setExtendedParentPointers(int[])
{
int[] v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int[];
v1 = lengthof v0;
v2 = v0[0];
v3 = v0[1];
v4 = v2 + v3;
v0[0] = v4;
v5 = 0;
v6 = 1;
v7 = 2;
label1:
v8 = v1 - 1;
if v6 >= v8 goto label8;
if v7 >= v1 goto label2;
v9 = v0[v5];
v10 = v0[v7];
if v9 >= v10 goto label3;
label2:
v11 = v0[v5];
v12 = v5;
v5 = v5 + 1;
v0[v12] = v6;
goto label4;
label3:
v13 = v7;
v7 = v7 + 1;
v11 = v0[v13];
label4:
if v7 >= v1 goto label5;
if v5 >= v6 goto label6;
v14 = v0[v5];
v15 = v0[v7];
if v14 >= v15 goto label6;
label5:
v16 = v0[v5];
v17 = v11 + v16;
v18 = v5;
v5 = v5 + 1;
v19 = v6 + v1;
v0[v18] = v19;
goto label7;
label6:
v20 = v7;
v7 = v7 + 1;
v21 = v0[v20];
v17 = v11 + v21;
label7:
v0[v6] = v17;
v6 = v6 + 1;
goto label1;
label8:
return;
}
private static int findNodesToRelocate(int[], int)
{
int[] v0;
int v1, v2, v3, v4, v5, v6;
v0 := @parameter0: int[];
v1 := @parameter1: int;
v2 = lengthof v0;
v3 = v2 - 2;
v4 = 1;
label1:
v5 = v1 - 1;
if v4 >= v5 goto label2;
if v3 <= 1 goto label2;
v6 = v3 - 1;
v3 = staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: int first(int[],int,int)>(v0, v6, 0);
v4 = v4 + 1;
goto label1;
label2:
return v3;
}
private static void allocateNodeLengths(int[])
{
int[] v0;
int v1, v10, v11, v12, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int[];
v1 = lengthof v0;
v2 = v1 - 2;
v3 = lengthof v0;
v4 = v3 - 1;
v5 = 1;
v6 = 2;
label1:
if v6 <= 0 goto label4;
v7 = v2;
v8 = v2 - 1;
v2 = staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: int first(int[],int,int)>(v0, v8, 0);
v9 = v7 - v2;
v10 = v6 - v9;
label2:
if v10 <= 0 goto label3;
v11 = v4;
v4 = v4 - 1;
v0[v11] = v5;
v10 = v10 - 1;
goto label2;
label3:
v12 = v7 - v2;
v6 = v12 << 1;
v5 = v5 + 1;
goto label1;
label4:
return;
}
private static void allocateNodeLengthsWithRelocation(int[], int, int)
{
byte v7;
int[] v0;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v3, v4, v5, v6, v8, v9;
v0 := @parameter0: int[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = lengthof v0;
v4 = v3 - 2;
v5 = lengthof v0;
v6 = v5 - 1;
if v2 != 1 goto label01;
v7 = 2;
goto label02;
label01:
v7 = 1;
label02:
v8 = v7;
if v2 != 1 goto label03;
v9 = v1 - 2;
goto label04;
label03:
v9 = v1;
label04:
v10 = v9;
v11 = v8 << 1;
label05:
if v11 <= 0 goto label12;
v12 = v4;
if v4 > v1 goto label06;
v13 = v4;
goto label07;
label06:
v14 = v4 - 1;
v13 = staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: int first(int[],int,int)>(v0, v14, v1);
label07:
v4 = v13;
v15 = 0;
if v8 < v2 goto label08;
v16 = v8 - v2;
v17 = 1 << v16;
v15 = staticinvoke <java.lang.Math: int min(int,int)>(v10, v17);
goto label09;
label08:
v18 = v2 - 1;
if v8 != v18 goto label09;
v15 = 1;
v19 = v0[v13];
if v19 != v12 goto label09;
v4 = v13 + 1;
label09:
v20 = v12 - v4;
v21 = v20 + v15;
v22 = v11 - v21;
label10:
if v22 <= 0 goto label11;
v23 = v6;
v6 = v6 - 1;
v0[v23] = v8;
v22 = v22 - 1;
goto label10;
label11:
v10 = v10 - v15;
v24 = v12 - v4;
v25 = v24 + v15;
v11 = v25 << 1;
v8 = v8 + 1;
goto label05;
label12:
return;
}
static void allocateHuffmanCodeLengths(int[], int)
{
int[] v0;
int v1, v10, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int[];
v1 := @parameter1: int;
v2 = lengthof v0;
lookupswitch(v2)
{
case 1: goto label2;
case 2: goto label1;
default: goto label3;
};
label1:
v0[1] = 1;
label2:
v0[0] = 1;
return;
label3:
staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: void setExtendedParentPointers(int[])>(v0);
v3 = staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: int findNodesToRelocate(int[],int)>(v0, v1);
v4 = v0[0];
v5 = lengthof v0;
v6 = v4 % v5;
if v6 < v3 goto label4;
staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: void allocateNodeLengths(int[])>(v0);
goto label5;
label4:
v7 = v3 - 1;
v8 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(v7);
v9 = 32 - v8;
v10 = v1 - v9;
staticinvoke <io.netty.handler.codec.compression.Bzip2HuffmanAllocator: void allocateNodeLengthsWithRelocation(int[],int,int)>(v0, v3, v10);
label5:
return;
}
private void <init>()
{
io.netty.handler.codec.compression.Bzip2HuffmanAllocator v0;
v0 := @this: io.netty.handler.codec.compression.Bzip2HuffmanAllocator;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}