final class io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder extends java.lang.Object
{
private final io.netty.handler.codec.compression.Bzip2BitReader reader;
byte[] selectors;
private final int[] minimumLengths;
private final int[][] codeBases;
private final int[][] codeLimits;
private final int[][] codeSymbols;
private int currentTable;
private int groupIndex;
private int groupPosition;
final int totalTables;
final int alphabetSize;
final io.netty.handler.codec.compression.Bzip2MoveToFrontTable tableMTF;
int currentSelector;
final byte[][] tableCodeLengths;
int currentGroup;
int currentLength;
int currentAlpha;
boolean modifyLength;
void <init>(io.netty.handler.codec.compression.Bzip2BitReader, int, int)
{
int[][] v10, v11, v9;
io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder v0;
io.netty.handler.codec.compression.Bzip2MoveToFrontTable v6;
byte[][] v12;
io.netty.handler.codec.compression.Bzip2BitReader v1;
int[] v8;
int v2, v3, v4, v5, v7;
v0 := @this: io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder;
v1 := @parameter0: io.netty.handler.codec.compression.Bzip2BitReader;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = (int) -1;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupIndex> = v4;
v5 = (int) -1;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupPosition> = v5;
v6 = new io.netty.handler.codec.compression.Bzip2MoveToFrontTable;
specialinvoke v6.<io.netty.handler.codec.compression.Bzip2MoveToFrontTable: void <init>()>();
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: io.netty.handler.codec.compression.Bzip2MoveToFrontTable tableMTF> = v6;
v7 = (int) -1;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int currentLength> = v7;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: io.netty.handler.codec.compression.Bzip2BitReader reader> = v1;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int totalTables> = v2;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int alphabetSize> = v3;
v8 = newarray (int)[v2];
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[] minimumLengths> = v8;
v9 = newmultiarray (int)[v2][25];
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeBases> = v9;
v10 = newmultiarray (int)[v2][24];
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeLimits> = v10;
v11 = newmultiarray (int)[v2][258];
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeSymbols> = v11;
v12 = newmultiarray (byte)[v2][258];
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: byte[][] tableCodeLengths> = v12;
return;
}
void createHuffmanDecodingTables()
{
byte[] v12, v41;
int[][] v5, v7, v9;
byte v16, v19, v39, v42;
int[] v10, v17, v6, v8;
io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder v0;
byte[][] v11, v3;
int v1, v13, v14, v15, v18, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v30, v31, v32, v33, v34, v35, v36, v37, v38, v4, v40;
v0 := @this: io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int alphabetSize>;
v2 = 0;
label01:
v3 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: byte[][] tableCodeLengths>;
v4 = lengthof v3;
if v2 >= v4 goto label15;
v5 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeBases>;
v6 = v5[v2];
v7 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeLimits>;
v8 = v7[v2];
v9 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeSymbols>;
v10 = v9[v2];
v11 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: byte[][] tableCodeLengths>;
v12 = v11[v2];
v13 = 23;
v14 = 0;
v15 = 0;
label02:
if v15 >= v1 goto label03;
v16 = v12[v15];
v14 = staticinvoke <java.lang.Math: int max(int,int)>(v16, v14);
v13 = staticinvoke <java.lang.Math: int min(int,int)>(v16, v13);
v15 = v15 + 1;
goto label02;
label03:
v17 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[] minimumLengths>;
v17[v2] = v13;
v18 = 0;
label04:
if v18 >= v1 goto label05;
v19 = v12[v18];
v20 = v19 + 1;
v21 = v6[v20];
v22 = v21 + 1;
v6[v20] = v22;
v18 = v18 + 1;
goto label04;
label05:
v23 = 1;
v24 = v6[0];
label06:
if v23 >= 25 goto label07;
v25 = v6[v23];
v24 = v24 + v25;
v6[v23] = v24;
v23 = v23 + 1;
goto label06;
label07:
v26 = v13;
v27 = 0;
label08:
if v26 > v14 goto label09;
v28 = v26 + 1;
v29 = v6[v28];
v30 = v6[v26];
v31 = v29 - v30;
v32 = v27 + v31;
v33 = v6[v26];
v34 = v27 - v33;
v6[v26] = v34;
v35 = v32 - 1;
v8[v26] = v35;
v27 = v32 << 1;
v26 = v26 + 1;
goto label08;
label09:
v36 = v13;
v37 = 0;
label10:
if v36 > v14 goto label14;
v38 = 0;
label11:
if v38 >= v1 goto label13;
v39 = v12[v38];
if v39 != v36 goto label12;
v40 = v37;
v37 = v37 + 1;
v10[v40] = v38;
label12:
v38 = v38 + 1;
goto label11;
label13:
v36 = v36 + 1;
goto label10;
label14:
v2 = v2 + 1;
goto label01;
label15:
v41 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: byte[] selectors>;
v42 = v41[0];
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int currentTable> = v42;
return;
}
int nextSymbol()
{
byte[] v10, v7;
int[][] v16, v18, v20;
byte v12;
int[] v17, v19, v21, v22;
io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder v0;
io.netty.handler.codec.compression.DecompressionException v31, v9;
short v13;
io.netty.handler.codec.compression.Bzip2BitReader v14;
int v1, v11, v15, v2, v23, v24, v25, v26, v27, v28, v29, v3, v30, v4, v5, v6, v8;
v0 := @this: io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder;
v1 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupPosition>;
v2 = v1 + 1;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupPosition> = v2;
v3 = v2 % 50;
if v3 != 0 goto label2;
v4 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupIndex>;
v5 = v4 + 1;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupIndex> = v5;
v6 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupIndex>;
v7 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: byte[] selectors>;
v8 = lengthof v7;
if v6 != v8 goto label1;
v9 = new io.netty.handler.codec.compression.DecompressionException;
specialinvoke v9.<io.netty.handler.codec.compression.DecompressionException: void <init>(java.lang.String)>("error decoding block");
throw v9;
label1:
v10 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: byte[] selectors>;
v11 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int groupIndex>;
v12 = v10[v11];
v13 = v12 & 255;
v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int currentTable> = v13;
label2:
v14 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: io.netty.handler.codec.compression.Bzip2BitReader reader>;
v15 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int currentTable>;
v16 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeLimits>;
v17 = v16[v15];
v18 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeBases>;
v19 = v18[v15];
v20 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[][] codeSymbols>;
v21 = v20[v15];
v22 = v0.<io.netty.handler.codec.compression.Bzip2HuffmanStageDecoder: int[] minimumLengths>;
v23 = v22[v15];
v24 = virtualinvoke v14.<io.netty.handler.codec.compression.Bzip2BitReader: int readBits(int)>(v23);
label3:
if v23 > 23 goto label5;
v25 = v17[v23];
if v24 > v25 goto label4;
v26 = v19[v23];
v27 = v24 - v26;
v28 = v21[v27];
return v28;
label4:
v29 = v24 << 1;
v30 = virtualinvoke v14.<io.netty.handler.codec.compression.Bzip2BitReader: int readBits(int)>(1);
v24 = v29 | v30;
v23 = v23 + 1;
goto label3;
label5:
v31 = new io.netty.handler.codec.compression.DecompressionException;
specialinvoke v31.<io.netty.handler.codec.compression.DecompressionException: void <init>(java.lang.String)>("a valid code was not recognised");
throw v31;
}
}