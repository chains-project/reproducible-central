public class io.netty.handler.codec.compression.JZlibDecoder extends io.netty.handler.codec.compression.ZlibDecoder
{
private final com.jcraft.jzlib.Inflater z;
private byte[] dictionary;
private volatile boolean finished;
public void <init>()
{
io.netty.handler.codec.compression.ZlibWrapper v1;
io.netty.handler.codec.compression.JZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibDecoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v1, 0);
return;
}
public void <init>(int)
{
int v1;
io.netty.handler.codec.compression.ZlibWrapper v2;
io.netty.handler.codec.compression.JZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: int;
v2 = <io.netty.handler.codec.compression.ZlibWrapper: io.netty.handler.codec.compression.ZlibWrapper ZLIB>;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibDecoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v2, v1);
return;
}
public void <init>(io.netty.handler.codec.compression.ZlibWrapper)
{
io.netty.handler.codec.compression.ZlibWrapper v1;
io.netty.handler.codec.compression.JZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
specialinvoke v0.<io.netty.handler.codec.compression.JZlibDecoder: void <init>(io.netty.handler.codec.compression.ZlibWrapper,int)>(v1, 0);
return;
}
public void <init>(io.netty.handler.codec.compression.ZlibWrapper, int)
{
io.netty.handler.codec.compression.JZlibDecoder v0;
com.jcraft.jzlib.Inflater v3, v4, v7;
com.jcraft.jzlib.JZlib$WrapperType v5;
io.netty.handler.codec.compression.ZlibWrapper v1;
int v2, v6;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: io.netty.handler.codec.compression.ZlibWrapper;
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.codec.compression.ZlibDecoder: void <init>(int)>(v2);
v3 = new com.jcraft.jzlib.Inflater;
specialinvoke v3.<com.jcraft.jzlib.Inflater: void <init>()>();
v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z> = v3;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "wrapper");
v4 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v5 = staticinvoke <io.netty.handler.codec.compression.ZlibUtil: com.jcraft.jzlib.JZlib$WrapperType convertWrapperType(io.netty.handler.codec.compression.ZlibWrapper)>(v1);
v6 = virtualinvoke v4.<com.jcraft.jzlib.Inflater: int init(com.jcraft.jzlib.JZlib$WrapperType)>(v5);
if v6 == 0 goto label1;
v7 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Inflater,java.lang.String,int)>(v7, "initialization failure", v6);
label1:
return;
}
public void <init>(byte[])
{
byte[] v1;
io.netty.handler.codec.compression.JZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: byte[];
specialinvoke v0.<io.netty.handler.codec.compression.JZlibDecoder: void <init>(byte[],int)>(v1, 0);
return;
}
public void <init>(byte[], int)
{
byte[] v1;
io.netty.handler.codec.compression.JZlibDecoder v0;
com.jcraft.jzlib.Inflater v3, v5, v8;
com.jcraft.jzlib.JZlib$WrapperType v6;
int v2, v7;
java.lang.Object v4;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
specialinvoke v0.<io.netty.handler.codec.compression.ZlibDecoder: void <init>(int)>(v2);
v3 = new com.jcraft.jzlib.Inflater;
specialinvoke v3.<com.jcraft.jzlib.Inflater: void <init>()>();
v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "dictionary");
v0.<io.netty.handler.codec.compression.JZlibDecoder: byte[] dictionary> = v4;
v5 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v6 = <com.jcraft.jzlib.JZlib: com.jcraft.jzlib.JZlib$WrapperType W_ZLIB>;
v7 = virtualinvoke v5.<com.jcraft.jzlib.Inflater: int inflateInit(com.jcraft.jzlib.JZlib$WrapperType)>(v6);
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Inflater,java.lang.String,int)>(v8, "initialization failure", v7);
label1:
return;
}
public boolean isClosed()
{
io.netty.handler.codec.compression.JZlibDecoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 = v0.<io.netty.handler.codec.compression.JZlibDecoder: boolean finished>;
return v1;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, java.util.List) throws java.lang.Exception
{
byte[] v10, v15, v29, v43, v46, v47;
java.lang.Throwable v59, v66;
io.netty.handler.codec.compression.JZlibDecoder v0;
boolean v4, v58, v63, v8;
java.util.List v3;
com.jcraft.jzlib.Inflater v11, v17, v18, v19, v23, v26, v28, v30, v34, v36, v38, v44, v45, v50, v51, v52, v54, v55, v60, v64, v65, v67, v68, v7, v9;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v22;
int v12, v13, v14, v16, v20, v21, v24, v25, v27, v31, v32, v33, v35, v37, v39, v40, v41, v42, v48, v49, v5, v53, v56, v57, v6, v61, v62;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: java.util.List;
v4 = v0.<io.netty.handler.codec.compression.JZlibDecoder: boolean finished>;
if v4 == 0 goto label01;
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v5);
return;
label01:
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v6 != 0 goto label02;
return;
label02:
v7 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v7.<com.jcraft.jzlib.Inflater: int avail_in> = v6;
v8 = virtualinvoke v2.<io.netty.buffer.ByteBuf: boolean hasArray()>();
if v8 == 0 goto label03;
v9 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v10 = virtualinvoke v2.<io.netty.buffer.ByteBuf: byte[] array()>();
v9.<com.jcraft.jzlib.Inflater: byte[] next_in> = v10;
v11 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v12 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v13 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
v14 = v12 + v13;
v11.<com.jcraft.jzlib.Inflater: int next_in_index> = v14;
goto label04;
label03:
v15 = newarray (byte)[v6];
v16 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf getBytes(int,byte[])>(v16, v15);
v17 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v17.<com.jcraft.jzlib.Inflater: byte[] next_in> = v15;
v18 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v18.<com.jcraft.jzlib.Inflater: int next_in_index> = 0;
label04:
v19 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v20 = v19.<com.jcraft.jzlib.Inflater: int next_in_index>;
v21 = v6 << 1;
v22 = virtualinvoke v0.<io.netty.handler.codec.compression.JZlibDecoder: io.netty.buffer.ByteBuf prepareDecompressBuffer(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,int)>(v1, null, v21);
label05:
v23 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v24 = v23.<com.jcraft.jzlib.Inflater: int avail_in>;
v25 = v24 << 1;
v22 = virtualinvoke v0.<io.netty.handler.codec.compression.JZlibDecoder: io.netty.buffer.ByteBuf prepareDecompressBuffer(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,int)>(v1, v22, v25);
v26 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v27 = virtualinvoke v22.<io.netty.buffer.ByteBuf: int writableBytes()>();
v26.<com.jcraft.jzlib.Inflater: int avail_out> = v27;
v28 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v29 = virtualinvoke v22.<io.netty.buffer.ByteBuf: byte[] array()>();
v28.<com.jcraft.jzlib.Inflater: byte[] next_out> = v29;
v30 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v31 = virtualinvoke v22.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v32 = virtualinvoke v22.<io.netty.buffer.ByteBuf: int writerIndex()>();
v33 = v31 + v32;
v30.<com.jcraft.jzlib.Inflater: int next_out_index> = v33;
v34 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v35 = v34.<com.jcraft.jzlib.Inflater: int next_out_index>;
v36 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v37 = virtualinvoke v36.<com.jcraft.jzlib.Inflater: int inflate(int)>(2);
v38 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v39 = v38.<com.jcraft.jzlib.Inflater: int next_out_index>;
v40 = v39 - v35;
if v40 <= 0 goto label06;
v41 = virtualinvoke v22.<io.netty.buffer.ByteBuf: int writerIndex()>();
v42 = v41 + v40;
virtualinvoke v22.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writerIndex(int)>(v42);
label06:
tableswitch(v37)
{
case -5: goto label10;
case -4: goto label11;
case -3: goto label11;
case -2: goto label11;
case -1: goto label11;
case 0: goto label05;
case 1: goto label09;
case 2: goto label07;
default: goto label11;
};
label07:
v43 = v0.<io.netty.handler.codec.compression.JZlibDecoder: byte[] dictionary>;
if v43 != null goto label08;
v44 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Inflater,java.lang.String,int)>(v44, "decompression failure", v37);
goto label05;
label08:
v45 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v46 = v0.<io.netty.handler.codec.compression.JZlibDecoder: byte[] dictionary>;
v47 = v0.<io.netty.handler.codec.compression.JZlibDecoder: byte[] dictionary>;
v48 = lengthof v47;
v49 = virtualinvoke v45.<com.jcraft.jzlib.Inflater: int inflateSetDictionary(byte[],int)>(v46, v48);
if v49 == 0 goto label05;
v50 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Inflater,java.lang.String,int)>(v50, "failed to set the dictionary", v49);
goto label05;
label09:
v0.<io.netty.handler.codec.compression.JZlibDecoder: boolean finished> = 1;
v51 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
virtualinvoke v51.<com.jcraft.jzlib.Inflater: int inflateEnd()>();
goto label12;
label10:
v52 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v53 = v52.<com.jcraft.jzlib.Inflater: int avail_in>;
if v53 > 0 goto label05;
goto label12;
label11:
v54 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
staticinvoke <io.netty.handler.codec.compression.ZlibUtil: void fail(com.jcraft.jzlib.Inflater,java.lang.String,int)>(v54, "decompression failure", v37);
goto label05;
label12:
v55 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v56 = v55.<com.jcraft.jzlib.Inflater: int next_in_index>;
v57 = v56 - v20;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v57);
v58 = virtualinvoke v22.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v58 == 0 goto label13;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v22);
goto label17;
label13:
virtualinvoke v22.<io.netty.buffer.ByteBuf: boolean release()>();
goto label17;
label14:
v59 := @caughtexception;
v60 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v61 = v60.<com.jcraft.jzlib.Inflater: int next_in_index>;
v62 = v61 - v20;
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf skipBytes(int)>(v62);
v63 = virtualinvoke v22.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v63 == 0 goto label15;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v22);
goto label16;
label15:
virtualinvoke v22.<io.netty.buffer.ByteBuf: boolean release()>();
label16:
throw v59;
label17:
v64 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v64.<com.jcraft.jzlib.Inflater: byte[] next_in> = null;
v65 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v65.<com.jcraft.jzlib.Inflater: byte[] next_out> = null;
goto label19;
label18:
v66 := @caughtexception;
v67 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v67.<com.jcraft.jzlib.Inflater: byte[] next_in> = null;
v68 = v0.<io.netty.handler.codec.compression.JZlibDecoder: com.jcraft.jzlib.Inflater z>;
v68.<com.jcraft.jzlib.Inflater: byte[] next_out> = null;
throw v66;
label19:
return;
catch java.lang.Throwable from label05 to label12 with label14;
catch java.lang.Throwable from label02 to label17 with label18;
}
protected void decompressionBufferExhausted(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.compression.JZlibDecoder v0;
v0 := @this: io.netty.handler.codec.compression.JZlibDecoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v0.<io.netty.handler.codec.compression.JZlibDecoder: boolean finished> = 1;
return;
}
}