public class io.netty.handler.codec.compression.Lz4FrameEncoder extends io.netty.handler.codec.MessageToByteEncoder
{
static final int DEFAULT_MAX_ENCODE_SIZE;
private final int blockSize;
private final net.jpountz.lz4.LZ4Compressor compressor;
private final io.netty.handler.codec.compression.ByteBufChecksum checksum;
private final int compressionLevel;
private io.netty.buffer.ByteBuf buffer;
private final int maxEncodeSize;
private volatile boolean finished;
private volatile io.netty.channel.ChannelHandlerContext ctx;
public void <init>()
{
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: void <init>(boolean)>(0);
return;
}
public void <init>(boolean)
{
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.handler.codec.compression.Lz4XXHash32 v3;
net.jpountz.lz4.LZ4Factory v2;
boolean v1;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: boolean;
v2 = staticinvoke <net.jpountz.lz4.LZ4Factory: net.jpountz.lz4.LZ4Factory fastestInstance()>();
v3 = new io.netty.handler.codec.compression.Lz4XXHash32;
specialinvoke v3.<io.netty.handler.codec.compression.Lz4XXHash32: void <init>(int)>(-1756908916);
specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: void <init>(net.jpountz.lz4.LZ4Factory,boolean,int,java.util.zip.Checksum)>(v2, v1, 65536, v3);
return;
}
public void <init>(net.jpountz.lz4.LZ4Factory, boolean, int, java.util.zip.Checksum)
{
java.util.zip.Checksum v4;
int v3;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
net.jpountz.lz4.LZ4Factory v1;
boolean v2;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: net.jpountz.lz4.LZ4Factory;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 := @parameter3: java.util.zip.Checksum;
specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: void <init>(net.jpountz.lz4.LZ4Factory,boolean,int,java.util.zip.Checksum,int)>(v1, v2, v3, v4, 2147483647);
return;
}
public void <init>(net.jpountz.lz4.LZ4Factory, boolean, int, java.util.zip.Checksum, int)
{
net.jpountz.lz4.LZ4Compressor v6;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
net.jpountz.lz4.LZ4Factory v1;
io.netty.handler.codec.compression.ByteBufChecksum v7;
java.util.zip.Checksum v4;
int v3, v5, v8, v9;
boolean v2;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: net.jpountz.lz4.LZ4Factory;
v2 := @parameter1: boolean;
v3 := @parameter2: int;
v4 := @parameter3: java.util.zip.Checksum;
v5 := @parameter4: int;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "factory");
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v4, "checksum");
if v2 == 0 goto label1;
v6 = virtualinvoke v1.<net.jpountz.lz4.LZ4Factory: net.jpountz.lz4.LZ4Compressor highCompressor()>();
goto label2;
label1:
v6 = virtualinvoke v1.<net.jpountz.lz4.LZ4Factory: net.jpountz.lz4.LZ4Compressor fastCompressor()>();
label2:
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: net.jpountz.lz4.LZ4Compressor compressor> = v6;
v7 = staticinvoke <io.netty.handler.codec.compression.ByteBufChecksum: io.netty.handler.codec.compression.ByteBufChecksum wrapChecksum(java.util.zip.Checksum)>(v4);
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.handler.codec.compression.ByteBufChecksum checksum> = v7;
v8 = staticinvoke <io.netty.handler.codec.compression.Lz4FrameEncoder: int compressionLevel(int)>(v3);
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int compressionLevel> = v8;
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int blockSize> = v3;
v9 = staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositive(int,java.lang.String)>(v5, "maxEncodeSize");
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int maxEncodeSize> = v9;
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: boolean finished> = 0;
return;
}
private static int compressionLevel(int)
{
java.lang.Object[] v2;
java.lang.IllegalArgumentException v1;
java.lang.Integer v3, v4, v5;
int v0, v10, v11, v7, v8, v9;
java.lang.String v6;
v0 := @parameter0: int;
if v0 < 64 goto label1;
if v0 <= 33554432 goto label2;
label1:
v1 = new java.lang.IllegalArgumentException;
v2 = newarray (java.lang.Object)[3];
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v2[0] = v3;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(64);
v2[1] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(33554432);
v2[2] = v5;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("blockSize: %d (expected: %d-%d)", v2);
specialinvoke v1.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
throw v1;
label2:
v7 = v0 - 1;
v8 = staticinvoke <java.lang.Integer: int numberOfLeadingZeros(int)>(v7);
v9 = 32 - v8;
v10 = v9 - 10;
v11 = staticinvoke <java.lang.Math: int max(int,int)>(0, v10);
return v11;
}
protected io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, boolean)
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v4;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
boolean v3;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: boolean;
v4 = specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean,boolean)>(v1, v2, v3, 1);
return v4;
}
private io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, boolean, boolean)
{
io.netty.handler.codec.EncoderException v10, v17;
net.jpountz.lz4.LZ4Compressor v13;
java.lang.Object[] v18;
io.netty.buffer.ByteBufAllocator v25, v27;
java.lang.Integer v19, v21;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v24, v26, v28, v7;
int v11, v12, v14, v15, v16, v20, v23, v5, v6, v8, v9;
java.lang.String v22;
boolean v3, v4;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
v5 = 0;
v6 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v7 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v8 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int readableBytes()>();
v9 = v6 + v8;
if v9 >= 0 goto label1;
v10 = new io.netty.handler.codec.EncoderException;
specialinvoke v10.<io.netty.handler.codec.EncoderException: void <init>(java.lang.String)>("too much data to allocate a buffer for compression");
throw v10;
label1:
if v9 <= 0 goto label2;
v11 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int blockSize>;
v12 = staticinvoke <java.lang.Math: int min(int,int)>(v11, v9);
v9 = v9 - v12;
v13 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: net.jpountz.lz4.LZ4Compressor compressor>;
v14 = virtualinvoke v13.<net.jpountz.lz4.LZ4Compressor: int maxCompressedLength(int)>(v12);
v15 = v14 + 21;
v5 = v5 + v15;
goto label1;
label2:
v16 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int maxEncodeSize>;
if v5 > v16 goto label3;
if 0 <= v5 goto label4;
label3:
v17 = new io.netty.handler.codec.EncoderException;
v18 = newarray (java.lang.Object)[2];
v19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v5);
v18[0] = v19;
v20 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int maxEncodeSize>;
v21 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v20);
v18[1] = v21;
v22 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("requested encode buffer size (%d bytes) exceeds the maximum allowable size (%d bytes)", v18);
specialinvoke v17.<io.netty.handler.codec.EncoderException: void <init>(java.lang.String)>(v22);
throw v17;
label4:
if v4 == 0 goto label5;
v23 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int blockSize>;
if v5 >= v23 goto label5;
v24 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
return v24;
label5:
if v3 == 0 goto label6;
v25 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v26 = interfaceinvoke v25.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf ioBuffer(int,int)>(v5, v5);
return v26;
label6:
v27 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v28 = interfaceinvoke v27.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int,int)>(v5, v5);
return v28;
}
protected void encode(io.netty.channel.ChannelHandlerContext, io.netty.buffer.ByteBuf, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
java.lang.IllegalStateException v7;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v3, v8;
int v10, v11, v5, v9;
boolean v12, v4, v6;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: boolean finished>;
if v4 == 0 goto label2;
v5 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
v6 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isWritable(int)>(v5);
if v6 != 0 goto label1;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String)>("encode finished and not enough space to write remaining data");
throw v7;
label1:
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v2);
return;
label2:
v8 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
label3:
v9 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v9 <= 0 goto label4;
v10 = virtualinvoke v8.<io.netty.buffer.ByteBuf: int writableBytes()>();
v11 = staticinvoke <java.lang.Math: int min(int,int)>(v9, v10);
virtualinvoke v2.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readBytes(io.netty.buffer.ByteBuf,int)>(v8, v11);
v12 = virtualinvoke v8.<io.netty.buffer.ByteBuf: boolean isWritable()>();
if v12 != 0 goto label3;
specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: void flushBufferedData(io.netty.buffer.ByteBuf)>(v3);
goto label3;
label4:
return;
}
private void flushBufferedData(io.netty.buffer.ByteBuf)
{
net.jpountz.lz4.LZ4Compressor v11, v20;
io.netty.handler.codec.compression.CompressionException v28;
java.nio.ByteBuffer v18, v24;
byte v40;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
java.lang.Throwable v27;
long v10;
io.netty.buffer.ByteBuf v1, v2, v21, v22, v30, v31, v39, v6, v7;
int v12, v13, v14, v15, v16, v17, v19, v23, v25, v26, v29, v3, v32, v33, v34, v35, v36, v37, v38, v8;
io.netty.handler.codec.compression.ByteBufChecksum v4, v5, v9;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v3 = virtualinvoke v2.<io.netty.buffer.ByteBuf: int readableBytes()>();
if v3 != 0 goto label1;
return;
label1:
v4 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.handler.codec.compression.ByteBufChecksum checksum>;
virtualinvoke v4.<io.netty.handler.codec.compression.ByteBufChecksum: void reset()>();
v5 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.handler.codec.compression.ByteBufChecksum checksum>;
v6 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v7 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v8 = virtualinvoke v7.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v5.<io.netty.handler.codec.compression.ByteBufChecksum: void update(io.netty.buffer.ByteBuf,int,int)>(v6, v8, v3);
v9 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.handler.codec.compression.ByteBufChecksum checksum>;
v10 = virtualinvoke v9.<io.netty.handler.codec.compression.ByteBufChecksum: long getValue()>();
v11 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: net.jpountz.lz4.LZ4Compressor compressor>;
v12 = virtualinvoke v11.<net.jpountz.lz4.LZ4Compressor: int maxCompressedLength(int)>(v3);
v13 = v12 + 21;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf ensureWritable(int)>(v13);
v14 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int writerIndex()>();
label2:
v15 = v14 + 21;
v16 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int writableBytes()>();
v17 = v16 - 21;
v18 = virtualinvoke v1.<io.netty.buffer.ByteBuf: java.nio.ByteBuffer internalNioBuffer(int,int)>(v15, v17);
v19 = virtualinvoke v18.<java.nio.ByteBuffer: int position()>();
v20 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: net.jpountz.lz4.LZ4Compressor compressor>;
v21 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v22 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v23 = virtualinvoke v22.<io.netty.buffer.ByteBuf: int readerIndex()>();
v24 = virtualinvoke v21.<io.netty.buffer.ByteBuf: java.nio.ByteBuffer internalNioBuffer(int,int)>(v23, v3);
virtualinvoke v20.<net.jpountz.lz4.LZ4Compressor: void compress(java.nio.ByteBuffer,java.nio.ByteBuffer)>(v24, v18);
v25 = virtualinvoke v18.<java.nio.ByteBuffer: int position()>();
v26 = v25 - v19;
label3:
goto label5;
label4:
v27 := @caughtexception;
v28 = new io.netty.handler.codec.compression.CompressionException;
specialinvoke v28.<io.netty.handler.codec.compression.CompressionException: void <init>(java.lang.Throwable)>(v27);
throw v28;
label5:
if v26 < v3 goto label6;
v26 = v3;
v29 = v14 + 21;
v30 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v31 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v32 = virtualinvoke v31.<io.netty.buffer.ByteBuf: int readerIndex()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setBytes(int,io.netty.buffer.ByteBuf,int,int)>(v29, v30, v32, v3);
label6:
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setLong(int,long)>(v14, 5501767354678207339L);
v33 = v14 + 8;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setByte(int,int)>(v33, v40);
v34 = v14 + 9;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setIntLE(int,int)>(v34, v26);
v35 = v14 + 13;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setIntLE(int,int)>(v35, v3);
v36 = v14 + 17;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setIntLE(int,int)>(v36, v10);
v37 = v14 + 21;
v38 = v37 + v26;
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writerIndex(int)>(v38);
v39 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v39.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf clear()>();
return;
catch net.jpountz.lz4.LZ4Exception from label2 to label3 with label4;
}
public void flush(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v3, v5, v7;
boolean v4, v6;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v4 = virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v4 == 0 goto label1;
v5 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
v6 = virtualinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: boolean isPreferDirect()>();
v7 = specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf allocateBuffer(io.netty.channel.ChannelHandlerContext,io.netty.buffer.ByteBuf,boolean,boolean)>(v1, v5, v6, 0);
specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: void flushBufferedData(io.netty.buffer.ByteBuf)>(v7);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object)>(v7);
label1:
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelHandlerContext flush()>();
return;
}
private io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise)
{
net.jpountz.lz4.LZ4Compressor v5;
io.netty.buffer.ByteBufAllocator v4;
io.netty.channel.ChannelHandlerContext v1;
byte v18;
io.netty.buffer.ByteBuf v10, v6;
io.netty.channel.ChannelPromise v2;
int v11, v12, v13, v14, v15, v16, v7, v8, v9;
boolean v3;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.channel.ChannelFuture v17;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: boolean finished>;
if v3 == 0 goto label1;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
return v2;
label1:
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: boolean finished> = 1;
v4 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
v5 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: net.jpountz.lz4.LZ4Compressor compressor>;
v6 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
v7 = virtualinvoke v6.<io.netty.buffer.ByteBuf: int readableBytes()>();
v8 = virtualinvoke v5.<net.jpountz.lz4.LZ4Compressor: int maxCompressedLength(int)>(v7);
v9 = v8 + 21;
v10 = interfaceinvoke v4.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf heapBuffer(int)>(v9);
specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: void flushBufferedData(io.netty.buffer.ByteBuf)>(v10);
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf ensureWritable(int)>(21);
v11 = virtualinvoke v10.<io.netty.buffer.ByteBuf: int writerIndex()>();
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setLong(int,long)>(v11, 5501767354678207339L);
v12 = v11 + 8;
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setByte(int,int)>(v12, v18);
v13 = v11 + 9;
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v13, 0);
v14 = v11 + 13;
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v14, 0);
v15 = v11 + 17;
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf setInt(int,int)>(v15, 0);
v16 = v11 + 21;
virtualinvoke v10.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writerIndex(int)>(v16);
v17 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object,io.netty.channel.ChannelPromise)>(v10, v2);
return v17;
}
public boolean isClosed()
{
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: boolean finished>;
return v1;
}
public io.netty.channel.ChannelFuture close()
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.channel.ChannelFuture v3;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 = specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelHandlerContext ctx()>();
v2 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)>(v2);
return v3;
}
public io.netty.channel.ChannelFuture close(io.netty.channel.ChannelPromise)
{
io.netty.util.concurrent.EventExecutor v3;
io.netty.channel.ChannelHandlerContext v2;
io.netty.channel.ChannelPromise v1;
io.netty.handler.codec.compression.Lz4FrameEncoder$1 v6;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
boolean v4;
io.netty.channel.ChannelFuture v5;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelPromise;
v2 = specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelHandlerContext ctx()>();
v3 = interfaceinvoke v2.<io.netty.channel.ChannelHandlerContext: io.netty.util.concurrent.EventExecutor executor()>();
v4 = interfaceinvoke v3.<io.netty.util.concurrent.EventExecutor: boolean inEventLoop()>();
if v4 == 0 goto label1;
v5 = specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v2, v1);
return v5;
label1:
v6 = new io.netty.handler.codec.compression.Lz4FrameEncoder$1;
specialinvoke v6.<io.netty.handler.codec.compression.Lz4FrameEncoder$1: void <init>(io.netty.handler.codec.compression.Lz4FrameEncoder,io.netty.channel.ChannelPromise)>(v0, v1);
interfaceinvoke v3.<io.netty.util.concurrent.EventExecutor: void execute(java.lang.Runnable)>(v6);
return v1;
}
public void close(io.netty.channel.ChannelHandlerContext, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v2, v3;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.channel.ChannelFuture v4;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v4 = specialinvoke v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelFuture finishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelPromise)>(v1, v3);
staticinvoke <io.netty.handler.codec.compression.EncoderUtil: void closeAfterFinishEncode(io.netty.channel.ChannelHandlerContext,io.netty.channel.ChannelFuture,io.netty.channel.ChannelPromise)>(v1, v4, v2);
return;
}
private io.netty.channel.ChannelHandlerContext ctx()
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
java.lang.IllegalStateException v2;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelHandlerContext ctx>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("not added to a pipeline");
throw v2;
label1:
return v1;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext)
{
byte[] v3;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v4, v5;
int v2;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.channel.ChannelHandlerContext ctx> = v1;
v2 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: int blockSize>;
v3 = newarray (byte)[v2];
v4 = staticinvoke <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf wrappedBuffer(byte[])>(v3);
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer> = v4;
v5 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v5.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf clear()>();
return;
}
public void handlerRemoved(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v2, v3;
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.handler.codec.MessageToByteEncoder: void handlerRemoved(io.netty.channel.ChannelHandlerContext)>(v1);
v2 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
if v2 == null goto label1;
v3 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
virtualinvoke v3.<io.netty.buffer.ByteBuf: boolean release()>();
v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer> = null;
label1:
return;
}
final io.netty.buffer.ByteBuf getBackingBuffer()
{
io.netty.handler.codec.compression.Lz4FrameEncoder v0;
io.netty.buffer.ByteBuf v1;
v0 := @this: io.netty.handler.codec.compression.Lz4FrameEncoder;
v1 = v0.<io.netty.handler.codec.compression.Lz4FrameEncoder: io.netty.buffer.ByteBuf buffer>;
return v1;
}
}