public final class io.netty.handler.codec.compression.Zstd extends java.lang.Object
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final java.lang.Throwable cause;
public static boolean isAvailable()
{
java.lang.Throwable v0;
boolean v1;
v0 = <io.netty.handler.codec.compression.Zstd: java.lang.Throwable cause>;
if v0 != null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
public static void ensureAvailability() throws java.lang.Throwable
{
java.lang.Throwable v0, v1;
v0 = <io.netty.handler.codec.compression.Zstd: java.lang.Throwable cause>;
if v0 == null goto label1;
v1 = <io.netty.handler.codec.compression.Zstd: java.lang.Throwable cause>;
throw v1;
label1:
return;
}
public static java.lang.Throwable cause()
{
java.lang.Throwable v0;
v0 = <io.netty.handler.codec.compression.Zstd: java.lang.Throwable cause>;
return v0;
}
private void <init>()
{
io.netty.handler.codec.compression.Zstd v0;
v0 := @this: io.netty.handler.codec.compression.Zstd;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.lang.Throwable v1, v5;
io.netty.util.internal.logging.InternalLogger v0, v4, v6;
java.lang.ClassNotFoundException v3;
java.lang.ClassLoader v2;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/handler/codec/compression/Zstd;");
<io.netty.handler.codec.compression.Zstd: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = null;
label1:
v2 = staticinvoke <io.netty.util.internal.PlatformDependent: java.lang.ClassLoader getClassLoader(java.lang.Class)>(class "Lio/netty/handler/codec/compression/Zstd;");
staticinvoke <java.lang.Class: java.lang.Class forName(java.lang.String,boolean,java.lang.ClassLoader)>("com.github.luben.zstd.Zstd", 0, v2);
label2:
goto label5;
label3:
v3 := @caughtexception;
v1 = v3;
v4 = <io.netty.handler.codec.compression.Zstd: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v4.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("zstd-jni not in the classpath; Zstd support will be unavailable.");
goto label5;
label4:
v5 := @caughtexception;
v1 = v5;
v6 = <io.netty.handler.codec.compression.Zstd: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v6.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("Failed to load zstd-jni; Zstd support will be unavailable.", v5);
label5:
<io.netty.handler.codec.compression.Zstd: java.lang.Throwable cause> = v1;
return;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
catch java.lang.Throwable from label1 to label2 with label4;
}
}