public class io.netty.handler.codec.dns.DatagramDnsResponseDecoder extends io.netty.handler.codec.MessageToMessageDecoder
{
private final io.netty.handler.codec.dns.DnsResponseDecoder responseDecoder;
public void <init>()
{
io.netty.handler.codec.dns.DatagramDnsResponseDecoder v0;
io.netty.handler.codec.dns.DnsRecordDecoder v1;
v0 := @this: io.netty.handler.codec.dns.DatagramDnsResponseDecoder;
v1 = <io.netty.handler.codec.dns.DnsRecordDecoder: io.netty.handler.codec.dns.DnsRecordDecoder DEFAULT>;
specialinvoke v0.<io.netty.handler.codec.dns.DatagramDnsResponseDecoder: void <init>(io.netty.handler.codec.dns.DnsRecordDecoder)>(v1);
return;
}
public void <init>(io.netty.handler.codec.dns.DnsRecordDecoder)
{
io.netty.handler.codec.dns.DatagramDnsResponseDecoder v0;
io.netty.handler.codec.dns.DatagramDnsResponseDecoder$1 v2;
io.netty.handler.codec.dns.DnsRecordDecoder v1;
v0 := @this: io.netty.handler.codec.dns.DatagramDnsResponseDecoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecordDecoder;
specialinvoke v0.<io.netty.handler.codec.MessageToMessageDecoder: void <init>()>();
v2 = new io.netty.handler.codec.dns.DatagramDnsResponseDecoder$1;
specialinvoke v2.<io.netty.handler.codec.dns.DatagramDnsResponseDecoder$1: void <init>(io.netty.handler.codec.dns.DatagramDnsResponseDecoder,io.netty.handler.codec.dns.DnsRecordDecoder)>(v0, v1);
v0.<io.netty.handler.codec.dns.DatagramDnsResponseDecoder: io.netty.handler.codec.dns.DnsResponseDecoder responseDecoder> = v2;
return;
}
protected void decode(io.netty.channel.ChannelHandlerContext, io.netty.channel.socket.DatagramPacket, java.util.List) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.dns.DnsResponse v4;
java.lang.IndexOutOfBoundsException v5;
java.util.List v3;
io.netty.channel.socket.DatagramPacket v2;
io.netty.handler.codec.dns.DatagramDnsResponseDecoder v0;
io.netty.handler.codec.CorruptedFrameException v6;
v0 := @this: io.netty.handler.codec.dns.DatagramDnsResponseDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.socket.DatagramPacket;
v3 := @parameter2: java.util.List;
label1:
v4 = virtualinvoke v0.<io.netty.handler.codec.dns.DatagramDnsResponseDecoder: io.netty.handler.codec.dns.DnsResponse decodeResponse(io.netty.channel.ChannelHandlerContext,io.netty.channel.socket.DatagramPacket)>(v1, v2);
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v4);
label2:
goto label4;
label3:
v5 := @caughtexception;
v6 = new io.netty.handler.codec.CorruptedFrameException;
specialinvoke v6.<io.netty.handler.codec.CorruptedFrameException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to decode response", v5);
throw v6;
label4:
return;
catch java.lang.IndexOutOfBoundsException from label1 to label2 with label3;
}
protected io.netty.handler.codec.dns.DnsResponse decodeResponse(io.netty.channel.ChannelHandlerContext, io.netty.channel.socket.DatagramPacket) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsResponse v7;
java.net.SocketAddress v4, v5;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.socket.DatagramPacket v2;
io.netty.handler.codec.dns.DatagramDnsResponseDecoder v0;
java.lang.Object v6;
io.netty.handler.codec.dns.DnsResponseDecoder v3;
v0 := @this: io.netty.handler.codec.dns.DatagramDnsResponseDecoder;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.channel.socket.DatagramPacket;
v3 = v0.<io.netty.handler.codec.dns.DatagramDnsResponseDecoder: io.netty.handler.codec.dns.DnsResponseDecoder responseDecoder>;
v4 = virtualinvoke v2.<io.netty.channel.socket.DatagramPacket: java.net.SocketAddress sender()>();
v5 = virtualinvoke v2.<io.netty.channel.socket.DatagramPacket: java.net.SocketAddress recipient()>();
v6 = virtualinvoke v2.<io.netty.channel.socket.DatagramPacket: java.lang.Object content()>();
v7 = virtualinvoke v3.<io.netty.handler.codec.dns.DnsResponseDecoder: io.netty.handler.codec.dns.DnsResponse decode(java.net.SocketAddress,java.net.SocketAddress,io.netty.buffer.ByteBuf)>(v4, v5, v6);
return v7;
}
}