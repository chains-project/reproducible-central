final class io.netty.handler.codec.dns.DnsQueryEncoder extends java.lang.Object
{
private final io.netty.handler.codec.dns.DnsRecordEncoder recordEncoder;
void <init>(io.netty.handler.codec.dns.DnsRecordEncoder)
{
java.lang.Object v2;
io.netty.handler.codec.dns.DnsQueryEncoder v0;
io.netty.handler.codec.dns.DnsRecordEncoder v1;
v0 := @this: io.netty.handler.codec.dns.DnsQueryEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsRecordEncoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "recordEncoder");
v0.<io.netty.handler.codec.dns.DnsQueryEncoder: io.netty.handler.codec.dns.DnsRecordEncoder recordEncoder> = v2;
return;
}
void encode(io.netty.handler.codec.dns.DnsQuery, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsQueryEncoder v0;
io.netty.handler.codec.dns.DnsSection v3;
io.netty.handler.codec.dns.DnsQuery v1;
v0 := @this: io.netty.handler.codec.dns.DnsQueryEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsQuery;
v2 := @parameter1: io.netty.buffer.ByteBuf;
staticinvoke <io.netty.handler.codec.dns.DnsQueryEncoder: void encodeHeader(io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf)>(v1, v2);
specialinvoke v0.<io.netty.handler.codec.dns.DnsQueryEncoder: void encodeQuestions(io.netty.handler.codec.dns.DnsQuery,io.netty.buffer.ByteBuf)>(v1, v2);
v3 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
specialinvoke v0.<io.netty.handler.codec.dns.DnsQueryEncoder: void encodeRecords(io.netty.handler.codec.dns.DnsQuery,io.netty.handler.codec.dns.DnsSection,io.netty.buffer.ByteBuf)>(v1, v3, v2);
return;
}
private static void encodeHeader(io.netty.handler.codec.dns.DnsQuery, io.netty.buffer.ByteBuf)
{
short v5;
io.netty.handler.codec.dns.DnsOpCode v3;
byte v4;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.dns.DnsSection v11, v9;
int v10, v12, v2, v6, v7;
io.netty.handler.codec.dns.DnsQuery v0;
boolean v8;
v0 := @parameter0: io.netty.handler.codec.dns.DnsQuery;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsQuery: int id()>();
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v2);
v3 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsOpCode opCode()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.dns.DnsOpCode: byte byteValue()>();
v5 = v4 & 255;
v6 = v5 << 14;
v7 = 0 | v6;
v8 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsQuery: boolean isRecursionDesired()>();
if v8 == 0 goto label1;
v7 = v7 | 256;
label1:
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v7);
v9 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v10 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsQuery: int count(io.netty.handler.codec.dns.DnsSection)>(v9);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v10);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(0);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(0);
v11 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection ADDITIONAL>;
v12 = interfaceinvoke v0.<io.netty.handler.codec.dns.DnsQuery: int count(io.netty.handler.codec.dns.DnsSection)>(v11);
virtualinvoke v1.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeShort(int)>(v12);
return;
}
private void encodeQuestions(io.netty.handler.codec.dns.DnsQuery, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v8;
io.netty.handler.codec.dns.DnsRecordEncoder v6;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.dns.DnsQueryEncoder v0;
io.netty.handler.codec.dns.DnsSection v3, v7;
int v4, v5;
io.netty.handler.codec.dns.DnsQuery v1;
v0 := @this: io.netty.handler.codec.dns.DnsQueryEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsQuery;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: int count(io.netty.handler.codec.dns.DnsSection)>(v3);
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v0.<io.netty.handler.codec.dns.DnsQueryEncoder: io.netty.handler.codec.dns.DnsRecordEncoder recordEncoder>;
v7 = <io.netty.handler.codec.dns.DnsSection: io.netty.handler.codec.dns.DnsSection QUESTION>;
v8 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int)>(v7, v5);
interfaceinvoke v6.<io.netty.handler.codec.dns.DnsRecordEncoder: void encodeQuestion(io.netty.handler.codec.dns.DnsQuestion,io.netty.buffer.ByteBuf)>(v8, v2);
v5 = v5 + 1;
goto label1;
label2:
return;
}
private void encodeRecords(io.netty.handler.codec.dns.DnsQuery, io.netty.handler.codec.dns.DnsSection, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
io.netty.handler.codec.dns.DnsRecord v7;
io.netty.handler.codec.dns.DnsRecordEncoder v6;
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.dns.DnsQueryEncoder v0;
io.netty.handler.codec.dns.DnsSection v2;
int v4, v5;
io.netty.handler.codec.dns.DnsQuery v1;
v0 := @this: io.netty.handler.codec.dns.DnsQueryEncoder;
v1 := @parameter0: io.netty.handler.codec.dns.DnsQuery;
v2 := @parameter1: io.netty.handler.codec.dns.DnsSection;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: int count(io.netty.handler.codec.dns.DnsSection)>(v2);
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v0.<io.netty.handler.codec.dns.DnsQueryEncoder: io.netty.handler.codec.dns.DnsRecordEncoder recordEncoder>;
v7 = interfaceinvoke v1.<io.netty.handler.codec.dns.DnsQuery: io.netty.handler.codec.dns.DnsRecord recordAt(io.netty.handler.codec.dns.DnsSection,int)>(v2, v5);
interfaceinvoke v6.<io.netty.handler.codec.dns.DnsRecordEncoder: void encodeRecord(io.netty.handler.codec.dns.DnsRecord,io.netty.buffer.ByteBuf)>(v7, v3);
v5 = v5 + 1;
goto label1;
label2:
return;
}
}