public final enum class io.netty.handler.codec.haproxy.HAProxyTLV$Type extends java.lang.Enum
{
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_ALPN;
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_AUTHORITY;
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL;
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_VERSION;
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_CN;
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_NETNS;
public static final enum io.netty.handler.codec.haproxy.HAProxyTLV$Type OTHER;
private static final io.netty.handler.codec.haproxy.HAProxyTLV$Type[] $VALUES;
public static io.netty.handler.codec.haproxy.HAProxyTLV$Type[] values()
{
java.lang.Object v1;
io.netty.handler.codec.haproxy.HAProxyTLV$Type[] v0;
v0 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.haproxy.HAProxyTLV$Type valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/haproxy/HAProxyTLV$Type;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v0;
v0 := @this: io.netty.handler.codec.haproxy.HAProxyTLV$Type;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
public static io.netty.handler.codec.haproxy.HAProxyTLV$Type typeForByteValue(byte)
{
byte v0;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v1, v2, v3, v4, v5, v6, v7;
v0 := @parameter0: byte;
lookupswitch(v0)
{
case 1: goto label1;
case 2: goto label2;
case 32: goto label3;
case 33: goto label4;
case 34: goto label5;
case 48: goto label6;
default: goto label7;
};
label1:
v1 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_ALPN>;
return v1;
label2:
v2 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_AUTHORITY>;
return v2;
label3:
v3 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL>;
return v3;
label4:
v4 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_VERSION>;
return v4;
label5:
v5 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_CN>;
return v5;
label6:
v6 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_NETNS>;
return v6;
label7:
v7 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type OTHER>;
return v7;
}
public static byte byteValueForType(io.netty.handler.codec.haproxy.HAProxyTLV$Type)
{
io.netty.handler.codec.haproxy.HAProxyTLV$Type v0;
int[] v1;
int v2, v3;
java.lang.String v5;
java.lang.IllegalArgumentException v4;
v0 := @parameter0: io.netty.handler.codec.haproxy.HAProxyTLV$Type;
v1 = <io.netty.handler.codec.haproxy.HAProxyTLV$1: int[] $SwitchMap$io$netty$handler$codec$haproxy$HAProxyTLV$Type>;
v2 = virtualinvoke v0.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: int ordinal()>();
v3 = v1[v2];
tableswitch(v3)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label4;
case 5: goto label5;
case 6: goto label6;
default: goto label7;
};
label1:
return 1;
label2:
return 2;
label3:
return 32;
label4:
return 33;
label5:
return 34;
label6:
return 48;
label7:
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.haproxy.HAProxyTLV$Type)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unknown type: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
}
private static io.netty.handler.codec.haproxy.HAProxyTLV$Type[] $values()
{
io.netty.handler.codec.haproxy.HAProxyTLV$Type[] v0;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v1, v2, v3, v4, v5, v6, v7;
v0 = newarray (io.netty.handler.codec.haproxy.HAProxyTLV$Type)[7];
v1 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_ALPN>;
v0[0] = v1;
v2 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_AUTHORITY>;
v0[1] = v2;
v3 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL>;
v0[2] = v3;
v4 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_VERSION>;
v0[3] = v4;
v5 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_CN>;
v0[4] = v5;
v6 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_NETNS>;
v0[5] = v6;
v7 = <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type OTHER>;
v0[6] = v7;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.haproxy.HAProxyTLV$Type[] v7;
io.netty.handler.codec.haproxy.HAProxyTLV$Type v0, v1, v2, v3, v4, v5, v6;
v0 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v0.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("PP2_TYPE_ALPN", 0);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_ALPN> = v0;
v1 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v1.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("PP2_TYPE_AUTHORITY", 1);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_AUTHORITY> = v1;
v2 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v2.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("PP2_TYPE_SSL", 2);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL> = v2;
v3 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v3.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("PP2_TYPE_SSL_VERSION", 3);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_VERSION> = v3;
v4 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v4.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("PP2_TYPE_SSL_CN", 4);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_SSL_CN> = v4;
v5 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v5.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("PP2_TYPE_NETNS", 5);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type PP2_TYPE_NETNS> = v5;
v6 = new io.netty.handler.codec.haproxy.HAProxyTLV$Type;
specialinvoke v6.<io.netty.handler.codec.haproxy.HAProxyTLV$Type: void <init>(java.lang.String,int)>("OTHER", 6);
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type OTHER> = v6;
v7 = staticinvoke <io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type[] $values()>();
<io.netty.handler.codec.haproxy.HAProxyTLV$Type: io.netty.handler.codec.haproxy.HAProxyTLV$Type[] $VALUES> = v7;
return;
}
}