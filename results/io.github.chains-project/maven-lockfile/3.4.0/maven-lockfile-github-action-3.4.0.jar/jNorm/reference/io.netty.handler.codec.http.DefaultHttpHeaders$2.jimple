class io.netty.handler.codec.http.DefaultHttpHeaders$2 extends java.lang.Object implements java.util.Iterator
{
final java.util.Iterator val$itr;
final io.netty.handler.codec.http.DefaultHttpHeaders this$0;
void <init>(io.netty.handler.codec.http.DefaultHttpHeaders, java.util.Iterator)
{
io.netty.handler.codec.http.DefaultHttpHeaders$2 v0;
java.util.Iterator v2;
io.netty.handler.codec.http.DefaultHttpHeaders v1;
v0 := @this: io.netty.handler.codec.http.DefaultHttpHeaders$2;
v1 := @parameter0: io.netty.handler.codec.http.DefaultHttpHeaders;
v2 := @parameter1: java.util.Iterator;
v0.<io.netty.handler.codec.http.DefaultHttpHeaders$2: io.netty.handler.codec.http.DefaultHttpHeaders this$0> = v1;
v0.<io.netty.handler.codec.http.DefaultHttpHeaders$2: java.util.Iterator val$itr> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean hasNext()
{
io.netty.handler.codec.http.DefaultHttpHeaders$2 v0;
java.util.Iterator v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.DefaultHttpHeaders$2;
v1 = v0.<io.netty.handler.codec.http.DefaultHttpHeaders$2: java.util.Iterator val$itr>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
return v2;
}
public java.lang.String next()
{
java.util.Iterator v1;
java.lang.Object v2;
java.lang.String v3;
io.netty.handler.codec.http.DefaultHttpHeaders$2 v0;
v0 := @this: io.netty.handler.codec.http.DefaultHttpHeaders$2;
v1 = v0.<io.netty.handler.codec.http.DefaultHttpHeaders$2: java.util.Iterator val$itr>;
v2 = interfaceinvoke v1.<java.util.Iterator: java.lang.Object next()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
return v3;
}
public void remove()
{
io.netty.handler.codec.http.DefaultHttpHeaders$2 v0;
java.util.Iterator v1;
v0 := @this: io.netty.handler.codec.http.DefaultHttpHeaders$2;
v1 = v0.<io.netty.handler.codec.http.DefaultHttpHeaders$2: java.util.Iterator val$itr>;
interfaceinvoke v1.<java.util.Iterator: void remove()>();
return;
}
}