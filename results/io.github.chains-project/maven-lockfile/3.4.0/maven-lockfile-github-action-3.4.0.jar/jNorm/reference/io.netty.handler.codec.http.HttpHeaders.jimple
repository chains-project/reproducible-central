public abstract class io.netty.handler.codec.http.HttpHeaders extends java.lang.Object implements java.lang.Iterable
{
public static final io.netty.handler.codec.http.HttpHeaders EMPTY_HEADERS;
public static boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)
{
boolean v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isKeepAlive(io.netty.handler.codec.http.HttpMessage)>(v0);
return v1;
}
public static void setKeepAlive(io.netty.handler.codec.http.HttpMessage, boolean)
{
boolean v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: boolean;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setKeepAlive(io.netty.handler.codec.http.HttpMessage,boolean)>(v0, v1);
return;
}
public static java.lang.String getHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v2;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1, v3;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.String)>(v1);
return v3;
}
public static java.lang.String getHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v3;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v1);
return v3;
}
public static java.lang.String getHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1, v2, v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence,java.lang.String)>(v1, v2);
return v4;
}
public static java.lang.String getHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v2, v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.lang.String;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence,java.lang.String)>(v1, v2);
return v4;
}
public static void setHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.lang.Object)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Object v2;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Object;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)>(v1, v2);
return;
}
public static void setHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.lang.Object)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Object v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.lang.Object;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v1, v2);
return;
}
public static void setHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Iterable;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable)>(v1, v2);
return;
}
public static void setHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Iterable v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.lang.Iterable;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable)>(v1, v2);
return;
}
public static void addHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.lang.Object)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Object v2;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Object;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v1, v2);
return;
}
public static void addHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.lang.Object)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Object v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.lang.Object;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v1, v2);
return;
}
public static void removeHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.String v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.String)>(v1);
return;
}
public static void removeHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v1);
return;
}
public static void clearHeaders(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders clear()>();
return;
}
public static int getIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String)
{
int v2;
java.lang.String v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: int getIntHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence)>(v0, v1);
return v2;
}
public static int getIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
int v6;
java.lang.NumberFormatException v4;
java.lang.String v3, v5;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v1);
if v3 != null goto label1;
v4 = new java.lang.NumberFormatException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("header not found: \u0001");
specialinvoke v4.<java.lang.NumberFormatException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v3);
return v6;
}
public static int getIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, int)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
int v2, v4;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: int;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: int getInt(java.lang.CharSequence,int)>(v1, v2);
return v4;
}
public static int getIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, int)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
int v2, v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: int;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: int getInt(java.lang.CharSequence,int)>(v1, v2);
return v4;
}
public static void setIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, int)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
int v2;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: int;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v1, v2);
return;
}
public static void setIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, int)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
int v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: int;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence,int)>(v1, v2);
return;
}
public static void setIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Iterable;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable)>(v1, v2);
return;
}
public static void setIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Iterable v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.lang.Iterable;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable)>(v1, v2);
return;
}
public static void addIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, int)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
int v2;
java.lang.String v1;
java.lang.Integer v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: int;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v1, v4);
return;
}
public static void addIntHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, int)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
int v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: int;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence,int)>(v1, v2);
return;
}
public static java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String) throws java.text.ParseException
{
java.lang.String v1;
java.util.Date v2;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence)>(v0, v1);
return v2;
}
public static java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence) throws java.text.ParseException
{
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
java.util.Date v6;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v3, v5, v8;
java.text.ParseException v4, v7;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v1);
if v3 != null goto label1;
v4 = new java.text.ParseException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.CharSequence)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("header not found: \u0001");
specialinvoke v4.<java.text.ParseException: void <init>(java.lang.String,int)>(v5, 0);
throw v4;
label1:
v6 = staticinvoke <io.netty.handler.codec.DateFormatter: java.util.Date parseHttpDate(java.lang.CharSequence)>(v3);
if v6 != null goto label2;
v7 = new java.text.ParseException;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("header can\'t be parsed into a Date: \u0001");
specialinvoke v7.<java.text.ParseException: void <init>(java.lang.String,int)>(v8, 0);
throw v7;
label2:
return v6;
}
public static java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.util.Date)
{
java.util.Date v2, v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.Date;
v3 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date)>(v0, v1, v2);
return v3;
}
public static java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.util.Date)
{
java.lang.CharSequence v1;
java.util.Date v2, v4, v5;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v3;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.util.Date;
v3 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: java.lang.String getHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence)>(v0, v1);
v4 = staticinvoke <io.netty.handler.codec.DateFormatter: java.util.Date parseHttpDate(java.lang.CharSequence)>(v3);
if v4 == null goto label1;
v5 = v4;
goto label2;
label1:
v5 = v2;
label2:
return v5;
}
public static void setDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.util.Date)
{
java.lang.String v1;
java.util.Date v2;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.Date;
staticinvoke <io.netty.handler.codec.http.HttpHeaders: void setDateHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date)>(v0, v1, v2);
return;
}
public static void setDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.util.Date)
{
io.netty.handler.codec.http.HttpHeaders v3, v5;
java.lang.CharSequence v1;
java.util.Date v2;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.util.Date;
if v2 == null goto label1;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v4 = staticinvoke <io.netty.handler.codec.DateFormatter: java.lang.String format(java.util.Date)>(v2);
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v1, v4);
goto label2;
label1:
v5 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v5.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable)>(v1, null);
label2:
return;
}
public static void setDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v3;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Iterable;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable)>(v1, v2);
return;
}
public static void setDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.Iterable v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.lang.Iterable;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable)>(v1, v2);
return;
}
public static void addDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.String, java.util.Date)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.util.Date v2;
io.netty.handler.codec.http.HttpMessage v0;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.Date;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v1, v2);
return;
}
public static void addDateHeader(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence, java.util.Date)
{
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
java.util.Date v2;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: java.util.Date;
v3 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v1, v2);
return;
}
public static long getContentLength(io.netty.handler.codec.http.HttpMessage)
{
long v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = staticinvoke <io.netty.handler.codec.http.HttpUtil: long getContentLength(io.netty.handler.codec.http.HttpMessage)>(v0);
return v1;
}
public static long getContentLength(io.netty.handler.codec.http.HttpMessage, long)
{
long v1, v2;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: long;
v2 = staticinvoke <io.netty.handler.codec.http.HttpUtil: long getContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v0, v1);
return v2;
}
public static void setContentLength(io.netty.handler.codec.http.HttpMessage, long)
{
long v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: long;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setContentLength(io.netty.handler.codec.http.HttpMessage,long)>(v0, v1);
return;
}
public static java.lang.String getHost(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.handler.codec.http.HttpMessage v0;
io.netty.util.AsciiString v2;
java.lang.String v3;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v2 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v3 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v2);
return v3;
}
public static java.lang.String getHost(io.netty.handler.codec.http.HttpMessage, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v2;
io.netty.handler.codec.http.HttpMessage v0;
io.netty.util.AsciiString v3;
java.lang.String v1, v4;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
v4 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence,java.lang.String)>(v3, v1);
return v4;
}
public static void setHost(io.netty.handler.codec.http.HttpMessage, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v2;
io.netty.handler.codec.http.HttpMessage v0;
io.netty.util.AsciiString v3;
java.lang.String v1;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.String;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v3, v1);
return;
}
public static void setHost(io.netty.handler.codec.http.HttpMessage, java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
io.netty.handler.codec.http.HttpMessage v0;
io.netty.util.AsciiString v3;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.lang.CharSequence;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString HOST>;
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v3, v1);
return;
}
public static java.util.Date getDate(io.netty.handler.codec.http.HttpMessage) throws java.text.ParseException
{
io.netty.util.AsciiString v1;
java.util.Date v2;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString DATE>;
v2 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence)>(v0, v1);
return v2;
}
public static java.util.Date getDate(io.netty.handler.codec.http.HttpMessage, java.util.Date)
{
java.util.Date v1, v3;
io.netty.handler.codec.http.HttpMessage v0;
io.netty.util.AsciiString v2;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.util.Date;
v2 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString DATE>;
v3 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: java.util.Date getDateHeader(io.netty.handler.codec.http.HttpMessage,java.lang.CharSequence,java.util.Date)>(v0, v2, v1);
return v3;
}
public static void setDate(io.netty.handler.codec.http.HttpMessage, java.util.Date)
{
io.netty.handler.codec.http.HttpHeaders v2;
java.util.Date v1;
io.netty.handler.codec.http.HttpMessage v0;
io.netty.util.AsciiString v3;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: java.util.Date;
v2 = interfaceinvoke v0.<io.netty.handler.codec.http.HttpMessage: io.netty.handler.codec.http.HttpHeaders headers()>();
v3 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString DATE>;
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v3, v1);
return;
}
public static boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage)
{
boolean v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage)>(v0);
return v1;
}
public static void set100ContinueExpected(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void set100ContinueExpected(io.netty.handler.codec.http.HttpMessage,boolean)>(v0, 1);
return;
}
public static void set100ContinueExpected(io.netty.handler.codec.http.HttpMessage, boolean)
{
boolean v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 := @parameter1: boolean;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void set100ContinueExpected(io.netty.handler.codec.http.HttpMessage,boolean)>(v0, v1);
return;
}
public static boolean isTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage)
{
boolean v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage)>(v0);
return v1;
}
public static void removeTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage,boolean)>(v0, 0);
return;
}
public static void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
staticinvoke <io.netty.handler.codec.http.HttpUtil: void setTransferEncodingChunked(io.netty.handler.codec.http.HttpMessage,boolean)>(v0, 1);
return;
}
public static boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage)
{
boolean v1;
io.netty.handler.codec.http.HttpMessage v0;
v0 := @parameter0: io.netty.handler.codec.http.HttpMessage;
v1 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean isContentLengthSet(io.netty.handler.codec.http.HttpMessage)>(v0);
return v1;
}
public static boolean equalsIgnoreCase(java.lang.CharSequence, java.lang.CharSequence)
{
java.lang.CharSequence v0, v1;
boolean v2;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.lang.CharSequence;
v2 = staticinvoke <io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>(v0, v1);
return v2;
}
public static void encodeAscii(java.lang.CharSequence, io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v1;
java.lang.CharSequence v0;
java.nio.charset.Charset v4;
int v3;
boolean v2;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: io.netty.buffer.ByteBuf;
v2 = v0 instanceof io.netty.util.AsciiString;
if v2 == 0 goto label1;
v3 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
staticinvoke <io.netty.buffer.ByteBufUtil: void copy(io.netty.util.AsciiString,int,io.netty.buffer.ByteBuf,int)>(v0, 0, v1, v3);
goto label2;
label1:
v4 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
virtualinvoke v1.<io.netty.buffer.ByteBuf: int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset)>(v0, v4);
label2:
return;
}
public static java.lang.CharSequence newEntity(java.lang.String)
{
io.netty.util.AsciiString v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new io.netty.util.AsciiString;
specialinvoke v1.<io.netty.util.AsciiString: void <init>(java.lang.CharSequence)>(v0);
return v1;
}
protected void <init>()
{
io.netty.handler.codec.http.HttpHeaders v0;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract java.lang.String get(java.lang.String);
public java.lang.String get(java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
java.lang.String v2, v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.String)>(v2);
return v3;
}
public java.lang.String get(java.lang.CharSequence, java.lang.String)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
java.lang.String v2, v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v1);
if v3 != null goto label1;
return v2;
label1:
return v3;
}
public abstract java.lang.Integer getInt(java.lang.CharSequence);
public abstract int getInt(java.lang.CharSequence, int);
public abstract java.lang.Short getShort(java.lang.CharSequence);
public abstract short getShort(java.lang.CharSequence, short);
public abstract java.lang.Long getTimeMillis(java.lang.CharSequence);
public abstract long getTimeMillis(java.lang.CharSequence, long);
public abstract java.util.List getAll(java.lang.String);
public java.util.List getAll(java.lang.CharSequence)
{
java.util.List v3;
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.String)>(v2);
return v3;
}
public abstract java.util.List entries();
public abstract boolean contains(java.lang.String);
public abstract java.util.Iterator iterator();
public abstract java.util.Iterator iteratorCharSequence();
public java.util.Iterator valueStringIterator(java.lang.CharSequence)
{
java.util.List v2;
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
java.util.Iterator v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.CharSequence)>(v1);
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
return v3;
}
public java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
java.util.Iterator v2;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator valueStringIterator(java.lang.CharSequence)>(v1);
return v2;
}
public boolean contains(java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
java.lang.String v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.String)>(v2);
return v3;
}
public abstract boolean isEmpty();
public abstract int size();
public abstract java.util.Set names();
public abstract io.netty.handler.codec.http.HttpHeaders add(java.lang.String, java.lang.Object);
public io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence, java.lang.Object)
{
io.netty.handler.codec.http.HttpHeaders v0, v4;
java.lang.CharSequence v1;
java.lang.Object v2;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v3, v2);
return v4;
}
public abstract io.netty.handler.codec.http.HttpHeaders add(java.lang.String, java.lang.Iterable);
public io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v0, v4;
java.lang.CharSequence v1;
java.lang.String v3;
java.lang.Iterable v2;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Iterable;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable)>(v3, v2);
return v4;
}
public io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)
{
io.netty.handler.codec.http.HttpHeaders v0, v1;
java.util.Iterator v2;
java.lang.Object v4, v5, v6;
boolean v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "headers");
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v5, v6);
goto label1;
label2:
return v0;
}
public abstract io.netty.handler.codec.http.HttpHeaders addInt(java.lang.CharSequence, int);
public abstract io.netty.handler.codec.http.HttpHeaders addShort(java.lang.CharSequence, short);
public abstract io.netty.handler.codec.http.HttpHeaders set(java.lang.String, java.lang.Object);
public io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence, java.lang.Object)
{
io.netty.handler.codec.http.HttpHeaders v0, v4;
java.lang.CharSequence v1;
java.lang.Object v2;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)>(v3, v2);
return v4;
}
public abstract io.netty.handler.codec.http.HttpHeaders set(java.lang.String, java.lang.Iterable);
public io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence, java.lang.Iterable)
{
io.netty.handler.codec.http.HttpHeaders v0, v4;
java.lang.CharSequence v1;
java.lang.String v3;
java.lang.Iterable v2;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Iterable;
v3 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable)>(v3, v2);
return v4;
}
public io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders)
{
io.netty.handler.codec.http.HttpHeaders v0, v1;
java.util.Iterator v3;
java.lang.Object v5, v6, v7;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "headers");
virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders clear()>();
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: boolean isEmpty()>();
if v2 == 0 goto label1;
return v0;
label1:
v3 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator iterator()>();
label2:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v6, v7);
goto label2;
label3:
return v0;
}
public io.netty.handler.codec.http.HttpHeaders setAll(io.netty.handler.codec.http.HttpHeaders)
{
io.netty.handler.codec.http.HttpHeaders v0, v1;
java.util.Iterator v3;
java.lang.Object v5, v6, v7;
boolean v2, v4;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "headers");
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: boolean isEmpty()>();
if v2 == 0 goto label1;
return v0;
label1:
v3 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator iterator()>();
label2:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)>(v6, v7);
goto label2;
label3:
return v0;
}
public abstract io.netty.handler.codec.http.HttpHeaders setInt(java.lang.CharSequence, int);
public abstract io.netty.handler.codec.http.HttpHeaders setShort(java.lang.CharSequence, short);
public abstract io.netty.handler.codec.http.HttpHeaders remove(java.lang.String);
public io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v0, v3;
java.lang.CharSequence v1;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.String)>(v2);
return v3;
}
public abstract io.netty.handler.codec.http.HttpHeaders clear();
public boolean contains(java.lang.String, java.lang.String, boolean)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.util.Iterator v4;
java.lang.Object v6, v9;
java.lang.String v1, v2;
boolean v10, v3, v5, v7, v8;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator valueStringIterator(java.lang.CharSequence)>(v1);
if v3 == 0 goto label2;
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = virtualinvoke v6.<java.lang.String: boolean equalsIgnoreCase(java.lang.String)>(v2);
if v7 == 0 goto label1;
return 1;
label2:
v8 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v10 = virtualinvoke v9.<java.lang.String: boolean equals(java.lang.Object)>(v2);
if v10 == 0 goto label2;
return 1;
label3:
return 0;
}
public boolean containsValue(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1, v2;
java.util.Iterator v4;
java.lang.Object v6;
boolean v3, v5, v7;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: boolean;
v4 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator valueCharSequenceIterator(java.lang.CharSequence)>(v1);
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = staticinvoke <io.netty.handler.codec.http.HttpHeaders: boolean containsCommaSeparatedTrimmed(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v6, v2, v3);
if v7 == 0 goto label1;
return 1;
label2:
return 0;
}
private static boolean containsCommaSeparatedTrimmed(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
boolean v11, v18, v2, v23, v26, v33, v8;
java.lang.CharSequence v0, v1, v10, v16, v17, v22, v24, v25, v31, v32, v7, v9;
int v12, v13, v14, v15, v19, v20, v21, v27, v28, v29, v3, v30, v4, v5, v6;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.lang.CharSequence;
v2 := @parameter2: boolean;
v3 = 0;
if v2 == 0 goto label3;
v4 = staticinvoke <io.netty.util.AsciiString: int indexOf(java.lang.CharSequence,char,int)>(v0, 44, 0);
v5 = v4;
v6 = (int) -1;
if v4 != v6 goto label1;
v7 = staticinvoke <io.netty.util.AsciiString: java.lang.CharSequence trim(java.lang.CharSequence)>(v0);
v8 = staticinvoke <io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>(v7, v1);
if v8 == 0 goto label6;
return 1;
label1:
v9 = interfaceinvoke v0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v3, v5);
v10 = staticinvoke <io.netty.util.AsciiString: java.lang.CharSequence trim(java.lang.CharSequence)>(v9);
v11 = staticinvoke <io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>(v10, v1);
if v11 == 0 goto label2;
return 1;
label2:
v3 = v5 + 1;
v12 = staticinvoke <io.netty.util.AsciiString: int indexOf(java.lang.CharSequence,char,int)>(v0, 44, v3);
v5 = v12;
v13 = (int) -1;
if v12 != v13 goto label1;
v14 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
if v3 >= v14 goto label6;
v15 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
v16 = interfaceinvoke v0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v3, v15);
v17 = staticinvoke <io.netty.util.AsciiString: java.lang.CharSequence trim(java.lang.CharSequence)>(v16);
v18 = staticinvoke <io.netty.util.AsciiString: boolean contentEqualsIgnoreCase(java.lang.CharSequence,java.lang.CharSequence)>(v17, v1);
if v18 == 0 goto label6;
return 1;
label3:
v19 = staticinvoke <io.netty.util.AsciiString: int indexOf(java.lang.CharSequence,char,int)>(v0, 44, 0);
v20 = v19;
v21 = (int) -1;
if v19 != v21 goto label4;
v22 = staticinvoke <io.netty.util.AsciiString: java.lang.CharSequence trim(java.lang.CharSequence)>(v0);
v23 = staticinvoke <io.netty.util.AsciiString: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence)>(v22, v1);
if v23 == 0 goto label6;
return 1;
label4:
v24 = interfaceinvoke v0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v3, v20);
v25 = staticinvoke <io.netty.util.AsciiString: java.lang.CharSequence trim(java.lang.CharSequence)>(v24);
v26 = staticinvoke <io.netty.util.AsciiString: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence)>(v25, v1);
if v26 == 0 goto label5;
return 1;
label5:
v3 = v20 + 1;
v27 = staticinvoke <io.netty.util.AsciiString: int indexOf(java.lang.CharSequence,char,int)>(v0, 44, v3);
v20 = v27;
v28 = (int) -1;
if v27 != v28 goto label4;
v29 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
if v3 >= v29 goto label6;
v30 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
v31 = interfaceinvoke v0.<java.lang.CharSequence: java.lang.CharSequence subSequence(int,int)>(v3, v30);
v32 = staticinvoke <io.netty.util.AsciiString: java.lang.CharSequence trim(java.lang.CharSequence)>(v31);
v33 = staticinvoke <io.netty.util.AsciiString: boolean contentEquals(java.lang.CharSequence,java.lang.CharSequence)>(v32, v1);
if v33 == 0 goto label6;
return 1;
label6:
return 0;
}
public final java.lang.String getAsString(java.lang.CharSequence)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.String v2;
java.lang.CharSequence v1;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v1);
return v2;
}
public final java.util.List getAllAsString(java.lang.CharSequence)
{
java.util.List v2;
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.CharSequence)>(v1);
return v2;
}
public final java.util.Iterator iteratorAsString()
{
io.netty.handler.codec.http.HttpHeaders v0;
java.util.Iterator v1;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator iterator()>();
return v1;
}
public boolean contains(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
io.netty.handler.codec.http.HttpHeaders v0;
java.lang.CharSequence v1, v2;
java.lang.String v4, v5;
boolean v3, v6;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: boolean;
v4 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v5 = virtualinvoke v2.<java.lang.Object: java.lang.String toString()>();
v6 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.String,java.lang.String,boolean)>(v4, v5, v3);
return v6;
}
public java.lang.String toString()
{
io.netty.handler.codec.http.HttpHeaders v0;
java.util.Iterator v2;
int v3;
java.lang.Class v1;
java.lang.String v4;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator iteratorCharSequence()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http.HttpHeaders: int size()>();
v4 = staticinvoke <io.netty.handler.codec.HeadersUtils: java.lang.String toString(java.lang.Class,java.util.Iterator,int)>(v1, v2, v3);
return v4;
}
public io.netty.handler.codec.http.HttpHeaders copy()
{
io.netty.handler.codec.http.HttpHeaders v0, v2;
io.netty.handler.codec.http.DefaultHttpHeaders v1;
v0 := @this: io.netty.handler.codec.http.HttpHeaders;
v1 = new io.netty.handler.codec.http.DefaultHttpHeaders;
specialinvoke v1.<io.netty.handler.codec.http.DefaultHttpHeaders: void <init>()>();
v2 = virtualinvoke v1.<io.netty.handler.codec.http.DefaultHttpHeaders: io.netty.handler.codec.http.HttpHeaders set(io.netty.handler.codec.http.HttpHeaders)>(v0);
return v2;
}
static void <clinit>()
{
io.netty.handler.codec.http.EmptyHttpHeaders v0;
v0 = staticinvoke <io.netty.handler.codec.http.EmptyHttpHeaders: io.netty.handler.codec.http.EmptyHttpHeaders instance()>();
<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders EMPTY_HEADERS> = v0;
return;
}
}