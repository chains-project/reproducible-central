public class io.netty.handler.codec.http.HttpServerExpectContinueHandler extends io.netty.channel.ChannelInboundHandlerAdapter
{
private static final io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED;
private static final io.netty.handler.codec.http.FullHttpResponse ACCEPT;
public void <init>()
{
io.netty.handler.codec.http.HttpServerExpectContinueHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpServerExpectContinueHandler;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void <init>()>();
return;
}
protected io.netty.handler.codec.http.HttpResponse acceptMessage(io.netty.handler.codec.http.HttpRequest)
{
io.netty.handler.codec.http.FullHttpResponse v2, v3;
io.netty.handler.codec.http.HttpRequest v1;
io.netty.handler.codec.http.HttpServerExpectContinueHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpServerExpectContinueHandler;
v1 := @parameter0: io.netty.handler.codec.http.HttpRequest;
v2 = <io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.FullHttpResponse ACCEPT>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
return v3;
}
protected io.netty.handler.codec.http.HttpResponse rejectResponse(io.netty.handler.codec.http.HttpRequest)
{
io.netty.handler.codec.http.FullHttpResponse v2, v3;
io.netty.handler.codec.http.HttpRequest v1;
io.netty.handler.codec.http.HttpServerExpectContinueHandler v0;
v0 := @this: io.netty.handler.codec.http.HttpServerExpectContinueHandler;
v1 := @parameter0: io.netty.handler.codec.http.HttpRequest;
v2 = <io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.FullHttpResponse retainedDuplicate()>();
return v3;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v11;
io.netty.util.AsciiString v12;
io.netty.channel.ChannelFuture v7, v9;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelFutureListener v10, v8;
io.netty.handler.codec.http.HttpServerExpectContinueHandler v0;
io.netty.handler.codec.http.HttpResponse v5, v6;
java.lang.Object v2;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.http.HttpServerExpectContinueHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.codec.http.HttpRequest;
if v3 == 0 goto label2;
v4 = staticinvoke <io.netty.handler.codec.http.HttpUtil: boolean is100ContinueExpected(io.netty.handler.codec.http.HttpMessage)>(v2);
if v4 == 0 goto label2;
v5 = virtualinvoke v0.<io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.HttpResponse acceptMessage(io.netty.handler.codec.http.HttpRequest)>(v2);
if v5 != null goto label1;
v6 = virtualinvoke v0.<io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.HttpResponse rejectResponse(io.netty.handler.codec.http.HttpRequest)>(v2);
staticinvoke <io.netty.util.ReferenceCountUtil: boolean release(java.lang.Object)>(v2);
v7 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v6);
v8 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE>;
interfaceinvoke v7.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v8);
return;
label1:
v9 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture writeAndFlush(java.lang.Object)>(v5);
v10 = <io.netty.channel.ChannelFutureListener: io.netty.channel.ChannelFutureListener CLOSE_ON_FAILURE>;
interfaceinvoke v9.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v10);
v11 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v12 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString EXPECT>;
virtualinvoke v11.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v12);
label2:
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
}
static void <clinit>()
{
io.netty.handler.codec.http.HttpVersion v1, v5;
io.netty.handler.codec.http.HttpHeaders v13, v9;
io.netty.util.AsciiString v10, v14;
java.lang.Integer v11, v15;
io.netty.buffer.ByteBuf v3, v7;
io.netty.handler.codec.http.HttpResponseStatus v2, v6;
io.netty.handler.codec.http.FullHttpResponse v12, v8;
io.netty.handler.codec.http.DefaultFullHttpResponse v0, v4;
v0 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v1 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v2 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus EXPECTATION_FAILED>;
v3 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v0.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v1, v2, v3);
<io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED> = v0;
v4 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v5 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v6 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus CONTINUE>;
v7 = <io.netty.buffer.Unpooled: io.netty.buffer.ByteBuf EMPTY_BUFFER>;
specialinvoke v4.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v5, v6, v7);
<io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.FullHttpResponse ACCEPT> = v4;
v8 = <io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.FullHttpResponse EXPECTATION_FAILED>;
v9 = interfaceinvoke v8.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v10 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
virtualinvoke v9.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v10, v11);
v12 = <io.netty.handler.codec.http.HttpServerExpectContinueHandler: io.netty.handler.codec.http.FullHttpResponse ACCEPT>;
v13 = interfaceinvoke v12.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v14 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONTENT_LENGTH>;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(0);
virtualinvoke v13.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v14, v15);
return;
}
}