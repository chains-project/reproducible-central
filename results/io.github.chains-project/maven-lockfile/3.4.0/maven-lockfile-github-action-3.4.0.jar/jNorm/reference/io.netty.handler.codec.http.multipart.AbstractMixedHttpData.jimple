abstract class io.netty.handler.codec.http.multipart.AbstractMixedHttpData extends io.netty.util.AbstractReferenceCounted implements io.netty.handler.codec.http.multipart.HttpData
{
final java.lang.String baseDir;
final boolean deleteOnExit;
io.netty.handler.codec.http.multipart.HttpData wrapped;
private final long limitSize;
void <init>(long, java.lang.String, boolean, io.netty.handler.codec.http.multipart.HttpData)
{
io.netty.handler.codec.http.multipart.HttpData v4;
long v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.lang.String v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: long;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: io.netty.handler.codec.http.multipart.HttpData;
specialinvoke v0.<io.netty.util.AbstractReferenceCounted: void <init>()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: long limitSize> = v1;
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped> = v4;
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: java.lang.String baseDir> = v2;
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: boolean deleteOnExit> = v3;
return;
}
abstract io.netty.handler.codec.http.multipart.HttpData makeDiskData();
public long getMaxSize()
{
long v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: long getMaxSize()>();
return v2;
}
public void setMaxSize(long)
{
long v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: long;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: void setMaxSize(long)>(v1);
return;
}
public io.netty.buffer.ByteBuf content()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.buffer.ByteBuf content()>();
return v2;
}
public void checkSize(long) throws java.io.IOException
{
long v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: long;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: void checkSize(long)>(v1);
return;
}
public long definedLength()
{
long v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: long definedLength()>();
return v2;
}
public java.nio.charset.Charset getCharset()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.nio.charset.Charset v2;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: java.nio.charset.Charset getCharset()>();
return v2;
}
public java.lang.String getName()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.lang.String v2;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: java.lang.String getName()>();
return v2;
}
public void addContent(io.netty.buffer.ByteBuf, boolean) throws java.io.IOException
{
long v10, v12, v13, v6, v8;
byte v14;
io.netty.buffer.ByteBuf v1, v17, v19;
io.netty.handler.codec.http.multipart.HttpData v15, v16, v20, v22, v3, v5, v9;
int v11, v7;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
boolean v18, v2, v4;
java.io.IOException v21;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 := @parameter1: boolean;
v3 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v4 = v3 instanceof io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
if v4 == 0 goto label5;
label1:
v5 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http.multipart.HttpData: long length()>();
v7 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v8 = v6 + v7;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: void checkSize(long)>(v8);
v9 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v10 = interfaceinvoke v9.<io.netty.handler.codec.http.multipart.HttpData: long length()>();
v11 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v12 = v10 + v11;
v13 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: long limitSize>;
v14 = v12 cmp v13;
if v14 <= 0 goto label5;
v15 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData makeDiskData()>();
v16 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v17 = virtualinvoke v16.<io.netty.handler.codec.http.multipart.AbstractMemoryHttpData: io.netty.buffer.ByteBuf getByteBuf()>();
if v17 == null goto label2;
v18 = virtualinvoke v17.<io.netty.buffer.ByteBuf: boolean isReadable()>();
if v18 == 0 goto label2;
v19 = virtualinvoke v17.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf retain()>();
interfaceinvoke v15.<io.netty.handler.codec.http.multipart.HttpData: void addContent(io.netty.buffer.ByteBuf,boolean)>(v19, 0);
label2:
v20 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v20.<io.netty.handler.codec.http.multipart.HttpData: boolean release()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped> = v15;
label3:
goto label5;
label4:
v21 := @caughtexception;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
throw v21;
label5:
v22 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v22.<io.netty.handler.codec.http.multipart.HttpData: void addContent(io.netty.buffer.ByteBuf,boolean)>(v1, v2);
return;
catch java.io.IOException from label1 to label3 with label4;
}
protected void deallocate()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: void delete()>();
return;
}
public void delete()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: void delete()>();
return;
}
public byte[] get() throws java.io.IOException
{
byte[] v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: byte[] get()>();
return v2;
}
public io.netty.buffer.ByteBuf getByteBuf() throws java.io.IOException
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.buffer.ByteBuf getByteBuf()>();
return v2;
}
public java.lang.String getString() throws java.io.IOException
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.lang.String v2;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: java.lang.String getString()>();
return v2;
}
public java.lang.String getString(java.nio.charset.Charset) throws java.io.IOException
{
java.nio.charset.Charset v1;
io.netty.handler.codec.http.multipart.HttpData v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.lang.String v3;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.nio.charset.Charset;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: java.lang.String getString(java.nio.charset.Charset)>(v1);
return v3;
}
public boolean isInMemory()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: boolean isInMemory()>();
return v2;
}
public long length()
{
long v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: long length()>();
return v2;
}
public boolean renameTo(java.io.File) throws java.io.IOException
{
io.netty.handler.codec.http.multipart.HttpData v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.io.File v1;
boolean v3;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.io.File;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: boolean renameTo(java.io.File)>(v1);
return v3;
}
public void setCharset(java.nio.charset.Charset)
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.nio.charset.Charset v1;
io.netty.handler.codec.http.multipart.HttpData v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.nio.charset.Charset;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: void setCharset(java.nio.charset.Charset)>(v1);
return;
}
public void setContent(io.netty.buffer.ByteBuf) throws java.io.IOException
{
java.io.IOException v3;
long v5;
byte v6;
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.http.multipart.HttpData v10, v11, v7, v9;
int v2, v4;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
boolean v8;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: io.netty.buffer.ByteBuf;
label1:
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: void checkSize(long)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean release()>();
throw v3;
label4:
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readableBytes()>();
v5 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: long limitSize>;
v6 = v4 cmp v5;
if v6 <= 0 goto label5;
v7 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v8 = v7 instanceof io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
if v8 == 0 goto label5;
v9 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v9.<io.netty.handler.codec.http.multipart.HttpData: boolean release()>();
v10 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData makeDiskData()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped> = v10;
label5:
v11 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v11.<io.netty.handler.codec.http.multipart.HttpData: void setContent(io.netty.buffer.ByteBuf)>(v1);
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void setContent(java.io.File) throws java.io.IOException
{
long v2, v3, v4;
java.io.File v1;
byte v5;
io.netty.handler.codec.http.multipart.HttpData v10, v6, v8, v9;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
boolean v7;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v1.<java.io.File: long length()>();
virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: void checkSize(long)>(v2);
v3 = virtualinvoke v1.<java.io.File: long length()>();
v4 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: long limitSize>;
v5 = v3 cmp v4;
if v5 <= 0 goto label1;
v6 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v7 = v6 instanceof io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
if v7 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v8.<io.netty.handler.codec.http.multipart.HttpData: boolean release()>();
v9 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData makeDiskData()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped> = v9;
label1:
v10 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v10.<io.netty.handler.codec.http.multipart.HttpData: void setContent(java.io.File)>(v1);
return;
}
public void setContent(java.io.InputStream) throws java.io.IOException
{
io.netty.handler.codec.http.multipart.HttpData v2, v4, v5, v6;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
boolean v3;
java.io.InputStream v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.io.InputStream;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = v2 instanceof io.netty.handler.codec.http.multipart.AbstractMemoryHttpData;
if v3 == 0 goto label1;
v4 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v4.<io.netty.handler.codec.http.multipart.HttpData: boolean release()>();
v5 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData makeDiskData()>();
v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped> = v5;
label1:
v6 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v6.<io.netty.handler.codec.http.multipart.HttpData: void setContent(java.io.InputStream)>(v1);
return;
}
public boolean isCompleted()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
boolean v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: boolean isCompleted()>();
return v2;
}
public io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()
{
io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.InterfaceHttpData$HttpDataType getHttpDataType()>();
return v2;
}
public int hashCode()
{
int v2;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.http.multipart.HttpData v2;
java.lang.Object v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(v1);
return v3;
}
public int compareTo(io.netty.handler.codec.http.multipart.InterfaceHttpData)
{
io.netty.handler.codec.http.multipart.HttpData v2;
int v3;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.InterfaceHttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: io.netty.handler.codec.http.multipart.InterfaceHttpData;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: int compareTo(java.lang.Object)>(v1);
return v3;
}
public java.lang.String toString()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
java.lang.String v2;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.multipart.HttpData)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Mixed: \u0001");
return v2;
}
public io.netty.buffer.ByteBuf getChunk(int) throws java.io.IOException
{
io.netty.buffer.ByteBuf v3;
io.netty.handler.codec.http.multipart.HttpData v2;
int v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: io.netty.buffer.ByteBuf getChunk(int)>(v1);
return v3;
}
public java.io.File getFile() throws java.io.IOException
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
java.io.File v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: java.io.File getFile()>();
return v2;
}
public io.netty.handler.codec.http.multipart.HttpData copy()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1, v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.HttpData copy()>();
return v2;
}
public io.netty.handler.codec.http.multipart.HttpData duplicate()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1, v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.HttpData duplicate()>();
return v2;
}
public io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1, v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.HttpData retainedDuplicate()>();
return v2;
}
public io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)
{
io.netty.buffer.ByteBuf v1;
io.netty.handler.codec.http.multipart.HttpData v2, v3;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: io.netty.buffer.ByteBuf;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
v3 = interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.HttpData replace(io.netty.buffer.ByteBuf)>(v1);
return v3;
}
public io.netty.handler.codec.http.multipart.HttpData touch()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v1.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.HttpData touch()>();
return v0;
}
public io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object)
{
java.lang.Object v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.handler.codec.http.multipart.HttpData v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.codec.http.multipart.AbstractMixedHttpData: io.netty.handler.codec.http.multipart.HttpData wrapped>;
interfaceinvoke v2.<io.netty.handler.codec.http.multipart.HttpData: io.netty.handler.codec.http.multipart.HttpData touch(java.lang.Object)>(v1);
return v0;
}
public io.netty.handler.codec.http.multipart.HttpData retain()
{
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.util.ReferenceCounted v1;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain()>();
return v1;
}
public io.netty.handler.codec.http.multipart.HttpData retain(int)
{
int v1;
io.netty.handler.codec.http.multipart.AbstractMixedHttpData v0;
io.netty.util.ReferenceCounted v2;
v0 := @this: io.netty.handler.codec.http.multipart.AbstractMixedHttpData;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain(int)>(v1);
return v2;
}
}