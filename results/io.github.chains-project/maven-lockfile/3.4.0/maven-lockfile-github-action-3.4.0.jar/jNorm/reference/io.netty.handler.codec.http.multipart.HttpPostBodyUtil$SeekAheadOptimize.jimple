class io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize extends java.lang.Object
{
byte[] bytes;
int readerIndex;
int pos;
int origPos;
int limit;
io.netty.buffer.ByteBuf buffer;
void <init>(io.netty.buffer.ByteBuf)
{
byte[] v4;
java.lang.IllegalArgumentException v3;
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize v0;
io.netty.buffer.ByteBuf v1;
int v10, v11, v5, v6, v7, v8, v9;
boolean v2;
v0 := @this: io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize;
v1 := @parameter0: io.netty.buffer.ByteBuf;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<io.netty.buffer.ByteBuf: boolean hasArray()>();
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("buffer hasn\'t backing byte array");
throw v3;
label1:
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: io.netty.buffer.ByteBuf buffer> = v1;
v4 = virtualinvoke v1.<io.netty.buffer.ByteBuf: byte[] array()>();
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: byte[] bytes> = v4;
v5 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int readerIndex()>();
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int readerIndex> = v5;
v6 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v7 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int readerIndex>;
v8 = v6 + v7;
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int pos> = v8;
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int origPos> = v8;
v9 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int arrayOffset()>();
v10 = virtualinvoke v1.<io.netty.buffer.ByteBuf: int writerIndex()>();
v11 = v9 + v10;
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int limit> = v11;
return;
}
void setReadPosition(int)
{
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize v0;
io.netty.buffer.ByteBuf v6;
int v1, v2, v3, v4, v5, v7;
v0 := @this: io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int pos>;
v3 = v2 - v1;
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int pos> = v3;
v4 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int pos>;
v5 = virtualinvoke v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int getReadPosition(int)>(v4);
v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int readerIndex> = v5;
v6 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: io.netty.buffer.ByteBuf buffer>;
v7 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int readerIndex>;
virtualinvoke v6.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf readerIndex(int)>(v7);
return;
}
int getReadPosition(int)
{
int v1, v2, v3, v4, v5;
io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize v0;
v0 := @this: io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int origPos>;
v3 = v1 - v2;
v4 = v0.<io.netty.handler.codec.http.multipart.HttpPostBodyUtil$SeekAheadOptimize: int readerIndex>;
v5 = v3 + v4;
return v5;
}
}