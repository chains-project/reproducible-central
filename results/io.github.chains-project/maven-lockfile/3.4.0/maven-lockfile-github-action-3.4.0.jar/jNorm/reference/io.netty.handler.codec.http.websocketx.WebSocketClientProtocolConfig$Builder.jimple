public final class io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder extends java.lang.Object
{
private java.net.URI webSocketUri;
private java.lang.String subprotocol;
private io.netty.handler.codec.http.websocketx.WebSocketVersion version;
private boolean allowExtensions;
private io.netty.handler.codec.http.HttpHeaders customHeaders;
private int maxFramePayloadLength;
private boolean performMasking;
private boolean allowMaskMismatch;
private boolean handleCloseFrames;
private io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame;
private boolean dropPongFrames;
private long handshakeTimeoutMillis;
private long forceCloseTimeoutMillis;
private boolean absoluteUpgradeUrl;
private boolean generateOriginHeader;
private boolean withUTF8Validator;
private void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig)
{
io.netty.handler.codec.http.HttpHeaders v7;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v12;
long v14, v15;
io.netty.handler.codec.http.websocketx.WebSocketVersion v5;
int v8;
java.lang.String v4;
java.net.URI v3;
boolean v10, v11, v13, v16, v17, v18, v6, v9;
java.lang.Object v2;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "clientConfig");
v3 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.net.URI webSocketUri()>();
v4 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: java.lang.String subprotocol()>();
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketVersion version()>();
v6 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowExtensions()>();
v7 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.HttpHeaders customHeaders()>();
v8 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: int maxFramePayloadLength()>();
v9 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean performMasking()>();
v10 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean allowMaskMismatch()>();
v11 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean handleCloseFrames()>();
v12 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame()>();
v13 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean dropPongFrames()>();
v14 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long handshakeTimeoutMillis()>();
v15 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: long forceCloseTimeoutMillis()>();
v16 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean absoluteUpgradeUrl()>();
v17 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean generateOriginHeader()>();
v18 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: boolean withUTF8Validator()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: void <init>(java.net.URI,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean,boolean)>(v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18);
return;
}
private void <init>(java.net.URI, java.lang.String, io.netty.handler.codec.http.websocketx.WebSocketVersion, boolean, io.netty.handler.codec.http.HttpHeaders, int, boolean, boolean, boolean, io.netty.handler.codec.http.websocketx.WebSocketCloseStatus, boolean, long, long, boolean, boolean, boolean)
{
io.netty.handler.codec.http.HttpHeaders v5;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v10;
long v12, v13;
io.netty.handler.codec.http.websocketx.WebSocketVersion v3;
int v6;
java.lang.String v2;
java.net.URI v1;
boolean v11, v14, v15, v16, v4, v7, v8, v9;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.handler.codec.http.HttpHeaders;
v6 := @parameter5: int;
v7 := @parameter6: boolean;
v8 := @parameter7: boolean;
v9 := @parameter8: boolean;
v10 := @parameter9: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v11 := @parameter10: boolean;
v12 := @parameter11: long;
v13 := @parameter12: long;
v14 := @parameter13: boolean;
v15 := @parameter14: boolean;
v16 := @parameter15: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: java.net.URI webSocketUri> = v1;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: java.lang.String subprotocol> = v2;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketVersion version> = v3;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean allowExtensions> = v4;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.HttpHeaders customHeaders> = v5;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: int maxFramePayloadLength> = v6;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean performMasking> = v7;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean allowMaskMismatch> = v8;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean handleCloseFrames> = v9;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame> = v10;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean dropPongFrames> = v11;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: long handshakeTimeoutMillis> = v12;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: long forceCloseTimeoutMillis> = v13;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean absoluteUpgradeUrl> = v14;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean generateOriginHeader> = v15;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean withUTF8Validator> = v16;
return;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder webSocketUri(java.lang.String)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0, v3;
java.lang.String v1;
java.net.URI v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>(v1);
v3 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder webSocketUri(java.net.URI)>(v2);
return v3;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder webSocketUri(java.net.URI)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
java.net.URI v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: java.net.URI;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: java.net.URI webSocketUri> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder subprotocol(java.lang.String)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: java.lang.String;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: java.lang.String subprotocol> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder version(io.netty.handler.codec.http.websocketx.WebSocketVersion)
{
io.netty.handler.codec.http.websocketx.WebSocketVersion v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketVersion;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketVersion version> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder allowExtensions(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean allowExtensions> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder customHeaders(io.netty.handler.codec.http.HttpHeaders)
{
io.netty.handler.codec.http.HttpHeaders v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.HttpHeaders customHeaders> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder maxFramePayloadLength(int)
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: int;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: int maxFramePayloadLength> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder performMasking(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean performMasking> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder allowMaskMismatch(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean allowMaskMismatch> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder handleCloseFrames(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean handleCloseFrames> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder sendCloseFrame(io.netty.handler.codec.http.websocketx.WebSocketCloseStatus)
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder dropPongFrames(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean dropPongFrames> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder handshakeTimeoutMillis(long)
{
long v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: long;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: long handshakeTimeoutMillis> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder forceCloseTimeoutMillis(long)
{
long v1;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: long;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: long forceCloseTimeoutMillis> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder absoluteUpgradeUrl(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean absoluteUpgradeUrl> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder generateOriginHeader(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean generateOriginHeader> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder withUTF8Validator(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean withUTF8Validator> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig build()
{
io.netty.handler.codec.http.HttpHeaders v6;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v11;
long v13, v14;
io.netty.handler.codec.http.websocketx.WebSocketVersion v4;
int v7;
java.lang.String v3;
java.net.URI v2;
boolean v10, v12, v15, v16, v17, v5, v8, v9;
io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder;
v1 = new io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: java.net.URI webSocketUri>;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: java.lang.String subprotocol>;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketVersion version>;
v5 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean allowExtensions>;
v6 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.HttpHeaders customHeaders>;
v7 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: int maxFramePayloadLength>;
v8 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean performMasking>;
v9 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean allowMaskMismatch>;
v10 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean handleCloseFrames>;
v11 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame>;
v12 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean dropPongFrames>;
v13 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: long handshakeTimeoutMillis>;
v14 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: long forceCloseTimeoutMillis>;
v15 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean absoluteUpgradeUrl>;
v16 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean generateOriginHeader>;
v17 = v0.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig$Builder: boolean withUTF8Validator>;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketClientProtocolConfig: void <init>(java.net.URI,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketVersion,boolean,io.netty.handler.codec.http.HttpHeaders,int,boolean,boolean,boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,long,long,boolean,boolean,boolean)>(v2, v3, v4, v5, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17);
return v1;
}
}