public class io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 extends io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker
{
public static final java.lang.String WEBSOCKET_13_ACCEPT_GUID;
public void <init>(java.lang.String, java.lang.String, boolean, int)
{
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 v0;
int v4;
java.lang.String v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: void <init>(java.lang.String,java.lang.String,boolean,int,boolean)>(v1, v2, v3, v4, 0);
return;
}
public void <init>(java.lang.String, java.lang.String, boolean, int, boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 v0;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v10;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v6, v7, v8, v9;
int v4;
java.lang.String v1, v2;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder newBuilder()>();
v7 = virtualinvoke v6.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowExtensions(boolean)>(v3);
v8 = virtualinvoke v7.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder maxFramePayloadLength(int)>(v4);
v9 = virtualinvoke v8.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowMaskMismatch(boolean)>(v5);
v10 = virtualinvoke v9.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig build()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: void <init>(java.lang.String,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v1, v2, v10);
return;
}
public void <init>(java.lang.String, java.lang.String, io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 v0;
io.netty.handler.codec.http.websocketx.WebSocketVersion v4;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v3;
java.lang.String v1, v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
v4 = <io.netty.handler.codec.http.websocketx.WebSocketVersion: io.netty.handler.codec.http.websocketx.WebSocketVersion V13>;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker: void <init>(io.netty.handler.codec.http.websocketx.WebSocketVersion,java.lang.String,java.lang.String,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v4, v1, v2, v3);
return;
}
protected io.netty.handler.codec.http.FullHttpResponse newHandshakeResponse(io.netty.handler.codec.http.FullHttpRequest, io.netty.handler.codec.http.HttpHeaders)
{
byte[] v31, v32;
io.netty.handler.codec.http.HttpHeaders v2, v28, v37, v40, v43, v51, v8;
io.netty.buffer.ByteBufAllocator v26;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException v14, v18, v21, v6;
io.netty.util.AsciiString v11, v12, v15, v16, v19, v38, v39, v41, v42, v44, v45, v52, v9;
boolean v10, v13, v17, v35, v49, v5;
io.netty.handler.codec.http.HttpResponseStatus v24;
io.netty.handler.codec.http.FullHttpRequest v1;
io.netty.util.internal.logging.InternalLogger v34, v36, v48, v50;
io.netty.handler.codec.http.DefaultFullHttpResponse v22;
io.netty.handler.codec.http.HttpVersion v23;
io.netty.buffer.ByteBuf v25, v27;
java.nio.charset.Charset v30;
java.lang.String v20, v29, v33, v46, v47, v7;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 v0;
io.netty.handler.codec.http.HttpMethod v3, v4;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpRequest;
v2 := @parameter1: io.netty.handler.codec.http.HttpHeaders;
v3 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpMethod method()>();
v4 = <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod GET>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.HttpMethod: boolean equals(java.lang.Object)>(v3);
if v5 != 0 goto label1;
v6 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.handler.codec.http.HttpMethod)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid WebSocket handshake method: \u0001");
specialinvoke v6.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>(v7, v1);
throw v6;
label1:
v8 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v9 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v10 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v9);
if v10 == 0 goto label2;
v11 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v12 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v13 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: boolean containsValue(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v11, v12, 1);
if v13 != 0 goto label3;
label2:
v14 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
specialinvoke v14.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>("not a WebSocket request: a |Connection| header must includes a token \'Upgrade\'", v1);
throw v14;
label3:
v15 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v16 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v17 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v15, v16, 1);
if v17 != 0 goto label4;
v18 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
specialinvoke v18.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>("not a WebSocket request: a |Upgrade| header must containing the value \'websocket\'", v1);
throw v18;
label4:
v19 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_KEY>;
v20 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v19);
if v20 != null goto label5;
v21 = new io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException;
specialinvoke v21.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshakeException: void <init>(java.lang.String,io.netty.handler.codec.http.HttpRequest)>("not a WebSocket request: missing key", v1);
throw v21;
label5:
v22 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v23 = <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion HTTP_1_1>;
v24 = <io.netty.handler.codec.http.HttpResponseStatus: io.netty.handler.codec.http.HttpResponseStatus SWITCHING_PROTOCOLS>;
v25 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpRequest: io.netty.buffer.ByteBuf content()>();
v26 = virtualinvoke v25.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBufAllocator alloc()>();
v27 = interfaceinvoke v26.<io.netty.buffer.ByteBufAllocator: io.netty.buffer.ByteBuf buffer(int)>(0);
specialinvoke v22.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus,io.netty.buffer.ByteBuf)>(v23, v24, v27);
if v2 == null goto label6;
v28 = interfaceinvoke v22.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v28.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v2);
label6:
v29 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v20) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001258EAFA5-E914-47DA-95CA-C5AB0DC85B11");
v30 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
v31 = virtualinvoke v29.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v30);
v32 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: byte[] sha1(byte[])>(v31);
v33 = staticinvoke <io.netty.handler.codec.http.websocketx.WebSocketUtil: java.lang.String base64(byte[])>(v32);
v34 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: io.netty.util.internal.logging.InternalLogger logger>;
v35 = interfaceinvoke v34.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v35 == 0 goto label7;
v36 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v36.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("WebSocket version 13 server handshake key: {}, response: {}", v20, v33);
label7:
v37 = interfaceinvoke v22.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v38 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString UPGRADE>;
v39 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString WEBSOCKET>;
v40 = virtualinvoke v37.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v38, v39);
v41 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString CONNECTION>;
v42 = <io.netty.handler.codec.http.HttpHeaderValues: io.netty.util.AsciiString UPGRADE>;
v43 = virtualinvoke v40.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v41, v42);
v44 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_ACCEPT>;
virtualinvoke v43.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v44, v33);
v45 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL>;
v46 = virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v45);
if v46 == null goto label9;
v47 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: java.lang.String selectSubprotocol(java.lang.String)>(v46);
if v47 != null goto label8;
v48 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: io.netty.util.internal.logging.InternalLogger logger>;
v49 = interfaceinvoke v48.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v49 == 0 goto label9;
v50 = <io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v50.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Requested subprotocol(s) not supported: {}", v46);
goto label9;
label8:
v51 = interfaceinvoke v22.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v52 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_PROTOCOL>;
virtualinvoke v51.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v52, v47);
label9:
return v22;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameDecoder newWebsocketDecoder()
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v2;
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 v0;
io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder;
v2 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig()>();
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket13FrameDecoder: void <init>(io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v2);
return v1;
}
protected io.netty.handler.codec.http.websocketx.WebSocketFrameEncoder newWebSocketEncoder()
{
io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13 v0;
io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerHandshaker13;
v1 = new io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder;
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocket13FrameEncoder: void <init>(boolean)>(0);
return v1;
}
}