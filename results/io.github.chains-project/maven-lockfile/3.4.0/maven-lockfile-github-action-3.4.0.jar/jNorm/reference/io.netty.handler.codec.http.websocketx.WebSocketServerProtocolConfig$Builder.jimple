public final class io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder extends java.lang.Object
{
private java.lang.String websocketPath;
private java.lang.String subprotocols;
private boolean checkStartsWith;
private long handshakeTimeoutMillis;
private long forceCloseTimeoutMillis;
private boolean handleCloseFrames;
private io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame;
private boolean dropPongFrames;
private io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig;
private io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder;
private void <init>(io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v11;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v9;
long v6, v7;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
java.lang.Object v2;
java.lang.String v3, v4;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig v1;
boolean v10, v5, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "serverConfig");
v3 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: java.lang.String websocketPath()>();
v4 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: java.lang.String subprotocols()>();
v5 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: boolean checkStartsWith()>();
v6 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: long handshakeTimeoutMillis()>();
v7 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: long forceCloseTimeoutMillis()>();
v8 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: boolean handleCloseFrames()>();
v9 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame()>();
v10 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: boolean dropPongFrames()>();
v11 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig()>();
specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: void <init>(java.lang.String,java.lang.String,boolean,long,long,boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v3, v4, v5, v6, v7, v8, v9, v10, v11);
return;
}
private void <init>(java.lang.String, java.lang.String, boolean, long, long, boolean, io.netty.handler.codec.http.websocketx.WebSocketCloseStatus, boolean, io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v9;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v7;
long v4, v5;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
java.lang.String v1, v2;
boolean v3, v6, v8;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 := @parameter3: long;
v5 := @parameter4: long;
v6 := @parameter5: boolean;
v7 := @parameter6: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v8 := @parameter7: boolean;
v9 := @parameter8: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: java.lang.String websocketPath> = v1;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: java.lang.String subprotocols> = v2;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean checkStartsWith> = v3;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: long handshakeTimeoutMillis> = v4;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: long forceCloseTimeoutMillis> = v5;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean handleCloseFrames> = v6;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame> = v7;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean dropPongFrames> = v8;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig> = v9;
return;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder websocketPath(java.lang.String)
{
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: java.lang.String;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: java.lang.String websocketPath> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder subprotocols(java.lang.String)
{
java.lang.String v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: java.lang.String;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: java.lang.String subprotocols> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder checkStartsWith(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean checkStartsWith> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder handshakeTimeoutMillis(long)
{
long v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: long;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: long handshakeTimeoutMillis> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder forceCloseTimeoutMillis(long)
{
long v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: long;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: long forceCloseTimeoutMillis> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder handleCloseFrames(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean handleCloseFrames> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder sendCloseFrame(io.netty.handler.codec.http.websocketx.WebSocketCloseStatus)
{
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder dropPongFrames(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean dropPongFrames> = v1;
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder decoderConfig(io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v1, v2;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig;
if v1 != null goto label1;
v2 = <io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig DEFAULT>;
goto label2;
label1:
v2 = v1;
label2:
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig> = v2;
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder> = null;
return v0;
}
private io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v1, v3, v4;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder>;
if v1 != null goto label1;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder toBuilder()>();
v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder> = v3;
label1:
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder>;
return v4;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder maxFramePayloadLength(int)
{
int v1;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()>();
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder maxFramePayloadLength(int)>(v1);
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder expectMaskedFrames(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()>();
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder expectMaskedFrames(boolean)>(v1);
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder allowMaskMismatch(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()>();
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowMaskMismatch(boolean)>(v1);
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder allowExtensions(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()>();
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder allowExtensions(boolean)>(v1);
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder closeOnProtocolViolation(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()>();
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder closeOnProtocolViolation(boolean)>(v1);
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder withUTF8Validator(boolean)
{
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
boolean v1;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v2;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder()>();
virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder withUTF8Validator(boolean)>(v1);
return v0;
}
public io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig build()
{
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig v11;
io.netty.handler.codec.http.websocketx.WebSocketCloseStatus v8;
long v5, v6;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder v0;
io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder v10, v12;
java.lang.String v2, v3;
io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig v1;
boolean v4, v7, v9;
v0 := @this: io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder;
v1 = new io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig;
v2 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: java.lang.String websocketPath>;
v3 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: java.lang.String subprotocols>;
v4 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean checkStartsWith>;
v5 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: long handshakeTimeoutMillis>;
v6 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: long forceCloseTimeoutMillis>;
v7 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean handleCloseFrames>;
v8 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketCloseStatus sendCloseFrame>;
v9 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: boolean dropPongFrames>;
v10 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder>;
if v10 != null goto label1;
v11 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig decoderConfig>;
goto label2;
label1:
v12 = v0.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder decoderConfigBuilder>;
v11 = virtualinvoke v12.<io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig$Builder: io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig build()>();
label2:
specialinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketServerProtocolConfig: void <init>(java.lang.String,java.lang.String,boolean,long,long,boolean,io.netty.handler.codec.http.websocketx.WebSocketCloseStatus,boolean,io.netty.handler.codec.http.websocketx.WebSocketDecoderConfig)>(v2, v3, v4, v5, v6, v7, v8, v9, v11);
return v1;
}
}