public class io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler extends io.netty.channel.ChannelDuplexHandler
{
private final java.util.List extensionHandshakers;
public transient void <init>(io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker[])
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler v0;
java.util.List v3;
java.lang.Object[] v2;
io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker[] v1;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker[];
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object[] checkNonEmpty(java.lang.Object[],java.lang.String)>(v1, "extensionHandshakers");
v3 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler: java.util.List extensionHandshakers> = v3;
return;
}
public void write(io.netty.channel.ChannelHandlerContext, java.lang.Object, io.netty.channel.ChannelPromise) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v19, v5, v7;
io.netty.util.AsciiString v20, v8;
java.util.ArrayList v10;
io.netty.channel.ChannelHandlerContext v1;
io.netty.channel.ChannelPromise v3;
int v12;
java.lang.String v18, v9;
boolean v15, v4, v6;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData v17;
java.util.Iterator v14;
io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler v0;
java.util.List v11, v13;
java.lang.Object v16, v2;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v4 = v2 instanceof io.netty.handler.codec.http.HttpRequest;
if v4 == 0 goto label3;
v5 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v6 = staticinvoke <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil: boolean isWebsocketUpgrade(io.netty.handler.codec.http.HttpHeaders)>(v5);
if v6 == 0 goto label3;
v7 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v8 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_EXTENSIONS>;
v9 = virtualinvoke v7.<io.netty.handler.codec.http.HttpHeaders: java.lang.String getAsString(java.lang.CharSequence)>(v8);
v10 = new java.util.ArrayList;
v11 = v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler: java.util.List extensionHandshakers>;
v12 = interfaceinvoke v11.<java.util.List: int size()>();
specialinvoke v10.<java.util.ArrayList: void <init>(int)>(v12);
v13 = v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler: java.util.List extensionHandshakers>;
v14 = interfaceinvoke v13.<java.util.List: java.util.Iterator iterator()>();
label1:
v15 = interfaceinvoke v14.<java.util.Iterator: boolean hasNext()>();
if v15 == 0 goto label2;
v16 = interfaceinvoke v14.<java.util.Iterator: java.lang.Object next()>();
v17 = interfaceinvoke v16.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData newRequestData()>();
interfaceinvoke v10.<java.util.List: boolean add(java.lang.Object)>(v17);
goto label1;
label2:
v18 = staticinvoke <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil: java.lang.String computeMergeExtensionsHeaderValue(java.lang.String,java.util.List)>(v9, v10);
v19 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpRequest: io.netty.handler.codec.http.HttpHeaders headers()>();
v20 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_EXTENSIONS>;
virtualinvoke v19.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v20, v18);
label3:
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void write(io.netty.channel.ChannelHandlerContext,java.lang.Object,io.netty.channel.ChannelPromise)>(v1, v2, v3);
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.http.HttpHeaders v4, v6;
io.netty.util.AsciiString v7;
io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension v18;
io.netty.handler.codec.CodecException v24;
boolean v14, v19, v27, v3, v5;
io.netty.channel.ChannelPipeline v31, v35, v39;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder v29;
java.util.List v16, v9;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder v30;
java.util.ArrayList v10;
io.netty.channel.ChannelHandlerContext v1;
int v11, v12, v21, v22, v23;
java.lang.String v25, v32, v34, v36, v38, v40, v8;
java.util.Iterator v13, v17, v26;
io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler v0;
java.lang.Class v33, v37;
java.lang.Object v15, v2, v20, v28;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v3 == 0 goto label8;
v4 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v5 = staticinvoke <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil: boolean isWebsocketUpgrade(io.netty.handler.codec.http.HttpHeaders)>(v4);
if v5 == 0 goto label8;
v6 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v7 = <io.netty.handler.codec.http.HttpHeaderNames: io.netty.util.AsciiString SEC_WEBSOCKET_EXTENSIONS>;
v8 = virtualinvoke v6.<io.netty.handler.codec.http.HttpHeaders: java.lang.String getAsString(java.lang.CharSequence)>(v7);
if v8 == null goto label7;
v9 = staticinvoke <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionUtil: java.util.List extractExtensions(java.lang.String)>(v8);
v10 = new java.util.ArrayList;
v11 = interfaceinvoke v9.<java.util.List: int size()>();
specialinvoke v10.<java.util.ArrayList: void <init>(int)>(v11);
v12 = 0;
v13 = interfaceinvoke v9.<java.util.List: java.util.Iterator iterator()>();
label1:
v14 = interfaceinvoke v13.<java.util.Iterator: boolean hasNext()>();
if v14 == 0 goto label5;
v15 = interfaceinvoke v13.<java.util.Iterator: java.lang.Object next()>();
v16 = v0.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandler: java.util.List extensionHandshakers>;
v17 = interfaceinvoke v16.<java.util.List: java.util.Iterator iterator()>();
v18 = null;
label2:
if v18 != null goto label3;
v19 = interfaceinvoke v17.<java.util.Iterator: boolean hasNext()>();
if v19 == 0 goto label3;
v20 = interfaceinvoke v17.<java.util.Iterator: java.lang.Object next()>();
v18 = interfaceinvoke v20.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtensionHandshaker: io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension handshakeExtension(io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionData)>(v15);
goto label2;
label3:
if v18 == null goto label4;
v21 = interfaceinvoke v18.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension: int rsv()>();
v22 = v21 & v12;
if v22 != 0 goto label4;
v23 = interfaceinvoke v18.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension: int rsv()>();
v12 = v12 | v23;
interfaceinvoke v10.<java.util.List: boolean add(java.lang.Object)>(v18);
goto label1;
label4:
v24 = new io.netty.handler.codec.CodecException;
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid WebSocket Extension handshake for \"\u0001\"");
specialinvoke v24.<io.netty.handler.codec.CodecException: void <init>(java.lang.String)>(v25);
throw v24;
label5:
v26 = interfaceinvoke v10.<java.util.List: java.util.Iterator iterator()>();
label6:
v27 = interfaceinvoke v26.<java.util.Iterator: boolean hasNext()>();
if v27 == 0 goto label7;
v28 = interfaceinvoke v26.<java.util.Iterator: java.lang.Object next()>();
v29 = interfaceinvoke v28.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionDecoder newExtensionDecoder()>();
v30 = interfaceinvoke v28.<io.netty.handler.codec.http.websocketx.extensions.WebSocketClientExtension: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionEncoder newExtensionEncoder()>();
v31 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v32 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v33 = virtualinvoke v29.<java.lang.Object: java.lang.Class getClass()>();
v34 = virtualinvoke v33.<java.lang.Class: java.lang.String getName()>();
interfaceinvoke v31.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v32, v34, v29);
v35 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v36 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
v37 = virtualinvoke v30.<java.lang.Object: java.lang.Class getClass()>();
v38 = virtualinvoke v37.<java.lang.Class: java.lang.String getName()>();
interfaceinvoke v35.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline addAfter(java.lang.String,java.lang.String,io.netty.channel.ChannelHandler)>(v36, v38, v30);
goto label6;
label7:
v39 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
v40 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: java.lang.String name()>();
interfaceinvoke v39.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler remove(java.lang.String)>(v40);
label8:
specialinvoke v0.<io.netty.channel.ChannelDuplexHandler: void channelRead(io.netty.channel.ChannelHandlerContext,java.lang.Object)>(v1, v2);
return;
}
}