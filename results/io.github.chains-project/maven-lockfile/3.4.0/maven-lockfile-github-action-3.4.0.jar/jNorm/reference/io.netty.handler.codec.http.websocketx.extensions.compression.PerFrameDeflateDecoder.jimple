class io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder extends io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder
{
void <init>(boolean)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder v0;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder;
v1 := @parameter0: boolean;
v2 = <io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter NEVER_SKIP>;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: void <init>(boolean,io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)>(v1, v2);
return;
}
void <init>(boolean, io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder v0;
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder;
v1 := @parameter0: boolean;
v2 := @parameter1: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter;
specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: void <init>(boolean,io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter)>(v1, v2);
return;
}
public boolean acceptInboundMessage(java.lang.Object) throws java.lang.Exception
{
io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter v3;
io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder v0;
int v8, v9;
java.lang.Object v1;
boolean v10, v2, v4, v5, v6, v7;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder;
v1 := @parameter0: java.lang.Object;
v2 = specialinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.DeflateDecoder: boolean acceptInboundMessage(java.lang.Object)>(v1);
if v2 != 0 goto label1;
return 0;
label1:
v3 = virtualinvoke v0.<io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder: io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter extensionDecoderFilter()>();
v4 = interfaceinvoke v3.<io.netty.handler.codec.http.websocketx.extensions.WebSocketExtensionFilter: boolean mustSkip(io.netty.handler.codec.http.websocketx.WebSocketFrame)>(v1);
if v4 == 0 goto label2;
return 0;
label2:
v5 = v1 instanceof io.netty.handler.codec.http.websocketx.TextWebSocketFrame;
if v5 != 0 goto label3;
v6 = v1 instanceof io.netty.handler.codec.http.websocketx.BinaryWebSocketFrame;
if v6 != 0 goto label3;
v7 = v1 instanceof io.netty.handler.codec.http.websocketx.ContinuationWebSocketFrame;
if v7 == 0 goto label4;
label3:
v8 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketFrame: int rsv()>();
v9 = v8 & 4;
if v9 <= 0 goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
}
protected int newRsv(io.netty.handler.codec.http.websocketx.WebSocketFrame)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder v0;
io.netty.handler.codec.http.websocketx.WebSocketFrame v1;
int v2, v3;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketFrame;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.websocketx.WebSocketFrame: int rsv()>();
v3 = v2 ^ 4;
return v3;
}
protected boolean appendFrameTail(io.netty.handler.codec.http.websocketx.WebSocketFrame)
{
io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder v0;
io.netty.handler.codec.http.websocketx.WebSocketFrame v1;
v0 := @this: io.netty.handler.codec.http.websocketx.extensions.compression.PerFrameDeflateDecoder;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketFrame;
return 1;
}
}