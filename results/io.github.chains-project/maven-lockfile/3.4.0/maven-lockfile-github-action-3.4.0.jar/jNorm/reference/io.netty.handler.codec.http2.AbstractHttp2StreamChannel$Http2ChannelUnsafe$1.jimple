class io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
final io.netty.channel.ChannelPromise val$promise;
final io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe this$1;
void <init>(io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe, io.netty.channel.ChannelPromise)
{
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1 v0;
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe v1;
io.netty.channel.ChannelPromise v2;
v0 := @this: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1;
v1 := @parameter0: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe;
v2 := @parameter1: io.netty.channel.ChannelPromise;
v0.<io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe this$1> = v1;
v0.<io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1: io.netty.channel.ChannelPromise val$promise> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.channel.ChannelFuture)
{
io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1 v0;
io.netty.channel.ChannelPromise v2;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = v0.<io.netty.handler.codec.http2.AbstractHttp2StreamChannel$Http2ChannelUnsafe$1: io.netty.channel.ChannelPromise val$promise>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
return;
}
}