public abstract class io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder extends java.lang.Object
{
private final io.netty.handler.codec.http2.Http2Connection connection;
private int maxContentLength;
private boolean validateHttpHeaders;
private boolean propagateSettings;
protected void <init>(io.netty.handler.codec.http2.Http2Connection)
{
java.lang.Object v2;
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "connection");
v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.Http2Connection connection> = v2;
return;
}
protected final io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder self()
{
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
return v0;
}
protected io.netty.handler.codec.http2.Http2Connection connection()
{
io.netty.handler.codec.http2.Http2Connection v1;
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 = v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.Http2Connection connection>;
return v1;
}
protected int maxContentLength()
{
int v1;
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 = v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: int maxContentLength>;
return v1;
}
protected io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder maxContentLength(int)
{
int v1;
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0, v2;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 := @parameter0: int;
v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: int maxContentLength> = v1;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder self()>();
return v2;
}
protected boolean isValidateHttpHeaders()
{
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 = v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: boolean validateHttpHeaders>;
return v1;
}
protected io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder validateHttpHeaders(boolean)
{
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0, v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: boolean validateHttpHeaders> = v1;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder self()>();
return v2;
}
protected boolean isPropagateSettings()
{
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 = v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: boolean propagateSettings>;
return v1;
}
protected io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder propagateSettings(boolean)
{
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0, v2;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
v1 := @parameter0: boolean;
v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: boolean propagateSettings> = v1;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder self()>();
return v2;
}
protected io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter build()
{
java.lang.Throwable v6;
java.lang.IllegalStateException v7;
io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter v5;
io.netty.handler.codec.http2.Http2Connection v1, v8;
io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder v0;
int v2;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder;
label1:
v1 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.Http2Connection connection()>();
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: int maxContentLength()>();
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: boolean isValidateHttpHeaders()>();
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: boolean isPropagateSettings()>();
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter build(io.netty.handler.codec.http2.Http2Connection,int,boolean,boolean)>(v1, v2, v3, v4);
label2:
goto label4;
label3:
v6 := @caughtexception;
v7 = new java.lang.IllegalStateException;
specialinvoke v7.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("failed to create a new InboundHttp2ToHttpAdapter", v6);
throw v7;
label4:
v8 = v0.<io.netty.handler.codec.http2.AbstractInboundHttp2ToHttpAdapterBuilder: io.netty.handler.codec.http2.Http2Connection connection>;
interfaceinvoke v8.<io.netty.handler.codec.http2.Http2Connection: void addListener(io.netty.handler.codec.http2.Http2Connection$Listener)>(v5);
return v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
protected abstract io.netty.handler.codec.http2.InboundHttp2ToHttpAdapter build(io.netty.handler.codec.http2.Http2Connection, int, boolean, boolean) throws java.lang.Exception;
}