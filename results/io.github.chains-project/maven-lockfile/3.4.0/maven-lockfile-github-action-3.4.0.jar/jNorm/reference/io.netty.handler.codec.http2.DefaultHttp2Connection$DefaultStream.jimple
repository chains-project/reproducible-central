class io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream extends java.lang.Object implements io.netty.handler.codec.http2.Http2Stream
{
private static final byte META_STATE_SENT_RST;
private static final byte META_STATE_SENT_HEADERS;
private static final byte META_STATE_SENT_TRAILERS;
private static final byte META_STATE_SENT_PUSHPROMISE;
private static final byte META_STATE_RECV_HEADERS;
private static final byte META_STATE_RECV_TRAILERS;
private final int id;
private final io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties;
private io.netty.handler.codec.http2.Http2Stream$State state;
private byte metaState;
final io.netty.handler.codec.http2.DefaultHttp2Connection this$0;
void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection, int, io.netty.handler.codec.http2.Http2Stream$State)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap v4;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Stream$State v3;
int v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2Connection;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Stream$State;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = new io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap;
specialinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap: void <init>(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream)>(v0);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties> = v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id> = v2;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state> = v3;
return;
}
public final int id()
{
int v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id>;
return v1;
}
public final io.netty.handler.codec.http2.Http2Stream$State state()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Stream$State v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
return v1;
}
public boolean isResetSent()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 & 1;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public io.netty.handler.codec.http2.Http2Stream resetSent()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 | 1;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState> = v2;
return v0;
}
public io.netty.handler.codec.http2.Http2Stream headersSent(boolean)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v2, v4, v5;
boolean v1, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: boolean;
if v1 != 0 goto label3;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: boolean isHeadersSent()>();
if v3 == 0 goto label1;
v4 = 4;
goto label2;
label1:
v4 = 2;
label2:
v5 = v2 | v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState> = v5;
label3:
return v0;
}
public boolean isHeadersSent()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 & 2;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isTrailersSent()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 & 4;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public io.netty.handler.codec.http2.Http2Stream headersReceived(boolean)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v2, v4, v5;
boolean v1, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: boolean;
if v1 != 0 goto label3;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v3 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: boolean isHeadersReceived()>();
if v3 == 0 goto label1;
v4 = 32;
goto label2;
label1:
v4 = 16;
label2:
v5 = v2 | v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState> = v5;
label3:
return v0;
}
public boolean isHeadersReceived()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 & 16;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isTrailersReceived()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 & 32;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public io.netty.handler.codec.http2.Http2Stream pushPromiseSent()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 | 8;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState> = v2;
return v0;
}
public boolean isPushPromiseSent()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
byte v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: byte metaState>;
v2 = v1 & 8;
if v2 == 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public final java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey, java.lang.Object)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap v3;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey v5;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v1;
java.lang.Object v2, v6;
io.netty.handler.codec.http2.DefaultHttp2Connection v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$PropertyKey;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties>;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyKey(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v1);
v6 = virtualinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap: java.lang.Object add(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey,java.lang.Object)>(v5, v2);
return v6;
}
public final java.lang.Object getProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey v4;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v1;
java.lang.Object v5;
io.netty.handler.codec.http2.DefaultHttp2Connection v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$PropertyKey;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties>;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v4 = virtualinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyKey(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v1);
v5 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap: java.lang.Object get(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey)>(v4);
return v5;
}
public final java.lang.Object removeProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey)
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap v2;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey v4;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v1;
java.lang.Object v5;
io.netty.handler.codec.http2.DefaultHttp2Connection v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$PropertyKey;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap properties>;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v4 = virtualinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey verifyKey(io.netty.handler.codec.http2.Http2Connection$PropertyKey)>(v1);
v5 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream$PropertyMap: java.lang.Object remove(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultPropertyKey)>(v4);
return v5;
}
public io.netty.handler.codec.http2.Http2Stream open(boolean) throws io.netty.handler.codec.http2.Http2Exception
{
java.lang.Object[] v11;
io.netty.handler.codec.http2.Http2Stream$State v3, v5;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Exception v12;
int v2, v9;
io.netty.handler.codec.http2.Http2Error v8;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v6;
java.lang.String v10;
boolean v1, v4, v7;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: boolean;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id>;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
v4 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: boolean isLocal()>();
v5 = staticinvoke <io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.Http2Stream$State activeState(int,io.netty.handler.codec.http2.Http2Stream$State,boolean,boolean)>(v2, v3, v4, v1);
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state> = v5;
v6 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy()>();
v7 = virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: boolean canOpenStream()>();
if v7 != 0 goto label1;
v8 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v9 = virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int maxActiveStreams()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Maximum active streams violated for this endpoint: \u0001");
v11 = newarray (java.lang.Object)[0];
v12 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v8, v10, v11);
throw v12;
label1:
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: void activate()>();
return v0;
}
void activate()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
io.netty.handler.codec.http2.Http2Stream$State v1, v2, v3, v4;
io.netty.handler.codec.http2.DefaultHttp2Connection v5;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
v2 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL>;
if v1 != v2 goto label1;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream headersSent(boolean)>(0);
goto label2;
label1:
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
v4 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE>;
if v3 != v4 goto label2;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream headersReceived(boolean)>(0);
label2:
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void activate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream)>(v0);
return;
}
io.netty.handler.codec.http2.Http2Stream close(java.util.Iterator)
{
java.util.Iterator v1;
io.netty.handler.codec.http2.Http2Stream$State v2, v3, v4;
io.netty.handler.codec.http2.DefaultHttp2Connection v8;
io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams v9;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
int v6, v7;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 := @parameter0: java.util.Iterator;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
v3 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State CLOSED>;
if v2 != v3 goto label1;
return v0;
label1:
v4 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State CLOSED>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state> = v4;
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy()>();
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int numStreams>;
v7 = v6 - 1;
v5.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: int numStreams> = v7;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v9 = v8.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams activeStreams>;
virtualinvoke v9.<io.netty.handler.codec.http2.DefaultHttp2Connection$ActiveStreams: void deactivate(io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream,java.util.Iterator)>(v0, v1);
return v0;
}
public io.netty.handler.codec.http2.Http2Stream close()
{
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream close(java.util.Iterator)>(null);
return v1;
}
public io.netty.handler.codec.http2.Http2Stream closeLocalSide()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
int[] v1;
io.netty.handler.codec.http2.Http2Stream$State v2, v5;
int v3, v4;
io.netty.handler.codec.http2.DefaultHttp2Connection v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = <io.netty.handler.codec.http2.DefaultHttp2Connection$2: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v4 = v1[v3];
lookupswitch(v4)
{
case 4: goto label1;
case 5: goto label3;
default: goto label2;
};
label1:
v5 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state> = v5;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection: void notifyHalfClosed(io.netty.handler.codec.http2.Http2Stream)>(v0);
goto label3;
label2:
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream close()>();
label3:
return v0;
}
public io.netty.handler.codec.http2.Http2Stream closeRemoteSide()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
int[] v1;
io.netty.handler.codec.http2.Http2Stream$State v2, v5;
int v3, v4;
io.netty.handler.codec.http2.DefaultHttp2Connection v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = <io.netty.handler.codec.http2.DefaultHttp2Connection$2: int[] $SwitchMap$io$netty$handler$codec$http2$Http2Stream$State>;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.Http2Stream$State: int ordinal()>();
v4 = v1[v3];
lookupswitch(v4)
{
case 4: goto label1;
case 6: goto label3;
default: goto label2;
};
label1:
v5 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE>;
v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream$State state> = v5;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
virtualinvoke v6.<io.netty.handler.codec.http2.DefaultHttp2Connection: void notifyHalfClosed(io.netty.handler.codec.http2.Http2Stream)>(v0);
goto label3;
label2:
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.Http2Stream close()>();
label3:
return v0;
}
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint createdBy()
{
io.netty.handler.codec.http2.DefaultHttp2Connection v1, v5, v7;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
int v3;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v2, v6;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v2 = v1.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id>;
v4 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: boolean isValidStreamId(int)>(v3);
if v4 == 0 goto label1;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v6 = v5.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
goto label2;
label1:
v7 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v6 = v7.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint remoteEndpoint>;
label2:
return v6;
}
final boolean isLocal()
{
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream v0;
int v3;
io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint v2;
io.netty.handler.codec.http2.DefaultHttp2Connection v1;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: io.netty.handler.codec.http2.DefaultHttp2Connection this$0>;
v2 = v1.<io.netty.handler.codec.http2.DefaultHttp2Connection: io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint localEndpoint>;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultStream: int id>;
v4 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2Connection$DefaultEndpoint: boolean isValidStreamId(int)>(v3);
return v4;
}
}