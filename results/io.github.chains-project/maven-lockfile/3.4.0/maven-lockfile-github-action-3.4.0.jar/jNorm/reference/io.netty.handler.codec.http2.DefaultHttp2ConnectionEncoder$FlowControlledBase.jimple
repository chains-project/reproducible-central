public abstract class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase extends java.lang.Object implements io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled, io.netty.channel.ChannelFutureListener
{
protected final io.netty.handler.codec.http2.Http2Stream stream;
protected io.netty.channel.ChannelPromise promise;
protected boolean endOfStream;
protected int padding;
final io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0;
void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder, io.netty.handler.codec.http2.Http2Stream, int, boolean, io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelPromise v5;
int v3;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v1;
io.netty.handler.codec.http2.Http2Stream v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase v0;
boolean v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Stream;
v3 := @parameter2: int;
v4 := @parameter3: boolean;
v5 := @parameter4: io.netty.channel.ChannelPromise;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v3, "padding");
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: int padding> = v3;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: boolean endOfStream> = v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.handler.codec.http2.Http2Stream stream> = v2;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.channel.ChannelPromise promise> = v5;
return;
}
public void writeComplete()
{
io.netty.handler.codec.http2.Http2LifecycleManager v3;
io.netty.channel.ChannelPromise v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v2;
io.netty.handler.codec.http2.Http2Stream v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: boolean endOfStream>;
if v1 == 0 goto label1;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager>;
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.handler.codec.http2.Http2Stream stream>;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.channel.ChannelPromise promise>;
interfaceinvoke v3.<io.netty.handler.codec.http2.Http2LifecycleManager: void closeStreamLocal(io.netty.handler.codec.http2.Http2Stream,io.netty.channel.ChannelFuture)>(v4, v5);
label1:
return;
}
public void operationComplete(io.netty.channel.ChannelFuture) throws java.lang.Exception
{
java.lang.Throwable v6;
io.netty.channel.ChannelHandlerContext v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v3;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase v0;
io.netty.handler.codec.http2.Http2RemoteFlowController v4;
boolean v2;
io.netty.channel.ChannelFuture v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase;
v1 := @parameter0: io.netty.channel.ChannelFuture;
v2 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: boolean isSuccess()>();
if v2 != 0 goto label1;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0>;
v4 = virtualinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder: io.netty.handler.codec.http2.Http2RemoteFlowController flowController()>();
v5 = interfaceinvoke v4.<io.netty.handler.codec.http2.Http2RemoteFlowController: io.netty.channel.ChannelHandlerContext channelHandlerContext()>();
v6 = interfaceinvoke v1.<io.netty.channel.ChannelFuture: java.lang.Throwable cause()>();
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: void error(io.netty.channel.ChannelHandlerContext,java.lang.Throwable)>(v5, v6);
label1:
return;
}
}