final class io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData extends io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase
{
private final io.netty.channel.CoalescingBufferQueue queue;
private int dataSize;
final io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0;
void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder, io.netty.handler.codec.http2.Http2Stream, io.netty.buffer.ByteBuf, int, boolean, io.netty.channel.ChannelPromise)
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData v0;
io.netty.channel.Channel v8;
io.netty.buffer.ByteBuf v3;
io.netty.channel.ChannelPromise v6;
int v11, v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v1;
io.netty.handler.codec.http2.Http2Stream v2;
io.netty.channel.CoalescingBufferQueue v10, v7, v9;
boolean v5;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Stream;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
v6 := @parameter5: io.netty.channel.ChannelPromise;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0> = v1;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledBase: void <init>(io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder,io.netty.handler.codec.http2.Http2Stream,int,boolean,io.netty.channel.ChannelPromise)>(v1, v2, v4, v5, v6);
v7 = new io.netty.channel.CoalescingBufferQueue;
v8 = interfaceinvoke v6.<io.netty.channel.ChannelPromise: io.netty.channel.Channel channel()>();
specialinvoke v7.<io.netty.channel.CoalescingBufferQueue: void <init>(io.netty.channel.Channel)>(v8);
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue> = v7;
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
virtualinvoke v9.<io.netty.channel.CoalescingBufferQueue: void add(io.netty.buffer.ByteBuf,io.netty.channel.ChannelPromise)>(v3, v6);
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v11 = virtualinvoke v10.<io.netty.channel.CoalescingBufferQueue: int readableBytes()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int dataSize> = v11;
return;
}
public int size()
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData v0;
int v1, v2, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int dataSize>;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding>;
v3 = v1 + v2;
return v3;
}
public void error(io.netty.channel.ChannelHandlerContext, java.lang.Throwable)
{
java.lang.Throwable v2;
io.netty.channel.ChannelHandlerContext v1;
io.netty.handler.codec.http2.Http2LifecycleManager v5;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData v0;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v4;
io.netty.channel.CoalescingBufferQueue v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
virtualinvoke v3.<io.netty.channel.CoalescingBufferQueue: void releaseAndFailAll(java.lang.Throwable)>(v2);
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0>;
v5 = v4.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder: io.netty.handler.codec.http2.Http2LifecycleManager lifecycleManager>;
interfaceinvoke v5.<io.netty.handler.codec.http2.Http2LifecycleManager: void onError(io.netty.channel.ChannelHandlerContext,boolean,java.lang.Throwable)>(v1, 1, v2);
return;
}
public void write(io.netty.channel.ChannelHandlerContext, int)
{
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData v0;
io.netty.channel.ChannelHandlerContext v1;
io.netty.buffer.ByteBuf v11, v16;
io.netty.channel.ChannelPromise v13, v14, v8, v9;
int v12, v18, v19, v2, v20, v21, v22, v23, v27, v29, v4;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder v24;
io.netty.handler.codec.http2.Http2Stream v26;
io.netty.channel.CoalescingBufferQueue v10, v15, v17, v3, v6;
boolean v28, v30, v5, v7;
io.netty.handler.codec.http2.Http2FrameWriter v25;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: int;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v4 = virtualinvoke v3.<io.netty.channel.CoalescingBufferQueue: int readableBytes()>();
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: boolean endOfStream>;
if v5 != 0 goto label4;
if v4 != 0 goto label3;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v7 = virtualinvoke v6.<io.netty.channel.CoalescingBufferQueue: boolean isEmpty()>();
if v7 == 0 goto label1;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int dataSize> = 0;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding> = 0;
goto label2;
label1:
v8 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v9 = interfaceinvoke v8.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)>(v0);
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v11 = virtualinvoke v10.<io.netty.channel.CoalescingBufferQueue: io.netty.buffer.ByteBuf remove(int,io.netty.channel.ChannelPromise)>(0, v9);
interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelFuture write(java.lang.Object,io.netty.channel.ChannelPromise)>(v11, v9);
label2:
return;
label3:
if v2 != 0 goto label4;
return;
label4:
v12 = staticinvoke <java.lang.Math: int min(int,int)>(v4, v2);
v13 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPromise newPromise()>();
v14 = interfaceinvoke v13.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise addListener(io.netty.util.concurrent.GenericFutureListener)>(v0);
v15 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v16 = virtualinvoke v15.<io.netty.channel.CoalescingBufferQueue: io.netty.buffer.ByteBuf remove(int,io.netty.channel.ChannelPromise)>(v12, v14);
v17 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v18 = virtualinvoke v17.<io.netty.channel.CoalescingBufferQueue: int readableBytes()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int dataSize> = v18;
v19 = v2 - v12;
v20 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding>;
v21 = staticinvoke <java.lang.Math: int min(int,int)>(v19, v20);
v22 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding>;
v23 = v22 - v21;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding> = v23;
v24 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder this$0>;
v25 = virtualinvoke v24.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder: io.netty.handler.codec.http2.Http2FrameWriter frameWriter()>();
v26 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.handler.codec.http2.Http2Stream stream>;
v27 = interfaceinvoke v26.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v28 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: boolean endOfStream>;
if v28 == 0 goto label5;
v29 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int size()>();
if v29 != 0 goto label5;
v30 = 1;
goto label6;
label5:
v30 = 0;
label6:
interfaceinvoke v25.<io.netty.handler.codec.http2.Http2FrameWriter: io.netty.channel.ChannelFuture writeData(io.netty.channel.ChannelHandlerContext,int,io.netty.buffer.ByteBuf,int,boolean,io.netty.channel.ChannelPromise)>(v1, v27, v16, v21, v30, v14);
return;
}
public boolean merge(io.netty.channel.ChannelHandlerContext, io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled)
{
io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled v2;
io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData v0;
io.netty.channel.ChannelHandlerContext v1;
int v10, v11, v12, v13, v4, v5, v6;
io.netty.channel.CoalescingBufferQueue v7, v8, v9;
java.lang.Class v3;
boolean v14;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled;
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
if class "Lio/netty/handler/codec/http2/DefaultHttp2ConnectionEncoder$FlowControlledData;" != v3 goto label1;
v4 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int size()>();
v5 = 2147483647 - v4;
v6 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int size()>();
if v5 >= v6 goto label2;
label1:
return 0;
label2:
v7 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
virtualinvoke v7.<io.netty.channel.CoalescingBufferQueue: void copyTo(io.netty.channel.AbstractCoalescingBufferQueue)>(v8);
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: io.netty.channel.CoalescingBufferQueue queue>;
v10 = virtualinvoke v9.<io.netty.channel.CoalescingBufferQueue: int readableBytes()>();
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int dataSize> = v10;
v11 = v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding>;
v12 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding>;
v13 = staticinvoke <java.lang.Math: int max(int,int)>(v11, v12);
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: int padding> = v13;
v14 = v2.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: boolean endOfStream>;
v0.<io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$FlowControlledData: boolean endOfStream> = v14;
return 1;
}
}