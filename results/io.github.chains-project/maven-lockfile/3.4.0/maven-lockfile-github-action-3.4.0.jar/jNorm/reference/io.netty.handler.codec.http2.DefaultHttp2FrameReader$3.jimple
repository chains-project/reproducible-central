class io.netty.handler.codec.http2.DefaultHttp2FrameReader$3 extends io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation
{
final int val$pushPromiseStreamId;
final io.netty.channel.ChannelHandlerContext val$ctx;
final int val$promisedStreamId;
final int val$padding;
final io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0;
void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader, int, io.netty.channel.ChannelHandlerContext, int, int)
{
io.netty.channel.ChannelHandlerContext v3;
int v2, v4, v5;
io.netty.handler.codec.http2.DefaultHttp2FrameReader$3 v0;
io.netty.handler.codec.http2.DefaultHttp2FrameReader v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameReader$3;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2FrameReader;
v2 := @parameter1: int;
v3 := @parameter2: io.netty.channel.ChannelHandlerContext;
v4 := @parameter3: int;
v5 := @parameter4: int;
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: io.netty.handler.codec.http2.DefaultHttp2FrameReader this$0> = v1;
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$pushPromiseStreamId> = v2;
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: io.netty.channel.ChannelHandlerContext val$ctx> = v3;
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$promisedStreamId> = v4;
v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$padding> = v5;
specialinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersContinuation: void <init>(io.netty.handler.codec.http2.DefaultHttp2FrameReader)>(v1);
return;
}
public int getStreamId()
{
int v1;
io.netty.handler.codec.http2.DefaultHttp2FrameReader$3 v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameReader$3;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$pushPromiseStreamId>;
return v1;
}
public void processFragment(boolean, io.netty.buffer.ByteBuf, int, io.netty.handler.codec.http2.Http2FrameListener) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.buffer.ByteBufAllocator v7;
io.netty.handler.codec.http2.Http2FrameListener v4;
io.netty.channel.ChannelHandlerContext v6, v8;
io.netty.buffer.ByteBuf v2;
io.netty.handler.codec.http2.Http2Headers v12;
int v10, v13, v3, v9;
io.netty.handler.codec.http2.DefaultHttp2FrameReader$3 v0;
io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder v11, v5;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2FrameReader$3;
v1 := @parameter0: boolean;
v2 := @parameter1: io.netty.buffer.ByteBuf;
v3 := @parameter2: int;
v4 := @parameter3: io.netty.handler.codec.http2.Http2FrameListener;
v5 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder headersBlockBuilder()>();
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: io.netty.channel.ChannelHandlerContext val$ctx>;
v7 = interfaceinvoke v6.<io.netty.channel.ChannelHandlerContext: io.netty.buffer.ByteBufAllocator alloc()>();
virtualinvoke v5.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder: void addFragment(io.netty.buffer.ByteBuf,int,io.netty.buffer.ByteBufAllocator,boolean)>(v2, v3, v7, v1);
if v1 == 0 goto label1;
v8 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: io.netty.channel.ChannelHandlerContext val$ctx>;
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$pushPromiseStreamId>;
v10 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$promisedStreamId>;
v11 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder headersBlockBuilder()>();
v12 = virtualinvoke v11.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$HeadersBlockBuilder: io.netty.handler.codec.http2.Http2Headers headers()>();
v13 = v0.<io.netty.handler.codec.http2.DefaultHttp2FrameReader$3: int val$padding>;
interfaceinvoke v4.<io.netty.handler.codec.http2.Http2FrameListener: void onPushPromiseRead(io.netty.channel.ChannelHandlerContext,int,int,io.netty.handler.codec.http2.Http2Headers,int)>(v8, v9, v10, v12, v13);
label1:
return;
}
}