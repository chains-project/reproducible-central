class io.netty.handler.codec.http2.DefaultHttp2Headers$2 extends java.lang.Object implements io.netty.handler.codec.DefaultHeaders$NameValidator
{
void <init>()
{
io.netty.handler.codec.http2.DefaultHttp2Headers$2 v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers$2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void validateName(java.lang.CharSequence)
{
java.lang.Throwable v10;
java.lang.Object[] v12, v16, v23, v28, v4;
io.netty.handler.codec.http2.DefaultHttp2Headers$2 v0;
io.netty.handler.codec.http2.Http2Exception v13, v17, v24, v29, v5, v9;
int v14, v18, v19, v2, v8;
boolean v21, v25, v6;
java.lang.CharSequence v1;
char v20;
io.netty.util.ByteProcessor v7;
io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName v26;
io.netty.handler.codec.http2.Http2Error v11, v15, v22, v27, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2Headers$2;
v1 := @parameter0: java.lang.CharSequence;
if v1 == null goto label01;
v2 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v2 != 0 goto label02;
label01:
v3 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v4 = newarray (java.lang.Object)[1];
v4[0] = v1;
v5 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v3, "empty headers are not allowed [%s]", v4);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v5);
label02:
v6 = v1 instanceof io.netty.util.AsciiString;
if v6 == 0 goto label08;
label03:
v7 = <io.netty.handler.codec.http2.DefaultHttp2Headers: io.netty.util.ByteProcessor HTTP2_NAME_VALIDATOR_PROCESSOR>;
v8 = virtualinvoke v1.<io.netty.util.AsciiString: int forEachByte(io.netty.util.ByteProcessor)>(v7);
label04:
goto label07;
label05:
v9 := @caughtexception;
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v9);
return;
label06:
v10 := @caughtexception;
v11 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v12 = newarray (java.lang.Object)[1];
v12[0] = v1;
v13 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v11, v10, "unexpected error. invalid header name [%s]", v12);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v13);
return;
label07:
v14 = (int) -1;
if v8 == v14 goto label11;
v15 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v16 = newarray (java.lang.Object)[1];
v16[0] = v1;
v17 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v15, "invalid header name [%s]", v16);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v17);
goto label11;
label08:
v18 = 0;
label09:
v19 = interfaceinvoke v1.<java.lang.CharSequence: int length()>();
if v18 >= v19 goto label11;
v20 = interfaceinvoke v1.<java.lang.CharSequence: char charAt(int)>(v18);
v21 = staticinvoke <io.netty.util.AsciiString: boolean isUpperCase(char)>(v20);
if v21 == 0 goto label10;
v22 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v23 = newarray (java.lang.Object)[1];
v23[0] = v1;
v24 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v22, "invalid header name [%s]", v23);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v24);
label10:
v18 = v18 + 1;
goto label09;
label11:
v25 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: boolean hasPseudoHeaderFormat(java.lang.CharSequence)>(v1);
if v25 == 0 goto label12;
v26 = staticinvoke <io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName: io.netty.handler.codec.http2.Http2Headers$PseudoHeaderName getPseudoHeader(java.lang.CharSequence)>(v1);
if v26 != null goto label12;
v27 = <io.netty.handler.codec.http2.Http2Error: io.netty.handler.codec.http2.Http2Error PROTOCOL_ERROR>;
v28 = newarray (java.lang.Object)[1];
v28[0] = v1;
v29 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v27, "Invalid HTTP/2 pseudo-header \'%s\' encountered.", v28);
staticinvoke <io.netty.util.internal.PlatformDependent: void throwException(java.lang.Throwable)>(v29);
label12:
return;
catch io.netty.handler.codec.http2.Http2Exception from label03 to label04 with label05;
catch java.lang.Throwable from label03 to label04 with label06;
}
}