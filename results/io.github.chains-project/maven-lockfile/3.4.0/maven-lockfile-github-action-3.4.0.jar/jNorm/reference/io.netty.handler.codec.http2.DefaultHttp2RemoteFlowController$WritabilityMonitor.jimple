class io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor extends java.lang.Object implements io.netty.handler.codec.http2.StreamByteDistributor$Writer
{
private boolean inWritePendingBytes;
private long totalPendingBytes;
final io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0;
private void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController;
v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public final void write(io.netty.handler.codec.http2.Http2Stream, int)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v4;
int v2;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Stream;
v2 := @parameter1: int;
v3 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v4 = specialinvoke v3.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState state(io.netty.handler.codec.http2.Http2Stream)>(v1);
virtualinvoke v4.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: int writeAllocatedBytes(int)>(v2);
return;
}
void channelWritabilityChange() throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
return;
}
void stateCancelled(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState;
return;
}
void windowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int)
{
int v2;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState;
v2 := @parameter1: int;
virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: void windowSize(int)>(v2);
return;
}
void incrementWindowSize(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, int) throws io.netty.handler.codec.http2.Http2Exception
{
int v2;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState;
v2 := @parameter1: int;
virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: int incrementStreamWindow(int)>(v2);
return;
}
void enqueueFrame(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState, io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled v2;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v1;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState;
v2 := @parameter1: io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled;
virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: void enqueueFrame(io.netty.handler.codec.http2.Http2RemoteFlowController$FlowControlled)>(v2);
return;
}
final void incrementPendingBytes(int)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
int v1;
long v2, v3;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: int;
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: long totalPendingBytes>;
v3 = v2 + v1;
v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: long totalPendingBytes> = v3;
return;
}
final boolean isWritable(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState)
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v1;
boolean v2, v3, v4;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: boolean isWritableConnection()>();
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: boolean isWritable()>();
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
final void writePendingBytes() throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
java.lang.Throwable v11;
io.netty.handler.codec.http2.StreamByteDistributor v5;
int v3, v8;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v2, v4, v7, v9;
boolean v1, v10, v6;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: boolean inWritePendingBytes>;
if v1 == 0 goto label1;
return;
label1:
v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: boolean inWritePendingBytes> = 1;
label2:
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v3 = specialinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: int writableBytes()>();
label3:
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v5 = v4.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.StreamByteDistributor streamByteDistributor>;
v6 = interfaceinvoke v5.<io.netty.handler.codec.http2.StreamByteDistributor: boolean distribute(int,io.netty.handler.codec.http2.StreamByteDistributor$Writer)>(v3, v0);
if v6 == 0 goto label4;
v7 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v8 = specialinvoke v7.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: int writableBytes()>();
v3 = v8;
if v8 <= 0 goto label4;
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v10 = specialinvoke v9.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: boolean isChannelWritable0()>();
if v10 != 0 goto label3;
label4:
v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: boolean inWritePendingBytes> = 0;
goto label6;
label5:
v11 := @caughtexception;
v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: boolean inWritePendingBytes> = 0;
throw v11;
label6:
return;
catch java.lang.Throwable from label2 to label4 with label5;
}
void initialWindowSize(int) throws io.netty.handler.codec.http2.Http2Exception
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.Http2Connection v7;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$1 v8;
int v1, v3, v4;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v2, v5, v6, v9;
boolean v10;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 := @parameter0: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "newWindowSize");
v2 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v3 = v2.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: int initialWindowSize>;
v4 = v1 - v3;
v5 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v5.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: int initialWindowSize> = v1;
v6 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v7 = v6.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.Http2Connection connection>;
v8 = new io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$1;
specialinvoke v8.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor$1: void <init>(io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor,int)>(v0, v4);
interfaceinvoke v7.<io.netty.handler.codec.http2.Http2Connection: io.netty.handler.codec.http2.Http2Stream forEachActiveStream(io.netty.handler.codec.http2.Http2StreamVisitor)>(v8);
if v4 <= 0 goto label1;
v9 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v10 = specialinvoke v9.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: boolean isChannelWritable()>();
if v10 == 0 goto label1;
virtualinvoke v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: void writePendingBytes()>();
label1:
return;
}
final boolean isWritableConnection()
{
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor v0;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState v2;
long v4, v5;
byte v6;
int v3;
io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController v1, v7;
boolean v8, v9;
v0 := @this: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor;
v1 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v2 = v1.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState connectionState>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$FlowState: int windowSize()>();
v4 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: long totalPendingBytes>;
v5 = v3 - v4;
v6 = v5 cmp 0L;
if v6 <= 0 goto label1;
v7 = v0.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController$WritabilityMonitor: io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController this$0>;
v8 = specialinvoke v7.<io.netty.handler.codec.http2.DefaultHttp2RemoteFlowController: boolean isChannelWritable()>();
if v8 == 0 goto label1;
v9 = 1;
goto label2;
label1:
v9 = 0;
label2:
return v9;
}
}