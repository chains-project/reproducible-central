final class io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator extends io.netty.channel.DefaultChannelPromise
{
private final io.netty.channel.ChannelPromise promise;
private int expectedCount;
private int doneCount;
private java.lang.Throwable aggregateFailure;
private boolean doneAllocating;
static final boolean $assertionsDisabled;
void <init>(io.netty.channel.ChannelPromise, io.netty.channel.Channel, io.netty.util.concurrent.EventExecutor)
{
io.netty.channel.Channel v2;
io.netty.util.concurrent.EventExecutor v3;
io.netty.channel.ChannelPromise v1;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
java.lang.AssertionError v6;
boolean v4, v5;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 := @parameter0: io.netty.channel.ChannelPromise;
v2 := @parameter1: io.netty.channel.Channel;
v3 := @parameter2: io.netty.util.concurrent.EventExecutor;
specialinvoke v0.<io.netty.channel.DefaultChannelPromise: void <init>(io.netty.channel.Channel,io.netty.util.concurrent.EventExecutor)>(v2, v3);
v4 = <io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean $assertionsDisabled>;
if v4 != 0 goto label2;
if v1 == null goto label1;
v5 = interfaceinvoke v1.<io.netty.channel.ChannelPromise: boolean isDone()>();
if v5 == 0 goto label2;
label1:
v6 = new java.lang.AssertionError;
specialinvoke v6.<java.lang.AssertionError: void <init>()>();
throw v6;
label2:
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise promise> = v1;
return;
}
public io.netty.channel.ChannelPromise newPromise()
{
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v4, v5;
java.lang.AssertionError v3;
boolean v1, v2;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = <io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean $assertionsDisabled>;
if v1 != 0 goto label1;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean doneAllocating>;
if v2 == 0 goto label1;
v3 = new java.lang.AssertionError;
specialinvoke v3.<java.lang.AssertionError: void <init>(java.lang.Object)>("Done allocating. No more promises can be allocated.");
throw v3;
label1:
v4 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount>;
v5 = v4 + 1;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount> = v5;
return v0;
}
public io.netty.channel.ChannelPromise doneAllocatingPromises()
{
io.netty.channel.ChannelPromise v5;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v2, v3, v4;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean doneAllocating>;
if v1 != 0 goto label2;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean doneAllocating> = 1;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v3 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount>;
if v2 == v3 goto label1;
v4 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount>;
if v4 != 0 goto label2;
label1:
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setPromise()>();
return v5;
label2:
return v0;
}
public boolean tryFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v3, v4;
boolean v2, v5, v6;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 := @parameter0: java.lang.Throwable;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean allowFailure()>();
if v2 == 0 goto label2;
v3 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v4 = v3 + 1;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount> = v4;
specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void setAggregateFailure(java.lang.Throwable)>(v1);
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean allPromisesDone()>();
if v5 == 0 goto label1;
v6 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean tryPromise()>();
return v6;
label1:
return 1;
label2:
return 0;
}
public io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.netty.channel.ChannelPromise v6;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v3, v4;
boolean v2, v5;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 := @parameter0: java.lang.Throwable;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean allowFailure()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v4 = v3 + 1;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount> = v4;
specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: void setAggregateFailure(java.lang.Throwable)>(v1);
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean allPromisesDone()>();
if v5 == 0 goto label1;
v6 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setPromise()>();
return v6;
label1:
return v0;
}
public io.netty.channel.ChannelPromise setSuccess(java.lang.Void)
{
java.lang.Void v1;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v3, v4;
boolean v2, v5;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 := @parameter0: java.lang.Void;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean awaitingPromises()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v4 = v3 + 1;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount> = v4;
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean allPromisesDone()>();
if v5 == 0 goto label1;
specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise setPromise()>();
label1:
return v0;
}
public boolean trySuccess(java.lang.Void)
{
java.lang.Void v1;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v3, v4;
boolean v2, v5, v6;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 := @parameter0: java.lang.Void;
v2 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean awaitingPromises()>();
if v2 == 0 goto label2;
v3 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v4 = v3 + 1;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount> = v4;
v5 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean allPromisesDone()>();
if v5 == 0 goto label1;
v6 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean tryPromise()>();
return v6;
label1:
return 1;
label2:
return 0;
}
private boolean allowFailure()
{
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v2;
boolean v1, v3;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = specialinvoke v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean awaitingPromises()>();
if v1 != 0 goto label1;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount>;
if v2 != 0 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
private boolean awaitingPromises()
{
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v1, v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount>;
if v1 >= v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
private boolean allPromisesDone()
{
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
int v1, v2;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int doneCount>;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: int expectedCount>;
if v1 != v2 goto label1;
v3 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean doneAllocating>;
if v3 == 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
private io.netty.channel.ChannelPromise setPromise()
{
java.lang.Throwable v1, v5, v6;
io.netty.channel.ChannelPromise v2, v3, v4, v7;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
if v1 != null goto label1;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise promise>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
v3 = specialinvoke v0.<io.netty.channel.DefaultChannelPromise: io.netty.channel.ChannelPromise setSuccess(java.lang.Void)>(null);
return v3;
label1:
v4 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise promise>;
v5 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
interfaceinvoke v4.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v5);
v6 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
v7 = specialinvoke v0.<io.netty.channel.DefaultChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v6);
return v7;
}
private boolean tryPromise()
{
java.lang.Throwable v1, v5, v6;
io.netty.channel.ChannelPromise v2, v4;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
boolean v3, v7;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
if v1 != null goto label1;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise promise>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: boolean trySuccess()>();
v3 = specialinvoke v0.<io.netty.channel.DefaultChannelPromise: boolean trySuccess(java.lang.Object)>(null);
return v3;
label1:
v4 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: io.netty.channel.ChannelPromise promise>;
v5 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
interfaceinvoke v4.<io.netty.channel.ChannelPromise: boolean tryFailure(java.lang.Throwable)>(v5);
v6 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
v7 = specialinvoke v0.<io.netty.channel.DefaultChannelPromise: boolean tryFailure(java.lang.Throwable)>(v6);
return v7;
}
private void setAggregateFailure(java.lang.Throwable)
{
java.lang.Throwable v1, v2;
io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator v0;
v0 := @this: io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure>;
if v2 != null goto label1;
v0.<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: java.lang.Throwable aggregateFailure> = v1;
label1:
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http2/Http2CodecUtil;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator: boolean $assertionsDisabled> = v2;
return;
}
}