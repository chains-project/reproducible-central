public interface  io.netty.handler.codec.http2.Http2Connection$Endpoint extends java.lang.Object
{
public abstract int incrementAndGetNextStreamId();
public abstract boolean isValidStreamId(int);
public abstract boolean mayHaveCreatedStream(int);
public abstract boolean created(io.netty.handler.codec.http2.Http2Stream);
public abstract boolean canOpenStream();
public abstract io.netty.handler.codec.http2.Http2Stream createStream(int, boolean) throws io.netty.handler.codec.http2.Http2Exception;
public abstract io.netty.handler.codec.http2.Http2Stream reservePushStream(int, io.netty.handler.codec.http2.Http2Stream) throws io.netty.handler.codec.http2.Http2Exception;
public abstract boolean isServer();
public abstract void allowPushTo(boolean);
public abstract boolean allowPushTo();
public abstract int numActiveStreams();
public abstract int maxActiveStreams();
public abstract void maxActiveStreams(int);
public abstract int lastStreamCreated();
public abstract int lastStreamKnownByPeer();
public abstract io.netty.handler.codec.http2.Http2FlowController flowController();
public abstract void flowController(io.netty.handler.codec.http2.Http2FlowController);
public abstract io.netty.handler.codec.http2.Http2Connection$Endpoint opposite();
}