public class io.netty.handler.codec.http2.Http2Exception extends java.lang.Exception
{
private static final long serialVersionUID;
private final io.netty.handler.codec.http2.Http2Error error;
private final io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint;
static final boolean $assertionsDisabled;
public void <init>(io.netty.handler.codec.http2.Http2Error)
{
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v2;
io.netty.handler.codec.http2.Http2Exception v0;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 = <io.netty.handler.codec.http2.Http2Exception$ShutdownHint: io.netty.handler.codec.http2.Http2Exception$ShutdownHint HARD_SHUTDOWN>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,io.netty.handler.codec.http2.Http2Exception$ShutdownHint)>(v1, v2);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Error, io.netty.handler.codec.http2.Http2Exception$ShutdownHint)
{
io.netty.handler.codec.http2.Http2Exception v0;
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v2;
java.lang.Object v3, v4;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Exception$ShutdownHint;
specialinvoke v0.<java.lang.Exception: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "error");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Error error> = v3;
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v2, "shutdownHint");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint> = v4;
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Error, java.lang.String)
{
io.netty.handler.codec.http2.Http2Exception v0;
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v3;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter1: java.lang.String;
v3 = <io.netty.handler.codec.http2.Http2Exception$ShutdownHint: io.netty.handler.codec.http2.Http2Exception$ShutdownHint HARD_SHUTDOWN>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,io.netty.handler.codec.http2.Http2Exception$ShutdownHint)>(v1, v2, v3);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Error, java.lang.String, io.netty.handler.codec.http2.Http2Exception$ShutdownHint)
{
io.netty.handler.codec.http2.Http2Exception v0;
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v3;
java.lang.Object v4, v5;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Exception$ShutdownHint;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String)>(v2);
v4 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "error");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Error error> = v4;
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "shutdownHint");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint> = v5;
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Error, java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v3;
io.netty.handler.codec.http2.Http2Exception v0;
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v4;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
v4 = <io.netty.handler.codec.http2.Http2Exception$ShutdownHint: io.netty.handler.codec.http2.Http2Exception$ShutdownHint HARD_SHUTDOWN>;
specialinvoke v0.<io.netty.handler.codec.http2.Http2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable,io.netty.handler.codec.http2.Http2Exception$ShutdownHint)>(v1, v2, v3, v4);
return;
}
public void <init>(io.netty.handler.codec.http2.Http2Error, java.lang.String, java.lang.Throwable, io.netty.handler.codec.http2.Http2Exception$ShutdownHint)
{
java.lang.Throwable v3;
io.netty.handler.codec.http2.Http2Exception v0;
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v4;
java.lang.Object v5, v6;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Throwable;
v4 := @parameter3: io.netty.handler.codec.http2.Http2Exception$ShutdownHint;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(v2, v3);
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "error");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Error error> = v5;
v6 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v4, "shutdownHint");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint> = v6;
return;
}
static io.netty.handler.codec.http2.Http2Exception newStatic(io.netty.handler.codec.http2.Http2Error, java.lang.String, io.netty.handler.codec.http2.Http2Exception$ShutdownHint, java.lang.Class, java.lang.String)
{
java.lang.Throwable v9;
io.netty.handler.codec.http2.Http2Exception$StacklessHttp2Exception v6, v7, v8;
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v2;
int v5;
io.netty.handler.codec.http2.Http2Error v0;
java.lang.Class v3;
java.lang.String v1, v4;
v0 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: io.netty.handler.codec.http2.Http2Exception$ShutdownHint;
v3 := @parameter3: java.lang.Class;
v4 := @parameter4: java.lang.String;
v5 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v5 < 7 goto label1;
v6 = new io.netty.handler.codec.http2.Http2Exception$StacklessHttp2Exception;
specialinvoke v6.<io.netty.handler.codec.http2.Http2Exception$StacklessHttp2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,io.netty.handler.codec.http2.Http2Exception$ShutdownHint,boolean)>(v0, v1, v2, 1);
v7 = v6;
goto label2;
label1:
v8 = new io.netty.handler.codec.http2.Http2Exception$StacklessHttp2Exception;
specialinvoke v8.<io.netty.handler.codec.http2.Http2Exception$StacklessHttp2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,io.netty.handler.codec.http2.Http2Exception$ShutdownHint)>(v0, v1, v2);
v7 = v8;
label2:
v9 = staticinvoke <io.netty.util.internal.ThrowableUtil: java.lang.Throwable unknownStackTrace(java.lang.Throwable,java.lang.Class,java.lang.String)>(v7, v3, v4);
return v9;
}
private void <init>(io.netty.handler.codec.http2.Http2Error, java.lang.String, io.netty.handler.codec.http2.Http2Exception$ShutdownHint, boolean)
{
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v3;
java.lang.AssertionError v6;
io.netty.handler.codec.http2.Http2Exception v0;
io.netty.handler.codec.http2.Http2Error v1;
java.lang.Object v7, v8;
java.lang.String v2;
boolean v4, v5;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.handler.codec.http2.Http2Exception$ShutdownHint;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>(v2, null, 0, 1);
v5 = <io.netty.handler.codec.http2.Http2Exception: boolean $assertionsDisabled>;
if v5 != 0 goto label1;
if v4 != 0 goto label1;
v6 = new java.lang.AssertionError;
specialinvoke v6.<java.lang.AssertionError: void <init>()>();
throw v6;
label1:
v7 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "error");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Error error> = v7;
v8 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v3, "shutdownHint");
v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint> = v8;
return;
}
public io.netty.handler.codec.http2.Http2Error error()
{
io.netty.handler.codec.http2.Http2Error v1;
io.netty.handler.codec.http2.Http2Exception v0;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 = v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Error error>;
return v1;
}
public io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint()
{
io.netty.handler.codec.http2.Http2Exception$ShutdownHint v1;
io.netty.handler.codec.http2.Http2Exception v0;
v0 := @this: io.netty.handler.codec.http2.Http2Exception;
v1 = v0.<io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception$ShutdownHint shutdownHint>;
return v1;
}
public static transient io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v2;
io.netty.handler.codec.http2.Http2Exception v3;
io.netty.handler.codec.http2.Http2Error v0;
java.lang.String v1, v4;
v0 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Object[];
v3 = new io.netty.handler.codec.http2.Http2Exception;
v4 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: java.lang.String formatErrorMessage(java.lang.String,java.lang.Object[])>(v1, v2);
specialinvoke v3.<io.netty.handler.codec.http2.Http2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String)>(v0, v4);
return v3;
}
public static transient io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error, java.lang.Throwable, java.lang.String, java.lang.Object[])
{
java.lang.Throwable v1;
java.lang.Object[] v3;
io.netty.handler.codec.http2.Http2Exception v4;
io.netty.handler.codec.http2.Http2Error v0;
java.lang.String v2, v5;
v0 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v1 := @parameter1: java.lang.Throwable;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.lang.Object[];
v4 = new io.netty.handler.codec.http2.Http2Exception;
v5 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: java.lang.String formatErrorMessage(java.lang.String,java.lang.Object[])>(v2, v3);
specialinvoke v4.<io.netty.handler.codec.http2.Http2Exception: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable)>(v0, v5, v1);
return v4;
}
public static transient io.netty.handler.codec.http2.Http2Exception closedStreamError(io.netty.handler.codec.http2.Http2Error, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v2;
io.netty.handler.codec.http2.Http2Exception$ClosedStreamCreationException v3;
io.netty.handler.codec.http2.Http2Error v0;
java.lang.String v1, v4;
v0 := @parameter0: io.netty.handler.codec.http2.Http2Error;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.Object[];
v3 = new io.netty.handler.codec.http2.Http2Exception$ClosedStreamCreationException;
v4 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: java.lang.String formatErrorMessage(java.lang.String,java.lang.Object[])>(v1, v2);
specialinvoke v3.<io.netty.handler.codec.http2.Http2Exception$ClosedStreamCreationException: void <init>(io.netty.handler.codec.http2.Http2Error,java.lang.String)>(v0, v4);
return v3;
}
public static transient io.netty.handler.codec.http2.Http2Exception streamError(int, io.netty.handler.codec.http2.Http2Error, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v3;
io.netty.handler.codec.http2.Http2Exception v4;
int v0;
io.netty.handler.codec.http2.Http2Error v1;
java.lang.String v2, v6;
io.netty.handler.codec.http2.Http2Exception$StreamException v5;
v0 := @parameter0: int;
v1 := @parameter1: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter2: java.lang.String;
v3 := @parameter3: java.lang.Object[];
if 0 != v0 goto label1;
v4 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v1, v2, v3);
goto label2;
label1:
v5 = new io.netty.handler.codec.http2.Http2Exception$StreamException;
v4 = v5;
v6 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: java.lang.String formatErrorMessage(java.lang.String,java.lang.Object[])>(v2, v3);
specialinvoke v5.<io.netty.handler.codec.http2.Http2Exception$StreamException: void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String)>(v0, v1, v6);
label2:
return v4;
}
public static transient io.netty.handler.codec.http2.Http2Exception streamError(int, io.netty.handler.codec.http2.Http2Error, java.lang.Throwable, java.lang.String, java.lang.Object[])
{
java.lang.Throwable v2;
java.lang.Object[] v4;
io.netty.handler.codec.http2.Http2Exception$StreamException v6;
io.netty.handler.codec.http2.Http2Exception v5;
int v0;
io.netty.handler.codec.http2.Http2Error v1;
java.lang.String v3, v7;
v0 := @parameter0: int;
v1 := @parameter1: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter2: java.lang.Throwable;
v3 := @parameter3: java.lang.String;
v4 := @parameter4: java.lang.Object[];
if 0 != v0 goto label1;
v5 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.Throwable,java.lang.String,java.lang.Object[])>(v1, v2, v3, v4);
goto label2;
label1:
v6 = new io.netty.handler.codec.http2.Http2Exception$StreamException;
v5 = v6;
v7 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: java.lang.String formatErrorMessage(java.lang.String,java.lang.Object[])>(v3, v4);
specialinvoke v6.<io.netty.handler.codec.http2.Http2Exception$StreamException: void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Throwable)>(v0, v1, v7, v2);
label2:
return v5;
}
public static transient io.netty.handler.codec.http2.Http2Exception headerListSizeError(int, io.netty.handler.codec.http2.Http2Error, boolean, java.lang.String, java.lang.Object[])
{
java.lang.Object[] v4;
io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException v6;
io.netty.handler.codec.http2.Http2Exception v5;
int v0;
io.netty.handler.codec.http2.Http2Error v1;
java.lang.String v3, v7;
boolean v2;
v0 := @parameter0: int;
v1 := @parameter1: io.netty.handler.codec.http2.Http2Error;
v2 := @parameter2: boolean;
v3 := @parameter3: java.lang.String;
v4 := @parameter4: java.lang.Object[];
if 0 != v0 goto label1;
v5 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: io.netty.handler.codec.http2.Http2Exception connectionError(io.netty.handler.codec.http2.Http2Error,java.lang.String,java.lang.Object[])>(v1, v3, v4);
goto label2;
label1:
v6 = new io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException;
v5 = v6;
v7 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: java.lang.String formatErrorMessage(java.lang.String,java.lang.Object[])>(v3, v4);
specialinvoke v6.<io.netty.handler.codec.http2.Http2Exception$HeaderListSizeException: void <init>(int,io.netty.handler.codec.http2.Http2Error,java.lang.String,boolean)>(v0, v1, v7, v2);
label2:
return v5;
}
private static java.lang.String formatErrorMessage(java.lang.String, java.lang.Object[])
{
java.lang.Object[] v1;
int v2;
java.lang.String v0, v3, v4, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
if v0 != null goto label3;
if v1 == null goto label1;
v2 = lengthof v1;
if v2 != 0 goto label2;
label1:
return "Unexpected error";
label2:
v3 = staticinvoke <java.util.Arrays: java.lang.String toString(java.lang.Object[])>(v1);
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected error: \u0001");
return v4;
label3:
v5 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v0, v1);
return v5;
}
public static boolean isStreamError(io.netty.handler.codec.http2.Http2Exception)
{
boolean v1;
io.netty.handler.codec.http2.Http2Exception v0;
v0 := @parameter0: io.netty.handler.codec.http2.Http2Exception;
v1 = v0 instanceof io.netty.handler.codec.http2.Http2Exception$StreamException;
return v1;
}
public static int streamId(io.netty.handler.codec.http2.Http2Exception)
{
int v2;
boolean v1;
io.netty.handler.codec.http2.Http2Exception v0;
v0 := @parameter0: io.netty.handler.codec.http2.Http2Exception;
v1 = staticinvoke <io.netty.handler.codec.http2.Http2Exception: boolean isStreamError(io.netty.handler.codec.http2.Http2Exception)>(v0);
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2Exception$StreamException: int streamId()>();
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http2/Http2Exception;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http2.Http2Exception: boolean $assertionsDisabled> = v2;
return;
}
}