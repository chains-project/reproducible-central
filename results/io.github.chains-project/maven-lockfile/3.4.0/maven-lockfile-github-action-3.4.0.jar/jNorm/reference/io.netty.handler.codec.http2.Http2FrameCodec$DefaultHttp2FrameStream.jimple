class io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream extends java.lang.Object implements io.netty.handler.codec.http2.Http2FrameStream
{
private volatile int id;
private volatile io.netty.handler.codec.http2.Http2Stream stream;
final io.netty.handler.codec.http2.Http2FrameStreamEvent stateChanged;
final io.netty.handler.codec.http2.Http2FrameStreamEvent writabilityChanged;
io.netty.channel.Channel attachment;
static final boolean $assertionsDisabled;
void <init>()
{
io.netty.handler.codec.http2.Http2FrameStreamEvent v2, v3;
int v1;
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream v0;
v0 := @this: io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = (int) -1;
v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: int id> = v1;
v2 = staticinvoke <io.netty.handler.codec.http2.Http2FrameStreamEvent: io.netty.handler.codec.http2.Http2FrameStreamEvent stateChanged(io.netty.handler.codec.http2.Http2FrameStream)>(v0);
v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: io.netty.handler.codec.http2.Http2FrameStreamEvent stateChanged> = v2;
v3 = staticinvoke <io.netty.handler.codec.http2.Http2FrameStreamEvent: io.netty.handler.codec.http2.Http2FrameStreamEvent writabilityChanged(io.netty.handler.codec.http2.Http2FrameStream)>(v0);
v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: io.netty.handler.codec.http2.Http2FrameStreamEvent writabilityChanged> = v3;
return;
}
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream setStreamAndProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey, io.netty.handler.codec.http2.Http2Stream)
{
java.lang.AssertionError v8;
io.netty.handler.codec.http2.Http2Connection$PropertyKey v1;
int v4, v5, v6, v7;
io.netty.handler.codec.http2.Http2Stream v2;
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream v0;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream;
v1 := @parameter0: io.netty.handler.codec.http2.Http2Connection$PropertyKey;
v2 := @parameter1: io.netty.handler.codec.http2.Http2Stream;
v3 = <io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
v4 = v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: int id>;
v5 = (int) -1;
if v4 == v5 goto label1;
v6 = interfaceinvoke v2.<io.netty.handler.codec.http2.Http2Stream: int id()>();
v7 = v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: int id>;
if v6 == v7 goto label1;
v8 = new java.lang.AssertionError;
specialinvoke v8.<java.lang.AssertionError: void <init>()>();
throw v8;
label1:
v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: io.netty.handler.codec.http2.Http2Stream stream> = v2;
interfaceinvoke v2.<io.netty.handler.codec.http2.Http2Stream: java.lang.Object setProperty(io.netty.handler.codec.http2.Http2Connection$PropertyKey,java.lang.Object)>(v1, v0);
return v0;
}
public int id()
{
int v2;
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream v0;
v0 := @this: io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream;
v1 = v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: io.netty.handler.codec.http2.Http2Stream stream>;
if v1 != null goto label1;
v2 = v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: int id>;
goto label2;
label1:
v2 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: int id()>();
label2:
return v2;
}
public io.netty.handler.codec.http2.Http2Stream$State state()
{
io.netty.handler.codec.http2.Http2Stream v1;
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream v0;
io.netty.handler.codec.http2.Http2Stream$State v2;
v0 := @this: io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream;
v1 = v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: io.netty.handler.codec.http2.Http2Stream stream>;
if v1 != null goto label1;
v2 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State IDLE>;
goto label2;
label1:
v2 = interfaceinvoke v1.<io.netty.handler.codec.http2.Http2Stream: io.netty.handler.codec.http2.Http2Stream$State state()>();
label2:
return v2;
}
public java.lang.String toString()
{
int v1;
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream v0;
java.lang.String v2;
v0 := @this: io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream;
v1 = virtualinvoke v0.<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: int id()>();
v2 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v1);
return v2;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/http2/Http2FrameCodec;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream: boolean $assertionsDisabled> = v2;
return;
}
}