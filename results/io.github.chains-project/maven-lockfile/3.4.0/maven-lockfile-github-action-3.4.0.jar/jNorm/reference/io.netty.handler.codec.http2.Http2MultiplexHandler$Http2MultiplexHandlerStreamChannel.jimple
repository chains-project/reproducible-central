final class io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel extends io.netty.handler.codec.http2.AbstractHttp2StreamChannel
{
final io.netty.handler.codec.http2.Http2MultiplexHandler this$0;
void <init>(io.netty.handler.codec.http2.Http2MultiplexHandler, io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream, io.netty.channel.ChannelHandler)
{
int v4;
io.netty.handler.codec.http2.Http2MultiplexHandler v1;
io.netty.channel.ChannelHandler v3;
io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel v0;
io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel;
v1 := @parameter0: io.netty.handler.codec.http2.Http2MultiplexHandler;
v2 := @parameter1: io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream;
v3 := @parameter2: io.netty.channel.ChannelHandler;
v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel: io.netty.handler.codec.http2.Http2MultiplexHandler this$0> = v1;
v4 = v1.<io.netty.handler.codec.http2.Http2MultiplexHandler: int idCount>;
specialinvoke v0.<io.netty.handler.codec.http2.AbstractHttp2StreamChannel: void <init>(io.netty.handler.codec.http2.Http2FrameCodec$DefaultHttp2FrameStream,int,io.netty.channel.ChannelHandler)>(v2, v4, v3);
return;
}
protected boolean isParentReadInProgress()
{
io.netty.handler.codec.http2.Http2MultiplexHandler v1;
io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel v0;
boolean v2;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel;
v1 = v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel: io.netty.handler.codec.http2.Http2MultiplexHandler this$0>;
v2 = v1.<io.netty.handler.codec.http2.Http2MultiplexHandler: boolean parentReadInProgress>;
return v2;
}
protected void addChannelToReadCompletePendingQueue()
{
io.netty.handler.codec.http2.Http2MultiplexHandler v1, v4;
io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel v0;
java.util.Queue v2;
boolean v3;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel;
label1:
v1 = v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel: io.netty.handler.codec.http2.Http2MultiplexHandler this$0>;
v2 = v1.<io.netty.handler.codec.http2.Http2MultiplexHandler: java.util.Queue readCompletePendingQueue>;
v3 = interfaceinvoke v2.<java.util.Queue: boolean offer(java.lang.Object)>(v0);
if v3 != 0 goto label2;
v4 = v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel: io.netty.handler.codec.http2.Http2MultiplexHandler this$0>;
specialinvoke v4.<io.netty.handler.codec.http2.Http2MultiplexHandler: void processPendingReadCompleteQueue()>();
goto label1;
label2:
return;
}
protected io.netty.channel.ChannelHandlerContext parentContext()
{
io.netty.channel.ChannelHandlerContext v2;
io.netty.handler.codec.http2.Http2MultiplexHandler v1;
io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel v0;
v0 := @this: io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel;
v1 = v0.<io.netty.handler.codec.http2.Http2MultiplexHandler$Http2MultiplexHandlerStreamChannel: io.netty.handler.codec.http2.Http2MultiplexHandler this$0>;
v2 = v1.<io.netty.handler.codec.http2.Http2MultiplexHandler: io.netty.channel.ChannelHandlerContext ctx>;
return v2;
}
}