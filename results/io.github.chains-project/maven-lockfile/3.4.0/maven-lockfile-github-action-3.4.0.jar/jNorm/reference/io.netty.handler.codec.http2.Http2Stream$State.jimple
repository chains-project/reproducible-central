public final enum class io.netty.handler.codec.http2.Http2Stream$State extends java.lang.Enum
{
public static final enum io.netty.handler.codec.http2.Http2Stream$State IDLE;
public static final enum io.netty.handler.codec.http2.Http2Stream$State RESERVED_LOCAL;
public static final enum io.netty.handler.codec.http2.Http2Stream$State RESERVED_REMOTE;
public static final enum io.netty.handler.codec.http2.Http2Stream$State OPEN;
public static final enum io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL;
public static final enum io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE;
public static final enum io.netty.handler.codec.http2.Http2Stream$State CLOSED;
private final boolean localSideOpen;
private final boolean remoteSideOpen;
private static final io.netty.handler.codec.http2.Http2Stream$State[] $VALUES;
public static io.netty.handler.codec.http2.Http2Stream$State[] values()
{
io.netty.handler.codec.http2.Http2Stream$State[] v0;
java.lang.Object v1;
v0 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.http2.Http2Stream$State valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/http2/Http2Stream$State;", v0);
return v1;
}
private void <init>(java.lang.String, int, boolean, boolean)
{
io.netty.handler.codec.http2.Http2Stream$State v0;
int v2;
java.lang.String v1;
boolean v3, v4;
v0 := @this: io.netty.handler.codec.http2.Http2Stream$State;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: boolean;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<io.netty.handler.codec.http2.Http2Stream$State: boolean localSideOpen> = v3;
v0.<io.netty.handler.codec.http2.Http2Stream$State: boolean remoteSideOpen> = v4;
return;
}
public boolean localSideOpen()
{
io.netty.handler.codec.http2.Http2Stream$State v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2Stream$State;
v1 = v0.<io.netty.handler.codec.http2.Http2Stream$State: boolean localSideOpen>;
return v1;
}
public boolean remoteSideOpen()
{
io.netty.handler.codec.http2.Http2Stream$State v0;
boolean v1;
v0 := @this: io.netty.handler.codec.http2.Http2Stream$State;
v1 = v0.<io.netty.handler.codec.http2.Http2Stream$State: boolean remoteSideOpen>;
return v1;
}
private static io.netty.handler.codec.http2.Http2Stream$State[] $values()
{
io.netty.handler.codec.http2.Http2Stream$State v1, v2, v3, v4, v5, v6, v7;
io.netty.handler.codec.http2.Http2Stream$State[] v0;
v0 = newarray (io.netty.handler.codec.http2.Http2Stream$State)[7];
v1 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State IDLE>;
v0[0] = v1;
v2 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State RESERVED_LOCAL>;
v0[1] = v2;
v3 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State RESERVED_REMOTE>;
v0[2] = v3;
v4 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State OPEN>;
v0[3] = v4;
v5 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL>;
v0[4] = v5;
v6 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE>;
v0[5] = v6;
v7 = <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State CLOSED>;
v0[6] = v7;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.http2.Http2Stream$State v0, v1, v2, v3, v4, v5, v6;
io.netty.handler.codec.http2.Http2Stream$State[] v7;
v0 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v0.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("IDLE", 0, 0, 0);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State IDLE> = v0;
v1 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v1.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("RESERVED_LOCAL", 1, 0, 0);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State RESERVED_LOCAL> = v1;
v2 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v2.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("RESERVED_REMOTE", 2, 0, 0);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State RESERVED_REMOTE> = v2;
v3 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v3.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("OPEN", 3, 1, 1);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State OPEN> = v3;
v4 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v4.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("HALF_CLOSED_LOCAL", 4, 0, 1);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_LOCAL> = v4;
v5 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v5.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("HALF_CLOSED_REMOTE", 5, 1, 0);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State HALF_CLOSED_REMOTE> = v5;
v6 = new io.netty.handler.codec.http2.Http2Stream$State;
specialinvoke v6.<io.netty.handler.codec.http2.Http2Stream$State: void <init>(java.lang.String,int,boolean,boolean)>("CLOSED", 6, 0, 0);
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State CLOSED> = v6;
v7 = staticinvoke <io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State[] $values()>();
<io.netty.handler.codec.http2.Http2Stream$State: io.netty.handler.codec.http2.Http2Stream$State[] $VALUES> = v7;
return;
}
}