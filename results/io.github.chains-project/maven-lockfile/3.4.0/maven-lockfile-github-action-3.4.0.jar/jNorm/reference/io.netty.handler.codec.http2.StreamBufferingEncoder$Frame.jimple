abstract class io.netty.handler.codec.http2.StreamBufferingEncoder$Frame extends java.lang.Object
{
final io.netty.channel.ChannelPromise promise;
void <init>(io.netty.channel.ChannelPromise)
{
io.netty.channel.ChannelPromise v1;
io.netty.handler.codec.http2.StreamBufferingEncoder$Frame v0;
v0 := @this: io.netty.handler.codec.http2.StreamBufferingEncoder$Frame;
v1 := @parameter0: io.netty.channel.ChannelPromise;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.codec.http2.StreamBufferingEncoder$Frame: io.netty.channel.ChannelPromise promise> = v1;
return;
}
void release(java.lang.Throwable)
{
java.lang.Throwable v1;
io.netty.channel.ChannelPromise v2, v3;
io.netty.handler.codec.http2.StreamBufferingEncoder$Frame v0;
v0 := @this: io.netty.handler.codec.http2.StreamBufferingEncoder$Frame;
v1 := @parameter0: java.lang.Throwable;
if v1 != null goto label1;
v2 = v0.<io.netty.handler.codec.http2.StreamBufferingEncoder$Frame: io.netty.channel.ChannelPromise promise>;
interfaceinvoke v2.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setSuccess()>();
goto label2;
label1:
v3 = v0.<io.netty.handler.codec.http2.StreamBufferingEncoder$Frame: io.netty.channel.ChannelPromise promise>;
interfaceinvoke v3.<io.netty.channel.ChannelPromise: io.netty.channel.ChannelPromise setFailure(java.lang.Throwable)>(v1);
label2:
return;
}
abstract void send(io.netty.channel.ChannelHandlerContext, int);
}