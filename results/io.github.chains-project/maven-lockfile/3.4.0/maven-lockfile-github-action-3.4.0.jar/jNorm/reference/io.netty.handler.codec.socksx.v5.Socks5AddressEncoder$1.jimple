class io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1 extends java.lang.Object implements io.netty.handler.codec.socksx.v5.Socks5AddressEncoder
{
void <init>()
{
io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1 v0;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void encodeAddress(io.netty.handler.codec.socksx.v5.Socks5AddressType, java.lang.String, io.netty.buffer.ByteBuf) throws java.lang.Exception
{
byte[] v14, v7;
io.netty.handler.codec.EncoderException v15;
short v17;
byte v13, v16, v4, v6, v9;
io.netty.buffer.ByteBuf v3;
java.nio.charset.Charset v11;
int v10;
java.lang.String v18, v2;
io.netty.handler.codec.socksx.v5.Socks5AddressType v1, v12, v5, v8;
io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1 v0;
v0 := @this: io.netty.handler.codec.socksx.v5.Socks5AddressEncoder$1;
v1 := @parameter0: io.netty.handler.codec.socksx.v5.Socks5AddressType;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.netty.buffer.ByteBuf;
v4 = virtualinvoke v1.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue()>();
v5 = <io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType IPv4>;
v6 = virtualinvoke v5.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue()>();
if v4 != v6 goto label2;
if v2 == null goto label1;
v7 = staticinvoke <io.netty.util.NetUtil: byte[] createByteArrayFromIpAddressString(java.lang.String)>(v2);
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v7);
goto label7;
label1:
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeInt(int)>(0);
goto label7;
label2:
v8 = <io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType DOMAIN>;
v9 = virtualinvoke v8.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue()>();
if v4 != v9 goto label4;
if v2 == null goto label3;
v10 = virtualinvoke v2.<java.lang.String: int length()>();
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(v10);
v11 = <io.netty.util.CharsetUtil: java.nio.charset.Charset US_ASCII>;
virtualinvoke v3.<io.netty.buffer.ByteBuf: int writeCharSequence(java.lang.CharSequence,java.nio.charset.Charset)>(v2, v11);
goto label7;
label3:
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeByte(int)>(0);
goto label7;
label4:
v12 = <io.netty.handler.codec.socksx.v5.Socks5AddressType: io.netty.handler.codec.socksx.v5.Socks5AddressType IPv6>;
v13 = virtualinvoke v12.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue()>();
if v4 != v13 goto label6;
if v2 == null goto label5;
v14 = staticinvoke <io.netty.util.NetUtil: byte[] createByteArrayFromIpAddressString(java.lang.String)>(v2);
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(byte[])>(v14);
goto label7;
label5:
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeLong(long)>(0L);
virtualinvoke v3.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeLong(long)>(0L);
goto label7;
label6:
v15 = new io.netty.handler.codec.EncoderException;
v16 = virtualinvoke v1.<io.netty.handler.codec.socksx.v5.Socks5AddressType: byte byteValue()>();
v17 = v16 & 255;
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (short)>(v17) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unsupported addrType: \u0001");
specialinvoke v15.<io.netty.handler.codec.EncoderException: void <init>(java.lang.String)>(v18);
throw v15;
label7:
return;
}
}