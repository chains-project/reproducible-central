public class io.netty.handler.codec.spdy.DefaultSpdyHeaders extends io.netty.handler.codec.DefaultHeaders implements io.netty.handler.codec.spdy.SpdyHeaders
{
private static final io.netty.handler.codec.DefaultHeaders$NameValidator SpdyNameValidator;
public void <init>()
{
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
specialinvoke v0.<io.netty.handler.codec.spdy.DefaultSpdyHeaders: void <init>(boolean)>(1);
return;
}
public void <init>(boolean)
{
io.netty.util.HashingStrategy v2;
io.netty.handler.codec.DefaultHeaders$NameValidator v4;
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
io.netty.handler.codec.CharSequenceValueConverter v3;
boolean v1;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
v1 := @parameter0: boolean;
v2 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER>;
if v1 == 0 goto label1;
v3 = <io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderValueConverterAndValidator: io.netty.handler.codec.spdy.DefaultSpdyHeaders$HeaderValueConverterAndValidator INSTANCE>;
goto label2;
label1:
v3 = <io.netty.handler.codec.CharSequenceValueConverter: io.netty.handler.codec.CharSequenceValueConverter INSTANCE>;
label2:
if v1 == 0 goto label3;
v4 = <io.netty.handler.codec.spdy.DefaultSpdyHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator SpdyNameValidator>;
goto label4;
label3:
v4 = <io.netty.handler.codec.DefaultHeaders$NameValidator: io.netty.handler.codec.DefaultHeaders$NameValidator NOT_NULL>;
label4:
specialinvoke v0.<io.netty.handler.codec.DefaultHeaders: void <init>(io.netty.util.HashingStrategy,io.netty.handler.codec.ValueConverter,io.netty.handler.codec.DefaultHeaders$NameValidator)>(v2, v3, v4);
return;
}
public java.lang.String getAsString(java.lang.CharSequence)
{
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
java.lang.String v2;
java.lang.CharSequence v1;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = staticinvoke <io.netty.handler.codec.HeadersUtils: java.lang.String getAsString(io.netty.handler.codec.Headers,java.lang.Object)>(v0, v1);
return v2;
}
public java.util.List getAllAsString(java.lang.CharSequence)
{
java.util.List v2;
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
java.lang.CharSequence v1;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 = staticinvoke <io.netty.handler.codec.HeadersUtils: java.util.List getAllAsString(io.netty.handler.codec.Headers,java.lang.Object)>(v0, v1);
return v2;
}
public java.util.Iterator iteratorAsString()
{
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
java.util.Iterator v1;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
v1 = staticinvoke <io.netty.handler.codec.HeadersUtils: java.util.Iterator iteratorAsString(java.lang.Iterable)>(v0);
return v1;
}
public boolean contains(java.lang.CharSequence, java.lang.CharSequence)
{
java.lang.CharSequence v1, v2;
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
boolean v3;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 = virtualinvoke v0.<io.netty.handler.codec.spdy.DefaultSpdyHeaders: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v1, v2, 0);
return v3;
}
public boolean contains(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
io.netty.util.HashingStrategy v4;
java.lang.CharSequence v1, v2;
io.netty.handler.codec.spdy.DefaultSpdyHeaders v0;
boolean v3, v5;
v0 := @this: io.netty.handler.codec.spdy.DefaultSpdyHeaders;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: boolean;
if v3 == 0 goto label1;
v4 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_INSENSITIVE_HASHER>;
goto label2;
label1:
v4 = <io.netty.util.AsciiString: io.netty.util.HashingStrategy CASE_SENSITIVE_HASHER>;
label2:
v5 = virtualinvoke v0.<io.netty.handler.codec.spdy.DefaultSpdyHeaders: boolean contains(java.lang.Object,java.lang.Object,io.netty.util.HashingStrategy)>(v1, v2, v4);
return v5;
}
static void <clinit>()
{
io.netty.handler.codec.spdy.DefaultSpdyHeaders$1 v0;
v0 = new io.netty.handler.codec.spdy.DefaultSpdyHeaders$1;
specialinvoke v0.<io.netty.handler.codec.spdy.DefaultSpdyHeaders$1: void <init>()>();
<io.netty.handler.codec.spdy.DefaultSpdyHeaders: io.netty.handler.codec.DefaultHeaders$NameValidator SpdyNameValidator> = v0;
return;
}
}