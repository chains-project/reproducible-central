final enum class io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State extends java.lang.Enum
{
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_NAME;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_VALUE;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK;
public static final enum io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR;
private static final io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $VALUES;
public static io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] values()
{
java.lang.Object v1;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] v0;
v0 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/netty/handler/codec/spdy/SpdyHeaderBlockRawDecoder$State;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $values()
{
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] v0;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State v1, v2, v3, v4, v5, v6, v7, v8, v9;
v0 = newarray (io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State)[9];
v1 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS>;
v0[0] = v1;
v2 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH>;
v0[1] = v2;
v3 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME>;
v0[2] = v3;
v4 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_NAME>;
v0[3] = v4;
v5 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH>;
v0[4] = v5;
v6 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE>;
v0[5] = v6;
v7 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_VALUE>;
v0[6] = v7;
v8 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK>;
v0[7] = v8;
v9 = <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR>;
v0[8] = v9;
return v0;
}
static void <clinit>()
{
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] v9;
io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State v0, v1, v2, v3, v4, v5, v6, v7, v8;
v0 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v0.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("READ_NUM_HEADERS", 0);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NUM_HEADERS> = v0;
v1 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v1.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("READ_NAME_LENGTH", 1);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME_LENGTH> = v1;
v2 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v2.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("READ_NAME", 2);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_NAME> = v2;
v3 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v3.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("SKIP_NAME", 3);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_NAME> = v3;
v4 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v4.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("READ_VALUE_LENGTH", 4);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE_LENGTH> = v4;
v5 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v5.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("READ_VALUE", 5);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State READ_VALUE> = v5;
v6 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v6.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("SKIP_VALUE", 6);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State SKIP_VALUE> = v6;
v7 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v7.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("END_HEADER_BLOCK", 7);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State END_HEADER_BLOCK> = v7;
v8 = new io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State;
specialinvoke v8.<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: void <init>(java.lang.String,int)>("ERROR", 8);
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State ERROR> = v8;
v9 = staticinvoke <io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $values()>();
<io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State: io.netty.handler.codec.spdy.SpdyHeaderBlockRawDecoder$State[] $VALUES> = v9;
return;
}
}