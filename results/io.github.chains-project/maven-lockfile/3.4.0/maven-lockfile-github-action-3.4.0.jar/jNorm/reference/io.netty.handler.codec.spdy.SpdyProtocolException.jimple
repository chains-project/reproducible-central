public class io.netty.handler.codec.spdy.SpdyProtocolException extends java.lang.Exception
{
private static final long serialVersionUID;
static final boolean $assertionsDisabled;
public void <init>()
{
io.netty.handler.codec.spdy.SpdyProtocolException v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyProtocolException;
specialinvoke v0.<java.lang.Exception: void <init>()>();
return;
}
public void <init>(java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v2;
java.lang.String v1;
io.netty.handler.codec.spdy.SpdyProtocolException v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyProtocolException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable)>(v1, v2);
return;
}
public void <init>(java.lang.String)
{
java.lang.String v1;
io.netty.handler.codec.spdy.SpdyProtocolException v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyProtocolException;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String)>(v1);
return;
}
public void <init>(java.lang.Throwable)
{
java.lang.Throwable v1;
io.netty.handler.codec.spdy.SpdyProtocolException v0;
v0 := @this: io.netty.handler.codec.spdy.SpdyProtocolException;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.Throwable)>(v1);
return;
}
static io.netty.handler.codec.spdy.SpdyProtocolException newStatic(java.lang.String, java.lang.Class, java.lang.String)
{
java.lang.Throwable v7;
io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException v4, v5, v6;
int v3;
java.lang.Class v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Class;
v2 := @parameter2: java.lang.String;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v3 < 7 goto label1;
v4 = new io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException;
specialinvoke v4.<io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException: void <init>(java.lang.String,boolean)>(v0, 1);
v5 = v4;
goto label2;
label1:
v6 = new io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException;
specialinvoke v6.<io.netty.handler.codec.spdy.SpdyProtocolException$StacklessSpdyProtocolException: void <init>(java.lang.String)>(v0);
v5 = v6;
label2:
v7 = staticinvoke <io.netty.util.internal.ThrowableUtil: java.lang.Throwable unknownStackTrace(java.lang.Throwable,java.lang.Class,java.lang.String)>(v5, v1, v2);
return v7;
}
private void <init>(java.lang.String, boolean)
{
java.lang.AssertionError v4;
java.lang.String v1;
io.netty.handler.codec.spdy.SpdyProtocolException v0;
boolean v2, v3;
v0 := @this: io.netty.handler.codec.spdy.SpdyProtocolException;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Exception: void <init>(java.lang.String,java.lang.Throwable,boolean,boolean)>(v1, null, 0, 1);
v3 = <io.netty.handler.codec.spdy.SpdyProtocolException: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
if v2 != 0 goto label1;
v4 = new java.lang.AssertionError;
specialinvoke v4.<java.lang.AssertionError: void <init>()>();
throw v4;
label1:
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/codec/spdy/SpdyProtocolException;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.codec.spdy.SpdyProtocolException: boolean $assertionsDisabled> = v2;
return;
}
}