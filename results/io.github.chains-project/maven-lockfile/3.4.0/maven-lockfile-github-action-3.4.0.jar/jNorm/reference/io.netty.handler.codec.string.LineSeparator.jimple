public final class io.netty.handler.codec.string.LineSeparator extends java.lang.Object
{
public static final io.netty.handler.codec.string.LineSeparator DEFAULT;
public static final io.netty.handler.codec.string.LineSeparator UNIX;
public static final io.netty.handler.codec.string.LineSeparator WINDOWS;
private final java.lang.String value;
public void <init>(java.lang.String)
{
io.netty.handler.codec.string.LineSeparator v0;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.string.LineSeparator;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "lineSeparator");
v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value> = v2;
return;
}
public java.lang.String value()
{
io.netty.handler.codec.string.LineSeparator v0;
java.lang.String v1;
v0 := @this: io.netty.handler.codec.string.LineSeparator;
v1 = v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.handler.codec.string.LineSeparator v0;
java.lang.Object v1;
java.lang.String v3, v4, v5, v7;
boolean v2, v6;
v0 := @this: io.netty.handler.codec.string.LineSeparator;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.netty.handler.codec.string.LineSeparator;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
if v3 == null goto label3;
v4 = v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
v5 = v1.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
v6 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v5);
goto label5;
label3:
v7 = v1.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
if v7 != null goto label4;
v6 = 1;
goto label5;
label4:
v6 = 0;
label5:
return v6;
}
public int hashCode()
{
io.netty.handler.codec.string.LineSeparator v0;
int v3;
java.lang.String v1, v2;
v0 := @this: io.netty.handler.codec.string.LineSeparator;
v1 = v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
if v1 == null goto label1;
v2 = v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
v3 = virtualinvoke v2.<java.lang.String: int hashCode()>();
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public java.lang.String toString()
{
io.netty.handler.codec.string.LineSeparator v0;
byte[] v3;
java.nio.charset.Charset v2;
java.lang.String v1, v4;
v0 := @this: io.netty.handler.codec.string.LineSeparator;
v1 = v0.<io.netty.handler.codec.string.LineSeparator: java.lang.String value>;
v2 = <io.netty.util.CharsetUtil: java.nio.charset.Charset UTF_8>;
v3 = virtualinvoke v1.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v2);
v4 = staticinvoke <io.netty.buffer.ByteBufUtil: java.lang.String hexDump(byte[])>(v3);
return v4;
}
static void <clinit>()
{
io.netty.handler.codec.string.LineSeparator v0, v2, v3;
java.lang.String v1;
v0 = new io.netty.handler.codec.string.LineSeparator;
v1 = <io.netty.util.internal.StringUtil: java.lang.String NEWLINE>;
specialinvoke v0.<io.netty.handler.codec.string.LineSeparator: void <init>(java.lang.String)>(v1);
<io.netty.handler.codec.string.LineSeparator: io.netty.handler.codec.string.LineSeparator DEFAULT> = v0;
v2 = new io.netty.handler.codec.string.LineSeparator;
specialinvoke v2.<io.netty.handler.codec.string.LineSeparator: void <init>(java.lang.String)>("\n");
<io.netty.handler.codec.string.LineSeparator: io.netty.handler.codec.string.LineSeparator UNIX> = v2;
v3 = new io.netty.handler.codec.string.LineSeparator;
specialinvoke v3.<io.netty.handler.codec.string.LineSeparator: void <init>(java.lang.String)>("\r\n");
<io.netty.handler.codec.string.LineSeparator: io.netty.handler.codec.string.LineSeparator WINDOWS> = v3;
return;
}
}