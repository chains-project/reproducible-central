final class io.netty.handler.ssl.GroupsConverter extends java.lang.Object
{
private static final java.util.Map mappings;
static java.lang.String toOpenSsl(java.lang.String)
{
java.lang.Object v2;
java.lang.String v0;
java.util.Map v1;
v0 := @parameter0: java.lang.String;
v1 = <io.netty.handler.ssl.GroupsConverter: java.util.Map mappings>;
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v2 != null goto label1;
return v0;
label1:
return v2;
}
private void <init>()
{
io.netty.handler.ssl.GroupsConverter v0;
v0 := @this: io.netty.handler.ssl.GroupsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.HashMap v0;
java.util.Map v1;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("secp224r1", "P-224");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("prime256v1", "P-256");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("secp256r1", "P-256");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("secp384r1", "P-384");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("secp521r1", "P-521");
interfaceinvoke v0.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("x25519", "X25519");
v1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v0);
<io.netty.handler.ssl.GroupsConverter: java.util.Map mappings> = v1;
return;
}
}