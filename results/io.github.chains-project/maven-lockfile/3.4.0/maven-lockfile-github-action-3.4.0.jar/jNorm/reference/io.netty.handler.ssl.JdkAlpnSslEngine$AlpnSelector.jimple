final class io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector extends java.lang.Object implements java.util.function.BiFunction
{
private final io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector;
private boolean called;
static final boolean $assertionsDisabled;
final io.netty.handler.ssl.JdkAlpnSslEngine this$0;
void <init>(io.netty.handler.ssl.JdkAlpnSslEngine, io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector)
{
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector v2;
io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector v0;
io.netty.handler.ssl.JdkAlpnSslEngine v1;
v0 := @this: io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector;
v1 := @parameter0: io.netty.handler.ssl.JdkAlpnSslEngine;
v2 := @parameter1: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector;
v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: io.netty.handler.ssl.JdkAlpnSslEngine this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector> = v2;
return;
}
public java.lang.String apply(javax.net.ssl.SSLEngine, java.util.List)
{
java.lang.AssertionError v5;
java.lang.Exception v9;
javax.net.ssl.SSLEngine v1;
java.util.List v2;
io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector v0;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector v6;
java.lang.String v7, v8;
boolean v3, v4;
v0 := @this: io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector;
v1 := @parameter0: javax.net.ssl.SSLEngine;
v2 := @parameter1: java.util.List;
v3 = <io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
v4 = v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: boolean called>;
if v4 == 0 goto label1;
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label1:
v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: boolean called> = 1;
label2:
v6 = v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector>;
v7 = interfaceinvoke v6.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector: java.lang.String select(java.util.List)>(v2);
if v7 != null goto label3;
v8 = "";
goto label4;
label3:
v8 = v7;
label4:
return v8;
label5:
v9 := @caughtexception;
return null;
catch java.lang.Exception from label2 to label4 with label5;
}
void checkUnsupported()
{
java.lang.AssertionError v5;
io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector v0;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector v7;
java.lang.String v3;
io.netty.handler.ssl.JdkAlpnSslEngine v2;
boolean v1, v4, v6;
v0 := @this: io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector;
v1 = v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: boolean called>;
if v1 == 0 goto label1;
return;
label1:
v2 = v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: io.netty.handler.ssl.JdkAlpnSslEngine this$0>;
v3 = virtualinvoke v2.<io.netty.handler.ssl.JdkAlpnSslEngine: java.lang.String getApplicationProtocol()>();
v4 = <io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: boolean $assertionsDisabled>;
if v4 != 0 goto label2;
if v3 != null goto label2;
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label2:
v6 = virtualinvoke v3.<java.lang.String: boolean isEmpty()>();
if v6 == 0 goto label3;
v7 = v0.<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector selector>;
interfaceinvoke v7.<io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector: void unsupported()>();
label3:
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/netty/handler/ssl/JdkAlpnSslEngine;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.netty.handler.ssl.JdkAlpnSslEngine$AlpnSelector: boolean $assertionsDisabled> = v2;
return;
}
}