class io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector extends java.lang.Object implements io.netty.handler.ssl.JdkApplicationProtocolNegotiator$ProtocolSelector
{
private final io.netty.handler.ssl.JdkSslEngine engineWrapper;
private final java.util.Set supportedProtocols;
void <init>(io.netty.handler.ssl.JdkSslEngine, java.util.Set)
{
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector v0;
java.util.Set v2;
io.netty.handler.ssl.JdkSslEngine v1;
v0 := @this: io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector;
v1 := @parameter0: io.netty.handler.ssl.JdkSslEngine;
v2 := @parameter1: java.util.Set;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: io.netty.handler.ssl.JdkSslEngine engineWrapper> = v1;
v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: java.util.Set supportedProtocols> = v2;
return;
}
public void unsupported()
{
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector v0;
io.netty.handler.ssl.JdkSslEngine v1;
v0 := @this: io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector;
v1 = v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: io.netty.handler.ssl.JdkSslEngine engineWrapper>;
virtualinvoke v1.<io.netty.handler.ssl.JdkSslEngine: void setNegotiatedApplicationProtocol(java.lang.String)>(null);
return;
}
public java.lang.String select(java.util.List) throws java.lang.Exception
{
io.netty.handler.ssl.JdkSslEngine v7;
java.util.Iterator v3;
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector v0;
java.util.Set v2;
java.util.List v1;
java.lang.Object v5;
java.lang.String v8;
boolean v4, v6;
v0 := @this: io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector;
v1 := @parameter0: java.util.List;
v2 = v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: java.util.Set supportedProtocols>;
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v1.<java.util.List: boolean contains(java.lang.Object)>(v5);
if v6 == 0 goto label1;
v7 = v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: io.netty.handler.ssl.JdkSslEngine engineWrapper>;
virtualinvoke v7.<io.netty.handler.ssl.JdkSslEngine: void setNegotiatedApplicationProtocol(java.lang.String)>(v5);
return v5;
label2:
v8 = virtualinvoke v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: java.lang.String noSelectMatchFound()>();
return v8;
}
public java.lang.String noSelectMatchFound() throws java.lang.Exception
{
io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector v0;
io.netty.handler.ssl.JdkSslEngine v1;
v0 := @this: io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector;
v1 = v0.<io.netty.handler.ssl.JdkBaseApplicationProtocolNegotiator$NoFailProtocolSelector: io.netty.handler.ssl.JdkSslEngine engineWrapper>;
virtualinvoke v1.<io.netty.handler.ssl.JdkSslEngine: void setNegotiatedApplicationProtocol(java.lang.String)>(null);
return null;
}
}