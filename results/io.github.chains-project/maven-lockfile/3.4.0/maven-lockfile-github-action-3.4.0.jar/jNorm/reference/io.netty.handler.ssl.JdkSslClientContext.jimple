public final class io.netty.handler.ssl.JdkSslClientContext extends io.netty.handler.ssl.JdkSslContext
{
public void <init>() throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory)>(null, null);
return;
}
public void <init>(java.io.File) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
java.io.File v1;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory)>(v1, null);
return;
}
public void <init>(javax.net.ssl.TrustManagerFactory) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.TrustManagerFactory v1;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: javax.net.ssl.TrustManagerFactory;
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory)>(null, v1);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v3;
io.netty.handler.ssl.JdkSslClientContext v0;
io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator v4;
javax.net.ssl.TrustManagerFactory v2;
java.io.File v1;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
v4 = <io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator: io.netty.handler.ssl.JdkDefaultApplicationProtocolNegotiator INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long)>(v1, v2, null, v3, v4, 0L, 0L);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, java.lang.Iterable, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v7;
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.TrustManagerFactory v2;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v9;
long v5, v6;
java.io.File v1;
java.lang.Iterable v3, v4;
io.netty.handler.ssl.ApplicationProtocolConfig v8;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.lang.Iterable;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: long;
v6 := @parameter5: long;
v7 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
v8 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: io.netty.handler.ssl.ApplicationProtocolConfig toApplicationProtocolConfig(java.lang.Iterable)>(v4);
v9 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v8, 0);
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long)>(v1, v2, v3, v7, v9, v5, v6);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.TrustManagerFactory v2;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v8;
long v6, v7;
java.io.File v1;
java.lang.Iterable v3;
io.netty.handler.ssl.CipherSuiteFilter v4;
io.netty.handler.ssl.ApplicationProtocolConfig v5;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.lang.Iterable;
v4 := @parameter3: io.netty.handler.ssl.CipherSuiteFilter;
v5 := @parameter4: io.netty.handler.ssl.ApplicationProtocolConfig;
v6 := @parameter5: long;
v7 := @parameter6: long;
v8 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v5, 0);
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long)>(v1, v2, v3, v4, v8, v6, v7);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.TrustManagerFactory v2;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v5;
long v6, v7;
java.io.File v1;
java.lang.Iterable v3;
io.netty.handler.ssl.CipherSuiteFilter v4;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.lang.Iterable;
v4 := @parameter3: io.netty.handler.ssl.CipherSuiteFilter;
v5 := @parameter4: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v6 := @parameter5: long;
v7 := @parameter6: long;
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.security.Provider,java.io.File,javax.net.ssl.TrustManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long)>(null, v1, v2, v3, v4, v5, v6, v7);
return;
}
void <init>(java.security.Provider, java.io.File, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.SSLContext v11;
javax.net.ssl.TrustManagerFactory v3;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v6;
long v7, v8;
java.io.File v2;
java.lang.Iterable v4;
java.security.Provider v1;
io.netty.handler.ssl.CipherSuiteFilter v5;
io.netty.handler.ssl.ClientAuth v12;
java.lang.String v10;
java.security.cert.X509Certificate[] v9;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.security.Provider;
v2 := @parameter1: java.io.File;
v3 := @parameter2: javax.net.ssl.TrustManagerFactory;
v4 := @parameter3: java.lang.Iterable;
v5 := @parameter4: io.netty.handler.ssl.CipherSuiteFilter;
v6 := @parameter5: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v7 := @parameter6: long;
v8 := @parameter7: long;
v9 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v2);
v10 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v11 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(v1, v9, v3, null, null, null, null, v7, v8, v10);
v12 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v11, 1, v4, v5, v6, v12, null, 0);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v12;
long v10, v11;
java.io.File v1, v3, v4;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
java.lang.String v5;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.ApplicationProtocolConfig;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v9, 0);
specialinvoke v0.<io.netty.handler.ssl.JdkSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,long,long)>(v1, v2, v3, v4, v5, v6, v7, v8, v12, v10, v11);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.JdkApplicationProtocolNegotiator, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.SSLContext v16;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v9;
long v10, v11;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.ClientAuth v17;
java.lang.String v15, v5;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.io.File v1, v3, v4;
java.security.PrivateKey v14;
java.security.cert.X509Certificate[] v12, v13;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.JdkApplicationProtocolNegotiator;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v1);
v13 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v3);
v14 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String)>(v4, v5);
v15 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v16 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(null, v12, v2, v13, v14, v5, v6, v10, v11, v15);
v17 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v16, 1, v7, v8, v9, v17, null, 0);
return;
}
void <init>(java.security.Provider, java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, java.lang.String[], long, long, java.lang.String) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.JdkSslClientContext v0;
javax.net.ssl.SSLContext v15;
io.netty.handler.ssl.JdkApplicationProtocolNegotiator v16;
java.lang.String[] v11;
long v12, v13;
java.lang.Iterable v8;
io.netty.handler.ssl.CipherSuiteFilter v9;
io.netty.handler.ssl.ClientAuth v17;
java.lang.String v14, v6;
io.netty.handler.ssl.ApplicationProtocolConfig v10;
javax.net.ssl.TrustManagerFactory v3;
javax.net.ssl.KeyManagerFactory v7;
java.security.Provider v1;
java.security.PrivateKey v5;
java.security.cert.X509Certificate[] v2, v4;
v0 := @this: io.netty.handler.ssl.JdkSslClientContext;
v1 := @parameter0: java.security.Provider;
v2 := @parameter1: java.security.cert.X509Certificate[];
v3 := @parameter2: javax.net.ssl.TrustManagerFactory;
v4 := @parameter3: java.security.cert.X509Certificate[];
v5 := @parameter4: java.security.PrivateKey;
v6 := @parameter5: java.lang.String;
v7 := @parameter6: javax.net.ssl.KeyManagerFactory;
v8 := @parameter7: java.lang.Iterable;
v9 := @parameter8: io.netty.handler.ssl.CipherSuiteFilter;
v10 := @parameter9: io.netty.handler.ssl.ApplicationProtocolConfig;
v11 := @parameter10: java.lang.String[];
v12 := @parameter11: long;
v13 := @parameter12: long;
v14 := @parameter13: java.lang.String;
v15 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.SSLContext newSSLContext(java.security.Provider,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,long,long,java.lang.String)>(v1, v2, v3, v4, v5, v6, v7, v12, v13, v14);
v16 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: io.netty.handler.ssl.JdkApplicationProtocolNegotiator toNegotiator(io.netty.handler.ssl.ApplicationProtocolConfig,boolean)>(v10, 0);
v17 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.JdkSslContext: void <init>(javax.net.ssl.SSLContext,boolean,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.JdkApplicationProtocolNegotiator,io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean)>(v15, 1, v8, v9, v16, v17, v11, 0);
return;
}
private static javax.net.ssl.SSLContext newSSLContext(java.security.Provider, java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, long, long, java.lang.String) throws javax.net.ssl.SSLException
{
javax.net.ssl.SSLContext v10, v11;
long v16, v18, v7, v8;
byte v15, v17;
java.lang.String v5, v9;
javax.net.ssl.SSLSessionContext v14;
boolean v20;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.lang.Exception v19;
java.security.Provider v0;
javax.net.ssl.SSLException v21;
java.security.PrivateKey v4;
javax.net.ssl.TrustManager[] v13;
java.security.cert.X509Certificate[] v1, v3;
javax.net.ssl.KeyManager[] v12;
v0 := @parameter0: java.security.Provider;
v1 := @parameter1: java.security.cert.X509Certificate[];
v2 := @parameter2: javax.net.ssl.TrustManagerFactory;
v3 := @parameter3: java.security.cert.X509Certificate[];
v4 := @parameter4: java.security.PrivateKey;
v5 := @parameter5: java.lang.String;
v6 := @parameter6: javax.net.ssl.KeyManagerFactory;
v7 := @parameter7: long;
v8 := @parameter8: long;
v9 := @parameter9: java.lang.String;
label01:
if v1 == null goto label02;
v2 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.TrustManagerFactory buildTrustManagerFactory(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.lang.String)>(v1, v2, v9);
label02:
if v3 == null goto label03;
v6 = staticinvoke <io.netty.handler.ssl.JdkSslClientContext: javax.net.ssl.KeyManagerFactory buildKeyManagerFactory(java.security.cert.X509Certificate[],java.lang.String,java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String)>(v3, null, v4, v5, v6, v9);
label03:
if v0 != null goto label04;
v10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");
goto label05;
label04:
v10 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String,java.security.Provider)>("TLS", v0);
label05:
v11 = v10;
if v6 != null goto label06;
v12 = null;
goto label07;
label06:
v12 = virtualinvoke v6.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
label07:
if v2 != null goto label08;
v13 = null;
goto label09;
label08:
v13 = virtualinvoke v2.<javax.net.ssl.TrustManagerFactory: javax.net.ssl.TrustManager[] getTrustManagers()>();
label09:
virtualinvoke v11.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(v12, v13, null);
v14 = virtualinvoke v11.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSessionContext getClientSessionContext()>();
v15 = v7 cmp 0L;
if v15 <= 0 goto label10;
v16 = staticinvoke <java.lang.Math: long min(long,long)>(v7, 2147483647L);
interfaceinvoke v14.<javax.net.ssl.SSLSessionContext: void setSessionCacheSize(int)>(v16);
label10:
v17 = v8 cmp 0L;
if v17 <= 0 goto label11;
v18 = staticinvoke <java.lang.Math: long min(long,long)>(v8, 2147483647L);
interfaceinvoke v14.<javax.net.ssl.SSLSessionContext: void setSessionTimeout(int)>(v18);
label11:
return v11;
label12:
v19 := @caughtexception;
v20 = v19 instanceof javax.net.ssl.SSLException;
if v20 == 0 goto label13;
throw v19;
label13:
v21 = new javax.net.ssl.SSLException;
specialinvoke v21.<javax.net.ssl.SSLException: void <init>(java.lang.String,java.lang.Throwable)>("failed to initialize the client-side SSL context", v19);
throw v21;
catch java.lang.Exception from label01 to label11 with label12;
}
}