public final class io.netty.handler.ssl.OpenSslClientContext extends io.netty.handler.ssl.OpenSslContext
{
private final io.netty.handler.ssl.OpenSslSessionContext sessionContext;
public void <init>() throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v1;
io.netty.handler.ssl.OpenSslClientContext v0;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(null, null, null, null, null, null, null, v1, null, 0L, 0L);
return;
}
public void <init>(java.io.File) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.OpenSslClientContext v0;
java.io.File v1;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: java.io.File;
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory)>(v1, null);
return;
}
public void <init>(javax.net.ssl.TrustManagerFactory) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.OpenSslClientContext v0;
javax.net.ssl.TrustManagerFactory v1;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: javax.net.ssl.TrustManagerFactory;
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory)>(null, v1);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v3;
javax.net.ssl.TrustManagerFactory v2;
io.netty.handler.ssl.OpenSslClientContext v0;
java.io.File v1;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(v1, v2, null, null, null, null, null, v3, null, 0L, 0L);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.IdentityCipherSuiteFilter v7;
javax.net.ssl.TrustManagerFactory v2;
long v5, v6;
java.io.File v1;
java.lang.Iterable v3;
io.netty.handler.ssl.OpenSslClientContext v0;
io.netty.handler.ssl.ApplicationProtocolConfig v4;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.lang.Iterable;
v4 := @parameter3: io.netty.handler.ssl.ApplicationProtocolConfig;
v5 := @parameter4: long;
v6 := @parameter5: long;
v7 = <io.netty.handler.ssl.IdentityCipherSuiteFilter: io.netty.handler.ssl.IdentityCipherSuiteFilter INSTANCE>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(v1, v2, null, null, null, null, v3, v7, v4, v5, v6);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
javax.net.ssl.TrustManagerFactory v2;
long v6, v7;
java.io.File v1;
java.lang.Iterable v3;
io.netty.handler.ssl.CipherSuiteFilter v4;
io.netty.handler.ssl.OpenSslClientContext v0;
io.netty.handler.ssl.ApplicationProtocolConfig v5;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.lang.Iterable;
v4 := @parameter3: io.netty.handler.ssl.CipherSuiteFilter;
v5 := @parameter4: io.netty.handler.ssl.ApplicationProtocolConfig;
v6 := @parameter5: long;
v7 := @parameter6: long;
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.io.File,javax.net.ssl.TrustManagerFactory,java.io.File,java.io.File,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,long,long)>(v1, v2, null, null, null, null, v3, v4, v5, v6, v7);
return;
}
public void <init>(java.io.File, javax.net.ssl.TrustManagerFactory, java.io.File, java.io.File, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, long, long) throws javax.net.ssl.SSLException
{
long v10, v11;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
java.lang.String v15, v5;
io.netty.handler.ssl.OpenSslClientContext v0;
java.util.Map$Entry[] v16;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
javax.net.ssl.TrustManagerFactory v2;
javax.net.ssl.KeyManagerFactory v6;
java.io.File v1, v3, v4;
java.security.PrivateKey v14;
java.security.cert.X509Certificate[] v12, v13;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: java.io.File;
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.io.File;
v4 := @parameter3: java.io.File;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.ApplicationProtocolConfig;
v10 := @parameter9: long;
v11 := @parameter10: long;
v12 = staticinvoke <io.netty.handler.ssl.OpenSslClientContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v1);
v13 = staticinvoke <io.netty.handler.ssl.OpenSslClientContext: java.security.cert.X509Certificate[] toX509CertificatesInternal(java.io.File)>(v3);
v14 = staticinvoke <io.netty.handler.ssl.OpenSslClientContext: java.security.PrivateKey toPrivateKeyInternal(java.io.File,java.lang.String)>(v4, v5);
v15 = staticinvoke <java.security.KeyStore: java.lang.String getDefaultType()>();
v16 = newarray (java.util.Map$Entry)[0];
specialinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: void <init>(java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,java.lang.String[],long,long,boolean,java.lang.String,java.util.Map$Entry[])>(v12, v2, v13, v14, v5, v6, v7, v8, v9, null, v10, v11, 0, v15, v16);
return;
}
transient void <init>(java.security.cert.X509Certificate[], javax.net.ssl.TrustManagerFactory, java.security.cert.X509Certificate[], java.security.PrivateKey, java.lang.String, javax.net.ssl.KeyManagerFactory, java.lang.Iterable, io.netty.handler.ssl.CipherSuiteFilter, io.netty.handler.ssl.ApplicationProtocolConfig, java.lang.String[], long, long, boolean, java.lang.String, java.util.Map$Entry[]) throws javax.net.ssl.SSLException
{
java.lang.Throwable v20;
java.lang.String[] v10;
long v11, v12, v17;
java.lang.Iterable v7;
io.netty.handler.ssl.CipherSuiteFilter v8;
io.netty.handler.ssl.ClientAuth v16;
java.lang.String v14, v5;
io.netty.handler.ssl.OpenSslClientContext v0;
java.util.Map$Entry[] v15;
io.netty.handler.ssl.ApplicationProtocolConfig v9;
boolean v13;
javax.net.ssl.TrustManagerFactory v2;
io.netty.handler.ssl.OpenSslEngineMap v18;
javax.net.ssl.KeyManagerFactory v6;
java.security.PrivateKey v4;
io.netty.handler.ssl.OpenSslSessionContext v19;
java.security.cert.X509Certificate[] v1, v3;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: javax.net.ssl.TrustManagerFactory;
v3 := @parameter2: java.security.cert.X509Certificate[];
v4 := @parameter3: java.security.PrivateKey;
v5 := @parameter4: java.lang.String;
v6 := @parameter5: javax.net.ssl.KeyManagerFactory;
v7 := @parameter6: java.lang.Iterable;
v8 := @parameter7: io.netty.handler.ssl.CipherSuiteFilter;
v9 := @parameter8: io.netty.handler.ssl.ApplicationProtocolConfig;
v10 := @parameter9: java.lang.String[];
v11 := @parameter10: long;
v12 := @parameter11: long;
v13 := @parameter12: boolean;
v14 := @parameter13: java.lang.String;
v15 := @parameter14: java.util.Map$Entry[];
v16 = <io.netty.handler.ssl.ClientAuth: io.netty.handler.ssl.ClientAuth NONE>;
specialinvoke v0.<io.netty.handler.ssl.OpenSslContext: void <init>(java.lang.Iterable,io.netty.handler.ssl.CipherSuiteFilter,io.netty.handler.ssl.ApplicationProtocolConfig,int,java.security.cert.Certificate[],io.netty.handler.ssl.ClientAuth,java.lang.String[],boolean,boolean,java.util.Map$Entry[])>(v7, v8, v9, 0, v3, v16, v10, 0, v13, v15);
label1:
staticinvoke <io.netty.handler.ssl.OpenSslKeyMaterialProvider: void validateKeyMaterialSupported(java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String)>(v3, v4, v5);
v17 = v0.<io.netty.handler.ssl.OpenSslClientContext: long ctx>;
v18 = v0.<io.netty.handler.ssl.OpenSslClientContext: io.netty.handler.ssl.OpenSslEngineMap engineMap>;
v19 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext newSessionContext(io.netty.handler.ssl.ReferenceCountedOpenSslContext,long,io.netty.handler.ssl.OpenSslEngineMap,java.security.cert.X509Certificate[],javax.net.ssl.TrustManagerFactory,java.security.cert.X509Certificate[],java.security.PrivateKey,java.lang.String,javax.net.ssl.KeyManagerFactory,java.lang.String,long,long)>(v0, v17, v18, v1, v2, v3, v4, v5, v6, v14, v11, v12);
v0.<io.netty.handler.ssl.OpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext sessionContext> = v19;
label2:
goto label4;
label3:
v20 := @caughtexception;
virtualinvoke v0.<io.netty.handler.ssl.OpenSslClientContext: boolean release()>();
throw v20;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public io.netty.handler.ssl.OpenSslSessionContext sessionContext()
{
io.netty.handler.ssl.OpenSslSessionContext v1;
io.netty.handler.ssl.OpenSslClientContext v0;
v0 := @this: io.netty.handler.ssl.OpenSslClientContext;
v1 = v0.<io.netty.handler.ssl.OpenSslClientContext: io.netty.handler.ssl.OpenSslSessionContext sessionContext>;
return v1;
}
}