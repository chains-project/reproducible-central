final class io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial extends io.netty.util.AbstractReferenceCounted implements io.netty.handler.ssl.OpenSslKeyMaterial
{
long certificateChain;
private final java.security.cert.X509Certificate[] x509CertificateChain;
final io.netty.handler.ssl.OpenSslPrivateKey this$0;
void <init>(io.netty.handler.ssl.OpenSslPrivateKey, long, java.security.cert.X509Certificate[])
{
io.netty.handler.ssl.OpenSslPrivateKey v1;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
long v2;
java.security.cert.X509Certificate[] v3, v4;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 := @parameter0: io.netty.handler.ssl.OpenSslPrivateKey;
v2 := @parameter1: long;
v3 := @parameter2: java.security.cert.X509Certificate[];
v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: io.netty.handler.ssl.OpenSslPrivateKey this$0> = v1;
specialinvoke v0.<io.netty.util.AbstractReferenceCounted: void <init>()>();
v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: long certificateChain> = v2;
if v3 != null goto label1;
v4 = <io.netty.util.internal.EmptyArrays: java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES>;
goto label2;
label1:
v4 = v3;
label2:
v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: java.security.cert.X509Certificate[] x509CertificateChain> = v4;
virtualinvoke v1.<io.netty.handler.ssl.OpenSslPrivateKey: io.netty.handler.ssl.OpenSslPrivateKey retain()>();
return;
}
public java.security.cert.X509Certificate[] certificateChain()
{
java.lang.Object v2;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: java.security.cert.X509Certificate[] x509CertificateChain>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
public long certificateChainAddress()
{
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
io.netty.util.IllegalReferenceCountException v2;
int v1;
long v3;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 = virtualinvoke v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: int refCnt()>();
if v1 > 0 goto label1;
v2 = new io.netty.util.IllegalReferenceCountException;
specialinvoke v2.<io.netty.util.IllegalReferenceCountException: void <init>()>();
throw v2;
label1:
v3 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: long certificateChain>;
return v3;
}
public long privateKeyAddress()
{
io.netty.handler.ssl.OpenSslPrivateKey v3;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
io.netty.util.IllegalReferenceCountException v2;
int v1;
long v4;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 = virtualinvoke v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: int refCnt()>();
if v1 > 0 goto label1;
v2 = new io.netty.util.IllegalReferenceCountException;
specialinvoke v2.<io.netty.util.IllegalReferenceCountException: void <init>()>();
throw v2;
label1:
v3 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: io.netty.handler.ssl.OpenSslPrivateKey this$0>;
v4 = specialinvoke v3.<io.netty.handler.ssl.OpenSslPrivateKey: long privateKeyAddress()>();
return v4;
}
public io.netty.handler.ssl.OpenSslKeyMaterial touch(java.lang.Object)
{
io.netty.handler.ssl.OpenSslPrivateKey v2;
java.lang.Object v1;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: io.netty.handler.ssl.OpenSslPrivateKey this$0>;
virtualinvoke v2.<io.netty.handler.ssl.OpenSslPrivateKey: io.netty.handler.ssl.OpenSslPrivateKey touch(java.lang.Object)>(v1);
return v0;
}
public io.netty.handler.ssl.OpenSslKeyMaterial retain()
{
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain()>();
return v0;
}
public io.netty.handler.ssl.OpenSslKeyMaterial retain(int)
{
int v1;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 := @parameter0: int;
specialinvoke v0.<io.netty.util.AbstractReferenceCounted: io.netty.util.ReferenceCounted retain(int)>(v1);
return v0;
}
public io.netty.handler.ssl.OpenSslKeyMaterial touch()
{
io.netty.handler.ssl.OpenSslPrivateKey v1;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: io.netty.handler.ssl.OpenSslPrivateKey this$0>;
virtualinvoke v1.<io.netty.handler.ssl.OpenSslPrivateKey: io.netty.handler.ssl.OpenSslPrivateKey touch()>();
return v0;
}
protected void deallocate()
{
io.netty.handler.ssl.OpenSslPrivateKey v1;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
specialinvoke v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: void releaseChain()>();
v1 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: io.netty.handler.ssl.OpenSslPrivateKey this$0>;
virtualinvoke v1.<io.netty.handler.ssl.OpenSslPrivateKey: boolean release()>();
return;
}
private void releaseChain()
{
long v1;
io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial v0;
v0 := @this: io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial;
v1 = v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: long certificateChain>;
staticinvoke <io.netty.internal.tcnative.SSL: void freeX509Chain(long)>(v1);
v0.<io.netty.handler.ssl.OpenSslPrivateKey$OpenSslPrivateKeyMaterial: long certificateChain> = 0L;
return;
}
}