public final class io.netty.handler.ssl.OpenSslSessionTicketKey extends java.lang.Object
{
public static final int NAME_SIZE;
public static final int HMAC_KEY_SIZE;
public static final int AES_KEY_SIZE;
public static final int TICKET_KEY_SIZE;
final io.netty.internal.tcnative.SessionTicketKey key;
public void <init>(byte[], byte[], byte[])
{
byte[] v1, v2, v3;
io.netty.handler.ssl.OpenSslSessionTicketKey v0;
io.netty.internal.tcnative.SessionTicketKey v4;
java.lang.Object v5, v6, v7;
v0 := @this: io.netty.handler.ssl.OpenSslSessionTicketKey;
v1 := @parameter0: byte[];
v2 := @parameter1: byte[];
v3 := @parameter2: byte[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = new io.netty.internal.tcnative.SessionTicketKey;
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
v6 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
v7 = virtualinvoke v3.<java.lang.Object: java.lang.Object clone()>();
specialinvoke v4.<io.netty.internal.tcnative.SessionTicketKey: void <init>(byte[],byte[],byte[])>(v5, v6, v7);
v0.<io.netty.handler.ssl.OpenSslSessionTicketKey: io.netty.internal.tcnative.SessionTicketKey key> = v4;
return;
}
public byte[] name()
{
byte[] v2;
io.netty.internal.tcnative.SessionTicketKey v1;
java.lang.Object v3;
io.netty.handler.ssl.OpenSslSessionTicketKey v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionTicketKey;
v1 = v0.<io.netty.handler.ssl.OpenSslSessionTicketKey: io.netty.internal.tcnative.SessionTicketKey key>;
v2 = virtualinvoke v1.<io.netty.internal.tcnative.SessionTicketKey: byte[] getName()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
return v3;
}
public byte[] hmacKey()
{
byte[] v2;
io.netty.internal.tcnative.SessionTicketKey v1;
java.lang.Object v3;
io.netty.handler.ssl.OpenSslSessionTicketKey v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionTicketKey;
v1 = v0.<io.netty.handler.ssl.OpenSslSessionTicketKey: io.netty.internal.tcnative.SessionTicketKey key>;
v2 = virtualinvoke v1.<io.netty.internal.tcnative.SessionTicketKey: byte[] getHmacKey()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
return v3;
}
public byte[] aesKey()
{
byte[] v2;
io.netty.internal.tcnative.SessionTicketKey v1;
java.lang.Object v3;
io.netty.handler.ssl.OpenSslSessionTicketKey v0;
v0 := @this: io.netty.handler.ssl.OpenSslSessionTicketKey;
v1 = v0.<io.netty.handler.ssl.OpenSslSessionTicketKey: io.netty.internal.tcnative.SessionTicketKey key>;
v2 = virtualinvoke v1.<io.netty.internal.tcnative.SessionTicketKey: byte[] getAesKey()>();
v3 = virtualinvoke v2.<java.lang.Object: java.lang.Object clone()>();
return v3;
}
}