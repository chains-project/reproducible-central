final class io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi extends javax.net.ssl.KeyManagerFactorySpi
{
final javax.net.ssl.KeyManagerFactory kmf;
private volatile io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory providerFactory;
void <init>(javax.net.ssl.KeyManagerFactory)
{
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi v0;
javax.net.ssl.KeyManagerFactory v1;
java.lang.Object v2;
v0 := @this: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi;
v1 := @parameter0: javax.net.ssl.KeyManagerFactory;
specialinvoke v0.<javax.net.ssl.KeyManagerFactorySpi: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "kmf");
v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: javax.net.ssl.KeyManagerFactory kmf> = v2;
return;
}
protected synchronized void engineInit(java.security.KeyStore, char[]) throws java.security.KeyStoreException, java.security.NoSuchAlgorithmException, java.security.UnrecoverableKeyException
{
javax.net.ssl.X509KeyManager v12;
java.util.Enumeration v14, v5;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory v3, v9;
java.security.KeyStoreException v4, v7;
java.util.ArrayList v15;
java.lang.String v13;
boolean v6;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi v0;
javax.net.ssl.KeyManagerFactory v10, v8;
java.security.KeyStore v1;
char[] v2;
javax.net.ssl.KeyManager[] v11;
v0 := @this: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi;
v1 := @parameter0: java.security.KeyStore;
v2 := @parameter1: char[];
v3 = v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory providerFactory>;
if v3 == null goto label1;
v4 = new java.security.KeyStoreException;
specialinvoke v4.<java.security.KeyStoreException: void <init>(java.lang.String)>("Already initialized");
throw v4;
label1:
v5 = virtualinvoke v1.<java.security.KeyStore: java.util.Enumeration aliases()>();
v6 = interfaceinvoke v5.<java.util.Enumeration: boolean hasMoreElements()>();
if v6 != 0 goto label2;
v7 = new java.security.KeyStoreException;
specialinvoke v7.<java.security.KeyStoreException: void <init>(java.lang.String)>("No aliases found");
throw v7;
label2:
v8 = v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: javax.net.ssl.KeyManagerFactory kmf>;
virtualinvoke v8.<javax.net.ssl.KeyManagerFactory: void init(java.security.KeyStore,char[])>(v1, v2);
v9 = new io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory;
v10 = v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: javax.net.ssl.KeyManagerFactory kmf>;
v11 = virtualinvoke v10.<javax.net.ssl.KeyManagerFactory: javax.net.ssl.KeyManager[] getKeyManagers()>();
v12 = staticinvoke <io.netty.handler.ssl.ReferenceCountedOpenSslContext: javax.net.ssl.X509KeyManager chooseX509KeyManager(javax.net.ssl.KeyManager[])>(v11);
v13 = staticinvoke <io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: java.lang.String password(char[])>(v2);
v14 = virtualinvoke v1.<java.security.KeyStore: java.util.Enumeration aliases()>();
v15 = staticinvoke <java.util.Collections: java.util.ArrayList list(java.util.Enumeration)>(v14);
specialinvoke v9.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory: void <init>(javax.net.ssl.X509KeyManager,java.lang.String,java.lang.Iterable)>(v12, v13, v15);
v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory providerFactory> = v9;
return;
}
private static java.lang.String password(char[])
{
int v1;
char[] v0;
java.lang.String v2;
v0 := @parameter0: char[];
if v0 == null goto label1;
v1 = lengthof v0;
if v1 != 0 goto label2;
label1:
return null;
label2:
v2 = new java.lang.String;
specialinvoke v2.<java.lang.String: void <init>(char[])>(v0);
return v2;
}
protected void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
{
javax.net.ssl.ManagerFactoryParameters v1;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi v0;
java.security.InvalidAlgorithmParameterException v2;
v0 := @this: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi;
v1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;
v2 = new java.security.InvalidAlgorithmParameterException;
specialinvoke v2.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.String)>("Not supported");
throw v2;
}
protected javax.net.ssl.KeyManager[] engineGetKeyManagers()
{
java.lang.IllegalStateException v2;
javax.net.ssl.X509KeyManager v4;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi v0;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory v1;
javax.net.ssl.KeyManager[] v3;
v0 := @this: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi;
v1 = v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory providerFactory>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("engineInit(...) not called yet");
throw v2;
label1:
v3 = newarray (javax.net.ssl.KeyManager)[1];
v4 = v1.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory: javax.net.ssl.X509KeyManager keyManager>;
v3[0] = v4;
return v3;
}
io.netty.handler.ssl.OpenSslKeyMaterialProvider newProvider()
{
java.lang.IllegalStateException v2;
io.netty.handler.ssl.OpenSslKeyMaterialProvider v3;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi v0;
io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory v1;
v0 := @this: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi;
v1 = v0.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi: io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory providerFactory>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("engineInit(...) not called yet");
throw v2;
label1:
v3 = virtualinvoke v1.<io.netty.handler.ssl.OpenSslX509KeyManagerFactory$OpenSslKeyManagerFactorySpi$ProviderFactory: io.netty.handler.ssl.OpenSslKeyMaterialProvider newProvider()>();
return v3;
}
}