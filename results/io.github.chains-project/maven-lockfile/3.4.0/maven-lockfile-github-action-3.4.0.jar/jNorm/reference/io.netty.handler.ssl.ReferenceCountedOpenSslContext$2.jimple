class io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 extends java.lang.Object implements io.netty.handler.ssl.OpenSslApplicationProtocolNegotiator
{
void <init>()
{
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$Protocol protocol()
{
io.netty.handler.ssl.ApplicationProtocolConfig$Protocol v1;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$2;
v1 = <io.netty.handler.ssl.ApplicationProtocolConfig$Protocol: io.netty.handler.ssl.ApplicationProtocolConfig$Protocol NONE>;
return v1;
}
public java.util.List protocols()
{
java.util.List v1;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$2;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v1;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior selectorFailureBehavior()
{
io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior v1;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$2;
v1 = <io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior: io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior CHOOSE_MY_LAST_PROTOCOL>;
return v1;
}
public io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior selectedListenerFailureBehavior()
{
io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior v1;
io.netty.handler.ssl.ReferenceCountedOpenSslContext$2 v0;
v0 := @this: io.netty.handler.ssl.ReferenceCountedOpenSslContext$2;
v1 = <io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior: io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior ACCEPT>;
return v1;
}
}