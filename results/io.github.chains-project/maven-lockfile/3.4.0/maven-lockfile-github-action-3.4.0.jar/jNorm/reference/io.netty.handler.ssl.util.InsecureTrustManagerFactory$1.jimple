class io.netty.handler.ssl.util.InsecureTrustManagerFactory$1 extends java.lang.Object implements javax.net.ssl.X509TrustManager
{
void <init>()
{
io.netty.handler.ssl.util.InsecureTrustManagerFactory$1 v0;
v0 := @this: io.netty.handler.ssl.util.InsecureTrustManagerFactory$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void checkClientTrusted(java.security.cert.X509Certificate[], java.lang.String)
{
java.security.cert.X509Certificate v6;
io.netty.handler.ssl.util.InsecureTrustManagerFactory$1 v0;
java.security.Principal v7;
io.netty.util.internal.logging.InternalLogger v3, v5;
java.lang.String v2, v8;
java.security.cert.X509Certificate[] v1;
boolean v4;
v0 := @this: io.netty.handler.ssl.util.InsecureTrustManagerFactory$1;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 = <io.netty.handler.ssl.util.InsecureTrustManagerFactory: io.netty.util.internal.logging.InternalLogger logger>;
v4 = interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v4 == 0 goto label1;
v5 = <io.netty.handler.ssl.util.InsecureTrustManagerFactory: io.netty.util.internal.logging.InternalLogger logger>;
v6 = v1[0];
v7 = virtualinvoke v6.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.security.Principal)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Accepting a client certificate: \u0001");
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>(v8);
label1:
return;
}
public void checkServerTrusted(java.security.cert.X509Certificate[], java.lang.String)
{
java.security.cert.X509Certificate v6;
io.netty.handler.ssl.util.InsecureTrustManagerFactory$1 v0;
java.security.Principal v7;
io.netty.util.internal.logging.InternalLogger v3, v5;
java.lang.String v2, v8;
java.security.cert.X509Certificate[] v1;
boolean v4;
v0 := @this: io.netty.handler.ssl.util.InsecureTrustManagerFactory$1;
v1 := @parameter0: java.security.cert.X509Certificate[];
v2 := @parameter1: java.lang.String;
v3 = <io.netty.handler.ssl.util.InsecureTrustManagerFactory: io.netty.util.internal.logging.InternalLogger logger>;
v4 = interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: boolean isDebugEnabled()>();
if v4 == 0 goto label1;
v5 = <io.netty.handler.ssl.util.InsecureTrustManagerFactory: io.netty.util.internal.logging.InternalLogger logger>;
v6 = v1[0];
v7 = virtualinvoke v6.<java.security.cert.X509Certificate: java.security.Principal getSubjectDN()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.security.Principal)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Accepting a server certificate: \u0001");
interfaceinvoke v5.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>(v8);
label1:
return;
}
public java.security.cert.X509Certificate[] getAcceptedIssuers()
{
io.netty.handler.ssl.util.InsecureTrustManagerFactory$1 v0;
java.security.cert.X509Certificate[] v1;
v0 := @this: io.netty.handler.ssl.util.InsecureTrustManagerFactory$1;
v1 = <io.netty.util.internal.EmptyArrays: java.security.cert.X509Certificate[] EMPTY_X509_CERTIFICATES>;
return v1;
}
}