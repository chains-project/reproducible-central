final class io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi extends javax.net.ssl.KeyManagerFactorySpi
{
private io.netty.handler.ssl.util.SimpleKeyManagerFactory parent;
private volatile javax.net.ssl.KeyManager[] keyManagers;
private void <init>()
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi v0;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi;
specialinvoke v0.<javax.net.ssl.KeyManagerFactorySpi: void <init>()>();
return;
}
void init(io.netty.handler.ssl.util.SimpleKeyManagerFactory)
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory v1;
io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi v0;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi;
v1 := @parameter0: io.netty.handler.ssl.util.SimpleKeyManagerFactory;
v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: io.netty.handler.ssl.util.SimpleKeyManagerFactory parent> = v1;
return;
}
protected void engineInit(java.security.KeyStore, char[]) throws java.security.KeyStoreException
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory v3;
char[] v2;
java.security.KeyStore v1;
java.security.KeyStoreException v4, v6;
io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi v0;
java.lang.Exception v5;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi;
v1 := @parameter0: java.security.KeyStore;
v2 := @parameter1: char[];
label1:
v3 = v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: io.netty.handler.ssl.util.SimpleKeyManagerFactory parent>;
virtualinvoke v3.<io.netty.handler.ssl.util.SimpleKeyManagerFactory: void engineInit(java.security.KeyStore,char[])>(v1, v2);
label2:
goto label5;
label3:
v4 := @caughtexception;
throw v4;
label4:
v5 := @caughtexception;
v6 = new java.security.KeyStoreException;
specialinvoke v6.<java.security.KeyStoreException: void <init>(java.lang.Throwable)>(v5);
throw v6;
label5:
return;
catch java.security.KeyStoreException from label1 to label2 with label3;
catch java.lang.Exception from label1 to label2 with label4;
}
protected void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.security.InvalidAlgorithmParameterException
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory v2;
javax.net.ssl.ManagerFactoryParameters v1;
io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi v0;
java.lang.Exception v4;
java.security.InvalidAlgorithmParameterException v3, v5;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi;
v1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;
label1:
v2 = v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: io.netty.handler.ssl.util.SimpleKeyManagerFactory parent>;
virtualinvoke v2.<io.netty.handler.ssl.util.SimpleKeyManagerFactory: void engineInit(javax.net.ssl.ManagerFactoryParameters)>(v1);
label2:
goto label5;
label3:
v3 := @caughtexception;
throw v3;
label4:
v4 := @caughtexception;
v5 = new java.security.InvalidAlgorithmParameterException;
specialinvoke v5.<java.security.InvalidAlgorithmParameterException: void <init>(java.lang.Throwable)>(v4);
throw v5;
label5:
return;
catch java.security.InvalidAlgorithmParameterException from label1 to label2 with label3;
catch java.lang.Exception from label1 to label2 with label4;
}
protected javax.net.ssl.KeyManager[] engineGetKeyManagers()
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory v2;
int v3;
java.lang.Object v4;
io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi v0;
javax.net.ssl.KeyManager[] v1;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi;
v1 = v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: javax.net.ssl.KeyManager[] keyManagers>;
if v1 != null goto label2;
v2 = v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: io.netty.handler.ssl.util.SimpleKeyManagerFactory parent>;
v1 = virtualinvoke v2.<io.netty.handler.ssl.util.SimpleKeyManagerFactory: javax.net.ssl.KeyManager[] engineGetKeyManagers()>();
v3 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v3 < 7 goto label1;
staticinvoke <io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: void wrapIfNeeded(javax.net.ssl.KeyManager[])>(v1);
label1:
v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: javax.net.ssl.KeyManager[] keyManagers> = v1;
label2:
v4 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v4;
}
private static void wrapIfNeeded(javax.net.ssl.KeyManager[])
{
int v1, v2;
io.netty.handler.ssl.util.X509KeyManagerWrapper v6;
javax.net.ssl.KeyManager v3;
boolean v4, v5;
javax.net.ssl.KeyManager[] v0;
v0 := @parameter0: javax.net.ssl.KeyManager[];
v1 = 0;
label1:
v2 = lengthof v0;
if v1 >= v2 goto label3;
v3 = v0[v1];
v4 = v3 instanceof javax.net.ssl.X509KeyManager;
if v4 == 0 goto label2;
v5 = v3 instanceof javax.net.ssl.X509ExtendedKeyManager;
if v5 != 0 goto label2;
v6 = new io.netty.handler.ssl.util.X509KeyManagerWrapper;
specialinvoke v6.<io.netty.handler.ssl.util.X509KeyManagerWrapper: void <init>(javax.net.ssl.X509KeyManager)>(v3);
v0[v1] = v6;
label2:
v1 = v1 + 1;
goto label1;
label3:
return;
}
}