public abstract class io.netty.handler.ssl.util.SimpleKeyManagerFactory extends javax.net.ssl.KeyManagerFactory
{
private static final java.security.Provider PROVIDER;
private static final io.netty.util.concurrent.FastThreadLocal CURRENT_SPI;
protected void <init>()
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory v0;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory;
specialinvoke v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory: void <init>(java.lang.String)>("");
return;
}
protected void <init>(java.lang.String)
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory v0;
java.security.Provider v4;
io.netty.util.concurrent.FastThreadLocal v2, v6, v8;
java.lang.Object v3, v5, v7;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.util.SimpleKeyManagerFactory;
v1 := @parameter0: java.lang.String;
v2 = <io.netty.handler.ssl.util.SimpleKeyManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI>;
v3 = virtualinvoke v2.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
v4 = <io.netty.handler.ssl.util.SimpleKeyManagerFactory: java.security.Provider PROVIDER>;
v5 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
specialinvoke v0.<javax.net.ssl.KeyManagerFactory: void <init>(javax.net.ssl.KeyManagerFactorySpi,java.security.Provider,java.lang.String)>(v3, v4, v5);
v6 = <io.netty.handler.ssl.util.SimpleKeyManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI>;
v7 = virtualinvoke v6.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
virtualinvoke v7.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$SimpleKeyManagerFactorySpi: void init(io.netty.handler.ssl.util.SimpleKeyManagerFactory)>(v0);
v8 = <io.netty.handler.ssl.util.SimpleKeyManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI>;
virtualinvoke v8.<io.netty.util.concurrent.FastThreadLocal: void remove()>();
return;
}
protected abstract void engineInit(java.security.KeyStore, char[]) throws java.lang.Exception;
protected abstract void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.lang.Exception;
protected abstract javax.net.ssl.KeyManager[] engineGetKeyManagers();
static void <clinit>()
{
io.netty.handler.ssl.util.SimpleKeyManagerFactory$2 v1;
io.netty.handler.ssl.util.SimpleKeyManagerFactory$1 v0;
v0 = new io.netty.handler.ssl.util.SimpleKeyManagerFactory$1;
specialinvoke v0.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$1: void <init>(java.lang.String,double,java.lang.String)>("", 0.0, "");
<io.netty.handler.ssl.util.SimpleKeyManagerFactory: java.security.Provider PROVIDER> = v0;
v1 = new io.netty.handler.ssl.util.SimpleKeyManagerFactory$2;
specialinvoke v1.<io.netty.handler.ssl.util.SimpleKeyManagerFactory$2: void <init>()>();
<io.netty.handler.ssl.util.SimpleKeyManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI> = v1;
return;
}
}