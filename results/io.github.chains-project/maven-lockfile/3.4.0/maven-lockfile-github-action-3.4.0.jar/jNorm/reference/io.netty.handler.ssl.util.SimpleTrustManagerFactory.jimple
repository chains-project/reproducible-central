public abstract class io.netty.handler.ssl.util.SimpleTrustManagerFactory extends javax.net.ssl.TrustManagerFactory
{
private static final java.security.Provider PROVIDER;
private static final io.netty.util.concurrent.FastThreadLocal CURRENT_SPI;
protected void <init>()
{
io.netty.handler.ssl.util.SimpleTrustManagerFactory v0;
v0 := @this: io.netty.handler.ssl.util.SimpleTrustManagerFactory;
specialinvoke v0.<io.netty.handler.ssl.util.SimpleTrustManagerFactory: void <init>(java.lang.String)>("");
return;
}
protected void <init>(java.lang.String)
{
io.netty.handler.ssl.util.SimpleTrustManagerFactory v0;
java.security.Provider v4;
io.netty.util.concurrent.FastThreadLocal v2, v5, v7;
java.lang.Object v3, v6;
java.lang.String v1;
v0 := @this: io.netty.handler.ssl.util.SimpleTrustManagerFactory;
v1 := @parameter0: java.lang.String;
v2 = <io.netty.handler.ssl.util.SimpleTrustManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI>;
v3 = virtualinvoke v2.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
v4 = <io.netty.handler.ssl.util.SimpleTrustManagerFactory: java.security.Provider PROVIDER>;
specialinvoke v0.<javax.net.ssl.TrustManagerFactory: void <init>(javax.net.ssl.TrustManagerFactorySpi,java.security.Provider,java.lang.String)>(v3, v4, v1);
v5 = <io.netty.handler.ssl.util.SimpleTrustManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI>;
v6 = virtualinvoke v5.<io.netty.util.concurrent.FastThreadLocal: java.lang.Object get()>();
virtualinvoke v6.<io.netty.handler.ssl.util.SimpleTrustManagerFactory$SimpleTrustManagerFactorySpi: void init(io.netty.handler.ssl.util.SimpleTrustManagerFactory)>(v0);
v7 = <io.netty.handler.ssl.util.SimpleTrustManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI>;
virtualinvoke v7.<io.netty.util.concurrent.FastThreadLocal: void remove()>();
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "name");
return;
}
protected abstract void engineInit(java.security.KeyStore) throws java.lang.Exception;
protected abstract void engineInit(javax.net.ssl.ManagerFactoryParameters) throws java.lang.Exception;
protected abstract javax.net.ssl.TrustManager[] engineGetTrustManagers();
static void <clinit>()
{
io.netty.handler.ssl.util.SimpleTrustManagerFactory$2 v1;
io.netty.handler.ssl.util.SimpleTrustManagerFactory$1 v0;
v0 = new io.netty.handler.ssl.util.SimpleTrustManagerFactory$1;
specialinvoke v0.<io.netty.handler.ssl.util.SimpleTrustManagerFactory$1: void <init>(java.lang.String,double,java.lang.String)>("", 0.0, "");
<io.netty.handler.ssl.util.SimpleTrustManagerFactory: java.security.Provider PROVIDER> = v0;
v1 = new io.netty.handler.ssl.util.SimpleTrustManagerFactory$2;
specialinvoke v1.<io.netty.handler.ssl.util.SimpleTrustManagerFactory$2: void <init>()>();
<io.netty.handler.ssl.util.SimpleTrustManagerFactory: io.netty.util.concurrent.FastThreadLocal CURRENT_SPI> = v1;
return;
}
}