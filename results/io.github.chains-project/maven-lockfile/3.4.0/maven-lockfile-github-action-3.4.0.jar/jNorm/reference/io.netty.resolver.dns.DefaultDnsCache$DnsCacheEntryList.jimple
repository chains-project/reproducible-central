final class io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList extends java.util.AbstractList
{
private final java.util.List entries;
void <init>(java.util.List)
{
io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList v0;
java.util.List v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList;
v1 := @parameter0: java.util.List;
specialinvoke v0.<java.util.AbstractList: void <init>()>();
v0.<io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList: java.util.List entries> = v1;
return;
}
public io.netty.resolver.dns.DnsCacheEntry get(int)
{
io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList v0;
java.util.List v2;
io.netty.resolver.dns.DnsCacheEntry v4;
int v1;
java.lang.Object v3;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList;
v1 := @parameter0: int;
v2 = v0.<io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList: java.util.List entries>;
v3 = interfaceinvoke v2.<java.util.List: java.lang.Object get(int)>(v1);
v4 = virtualinvoke v3.<io.netty.resolver.dns.DefaultDnsCache$DefaultDnsCacheEntry: io.netty.resolver.dns.DnsCacheEntry copyIfNeeded()>();
return v4;
}
public int size()
{
int v2;
io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList v0;
java.util.List v1;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList;
v1 = v0.<io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList: java.util.List entries>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public int hashCode()
{
int v1;
io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList v0;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList;
v1 = specialinvoke v0.<java.util.AbstractList: int hashCode()>();
return v1;
}
public boolean equals(java.lang.Object)
{
io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList v0;
java.util.List v3, v4;
java.lang.Object v1;
boolean v2, v5, v6;
v0 := @this: io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList;
if v2 == 0 goto label1;
v3 = v0.<io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList: java.util.List entries>;
v4 = v1.<io.netty.resolver.dns.DefaultDnsCache$DnsCacheEntryList: java.util.List entries>;
v5 = interfaceinvoke v3.<java.util.List: boolean equals(java.lang.Object)>(v4);
return v5;
label1:
v6 = specialinvoke v0.<java.util.AbstractList: boolean equals(java.lang.Object)>(v1);
return v6;
}
}