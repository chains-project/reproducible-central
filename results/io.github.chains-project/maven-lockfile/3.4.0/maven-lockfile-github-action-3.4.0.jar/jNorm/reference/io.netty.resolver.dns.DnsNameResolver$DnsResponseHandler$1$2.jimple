class io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2 extends java.lang.Object implements io.netty.util.concurrent.FutureListener
{
final io.netty.channel.Channel val$channel;
final io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2;
void <init>(io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1, io.netty.channel.Channel)
{
io.netty.channel.Channel v2;
io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 v1;
io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2 v0;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2;
v1 := @parameter0: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1;
v2 := @parameter1: io.netty.channel.Channel;
v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2> = v1;
v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.channel.Channel val$channel> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 v11, v4, v7, v9;
io.netty.resolver.dns.DnsQueryContext v10, v5;
io.netty.handler.codec.dns.DatagramDnsResponse v12, v8;
io.netty.channel.Channel v2;
io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2 v0;
java.lang.Object v6;
io.netty.util.concurrent.Future v1;
boolean v3;
v0 := @this: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.channel.Channel val$channel>;
interfaceinvoke v2.<io.netty.channel.Channel: io.netty.channel.ChannelFuture close()>();
v3 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v3 == 0 goto label1;
v4 = v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2>;
v5 = v4.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1: io.netty.resolver.dns.DnsQueryContext val$qCtx>;
v6 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Object getNow()>();
virtualinvoke v5.<io.netty.resolver.dns.DnsQueryContext: void finish(io.netty.channel.AddressedEnvelope)>(v6);
v7 = v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2>;
v8 = v7.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1: io.netty.handler.codec.dns.DatagramDnsResponse val$res>;
virtualinvoke v8.<io.netty.handler.codec.dns.DatagramDnsResponse: boolean release()>();
goto label2;
label1:
v9 = v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2>;
v10 = v9.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1: io.netty.resolver.dns.DnsQueryContext val$qCtx>;
v11 = v0.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1$2: io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1 this$2>;
v12 = v11.<io.netty.resolver.dns.DnsNameResolver$DnsResponseHandler$1: io.netty.handler.codec.dns.DatagramDnsResponse val$res>;
virtualinvoke v10.<io.netty.resolver.dns.DnsQueryContext: void finish(io.netty.channel.AddressedEnvelope)>(v12);
label2:
return;
}
}