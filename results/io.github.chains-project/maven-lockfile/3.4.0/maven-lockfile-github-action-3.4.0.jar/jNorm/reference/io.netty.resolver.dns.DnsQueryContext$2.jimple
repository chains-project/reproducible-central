class io.netty.resolver.dns.DnsQueryContext$2 extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
final io.netty.handler.codec.dns.DnsQuery val$query;
final io.netty.channel.ChannelPromise val$writePromise;
final io.netty.resolver.dns.DnsQueryContext this$0;
void <init>(io.netty.resolver.dns.DnsQueryContext, io.netty.handler.codec.dns.DnsQuery, io.netty.channel.ChannelPromise)
{
io.netty.resolver.dns.DnsQueryContext$2 v0;
io.netty.channel.ChannelPromise v3;
io.netty.resolver.dns.DnsQueryContext v1;
io.netty.handler.codec.dns.DnsQuery v2;
v0 := @this: io.netty.resolver.dns.DnsQueryContext$2;
v1 := @parameter0: io.netty.resolver.dns.DnsQueryContext;
v2 := @parameter1: io.netty.handler.codec.dns.DnsQuery;
v3 := @parameter2: io.netty.channel.ChannelPromise;
v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.resolver.dns.DnsQueryContext this$0> = v1;
v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.handler.codec.dns.DnsQuery val$query> = v2;
v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.channel.ChannelPromise val$writePromise> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
java.lang.Throwable v6;
io.netty.resolver.dns.DnsQueryContext$2 v0;
io.netty.resolver.dns.DnsQueryContext v3, v7;
io.netty.channel.ChannelPromise v5, v9;
io.netty.handler.codec.dns.DnsQuery v4, v8;
io.netty.util.concurrent.Future v1;
boolean v2;
v0 := @this: io.netty.resolver.dns.DnsQueryContext$2;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v2 == 0 goto label1;
v3 = v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.resolver.dns.DnsQueryContext this$0>;
v4 = v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.handler.codec.dns.DnsQuery val$query>;
v5 = v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.channel.ChannelPromise val$writePromise>;
specialinvoke v3.<io.netty.resolver.dns.DnsQueryContext: void writeQuery(io.netty.handler.codec.dns.DnsQuery,boolean,io.netty.channel.ChannelPromise)>(v4, 1, v5);
goto label2;
label1:
v6 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
v7 = v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.resolver.dns.DnsQueryContext this$0>;
v8 = v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.handler.codec.dns.DnsQuery val$query>;
v9 = v0.<io.netty.resolver.dns.DnsQueryContext$2: io.netty.channel.ChannelPromise val$writePromise>;
specialinvoke v7.<io.netty.resolver.dns.DnsQueryContext: void failQuery(io.netty.handler.codec.dns.DnsQuery,java.lang.Throwable,io.netty.channel.ChannelPromise)>(v8, v6, v9);
label2:
return;
}
}