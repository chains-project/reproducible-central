final class io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder extends java.lang.Object
{
private static final long REFRESH_INTERVAL;
static final io.netty.resolver.dns.DnsServerAddressStreamProvider DEFAULT_DNS_SERVER_ADDRESS_STREAM_PROVIDER;
private void <init>()
{
io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder v0;
v0 := @this: io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.concurrent.TimeUnit v0;
long v1;
io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder$1 v2;
v0 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MINUTES>;
v1 = virtualinvoke v0.<java.util.concurrent.TimeUnit: long toNanos(long)>(5L);
<io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder: long REFRESH_INTERVAL> = v1;
v2 = new io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder$1;
specialinvoke v2.<io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder$1: void <init>()>();
<io.netty.resolver.dns.DnsServerAddressStreamProviders$DefaultProviderHolder: io.netty.resolver.dns.DnsServerAddressStreamProvider DEFAULT_DNS_SERVER_ADDRESS_STREAM_PROVIDER> = v2;
return;
}
}