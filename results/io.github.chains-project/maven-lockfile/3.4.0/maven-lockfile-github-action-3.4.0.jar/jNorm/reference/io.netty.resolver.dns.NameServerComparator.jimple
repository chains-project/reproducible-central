public final class io.netty.resolver.dns.NameServerComparator extends java.lang.Object implements java.util.Comparator, java.io.Serializable
{
private static final long serialVersionUID;
private final java.lang.Class preferredAddressType;
public void <init>(java.lang.Class)
{
java.lang.Class v1;
java.lang.Object v2;
io.netty.resolver.dns.NameServerComparator v0;
v0 := @this: io.netty.resolver.dns.NameServerComparator;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "preferredAddressType");
v0.<io.netty.resolver.dns.NameServerComparator: java.lang.Class preferredAddressType> = v2;
return;
}
public int compare(java.net.InetSocketAddress, java.net.InetSocketAddress)
{
java.net.InetAddress v11, v6, v8;
byte v14, v18;
boolean v13, v15, v16, v17, v3, v4, v5;
io.netty.resolver.dns.NameServerComparator v0;
java.net.InetSocketAddress v1, v2;
java.lang.Class v10, v12, v7, v9;
v0 := @this: io.netty.resolver.dns.NameServerComparator;
v1 := @parameter0: java.net.InetSocketAddress;
v2 := @parameter1: java.net.InetSocketAddress;
v3 = virtualinvoke v1.<java.net.InetSocketAddress: boolean equals(java.lang.Object)>(v2);
if v3 == 0 goto label1;
return 0;
label1:
v4 = virtualinvoke v1.<java.net.InetSocketAddress: boolean isUnresolved()>();
if v4 != 0 goto label5;
v5 = virtualinvoke v2.<java.net.InetSocketAddress: boolean isUnresolved()>();
if v5 != 0 goto label5;
v6 = virtualinvoke v1.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();
v7 = virtualinvoke v6.<java.lang.Object: java.lang.Class getClass()>();
v8 = virtualinvoke v2.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();
v9 = virtualinvoke v8.<java.lang.Object: java.lang.Class getClass()>();
if v7 != v9 goto label2;
return 0;
label2:
v10 = v0.<io.netty.resolver.dns.NameServerComparator: java.lang.Class preferredAddressType>;
v11 = virtualinvoke v1.<java.net.InetSocketAddress: java.net.InetAddress getAddress()>();
v12 = virtualinvoke v11.<java.lang.Object: java.lang.Class getClass()>();
v13 = virtualinvoke v10.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v12);
if v13 == 0 goto label3;
v14 = -1;
goto label4;
label3:
v14 = 1;
label4:
return v14;
label5:
v15 = virtualinvoke v1.<java.net.InetSocketAddress: boolean isUnresolved()>();
if v15 == 0 goto label6;
v16 = virtualinvoke v2.<java.net.InetSocketAddress: boolean isUnresolved()>();
if v16 == 0 goto label6;
return 0;
label6:
v17 = virtualinvoke v1.<java.net.InetSocketAddress: boolean isUnresolved()>();
if v17 == 0 goto label7;
v18 = 1;
goto label8;
label7:
v18 = -1;
label8:
return v18;
}
}