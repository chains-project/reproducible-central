final class io.netty.resolver.dns.UnixResolverOptions extends java.lang.Object
{
private final int ndots;
private final int timeout;
private final int attempts;
void <init>(int, int, int)
{
io.netty.resolver.dns.UnixResolverOptions v0;
int v1, v2, v3;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.netty.resolver.dns.UnixResolverOptions: int ndots> = v1;
v0.<io.netty.resolver.dns.UnixResolverOptions: int timeout> = v2;
v0.<io.netty.resolver.dns.UnixResolverOptions: int attempts> = v3;
return;
}
static io.netty.resolver.dns.UnixResolverOptions$Builder newBuilder()
{
io.netty.resolver.dns.UnixResolverOptions$Builder v0;
v0 = new io.netty.resolver.dns.UnixResolverOptions$Builder;
specialinvoke v0.<io.netty.resolver.dns.UnixResolverOptions$Builder: void <init>()>();
return v0;
}
int ndots()
{
int v1;
io.netty.resolver.dns.UnixResolverOptions v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions;
v1 = v0.<io.netty.resolver.dns.UnixResolverOptions: int ndots>;
return v1;
}
int timeout()
{
int v1;
io.netty.resolver.dns.UnixResolverOptions v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions;
v1 = v0.<io.netty.resolver.dns.UnixResolverOptions: int timeout>;
return v1;
}
int attempts()
{
int v1;
io.netty.resolver.dns.UnixResolverOptions v0;
v0 := @this: io.netty.resolver.dns.UnixResolverOptions;
v1 = v0.<io.netty.resolver.dns.UnixResolverOptions: int attempts>;
return v1;
}
}