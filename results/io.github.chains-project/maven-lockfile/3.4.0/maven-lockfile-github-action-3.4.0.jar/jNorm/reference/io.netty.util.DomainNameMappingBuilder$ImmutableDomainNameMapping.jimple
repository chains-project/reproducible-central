final class io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping extends io.netty.util.DomainNameMapping
{
private static final java.lang.String REPR_HEADER;
private static final java.lang.String REPR_MAP_OPENING;
private static final java.lang.String REPR_MAP_CLOSING;
private static final int REPR_CONST_PART_LENGTH;
private final java.lang.String[] domainNamePatterns;
private final java.lang.Object[] values;
private final java.util.Map map;
private void <init>(java.lang.Object, java.util.Map)
{
java.lang.Object[] v17, v6;
java.lang.String[] v16, v5;
java.util.LinkedHashMap v7;
java.util.Map v18, v2;
int v4, v8, v9;
java.lang.String v14;
boolean v11;
java.util.Iterator v10;
java.util.Set v3;
java.lang.Object v1, v12, v13, v15;
io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping v0;
v0 := @this: io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<io.netty.util.DomainNameMapping: void <init>(java.util.Map,java.lang.Object)>(null, v1);
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: int size()>();
v5 = newarray (java.lang.String)[v4];
v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns> = v5;
v6 = newarray (java.lang.Object)[v4];
v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object[] values> = v6;
v7 = new java.util.LinkedHashMap;
v8 = interfaceinvoke v2.<java.util.Map: int size()>();
specialinvoke v7.<java.util.LinkedHashMap: void <init>(int)>(v8);
v9 = 0;
v10 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getKey()>();
v14 = staticinvoke <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String normalizeHostname(java.lang.String)>(v13);
v15 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns>;
v16[v9] = v14;
v17 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object[] values>;
v17[v9] = v15;
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v14, v15);
v9 = v9 + 1;
goto label1;
label2:
v18 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v7);
v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.util.Map map> = v18;
return;
}
public io.netty.util.DomainNameMapping add(java.lang.String, java.lang.Object)
{
java.lang.UnsupportedOperationException v3;
java.lang.Object v2;
java.lang.String v1;
io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping v0;
v0 := @this: io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Immutable DomainNameMapping does not support modification after initial creation");
throw v3;
}
public java.lang.Object map(java.lang.String)
{
java.lang.Object[] v9;
java.lang.String[] v3, v6;
int v4, v5;
java.lang.Object v10, v11;
java.lang.String v1, v2, v7;
boolean v8;
io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping v0;
v0 := @this: io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping;
v1 := @parameter0: java.lang.String;
if v1 == null goto label3;
v2 = staticinvoke <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String normalizeHostname(java.lang.String)>(v1);
v3 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns>;
v4 = lengthof v3;
v5 = 0;
label1:
if v5 >= v4 goto label3;
v6 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns>;
v7 = v6[v5];
v8 = staticinvoke <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: boolean matches(java.lang.String,java.lang.String)>(v7, v2);
if v8 == 0 goto label2;
v9 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object[] values>;
v10 = v9[v5];
return v10;
label2:
v5 = v5 + 1;
goto label1;
label3:
v11 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object defaultValue>;
return v11;
}
public java.util.Map asMap()
{
io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping v0;
java.util.Map v1;
v0 := @this: io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping;
v1 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.util.Map map>;
return v1;
}
public java.lang.String toString()
{
java.lang.Object[] v8;
java.lang.String[] v3, v6;
int v11, v12, v13, v14, v15, v16, v17, v4;
java.lang.String v10, v18, v2, v5, v7;
java.lang.Object v1, v9;
java.lang.StringBuilder v19, v20;
io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping v0;
v0 := @this: io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping;
v1 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object defaultValue>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns>;
v4 = lengthof v3;
if v4 != 0 goto label1;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("ImmutableDomainNameMapping(default: \u0001, map: {})");
return v5;
label1:
v6 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns>;
v7 = v6[0];
v8 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object[] values>;
v9 = v8[0];
v10 = virtualinvoke v9.<java.lang.Object: java.lang.String toString()>();
v11 = virtualinvoke v7.<java.lang.String: int length()>();
v12 = virtualinvoke v10.<java.lang.String: int length()>();
v13 = v11 + v12;
v14 = v13 + 3;
v15 = virtualinvoke v2.<java.lang.String: int length()>();
v16 = staticinvoke <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: int estimateBufferSize(int,int,int)>(v15, v4, v14);
specialinvoke v19.<java.lang.StringBuilder: void <init>(int)>(v16);
staticinvoke <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.StringBuilder appendMapping(java.lang.StringBuilder,java.lang.String,java.lang.String)>(v20, v7, v10);
v17 = 1;
label2:
if v17 >= v4 goto label3;
virtualinvoke v20.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
specialinvoke v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.StringBuilder appendMapping(java.lang.StringBuilder,int)>(v20, v17);
v17 = v17 + 1;
goto label2;
label3:
v18 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("ImmutableDomainNameMapping(default: \u0001, map: {})");
return v18;
}
private static int estimateBufferSize(int, int, int)
{
int v0, v1, v2, v3, v4, v5, v7;
double v6;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: int REPR_CONST_PART_LENGTH>;
v4 = v3 + v0;
v5 = v2 * v1;
v6 = v5 * 1.1;
v7 = v4 + v6;
return v7;
}
private java.lang.StringBuilder appendMapping(java.lang.StringBuilder, int)
{
java.lang.Object[] v5;
java.lang.String[] v3;
int v2;
java.lang.Object v6;
java.lang.StringBuilder v1, v8;
java.lang.String v4, v7;
io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping v0;
v0 := @this: io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping;
v1 := @parameter0: java.lang.StringBuilder;
v2 := @parameter1: int;
v3 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.String[] domainNamePatterns>;
v4 = v3[v2];
v5 = v0.<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.Object[] values>;
v6 = v5[v2];
v7 = virtualinvoke v6.<java.lang.Object: java.lang.String toString()>();
v8 = staticinvoke <io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: java.lang.StringBuilder appendMapping(java.lang.StringBuilder,java.lang.String,java.lang.String)>(v1, v4, v7);
return v8;
}
private static java.lang.StringBuilder appendMapping(java.lang.StringBuilder, java.lang.String, java.lang.String)
{
java.lang.StringBuilder v0, v3, v4, v5;
java.lang.String v1, v2;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v1);
v4 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(61);
v5 = virtualinvoke v4.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
return v5;
}
static void <clinit>()
{
int v1, v3, v4, v6, v7;
java.lang.String v0, v2, v5;
v0 = "ImmutableDomainNameMapping(default: ";
v1 = virtualinvoke v0.<java.lang.String: int length()>();
v2 = ", map: {";
v3 = virtualinvoke v2.<java.lang.String: int length()>();
v4 = v1 + v3;
v5 = "})";
v6 = virtualinvoke v5.<java.lang.String: int length()>();
v7 = v4 + v6;
<io.netty.util.DomainNameMappingBuilder$ImmutableDomainNameMapping: int REPR_CONST_PART_LENGTH> = v7;
return;
}
}