public class io.netty.util.concurrent.PromiseAggregator extends java.lang.Object implements io.netty.util.concurrent.GenericFutureListener
{
private final io.netty.util.concurrent.Promise aggregatePromise;
private final boolean failPending;
private java.util.Set pendingPromises;
public void <init>(io.netty.util.concurrent.Promise, boolean)
{
io.netty.util.concurrent.Promise v1;
java.lang.Object v3;
boolean v2;
io.netty.util.concurrent.PromiseAggregator v0;
v0 := @this: io.netty.util.concurrent.PromiseAggregator;
v1 := @parameter0: io.netty.util.concurrent.Promise;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "aggregatePromise");
v0.<io.netty.util.concurrent.PromiseAggregator: io.netty.util.concurrent.Promise aggregatePromise> = v3;
v0.<io.netty.util.concurrent.PromiseAggregator: boolean failPending> = v2;
return;
}
public void <init>(io.netty.util.concurrent.Promise)
{
io.netty.util.concurrent.Promise v1;
io.netty.util.concurrent.PromiseAggregator v0;
v0 := @this: io.netty.util.concurrent.PromiseAggregator;
v1 := @parameter0: io.netty.util.concurrent.Promise;
specialinvoke v0.<io.netty.util.concurrent.PromiseAggregator: void <init>(io.netty.util.concurrent.Promise,boolean)>(v1, 1);
return;
}
public final transient io.netty.util.concurrent.PromiseAggregator add(io.netty.util.concurrent.Promise[])
{
java.lang.Throwable v11;
io.netty.util.concurrent.Promise v9;
java.util.Set v10, v3;
io.netty.util.concurrent.PromiseAggregator v0;
int v2, v4, v5, v7, v8;
io.netty.util.concurrent.Promise[] v1;
java.util.LinkedHashSet v6;
v0 := @this: io.netty.util.concurrent.PromiseAggregator;
v1 := @parameter0: io.netty.util.concurrent.Promise[];
staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "promises");
v2 = lengthof v1;
if v2 != 0 goto label01;
return v0;
label01:
entermonitor v0;
label02:
v3 = v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises>;
if v3 != null goto label05;
v4 = lengthof v1;
if v4 <= 1 goto label03;
v5 = lengthof v1;
goto label04;
label03:
v5 = 2;
label04:
v6 = new java.util.LinkedHashSet;
specialinvoke v6.<java.util.LinkedHashSet: void <init>(int)>(v5);
v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises> = v6;
label05:
v7 = lengthof v1;
v8 = 0;
label06:
if v8 >= v7 goto label08;
v9 = v1[v8];
if v9 == null goto label07;
v10 = v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises>;
interfaceinvoke v10.<java.util.Set: boolean add(java.lang.Object)>(v9);
interfaceinvoke v9.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise addListener(io.netty.util.concurrent.GenericFutureListener)>(v0);
label07:
v8 = v8 + 1;
goto label06;
label08:
exitmonitor v0;
label09:
goto label11;
label10:
v11 := @caughtexception;
exitmonitor v0;
throw v11;
label11:
return v0;
catch java.lang.Throwable from label02 to label09 with label10;
}
public synchronized void operationComplete(io.netty.util.concurrent.Future) throws java.lang.Exception
{
java.lang.Throwable v6;
boolean v11, v14, v5, v8;
io.netty.util.concurrent.Promise v15, v3, v7;
java.util.Iterator v10;
java.util.Set v13, v2, v4, v9;
io.netty.util.concurrent.PromiseAggregator v0;
java.lang.Object v12;
io.netty.util.concurrent.Future v1;
v0 := @this: io.netty.util.concurrent.PromiseAggregator;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises>;
if v2 != null goto label1;
v3 = v0.<io.netty.util.concurrent.PromiseAggregator: io.netty.util.concurrent.Promise aggregatePromise>;
interfaceinvoke v3.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(null);
goto label4;
label1:
v4 = v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises>;
interfaceinvoke v4.<java.util.Set: boolean remove(java.lang.Object)>(v1);
v5 = interfaceinvoke v1.<io.netty.util.concurrent.Future: boolean isSuccess()>();
if v5 != 0 goto label3;
v6 = interfaceinvoke v1.<io.netty.util.concurrent.Future: java.lang.Throwable cause()>();
v7 = v0.<io.netty.util.concurrent.PromiseAggregator: io.netty.util.concurrent.Promise aggregatePromise>;
interfaceinvoke v7.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v6);
v8 = v0.<io.netty.util.concurrent.PromiseAggregator: boolean failPending>;
if v8 == 0 goto label4;
v9 = v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises>;
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label2:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label4;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v12.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setFailure(java.lang.Throwable)>(v6);
goto label2;
label3:
v13 = v0.<io.netty.util.concurrent.PromiseAggregator: java.util.Set pendingPromises>;
v14 = interfaceinvoke v13.<java.util.Set: boolean isEmpty()>();
if v14 == 0 goto label4;
v15 = v0.<io.netty.util.concurrent.PromiseAggregator: io.netty.util.concurrent.Promise aggregatePromise>;
interfaceinvoke v15.<io.netty.util.concurrent.Promise: io.netty.util.concurrent.Promise setSuccess(java.lang.Object)>(null);
label4:
return;
}
}