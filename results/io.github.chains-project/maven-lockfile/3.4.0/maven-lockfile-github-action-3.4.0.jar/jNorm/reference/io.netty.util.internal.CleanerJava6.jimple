final class io.netty.util.internal.CleanerJava6 extends java.lang.Object implements io.netty.util.internal.Cleaner
{
private static final long CLEANER_FIELD_OFFSET;
private static final java.lang.reflect.Method CLEAN_METHOD;
private static final java.lang.reflect.Field CLEANER_FIELD;
private static final io.netty.util.internal.logging.InternalLogger logger;
void <init>()
{
io.netty.util.internal.CleanerJava6 v0;
v0 := @this: io.netty.util.internal.CleanerJava6;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static boolean isSupported()
{
byte v1;
long v0;
java.lang.reflect.Field v2;
boolean v3;
v0 = <io.netty.util.internal.CleanerJava6: long CLEANER_FIELD_OFFSET>;
v1 = v0 cmp -1L;
if v1 != 0 goto label1;
v2 = <io.netty.util.internal.CleanerJava6: java.lang.reflect.Field CLEANER_FIELD>;
if v2 == null goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
public void freeDirectBuffer(java.nio.ByteBuffer)
{
java.lang.Throwable v4;
io.netty.util.internal.CleanerJava6 v0;
java.lang.SecurityManager v3;
java.nio.ByteBuffer v1;
boolean v2;
v0 := @this: io.netty.util.internal.CleanerJava6;
v1 := @parameter0: java.nio.ByteBuffer;
v2 = virtualinvoke v1.<java.nio.ByteBuffer: boolean isDirect()>();
if v2 != 0 goto label1;
return;
label1:
v3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v3 != null goto label5;
label2:
staticinvoke <io.netty.util.internal.CleanerJava6: void freeDirectBuffer0(java.nio.ByteBuffer)>(v1);
label3:
goto label6;
label4:
v4 := @caughtexception;
staticinvoke <io.netty.util.internal.PlatformDependent0: void throwException(java.lang.Throwable)>(v4);
goto label6;
label5:
staticinvoke <io.netty.util.internal.CleanerJava6: void freeDirectBufferPrivileged(java.nio.ByteBuffer)>(v1);
label6:
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
private static void freeDirectBufferPrivileged(java.nio.ByteBuffer)
{
java.lang.Object v2;
io.netty.util.internal.CleanerJava6$2 v1;
java.nio.ByteBuffer v0;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = new io.netty.util.internal.CleanerJava6$2;
specialinvoke v1.<io.netty.util.internal.CleanerJava6$2: void <init>(java.nio.ByteBuffer)>(v0);
v2 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v1);
if v2 == null goto label1;
staticinvoke <io.netty.util.internal.PlatformDependent0: void throwException(java.lang.Throwable)>(v2);
label1:
return;
}
private static void freeDirectBuffer0(java.nio.ByteBuffer) throws java.lang.Exception
{
java.lang.Object[] v7;
long v1, v5;
java.lang.reflect.Field v3;
java.nio.ByteBuffer v0;
byte v2;
java.lang.Object v4;
java.lang.reflect.Method v6;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = <io.netty.util.internal.CleanerJava6: long CLEANER_FIELD_OFFSET>;
v2 = v1 cmp -1L;
if v2 != 0 goto label1;
v3 = <io.netty.util.internal.CleanerJava6: java.lang.reflect.Field CLEANER_FIELD>;
v4 = virtualinvoke v3.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v0);
goto label2;
label1:
v5 = <io.netty.util.internal.CleanerJava6: long CLEANER_FIELD_OFFSET>;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent0: java.lang.Object getObject(java.lang.Object,long)>(v0, v5);
label2:
if v4 == null goto label3;
v6 = <io.netty.util.internal.CleanerJava6: java.lang.reflect.Method CLEAN_METHOD>;
v7 = newarray (java.lang.Object)[0];
virtualinvoke v6.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v4, v7);
label3:
return;
}
static void <clinit>()
{
java.lang.Throwable v1, v13;
java.lang.Object[] v12;
long v7;
java.nio.ByteBuffer v2;
java.lang.reflect.Method v11;
boolean v5, v6;
java.lang.Class[] v10;
io.netty.util.internal.CleanerJava6$1 v3;
io.netty.util.internal.logging.InternalLogger v0, v14, v15;
java.lang.Class v9;
java.lang.Object v4, v8;
v0 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/util/internal/CleanerJava6;");
<io.netty.util.internal.CleanerJava6: io.netty.util.internal.logging.InternalLogger logger> = v0;
v1 = null;
v2 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1);
label1:
v3 = new io.netty.util.internal.CleanerJava6$1;
specialinvoke v3.<io.netty.util.internal.CleanerJava6$1: void <init>(java.nio.ByteBuffer)>(v2);
v4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
v5 = v4 instanceof java.lang.Throwable;
if v5 == 0 goto label2;
throw v4;
label2:
v6 = staticinvoke <io.netty.util.internal.PlatformDependent: boolean hasUnsafe()>();
if v6 == 0 goto label3;
v7 = staticinvoke <io.netty.util.internal.PlatformDependent0: long objectFieldOffset(java.lang.reflect.Field)>(v4);
v8 = staticinvoke <io.netty.util.internal.PlatformDependent0: java.lang.Object getObject(java.lang.Object,long)>(v2, v7);
goto label4;
label3:
v7 = -1L;
v8 = virtualinvoke v4.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v2);
label4:
v9 = virtualinvoke v8.<java.lang.Object: java.lang.Class getClass()>();
v10 = newarray (java.lang.Class)[0];
v11 = virtualinvoke v9.<java.lang.Class: java.lang.reflect.Method getDeclaredMethod(java.lang.String,java.lang.Class[])>("clean", v10);
v12 = newarray (java.lang.Object)[0];
virtualinvoke v11.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v8, v12);
label5:
goto label7;
label6:
v13 := @caughtexception;
v7 = -1L;
v11 = null;
v1 = v13;
v4 = null;
label7:
if v1 != null goto label8;
v14 = <io.netty.util.internal.CleanerJava6: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v14.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("java.nio.ByteBuffer.cleaner(): available");
goto label9;
label8:
v15 = <io.netty.util.internal.CleanerJava6: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v15.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("java.nio.ByteBuffer.cleaner(): unavailable", v1);
label9:
<io.netty.util.internal.CleanerJava6: java.lang.reflect.Field CLEANER_FIELD> = v4;
<io.netty.util.internal.CleanerJava6: long CLEANER_FIELD_OFFSET> = v7;
<io.netty.util.internal.CleanerJava6: java.lang.reflect.Method CLEAN_METHOD> = v11;
return;
catch java.lang.Throwable from label1 to label5 with label6;
}
}