final class io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector extends java.lang.Object
{
private static boolean canExecuteExecutable(java.io.File) throws java.io.IOException
{
java.nio.file.attribute.PosixFilePermission v6, v7, v8;
java.nio.file.LinkOption[] v4;
java.util.Set v5;
java.io.File v0;
int v1;
java.nio.file.Path v12, v3;
java.util.EnumSet v11, v9;
boolean v10, v13, v2;
v0 := @parameter0: java.io.File;
v1 = staticinvoke <io.netty.util.internal.PlatformDependent: int javaVersion()>();
if v1 >= 7 goto label1;
return 1;
label1:
v2 = virtualinvoke v0.<java.io.File: boolean canExecute()>();
if v2 == 0 goto label2;
return 1;
label2:
v3 = virtualinvoke v0.<java.io.File: java.nio.file.Path toPath()>();
v4 = newarray (java.nio.file.LinkOption)[0];
v5 = staticinvoke <java.nio.file.Files: java.util.Set getPosixFilePermissions(java.nio.file.Path,java.nio.file.LinkOption[])>(v3, v4);
v6 = <java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OWNER_EXECUTE>;
v7 = <java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission GROUP_EXECUTE>;
v8 = <java.nio.file.attribute.PosixFilePermission: java.nio.file.attribute.PosixFilePermission OTHERS_EXECUTE>;
v9 = staticinvoke <java.util.EnumSet: java.util.EnumSet of(java.lang.Enum,java.lang.Enum,java.lang.Enum)>(v6, v7, v8);
v10 = interfaceinvoke v5.<java.util.Set: boolean containsAll(java.util.Collection)>(v9);
if v10 == 0 goto label3;
return 0;
label3:
v11 = staticinvoke <java.util.EnumSet: java.util.EnumSet copyOf(java.util.Collection)>(v5);
interfaceinvoke v11.<java.util.Set: boolean addAll(java.util.Collection)>(v9);
v12 = virtualinvoke v0.<java.io.File: java.nio.file.Path toPath()>();
staticinvoke <java.nio.file.Files: java.nio.file.Path setPosixFilePermissions(java.nio.file.Path,java.util.Set)>(v12, v11);
v13 = virtualinvoke v0.<java.io.File: boolean canExecute()>();
return v13;
}
private void <init>()
{
io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector v0;
v0 := @this: io.netty.util.internal.NativeLibraryLoader$NoexecVolumeDetector;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}