public final class io.netty.util.internal.ObjectCleaner extends java.lang.Object
{
private static final int REFERENCE_QUEUE_POLL_TIMEOUT_MS;
static final java.lang.String CLEANER_THREAD_NAME;
private static final java.util.Set LIVE_SET;
private static final java.lang.ref.ReferenceQueue REFERENCE_QUEUE;
private static final java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING;
private static final java.lang.Runnable CLEANER_TASK;
public static void register(java.lang.Object, java.lang.Runnable)
{
java.util.Set v4;
java.util.concurrent.atomic.AtomicBoolean v5;
io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference v2;
java.lang.Runnable v1, v8;
io.netty.util.concurrent.FastThreadLocalThread v7;
java.lang.Object v0, v3;
java.lang.String v10;
io.netty.util.internal.ObjectCleaner$2 v9;
boolean v6;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Runnable;
v2 = new io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference;
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "cleanupTask");
specialinvoke v2.<io.netty.util.internal.ObjectCleaner$AutomaticCleanerReference: void <init>(java.lang.Object,java.lang.Runnable)>(v0, v3);
v4 = <io.netty.util.internal.ObjectCleaner: java.util.Set LIVE_SET>;
interfaceinvoke v4.<java.util.Set: boolean add(java.lang.Object)>(v2);
v5 = <io.netty.util.internal.ObjectCleaner: java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v6 == 0 goto label1;
v7 = new io.netty.util.concurrent.FastThreadLocalThread;
v8 = <io.netty.util.internal.ObjectCleaner: java.lang.Runnable CLEANER_TASK>;
specialinvoke v7.<io.netty.util.concurrent.FastThreadLocalThread: void <init>(java.lang.Runnable)>(v8);
virtualinvoke v7.<java.lang.Thread: void setPriority(int)>(1);
v9 = new io.netty.util.internal.ObjectCleaner$2;
specialinvoke v9.<io.netty.util.internal.ObjectCleaner$2: void <init>(java.lang.Thread)>(v7);
staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v9);
v10 = <io.netty.util.internal.ObjectCleaner: java.lang.String CLEANER_THREAD_NAME>;
virtualinvoke v7.<java.lang.Thread: void setName(java.lang.String)>(v10);
virtualinvoke v7.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke v7.<java.lang.Thread: void start()>();
label1:
return;
}
public static int getLiveSetCount()
{
int v1;
java.util.Set v0;
v0 = <io.netty.util.internal.ObjectCleaner: java.util.Set LIVE_SET>;
v1 = interfaceinvoke v0.<java.util.Set: int size()>();
return v1;
}
private void <init>()
{
io.netty.util.internal.ObjectCleaner v0;
v0 := @this: io.netty.util.internal.ObjectCleaner;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicBoolean v7;
io.netty.util.internal.ConcurrentSet v5;
java.lang.ref.ReferenceQueue v6;
int v0, v1;
java.lang.Class v2;
io.netty.util.internal.ObjectCleaner$1 v8;
java.lang.String v3, v4;
v0 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: int getInt(java.lang.String,int)>("io.netty.util.internal.ObjectCleaner.refQueuePollTimeout", 10000);
v1 = staticinvoke <java.lang.Math: int max(int,int)>(500, v0);
<io.netty.util.internal.ObjectCleaner: int REFERENCE_QUEUE_POLL_TIMEOUT_MS> = v1;
v2 = class "Lio/netty/util/internal/ObjectCleaner;";
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getSimpleName()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001Thread");
<io.netty.util.internal.ObjectCleaner: java.lang.String CLEANER_THREAD_NAME> = v4;
v5 = new io.netty.util.internal.ConcurrentSet;
specialinvoke v5.<io.netty.util.internal.ConcurrentSet: void <init>()>();
<io.netty.util.internal.ObjectCleaner: java.util.Set LIVE_SET> = v5;
v6 = new java.lang.ref.ReferenceQueue;
specialinvoke v6.<java.lang.ref.ReferenceQueue: void <init>()>();
<io.netty.util.internal.ObjectCleaner: java.lang.ref.ReferenceQueue REFERENCE_QUEUE> = v6;
v7 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v7.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);
<io.netty.util.internal.ObjectCleaner: java.util.concurrent.atomic.AtomicBoolean CLEANER_RUNNING> = v7;
v8 = new io.netty.util.internal.ObjectCleaner$1;
specialinvoke v8.<io.netty.util.internal.ObjectCleaner$1: void <init>()>();
<io.netty.util.internal.ObjectCleaner: java.lang.Runnable CLEANER_TASK> = v8;
return;
}
}