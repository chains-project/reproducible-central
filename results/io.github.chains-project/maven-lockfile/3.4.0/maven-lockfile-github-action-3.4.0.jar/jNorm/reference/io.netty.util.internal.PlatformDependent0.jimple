final class io.netty.util.internal.PlatformDependent0 extends java.lang.Object
{
private static final io.netty.util.internal.logging.InternalLogger logger;
private static final long ADDRESS_FIELD_OFFSET;
private static final long BYTE_ARRAY_BASE_OFFSET;
private static final long INT_ARRAY_BASE_OFFSET;
private static final long INT_ARRAY_INDEX_SCALE;
private static final long LONG_ARRAY_BASE_OFFSET;
private static final long LONG_ARRAY_INDEX_SCALE;
private static final java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR;
private static final java.lang.Throwable EXPLICIT_NO_UNSAFE_CAUSE;
private static final java.lang.reflect.Method ALLOCATE_ARRAY_METHOD;
private static final java.lang.reflect.Method ALIGN_SLICE;
private static final int JAVA_VERSION;
private static final boolean IS_ANDROID;
private static final boolean STORE_FENCE_AVAILABLE;
private static final java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE;
private static final java.lang.Object INTERNAL_UNSAFE;
private static final boolean RUNNING_IN_NATIVE_IMAGE;
private static final boolean IS_EXPLICIT_TRY_REFLECTION_SET_ACCESSIBLE;
static final sun.misc.Unsafe UNSAFE;
static final int HASH_CODE_ASCII_SEED;
static final int HASH_CODE_C1;
static final int HASH_CODE_C2;
private static final long UNSAFE_COPY_THRESHOLD;
private static final boolean UNALIGNED;
static final boolean $assertionsDisabled;
private static boolean unsafeStaticFieldOffsetSupported()
{
boolean v0, v1;
v0 = <io.netty.util.internal.PlatformDependent0: boolean RUNNING_IN_NATIVE_IMAGE>;
if v0 != 0 goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
static boolean isExplicitNoUnsafe()
{
java.lang.Throwable v0;
boolean v1;
v0 = <io.netty.util.internal.PlatformDependent0: java.lang.Throwable EXPLICIT_NO_UNSAFE_CAUSE>;
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
private static java.lang.Throwable explicitNoUnsafeCause0()
{
java.lang.UnsupportedOperationException v10, v4;
io.netty.util.internal.logging.InternalLogger v1, v3, v9;
java.lang.Boolean v2;
java.lang.String v6, v8;
boolean v0, v5, v7;
v0 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean getBoolean(java.lang.String,boolean)>("io.netty.noUnsafe", 0);
v1 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v0);
interfaceinvoke v1.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("-Dio.netty.noUnsafe: {}", v2);
if v0 == 0 goto label1;
v3 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("sun.misc.Unsafe: unavailable (io.netty.noUnsafe)");
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("sun.misc.Unsafe: unavailable (io.netty.noUnsafe)");
return v4;
label1:
v5 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean contains(java.lang.String)>("io.netty.tryUnsafe");
if v5 == 0 goto label2;
v6 = "io.netty.tryUnsafe";
goto label3;
label2:
v6 = "org.jboss.netty.tryUnsafe";
label3:
v7 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean getBoolean(java.lang.String,boolean)>(v6, 1);
if v7 != 0 goto label4;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("sun.misc.Unsafe: unavailable (\u0001)");
v9 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v9.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>(v8);
v10 = new java.lang.UnsupportedOperationException;
specialinvoke v10.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>(v8);
return v10;
label4:
return null;
}
static boolean isUnaligned()
{
boolean v0;
v0 = <io.netty.util.internal.PlatformDependent0: boolean UNALIGNED>;
return v0;
}
static boolean hasUnsafe()
{
sun.misc.Unsafe v0;
boolean v1;
v0 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
static java.lang.Throwable getUnsafeUnavailabilityCause()
{
java.lang.Throwable v0;
v0 = <io.netty.util.internal.PlatformDependent0: java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE>;
return v0;
}
static boolean unalignedAccess()
{
boolean v0;
v0 = <io.netty.util.internal.PlatformDependent0: boolean UNALIGNED>;
return v0;
}
static void throwException(java.lang.Throwable)
{
java.lang.Throwable v0;
sun.misc.Unsafe v1;
java.lang.Object v2;
v0 := @parameter0: java.lang.Throwable;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v0, "cause");
virtualinvoke v1.<sun.misc.Unsafe: void throwException(java.lang.Throwable)>(v2);
return;
}
static boolean hasDirectBufferNoCleanerConstructor()
{
java.lang.reflect.Constructor v0;
boolean v1;
v0 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR>;
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
static java.nio.ByteBuffer reallocateDirectNoCleaner(java.nio.ByteBuffer, int)
{
sun.misc.Unsafe v2;
int v1;
long v3, v4;
java.nio.ByteBuffer v0, v5;
v0 := @parameter0: java.nio.ByteBuffer;
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent0: long directBufferAddress(java.nio.ByteBuffer)>(v0);
v4 = virtualinvoke v2.<sun.misc.Unsafe: long reallocateMemory(long,long)>(v3, v1);
v5 = staticinvoke <io.netty.util.internal.PlatformDependent0: java.nio.ByteBuffer newDirectBuffer(long,int)>(v4, v1);
return v5;
}
static java.nio.ByteBuffer allocateDirectNoCleaner(int)
{
sun.misc.Unsafe v1;
int v0, v2;
long v3;
java.nio.ByteBuffer v4;
v0 := @parameter0: int;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = staticinvoke <java.lang.Math: int max(int,int)>(1, v0);
v3 = virtualinvoke v1.<sun.misc.Unsafe: long allocateMemory(long)>(v2);
v4 = staticinvoke <io.netty.util.internal.PlatformDependent0: java.nio.ByteBuffer newDirectBuffer(long,int)>(v3, v0);
return v4;
}
static boolean hasAlignSliceMethod()
{
java.lang.reflect.Method v0;
boolean v1;
v0 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALIGN_SLICE>;
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
static java.nio.ByteBuffer alignSlice(java.nio.ByteBuffer, int)
{
java.lang.IllegalAccessException v6;
java.lang.Object[] v3;
java.lang.Error v7, v9;
java.lang.Integer v4;
java.nio.ByteBuffer v0;
java.lang.reflect.InvocationTargetException v8;
int v1;
java.lang.Object v5;
java.lang.reflect.Method v2;
v0 := @parameter0: java.nio.ByteBuffer;
v1 := @parameter1: int;
label1:
v2 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALIGN_SLICE>;
v3 = newarray (java.lang.Object)[1];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v3[0] = v4;
v5 = virtualinvoke v2.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v0, v3);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = new java.lang.Error;
specialinvoke v7.<java.lang.Error: void <init>(java.lang.Throwable)>(v6);
throw v7;
label4:
v8 := @caughtexception;
v9 = new java.lang.Error;
specialinvoke v9.<java.lang.Error: void <init>(java.lang.Throwable)>(v8);
throw v9;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
}
static boolean hasAllocateArrayMethod()
{
java.lang.reflect.Method v0;
boolean v1;
v0 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALLOCATE_ARRAY_METHOD>;
if v0 == null goto label1;
v1 = 1;
goto label2;
label1:
v1 = 0;
label2:
return v1;
}
static byte[] allocateUninitializedArray(int)
{
java.lang.IllegalAccessException v7;
java.lang.Object[] v3;
java.lang.Error v10, v8;
java.lang.Integer v5;
java.lang.reflect.InvocationTargetException v9;
int v0;
java.lang.Class v4;
java.lang.Object v2, v6;
java.lang.reflect.Method v1;
v0 := @parameter0: int;
label1:
v1 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALLOCATE_ARRAY_METHOD>;
v2 = <io.netty.util.internal.PlatformDependent0: java.lang.Object INTERNAL_UNSAFE>;
v3 = newarray (java.lang.Object)[2];
v4 = <java.lang.Byte: java.lang.Class TYPE>;
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v3[1] = v5;
v6 = virtualinvoke v1.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v2, v3);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = new java.lang.Error;
specialinvoke v8.<java.lang.Error: void <init>(java.lang.Throwable)>(v7);
throw v8;
label4:
v9 := @caughtexception;
v10 = new java.lang.Error;
specialinvoke v10.<java.lang.Error: void <init>(java.lang.Throwable)>(v9);
throw v10;
catch java.lang.IllegalAccessException from label1 to label2 with label3;
catch java.lang.reflect.InvocationTargetException from label1 to label2 with label4;
}
static java.nio.ByteBuffer newDirectBuffer(long, int)
{
java.lang.Throwable v7;
java.lang.Object[] v3;
java.lang.Error v9;
long v0;
java.lang.Integer v5;
java.lang.reflect.Constructor v2;
java.lang.Long v4;
int v1;
java.lang.Object v6;
boolean v8;
v0 := @parameter0: long;
v1 := @parameter1: int;
staticinvoke <io.netty.util.internal.ObjectUtil: int checkPositiveOrZero(int,java.lang.String)>(v1, "capacity");
label1:
v2 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR>;
v3 = newarray (java.lang.Object)[2];
v4 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v0);
v3[0] = v4;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v3[1] = v5;
v6 = virtualinvoke v2.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v3);
label2:
return v6;
label3:
v7 := @caughtexception;
v8 = v7 instanceof java.lang.Error;
if v8 == 0 goto label4;
throw v7;
label4:
v9 = new java.lang.Error;
specialinvoke v9.<java.lang.Error: void <init>(java.lang.Throwable)>(v7);
throw v9;
catch java.lang.Throwable from label1 to label2 with label3;
}
static long directBufferAddress(java.nio.ByteBuffer)
{
long v1, v2;
java.nio.ByteBuffer v0;
v0 := @parameter0: java.nio.ByteBuffer;
v1 = <io.netty.util.internal.PlatformDependent0: long ADDRESS_FIELD_OFFSET>;
v2 = staticinvoke <io.netty.util.internal.PlatformDependent0: long getLong(java.lang.Object,long)>(v0, v1);
return v2;
}
static long byteArrayBaseOffset()
{
long v0;
v0 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
return v0;
}
static java.lang.Object getObject(java.lang.Object, long)
{
sun.misc.Unsafe v2;
java.lang.Object v0, v3;
long v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = virtualinvoke v2.<sun.misc.Unsafe: java.lang.Object getObject(java.lang.Object,long)>(v0, v1);
return v3;
}
static int getInt(java.lang.Object, long)
{
sun.misc.Unsafe v2;
int v3;
java.lang.Object v0;
long v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = virtualinvoke v2.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v1);
return v3;
}
static void safeConstructPutInt(java.lang.Object, long, int)
{
sun.misc.Unsafe v4, v5, v6;
int v2;
java.lang.Object v0;
long v1;
boolean v3;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 := @parameter2: int;
v3 = <io.netty.util.internal.PlatformDependent0: boolean STORE_FENCE_AVAILABLE>;
if v3 == 0 goto label1;
v4 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v4.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(v0, v1, v2);
v5 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v5.<sun.misc.Unsafe: void storeFence()>();
goto label2;
label1:
v6 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v6.<sun.misc.Unsafe: void putIntVolatile(java.lang.Object,long,int)>(v0, v1, v2);
label2:
return;
}
private static long getLong(java.lang.Object, long)
{
sun.misc.Unsafe v2;
java.lang.Object v0;
long v1, v3;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = virtualinvoke v2.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v1);
return v3;
}
static long objectFieldOffset(java.lang.reflect.Field)
{
sun.misc.Unsafe v1;
long v2;
java.lang.reflect.Field v0;
v0 := @parameter0: java.lang.reflect.Field;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: long objectFieldOffset(java.lang.reflect.Field)>(v0);
return v2;
}
static byte getByte(long)
{
sun.misc.Unsafe v1;
long v0;
byte v2;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: byte getByte(long)>(v0);
return v2;
}
static short getShort(long)
{
sun.misc.Unsafe v1;
long v0;
short v2;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: short getShort(long)>(v0);
return v2;
}
static int getInt(long)
{
int v2;
sun.misc.Unsafe v1;
long v0;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: int getInt(long)>(v0);
return v2;
}
static long getLong(long)
{
sun.misc.Unsafe v1;
long v0, v2;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: long getLong(long)>(v0);
return v2;
}
static byte getByte(byte[], int)
{
sun.misc.Unsafe v2;
byte[] v0;
byte v5;
int v1;
long v3, v4;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v4 = v3 + v1;
v5 = virtualinvoke v2.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v0, v4);
return v5;
}
static byte getByte(byte[], long)
{
sun.misc.Unsafe v2;
byte[] v0;
byte v5;
long v1, v3, v4;
v0 := @parameter0: byte[];
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v4 = v3 + v1;
v5 = virtualinvoke v2.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v0, v4);
return v5;
}
static short getShort(byte[], int)
{
sun.misc.Unsafe v2;
byte[] v0;
short v5;
int v1;
long v3, v4;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v4 = v3 + v1;
v5 = virtualinvoke v2.<sun.misc.Unsafe: short getShort(java.lang.Object,long)>(v0, v4);
return v5;
}
static int getInt(byte[], int)
{
sun.misc.Unsafe v2;
byte[] v0;
int v1, v5;
long v3, v4;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v4 = v3 + v1;
v5 = virtualinvoke v2.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v4);
return v5;
}
static int getInt(int[], long)
{
sun.misc.Unsafe v2;
long v1, v3, v4, v5, v6;
int[] v0;
int v7;
v0 := @parameter0: int[];
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long INT_ARRAY_BASE_OFFSET>;
v4 = <io.netty.util.internal.PlatformDependent0: long INT_ARRAY_INDEX_SCALE>;
v5 = v4 * v1;
v6 = v3 + v5;
v7 = virtualinvoke v2.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v6);
return v7;
}
static int getIntVolatile(long)
{
int v2;
sun.misc.Unsafe v1;
long v0;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: int getIntVolatile(java.lang.Object,long)>(null, v0);
return v2;
}
static void putIntOrdered(long, int)
{
int v1;
sun.misc.Unsafe v2;
long v0;
v0 := @parameter0: long;
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v2.<sun.misc.Unsafe: void putOrderedInt(java.lang.Object,long,int)>(null, v0, v1);
return;
}
static long getLong(byte[], int)
{
sun.misc.Unsafe v2;
byte[] v0;
int v1;
long v3, v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v4 = v3 + v1;
v5 = virtualinvoke v2.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v4);
return v5;
}
static long getLong(long[], long)
{
sun.misc.Unsafe v2;
long v1, v3, v4, v5, v6, v7;
long[] v0;
v0 := @parameter0: long[];
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = <io.netty.util.internal.PlatformDependent0: long LONG_ARRAY_BASE_OFFSET>;
v4 = <io.netty.util.internal.PlatformDependent0: long LONG_ARRAY_INDEX_SCALE>;
v5 = v4 * v1;
v6 = v3 + v5;
v7 = virtualinvoke v2.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v6);
return v7;
}
static void putByte(long, byte)
{
sun.misc.Unsafe v2;
long v0;
byte v1;
v0 := @parameter0: long;
v1 := @parameter1: byte;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v2.<sun.misc.Unsafe: void putByte(long,byte)>(v0, v1);
return;
}
static void putShort(long, short)
{
sun.misc.Unsafe v2;
long v0;
short v1;
v0 := @parameter0: long;
v1 := @parameter1: short;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v2.<sun.misc.Unsafe: void putShort(long,short)>(v0, v1);
return;
}
static void putInt(long, int)
{
int v1;
sun.misc.Unsafe v2;
long v0;
v0 := @parameter0: long;
v1 := @parameter1: int;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v2.<sun.misc.Unsafe: void putInt(long,int)>(v0, v1);
return;
}
static void putLong(long, long)
{
sun.misc.Unsafe v2;
long v0, v1;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v2.<sun.misc.Unsafe: void putLong(long,long)>(v0, v1);
return;
}
static void putByte(byte[], int, byte)
{
sun.misc.Unsafe v3;
byte[] v0;
byte v2;
int v1;
long v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: byte;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v4 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v5 = v4 + v1;
virtualinvoke v3.<sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>(v0, v5, v2);
return;
}
static void putByte(java.lang.Object, long, byte)
{
sun.misc.Unsafe v3;
byte v2;
java.lang.Object v0;
long v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 := @parameter2: byte;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v3.<sun.misc.Unsafe: void putByte(java.lang.Object,long,byte)>(v0, v1, v2);
return;
}
static void putShort(byte[], int, short)
{
sun.misc.Unsafe v3;
byte[] v0;
short v2;
int v1;
long v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: short;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v4 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v5 = v4 + v1;
virtualinvoke v3.<sun.misc.Unsafe: void putShort(java.lang.Object,long,short)>(v0, v5, v2);
return;
}
static void putInt(byte[], int, int)
{
sun.misc.Unsafe v3;
byte[] v0;
int v1, v2;
long v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v4 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v5 = v4 + v1;
virtualinvoke v3.<sun.misc.Unsafe: void putInt(java.lang.Object,long,int)>(v0, v5, v2);
return;
}
static void putLong(byte[], int, long)
{
sun.misc.Unsafe v3;
byte[] v0;
int v1;
long v2, v4, v5;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: long;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v4 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v5 = v4 + v1;
virtualinvoke v3.<sun.misc.Unsafe: void putLong(java.lang.Object,long,long)>(v0, v5, v2);
return;
}
static void putObject(java.lang.Object, long, java.lang.Object)
{
sun.misc.Unsafe v3;
java.lang.Object v0, v2;
long v1;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 := @parameter2: java.lang.Object;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v3.<sun.misc.Unsafe: void putObject(java.lang.Object,long,java.lang.Object)>(v0, v1, v2);
return;
}
static void copyMemory(long, long, long)
{
sun.misc.Unsafe v4;
int v3;
long v0, v1, v2;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: long;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion()>();
if v3 > 8 goto label1;
staticinvoke <io.netty.util.internal.PlatformDependent0: void copyMemoryWithSafePointPolling(long,long,long)>(v0, v1, v2);
goto label2;
label1:
v4 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v4.<sun.misc.Unsafe: void copyMemory(long,long,long)>(v0, v1, v2);
label2:
return;
}
private static void copyMemoryWithSafePointPolling(long, long, long)
{
sun.misc.Unsafe v5;
byte v3;
long v0, v1, v2, v4;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: long;
label1:
v3 = v2 cmp 0L;
if v3 <= 0 goto label2;
v4 = staticinvoke <java.lang.Math: long min(long,long)>(v2, 1048576L);
v5 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v5.<sun.misc.Unsafe: void copyMemory(long,long,long)>(v0, v1, v4);
v2 = v2 - v4;
v0 = v0 + v4;
v1 = v1 + v4;
goto label1;
label2:
return;
}
static void copyMemory(java.lang.Object, long, java.lang.Object, long, long)
{
sun.misc.Unsafe v6;
int v5;
java.lang.Object v0, v2;
long v1, v3, v4;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: long;
v4 := @parameter4: long;
v5 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion()>();
if v5 > 8 goto label1;
staticinvoke <io.netty.util.internal.PlatformDependent0: void copyMemoryWithSafePointPolling(java.lang.Object,long,java.lang.Object,long,long)>(v0, v1, v2, v3, v4);
goto label2;
label1:
v6 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v6.<sun.misc.Unsafe: void copyMemory(java.lang.Object,long,java.lang.Object,long,long)>(v0, v1, v2, v3, v4);
label2:
return;
}
private static void copyMemoryWithSafePointPolling(java.lang.Object, long, java.lang.Object, long, long)
{
sun.misc.Unsafe v7;
long v1, v3, v4, v6;
byte v5;
java.lang.Object v0, v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 := @parameter2: java.lang.Object;
v3 := @parameter3: long;
v4 := @parameter4: long;
label1:
v5 = v4 cmp 0L;
if v5 <= 0 goto label2;
v6 = staticinvoke <java.lang.Math: long min(long,long)>(v4, 1048576L);
v7 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v7.<sun.misc.Unsafe: void copyMemory(java.lang.Object,long,java.lang.Object,long,long)>(v0, v1, v2, v3, v6);
v4 = v4 - v6;
v1 = v1 + v6;
v3 = v3 + v6;
goto label1;
label2:
return;
}
static void setMemory(long, long, byte)
{
sun.misc.Unsafe v3;
byte v2;
long v0, v1;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 := @parameter2: byte;
v3 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v3.<sun.misc.Unsafe: void setMemory(long,long,byte)>(v0, v1, v2);
return;
}
static void setMemory(java.lang.Object, long, long, byte)
{
sun.misc.Unsafe v4;
byte v3;
java.lang.Object v0;
long v1, v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: long;
v2 := @parameter2: long;
v3 := @parameter3: byte;
v4 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v4.<sun.misc.Unsafe: void setMemory(java.lang.Object,long,long,byte)>(v0, v1, v2, v3);
return;
}
static boolean equals(byte[], int, byte[], int, int)
{
byte[] v0, v2;
byte v12, v18, v32, v35, v38, v40;
boolean v36, v41;
sun.misc.Unsafe v13, v15, v20, v22, v26, v28, v30, v33, v37, v39;
long v10, v11, v14, v16, v17, v19, v23, v25, v31, v34, v6, v7, v9;
int v1, v21, v24, v3, v4, v5, v8;
char v27, v29;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: byte[];
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = v4 & 7;
v6 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v7 = v6 + v1;
v8 = v3 - v1;
if v4 < 8 goto label03;
v9 = v7 + v5;
v10 = v7 - 8L;
v11 = v10 + v4;
label01:
v12 = v11 cmp v9;
if v12 < 0 goto label03;
v13 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v14 = virtualinvoke v13.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v11);
v15 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v16 = v11 + v8;
v17 = virtualinvoke v15.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v2, v16);
v18 = v14 cmp v17;
if v18 == 0 goto label02;
return 0;
label02:
v11 = v11 - 8L;
goto label01;
label03:
if v5 < 4 goto label04;
v5 = v5 - 4;
v19 = v7 + v5;
v20 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v21 = virtualinvoke v20.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v19);
v22 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v23 = v19 + v8;
v24 = virtualinvoke v22.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v2, v23);
if v21 == v24 goto label04;
return 0;
label04:
v25 = v7 + v8;
if v5 < 2 goto label08;
v26 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v27 = virtualinvoke v26.<sun.misc.Unsafe: char getChar(java.lang.Object,long)>(v0, v7);
v28 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v29 = virtualinvoke v28.<sun.misc.Unsafe: char getChar(java.lang.Object,long)>(v2, v25);
if v27 != v29 goto label06;
if v5 == 2 goto label05;
v30 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v31 = v7 + 2L;
v32 = virtualinvoke v30.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v0, v31);
v33 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v34 = v25 + 2L;
v35 = virtualinvoke v33.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v2, v34);
if v32 != v35 goto label06;
label05:
v36 = 1;
goto label07;
label06:
v36 = 0;
label07:
return v36;
label08:
if v5 == 0 goto label09;
v37 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v38 = virtualinvoke v37.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v0, v7);
v39 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v40 = virtualinvoke v39.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v2, v25);
if v38 != v40 goto label10;
label09:
v41 = 1;
goto label11;
label10:
v41 = 0;
label11:
return v41;
}
static int equalsConstantTime(byte[], int, byte[], int, int)
{
byte[] v0, v2;
byte v13, v20, v27, v35, v38, v41, v42;
sun.misc.Unsafe v14, v16, v21, v23, v29, v31, v37, v39;
long v11, v12, v15, v17, v18, v19, v24, v28, v32, v36, v40, v5, v7, v8, v9;
int v1, v10, v22, v25, v26, v3, v4, v43, v6;
char v30, v33, v34;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: byte[];
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = 0L;
v6 = v4 & 7;
v7 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v8 = v7 + v1;
v9 = v8 + v6;
v10 = v3 - v1;
v11 = v8 - 8L;
v12 = v11 + v4;
label1:
v13 = v12 cmp v9;
if v13 < 0 goto label2;
v14 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v15 = virtualinvoke v14.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v12);
v16 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v17 = v12 + v10;
v18 = virtualinvoke v16.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v2, v17);
v19 = v15 ^ v18;
v5 = v5 | v19;
v12 = v12 - 8L;
goto label1;
label2:
v20 = v6 cmp 4L;
if v20 < 0 goto label3;
v21 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v22 = virtualinvoke v21.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v8);
v23 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v24 = v8 + v10;
v25 = virtualinvoke v23.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v2, v24);
v26 = v22 ^ v25;
v5 = v5 | v26;
v6 = v6 - 4L;
label3:
v27 = v6 cmp 2L;
if v27 < 0 goto label4;
v28 = v9 - v6;
v29 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v30 = virtualinvoke v29.<sun.misc.Unsafe: char getChar(java.lang.Object,long)>(v0, v28);
v31 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v32 = v28 + v10;
v33 = virtualinvoke v31.<sun.misc.Unsafe: char getChar(java.lang.Object,long)>(v2, v32);
v34 = v30 ^ v33;
v5 = v5 | v34;
v6 = v6 - 2L;
label4:
v35 = v6 cmp 1L;
if v35 != 0 goto label5;
v36 = v9 - 1L;
v37 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v38 = virtualinvoke v37.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v0, v36);
v39 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v40 = v36 + v10;
v41 = virtualinvoke v39.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v2, v40);
v42 = v38 ^ v41;
v5 = v5 | v42;
label5:
v43 = staticinvoke <io.netty.util.internal.ConstantTimeUtils: int equalsConstantTime(long,long)>(v5, 0L);
return v43;
}
static boolean isZero(byte[], int, int)
{
sun.misc.Unsafe v10, v13, v16;
byte[] v0;
long v11, v14, v3, v4, v6, v7, v8;
byte v12, v19, v21, v9;
int v1, v15, v18, v2, v5;
boolean v20, v22;
char v17;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
if v2 > 0 goto label01;
return 1;
label01:
v3 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v4 = v3 + v1;
v5 = v2 & 7;
v6 = v4 + v5;
v7 = v4 - 8L;
v8 = v7 + v2;
label02:
v9 = v8 cmp v6;
if v9 < 0 goto label04;
v10 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v11 = virtualinvoke v10.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v8);
v12 = v11 cmp 0L;
if v12 == 0 goto label03;
return 0;
label03:
v8 = v8 - 8L;
goto label02;
label04:
if v5 < 4 goto label05;
v5 = v5 - 4;
v13 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v14 = v4 + v5;
v15 = virtualinvoke v13.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v14);
if v15 == 0 goto label05;
return 0;
label05:
if v5 < 2 goto label09;
v16 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v17 = virtualinvoke v16.<sun.misc.Unsafe: char getChar(java.lang.Object,long)>(v0, v4);
if v17 != 0 goto label07;
if v5 == 2 goto label06;
v18 = v1 + 2;
v19 = v0[v18];
if v19 != 0 goto label07;
label06:
v20 = 1;
goto label08;
label07:
v20 = 0;
label08:
return v20;
label09:
v21 = v0[v1];
if v21 != 0 goto label10;
v22 = 1;
goto label11;
label10:
v22 = 0;
label11:
return v22;
}
static int hashCodeAscii(byte[], int, int)
{
byte[] v0;
byte v10, v21;
boolean v14, v15, v16, v17, v18, v23, v24, v25, v26, v27;
sun.misc.Unsafe v11, v20, v29, v34;
long v12, v4, v5, v7, v8, v9;
short v30;
int v1, v13, v19, v2, v22, v28, v3, v31, v32, v33, v35, v36, v37, v6;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = -1028477387;
v4 = <io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET>;
v5 = v4 + v1;
v6 = v2 & 7;
v7 = v5 + v6;
v8 = v5 - 8L;
v9 = v8 + v2;
label01:
v10 = v9 cmp v7;
if v10 < 0 goto label02;
v11 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v12 = virtualinvoke v11.<sun.misc.Unsafe: long getLong(java.lang.Object,long)>(v0, v9);
v3 = staticinvoke <io.netty.util.internal.PlatformDependent0: int hashCodeAsciiCompute(long,int)>(v12, v3);
v9 = v9 - 8L;
goto label01;
label02:
if v6 != 0 goto label03;
return v3;
label03:
v13 = -862048943;
if v6 == 2 goto label04;
v14 = 1;
goto label05;
label04:
v14 = 0;
label05:
if v6 == 4 goto label06;
v15 = 1;
goto label07;
label06:
v15 = 0;
label07:
v16 = v14 & v15;
if v6 == 6 goto label08;
v17 = 1;
goto label09;
label08:
v17 = 0;
label09:
v18 = v16 & v17;
if v18 == 0 goto label10;
v19 = v3 * -862048943;
v20 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v21 = virtualinvoke v20.<sun.misc.Unsafe: byte getByte(java.lang.Object,long)>(v0, v5);
v22 = staticinvoke <io.netty.util.internal.PlatformDependent0: int hashCodeAsciiSanitize(byte)>(v21);
v3 = v19 + v22;
v13 = 461845907;
v5 = v5 + 1L;
label10:
if v6 == 1 goto label11;
v23 = 1;
goto label12;
label11:
v23 = 0;
label12:
if v6 == 4 goto label13;
v24 = 1;
goto label14;
label13:
v24 = 0;
label14:
v25 = v23 & v24;
if v6 == 5 goto label15;
v26 = 1;
goto label16;
label15:
v26 = 0;
label16:
v27 = v25 & v26;
if v27 == 0 goto label19;
v28 = v3 * v13;
v29 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v30 = virtualinvoke v29.<sun.misc.Unsafe: short getShort(java.lang.Object,long)>(v0, v5);
v31 = staticinvoke <io.netty.util.internal.PlatformDependent0: int hashCodeAsciiSanitize(short)>(v30);
v3 = v28 + v31;
if v13 != -862048943 goto label17;
v32 = 461845907;
goto label18;
label17:
v32 = -862048943;
label18:
v13 = v32;
v5 = v5 + 2L;
label19:
if v6 < 4 goto label20;
v33 = v3 * v13;
v34 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v35 = virtualinvoke v34.<sun.misc.Unsafe: int getInt(java.lang.Object,long)>(v0, v5);
v36 = staticinvoke <io.netty.util.internal.PlatformDependent0: int hashCodeAsciiSanitize(int)>(v35);
v37 = v33 + v36;
return v37;
label20:
return v3;
}
static int hashCodeAsciiCompute(long, int)
{
long v0, v6, v7;
int v1, v2, v3, v4, v5, v8;
v0 := @parameter0: long;
v1 := @parameter1: int;
v2 = v1 * -862048943;
v3 = staticinvoke <io.netty.util.internal.PlatformDependent0: int hashCodeAsciiSanitize(int)>(v0);
v4 = v3 * 461845907;
v5 = v2 + v4;
v6 = v0 & 2242545357458243584L;
v7 = v6 >>> 32;
v8 = v5 + v7;
return v8;
}
static int hashCodeAsciiSanitize(int)
{
int v0, v1;
v0 := @parameter0: int;
v1 = v0 & 522133279;
return v1;
}
static int hashCodeAsciiSanitize(short)
{
short v0, v1;
v0 := @parameter0: short;
v1 = v0 & 7967;
return v1;
}
static int hashCodeAsciiSanitize(byte)
{
byte v0, v1;
v0 := @parameter0: byte;
v1 = v0 & 31;
return v1;
}
static java.lang.ClassLoader getClassLoader(java.lang.Class)
{
java.lang.Class v0;
java.lang.Object v4;
io.netty.util.internal.PlatformDependent0$10 v3;
java.lang.ClassLoader v2;
java.lang.SecurityManager v1;
v0 := @parameter0: java.lang.Class;
v1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v1 != null goto label1;
v2 = virtualinvoke v0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
return v2;
label1:
v3 = new io.netty.util.internal.PlatformDependent0$10;
specialinvoke v3.<io.netty.util.internal.PlatformDependent0$10: void <init>(java.lang.Class)>(v0);
v4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
return v4;
}
static java.lang.ClassLoader getContextClassLoader()
{
java.lang.Thread v1;
io.netty.util.internal.PlatformDependent0$11 v3;
java.lang.Object v4;
java.lang.ClassLoader v2;
java.lang.SecurityManager v0;
v0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v0 != null goto label1;
v1 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v2 = virtualinvoke v1.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
return v2;
label1:
v3 = new io.netty.util.internal.PlatformDependent0$11;
specialinvoke v3.<io.netty.util.internal.PlatformDependent0$11: void <init>()>();
v4 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v3);
return v4;
}
static java.lang.ClassLoader getSystemClassLoader()
{
io.netty.util.internal.PlatformDependent0$12 v2;
java.lang.Object v3;
java.lang.ClassLoader v1;
java.lang.SecurityManager v0;
v0 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v0 != null goto label1;
v1 = staticinvoke <java.lang.ClassLoader: java.lang.ClassLoader getSystemClassLoader()>();
return v1;
label1:
v2 = new io.netty.util.internal.PlatformDependent0$12;
specialinvoke v2.<io.netty.util.internal.PlatformDependent0$12: void <init>()>();
v3 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v2);
return v3;
}
static int addressSize()
{
int v1;
sun.misc.Unsafe v0;
v0 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v1 = virtualinvoke v0.<sun.misc.Unsafe: int addressSize()>();
return v1;
}
static long allocateMemory(long)
{
sun.misc.Unsafe v1;
long v0, v2;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v2 = virtualinvoke v1.<sun.misc.Unsafe: long allocateMemory(long)>(v0);
return v2;
}
static void freeMemory(long)
{
sun.misc.Unsafe v1;
long v0;
v0 := @parameter0: long;
v1 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v1.<sun.misc.Unsafe: void freeMemory(long)>(v0);
return;
}
static long reallocateMemory(long, long)
{
sun.misc.Unsafe v2;
long v0, v1, v3;
v0 := @parameter0: long;
v1 := @parameter1: long;
v2 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v3 = virtualinvoke v2.<sun.misc.Unsafe: long reallocateMemory(long,long)>(v0, v1);
return v3;
}
static boolean isAndroid()
{
boolean v0;
v0 = <io.netty.util.internal.PlatformDependent0: boolean IS_ANDROID>;
return v0;
}
private static boolean isAndroid0()
{
io.netty.util.internal.logging.InternalLogger v3;
java.lang.String v0, v1;
boolean v2;
v0 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: java.lang.String get(java.lang.String)>("java.vm.name");
v1 = "Dalvik";
v2 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v2 == 0 goto label1;
v3 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v3.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("Platform: Android");
label1:
return v2;
}
private static boolean explicitTryReflectionSetAccessible0()
{
int v0;
boolean v1, v2, v3;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion()>();
if v0 < 9 goto label1;
v1 = <io.netty.util.internal.PlatformDependent0: boolean RUNNING_IN_NATIVE_IMAGE>;
if v1 == 0 goto label2;
label1:
v2 = 1;
goto label3;
label2:
v2 = 0;
label3:
v3 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean getBoolean(java.lang.String,boolean)>("io.netty.tryReflectionSetAccessible", v2);
return v3;
}
static boolean isExplicitTryReflectionSetAccessible()
{
boolean v0;
v0 = <io.netty.util.internal.PlatformDependent0: boolean IS_EXPLICIT_TRY_REFLECTION_SET_ACCESSIBLE>;
return v0;
}
static int javaVersion()
{
int v0;
v0 = <io.netty.util.internal.PlatformDependent0: int JAVA_VERSION>;
return v0;
}
private static int javaVersion0()
{
io.netty.util.internal.logging.InternalLogger v2;
int v1;
java.lang.Integer v3;
boolean v0;
v0 = staticinvoke <io.netty.util.internal.PlatformDependent0: boolean isAndroid0()>();
if v0 == 0 goto label1;
v1 = 6;
goto label2;
label1:
v1 = staticinvoke <io.netty.util.internal.PlatformDependent0: int majorVersionFromJavaSpecificationVersion()>();
label2:
v2 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
interfaceinvoke v2.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("Java version: {}", v3);
return v1;
}
static int majorVersionFromJavaSpecificationVersion()
{
int v1;
java.lang.String v0;
v0 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: java.lang.String get(java.lang.String,java.lang.String)>("java.specification.version", "1.6");
v1 = staticinvoke <io.netty.util.internal.PlatformDependent0: int majorVersion(java.lang.String)>(v0);
return v1;
}
static int majorVersion(java.lang.String)
{
java.lang.String[] v1;
java.lang.AssertionError v11;
int[] v3;
int v10, v12, v13, v2, v4, v5, v7, v8;
java.lang.String v0, v6;
boolean v9;
v0 := @parameter0: java.lang.String;
v1 = virtualinvoke v0.<java.lang.String: java.lang.String[] split(java.lang.String)>("\\.");
v2 = lengthof v1;
v3 = newarray (int)[v2];
v4 = 0;
label1:
v5 = lengthof v1;
if v4 >= v5 goto label2;
v6 = v1[v4];
v7 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v6);
v3[v4] = v7;
v4 = v4 + 1;
goto label1;
label2:
v8 = v3[0];
if v8 != 1 goto label4;
v9 = <io.netty.util.internal.PlatformDependent0: boolean $assertionsDisabled>;
if v9 != 0 goto label3;
v10 = v3[1];
if v10 >= 6 goto label3;
v11 = new java.lang.AssertionError;
specialinvoke v11.<java.lang.AssertionError: void <init>()>();
throw v11;
label3:
v12 = v3[1];
return v12;
label4:
v13 = v3[0];
return v13;
}
private void <init>()
{
io.netty.util.internal.PlatformDependent0 v0;
v0 := @this: io.netty.util.internal.PlatformDependent0;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.lang.Integer v109, v60;
byte v49, v70, v73;
java.lang.Long v51, v59;
io.netty.util.internal.PlatformDependent0$3 v31;
io.netty.util.internal.PlatformDependent0$4 v39;
io.netty.util.internal.PlatformDependent0$5 v54;
io.netty.util.internal.PlatformDependent0$6 v86;
io.netty.util.internal.PlatformDependent0$1 v14;
io.netty.util.internal.PlatformDependent0$2 v23;
io.netty.util.internal.PlatformDependent0$7 v101;
io.netty.util.internal.PlatformDependent0$8 v105;
io.netty.util.internal.PlatformDependent0$9 v125;
io.netty.util.internal.logging.InternalLogger v117, v119, v120, v122, v123, v127, v17, v19, v20, v22, v25, v26, v28, v29, v3, v33, v34, v36, v37, v42, v43, v45, v46, v50, v61, v65, v67, v68, v90, v93, v95, v97;
java.lang.Object[] v107, v58;
long v53, v75;
java.lang.reflect.Constructor v128;
java.lang.InstantiationException v62;
java.lang.reflect.Method v9;
int v100, v112, v124, v48, v5, v77, v79, v81, v83, v85;
java.lang.Boolean v91, v96, v98;
java.lang.Class v0, v108;
java.lang.Object v10, v102, v104, v110, v126, v15, v24, v32, v40, v55, v87;
java.lang.reflect.InvocationTargetException v115, v64;
java.lang.Throwable v12, v4, v72;
sun.misc.Unsafe v57, v71, v74, v76, v78, v80, v82, v84;
java.lang.AssertionError v113;
java.lang.String v121, v129, v21, v30, v38, v47, v69, v92, v99;
java.lang.UnsupportedOperationException v52;
java.nio.ByteBuffer v13;
boolean v1, v103, v106, v11, v111, v116, v118, v16, v18, v2, v27, v35, v41, v44, v56, v6, v66, v7, v8, v88, v89, v94;
java.lang.IllegalAccessException v114, v63;
v0 = class "Lio/netty/util/internal/PlatformDependent0;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label01;
v2 = 1;
goto label02;
label01:
v2 = 0;
label02:
<io.netty.util.internal.PlatformDependent0: boolean $assertionsDisabled> = v2;
v3 = staticinvoke <io.netty.util.internal.logging.InternalLoggerFactory: io.netty.util.internal.logging.InternalLogger getInstance(java.lang.Class)>(class "Lio/netty/util/internal/PlatformDependent0;");
<io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger> = v3;
v4 = staticinvoke <io.netty.util.internal.PlatformDependent0: java.lang.Throwable explicitNoUnsafeCause0()>();
<io.netty.util.internal.PlatformDependent0: java.lang.Throwable EXPLICIT_NO_UNSAFE_CAUSE> = v4;
v5 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion0()>();
<io.netty.util.internal.PlatformDependent0: int JAVA_VERSION> = v5;
v6 = staticinvoke <io.netty.util.internal.PlatformDependent0: boolean isAndroid0()>();
<io.netty.util.internal.PlatformDependent0: boolean IS_ANDROID> = v6;
v7 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: boolean contains(java.lang.String)>("org.graalvm.nativeimage.imagecode");
<io.netty.util.internal.PlatformDependent0: boolean RUNNING_IN_NATIVE_IMAGE> = v7;
v8 = staticinvoke <io.netty.util.internal.PlatformDependent0: boolean explicitTryReflectionSetAccessible0()>();
<io.netty.util.internal.PlatformDependent0: boolean IS_EXPLICIT_TRY_REFLECTION_SET_ACCESSIBLE> = v8;
v9 = null;
v10 = null;
v11 = 0;
v12 = <io.netty.util.internal.PlatformDependent0: java.lang.Throwable EXPLICIT_NO_UNSAFE_CAUSE>;
if v12 == null goto label03;
v13 = null;
v10 = null;
goto label17;
label03:
v13 = staticinvoke <java.nio.ByteBuffer: java.nio.ByteBuffer allocateDirect(int)>(1);
v14 = new io.netty.util.internal.PlatformDependent0$1;
specialinvoke v14.<io.netty.util.internal.PlatformDependent0$1: void <init>()>();
v15 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v14);
v16 = v15 instanceof java.lang.Throwable;
if v16 == 0 goto label05;
v17 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v18 = interfaceinvoke v17.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v18 == 0 goto label04;
v19 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v19.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("sun.misc.Unsafe.theUnsafe: unavailable", v15);
goto label06;
label04:
v20 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v21 = virtualinvoke v15.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v20.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("sun.misc.Unsafe.theUnsafe: unavailable: {}", v21);
goto label06;
label05:
v22 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v22.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("sun.misc.Unsafe.theUnsafe: available");
label06:
if v15 == null goto label17;
v23 = new io.netty.util.internal.PlatformDependent0$2;
specialinvoke v23.<io.netty.util.internal.PlatformDependent0$2: void <init>(sun.misc.Unsafe)>(v15);
v24 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v23);
if v24 != null goto label07;
v25 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v25.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("sun.misc.Unsafe.copyMemory: available");
goto label09;
label07:
v15 = null;
v26 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v27 = interfaceinvoke v26.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v27 == 0 goto label08;
v28 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v28.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("sun.misc.Unsafe.copyMemory: unavailable", v24);
goto label09;
label08:
v29 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v30 = virtualinvoke v24.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v29.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("sun.misc.Unsafe.copyMemory: unavailable: {}", v30);
label09:
if v15 == null goto label17;
v31 = new io.netty.util.internal.PlatformDependent0$3;
specialinvoke v31.<io.netty.util.internal.PlatformDependent0$3: void <init>(sun.misc.Unsafe)>(v15);
v32 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v31);
if v32 != null goto label10;
v33 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v33.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("sun.misc.Unsafe.storeFence: available");
v11 = 1;
goto label12;
label10:
v11 = 0;
v34 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v35 = interfaceinvoke v34.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v35 == 0 goto label11;
v36 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v36.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("sun.misc.Unsafe.storeFence: unavailable", v32);
goto label12;
label11:
v37 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v38 = virtualinvoke v32.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v37.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("sun.misc.Unsafe.storeFence: unavailable: {}", v38);
label12:
if v15 == null goto label17;
v39 = new io.netty.util.internal.PlatformDependent0$4;
specialinvoke v39.<io.netty.util.internal.PlatformDependent0$4: void <init>(sun.misc.Unsafe,java.nio.ByteBuffer)>(v15, v13);
v40 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v39);
v41 = v40 instanceof java.lang.reflect.Field;
if v41 == 0 goto label13;
v42 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v42.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("java.nio.Buffer.address: available");
goto label16;
label13:
v43 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v44 = interfaceinvoke v43.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v44 == 0 goto label14;
v45 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v45.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("java.nio.Buffer.address: unavailable", v40);
goto label15;
label14:
v46 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v47 = virtualinvoke v40.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v46.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("java.nio.Buffer.address: unavailable: {}", v47);
label15:
v15 = null;
label16:
if v15 == null goto label17;
v48 = virtualinvoke v15.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[B");
v49 = v48 cmp 1L;
if v49 == 0 goto label17;
v50 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v51 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v48);
interfaceinvoke v50.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("unsafe.arrayIndexScale is {} (expected: 1). Not using unsafe.", v51);
v52 = new java.lang.UnsupportedOperationException;
specialinvoke v52.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unexpected unsafe.arrayIndexScale");
v15 = null;
label17:
<io.netty.util.internal.PlatformDependent0: java.lang.Throwable UNSAFE_UNAVAILABILITY_CAUSE> = v15;
<io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE> = v15;
if v15 != null goto label18;
<io.netty.util.internal.PlatformDependent0: long ADDRESS_FIELD_OFFSET> = -1L;
<io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET> = -1L;
<io.netty.util.internal.PlatformDependent0: long LONG_ARRAY_BASE_OFFSET> = -1L;
<io.netty.util.internal.PlatformDependent0: long LONG_ARRAY_INDEX_SCALE> = -1L;
<io.netty.util.internal.PlatformDependent0: long INT_ARRAY_BASE_OFFSET> = -1L;
<io.netty.util.internal.PlatformDependent0: long INT_ARRAY_INDEX_SCALE> = -1L;
<io.netty.util.internal.PlatformDependent0: boolean UNALIGNED> = 0;
<io.netty.util.internal.PlatformDependent0: java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR> = null;
<io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALLOCATE_ARRAY_METHOD> = null;
<io.netty.util.internal.PlatformDependent0: boolean STORE_FENCE_AVAILABLE> = 0;
goto label45;
label18:
v53 = -1L;
label19:
v54 = new io.netty.util.internal.PlatformDependent0$5;
specialinvoke v54.<io.netty.util.internal.PlatformDependent0$5: void <init>(java.nio.ByteBuffer)>(v13);
v55 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v54);
v56 = v55 instanceof java.lang.reflect.Constructor;
if v56 == 0 goto label25;
v57 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v53 = virtualinvoke v57.<sun.misc.Unsafe: long allocateMemory(long)>(1L);
label20:
v58 = newarray (java.lang.Object)[2];
v59 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v53);
v58[0] = v59;
v60 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(1);
v58[1] = v60;
virtualinvoke v55.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v58);
v61 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v61.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("direct buffer constructor: available");
label21:
goto label28;
label22:
v62 := @caughtexception;
v55 = null;
goto label28;
label23:
v63 := @caughtexception;
v55 = null;
goto label28;
label24:
v64 := @caughtexception;
v55 = null;
goto label28;
label25:
v65 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v66 = interfaceinvoke v65.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v66 == 0 goto label26;
v67 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v67.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("direct buffer constructor: unavailable", v55);
goto label27;
label26:
v68 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v69 = virtualinvoke v55.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v68.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("direct buffer constructor: unavailable: {}", v69);
label27:
v55 = null;
label28:
v70 = v53 cmp -1L;
if v70 == 0 goto label31;
v71 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v71.<sun.misc.Unsafe: void freeMemory(long)>(v53);
goto label31;
label29:
v72 := @caughtexception;
v73 = v53 cmp -1L;
if v73 == 0 goto label30;
v74 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
virtualinvoke v74.<sun.misc.Unsafe: void freeMemory(long)>(v53);
label30:
throw v72;
label31:
<io.netty.util.internal.PlatformDependent0: java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR> = v55;
v75 = staticinvoke <io.netty.util.internal.PlatformDependent0: long objectFieldOffset(java.lang.reflect.Field)>(v40);
<io.netty.util.internal.PlatformDependent0: long ADDRESS_FIELD_OFFSET> = v75;
v76 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v77 = virtualinvoke v76.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>(class "[B");
<io.netty.util.internal.PlatformDependent0: long BYTE_ARRAY_BASE_OFFSET> = v77;
v78 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v79 = virtualinvoke v78.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>(class "[I");
<io.netty.util.internal.PlatformDependent0: long INT_ARRAY_BASE_OFFSET> = v79;
v80 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v81 = virtualinvoke v80.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[I");
<io.netty.util.internal.PlatformDependent0: long INT_ARRAY_INDEX_SCALE> = v81;
v82 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v83 = virtualinvoke v82.<sun.misc.Unsafe: int arrayBaseOffset(java.lang.Class)>(class "[J");
<io.netty.util.internal.PlatformDependent0: long LONG_ARRAY_BASE_OFFSET> = v83;
v84 = <io.netty.util.internal.PlatformDependent0: sun.misc.Unsafe UNSAFE>;
v85 = virtualinvoke v84.<sun.misc.Unsafe: int arrayIndexScale(java.lang.Class)>(class "[J");
<io.netty.util.internal.PlatformDependent0: long LONG_ARRAY_INDEX_SCALE> = v85;
v86 = new io.netty.util.internal.PlatformDependent0$6;
specialinvoke v86.<io.netty.util.internal.PlatformDependent0$6: void <init>()>();
v87 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v86);
v88 = v87 instanceof java.lang.Boolean;
if v88 == 0 goto label32;
v89 = virtualinvoke v87.<java.lang.Boolean: boolean booleanValue()>();
v90 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v91 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v89);
interfaceinvoke v90.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("java.nio.Bits.unaligned: available, {}", v91);
goto label34;
label32:
v92 = staticinvoke <io.netty.util.internal.SystemPropertyUtil: java.lang.String get(java.lang.String,java.lang.String)>("os.arch", "");
v89 = virtualinvoke v92.<java.lang.String: boolean matches(java.lang.String)>("^(i[3-6]86|x86(_64)?|x64|amd64)$");
v93 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v94 = interfaceinvoke v93.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v94 == 0 goto label33;
v95 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v96 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v89);
interfaceinvoke v95.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("java.nio.Bits.unaligned: unavailable, {}", v96, v87);
goto label34;
label33:
v97 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v98 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v89);
v99 = virtualinvoke v87.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v97.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object,java.lang.Object)>("java.nio.Bits.unaligned: unavailable, {}, {}", v98, v99);
label34:
<io.netty.util.internal.PlatformDependent0: boolean UNALIGNED> = v89;
v100 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion()>();
if v100 < 9 goto label43;
v101 = new io.netty.util.internal.PlatformDependent0$7;
specialinvoke v101.<io.netty.util.internal.PlatformDependent0$7: void <init>()>();
v102 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v101);
v103 = v102 instanceof java.lang.Throwable;
if v103 != 0 goto label40;
v10 = v102;
v104 = v102;
v105 = new io.netty.util.internal.PlatformDependent0$8;
specialinvoke v105.<io.netty.util.internal.PlatformDependent0$8: void <init>(java.lang.Object)>(v102);
v102 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v105);
v106 = v102 instanceof java.lang.reflect.Method;
if v106 == 0 goto label40;
label35:
v107 = newarray (java.lang.Object)[2];
v108 = <java.lang.Byte: java.lang.Class TYPE>;
v107[0] = v108;
v109 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(8);
v107[1] = v109;
v110 = virtualinvoke v102.<java.lang.reflect.Method: java.lang.Object invoke(java.lang.Object,java.lang.Object[])>(v104, v107);
v111 = <io.netty.util.internal.PlatformDependent0: boolean $assertionsDisabled>;
if v111 != 0 goto label36;
v112 = lengthof v110;
if v112 == 8 goto label36;
v113 = new java.lang.AssertionError;
specialinvoke v113.<java.lang.AssertionError: void <init>()>();
throw v113;
label36:
v9 = v102;
label37:
goto label40;
label38:
v114 := @caughtexception;
v102 = v114;
goto label40;
label39:
v115 := @caughtexception;
v102 = v115;
label40:
v116 = v102 instanceof java.lang.Throwable;
if v116 == 0 goto label42;
v117 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v118 = interfaceinvoke v117.<io.netty.util.internal.logging.InternalLogger: boolean isTraceEnabled()>();
if v118 == 0 goto label41;
v119 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v119.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Throwable)>("jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable", v102);
goto label44;
label41:
v120 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v121 = virtualinvoke v102.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v120.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable: {}", v121);
goto label44;
label42:
v122 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v122.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("jdk.internal.misc.Unsafe.allocateUninitializedArray(int): available");
goto label44;
label43:
v123 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
interfaceinvoke v123.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String)>("jdk.internal.misc.Unsafe.allocateUninitializedArray(int): unavailable prior to Java9");
label44:
<io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALLOCATE_ARRAY_METHOD> = v9;
<io.netty.util.internal.PlatformDependent0: boolean STORE_FENCE_AVAILABLE> = v11;
label45:
v124 = staticinvoke <io.netty.util.internal.PlatformDependent0: int javaVersion()>();
if v124 <= 9 goto label46;
v125 = new io.netty.util.internal.PlatformDependent0$9;
specialinvoke v125.<io.netty.util.internal.PlatformDependent0$9: void <init>()>();
v126 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v125);
<io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALIGN_SLICE> = v126;
goto label47;
label46:
<io.netty.util.internal.PlatformDependent0: java.lang.reflect.Method ALIGN_SLICE> = null;
label47:
<io.netty.util.internal.PlatformDependent0: java.lang.Object INTERNAL_UNSAFE> = v10;
v127 = <io.netty.util.internal.PlatformDependent0: io.netty.util.internal.logging.InternalLogger logger>;
v128 = <io.netty.util.internal.PlatformDependent0: java.lang.reflect.Constructor DIRECT_BUFFER_CONSTRUCTOR>;
if v128 == null goto label48;
v129 = "available";
goto label49;
label48:
v129 = "unavailable";
label49:
interfaceinvoke v127.<io.netty.util.internal.logging.InternalLogger: void debug(java.lang.String,java.lang.Object)>("java.nio.DirectByteBuffer.<init>(long, int): {}", v129);
return;
catch java.lang.InstantiationException from label20 to label21 with label22;
catch java.lang.IllegalAccessException from label20 to label21 with label23;
catch java.lang.reflect.InvocationTargetException from label20 to label21 with label24;
catch java.lang.Throwable from label19 to label28 with label29;
catch java.lang.IllegalAccessException from label35 to label37 with label38;
catch java.lang.reflect.InvocationTargetException from label35 to label37 with label39;
}
}