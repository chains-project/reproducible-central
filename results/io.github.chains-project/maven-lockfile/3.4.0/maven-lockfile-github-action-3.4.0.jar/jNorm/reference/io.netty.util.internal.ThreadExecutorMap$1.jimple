class io.netty.util.internal.ThreadExecutorMap$1 extends java.lang.Object implements java.util.concurrent.Executor
{
final java.util.concurrent.Executor val$executor;
final io.netty.util.concurrent.EventExecutor val$eventExecutor;
void <init>(java.util.concurrent.Executor, io.netty.util.concurrent.EventExecutor)
{
io.netty.util.concurrent.EventExecutor v2;
io.netty.util.internal.ThreadExecutorMap$1 v0;
java.util.concurrent.Executor v1;
v0 := @this: io.netty.util.internal.ThreadExecutorMap$1;
v1 := @parameter0: java.util.concurrent.Executor;
v2 := @parameter1: io.netty.util.concurrent.EventExecutor;
v0.<io.netty.util.internal.ThreadExecutorMap$1: java.util.concurrent.Executor val$executor> = v1;
v0.<io.netty.util.internal.ThreadExecutorMap$1: io.netty.util.concurrent.EventExecutor val$eventExecutor> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void execute(java.lang.Runnable)
{
io.netty.util.concurrent.EventExecutor v3;
java.util.concurrent.Executor v2;
io.netty.util.internal.ThreadExecutorMap$1 v0;
java.lang.Runnable v1, v4;
v0 := @this: io.netty.util.internal.ThreadExecutorMap$1;
v1 := @parameter0: java.lang.Runnable;
v2 = v0.<io.netty.util.internal.ThreadExecutorMap$1: java.util.concurrent.Executor val$executor>;
v3 = v0.<io.netty.util.internal.ThreadExecutorMap$1: io.netty.util.concurrent.EventExecutor val$eventExecutor>;
v4 = staticinvoke <io.netty.util.internal.ThreadExecutorMap: java.lang.Runnable apply(java.lang.Runnable,io.netty.util.concurrent.EventExecutor)>(v1, v3);
interfaceinvoke v2.<java.util.concurrent.Executor: void execute(java.lang.Runnable)>(v4);
return;
}
}