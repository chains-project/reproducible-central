class io.netty.util.internal.ThreadExecutorMap$3 extends java.lang.Object implements java.util.concurrent.ThreadFactory
{
final java.util.concurrent.ThreadFactory val$threadFactory;
final io.netty.util.concurrent.EventExecutor val$eventExecutor;
void <init>(java.util.concurrent.ThreadFactory, io.netty.util.concurrent.EventExecutor)
{
io.netty.util.concurrent.EventExecutor v2;
java.util.concurrent.ThreadFactory v1;
io.netty.util.internal.ThreadExecutorMap$3 v0;
v0 := @this: io.netty.util.internal.ThreadExecutorMap$3;
v1 := @parameter0: java.util.concurrent.ThreadFactory;
v2 := @parameter1: io.netty.util.concurrent.EventExecutor;
v0.<io.netty.util.internal.ThreadExecutorMap$3: java.util.concurrent.ThreadFactory val$threadFactory> = v1;
v0.<io.netty.util.internal.ThreadExecutorMap$3: io.netty.util.concurrent.EventExecutor val$eventExecutor> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Thread newThread(java.lang.Runnable)
{
io.netty.util.concurrent.EventExecutor v3;
java.lang.Thread v5;
java.util.concurrent.ThreadFactory v2;
io.netty.util.internal.ThreadExecutorMap$3 v0;
java.lang.Runnable v1, v4;
v0 := @this: io.netty.util.internal.ThreadExecutorMap$3;
v1 := @parameter0: java.lang.Runnable;
v2 = v0.<io.netty.util.internal.ThreadExecutorMap$3: java.util.concurrent.ThreadFactory val$threadFactory>;
v3 = v0.<io.netty.util.internal.ThreadExecutorMap$3: io.netty.util.concurrent.EventExecutor val$eventExecutor>;
v4 = staticinvoke <io.netty.util.internal.ThreadExecutorMap: java.lang.Runnable apply(java.lang.Runnable,io.netty.util.concurrent.EventExecutor)>(v1, v3);
v5 = interfaceinvoke v2.<java.util.concurrent.ThreadFactory: java.lang.Thread newThread(java.lang.Runnable)>(v4);
return v5;
}
}