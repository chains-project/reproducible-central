class io.netty.util.internal.logging.CommonsLogger extends io.netty.util.internal.logging.AbstractInternalLogger
{
private static final long serialVersionUID;
private final transient org.apache.commons.logging.Log logger;
void <init>(org.apache.commons.logging.Log, java.lang.String)
{
java.lang.Object v3;
org.apache.commons.logging.Log v1;
java.lang.String v2;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: org.apache.commons.logging.Log;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<io.netty.util.internal.logging.AbstractInternalLogger: void <init>(java.lang.String)>(v2);
v3 = staticinvoke <io.netty.util.internal.ObjectUtil: java.lang.Object checkNotNull(java.lang.Object,java.lang.String)>(v1, "logger");
v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger> = v3;
return;
}
public boolean isTraceEnabled()
{
org.apache.commons.logging.Log v1;
io.netty.util.internal.logging.CommonsLogger v0;
boolean v2;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v2 = interfaceinvoke v1.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
return v2;
}
public void trace(java.lang.String)
{
org.apache.commons.logging.Log v2;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v2.<org.apache.commons.logging.Log: void trace(java.lang.Object)>(v1);
return;
}
public void trace(java.lang.String, java.lang.Object)
{
java.lang.Throwable v8;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object)>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void trace(java.lang.String, java.lang.Object, java.lang.Object)
{
java.lang.Throwable v9;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2, v3;
org.apache.commons.logging.Log v4, v7;
java.lang.String v1, v8;
io.netty.util.internal.logging.FormattingTuple v6;
boolean v5;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v5 = interfaceinvoke v4.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v7 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v8 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v9 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v7.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>(v8, v9);
label1:
return;
}
public transient void trace(java.lang.String, java.lang.Object[])
{
java.lang.Throwable v8;
java.lang.Object[] v2;
io.netty.util.internal.logging.CommonsLogger v0;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isTraceEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void trace(java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v2;
org.apache.commons.logging.Log v3;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v3.<org.apache.commons.logging.Log: void trace(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public boolean isDebugEnabled()
{
org.apache.commons.logging.Log v1;
io.netty.util.internal.logging.CommonsLogger v0;
boolean v2;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v2 = interfaceinvoke v1.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
return v2;
}
public void debug(java.lang.String)
{
org.apache.commons.logging.Log v2;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v2.<org.apache.commons.logging.Log: void debug(java.lang.Object)>(v1);
return;
}
public void debug(java.lang.String, java.lang.Object)
{
java.lang.Throwable v8;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object)>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void debug(java.lang.String, java.lang.Object, java.lang.Object)
{
java.lang.Throwable v9;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2, v3;
org.apache.commons.logging.Log v4, v7;
java.lang.String v1, v8;
io.netty.util.internal.logging.FormattingTuple v6;
boolean v5;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v5 = interfaceinvoke v4.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v7 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v8 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v9 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v7.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(v8, v9);
label1:
return;
}
public transient void debug(java.lang.String, java.lang.Object[])
{
java.lang.Throwable v8;
java.lang.Object[] v2;
io.netty.util.internal.logging.CommonsLogger v0;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isDebugEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void debug(java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v2;
org.apache.commons.logging.Log v3;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v3.<org.apache.commons.logging.Log: void debug(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public boolean isInfoEnabled()
{
org.apache.commons.logging.Log v1;
io.netty.util.internal.logging.CommonsLogger v0;
boolean v2;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v2 = interfaceinvoke v1.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
return v2;
}
public void info(java.lang.String)
{
org.apache.commons.logging.Log v2;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v2.<org.apache.commons.logging.Log: void info(java.lang.Object)>(v1);
return;
}
public void info(java.lang.String, java.lang.Object)
{
java.lang.Throwable v8;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object)>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void info(java.lang.String, java.lang.Object, java.lang.Object)
{
java.lang.Throwable v9;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2, v3;
org.apache.commons.logging.Log v4, v7;
java.lang.String v1, v8;
io.netty.util.internal.logging.FormattingTuple v6;
boolean v5;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v5 = interfaceinvoke v4.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v7 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v8 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v9 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v7.<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>(v8, v9);
label1:
return;
}
public transient void info(java.lang.String, java.lang.Object[])
{
java.lang.Throwable v8;
java.lang.Object[] v2;
io.netty.util.internal.logging.CommonsLogger v0;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isInfoEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void info(java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v2;
org.apache.commons.logging.Log v3;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v3.<org.apache.commons.logging.Log: void info(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public boolean isWarnEnabled()
{
org.apache.commons.logging.Log v1;
io.netty.util.internal.logging.CommonsLogger v0;
boolean v2;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v2 = interfaceinvoke v1.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();
return v2;
}
public void warn(java.lang.String)
{
org.apache.commons.logging.Log v2;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v2.<org.apache.commons.logging.Log: void warn(java.lang.Object)>(v1);
return;
}
public void warn(java.lang.String, java.lang.Object)
{
java.lang.Throwable v8;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object)>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void warn(java.lang.String, java.lang.Object, java.lang.Object)
{
java.lang.Throwable v9;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2, v3;
org.apache.commons.logging.Log v4, v7;
java.lang.String v1, v8;
io.netty.util.internal.logging.FormattingTuple v6;
boolean v5;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v5 = interfaceinvoke v4.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v7 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v8 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v9 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v7.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>(v8, v9);
label1:
return;
}
public transient void warn(java.lang.String, java.lang.Object[])
{
java.lang.Throwable v8;
java.lang.Object[] v2;
io.netty.util.internal.logging.CommonsLogger v0;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isWarnEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void warn(java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v2;
org.apache.commons.logging.Log v3;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v3.<org.apache.commons.logging.Log: void warn(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
public boolean isErrorEnabled()
{
org.apache.commons.logging.Log v1;
io.netty.util.internal.logging.CommonsLogger v0;
boolean v2;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v2 = interfaceinvoke v1.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();
return v2;
}
public void error(java.lang.String)
{
org.apache.commons.logging.Log v2;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v2.<org.apache.commons.logging.Log: void error(java.lang.Object)>(v1);
return;
}
public void error(java.lang.String, java.lang.Object)
{
java.lang.Throwable v8;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object)>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void error(java.lang.String, java.lang.Object, java.lang.Object)
{
java.lang.Throwable v9;
io.netty.util.internal.logging.CommonsLogger v0;
java.lang.Object v2, v3;
org.apache.commons.logging.Log v4, v7;
java.lang.String v1, v8;
io.netty.util.internal.logging.FormattingTuple v6;
boolean v5;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v5 = interfaceinvoke v4.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();
if v5 == 0 goto label1;
v6 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple format(java.lang.String,java.lang.Object,java.lang.Object)>(v1, v2, v3);
v7 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v8 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v9 = virtualinvoke v6.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v7.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>(v8, v9);
label1:
return;
}
public transient void error(java.lang.String, java.lang.Object[])
{
java.lang.Throwable v8;
java.lang.Object[] v2;
io.netty.util.internal.logging.CommonsLogger v0;
org.apache.commons.logging.Log v3, v6;
java.lang.String v1, v7;
io.netty.util.internal.logging.FormattingTuple v5;
boolean v4;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object[];
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v4 = interfaceinvoke v3.<org.apache.commons.logging.Log: boolean isErrorEnabled()>();
if v4 == 0 goto label1;
v5 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v1, v2);
v6 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
v7 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.String getMessage()>();
v8 = virtualinvoke v5.<io.netty.util.internal.logging.FormattingTuple: java.lang.Throwable getThrowable()>();
interfaceinvoke v6.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>(v7, v8);
label1:
return;
}
public void error(java.lang.String, java.lang.Throwable)
{
java.lang.Throwable v2;
org.apache.commons.logging.Log v3;
java.lang.String v1;
io.netty.util.internal.logging.CommonsLogger v0;
v0 := @this: io.netty.util.internal.logging.CommonsLogger;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.netty.util.internal.logging.CommonsLogger: org.apache.commons.logging.Log logger>;
interfaceinvoke v3.<org.apache.commons.logging.Log: void error(java.lang.Object,java.lang.Throwable)>(v1, v2);
return;
}
}