public final class io.netty.util.internal.logging.MessageFormatter extends java.lang.Object
{
private static final java.lang.String DELIM_STR;
private static final char ESCAPE_CHAR;
public static io.netty.util.internal.logging.FormattingTuple format(java.lang.String, java.lang.Object)
{
java.lang.Object[] v2;
java.lang.Object v1;
java.lang.String v0;
io.netty.util.internal.logging.FormattingTuple v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 = newarray (java.lang.Object)[1];
v2[0] = v1;
v3 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v0, v2);
return v3;
}
public static io.netty.util.internal.logging.FormattingTuple format(java.lang.String, java.lang.Object, java.lang.Object)
{
java.lang.Object[] v3;
java.lang.Object v1, v2;
java.lang.String v0;
io.netty.util.internal.logging.FormattingTuple v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.lang.Object;
v3 = newarray (java.lang.Object)[2];
v3[0] = v1;
v3[1] = v2;
v4 = staticinvoke <io.netty.util.internal.logging.MessageFormatter: io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String,java.lang.Object[])>(v0, v3);
return v4;
}
public static io.netty.util.internal.logging.FormattingTuple arrayFormat(java.lang.String, java.lang.Object[])
{
boolean v20, v21, v25, v7;
java.lang.StringBuilder v13;
java.lang.Throwable v31, v8;
java.lang.Object[] v1;
int v10, v11, v14, v15, v16, v17, v18, v2, v22, v23, v27, v28, v4, v5;
java.lang.String v0, v30;
io.netty.util.internal.logging.FormattingTuple v12, v29, v3, v9;
char v19, v24;
java.lang.Object v26, v6;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
if v1 == null goto label01;
v2 = lengthof v1;
if v2 != 0 goto label02;
label01:
v3 = new io.netty.util.internal.logging.FormattingTuple;
specialinvoke v3.<io.netty.util.internal.logging.FormattingTuple: void <init>(java.lang.String,java.lang.Throwable)>(v0, null);
return v3;
label02:
v4 = lengthof v1;
v5 = v4 - 1;
v6 = v1[v5];
v7 = v6 instanceof java.lang.Throwable;
if v7 != 0 goto label03;
v6 = null;
label03:
v8 = v6;
if v0 != null goto label04;
v9 = new io.netty.util.internal.logging.FormattingTuple;
specialinvoke v9.<io.netty.util.internal.logging.FormattingTuple: void <init>(java.lang.String,java.lang.Throwable)>(null, v6);
return v9;
label04:
v10 = virtualinvoke v0.<java.lang.String: int indexOf(java.lang.String)>("{}");
v11 = (int) -1;
if v10 != v11 goto label05;
v12 = new io.netty.util.internal.logging.FormattingTuple;
specialinvoke v12.<io.netty.util.internal.logging.FormattingTuple: void <init>(java.lang.String,java.lang.Throwable)>(v0, v6);
return v12;
label05:
v13 = new java.lang.StringBuilder;
v14 = virtualinvoke v0.<java.lang.String: int length()>();
v15 = v14 + 50;
specialinvoke v13.<java.lang.StringBuilder: void <init>(int)>(v15);
v16 = 0;
v17 = 0;
label06:
if v10 == 0 goto label07;
v18 = v10 - 1;
v19 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v18);
if v19 == 92 goto label08;
label07:
v20 = 1;
goto label09;
label08:
v20 = 0;
label09:
v21 = v20;
if v20 == 0 goto label10;
virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v0, v16, v10);
goto label13;
label10:
v22 = v10 - 1;
virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v0, v16, v22);
if v10 < 2 goto label11;
v23 = v10 - 2;
v24 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v23);
if v24 != 92 goto label11;
v25 = 1;
goto label12;
label11:
v25 = 0;
label12:
v21 = v25;
label13:
v16 = v10 + 2;
if v21 == 0 goto label14;
v26 = v1[v17];
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set)>(v13, v26, null);
v17 = v17 + 1;
if v17 <= v5 goto label15;
goto label16;
label14:
virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{}");
label15:
v10 = virtualinvoke v0.<java.lang.String: int indexOf(java.lang.String,int)>("{}", v16);
v27 = (int) -1;
if v10 != v27 goto label06;
label16:
v28 = virtualinvoke v0.<java.lang.String: int length()>();
virtualinvoke v13.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v0, v16, v28);
v29 = new io.netty.util.internal.logging.FormattingTuple;
v30 = virtualinvoke v13.<java.lang.StringBuilder: java.lang.String toString()>();
if v17 > v5 goto label17;
v31 = v8;
goto label18;
label17:
v31 = null;
label18:
specialinvoke v29.<io.netty.util.internal.logging.FormattingTuple: void <init>(java.lang.String,java.lang.Throwable)>(v30, v31);
return v29;
}
private static void deeplyAppendParameter(java.lang.StringBuilder, java.lang.Object, java.util.Set)
{
java.util.Set v2;
long v7;
int v8;
float v10;
java.lang.Class v3, v5;
java.lang.Object v1;
java.lang.StringBuilder v0;
boolean v4, v6;
double v9;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.util.Set;
if v1 != null goto label01;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("null");
return;
label01:
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Class: boolean isArray()>();
if v4 != 0 goto label08;
v5 = class "Ljava/lang/Number;";
v6 = virtualinvoke v5.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v3);
if v6 == 0 goto label07;
if v3 != class "Ljava/lang/Long;" goto label02;
v7 = virtualinvoke v1.<java.lang.Long: long longValue()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v7);
goto label18;
label02:
if v3 == class "Ljava/lang/Integer;" goto label03;
if v3 == class "Ljava/lang/Short;" goto label03;
if v3 != class "Ljava/lang/Byte;" goto label04;
label03:
v8 = virtualinvoke v1.<java.lang.Number: int intValue()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v8);
goto label18;
label04:
if v3 != class "Ljava/lang/Double;" goto label05;
v9 = virtualinvoke v1.<java.lang.Double: double doubleValue()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(v9);
goto label18;
label05:
if v3 != class "Ljava/lang/Float;" goto label06;
v10 = virtualinvoke v1.<java.lang.Float: float floatValue()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(v10);
goto label18;
label06:
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>(v0, v1);
goto label18;
label07:
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void safeObjectAppend(java.lang.StringBuilder,java.lang.Object)>(v0, v1);
goto label18;
label08:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(91);
if v3 != class "[Z" goto label09;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void booleanArrayAppend(java.lang.StringBuilder,boolean[])>(v0, v1);
goto label17;
label09:
if v3 != class "[B" goto label10;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void byteArrayAppend(java.lang.StringBuilder,byte[])>(v0, v1);
goto label17;
label10:
if v3 != class "[C" goto label11;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void charArrayAppend(java.lang.StringBuilder,char[])>(v0, v1);
goto label17;
label11:
if v3 != class "[S" goto label12;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void shortArrayAppend(java.lang.StringBuilder,short[])>(v0, v1);
goto label17;
label12:
if v3 != class "[I" goto label13;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void intArrayAppend(java.lang.StringBuilder,int[])>(v0, v1);
goto label17;
label13:
if v3 != class "[J" goto label14;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void longArrayAppend(java.lang.StringBuilder,long[])>(v0, v1);
goto label17;
label14:
if v3 != class "[F" goto label15;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void floatArrayAppend(java.lang.StringBuilder,float[])>(v0, v1);
goto label17;
label15:
if v3 != class "[D" goto label16;
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void doubleArrayAppend(java.lang.StringBuilder,double[])>(v0, v1);
goto label17;
label16:
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void objectArrayAppend(java.lang.StringBuilder,java.lang.Object[],java.util.Set)>(v0, v1, v2);
label17:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(93);
label18:
return;
}
private static void safeObjectAppend(java.lang.StringBuilder, java.lang.Object)
{
java.io.PrintStream v4;
java.lang.Throwable v3;
java.lang.Class v5;
java.lang.Object v1;
java.lang.StringBuilder v0;
java.lang.String v2, v6, v7;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.Object;
label1:
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = <java.lang.System: java.io.PrintStream err>;
v5 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("SLF4J: Failed toString() invocation on an object of type [\u0001]");
virtualinvoke v4.<java.io.PrintStream: void println(java.lang.String)>(v7);
virtualinvoke v3.<java.lang.Throwable: void printStackTrace()>();
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[FAILED toString()]");
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private static void objectArrayAppend(java.lang.StringBuilder, java.lang.Object[], java.util.Set)
{
java.lang.Object[] v1;
java.util.Set v2;
java.util.HashSet v4;
int v3, v5, v8, v9;
java.lang.Object v10, v7;
java.lang.StringBuilder v0;
boolean v6;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: java.lang.Object[];
v2 := @parameter2: java.util.Set;
v3 = lengthof v1;
if v3 != 0 goto label1;
return;
label1:
if v2 != null goto label2;
v4 = new java.util.HashSet;
v5 = lengthof v1;
specialinvoke v4.<java.util.HashSet: void <init>(int)>(v5);
v2 = v4;
label2:
v6 = interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v1);
if v6 == 0 goto label5;
v7 = v1[0];
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set)>(v0, v7, v2);
v8 = 1;
label3:
v9 = lengthof v1;
if v8 >= v9 goto label4;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v10 = v1[v8];
staticinvoke <io.netty.util.internal.logging.MessageFormatter: void deeplyAppendParameter(java.lang.StringBuilder,java.lang.Object,java.util.Set)>(v0, v10, v2);
v8 = v8 + 1;
goto label3;
label4:
interfaceinvoke v2.<java.util.Set: boolean remove(java.lang.Object)>(v1);
goto label6;
label5:
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("...");
label6:
return;
}
private static void booleanArrayAppend(java.lang.StringBuilder, boolean[])
{
boolean[] v1;
int v2, v4, v5;
java.lang.StringBuilder v0;
boolean v3, v6;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: boolean[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(boolean)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void byteArrayAppend(java.lang.StringBuilder, byte[])
{
byte[] v1;
byte v3, v6;
int v2, v4, v5;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: byte[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void charArrayAppend(java.lang.StringBuilder, char[])
{
int v2, v4, v5;
char[] v1;
char v3, v6;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: char[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void shortArrayAppend(java.lang.StringBuilder, short[])
{
short v3, v6;
int v2, v4, v5;
java.lang.StringBuilder v0;
short[] v1;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: short[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void intArrayAppend(java.lang.StringBuilder, int[])
{
int[] v1;
int v2, v3, v4, v5, v6;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: int[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void longArrayAppend(java.lang.StringBuilder, long[])
{
long[] v1;
int v2, v4, v5;
java.lang.StringBuilder v0;
long v3, v6;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: long[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(long)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void floatArrayAppend(java.lang.StringBuilder, float[])
{
int v2, v4, v5;
float v3, v6;
float[] v1;
java.lang.StringBuilder v0;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: float[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(float)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private static void doubleArrayAppend(java.lang.StringBuilder, double[])
{
double[] v1;
int v2, v4, v5;
java.lang.StringBuilder v0;
double v3, v6;
v0 := @parameter0: java.lang.StringBuilder;
v1 := @parameter1: double[];
v2 = lengthof v1;
if v2 != 0 goto label1;
return;
label1:
v3 = v1[0];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(v3);
v4 = 1;
label2:
v5 = lengthof v1;
if v4 >= v5 goto label3;
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v6 = v1[v4];
virtualinvoke v0.<java.lang.StringBuilder: java.lang.StringBuilder append(double)>(v6);
v4 = v4 + 1;
goto label2;
label3:
return;
}
private void <init>()
{
io.netty.util.internal.logging.MessageFormatter v0;
v0 := @this: io.netty.util.internal.logging.MessageFormatter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}