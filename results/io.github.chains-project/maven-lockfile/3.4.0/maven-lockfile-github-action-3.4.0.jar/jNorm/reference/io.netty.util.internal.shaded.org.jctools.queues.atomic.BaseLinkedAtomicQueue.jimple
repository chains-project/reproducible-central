abstract class io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue extends io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad2
{
void <init>()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
specialinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueuePad2: void <init>()>();
return;
}
public final java.util.Iterator iterator()
{
java.lang.UnsupportedOperationException v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.lang.String toString()
{
java.lang.Class v1;
java.lang.String v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
return v2;
}
protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode newNode()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = new io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode;
specialinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: void <init>()>();
return v1;
}
protected final io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode newNode(java.lang.Object)
{
java.lang.Object v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: java.lang.Object;
v2 = new io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode;
specialinvoke v2.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: void <init>(java.lang.Object)>(v1);
return v2;
}
public final int size()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2, v4;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
int v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvConsumerNode()>();
v2 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvProducerNode()>();
v3 = 0;
label1:
if v1 == v2 goto label3;
if v1 == null goto label3;
if v3 >= 2147483647 goto label3;
v4 = virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v4 != v1 goto label2;
return v3;
label2:
v1 = v4;
v3 = v3 + 1;
goto label1;
label3:
return v3;
}
public boolean isEmpty()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
boolean v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvConsumerNode()>();
v2 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvProducerNode()>();
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
protected java.lang.Object getSingleConsumerNodeValue(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode, io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
java.lang.Object v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode;
v2 := @parameter1: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode;
v3 = virtualinvoke v2.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: java.lang.Object getAndNullValue()>();
virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: void soNext(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v1);
virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: void spConsumerNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v2);
return v3;
}
public java.lang.Object poll()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2, v4, v5;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
java.lang.Object v3, v6;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpConsumerNode()>();
v2 = virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v2 == null goto label1;
v3 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: java.lang.Object getSingleConsumerNodeValue(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode,io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v1, v2);
return v3;
label1:
v4 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvProducerNode()>();
if v1 == v4 goto label2;
v5 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode spinWaitForNextNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v1);
v6 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: java.lang.Object getSingleConsumerNodeValue(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode,io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v1, v5);
return v6;
label2:
return null;
}
public java.lang.Object peek()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2, v4, v5;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
java.lang.Object v3, v6;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpConsumerNode()>();
v2 = virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: java.lang.Object lpValue()>();
return v3;
label1:
v4 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvProducerNode()>();
if v1 == v4 goto label2;
v5 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode spinWaitForNextNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v1);
v6 = virtualinvoke v5.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: java.lang.Object lpValue()>();
return v6;
label2:
return null;
}
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode spinWaitForNextNode(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode;
label1:
v2 = virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v2 == null goto label1;
return v2;
}
public java.lang.Object relaxedPoll()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
java.lang.Object v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpConsumerNode()>();
v2 = virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v2 == null goto label1;
v3 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: java.lang.Object getSingleConsumerNodeValue(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode,io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v1, v2);
return v3;
label1:
return null;
}
public java.lang.Object relaxedPeek()
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v1, v2;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
java.lang.Object v3;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpConsumerNode()>();
v2 = virtualinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v2 == null goto label1;
v3 = virtualinvoke v2.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: java.lang.Object lpValue()>();
return v3;
label1:
return null;
}
public boolean relaxedOffer(java.lang.Object)
{
java.lang.Object v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
boolean v2;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: boolean offer(java.lang.Object)>(v1);
return v2;
}
public int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, int)
{
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
java.lang.IllegalArgumentException v3, v4;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode v6, v8;
int v2, v7;
java.lang.Object v9;
java.lang.String v5;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer;
v2 := @parameter1: int;
if null != v1 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("c is null");
throw v3;
label1:
if v2 >= 0 goto label2;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("limit is negative: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label2:
if v2 != 0 goto label3;
return 0;
label3:
v6 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lpConsumerNode()>();
v7 = 0;
label4:
if v7 >= v2 goto label6;
v8 = virtualinvoke v6.<io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode: io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode lvNext()>();
if v8 != null goto label5;
return v7;
label5:
v9 = virtualinvoke v0.<io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue: java.lang.Object getSingleConsumerNodeValue(io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode,io.netty.util.internal.shaded.org.jctools.queues.atomic.LinkedQueueAtomicNode)>(v6, v8);
v6 = v8;
interfaceinvoke v1.<io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer: void accept(java.lang.Object)>(v9);
v7 = v7 + 1;
goto label4;
label6:
return v2;
}
public int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer)
{
int v2;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer;
v2 = staticinvoke <io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil: int drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer)>(v0, v1);
return v2;
}
public void drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy, io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition)
{
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer v1;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition v3;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy v2;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 := @parameter0: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer;
v2 := @parameter1: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy;
v3 := @parameter2: io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition;
staticinvoke <io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueueUtil: void drain(io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$Consumer,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$WaitStrategy,io.netty.util.internal.shaded.org.jctools.queues.MessagePassingQueue$ExitCondition)>(v0, v1, v2, v3);
return;
}
public int capacity()
{
int v1;
io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue v0;
v0 := @this: io.netty.util.internal.shaded.org.jctools.queues.atomic.BaseLinkedAtomicQueue;
v1 = (int) -1;
return v1;
}
}