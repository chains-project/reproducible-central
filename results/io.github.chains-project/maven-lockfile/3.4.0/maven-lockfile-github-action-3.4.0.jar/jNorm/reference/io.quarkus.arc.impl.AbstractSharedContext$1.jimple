class io.quarkus.arc.impl.AbstractSharedContext$1 extends java.lang.Object implements java.util.function.Supplier
{
final io.quarkus.arc.InjectableBean val$bean;
final jakarta.enterprise.context.spi.CreationalContext val$creationalContext;
final io.quarkus.arc.impl.AbstractSharedContext this$0;
void <init>(io.quarkus.arc.impl.AbstractSharedContext, io.quarkus.arc.InjectableBean, jakarta.enterprise.context.spi.CreationalContext)
{
io.quarkus.arc.impl.AbstractSharedContext$1 v0;
io.quarkus.arc.InjectableBean v2;
jakarta.enterprise.context.spi.CreationalContext v3;
io.quarkus.arc.impl.AbstractSharedContext v1;
v0 := @this: io.quarkus.arc.impl.AbstractSharedContext$1;
v1 := @parameter0: io.quarkus.arc.impl.AbstractSharedContext;
v2 := @parameter1: io.quarkus.arc.InjectableBean;
v3 := @parameter2: jakarta.enterprise.context.spi.CreationalContext;
v0.<io.quarkus.arc.impl.AbstractSharedContext$1: io.quarkus.arc.impl.AbstractSharedContext this$0> = v1;
v0.<io.quarkus.arc.impl.AbstractSharedContext$1: io.quarkus.arc.InjectableBean val$bean> = v2;
v0.<io.quarkus.arc.impl.AbstractSharedContext$1: jakarta.enterprise.context.spi.CreationalContext val$creationalContext> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.quarkus.arc.ContextInstanceHandle get()
{
io.quarkus.arc.impl.AbstractSharedContext$1 v0;
io.quarkus.arc.InjectableBean v1;
jakarta.enterprise.context.spi.CreationalContext v2;
io.quarkus.arc.ContextInstanceHandle v3;
v0 := @this: io.quarkus.arc.impl.AbstractSharedContext$1;
v1 = v0.<io.quarkus.arc.impl.AbstractSharedContext$1: io.quarkus.arc.InjectableBean val$bean>;
v2 = v0.<io.quarkus.arc.impl.AbstractSharedContext$1: jakarta.enterprise.context.spi.CreationalContext val$creationalContext>;
v3 = staticinvoke <io.quarkus.arc.impl.AbstractSharedContext: io.quarkus.arc.ContextInstanceHandle createInstanceHandle(io.quarkus.arc.InjectableBean,jakarta.enterprise.context.spi.CreationalContext)>(v1, v2);
return v3;
}
}