public class io.quarkus.arc.impl.ActivateRequestContextInterceptor extends java.lang.Object
{
public void <init>()
{
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
java.lang.Object aroundInvoke(jakarta.interceptor.InvocationContext) throws java.lang.Exception
{
jakarta.interceptor.InvocationContext v1;
io.smallrye.mutiny.Multi v8;
io.smallrye.mutiny.Uni v7;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
java.util.concurrent.CompletionStage v9;
int[] v2;
int v5, v6;
io.quarkus.arc.impl.ReactiveType v4;
java.lang.Object v10;
java.lang.reflect.Method v3;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 = <io.quarkus.arc.impl.ActivateRequestContextInterceptor$1: int[] $SwitchMap$io$quarkus$arc$impl$ReactiveType>;
v3 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.reflect.Method getMethod()>();
v4 = staticinvoke <io.quarkus.arc.impl.ReactiveType: io.quarkus.arc.impl.ReactiveType valueOf(java.lang.reflect.Method)>(v3);
v5 = virtualinvoke v4.<io.quarkus.arc.impl.ReactiveType: int ordinal()>();
v6 = v2[v5];
tableswitch(v6)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
default: goto label4;
};
label1:
v7 = specialinvoke v0.<io.quarkus.arc.impl.ActivateRequestContextInterceptor: io.smallrye.mutiny.Uni invokeUni(jakarta.interceptor.InvocationContext)>(v1);
return v7;
label2:
v8 = specialinvoke v0.<io.quarkus.arc.impl.ActivateRequestContextInterceptor: io.smallrye.mutiny.Multi invokeMulti(jakarta.interceptor.InvocationContext)>(v1);
return v8;
label3:
v9 = specialinvoke v0.<io.quarkus.arc.impl.ActivateRequestContextInterceptor: java.util.concurrent.CompletionStage invokeStage(jakarta.interceptor.InvocationContext)>(v1);
return v9;
label4:
v10 = specialinvoke v0.<io.quarkus.arc.impl.ActivateRequestContextInterceptor: java.lang.Object invoke(jakarta.interceptor.InvocationContext)>(v1);
return v10;
}
private java.util.concurrent.CompletionStage invokeStage(jakarta.interceptor.InvocationContext)
{
io.quarkus.arc.ManagedContext v3;
jakarta.interceptor.InvocationContext v1;
java.util.function.Function v7;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
java.util.concurrent.CompletionStage v5, v6, v8;
io.quarkus.arc.ArcContainer v2;
boolean v4;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.ManagedContext requestContext()>();
v4 = interfaceinvoke v3.<io.quarkus.arc.ManagedContext: boolean isActive()>();
if v4 == 0 goto label1;
v5 = specialinvoke v0.<io.quarkus.arc.impl.ActivateRequestContextInterceptor: java.util.concurrent.CompletionStage proceedWithStage(jakarta.interceptor.InvocationContext)>(v1);
return v5;
label1:
v6 = staticinvoke <io.quarkus.arc.impl.ActivateRequestContextInterceptor: java.util.concurrent.CompletionStage activate(io.quarkus.arc.ManagedContext)>(v3);
v7 = staticinvoke <io.quarkus.arc.impl.ActivateRequestContextInterceptor$lambda_invokeStage_1__2594: java.util.function.Function bootstrap$(io.quarkus.arc.impl.ActivateRequestContextInterceptor,jakarta.interceptor.InvocationContext,io.quarkus.arc.ManagedContext)>(v0, v1, v3);
v8 = interfaceinvoke v6.<java.util.concurrent.CompletionStage: java.util.concurrent.CompletionStage thenCompose(java.util.function.Function)>(v7);
return v8;
}
private static java.util.concurrent.CompletionStage activate(io.quarkus.arc.ManagedContext)
{
java.lang.Throwable v3;
io.quarkus.arc.ManagedContext v0;
java.util.concurrent.CompletionStage v2, v4;
io.quarkus.arc.InjectableContext$ContextState v1;
v0 := @parameter0: io.quarkus.arc.ManagedContext;
label1:
interfaceinvoke v0.<io.quarkus.arc.ManagedContext: void activate()>();
v1 = interfaceinvoke v0.<io.quarkus.arc.ManagedContext: io.quarkus.arc.InjectableContext$ContextState getState()>();
v2 = staticinvoke <java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage completedStage(java.lang.Object)>(v1);
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = staticinvoke <java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage failedStage(java.lang.Throwable)>(v3);
return v4;
catch java.lang.Throwable from label1 to label2 with label3;
}
private java.util.concurrent.CompletionStage proceedWithStage(jakarta.interceptor.InvocationContext)
{
java.lang.Throwable v3;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
java.util.concurrent.CompletionStage v4;
jakarta.interceptor.InvocationContext v1;
java.lang.Object v2;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
label1:
v2 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = staticinvoke <java.util.concurrent.CompletableFuture: java.util.concurrent.CompletionStage failedStage(java.lang.Throwable)>(v3);
return v4;
catch java.lang.Throwable from label1 to label2 with label3;
}
private io.smallrye.mutiny.Multi invokeMulti(jakarta.interceptor.InvocationContext)
{
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
io.smallrye.mutiny.groups.MultiCreate v2;
jakarta.interceptor.InvocationContext v1;
java.util.function.Supplier v3;
io.smallrye.mutiny.Multi v4;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v3 = staticinvoke <io.quarkus.arc.impl.ActivateRequestContextInterceptor$lambda_invokeMulti_4__2595: java.util.function.Supplier bootstrap$(io.quarkus.arc.impl.ActivateRequestContextInterceptor,jakarta.interceptor.InvocationContext)>(v0, v1);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi deferred(java.util.function.Supplier)>(v3);
return v4;
}
private io.smallrye.mutiny.Multi proceedWithMulti(jakarta.interceptor.InvocationContext)
{
java.lang.Throwable v3;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
io.smallrye.mutiny.groups.MultiCreate v4;
jakarta.interceptor.InvocationContext v1;
java.lang.Object v2;
io.smallrye.mutiny.Multi v5;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
label1:
v2 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi failure(java.lang.Throwable)>(v3);
return v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
private io.smallrye.mutiny.Uni invokeUni(jakarta.interceptor.InvocationContext)
{
io.smallrye.mutiny.groups.UniCreate v2;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
jakarta.interceptor.InvocationContext v1;
java.util.function.Supplier v3;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v3 = staticinvoke <io.quarkus.arc.impl.ActivateRequestContextInterceptor$lambda_invokeUni_7__2596: java.util.function.Supplier bootstrap$(io.quarkus.arc.impl.ActivateRequestContextInterceptor,jakarta.interceptor.InvocationContext)>(v0, v1);
v4 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni deferred(java.util.function.Supplier)>(v3);
return v4;
}
private io.smallrye.mutiny.Uni proceedWithUni(jakarta.interceptor.InvocationContext)
{
java.lang.Throwable v3;
io.smallrye.mutiny.groups.UniCreate v4;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
jakarta.interceptor.InvocationContext v1;
java.lang.Object v2;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
label1:
v2 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
label2:
return v2;
label3:
v3 := @caughtexception;
v4 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni failure(java.lang.Throwable)>(v3);
return v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
private java.lang.Object invoke(jakarta.interceptor.InvocationContext) throws java.lang.Exception
{
java.lang.Throwable v7;
io.quarkus.arc.ManagedContext v3;
jakarta.interceptor.InvocationContext v1;
io.quarkus.arc.impl.ActivateRequestContextInterceptor v0;
io.quarkus.arc.ArcContainer v2;
java.lang.Object v5, v6;
boolean v4;
v0 := @this: io.quarkus.arc.impl.ActivateRequestContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.ManagedContext requestContext()>();
v4 = interfaceinvoke v3.<io.quarkus.arc.ManagedContext: boolean isActive()>();
if v4 == 0 goto label1;
v5 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
return v5;
label1:
interfaceinvoke v3.<io.quarkus.arc.ManagedContext: void activate()>();
v6 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
label2:
interfaceinvoke v3.<io.quarkus.arc.ManagedContext: void terminate()>();
return v6;
label3:
v7 := @caughtexception;
interfaceinvoke v3.<io.quarkus.arc.ManagedContext: void terminate()>();
throw v7;
catch java.lang.Throwable from label1 to label2 with label3;
}
}