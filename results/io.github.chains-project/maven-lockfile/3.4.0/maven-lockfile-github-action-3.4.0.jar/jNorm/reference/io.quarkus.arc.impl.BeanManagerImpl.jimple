public class io.quarkus.arc.impl.BeanManagerImpl extends java.lang.Object implements jakarta.enterprise.inject.spi.BeanManager
{
static final io.quarkus.arc.impl.LazyValue INSTANCE;
public void <init>()
{
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object getReference(jakarta.enterprise.inject.spi.Bean, java.lang.reflect.Type, jakarta.enterprise.context.spi.CreationalContext)
{
io.quarkus.arc.impl.BeanTypeAssignabilityRules v4;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.Bean v1;
java.lang.String v15, v9;
boolean v10, v11, v6;
java.util.Set v5, v8;
jakarta.enterprise.context.spi.CreationalContext v3;
java.lang.IllegalArgumentException v14, v7;
io.quarkus.arc.InstanceHandle v12;
java.lang.reflect.Type v2;
java.lang.Object v13;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.Bean;
v2 := @parameter1: java.lang.reflect.Type;
v3 := @parameter2: jakarta.enterprise.context.spi.CreationalContext;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Bean is null");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "Bean type is null");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v3, "CreationalContext is null");
v4 = staticinvoke <io.quarkus.arc.impl.BeanTypeAssignabilityRules: io.quarkus.arc.impl.BeanTypeAssignabilityRules instance()>();
v5 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.Bean: java.util.Set getTypes()>();
v6 = virtualinvoke v4.<io.quarkus.arc.impl.BeanTypeAssignabilityRules: boolean matches(java.lang.reflect.Type,java.util.Set)>(v2, v5);
if v6 != 0 goto label1;
v7 = new java.lang.IllegalArgumentException;
v8 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.Bean: java.util.Set getTypes()>();
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Type,jakarta.enterprise.inject.spi.Bean,java.util.Set)>(v2, v1, v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Type \u0001 is not a bean type of \u0001; its bean types are: \u0001");
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v9);
throw v7;
label1:
v10 = v1 instanceof io.quarkus.arc.InjectableBean;
if v10 == 0 goto label2;
v11 = v3 instanceof io.quarkus.arc.impl.CreationalContextImpl;
if v11 == 0 goto label2;
v12 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.InstanceHandle beanInstanceHandle(io.quarkus.arc.InjectableBean,io.quarkus.arc.impl.CreationalContextImpl,boolean,java.util.function.Consumer,boolean)>(v1, v3, 1, null, 1);
v13 = interfaceinvoke v12.<io.quarkus.arc.InstanceHandle: java.lang.Object get()>();
return v13;
label2:
v14 = new java.lang.IllegalArgumentException;
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class,java.lang.Class,jakarta.enterprise.inject.spi.Bean,jakarta.enterprise.context.spi.CreationalContext)>(class "Lio/quarkus/arc/InjectableBean;", class "Lio/quarkus/arc/impl/CreationalContextImpl;", v1, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Arguments must be instances of \u0001 and \u0001: \nbean: \u0001\nctx: \u0001");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v15);
throw v14;
}
public java.lang.Object getInjectableReference(jakarta.enterprise.inject.spi.InjectionPoint, jakarta.enterprise.context.spi.CreationalContext)
{
java.lang.Throwable v15;
java.lang.Object[] v7;
java.lang.'annotation'.Annotation[] v6;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.Bean v11;
java.lang.String v17;
boolean v3, v9;
jakarta.enterprise.inject.UnsatisfiedResolutionException v10;
jakarta.enterprise.inject.spi.InjectionPoint v1, v12;
java.util.Set v5, v8;
jakarta.enterprise.context.spi.CreationalContext v2;
java.lang.IllegalArgumentException v16;
io.quarkus.arc.InstanceHandle v13;
java.lang.reflect.Type v4;
java.lang.Object v14;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.InjectionPoint;
v2 := @parameter1: jakarta.enterprise.context.spi.CreationalContext;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "InjectionPoint is null");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "CreationalContext is null");
v3 = v2 instanceof io.quarkus.arc.impl.CreationalContextImpl;
if v3 == 0 goto label5;
v4 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.InjectionPoint: java.lang.reflect.Type getType()>();
v5 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.InjectionPoint: java.util.Set getQualifiers()>();
v6 = newarray (java.lang.'annotation'.Annotation)[0];
v7 = interfaceinvoke v5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v6);
v8 = virtualinvoke v0.<io.quarkus.arc.impl.BeanManagerImpl: java.util.Set getBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v4, v7);
v9 = interfaceinvoke v8.<java.util.Set: boolean isEmpty()>();
if v9 == 0 goto label1;
v10 = new jakarta.enterprise.inject.UnsatisfiedResolutionException;
specialinvoke v10.<jakarta.enterprise.inject.UnsatisfiedResolutionException: void <init>()>();
throw v10;
label1:
v11 = virtualinvoke v0.<io.quarkus.arc.impl.BeanManagerImpl: jakarta.enterprise.inject.spi.Bean resolve(java.util.Set)>(v8);
v12 = staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v1);
label2:
v13 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.InstanceHandle beanInstanceHandle(io.quarkus.arc.InjectableBean,io.quarkus.arc.impl.CreationalContextImpl,boolean,java.util.function.Consumer,boolean)>(v11, v2, 0, null, 1);
v14 = interfaceinvoke v13.<io.quarkus.arc.InstanceHandle: java.lang.Object get()>();
label3:
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v12);
return v14;
label4:
v15 := @caughtexception;
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v12);
throw v15;
label5:
v16 = new java.lang.IllegalArgumentException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(class "Lio/quarkus/arc/impl/CreationalContextImpl;") <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("CreationalContext must be an instances of \u0001");
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v16;
catch java.lang.Throwable from label2 to label3 with label4;
}
public jakarta.enterprise.context.spi.CreationalContext createCreationalContext(jakarta.enterprise.context.spi.Contextual)
{
io.quarkus.arc.impl.CreationalContextImpl v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.context.spi.Contextual v1;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.context.spi.Contextual;
v2 = new io.quarkus.arc.impl.CreationalContextImpl;
specialinvoke v2.<io.quarkus.arc.impl.CreationalContextImpl: void <init>(jakarta.enterprise.context.spi.Contextual)>(v1);
return v2;
}
public transient java.util.Set getBeans(java.lang.reflect.Type, java.lang.'annotation'.Annotation[])
{
java.lang.reflect.Type v1;
java.util.Set v5;
java.lang.Object v4;
java.lang.'annotation'.Annotation[] v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v3;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.reflect.Type;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v5 = virtualinvoke v3.<io.quarkus.arc.impl.ArcContainerImpl: java.util.Set getBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v4, v2);
return v5;
}
public java.util.Set getBeans(java.lang.String)
{
java.util.Set v4;
java.lang.Object v3;
java.lang.String v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v2;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v3 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v4 = virtualinvoke v2.<io.quarkus.arc.impl.ArcContainerImpl: java.util.Set getBeans(java.lang.String)>(v3);
return v4;
}
public jakarta.enterprise.inject.spi.Bean getPassivationCapableBean(java.lang.String)
{
java.lang.UnsupportedOperationException v2;
java.lang.String v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.String;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.Bean resolve(java.util.Set)
{
java.util.Set v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.Bean v2;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.util.Set;
v2 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: jakarta.enterprise.inject.spi.Bean resolve(java.util.Set)>(v1);
return v2;
}
public void validate(jakarta.enterprise.inject.spi.InjectionPoint)
{
java.lang.UnsupportedOperationException v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.InjectionPoint v1;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.InjectionPoint;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public transient java.util.Set resolveObserverMethods(java.lang.Object, java.lang.'annotation'.Annotation[])
{
java.lang.'annotation'.Annotation[] v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
java.lang.IllegalArgumentException v6;
io.quarkus.arc.impl.ArcContainerImpl v11;
java.util.HashSet v8;
java.util.List v12, v9;
java.lang.reflect.Type v4;
java.lang.Class v3;
java.lang.Object v1;
java.lang.String v7;
java.util.LinkedHashSet v10;
boolean v5;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.reflect.Type getCanonicalType(java.lang.Class)>(v3);
v5 = staticinvoke <io.quarkus.arc.impl.Types: boolean containsTypeVariable(java.lang.reflect.Type)>(v4);
if v5 == 0 goto label1;
v6 = new java.lang.IllegalArgumentException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Type)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("The runtime type of the event object contains a type variable: \u0001");
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
v8 = new java.util.HashSet;
v9 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v8.<java.util.HashSet: void <init>(java.util.Collection)>(v9);
v10 = new java.util.LinkedHashSet;
v11 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v12 = virtualinvoke v11.<io.quarkus.arc.impl.ArcContainerImpl: java.util.List resolveObservers(java.lang.reflect.Type,java.util.Set)>(v4, v8);
specialinvoke v10.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v12);
return v10;
}
public transient java.util.List resolveDecorators(java.util.Set, java.lang.'annotation'.Annotation[])
{
java.util.List v4;
java.util.Set v1;
java.lang.'annotation'.Annotation[] v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v3;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.util.Set;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v4 = virtualinvoke v3.<io.quarkus.arc.impl.ArcContainerImpl: java.util.List resolveDecorators(java.util.Set,java.lang.'annotation'.Annotation[])>(v1, v2);
return v4;
}
public transient java.util.List resolveInterceptors(jakarta.enterprise.inject.spi.InterceptionType, java.lang.'annotation'.Annotation[])
{
java.util.List v5;
jakarta.enterprise.inject.spi.InterceptionType v1;
java.lang.Object v4;
java.lang.'annotation'.Annotation[] v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v3;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.InterceptionType;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v4 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v5 = virtualinvoke v3.<io.quarkus.arc.impl.ArcContainerImpl: java.util.List resolveInterceptors(jakarta.enterprise.inject.spi.InterceptionType,java.lang.'annotation'.Annotation[])>(v4, v2);
return v5;
}
public boolean isScope(java.lang.Class)
{
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v2;
boolean v3;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v3 = virtualinvoke v2.<io.quarkus.arc.impl.ArcContainerImpl: boolean isScope(java.lang.Class)>(v1);
return v3;
}
public boolean isNormalScope(java.lang.Class)
{
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v2;
boolean v3;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v3 = virtualinvoke v2.<io.quarkus.arc.impl.ArcContainerImpl: boolean isNormalScope(java.lang.Class)>(v1);
return v3;
}
public boolean isPassivatingScope(java.lang.Class)
{
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
return 0;
}
public boolean isQualifier(java.lang.Class)
{
io.quarkus.arc.impl.Qualifiers v4;
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v3;
boolean v2, v5, v6;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljakarta/inject/Qualifier;");
if v2 != 0 goto label1;
v3 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v4 = v3.<io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.Qualifiers registeredQualifiers>;
v5 = virtualinvoke v4.<io.quarkus.arc.impl.Qualifiers: boolean isRegistered(java.lang.Class)>(v1);
if v5 == 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
public boolean isInterceptorBinding(java.lang.Class)
{
io.quarkus.arc.impl.InterceptorBindings v4;
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.ArcContainerImpl v3;
boolean v2, v5, v6;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljakarta/interceptor/InterceptorBinding;");
if v2 != 0 goto label1;
v3 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v4 = v3.<io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.InterceptorBindings registeredInterceptorBindings>;
v5 = virtualinvoke v4.<io.quarkus.arc.impl.InterceptorBindings: boolean isRegistered(java.lang.Class)>(v1);
if v5 == 0 goto label2;
label1:
v6 = 1;
goto label3;
label2:
v6 = 0;
label3:
return v6;
}
public boolean isStereotype(java.lang.Class)
{
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
boolean v2;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: boolean isAnnotationPresent(java.lang.Class)>(class "Ljakarta/enterprise/inject/Stereotype;");
return v2;
}
public java.util.Set getInterceptorBindingDefinition(java.lang.Class)
{
java.util.HashSet v2;
java.util.List v4;
java.lang.Class v1;
java.lang.'annotation'.Annotation[] v3;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = new java.util.HashSet;
v3 = virtualinvoke v1.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
specialinvoke v2.<java.util.HashSet: void <init>(java.util.Collection)>(v4);
return v2;
}
public java.util.Set getStereotypeDefinition(java.lang.Class)
{
java.util.HashSet v2;
java.util.List v4;
java.lang.Class v1;
java.lang.'annotation'.Annotation[] v3;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = new java.util.HashSet;
v3 = virtualinvoke v1.<java.lang.Class: java.lang.'annotation'.Annotation[] getAnnotations()>();
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
specialinvoke v2.<java.util.HashSet: void <init>(java.util.Collection)>(v4);
return v2;
}
public boolean areQualifiersEquivalent(java.lang.'annotation'.Annotation, java.lang.'annotation'.Annotation)
{
java.lang.UnsupportedOperationException v3;
java.lang.'annotation'.Annotation v1, v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.'annotation'.Annotation;
v2 := @parameter1: java.lang.'annotation'.Annotation;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public boolean areInterceptorBindingsEquivalent(java.lang.'annotation'.Annotation, java.lang.'annotation'.Annotation)
{
java.lang.UnsupportedOperationException v3;
java.lang.'annotation'.Annotation v1, v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.'annotation'.Annotation;
v2 := @parameter1: java.lang.'annotation'.Annotation;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public int getQualifierHashCode(java.lang.'annotation'.Annotation)
{
java.lang.'annotation'.Annotation v1;
java.lang.UnsupportedOperationException v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.'annotation'.Annotation;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public int getInterceptorBindingHashCode(java.lang.'annotation'.Annotation)
{
java.lang.'annotation'.Annotation v1;
java.lang.UnsupportedOperationException v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.'annotation'.Annotation;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.context.spi.Context getContext(java.lang.Class)
{
jakarta.enterprise.context.ContextNotActiveException v4;
io.quarkus.arc.ArcContainer v2;
io.quarkus.arc.InjectableContext v3;
java.lang.Class v1;
java.lang.String v5;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InjectableContext getActiveContext(java.lang.Class)>(v1);
if v3 != null goto label1;
v4 = new jakarta.enterprise.context.ContextNotActiveException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No active context found for: \u0001");
specialinvoke v4.<jakarta.enterprise.context.ContextNotActiveException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
return v3;
}
public jakarta.el.ELResolver getELResolver()
{
java.lang.UnsupportedOperationException v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public jakarta.el.ExpressionFactory wrapExpressionFactory(jakarta.el.ExpressionFactory)
{
java.lang.UnsupportedOperationException v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.el.ExpressionFactory v1;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.el.ExpressionFactory;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.AnnotatedType createAnnotatedType(java.lang.Class)
{
java.lang.UnsupportedOperationException v2;
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.InjectionTargetFactory getInjectionTargetFactory(jakarta.enterprise.inject.spi.AnnotatedType)
{
java.lang.UnsupportedOperationException v2;
jakarta.enterprise.inject.spi.AnnotatedType v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedType;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.ProducerFactory getProducerFactory(jakarta.enterprise.inject.spi.AnnotatedField, jakarta.enterprise.inject.spi.Bean)
{
java.lang.UnsupportedOperationException v3;
jakarta.enterprise.inject.spi.AnnotatedField v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.Bean v2;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedField;
v2 := @parameter1: jakarta.enterprise.inject.spi.Bean;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.enterprise.inject.spi.ProducerFactory getProducerFactory(jakarta.enterprise.inject.spi.AnnotatedMethod, jakarta.enterprise.inject.spi.Bean)
{
java.lang.UnsupportedOperationException v3;
jakarta.enterprise.inject.spi.AnnotatedMethod v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.Bean v2;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedMethod;
v2 := @parameter1: jakarta.enterprise.inject.spi.Bean;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.enterprise.inject.spi.BeanAttributes createBeanAttributes(jakarta.enterprise.inject.spi.AnnotatedType)
{
java.lang.UnsupportedOperationException v2;
jakarta.enterprise.inject.spi.AnnotatedType v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedType;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.BeanAttributes createBeanAttributes(jakarta.enterprise.inject.spi.AnnotatedMember)
{
jakarta.enterprise.inject.spi.AnnotatedMember v1;
java.lang.UnsupportedOperationException v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedMember;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.Bean createBean(jakarta.enterprise.inject.spi.BeanAttributes, java.lang.Class, jakarta.enterprise.inject.spi.InjectionTargetFactory)
{
java.lang.UnsupportedOperationException v4;
jakarta.enterprise.inject.spi.BeanAttributes v1;
jakarta.enterprise.inject.spi.InjectionTargetFactory v3;
java.lang.Class v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.BeanAttributes;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: jakarta.enterprise.inject.spi.InjectionTargetFactory;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
}
public jakarta.enterprise.inject.spi.Bean createBean(jakarta.enterprise.inject.spi.BeanAttributes, java.lang.Class, jakarta.enterprise.inject.spi.ProducerFactory)
{
jakarta.enterprise.inject.spi.ProducerFactory v3;
java.lang.UnsupportedOperationException v4;
jakarta.enterprise.inject.spi.BeanAttributes v1;
java.lang.Class v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.BeanAttributes;
v2 := @parameter1: java.lang.Class;
v3 := @parameter2: jakarta.enterprise.inject.spi.ProducerFactory;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
}
public jakarta.enterprise.inject.spi.InjectionPoint createInjectionPoint(jakarta.enterprise.inject.spi.AnnotatedField)
{
java.lang.UnsupportedOperationException v2;
jakarta.enterprise.inject.spi.AnnotatedField v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedField;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.InjectionPoint createInjectionPoint(jakarta.enterprise.inject.spi.AnnotatedParameter)
{
java.lang.UnsupportedOperationException v2;
io.quarkus.arc.impl.BeanManagerImpl v0;
jakarta.enterprise.inject.spi.AnnotatedParameter v1;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.inject.spi.AnnotatedParameter;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.Extension getExtension(java.lang.Class)
{
java.lang.UnsupportedOperationException v2;
java.lang.Class v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
public jakarta.enterprise.inject.spi.InterceptionFactory createInterceptionFactory(jakarta.enterprise.context.spi.CreationalContext, java.lang.Class)
{
java.lang.UnsupportedOperationException v3;
java.lang.Class v2;
jakarta.enterprise.context.spi.CreationalContext v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 := @parameter1: java.lang.Class;
v3 = new java.lang.UnsupportedOperationException;
specialinvoke v3.<java.lang.UnsupportedOperationException: void <init>()>();
throw v3;
}
public jakarta.enterprise.event.Event getEvent()
{
java.util.HashSet v2;
io.quarkus.arc.impl.EventImpl v1;
io.quarkus.arc.impl.BeanManagerImpl v0;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 = new io.quarkus.arc.impl.EventImpl;
v2 = new java.util.HashSet;
specialinvoke v2.<java.util.HashSet: void <init>()>();
specialinvoke v1.<io.quarkus.arc.impl.EventImpl: void <init>(java.lang.reflect.Type,java.util.Set,jakarta.enterprise.inject.spi.InjectionPoint)>(class "Ljava/lang/Object;", v2, null);
return v1;
}
public jakarta.enterprise.inject.Instance createInstance()
{
io.quarkus.arc.impl.BeanManagerImpl v0;
io.quarkus.arc.impl.InstanceImpl v2;
io.quarkus.arc.impl.ArcContainerImpl v1;
v0 := @this: io.quarkus.arc.impl.BeanManagerImpl;
v1 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v2 = v1.<io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.InstanceImpl instance>;
return v2;
}
static void <clinit>()
{
io.quarkus.arc.impl.LazyValue v0;
java.util.function.Supplier v1;
v0 = new io.quarkus.arc.impl.LazyValue;
v1 = staticinvoke <io.quarkus.arc.impl.BeanManagerImpl$init__2588: java.util.function.Supplier bootstrap$()>();
specialinvoke v0.<io.quarkus.arc.impl.LazyValue: void <init>(java.util.function.Supplier)>(v1);
<io.quarkus.arc.impl.BeanManagerImpl: io.quarkus.arc.impl.LazyValue INSTANCE> = v0;
return;
}
}