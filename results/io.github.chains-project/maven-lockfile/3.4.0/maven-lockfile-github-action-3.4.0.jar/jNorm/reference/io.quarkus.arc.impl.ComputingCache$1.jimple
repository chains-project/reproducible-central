class io.quarkus.arc.impl.ComputingCache$1 extends java.lang.Object implements java.util.function.Supplier
{
final java.util.function.Function val$computingFunction;
final java.lang.Object val$key;
final io.quarkus.arc.impl.ComputingCache this$0;
void <init>(io.quarkus.arc.impl.ComputingCache, java.util.function.Function, java.lang.Object)
{
io.quarkus.arc.impl.ComputingCache v1;
java.lang.Object v3;
io.quarkus.arc.impl.ComputingCache$1 v0;
java.util.function.Function v2;
v0 := @this: io.quarkus.arc.impl.ComputingCache$1;
v1 := @parameter0: io.quarkus.arc.impl.ComputingCache;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: java.lang.Object;
v0.<io.quarkus.arc.impl.ComputingCache$1: io.quarkus.arc.impl.ComputingCache this$0> = v1;
v0.<io.quarkus.arc.impl.ComputingCache$1: java.util.function.Function val$computingFunction> = v2;
v0.<io.quarkus.arc.impl.ComputingCache$1: java.lang.Object val$key> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object get()
{
java.lang.Object v2, v3;
io.quarkus.arc.impl.ComputingCache$1 v0;
java.util.function.Function v1;
v0 := @this: io.quarkus.arc.impl.ComputingCache$1;
v1 = v0.<io.quarkus.arc.impl.ComputingCache$1: java.util.function.Function val$computingFunction>;
v2 = v0.<io.quarkus.arc.impl.ComputingCache$1: java.lang.Object val$key>;
v3 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v2);
return v3;
}
}