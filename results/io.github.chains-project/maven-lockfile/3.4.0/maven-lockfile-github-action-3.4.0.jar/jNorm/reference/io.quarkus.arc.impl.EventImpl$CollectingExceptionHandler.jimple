class io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler extends java.lang.Object implements io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler
{
private final java.util.List throwables;
private final io.quarkus.arc.AsyncObserverExceptionHandler exceptionHandler;
void <init>(java.util.List, io.quarkus.arc.AsyncObserverExceptionHandler)
{
io.quarkus.arc.AsyncObserverExceptionHandler v2;
io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler v0;
java.util.List v1;
v0 := @this: io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler;
v1 := @parameter0: java.util.List;
v2 := @parameter1: io.quarkus.arc.AsyncObserverExceptionHandler;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler: java.util.List throwables> = v1;
v0.<io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler: io.quarkus.arc.AsyncObserverExceptionHandler exceptionHandler> = v2;
return;
}
public void handle(java.lang.Throwable, jakarta.enterprise.inject.spi.ObserverMethod, jakarta.enterprise.inject.spi.EventContext)
{
java.lang.Throwable v1;
io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler v0;
org.jboss.logging.Logger v7;
jakarta.enterprise.inject.spi.ObserverMethod v2;
java.lang.Exception v6;
io.quarkus.arc.AsyncObserverExceptionHandler v5;
java.util.List v4;
jakarta.enterprise.inject.spi.EventContext v3;
v0 := @this: io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: jakarta.enterprise.inject.spi.ObserverMethod;
v3 := @parameter2: jakarta.enterprise.inject.spi.EventContext;
v4 = v0.<io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler: java.util.List throwables>;
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v1);
label1:
v5 = v0.<io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler: io.quarkus.arc.AsyncObserverExceptionHandler exceptionHandler>;
interfaceinvoke v5.<io.quarkus.arc.AsyncObserverExceptionHandler: void handle(java.lang.Throwable,jakarta.enterprise.inject.spi.ObserverMethod,jakarta.enterprise.inject.spi.EventContext)>(v1, v2, v3);
label2:
goto label4;
label3:
v6 := @caughtexception;
v7 = <io.quarkus.arc.impl.EventImpl: org.jboss.logging.Logger LOGGER>;
virtualinvoke v7.<org.jboss.logging.Logger: void errorf(java.lang.Throwable,java.lang.String,java.lang.Object)>(v6, "Cannot handle exception of an async observer: %s", v1);
label4:
return;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.util.List getHandledExceptions()
{
io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler v0;
java.util.List v1;
v0 := @this: io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler;
v1 = v0.<io.quarkus.arc.impl.EventImpl$CollectingExceptionHandler: java.util.List throwables>;
return v1;
}
}