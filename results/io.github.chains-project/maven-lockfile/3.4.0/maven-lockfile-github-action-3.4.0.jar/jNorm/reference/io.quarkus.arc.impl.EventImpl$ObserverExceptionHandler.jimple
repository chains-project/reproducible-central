public interface  io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler extends java.lang.Object
{
public static final io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler IMMEDIATE_HANDLER;
public abstract void handle(java.lang.Throwable, jakarta.enterprise.inject.spi.ObserverMethod, jakarta.enterprise.inject.spi.EventContext);
public java.util.List getHandledExceptions()
{
java.util.List v1;
io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler v0;
v0 := @this: io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler;
v1 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v1;
}
static void <clinit>()
{
io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler v0;
v0 = staticinvoke <io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler$lambda_static_0__2576: io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler bootstrap$()>();
<io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler: io.quarkus.arc.impl.EventImpl$ObserverExceptionHandler IMMEDIATE_HANDLER> = v0;
return;
}
}