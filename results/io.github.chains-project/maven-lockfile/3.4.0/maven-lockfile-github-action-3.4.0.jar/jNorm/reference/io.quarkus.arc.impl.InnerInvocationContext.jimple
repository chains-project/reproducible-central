abstract class io.quarkus.arc.impl.InnerInvocationContext extends java.lang.Object implements io.quarkus.arc.ArcInvocationContext
{
protected final io.quarkus.arc.ArcInvocationContext delegate;
protected java.lang.Object[] parameters;
void <init>(jakarta.interceptor.InvocationContext, java.lang.Object[])
{
jakarta.interceptor.InvocationContext v1;
java.lang.Object[] v2;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 := @parameter1: java.lang.Object[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate> = v1;
v0.<io.quarkus.arc.impl.InnerInvocationContext: java.lang.Object[] parameters> = v2;
return;
}
public java.util.Set getInterceptorBindings()
{
java.util.Set v2;
io.quarkus.arc.ArcInvocationContext v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcInvocationContext: java.util.Set getInterceptorBindings()>();
return v2;
}
public java.lang.reflect.Method getMethod()
{
io.quarkus.arc.ArcInvocationContext v1;
java.lang.reflect.Method v2;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcInvocationContext: java.lang.reflect.Method getMethod()>();
return v2;
}
public java.lang.Object[] getParameters()
{
java.lang.IllegalStateException v2;
java.lang.Object[] v1, v3;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: java.lang.Object[] parameters>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>()>();
throw v2;
label1:
v3 = v0.<io.quarkus.arc.impl.InnerInvocationContext: java.lang.Object[] parameters>;
return v3;
}
public void setParameters(java.lang.Object[])
{
java.lang.IllegalStateException v3;
java.lang.Object[] v1, v2;
io.quarkus.arc.ArcInvocationContext v4;
java.lang.reflect.Method v5;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<io.quarkus.arc.impl.InnerInvocationContext: java.lang.Object[] parameters>;
if v2 != null goto label1;
v3 = new java.lang.IllegalStateException;
specialinvoke v3.<java.lang.IllegalStateException: void <init>()>();
throw v3;
label1:
v4 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v5 = interfaceinvoke v4.<io.quarkus.arc.ArcInvocationContext: java.lang.reflect.Method getMethod()>();
staticinvoke <io.quarkus.arc.impl.AbstractInvocationContext: void validateParameters(java.lang.reflect.Executable,java.lang.Object[])>(v5, v1);
v0.<io.quarkus.arc.impl.InnerInvocationContext: java.lang.Object[] parameters> = v1;
return;
}
public java.lang.Object getTarget()
{
java.lang.Object v2;
io.quarkus.arc.ArcInvocationContext v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcInvocationContext: java.lang.Object getTarget()>();
return v2;
}
public java.lang.Object getTimer()
{
java.lang.Object v2;
io.quarkus.arc.ArcInvocationContext v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcInvocationContext: java.lang.Object getTimer()>();
return v2;
}
public java.lang.reflect.Constructor getConstructor()
{
io.quarkus.arc.ArcInvocationContext v1;
java.lang.reflect.Constructor v2;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcInvocationContext: java.lang.reflect.Constructor getConstructor()>();
return v2;
}
public java.util.Map getContextData()
{
io.quarkus.arc.ArcInvocationContext v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
java.util.Map v2;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v2 = interfaceinvoke v1.<io.quarkus.arc.ArcInvocationContext: java.util.Map getContextData()>();
return v2;
}
public java.lang.'annotation'.Annotation findIterceptorBinding(java.lang.Class)
{
io.quarkus.arc.ArcInvocationContext v2;
java.lang.'annotation'.Annotation v3;
java.lang.Class v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 := @parameter0: java.lang.Class;
v2 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcInvocationContext: java.lang.'annotation'.Annotation findIterceptorBinding(java.lang.Class)>(v1);
return v3;
}
public java.util.List findIterceptorBindings(java.lang.Class)
{
java.util.List v3;
io.quarkus.arc.ArcInvocationContext v2;
java.lang.Class v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 := @parameter0: java.lang.Class;
v2 = v0.<io.quarkus.arc.impl.InnerInvocationContext: io.quarkus.arc.ArcInvocationContext delegate>;
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcInvocationContext: java.util.List findIterceptorBindings(java.lang.Class)>(v1);
return v3;
}
public java.lang.Object proceed() throws java.lang.Exception
{
java.lang.Object v1;
io.quarkus.arc.impl.InnerInvocationContext v0;
v0 := @this: io.quarkus.arc.impl.InnerInvocationContext;
v1 = virtualinvoke v0.<io.quarkus.arc.impl.InnerInvocationContext: java.lang.Object proceed(int)>(1);
return v1;
}
protected abstract java.lang.Object proceed(int) throws java.lang.Exception;
}