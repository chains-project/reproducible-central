public class io.quarkus.arc.impl.InstanceImpl extends java.lang.Object implements io.quarkus.arc.InjectableInstance
{
private final io.quarkus.arc.impl.CreationalContextImpl creationalContext;
private final java.util.List resolvedBeans;
private final java.lang.reflect.Type requiredType;
private final java.util.Set requiredQualifiers;
private final java.lang.reflect.Type injectionPointType;
private final io.quarkus.arc.InjectableBean targetBean;
private final java.util.Set annotations;
private final java.lang.reflect.Member javaMember;
private final int position;
private final boolean isTransient;
private final boolean resetCurrentInjectionPoint;
private final io.quarkus.arc.impl.LazyValue cachedGetResult;
public static jakarta.enterprise.inject.Instance forSynthesis(io.quarkus.arc.impl.CreationalContextImpl, boolean)
{
io.quarkus.arc.impl.InstanceImpl v2;
int v5;
io.quarkus.arc.impl.CreationalContextImpl v0;
java.util.Set v3, v4;
io.quarkus.arc.impl.InstanceImpl$1Guard v6;
boolean v1;
v0 := @parameter0: io.quarkus.arc.impl.CreationalContextImpl;
v1 := @parameter1: boolean;
v2 = new io.quarkus.arc.impl.InstanceImpl;
v3 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v5 = (int) -1;
specialinvoke v2.<io.quarkus.arc.impl.InstanceImpl: void <init>(io.quarkus.arc.InjectableBean,java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.impl.CreationalContextImpl,java.util.Set,java.lang.reflect.Member,int,boolean,boolean)>(null, null, class "Ljava/lang/Object;", v3, v0, v4, null, v5, 0, 0);
if v1 == 0 goto label1;
return v2;
label1:
v6 = new io.quarkus.arc.impl.InstanceImpl$1Guard;
specialinvoke v6.<io.quarkus.arc.impl.InstanceImpl$1Guard: void <init>(io.quarkus.arc.InjectableInstance)>(v2);
return v6;
}
static io.quarkus.arc.impl.InstanceImpl of(java.lang.reflect.Type, java.util.Set)
{
io.quarkus.arc.impl.InstanceImpl v2;
java.lang.reflect.Type v0;
int v5;
io.quarkus.arc.impl.CreationalContextImpl v3;
java.util.Set v1, v4;
v0 := @parameter0: java.lang.reflect.Type;
v1 := @parameter1: java.util.Set;
v2 = new io.quarkus.arc.impl.InstanceImpl;
v3 = new io.quarkus.arc.impl.CreationalContextImpl;
specialinvoke v3.<io.quarkus.arc.impl.CreationalContextImpl: void <init>(jakarta.enterprise.context.spi.Contextual)>(null);
v4 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
v5 = (int) -1;
specialinvoke v2.<io.quarkus.arc.impl.InstanceImpl: void <init>(io.quarkus.arc.InjectableBean,java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.impl.CreationalContextImpl,java.util.Set,java.lang.reflect.Member,int,boolean,boolean)>(null, null, v0, v1, v3, v4, null, v5, 0, 1);
return v2;
}
private static io.quarkus.arc.impl.InstanceImpl child(io.quarkus.arc.impl.InstanceImpl, java.lang.reflect.Type, java.util.Set)
{
java.lang.reflect.Member v8;
io.quarkus.arc.InjectableBean v4;
java.util.Set v2, v7;
io.quarkus.arc.impl.InstanceImpl v0, v3;
java.lang.reflect.Type v1, v5;
int v9;
io.quarkus.arc.impl.CreationalContextImpl v6;
boolean v10, v11;
v0 := @parameter0: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter1: java.lang.reflect.Type;
v2 := @parameter2: java.util.Set;
v3 = new io.quarkus.arc.impl.InstanceImpl;
v4 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.InjectableBean targetBean>;
v5 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type injectionPointType>;
v6 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
v7 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set annotations>;
v8 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Member javaMember>;
v9 = v0.<io.quarkus.arc.impl.InstanceImpl: int position>;
v10 = v0.<io.quarkus.arc.impl.InstanceImpl: boolean isTransient>;
v11 = v0.<io.quarkus.arc.impl.InstanceImpl: boolean resetCurrentInjectionPoint>;
specialinvoke v3.<io.quarkus.arc.impl.InstanceImpl: void <init>(io.quarkus.arc.InjectableBean,java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.impl.CreationalContextImpl,java.util.Set,java.lang.reflect.Member,int,boolean,boolean)>(v4, v5, v1, v2, v6, v7, v8, v9, v10, v11);
return v3;
}
void <init>(io.quarkus.arc.InjectableBean, java.lang.reflect.Type, java.util.Set, io.quarkus.arc.impl.CreationalContextImpl, java.util.Set, java.lang.reflect.Member, int, boolean)
{
java.lang.reflect.Member v6;
io.quarkus.arc.InjectableBean v1;
java.util.Set v3, v5;
io.quarkus.arc.impl.InstanceImpl v0;
java.lang.reflect.Type v2, v9;
int v7;
io.quarkus.arc.impl.CreationalContextImpl v4;
boolean v8;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: io.quarkus.arc.InjectableBean;
v2 := @parameter1: java.lang.reflect.Type;
v3 := @parameter2: java.util.Set;
v4 := @parameter3: io.quarkus.arc.impl.CreationalContextImpl;
v5 := @parameter4: java.util.Set;
v6 := @parameter5: java.lang.reflect.Member;
v7 := @parameter6: int;
v8 := @parameter7: boolean;
v9 = staticinvoke <io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type getRequiredType(java.lang.reflect.Type)>(v2);
specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: void <init>(io.quarkus.arc.InjectableBean,java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.impl.CreationalContextImpl,java.util.Set,java.lang.reflect.Member,int,boolean,boolean)>(v1, v2, v9, v3, v4, v5, v6, v7, v8, 1);
return;
}
private void <init>(io.quarkus.arc.InjectableBean, java.lang.reflect.Type, java.lang.reflect.Type, java.util.Set, io.quarkus.arc.impl.CreationalContextImpl, java.util.Set, java.lang.reflect.Member, int, boolean, boolean)
{
io.quarkus.arc.impl.LazyValue v18;
java.util.function.Supplier v19;
io.quarkus.arc.impl.InstanceImpl v0;
int v8;
io.quarkus.arc.impl.CreationalContextImpl v5;
boolean v10, v13, v15, v17, v9;
java.lang.reflect.Member v7;
io.quarkus.arc.InjectableBean v1;
java.util.Set v11, v12, v4, v6;
java.util.List v16;
java.lang.reflect.Type v2, v3;
java.lang.Class v14;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: io.quarkus.arc.InjectableBean;
v2 := @parameter1: java.lang.reflect.Type;
v3 := @parameter2: java.lang.reflect.Type;
v4 := @parameter3: java.util.Set;
v5 := @parameter4: io.quarkus.arc.impl.CreationalContextImpl;
v6 := @parameter5: java.util.Set;
v7 := @parameter6: java.lang.reflect.Member;
v8 := @parameter7: int;
v9 := @parameter8: boolean;
v10 := @parameter9: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type injectionPointType> = v2;
v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type requiredType> = v3;
if v4 == null goto label1;
v11 = v4;
goto label2;
label1:
v11 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
label2:
v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers> = v11;
v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext> = v5;
v12 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
v13 = interfaceinvoke v12.<java.util.Set: boolean isEmpty()>();
if v13 == 0 goto label3;
v14 = class "Ljava/lang/Object;";
v15 = virtualinvoke v14.<java.lang.Object: boolean equals(java.lang.Object)>(v3);
if v15 == 0 goto label3;
v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List resolvedBeans> = null;
goto label4;
label3:
v16 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List resolve()>();
v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List resolvedBeans> = v16;
label4:
v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.InjectableBean targetBean> = v1;
v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set annotations> = v6;
v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Member javaMember> = v7;
v0.<io.quarkus.arc.impl.InstanceImpl: int position> = v8;
v0.<io.quarkus.arc.impl.InstanceImpl: boolean isTransient> = v9;
v0.<io.quarkus.arc.impl.InstanceImpl: boolean resetCurrentInjectionPoint> = v10;
v17 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: boolean isGetCached(java.util.Set)>(v6);
if v17 == 0 goto label5;
v18 = new io.quarkus.arc.impl.LazyValue;
v19 = staticinvoke <io.quarkus.arc.impl.InstanceImpl$getInternal__2603: java.util.function.Supplier bootstrap$(io.quarkus.arc.impl.InstanceImpl)>(v0);
specialinvoke v18.<io.quarkus.arc.impl.LazyValue: void <init>(java.util.function.Supplier)>(v19);
goto label6;
label5:
v18 = null;
label6:
v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.LazyValue cachedGetResult> = v18;
return;
}
public java.util.Iterator iterator()
{
java.util.List v2;
io.quarkus.arc.impl.InstanceImpl v0;
io.quarkus.arc.impl.InstanceImpl$InstanceIterator v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = new io.quarkus.arc.impl.InstanceImpl$InstanceIterator;
v2 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List beans()>();
specialinvoke v1.<io.quarkus.arc.impl.InstanceImpl$InstanceIterator: void <init>(io.quarkus.arc.impl.InstanceImpl,java.util.Collection)>(v0, v2);
return v1;
}
public java.lang.Object get()
{
io.quarkus.arc.impl.LazyValue v1, v2;
io.quarkus.arc.impl.InstanceImpl v0;
java.lang.Object v3;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.LazyValue cachedGetResult>;
if v1 == null goto label1;
v2 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.LazyValue cachedGetResult>;
v3 = virtualinvoke v2.<io.quarkus.arc.impl.LazyValue: java.lang.Object get()>();
goto label2;
label1:
v3 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.Object getInternal()>();
label2:
return v3;
}
public transient io.quarkus.arc.InjectableInstance select(java.lang.'annotation'.Annotation[])
{
java.util.HashSet v2;
io.quarkus.arc.impl.InstanceImpl v0, v5;
java.lang.reflect.Type v4;
java.util.Set v3;
java.lang.'annotation'.Annotation[] v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: java.lang.'annotation'.Annotation[];
v2 = new java.util.HashSet;
v3 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
specialinvoke v2.<java.util.HashSet: void <init>(java.util.Collection)>(v3);
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v2, v1);
v4 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type requiredType>;
v5 = staticinvoke <io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.InstanceImpl child(io.quarkus.arc.impl.InstanceImpl,java.lang.reflect.Type,java.util.Set)>(v0, v4, v2);
return v5;
}
public transient io.quarkus.arc.InjectableInstance select(java.lang.Class, java.lang.'annotation'.Annotation[])
{
java.util.HashSet v3;
io.quarkus.arc.impl.InstanceImpl v0, v5;
java.util.Set v4;
java.lang.Class v1;
java.lang.'annotation'.Annotation[] v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = new java.util.HashSet;
v4 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
specialinvoke v3.<java.util.HashSet: void <init>(java.util.Collection)>(v4);
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v3, v2);
v5 = staticinvoke <io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.InstanceImpl child(io.quarkus.arc.impl.InstanceImpl,java.lang.reflect.Type,java.util.Set)>(v0, v1, v3);
return v5;
}
public transient io.quarkus.arc.InjectableInstance select(jakarta.enterprise.util.TypeLiteral, java.lang.'annotation'.Annotation[])
{
java.util.HashSet v3;
jakarta.enterprise.util.TypeLiteral v1;
io.quarkus.arc.impl.InstanceImpl v0, v6;
java.lang.reflect.Type v5;
java.util.Set v4;
java.lang.'annotation'.Annotation[] v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: jakarta.enterprise.util.TypeLiteral;
v2 := @parameter1: java.lang.'annotation'.Annotation[];
v3 = new java.util.HashSet;
v4 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
specialinvoke v3.<java.util.HashSet: void <init>(java.util.Collection)>(v4);
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v3, v2);
v5 = virtualinvoke v1.<jakarta.enterprise.util.TypeLiteral: java.lang.reflect.Type getType()>();
v6 = staticinvoke <io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.InstanceImpl child(io.quarkus.arc.impl.InstanceImpl,java.lang.reflect.Type,java.util.Set)>(v0, v5, v3);
return v6;
}
public boolean isUnsatisfied()
{
java.util.List v1;
io.quarkus.arc.impl.InstanceImpl v0;
boolean v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List beans()>();
v2 = interfaceinvoke v1.<java.util.List: boolean isEmpty()>();
return v2;
}
public boolean isAmbiguous()
{
java.util.List v1;
io.quarkus.arc.impl.InstanceImpl v0;
int v2;
boolean v3;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List beans()>();
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 <= 1 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public void destroy(java.lang.Object)
{
io.quarkus.arc.InjectableContext v15, v6;
io.quarkus.arc.impl.InstanceImpl v0;
io.quarkus.arc.ArcContainer v14, v3;
io.quarkus.arc.impl.CreationalContextImpl v12;
java.lang.String v10;
boolean v13, v2;
io.quarkus.arc.InjectableBean v11, v4, v8;
jakarta.enterprise.context.ContextNotActiveException v7;
java.lang.Class v5, v9;
java.lang.Object v1;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: java.lang.Object;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v1 instanceof io.quarkus.arc.ClientProxy;
if v2 == 0 goto label2;
v3 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v4 = interfaceinvoke v1.<io.quarkus.arc.ClientProxy: io.quarkus.arc.InjectableBean arc_bean()>();
v5 = interfaceinvoke v4.<io.quarkus.arc.InjectableBean: java.lang.Class getScope()>();
v6 = interfaceinvoke v3.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InjectableContext getActiveContext(java.lang.Class)>(v5);
if v6 != null goto label1;
v7 = new jakarta.enterprise.context.ContextNotActiveException;
v8 = interfaceinvoke v1.<io.quarkus.arc.ClientProxy: io.quarkus.arc.InjectableBean arc_bean()>();
v9 = interfaceinvoke v8.<io.quarkus.arc.InjectableBean: java.lang.Class getScope()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No active context found for: \u0001");
specialinvoke v7.<jakarta.enterprise.context.ContextNotActiveException: void <init>(java.lang.String)>(v10);
throw v7;
label1:
v11 = interfaceinvoke v1.<io.quarkus.arc.ClientProxy: io.quarkus.arc.InjectableBean arc_bean()>();
interfaceinvoke v6.<io.quarkus.arc.InjectableContext: void destroy(jakarta.enterprise.context.spi.Contextual)>(v11);
goto label3;
label2:
v12 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
v13 = virtualinvoke v12.<io.quarkus.arc.impl.CreationalContextImpl: boolean removeDependentInstance(java.lang.Object,boolean)>(v1, 1);
if v13 != 0 goto label3;
v14 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v15 = interfaceinvoke v14.<io.quarkus.arc.ArcContainer: io.quarkus.arc.InjectableContext getActiveContext(java.lang.Class)>(class "Ljakarta/inject/Singleton;");
virtualinvoke v15.<io.quarkus.arc.impl.SingletonContext: void destroyInstance(java.lang.Object)>(v1);
label3:
return;
}
public io.quarkus.arc.InstanceHandle getHandle()
{
io.quarkus.arc.InjectableBean v1;
io.quarkus.arc.InstanceHandle v2;
io.quarkus.arc.impl.InstanceImpl v0;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.InjectableBean bean()>();
v2 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.InstanceHandle getHandle(io.quarkus.arc.InjectableBean)>(v1);
return v2;
}
public java.lang.Iterable handles()
{
io.quarkus.arc.impl.InstanceImpl$1 v1;
io.quarkus.arc.impl.InstanceImpl v0;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = new io.quarkus.arc.impl.InstanceImpl$1;
specialinvoke v1.<io.quarkus.arc.impl.InstanceImpl$1: void <init>(io.quarkus.arc.impl.InstanceImpl)>(v0);
return v1;
}
private io.quarkus.arc.InstanceHandle getHandle(io.quarkus.arc.InjectableBean)
{
io.quarkus.arc.impl.InstanceImpl$2 v6;
io.quarkus.arc.InjectableBean v1;
io.quarkus.arc.impl.LazyInstanceHandle v4;
java.util.function.Consumer v10;
io.quarkus.arc.impl.InstanceImpl v0;
io.quarkus.arc.impl.CreationalContextImpl v2, v3, v5;
java.lang.Class v7, v8;
boolean v9;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: io.quarkus.arc.InjectableBean;
v2 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
v3 = virtualinvoke v2.<io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl child(jakarta.enterprise.context.spi.Contextual)>(v1);
v4 = new io.quarkus.arc.impl.LazyInstanceHandle;
v5 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
v6 = new io.quarkus.arc.impl.InstanceImpl$2;
specialinvoke v6.<io.quarkus.arc.impl.InstanceImpl$2: void <init>(io.quarkus.arc.impl.InstanceImpl,io.quarkus.arc.InjectableBean,io.quarkus.arc.impl.CreationalContextImpl)>(v0, v1, v3);
v7 = class "Ljakarta/enterprise/context/Dependent;";
v8 = interfaceinvoke v1.<io.quarkus.arc.InjectableBean: java.lang.Class getScope()>();
v9 = virtualinvoke v7.<java.lang.Object: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label1;
v10 = staticinvoke <io.quarkus.arc.impl.InstanceImpl$destroy__2604: java.util.function.Consumer bootstrap$(io.quarkus.arc.impl.InstanceImpl)>(v0);
goto label2;
label1:
v10 = null;
label2:
specialinvoke v4.<io.quarkus.arc.impl.LazyInstanceHandle: void <init>(io.quarkus.arc.InjectableBean,jakarta.enterprise.context.spi.CreationalContext,jakarta.enterprise.context.spi.CreationalContext,java.util.function.Supplier,java.util.function.Consumer)>(v1, v3, v5, v6, v10);
return v4;
}
private io.quarkus.arc.InjectableBean bean()
{
java.lang.Object[] v7;
java.lang.'annotation'.Annotation[] v6;
io.quarkus.arc.impl.ArcContainerImpl v3;
io.quarkus.arc.impl.InstanceImpl v0;
int v12;
java.lang.String v11, v14, v15;
boolean v2;
jakarta.enterprise.inject.UnsatisfiedResolutionException v8;
java.util.Iterator v16;
java.util.Set v10, v5;
jakarta.enterprise.inject.AmbiguousResolutionException v13;
java.util.List v1;
java.lang.reflect.Type v4, v9;
java.lang.Object v17;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List beans()>();
v2 = interfaceinvoke v1.<java.util.List: boolean isEmpty()>();
if v2 == 0 goto label1;
v3 = staticinvoke <io.quarkus.arc.impl.ArcContainerImpl: io.quarkus.arc.impl.ArcContainerImpl instance()>();
v4 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type requiredType>;
v5 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
v6 = newarray (java.lang.'annotation'.Annotation)[0];
v7 = interfaceinvoke v5.<java.util.Set: java.lang.Object[] toArray(java.lang.Object[])>(v6);
virtualinvoke v3.<io.quarkus.arc.impl.ArcContainerImpl: void scanRemovedBeans(java.lang.reflect.Type,java.lang.'annotation'.Annotation[])>(v4, v7);
v8 = new jakarta.enterprise.inject.UnsatisfiedResolutionException;
v9 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type requiredType>;
v10 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Type,java.util.Set)>(v9, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No bean found for required type [\u0001] and qualifiers [\u0001]");
specialinvoke v8.<jakarta.enterprise.inject.UnsatisfiedResolutionException: void <init>(java.lang.String)>(v11);
throw v8;
label1:
v12 = interfaceinvoke v1.<java.util.List: int size()>();
if v12 <= 1 goto label2;
v13 = new jakarta.enterprise.inject.AmbiguousResolutionException;
v14 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Beans: \u0001");
specialinvoke v13.<jakarta.enterprise.inject.AmbiguousResolutionException: void <init>(java.lang.String)>(v15);
throw v13;
label2:
v16 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
v17 = interfaceinvoke v16.<java.util.Iterator: java.lang.Object next()>();
return v17;
}
public boolean hasDependentInstances()
{
io.quarkus.arc.impl.CreationalContextImpl v1;
io.quarkus.arc.impl.InstanceImpl v0;
boolean v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
v2 = virtualinvoke v1.<io.quarkus.arc.impl.CreationalContextImpl: boolean hasDependentInstances()>();
return v2;
}
public void clearCache()
{
io.quarkus.arc.impl.LazyValue v1, v4;
io.quarkus.arc.impl.InstanceImpl v0;
io.quarkus.arc.impl.CreationalContextImpl v3;
boolean v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.LazyValue cachedGetResult>;
v2 = virtualinvoke v1.<io.quarkus.arc.impl.LazyValue: boolean isSet()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
virtualinvoke v3.<io.quarkus.arc.impl.CreationalContextImpl: void release()>();
v4 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.LazyValue cachedGetResult>;
virtualinvoke v4.<io.quarkus.arc.impl.LazyValue: void clear()>();
label1:
return;
}
public java.lang.Object getInternal()
{
io.quarkus.arc.InjectableBean v1;
java.lang.Object v2;
io.quarkus.arc.impl.InstanceImpl v0;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.InjectableBean bean()>();
v2 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.Object getBeanInstance(io.quarkus.arc.InjectableBean)>(v1);
return v2;
}
void destroy()
{
io.quarkus.arc.impl.CreationalContextImpl v1;
io.quarkus.arc.impl.InstanceImpl v0;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
virtualinvoke v1.<io.quarkus.arc.impl.CreationalContextImpl: void release()>();
return;
}
private java.lang.Object getBeanInstance(io.quarkus.arc.InjectableBean)
{
java.lang.Throwable v17;
io.quarkus.arc.impl.InstanceImpl v0;
int v13;
io.quarkus.arc.impl.CreationalContextImpl v2, v3;
boolean v14, v16, v18, v5;
jakarta.enterprise.inject.spi.InjectionPoint v4;
java.lang.reflect.Member v12;
io.quarkus.arc.InjectableBean v1, v10;
java.util.Set v11, v9;
io.quarkus.arc.impl.InjectionPointImpl v6;
java.lang.reflect.Type v7, v8;
java.lang.Object v15;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: io.quarkus.arc.InjectableBean;
v2 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.impl.CreationalContextImpl creationalContext>;
v3 = virtualinvoke v2.<io.quarkus.arc.impl.CreationalContextImpl: io.quarkus.arc.impl.CreationalContextImpl child(jakarta.enterprise.context.spi.Contextual)>(v1);
v4 = null;
v5 = v0.<io.quarkus.arc.impl.InstanceImpl: boolean resetCurrentInjectionPoint>;
if v5 == 0 goto label1;
v6 = new io.quarkus.arc.impl.InjectionPointImpl;
v7 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type injectionPointType>;
v8 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type requiredType>;
v9 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
v10 = v0.<io.quarkus.arc.impl.InstanceImpl: io.quarkus.arc.InjectableBean targetBean>;
v11 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set annotations>;
v12 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Member javaMember>;
v13 = v0.<io.quarkus.arc.impl.InstanceImpl: int position>;
v14 = v0.<io.quarkus.arc.impl.InstanceImpl: boolean isTransient>;
specialinvoke v6.<io.quarkus.arc.impl.InjectionPointImpl: void <init>(java.lang.reflect.Type,java.lang.reflect.Type,java.util.Set,io.quarkus.arc.InjectableBean,java.util.Set,java.lang.reflect.Member,int,boolean)>(v7, v8, v9, v10, v11, v12, v13, v14);
v4 = staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v6);
label1:
v15 = interfaceinvoke v1.<io.quarkus.arc.InjectableBean: java.lang.Object get(jakarta.enterprise.context.spi.CreationalContext)>(v3);
label2:
v16 = v0.<io.quarkus.arc.impl.InstanceImpl: boolean resetCurrentInjectionPoint>;
if v16 == 0 goto label5;
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v4);
goto label5;
label3:
v17 := @caughtexception;
v18 = v0.<io.quarkus.arc.impl.InstanceImpl: boolean resetCurrentInjectionPoint>;
if v18 == 0 goto label4;
staticinvoke <io.quarkus.arc.impl.InjectionPointProvider: jakarta.enterprise.inject.spi.InjectionPoint set(jakarta.enterprise.inject.spi.InjectionPoint)>(v4);
label4:
throw v17;
label5:
return v15;
catch java.lang.Throwable from label1 to label2 with label3;
}
private java.util.List beans()
{
java.util.List v1, v2;
io.quarkus.arc.impl.InstanceImpl v0;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List resolvedBeans>;
if v1 == null goto label1;
v2 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List resolvedBeans>;
goto label2;
label1:
v2 = specialinvoke v0.<io.quarkus.arc.impl.InstanceImpl: java.util.List resolve()>();
label2:
return v2;
}
private java.util.List resolve()
{
java.util.List v3;
io.quarkus.arc.impl.InstanceImpl v0;
java.lang.reflect.Type v1;
java.util.Set v2;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 = v0.<io.quarkus.arc.impl.InstanceImpl: java.lang.reflect.Type requiredType>;
v2 = v0.<io.quarkus.arc.impl.InstanceImpl: java.util.Set requiredQualifiers>;
v3 = staticinvoke <io.quarkus.arc.impl.Instances: java.util.List resolveBeans(java.lang.reflect.Type,java.util.Set)>(v1, v2);
return v3;
}
private static java.lang.reflect.Type getRequiredType(java.lang.reflect.Type)
{
java.lang.IllegalArgumentException v9;
java.lang.reflect.ParameterizedType v2;
java.lang.reflect.Type v0, v4, v8;
java.lang.reflect.Type[] v7;
java.lang.Class v3, v5;
java.lang.String v10;
boolean v1, v6;
v0 := @parameter0: java.lang.reflect.Type;
v1 = staticinvoke <io.quarkus.arc.impl.TypeCachePollutionUtils: boolean isParameterizedType(java.lang.Object)>(v0);
if v1 == 0 goto label1;
v2 = staticinvoke <io.quarkus.arc.impl.TypeCachePollutionUtils: java.lang.reflect.ParameterizedType asParameterizedType(java.lang.Object)>(v0);
v3 = class "Ljakarta/inject/Provider;";
v4 = interfaceinvoke v2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v5 = staticinvoke <io.quarkus.arc.impl.Types: java.lang.Class getRawType(java.lang.reflect.Type)>(v4);
v6 = virtualinvoke v3.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v5);
if v6 == 0 goto label1;
v7 = interfaceinvoke v2.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type[] getActualTypeArguments()>();
v8 = v7[0];
return v8;
label1:
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Type)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Not a valid type: \u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
}
private boolean isGetCached(java.util.Set)
{
io.quarkus.arc.impl.InstanceImpl v0;
java.util.Iterator v2;
java.util.Set v1;
java.lang.Class v5;
java.lang.Object v4;
boolean v3, v6;
v0 := @this: io.quarkus.arc.impl.InstanceImpl;
v1 := @parameter0: java.util.Set;
v2 = interfaceinvoke v1.<java.util.Set: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v6 = virtualinvoke v5.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lio/quarkus/arc/WithCaching;");
if v6 == 0 goto label1;
return 1;
label2:
return 0;
}
}