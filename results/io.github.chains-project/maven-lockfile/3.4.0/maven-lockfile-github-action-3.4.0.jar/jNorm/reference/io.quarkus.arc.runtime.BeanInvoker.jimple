public interface  io.quarkus.arc.runtime.BeanInvoker extends java.lang.Object
{
public void invoke(java.lang.Object) throws java.lang.Exception
{
java.lang.Throwable v5;
io.quarkus.arc.ManagedContext v3;
io.quarkus.arc.runtime.BeanInvoker v0;
io.quarkus.arc.ArcContainer v2;
java.lang.Object v1;
boolean v4;
v0 := @this: io.quarkus.arc.runtime.BeanInvoker;
v1 := @parameter0: java.lang.Object;
v2 = staticinvoke <io.quarkus.arc.Arc: io.quarkus.arc.ArcContainer container()>();
v3 = interfaceinvoke v2.<io.quarkus.arc.ArcContainer: io.quarkus.arc.ManagedContext requestContext()>();
v4 = interfaceinvoke v3.<io.quarkus.arc.ManagedContext: boolean isActive()>();
if v4 == 0 goto label1;
interfaceinvoke v0.<io.quarkus.arc.runtime.BeanInvoker: void invokeBean(java.lang.Object)>(v1);
goto label4;
label1:
interfaceinvoke v3.<io.quarkus.arc.ManagedContext: void activate()>();
interfaceinvoke v0.<io.quarkus.arc.runtime.BeanInvoker: void invokeBean(java.lang.Object)>(v1);
label2:
interfaceinvoke v3.<io.quarkus.arc.ManagedContext: void terminate()>();
goto label4;
label3:
v5 := @caughtexception;
interfaceinvoke v3.<io.quarkus.arc.ManagedContext: void terminate()>();
throw v5;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public abstract void invokeBean(java.lang.Object) throws java.lang.Exception;
}