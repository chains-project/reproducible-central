public class io.quarkus.arc.runtime.devui.ArcJsonRPCService extends java.lang.Object
{
jakarta.enterprise.inject.Instance eventsMonitor;
jakarta.enterprise.inject.Instance invocationsMonitor;
public void <init>()
{
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.mutiny.Multi streamEvents()
{
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
io.smallrye.mutiny.groups.MultiCreate v6;
java.lang.Object v4;
jakarta.enterprise.inject.Instance v1, v3;
io.smallrye.mutiny.Multi v5;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
v5 = virtualinvoke v4.<io.quarkus.arc.runtime.devmode.EventsMonitor: io.smallrye.mutiny.Multi streamEvents()>();
goto label2;
label1:
v6 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v5 = virtualinvoke v6.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi empty()>();
label2:
return v5;
}
public io.smallrye.mutiny.Multi streamSkipContextEvents()
{
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
io.smallrye.mutiny.groups.MultiCreate v6;
java.lang.Object v4;
jakarta.enterprise.inject.Instance v1, v3;
io.smallrye.mutiny.Multi v5;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
v5 = virtualinvoke v4.<io.quarkus.arc.runtime.devmode.EventsMonitor: io.smallrye.mutiny.Multi streamSkipContextEvents()>();
goto label2;
label1:
v6 = staticinvoke <io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiCreate createFrom()>();
v5 = virtualinvoke v6.<io.smallrye.mutiny.groups.MultiCreate: io.smallrye.mutiny.Multi empty()>();
label2:
return v5;
}
public java.util.List getLastEvents()
{
java.util.List v5, v6;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.lang.Object v4;
jakarta.enterprise.inject.Instance v1, v3;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
v5 = virtualinvoke v4.<io.quarkus.arc.runtime.devmode.EventsMonitor: java.util.List getLastEvents()>();
return v5;
label1:
v6 = staticinvoke <java.util.List: java.util.List of()>();
return v6;
}
public java.util.List clearLastEvents()
{
java.util.List v5, v6;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.lang.Object v4;
jakarta.enterprise.inject.Instance v1, v3;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
virtualinvoke v4.<io.quarkus.arc.runtime.devmode.EventsMonitor: void clear()>();
v5 = virtualinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: java.util.List getLastEvents()>();
return v5;
label1:
v6 = staticinvoke <java.util.List: java.util.List of()>();
return v6;
}
public java.util.List toggleSkipContextEvents()
{
java.util.List v5, v6;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.lang.Object v4;
jakarta.enterprise.inject.Instance v1, v3;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance eventsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
virtualinvoke v4.<io.quarkus.arc.runtime.devmode.EventsMonitor: void toggleSkipContextEvents()>();
v5 = virtualinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: java.util.List getLastEvents()>();
return v5;
label1:
v6 = staticinvoke <java.util.List: java.util.List of()>();
return v6;
}
public java.util.List getLastInvocations()
{
jakarta.enterprise.inject.Instance v1, v3;
java.util.List v5, v6, v7;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.lang.Object v4;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance invocationsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance invocationsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
v5 = virtualinvoke v4.<io.quarkus.arc.runtime.devconsole.InvocationsMonitor: java.util.List getLastInvocations()>();
v6 = specialinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: java.util.List toInvocationInfos(java.util.List)>(v5);
return v6;
label1:
v7 = staticinvoke <java.util.List: java.util.List of()>();
return v7;
}
public java.util.List clearLastInvocations()
{
java.util.List v5, v6;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.lang.Object v4;
jakarta.enterprise.inject.Instance v1, v3;
boolean v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance invocationsMonitor>;
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.Instance: boolean isResolvable()>();
if v2 == 0 goto label1;
v3 = v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: jakarta.enterprise.inject.Instance invocationsMonitor>;
v4 = interfaceinvoke v3.<jakarta.enterprise.inject.Instance: java.lang.Object get()>();
virtualinvoke v4.<io.quarkus.arc.runtime.devconsole.InvocationsMonitor: void clear()>();
v5 = virtualinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: java.util.List getLastInvocations()>();
return v5;
label1:
v6 = staticinvoke <java.util.List: java.util.List of()>();
return v6;
}
private java.util.List toInvocationInfos(java.util.List)
{
java.util.List v1;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.util.Iterator v3;
io.quarkus.arc.runtime.devmode.InvocationInfo v6;
java.lang.Object v5;
boolean v4;
java.util.ArrayList v2;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 := @parameter0: java.util.List;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = specialinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: io.quarkus.arc.runtime.devmode.InvocationInfo toInvocationInfo(io.quarkus.arc.runtime.devconsole.Invocation)>(v5);
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v6);
goto label1;
label2:
return v2;
}
private io.quarkus.arc.runtime.devmode.InvocationInfo toInvocationInfo(io.quarkus.arc.runtime.devconsole.Invocation)
{
java.time.LocalDateTime v6;
io.quarkus.arc.runtime.devmode.InvocationInfo v2;
long v12, v3;
java.lang.String v10, v11, v14, v7, v8;
java.lang.reflect.Method v9;
boolean v17;
io.quarkus.arc.runtime.devconsole.Invocation v1;
io.quarkus.arc.runtime.devconsole.Invocation$Kind v13;
java.time.Instant v4;
java.time.ZoneId v5;
java.util.List v15, v16;
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 := @parameter0: io.quarkus.arc.runtime.devconsole.Invocation;
v2 = new io.quarkus.arc.runtime.devmode.InvocationInfo;
specialinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void <init>()>();
v3 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: long getStart()>();
v4 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(v3);
v5 = staticinvoke <java.time.ZoneId: java.time.ZoneId systemDefault()>();
v6 = staticinvoke <java.time.LocalDateTime: java.time.LocalDateTime ofInstant(java.time.Instant,java.time.ZoneId)>(v4, v5);
v7 = specialinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: java.lang.String timeString(java.time.LocalDateTime)>(v6);
virtualinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void setStartTime(java.lang.String)>(v7);
v8 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: java.lang.String getDeclaringClassName()>();
v9 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: java.lang.reflect.Method getMethod()>();
v10 = virtualinvoke v9.<java.lang.reflect.Method: java.lang.String getName()>();
v11 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v8, v10) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001#\u0001");
virtualinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void setMethodName(java.lang.String)>(v11);
v12 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: long getDurationMillis()>();
virtualinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void setDuration(long)>(v12);
v13 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: io.quarkus.arc.runtime.devconsole.Invocation$Kind getKind()>();
v14 = virtualinvoke v13.<io.quarkus.arc.runtime.devconsole.Invocation$Kind: java.lang.String toString()>();
virtualinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void setKind(java.lang.String)>(v14);
v15 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: java.util.List getChildren()>();
v16 = specialinvoke v0.<io.quarkus.arc.runtime.devui.ArcJsonRPCService: java.util.List toInvocationInfos(java.util.List)>(v15);
virtualinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void setChildren(java.util.List)>(v16);
v17 = virtualinvoke v1.<io.quarkus.arc.runtime.devconsole.Invocation: boolean isQuarkusBean()>();
virtualinvoke v2.<io.quarkus.arc.runtime.devmode.InvocationInfo: void setQuarkusBean(boolean)>(v17);
return v2;
}
private java.lang.String timeString(java.time.LocalDateTime)
{
io.quarkus.arc.runtime.devui.ArcJsonRPCService v0;
java.time.format.DateTimeFormatter v2;
int v5;
java.time.LocalDateTime v1;
java.lang.String v3, v4, v6;
v0 := @this: io.quarkus.arc.runtime.devui.ArcJsonRPCService;
v1 := @parameter0: java.time.LocalDateTime;
v2 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_LOCAL_DATE_TIME>;
v3 = virtualinvoke v1.<java.time.LocalDateTime: java.lang.String format(java.time.format.DateTimeFormatter)>(v2);
v4 = virtualinvoke v3.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("T", " ");
v5 = virtualinvoke v4.<java.lang.String: int lastIndexOf(java.lang.String)>(".");
v6 = virtualinvoke v4.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
return v6;
}
}