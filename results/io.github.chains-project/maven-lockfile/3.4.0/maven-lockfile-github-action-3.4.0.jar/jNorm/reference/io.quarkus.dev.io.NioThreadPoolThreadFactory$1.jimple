class io.quarkus.dev.io.NioThreadPoolThreadFactory$1 extends java.lang.Object implements java.lang.Runnable
{
final java.lang.Runnable val$r;
final java.util.concurrent.atomic.AtomicReference val$t;
final io.quarkus.dev.io.NioThreadPoolThreadFactory this$0;
void <init>(io.quarkus.dev.io.NioThreadPoolThreadFactory, java.lang.Runnable, java.util.concurrent.atomic.AtomicReference)
{
io.quarkus.dev.io.NioThreadPoolThreadFactory v1;
java.lang.Runnable v2;
java.util.concurrent.atomic.AtomicReference v3;
io.quarkus.dev.io.NioThreadPoolThreadFactory$1 v0;
v0 := @this: io.quarkus.dev.io.NioThreadPoolThreadFactory$1;
v1 := @parameter0: io.quarkus.dev.io.NioThreadPoolThreadFactory;
v2 := @parameter1: java.lang.Runnable;
v3 := @parameter2: java.util.concurrent.atomic.AtomicReference;
v0.<io.quarkus.dev.io.NioThreadPoolThreadFactory$1: io.quarkus.dev.io.NioThreadPoolThreadFactory this$0> = v1;
v0.<io.quarkus.dev.io.NioThreadPoolThreadFactory$1: java.lang.Runnable val$r> = v2;
v0.<io.quarkus.dev.io.NioThreadPoolThreadFactory$1: java.util.concurrent.atomic.AtomicReference val$t> = v3;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.lang.Throwable v5;
java.lang.Runnable v1;
java.util.concurrent.atomic.AtomicReference v3, v7;
java.lang.Object v4, v8;
io.quarkus.dev.io.NioThreadPoolThreadFactory$1 v0;
java.util.concurrent.CopyOnWriteArrayList v2, v6;
v0 := @this: io.quarkus.dev.io.NioThreadPoolThreadFactory$1;
label1:
v1 = v0.<io.quarkus.dev.io.NioThreadPoolThreadFactory$1: java.lang.Runnable val$r>;
interfaceinvoke v1.<java.lang.Runnable: void run()>();
label2:
v2 = <io.quarkus.dev.io.NioThreadPoolThreadFactory: java.util.concurrent.CopyOnWriteArrayList allThreads>;
v3 = v0.<io.quarkus.dev.io.NioThreadPoolThreadFactory$1: java.util.concurrent.atomic.AtomicReference val$t>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
virtualinvoke v2.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(v4);
goto label4;
label3:
v5 := @caughtexception;
v6 = <io.quarkus.dev.io.NioThreadPoolThreadFactory: java.util.concurrent.CopyOnWriteArrayList allThreads>;
v7 = v0.<io.quarkus.dev.io.NioThreadPoolThreadFactory$1: java.util.concurrent.atomic.AtomicReference val$t>;
v8 = virtualinvoke v7.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
virtualinvoke v6.<java.util.concurrent.CopyOnWriteArrayList: boolean remove(java.lang.Object)>(v8);
throw v5;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}