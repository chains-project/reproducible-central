public abstract class io.quarkus.fs.util.base.DelegatingPath extends java.lang.Object implements java.nio.file.Path
{
protected final java.nio.file.Path delegate;
private volatile java.net.URI uri;
protected void <init>(java.nio.file.Path)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate> = v1;
return;
}
public static java.nio.file.Path unwrap(java.nio.file.Path)
{
java.nio.file.Path v0, v2;
boolean v1;
v0 := @parameter0: java.nio.file.Path;
v1 = v0 instanceof io.quarkus.fs.util.base.DelegatingPath;
if v1 == 0 goto label1;
v2 = virtualinvoke v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path getDelegate()>();
return v2;
label1:
return v0;
}
public java.nio.file.Path getDelegate()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
return v1;
}
public boolean startsWith(java.lang.String)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.lang.String v1;
java.nio.file.Path v2;
boolean v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: boolean startsWith(java.lang.String)>(v1);
return v3;
}
public boolean endsWith(java.lang.String)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.lang.String v1;
java.nio.file.Path v2;
boolean v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: boolean endsWith(java.lang.String)>(v1);
return v3;
}
public java.nio.file.Path resolve(java.lang.String)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.lang.String v1;
java.nio.file.Path v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path resolve(java.lang.String)>(v1);
return v3;
}
public java.nio.file.Path resolveSibling(java.nio.file.Path)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path resolveSibling(java.nio.file.Path)>(v1);
return v3;
}
public java.nio.file.Path resolveSibling(java.lang.String)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.lang.String v1;
java.nio.file.Path v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path resolveSibling(java.lang.String)>(v1);
return v3;
}
public java.io.File toFile()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1;
java.io.File v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.io.File toFile()>();
return v2;
}
public transient java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind[]) throws java.io.IOException
{
java.nio.file.WatchKey v4;
java.nio.file.WatchService v1;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.WatchEvent$Kind[] v2;
java.nio.file.Path v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.WatchService;
v2 := @parameter1: java.nio.file.WatchEvent$Kind[];
v3 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v4 = interfaceinvoke v3.<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent$Kind[])>(v1, v2);
return v4;
}
public java.util.Iterator iterator()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.util.Iterator v2;
java.nio.file.Path v1;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.util.Iterator iterator()>();
return v2;
}
public java.nio.file.FileSystem getFileSystem()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.FileSystem v2;
java.nio.file.Path v1;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();
return v2;
}
public boolean isAbsolute()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1;
boolean v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: boolean isAbsolute()>();
return v2;
}
public java.nio.file.Path getRoot()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path getRoot()>();
return v2;
}
public java.nio.file.Path getFileName()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path getFileName()>();
return v2;
}
public java.nio.file.Path getParent()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path getParent()>();
return v2;
}
public int getNameCount()
{
int v2;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: int getNameCount()>();
return v2;
}
public java.nio.file.Path getName(int)
{
int v1;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: int;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path getName(int)>(v1);
return v3;
}
public java.nio.file.Path subpath(int, int)
{
int v1, v2;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v3, v4;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v4 = interfaceinvoke v3.<java.nio.file.Path: java.nio.file.Path subpath(int,int)>(v1, v2);
return v4;
}
public boolean startsWith(java.nio.file.Path)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
boolean v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: boolean startsWith(java.nio.file.Path)>(v1);
return v3;
}
public boolean endsWith(java.nio.file.Path)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
boolean v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: boolean endsWith(java.nio.file.Path)>(v1);
return v3;
}
public java.nio.file.Path normalize()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path normalize()>();
return v2;
}
public java.nio.file.Path resolve(java.nio.file.Path)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path resolve(java.nio.file.Path)>(v1);
return v3;
}
public java.nio.file.Path relativize(java.nio.file.Path)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path relativize(java.nio.file.Path)>(v1);
return v3;
}
public java.net.URI toUri()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.net.URI v1, v3, v4;
java.nio.file.Path v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.net.URI uri>;
if v1 != null goto label1;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.net.URI toUri()>();
v0.<io.quarkus.fs.util.base.DelegatingPath: java.net.URI uri> = v3;
label1:
v4 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.net.URI uri>;
return v4;
}
public java.nio.file.Path toAbsolutePath()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path toAbsolutePath()>();
return v2;
}
public transient java.nio.file.Path toRealPath(java.nio.file.LinkOption[]) throws java.io.IOException
{
java.nio.file.LinkOption[] v1;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v2, v3;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.LinkOption[];
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: java.nio.file.Path toRealPath(java.nio.file.LinkOption[])>(v1);
return v3;
}
public transient java.nio.file.WatchKey register(java.nio.file.WatchService, java.nio.file.WatchEvent$Kind[], java.nio.file.WatchEvent$Modifier[]) throws java.io.IOException
{
java.nio.file.WatchKey v5;
java.nio.file.WatchService v1;
java.nio.file.WatchEvent$Modifier[] v3;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.WatchEvent$Kind[] v2;
java.nio.file.Path v4;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.WatchService;
v2 := @parameter1: java.nio.file.WatchEvent$Kind[];
v3 := @parameter2: java.nio.file.WatchEvent$Modifier[];
v4 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v5 = interfaceinvoke v4.<java.nio.file.Path: java.nio.file.WatchKey register(java.nio.file.WatchService,java.nio.file.WatchEvent$Kind[],java.nio.file.WatchEvent$Modifier[])>(v1, v2, v3);
return v5;
}
public int compareTo(java.nio.file.Path)
{
int v3;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1, v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.nio.file.Path;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v3 = interfaceinvoke v2.<java.nio.file.Path: int compareTo(java.nio.file.Path)>(v1);
return v3;
}
public java.lang.String toString()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.lang.String v2;
java.nio.file.Path v1;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.lang.String toString()>();
return v2;
}
public void forEach(java.util.function.Consumer)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.util.function.Consumer v1;
java.nio.file.Path v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.util.function.Consumer;
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
interfaceinvoke v2.<java.nio.file.Path: void forEach(java.util.function.Consumer)>(v1);
return;
}
public java.util.Spliterator spliterator()
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v1;
java.util.Spliterator v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v2 = interfaceinvoke v1.<java.nio.file.Path: java.util.Spliterator spliterator()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.quarkus.fs.util.base.DelegatingPath v0;
java.lang.Class v2, v3;
java.lang.Object v1;
java.nio.file.Path v4, v5;
boolean v6;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v5 = v1.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
return v6;
}
public int hashCode()
{
java.lang.Object[] v1;
int v3;
io.quarkus.fs.util.base.DelegatingPath v0;
java.nio.file.Path v2;
v0 := @this: io.quarkus.fs.util.base.DelegatingPath;
v1 = newarray (java.lang.Object)[1];
v2 = v0.<io.quarkus.fs.util.base.DelegatingPath: java.nio.file.Path delegate>;
v1[0] = v2;
v3 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v3;
}
}