class io.quarkus.jackson.runtime.MixinsRecorder$1$1 extends java.lang.Object implements io.quarkus.jackson.ObjectMapperCustomizer
{
final io.quarkus.jackson.runtime.MixinsRecorder$1 this$1;
void <init>(io.quarkus.jackson.runtime.MixinsRecorder$1)
{
io.quarkus.jackson.runtime.MixinsRecorder$1$1 v0;
io.quarkus.jackson.runtime.MixinsRecorder$1 v1;
v0 := @this: io.quarkus.jackson.runtime.MixinsRecorder$1$1;
v1 := @parameter0: io.quarkus.jackson.runtime.MixinsRecorder$1;
v0.<io.quarkus.jackson.runtime.MixinsRecorder$1$1: io.quarkus.jackson.runtime.MixinsRecorder$1 this$1> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void customize(com.fasterxml.jackson.databind.ObjectMapper)
{
io.quarkus.jackson.runtime.MixinsRecorder$1$1 v0;
java.util.Iterator v5;
com.fasterxml.jackson.databind.ObjectMapper v1;
java.util.Set v4;
io.quarkus.jackson.runtime.MixinsRecorder$1 v2;
java.util.Map v3;
java.lang.Object v7, v8, v9;
boolean v6;
v0 := @this: io.quarkus.jackson.runtime.MixinsRecorder$1$1;
v1 := @parameter0: com.fasterxml.jackson.databind.ObjectMapper;
v2 = v0.<io.quarkus.jackson.runtime.MixinsRecorder$1$1: io.quarkus.jackson.runtime.MixinsRecorder$1 this$1>;
v3 = v2.<io.quarkus.jackson.runtime.MixinsRecorder$1: java.util.Map val$mixinsMap>;
v4 = interfaceinvoke v3.<java.util.Map: java.util.Set entrySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = interfaceinvoke v7.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<com.fasterxml.jackson.databind.ObjectMapper: com.fasterxml.jackson.databind.ObjectMapper addMixIn(java.lang.Class,java.lang.Class)>(v8, v9);
goto label1;
label2:
return;
}
public int priority()
{
io.quarkus.jackson.runtime.MixinsRecorder$1$1 v0;
v0 := @this: io.quarkus.jackson.runtime.MixinsRecorder$1$1;
return 1;
}
}