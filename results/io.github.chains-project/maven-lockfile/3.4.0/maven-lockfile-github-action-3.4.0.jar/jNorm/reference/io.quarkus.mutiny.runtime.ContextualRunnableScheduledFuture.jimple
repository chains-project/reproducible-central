class io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture extends java.lang.Object implements java.util.concurrent.RunnableScheduledFuture
{
private final java.util.concurrent.RunnableScheduledFuture runnable;
private final java.lang.Object context;
private final org.jboss.threads.ContextHandler contextHandler;
public void <init>(org.jboss.threads.ContextHandler, java.lang.Object, java.util.concurrent.RunnableScheduledFuture)
{
java.util.concurrent.RunnableScheduledFuture v3;
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
java.lang.Object v2;
org.jboss.threads.ContextHandler v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 := @parameter0: org.jboss.threads.ContextHandler;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.util.concurrent.RunnableScheduledFuture;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: org.jboss.threads.ContextHandler contextHandler> = v1;
v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.lang.Object context> = v2;
v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable> = v3;
return;
}
public boolean isPeriodic()
{
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
boolean v2;
java.util.concurrent.RunnableScheduledFuture v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v2 = interfaceinvoke v1.<java.util.concurrent.RunnableScheduledFuture: boolean isPeriodic()>();
return v2;
}
public long getDelay(java.util.concurrent.TimeUnit)
{
java.util.concurrent.TimeUnit v1;
java.util.concurrent.RunnableScheduledFuture v2;
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
long v3;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v2 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v3 = interfaceinvoke v2.<java.util.concurrent.RunnableScheduledFuture: long getDelay(java.util.concurrent.TimeUnit)>(v1);
return v3;
}
public int compareTo(java.util.concurrent.Delayed)
{
java.util.concurrent.RunnableScheduledFuture v2;
int v3;
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
java.util.concurrent.Delayed v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 := @parameter0: java.util.concurrent.Delayed;
v2 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v3 = interfaceinvoke v2.<java.util.concurrent.RunnableScheduledFuture: int compareTo(java.lang.Object)>(v1);
return v3;
}
public void run()
{
java.util.concurrent.RunnableScheduledFuture v3, v5;
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
java.lang.Object v4;
org.jboss.threads.ContextHandler v1, v2;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: org.jboss.threads.ContextHandler contextHandler>;
if v1 == null goto label1;
v2 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: org.jboss.threads.ContextHandler contextHandler>;
v3 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v4 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.lang.Object context>;
interfaceinvoke v2.<org.jboss.threads.ContextHandler: void runWith(java.lang.Runnable,java.lang.Object)>(v3, v4);
goto label2;
label1:
v5 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
interfaceinvoke v5.<java.util.concurrent.RunnableScheduledFuture: void run()>();
label2:
return;
}
public boolean cancel(boolean)
{
java.util.concurrent.RunnableScheduledFuture v2;
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
boolean v1, v3;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 := @parameter0: boolean;
v2 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v3 = interfaceinvoke v2.<java.util.concurrent.RunnableScheduledFuture: boolean cancel(boolean)>(v1);
return v3;
}
public boolean isCancelled()
{
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
boolean v2;
java.util.concurrent.RunnableScheduledFuture v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v2 = interfaceinvoke v1.<java.util.concurrent.RunnableScheduledFuture: boolean isCancelled()>();
return v2;
}
public boolean isDone()
{
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
boolean v2;
java.util.concurrent.RunnableScheduledFuture v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v2 = interfaceinvoke v1.<java.util.concurrent.RunnableScheduledFuture: boolean isDone()>();
return v2;
}
public java.lang.Object get() throws java.lang.InterruptedException, java.util.concurrent.ExecutionException
{
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
java.lang.Object v2;
java.util.concurrent.RunnableScheduledFuture v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v2 = interfaceinvoke v1.<java.util.concurrent.RunnableScheduledFuture: java.lang.Object get()>();
return v2;
}
public java.lang.Object get(long, java.util.concurrent.TimeUnit) throws java.lang.InterruptedException, java.util.concurrent.ExecutionException, java.util.concurrent.TimeoutException
{
java.util.concurrent.TimeUnit v2;
java.util.concurrent.RunnableScheduledFuture v3;
io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture v0;
java.lang.Object v4;
long v1;
v0 := @this: io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture;
v1 := @parameter0: long;
v2 := @parameter1: java.util.concurrent.TimeUnit;
v3 = v0.<io.quarkus.mutiny.runtime.ContextualRunnableScheduledFuture: java.util.concurrent.RunnableScheduledFuture runnable>;
v4 = interfaceinvoke v3.<java.util.concurrent.RunnableScheduledFuture: java.lang.Object get(long,java.util.concurrent.TimeUnit)>(v1, v2);
return v4;
}
}