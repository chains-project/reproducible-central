public class io.quarkus.runtime.BlockingOperationControl extends java.lang.Object
{
private static volatile io.quarkus.runtime.IOThreadDetector[] ioThreadDetectors;
public void <init>()
{
io.quarkus.runtime.BlockingOperationControl v0;
v0 := @this: io.quarkus.runtime.BlockingOperationControl;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void setIoThreadDetector(io.quarkus.runtime.IOThreadDetector[])
{
io.quarkus.runtime.IOThreadDetector[] v0;
v0 := @parameter0: io.quarkus.runtime.IOThreadDetector[];
<io.quarkus.runtime.BlockingOperationControl: io.quarkus.runtime.IOThreadDetector[] ioThreadDetectors> = v0;
return;
}
public static boolean isBlockingAllowed()
{
int v1, v2;
io.quarkus.runtime.IOThreadDetector v3;
io.quarkus.runtime.IOThreadDetector[] v0;
boolean v4;
v0 = <io.quarkus.runtime.BlockingOperationControl: io.quarkus.runtime.IOThreadDetector[] ioThreadDetectors>;
v1 = lengthof v0;
v2 = 0;
label1:
if v2 >= v1 goto label3;
v3 = v0[v2];
v4 = interfaceinvoke v3.<io.quarkus.runtime.IOThreadDetector: boolean isInIOThread()>();
if v4 == 0 goto label2;
return 0;
label2:
v2 = v2 + 1;
goto label1;
label3:
return 1;
}
}