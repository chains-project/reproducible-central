class io.quarkus.runtime.ExecutorRecorder$2 extends java.lang.Object implements java.lang.Runnable
{
final org.jboss.threads.EnhancedQueueExecutor val$executor;
final io.quarkus.runtime.ThreadPoolConfig val$threadPoolConfig;
void <init>(org.jboss.threads.EnhancedQueueExecutor, io.quarkus.runtime.ThreadPoolConfig)
{
org.jboss.threads.EnhancedQueueExecutor v1;
io.quarkus.runtime.ExecutorRecorder$2 v0;
io.quarkus.runtime.ThreadPoolConfig v2;
v0 := @this: io.quarkus.runtime.ExecutorRecorder$2;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor;
v2 := @parameter1: io.quarkus.runtime.ThreadPoolConfig;
v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor> = v1;
v0.<io.quarkus.runtime.ExecutorRecorder$2: io.quarkus.runtime.ThreadPoolConfig val$threadPoolConfig> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.lang.Integer v19, v37, v40, v44, v52, v53;
byte v29, v31, v45;
java.lang.Long v20, v21, v22;
java.lang.Thread v57;
java.time.Duration v12, v3, v7;
java.lang.Throwable v67;
java.lang.Object[] v17;
org.jboss.threads.EnhancedQueueExecutor v1, v23, v30, v32, v38, v42, v46, v48, v70;
long v10, v13, v14, v24, v27, v28, v6, v9;
java.lang.StackTraceElement v61, v64;
java.lang.String v62, v65, v69;
io.quarkus.runtime.ThreadPoolConfig v11, v2, v4;
boolean v26, v34, v63, v66;
java.util.List v33;
java.lang.StackTraceElement[] v58;
java.util.Optional v5;
org.jboss.logging.Logger v16, v35, v41, v50, v68;
int v15, v18, v36, v39, v43, v47, v51, v54, v55, v56, v59, v60;
io.quarkus.runtime.ExecutorRecorder$2 v0;
java.lang.Thread[] v49;
java.util.concurrent.TimeUnit v25;
java.lang.InterruptedException v71;
java.lang.Object v8;
v0 := @this: io.quarkus.runtime.ExecutorRecorder$2;
v1 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
virtualinvoke v1.<org.jboss.threads.EnhancedQueueExecutor: void shutdown()>();
v2 = v0.<io.quarkus.runtime.ExecutorRecorder$2: io.quarkus.runtime.ThreadPoolConfig val$threadPoolConfig>;
v3 = v2.<io.quarkus.runtime.ThreadPoolConfig: java.time.Duration shutdownTimeout>;
v4 = v0.<io.quarkus.runtime.ExecutorRecorder$2: io.quarkus.runtime.ThreadPoolConfig val$threadPoolConfig>;
v5 = v4.<io.quarkus.runtime.ThreadPoolConfig: java.util.Optional shutdownCheckInterval>;
v6 = virtualinvoke v3.<java.time.Duration: long toNanos()>();
v7 = staticinvoke <java.time.Duration: java.time.Duration ofNanos(long)>(9223372036854775807L);
v8 = virtualinvoke v5.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v7);
v9 = virtualinvoke v8.<java.time.Duration: long toNanos()>();
v10 = v9;
v11 = v0.<io.quarkus.runtime.ExecutorRecorder$2: io.quarkus.runtime.ThreadPoolConfig val$threadPoolConfig>;
v12 = v11.<io.quarkus.runtime.ThreadPoolConfig: java.time.Duration shutdownInterrupt>;
v13 = virtualinvoke v12.<java.time.Duration: long toNanos()>();
v14 = staticinvoke <java.lang.System: long nanoTime()>();
v15 = 1;
label01:
v16 = <io.quarkus.runtime.ExecutorRecorder: org.jboss.logging.Logger log>;
v17 = newarray (java.lang.Object)[4];
v18 = v15;
v15 = v15 + 1;
v19 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v18);
v17[0] = v19;
v20 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v6);
v17[1] = v20;
v21 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v10);
v17[2] = v21;
v22 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v13);
v17[3] = v22;
virtualinvoke v16.<org.jboss.logging.Logger: void debugf(java.lang.String,java.lang.Object[])>("loop: %s, remaining: %s, intervalRemaining: %s, interruptRemaining: %s", v17);
label02:
v23 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
v24 = staticinvoke <java.lang.Math: long min(long,long)>(v6, v10);
v25 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit NANOSECONDS>;
v26 = virtualinvoke v23.<org.jboss.threads.EnhancedQueueExecutor: boolean awaitTermination(long,java.util.concurrent.TimeUnit)>(v24, v25);
if v26 != 0 goto label13;
v27 = staticinvoke <java.lang.System: long nanoTime()>();
v28 = v27 - v14;
v10 = v10 - v28;
v6 = v6 - v28;
v13 = v13 - v28;
v29 = v13 cmp 0L;
if v29 > 0 goto label03;
v30 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
virtualinvoke v30.<org.jboss.threads.EnhancedQueueExecutor: void shutdown(boolean)>(1);
label03:
v31 = v6 cmp 0L;
if v31 > 0 goto label06;
v32 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
v33 = virtualinvoke v32.<org.jboss.threads.EnhancedQueueExecutor: java.util.List shutdownNow()>();
v34 = interfaceinvoke v33.<java.util.List: boolean isEmpty()>();
if v34 != 0 goto label04;
v35 = <io.quarkus.runtime.ExecutorRecorder: org.jboss.logging.Logger log>;
v36 = interfaceinvoke v33.<java.util.List: int size()>();
v37 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v36);
v38 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
v39 = virtualinvoke v38.<org.jboss.threads.EnhancedQueueExecutor: int getActiveCount()>();
v40 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v39);
virtualinvoke v35.<org.jboss.logging.Logger: void warnf(java.lang.String,java.lang.Object,java.lang.Object)>("Thread pool shutdown failed: discarding %d tasks, %d threads still running", v37, v40);
goto label15;
label04:
v41 = <io.quarkus.runtime.ExecutorRecorder: org.jboss.logging.Logger log>;
v42 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
v43 = virtualinvoke v42.<org.jboss.threads.EnhancedQueueExecutor: int getActiveCount()>();
v44 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v43);
virtualinvoke v41.<org.jboss.logging.Logger: void warnf(java.lang.String,java.lang.Object)>("Thread pool shutdown failed: %d threads still running", v44);
label05:
goto label15;
label06:
v45 = v10 cmp 0L;
if v45 > 0 goto label01;
v10 = v9;
v46 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
v47 = virtualinvoke v46.<org.jboss.threads.EnhancedQueueExecutor: int getQueueSize()>();
v48 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
v49 = virtualinvoke v48.<org.jboss.threads.EnhancedQueueExecutor: java.lang.Thread[] getRunningThreads()>();
v50 = <io.quarkus.runtime.ExecutorRecorder: org.jboss.logging.Logger log>;
v51 = lengthof v49;
v52 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v51);
v53 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v47);
virtualinvoke v50.<org.jboss.logging.Logger: void infof(java.lang.String,java.lang.Object,java.lang.Object)>("Awaiting thread pool shutdown; %d thread(s) running with %d task(s) waiting", v52, v53);
v54 = lengthof v49;
v55 = lengthof v49;
v56 = 0;
label07:
if v56 >= v55 goto label11;
v57 = v49[v56];
v58 = virtualinvoke v57.<java.lang.Thread: java.lang.StackTraceElement[] getStackTrace()>();
v59 = 0;
label08:
v60 = lengthof v58;
if v59 >= v60 goto label10;
if v59 >= 8 goto label10;
v61 = v58[v59];
v62 = virtualinvoke v61.<java.lang.StackTraceElement: java.lang.String getClassName()>();
v63 = virtualinvoke v62.<java.lang.String: boolean equals(java.lang.Object)>("java.lang.System");
if v63 == 0 goto label09;
v64 = v58[v59];
v65 = virtualinvoke v64.<java.lang.StackTraceElement: java.lang.String getMethodName()>();
v66 = virtualinvoke v65.<java.lang.String: boolean equals(java.lang.Object)>("exit");
if v66 == 0 goto label09;
v67 = new java.lang.Throwable;
specialinvoke v67.<java.lang.Throwable: void <init>()>();
virtualinvoke v67.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(v58);
v68 = <io.quarkus.runtime.ExecutorRecorder: org.jboss.logging.Logger log>;
v69 = virtualinvoke v57.<java.lang.Thread: java.lang.String getName()>();
virtualinvoke v68.<org.jboss.logging.Logger: void errorf(java.lang.Throwable,java.lang.String,java.lang.Object)>(v67, "Thread %s is blocked in System.exit(); pooled (Executor) threads should never call this method because it never returns, thus preventing the thread pool from shutting down in a timely manner.  This is the stack trace of the call", v69);
v54 = v54 - 1;
goto label10;
label09:
v59 = v59 + 1;
goto label08;
label10:
v56 = v56 + 1;
goto label07;
label11:
if v54 != 0 goto label01;
if v47 != 0 goto label01;
v70 = v0.<io.quarkus.runtime.ExecutorRecorder$2: org.jboss.threads.EnhancedQueueExecutor val$executor>;
virtualinvoke v70.<org.jboss.threads.EnhancedQueueExecutor: java.util.List shutdownNow()>();
label12:
goto label15;
label13:
return;
label14:
v71 := @caughtexception;
goto label01;
label15:
return;
catch java.lang.InterruptedException from label02 to label05 with label14;
catch java.lang.InterruptedException from label06 to label12 with label14;
catch java.lang.InterruptedException from label13 to label13 with label14;
}
}