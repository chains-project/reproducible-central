public class io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath extends io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader implements org.eclipse.microprofile.config.spi.ConfigSourceProvider
{
public void <init>()
{
io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath v0;
v0 := @this: io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath;
specialinvoke v0.<io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader: void <init>()>();
return;
}
public java.util.List getConfigSources(java.lang.ClassLoader)
{
java.util.List v2;
io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath v0;
java.lang.ClassLoader v1;
v0 := @this: io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath;
v1 := @parameter0: java.lang.ClassLoader;
v2 = virtualinvoke v0.<io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath: java.util.List loadConfigSources(java.lang.String,int,java.lang.ClassLoader)>("application.properties", 250, v1);
return v2;
}
protected java.util.List tryFileSystem(java.net.URI, int)
{
java.util.List v3;
int v2;
io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath v0;
java.net.URI v1;
v0 := @this: io.quarkus.runtime.configuration.ApplicationPropertiesConfigSourceLoader$InClassPath;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: int;
v3 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v3;
}
}