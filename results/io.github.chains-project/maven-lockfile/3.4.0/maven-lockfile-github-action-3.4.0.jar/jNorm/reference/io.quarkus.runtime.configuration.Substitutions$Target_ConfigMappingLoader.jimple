final class io.quarkus.runtime.configuration.Substitutions$Target_ConfigMappingLoader extends java.lang.Object
{
void <init>()
{
io.quarkus.runtime.configuration.Substitutions$Target_ConfigMappingLoader v0;
v0 := @this: io.quarkus.runtime.configuration.Substitutions$Target_ConfigMappingLoader;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.lang.Class loadClass(java.lang.Class, io.smallrye.config.ConfigMappingMetadata)
{
java.lang.Class v0, v4;
java.lang.ClassNotFoundException v5;
io.smallrye.config.ConfigMappingMetadata v1;
java.lang.ClassLoader v2;
java.lang.String v3;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: io.smallrye.config.ConfigMappingMetadata;
label1:
v2 = virtualinvoke v0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v3 = interfaceinvoke v1.<io.smallrye.config.ConfigMappingMetadata: java.lang.String getClassName()>();
v4 = virtualinvoke v2.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(v3);
label2:
return v4;
label3:
v5 := @caughtexception;
return null;
catch java.lang.ClassNotFoundException from label1 to label2 with label3;
}
private static java.lang.Class defineClass(java.lang.Class, java.lang.String, byte[])
{
byte[] v2;
java.lang.Class v0;
java.lang.String v1;
v0 := @parameter0: java.lang.Class;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: byte[];
return null;
}
}