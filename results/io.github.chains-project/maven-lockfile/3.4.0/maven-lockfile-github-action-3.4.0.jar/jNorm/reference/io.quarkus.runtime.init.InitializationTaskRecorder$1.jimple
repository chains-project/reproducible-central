class io.quarkus.runtime.init.InitializationTaskRecorder$1 extends java.lang.Object implements java.lang.Runnable
{
final java.util.concurrent.CountDownLatch val$latch;
void <init>(java.util.concurrent.CountDownLatch)
{
java.util.concurrent.CountDownLatch v1;
io.quarkus.runtime.init.InitializationTaskRecorder$1 v0;
v0 := @this: io.quarkus.runtime.init.InitializationTaskRecorder$1;
v1 := @parameter0: java.util.concurrent.CountDownLatch;
v0.<io.quarkus.runtime.init.InitializationTaskRecorder$1: java.util.concurrent.CountDownLatch val$latch> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void run()
{
java.util.concurrent.CountDownLatch v1;
io.quarkus.runtime.init.InitializationTaskRecorder$1 v0;
v0 := @this: io.quarkus.runtime.init.InitializationTaskRecorder$1;
staticinvoke <io.quarkus.runtime.Quarkus: void blockingExit()>();
v1 = v0.<io.quarkus.runtime.init.InitializationTaskRecorder$1: java.util.concurrent.CountDownLatch val$latch>;
virtualinvoke v1.<java.util.concurrent.CountDownLatch: void countDown()>();
return;
}
}