public class io.quarkus.runtime.init.InitializationTaskRecorder extends java.lang.Object
{
private static final java.lang.String QUARKUS_INIT_AND_EXIT;
public void <init>()
{
io.quarkus.runtime.init.InitializationTaskRecorder v0;
v0 := @this: io.quarkus.runtime.init.InitializationTaskRecorder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void exitIfNeeded()
{
java.util.function.Predicate v5;
org.eclipse.microprofile.config.Config v1, v7;
java.util.function.Supplier v11;
java.lang.Iterable v2;
java.util.stream.Stream v4;
java.lang.Class v8;
java.lang.Object v9;
java.util.Spliterator v3;
io.quarkus.runtime.init.InitializationTaskRecorder v0;
boolean v10, v6;
v0 := @this: io.quarkus.runtime.init.InitializationTaskRecorder;
v1 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v2 = interfaceinvoke v1.<org.eclipse.microprofile.config.Config: java.lang.Iterable getPropertyNames()>();
v3 = interfaceinvoke v2.<java.lang.Iterable: java.util.Spliterator spliterator()>();
v4 = staticinvoke <java.util.stream.StreamSupport: java.util.stream.Stream stream(java.util.Spliterator,boolean)>(v3, 0);
v5 = staticinvoke <io.quarkus.runtime.init.InitializationTaskRecorder$lambda_exitIfNeeded_0__3025: java.util.function.Predicate bootstrap$()>();
v6 = interfaceinvoke v4.<java.util.stream.Stream: boolean anyMatch(java.util.function.Predicate)>(v5);
if v6 == 0 goto label1;
v7 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig()>();
v8 = <java.lang.Boolean: java.lang.Class TYPE>;
v9 = interfaceinvoke v7.<org.eclipse.microprofile.config.Config: java.lang.Object getValue(java.lang.String,java.lang.Class)>("quarkus.init-and-exit", v8);
v10 = virtualinvoke v9.<java.lang.Boolean: boolean booleanValue()>();
if v10 == 0 goto label1;
v11 = staticinvoke <io.quarkus.runtime.init.InitializationTaskRecorder$lambda_exitIfNeeded_1__3026: java.util.function.Supplier bootstrap$()>();
staticinvoke <io.quarkus.runtime.init.InitializationTaskRecorder: void preventFurtherRecorderSteps(int,java.lang.String,java.util.function.Supplier)>(5, "Error attempting to gracefully shutdown after initialization", v11);
label1:
return;
}
public static void preventFurtherRecorderSteps(int, java.lang.String, java.util.function.Supplier)
{
java.io.PrintStream v8;
io.quarkus.runtime.init.InitializationTaskRecorder$1 v5;
java.util.function.Supplier v2;
java.util.concurrent.TimeUnit v6;
java.util.concurrent.CountDownLatch v3;
java.lang.InterruptedException v7;
java.lang.Thread v4;
int v0;
java.lang.Object v9;
java.lang.String v1;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.util.function.Supplier;
v3 = new java.util.concurrent.CountDownLatch;
specialinvoke v3.<java.util.concurrent.CountDownLatch: void <init>(int)>(1);
v4 = new java.lang.Thread;
v5 = new io.quarkus.runtime.init.InitializationTaskRecorder$1;
specialinvoke v5.<io.quarkus.runtime.init.InitializationTaskRecorder$1: void <init>(java.util.concurrent.CountDownLatch)>(v3);
specialinvoke v4.<java.lang.Thread: void <init>(java.lang.Runnable)>(v5);
virtualinvoke v4.<java.lang.Thread: void start()>();
label1:
v6 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
virtualinvoke v3.<java.util.concurrent.CountDownLatch: boolean await(long,java.util.concurrent.TimeUnit)>(v0, v6);
label2:
goto label4;
label3:
v7 := @caughtexception;
v8 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v8.<java.io.PrintStream: void println(java.lang.String)>(v1);
label4:
v9 = interfaceinvoke v2.<java.util.function.Supplier: java.lang.Object get()>();
throw v9;
catch java.lang.InterruptedException from label1 to label2 with label3;
}
}