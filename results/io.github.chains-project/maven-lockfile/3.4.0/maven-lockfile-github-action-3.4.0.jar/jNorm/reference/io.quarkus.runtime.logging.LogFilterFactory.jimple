public interface  io.quarkus.runtime.logging.LogFilterFactory extends java.lang.Object
{
public static final int MIN_PRIORITY;
public static final int DEFAULT_PRIORITY;
public abstract java.util.logging.Filter create(java.lang.String) throws java.lang.Exception;
public int priority()
{
io.quarkus.runtime.logging.LogFilterFactory v0;
v0 := @this: io.quarkus.runtime.logging.LogFilterFactory;
return 0;
}
public static io.quarkus.runtime.logging.LogFilterFactory load()
{
io.quarkus.runtime.logging.LogFilterFactory$ReflectionLogFilterFactory v7;
java.util.Iterator v2;
java.util.ServiceLoader v1;
io.quarkus.runtime.logging.LogFilterFactory v0;
int v5, v6;
java.lang.Object v4;
boolean v3;
v0 = null;
v1 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class)>(class "Lio/quarkus/runtime/logging/LogFilterFactory;");
v2 = virtualinvoke v1.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label3;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
if v0 != null goto label2;
v0 = v4;
goto label1;
label2:
v5 = interfaceinvoke v4.<io.quarkus.runtime.logging.LogFilterFactory: int priority()>();
v6 = interfaceinvoke v0.<io.quarkus.runtime.logging.LogFilterFactory: int priority()>();
if v5 >= v6 goto label1;
v0 = v4;
goto label1;
label3:
if v0 != null goto label4;
v7 = new io.quarkus.runtime.logging.LogFilterFactory$ReflectionLogFilterFactory;
specialinvoke v7.<io.quarkus.runtime.logging.LogFilterFactory$ReflectionLogFilterFactory: void <init>()>();
v0 = v7;
label4:
return v0;
}
}