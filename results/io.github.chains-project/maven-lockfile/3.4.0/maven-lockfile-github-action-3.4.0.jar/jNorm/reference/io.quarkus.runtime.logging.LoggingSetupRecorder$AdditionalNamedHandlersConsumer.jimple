class io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer extends java.lang.Object implements java.util.function.BiConsumer
{
private final java.util.Map additionalNamedHandlersMap;
private final java.util.logging.ErrorManager errorManager;
private final java.util.Collection filterElements;
private final io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier shutdownNotifier;
public void <init>(java.util.Map, java.util.logging.ErrorManager, java.util.Collection, io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier)
{
io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier v4;
java.util.Collection v3;
java.util.Map v1;
io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer v0;
java.util.logging.ErrorManager v2;
v0 := @this: io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: java.util.logging.ErrorManager;
v3 := @parameter2: java.util.Collection;
v4 := @parameter3: io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: java.util.Map additionalNamedHandlersMap> = v1;
v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: java.util.logging.ErrorManager errorManager> = v2;
v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: java.util.Collection filterElements> = v3;
v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier shutdownNotifier> = v4;
return;
}
public void accept(java.lang.String, java.util.logging.Handler)
{
java.lang.IllegalStateException v5;
java.lang.Object[] v6;
java.util.Collection v10;
io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer v0;
java.util.logging.ErrorManager v8;
io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier v11;
io.quarkus.runtime.logging.LogCleanupFilter v9;
java.util.Map v3;
java.lang.Object v4;
java.lang.String v1, v7;
java.util.logging.Handler v2;
v0 := @this: io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.logging.Handler;
v3 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: java.util.Map additionalNamedHandlersMap>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v1, v2);
if v4 == null goto label1;
v5 = new java.lang.IllegalStateException;
v6 = newarray (java.lang.Object)[3];
v6[0] = v1;
v6[1] = v4;
v6[2] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("Duplicate key %s (attempted merging values %s and %s)", v6);
specialinvoke v5.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v5;
label1:
v8 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: java.util.logging.ErrorManager errorManager>;
virtualinvoke v2.<java.util.logging.Handler: void setErrorManager(java.util.logging.ErrorManager)>(v8);
v9 = new io.quarkus.runtime.logging.LogCleanupFilter;
v10 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: java.util.Collection filterElements>;
v11 = v0.<io.quarkus.runtime.logging.LoggingSetupRecorder$AdditionalNamedHandlersConsumer: io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier shutdownNotifier>;
specialinvoke v9.<io.quarkus.runtime.logging.LogCleanupFilter: void <init>(java.util.Collection,io.quarkus.runtime.logging.LoggingSetupRecorder$ShutdownNotifier)>(v10, v11);
virtualinvoke v2.<java.util.logging.Handler: void setFilter(java.util.logging.Filter)>(v9);
return;
}
}