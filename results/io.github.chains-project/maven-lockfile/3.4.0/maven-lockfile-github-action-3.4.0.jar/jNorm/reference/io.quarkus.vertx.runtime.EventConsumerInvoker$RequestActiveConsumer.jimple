class io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer extends java.lang.Object implements java.util.function.BiConsumer
{
private final io.vertx.core.eventbus.Message message;
void <init>(io.vertx.core.eventbus.Message)
{
io.vertx.core.eventbus.Message v1;
io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer v0;
v0 := @this: io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer;
v1 := @parameter0: io.vertx.core.eventbus.Message;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer: io.vertx.core.eventbus.Message message> = v1;
return;
}
public void accept(java.lang.Object, java.lang.Throwable)
{
java.lang.Throwable v2;
io.vertx.core.eventbus.Message v3, v6, v8;
java.lang.RuntimeException v5;
io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer v0;
java.lang.Object v1;
java.lang.String v4, v7;
v0 := @this: io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Throwable;
if v2 == null goto label2;
v3 = v0.<io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer: io.vertx.core.eventbus.Message message>;
v4 = interfaceinvoke v3.<io.vertx.core.eventbus.Message: java.lang.String replyAddress()>();
if v4 != null goto label1;
v5 = staticinvoke <io.quarkus.vertx.runtime.VertxRecorder: java.lang.RuntimeException wrapIfNecessary(java.lang.Throwable)>(v2);
throw v5;
label1:
v6 = v0.<io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer: io.vertx.core.eventbus.Message message>;
v7 = virtualinvoke v2.<java.lang.Throwable: java.lang.String getMessage()>();
interfaceinvoke v6.<io.vertx.core.eventbus.Message: void fail(int,java.lang.String)>(8191, v7);
goto label3;
label2:
v8 = v0.<io.quarkus.vertx.runtime.EventConsumerInvoker$RequestActiveConsumer: io.vertx.core.eventbus.Message message>;
interfaceinvoke v8.<io.vertx.core.eventbus.Message: void reply(java.lang.Object)>(v1);
label3:
return;
}
}