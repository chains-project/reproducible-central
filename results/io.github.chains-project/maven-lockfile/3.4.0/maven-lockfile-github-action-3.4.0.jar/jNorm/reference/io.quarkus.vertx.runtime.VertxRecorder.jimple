public class io.quarkus.vertx.runtime.VertxRecorder extends java.lang.Object
{
private static final org.jboss.logging.Logger LOGGER;
static volatile io.vertx.core.Vertx vertx;
static volatile java.util.List messageConsumers;
public void <init>()
{
io.quarkus.vertx.runtime.VertxRecorder v0;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void configureVertx(java.util.function.Supplier, java.util.Map, io.quarkus.runtime.LaunchMode, io.quarkus.runtime.ShutdownContext, java.util.Map)
{
io.quarkus.runtime.LaunchMode v3, v8;
io.quarkus.vertx.runtime.VertxRecorder v0;
java.util.function.Supplier v1;
java.util.Map v2, v5;
io.quarkus.vertx.runtime.VertxRecorder$2 v10;
java.lang.Object v6;
io.quarkus.runtime.ShutdownContext v4;
io.quarkus.vertx.runtime.VertxRecorder$1 v9;
java.util.concurrent.CopyOnWriteArrayList v7;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: io.quarkus.runtime.LaunchMode;
v4 := @parameter3: io.quarkus.runtime.ShutdownContext;
v5 := @parameter4: java.util.Map;
v6 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
<io.quarkus.vertx.runtime.VertxRecorder: io.vertx.core.Vertx vertx> = v6;
v7 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke v7.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
<io.quarkus.vertx.runtime.VertxRecorder: java.util.List messageConsumers> = v7;
virtualinvoke v0.<io.quarkus.vertx.runtime.VertxRecorder: void registerMessageConsumers(java.util.Map)>(v2);
specialinvoke v0.<io.quarkus.vertx.runtime.VertxRecorder: void registerCodecs(java.util.Map)>(v5);
v8 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode DEVELOPMENT>;
if v3 != v8 goto label1;
v9 = new io.quarkus.vertx.runtime.VertxRecorder$1;
specialinvoke v9.<io.quarkus.vertx.runtime.VertxRecorder$1: void <init>(io.quarkus.vertx.runtime.VertxRecorder)>(v0);
interfaceinvoke v4.<io.quarkus.runtime.ShutdownContext: void addShutdownTask(java.lang.Runnable)>(v9);
goto label2;
label1:
v10 = new io.quarkus.vertx.runtime.VertxRecorder$2;
specialinvoke v10.<io.quarkus.vertx.runtime.VertxRecorder$2: void <init>(io.quarkus.vertx.runtime.VertxRecorder)>(v0);
interfaceinvoke v4.<io.quarkus.runtime.ShutdownContext: void addShutdownTask(java.lang.Runnable)>(v10);
label2:
return;
}
public io.quarkus.runtime.RuntimeValue currentContextFactory()
{
io.quarkus.vertx.runtime.VertxCurrentContextFactory v2;
io.quarkus.vertx.runtime.VertxRecorder v0;
io.quarkus.runtime.RuntimeValue v1;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 = new io.quarkus.runtime.RuntimeValue;
v2 = new io.quarkus.vertx.runtime.VertxCurrentContextFactory;
specialinvoke v2.<io.quarkus.vertx.runtime.VertxCurrentContextFactory: void <init>()>();
specialinvoke v1.<io.quarkus.runtime.RuntimeValue: void <init>(java.lang.Object)>(v2);
return v1;
}
public static io.vertx.core.Vertx getVertx()
{
io.vertx.core.Vertx v0;
v0 = <io.quarkus.vertx.runtime.VertxRecorder: io.vertx.core.Vertx vertx>;
return v0;
}
void destroy()
{
io.quarkus.vertx.runtime.VertxRecorder v0;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
<io.quarkus.vertx.runtime.VertxRecorder: java.util.List messageConsumers> = null;
return;
}
void registerMessageConsumers(java.util.Map)
{
java.lang.IllegalStateException v21;
java.util.ArrayList v8;
io.vertx.core.eventbus.EventBus v4;
java.lang.Thread v20;
java.util.Map v1;
int v7;
java.lang.String v16;
io.quarkus.vertx.runtime.EventConsumerInvoker v14;
boolean v11, v2, v22;
java.util.Iterator v10;
io.vertx.core.Vertx v3, v5;
java.util.Set v9;
io.quarkus.vertx.runtime.VertxRecorder v0;
java.lang.RuntimeException v23;
io.vertx.core.impl.EventLoopContext v17;
java.util.concurrent.CountDownLatch v6;
java.lang.InterruptedException v19;
io.quarkus.vertx.runtime.VertxRecorder$3 v18;
java.lang.Object v12, v13, v15, v24;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
if v2 != 0 goto label6;
v3 = <io.quarkus.vertx.runtime.VertxRecorder: io.vertx.core.Vertx vertx>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.eventbus.EventBus eventBus()>();
v5 = <io.quarkus.vertx.runtime.VertxRecorder: io.vertx.core.Vertx vertx>;
v6 = new java.util.concurrent.CountDownLatch;
v7 = interfaceinvoke v1.<java.util.Map: int size()>();
specialinvoke v6.<java.util.concurrent.CountDownLatch: void <init>(int)>(v7);
v8 = new java.util.ArrayList;
specialinvoke v8.<java.util.ArrayList: void <init>()>();
v9 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label1:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label2;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getKey()>();
v14 = specialinvoke v0.<io.quarkus.vertx.runtime.VertxRecorder: io.quarkus.vertx.runtime.EventConsumerInvoker createInvoker(java.lang.String)>(v13);
v15 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = interfaceinvoke v15.<io.quarkus.vertx.ConsumeEvent: java.lang.String value()>();
v17 = interfaceinvoke v5.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.EventLoopContext createEventLoopContext()>();
v18 = new io.quarkus.vertx.runtime.VertxRecorder$3;
specialinvoke v18.<io.quarkus.vertx.runtime.VertxRecorder$3: void <init>(io.quarkus.vertx.runtime.VertxRecorder,java.util.Map$Entry,io.vertx.core.eventbus.EventBus,java.lang.String,io.quarkus.vertx.runtime.EventConsumerInvoker,io.vertx.core.impl.ContextInternal,java.util.concurrent.CountDownLatch,java.util.List)>(v0, v12, v4, v16, v14, v17, v6, v8);
interfaceinvoke v17.<io.vertx.core.impl.ContextInternal: void runOnContext(io.vertx.core.Handler)>(v18);
goto label1;
label2:
virtualinvoke v6.<java.util.concurrent.CountDownLatch: void await()>();
label3:
goto label5;
label4:
v19 := @caughtexception;
v20 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v20.<java.lang.Thread: void interrupt()>();
v21 = new java.lang.IllegalStateException;
specialinvoke v21.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to register all message consumer methods", v19);
throw v21;
label5:
v22 = interfaceinvoke v8.<java.util.List: boolean isEmpty()>();
if v22 != 0 goto label6;
v23 = new java.lang.RuntimeException;
v24 = interfaceinvoke v8.<java.util.List: java.lang.Object get(int)>(0);
specialinvoke v23.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Registration of one or more message consumers failed", v24);
throw v23;
label6:
return;
catch java.lang.InterruptedException from label2 to label3 with label4;
}
static java.lang.RuntimeException wrapIfNecessary(java.lang.Throwable)
{
java.lang.Throwable v0;
java.lang.RuntimeException v3;
boolean v1, v2;
v0 := @parameter0: java.lang.Throwable;
v1 = v0 instanceof java.lang.Error;
if v1 == 0 goto label1;
throw v0;
label1:
v2 = v0 instanceof java.lang.RuntimeException;
if v2 == 0 goto label2;
return v0;
label2:
v3 = new java.lang.RuntimeException;
specialinvoke v3.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v0);
return v3;
}
void unregisterMessageConsumers()
{
java.lang.IllegalStateException v11;
java.util.Iterator v5;
io.quarkus.vertx.runtime.VertxRecorder v0;
java.util.concurrent.CountDownLatch v1;
java.util.List v12, v2, v4;
java.lang.InterruptedException v9;
java.lang.Thread v10;
int v3;
java.lang.Object v7;
io.vertx.core.Handler v8;
boolean v6;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 = new java.util.concurrent.CountDownLatch;
v2 = <io.quarkus.vertx.runtime.VertxRecorder: java.util.List messageConsumers>;
v3 = interfaceinvoke v2.<java.util.List: int size()>();
specialinvoke v1.<java.util.concurrent.CountDownLatch: void <init>(int)>(v3);
v4 = <io.quarkus.vertx.runtime.VertxRecorder: java.util.List messageConsumers>;
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label2;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = staticinvoke <io.quarkus.vertx.runtime.VertxRecorder$lambda_unregisterMessageConsumers_0__898: io.vertx.core.Handler bootstrap$(java.util.concurrent.CountDownLatch)>(v1);
interfaceinvoke v7.<io.vertx.core.eventbus.MessageConsumer: void unregister(io.vertx.core.Handler)>(v8);
goto label1;
label2:
virtualinvoke v1.<java.util.concurrent.CountDownLatch: void await()>();
label3:
goto label5;
label4:
v9 := @caughtexception;
v10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v10.<java.lang.Thread: void interrupt()>();
v11 = new java.lang.IllegalStateException;
specialinvoke v11.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Unable to unregister all message consumer methods", v9);
throw v11;
label5:
v12 = <io.quarkus.vertx.runtime.VertxRecorder: java.util.List messageConsumers>;
interfaceinvoke v12.<java.util.List: void clear()>();
return;
catch java.lang.InterruptedException from label2 to label3 with label4;
}
private io.quarkus.vertx.runtime.EventConsumerInvoker createInvoker(java.lang.String)
{
java.lang.IllegalStateException v11;
java.lang.Object[] v8;
java.lang.Class[] v6;
io.quarkus.vertx.runtime.VertxRecorder v0;
java.lang.ReflectiveOperationException v10;
java.lang.reflect.Constructor v7;
java.lang.Thread v2;
java.lang.Class v4, v5;
java.lang.Object v9;
java.lang.ClassLoader v3;
java.lang.String v1, v12;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 := @parameter0: java.lang.String;
label1:
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
if v3 != null goto label2;
v4 = class "Lio/quarkus/vertx/runtime/VertxProducer;";
v3 = virtualinvoke v4.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
label2:
v5 = virtualinvoke v3.<java.lang.ClassLoader: java.lang.Class loadClass(java.lang.String)>(v1);
v6 = newarray (java.lang.Class)[0];
v7 = virtualinvoke v5.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v6);
v8 = newarray (java.lang.Object)[0];
v9 = virtualinvoke v7.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v8);
label3:
return v9;
label4:
v10 := @caughtexception;
v11 = new java.lang.IllegalStateException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unable to create invoker: \u0001");
specialinvoke v11.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>(v12, v10);
throw v11;
catch java.lang.InstantiationException from label1 to label3 with label4;
catch java.lang.IllegalAccessException from label1 to label3 with label4;
catch java.lang.ClassNotFoundException from label1 to label3 with label4;
catch java.lang.NoSuchMethodException from label1 to label3 with label4;
catch java.lang.reflect.InvocationTargetException from label1 to label3 with label4;
}
private void registerCodecs(java.util.Map)
{
java.lang.Object[] v18, v21;
org.jboss.logging.Logger v20, v25;
io.quarkus.runtime.LaunchMode v4, v5;
java.lang.ReflectiveOperationException v24;
java.lang.reflect.Constructor v17;
io.vertx.core.eventbus.EventBus v3;
java.util.Map v1;
java.lang.String v22, v23, v26, v27;
boolean v10, v15, v6, v7;
java.util.Iterator v9;
io.vertx.core.Vertx v2;
java.lang.Class[] v16;
java.util.Set v8;
io.quarkus.vertx.runtime.VertxRecorder v0;
java.lang.Class v14;
java.lang.Object v11, v12, v13, v19;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 := @parameter0: java.util.Map;
v2 = <io.quarkus.vertx.runtime.VertxRecorder: io.vertx.core.Vertx vertx>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.eventbus.EventBus eventBus()>();
v4 = staticinvoke <io.quarkus.runtime.configuration.ProfileManager: io.quarkus.runtime.LaunchMode getLaunchMode()>();
v5 = <io.quarkus.runtime.LaunchMode: io.quarkus.runtime.LaunchMode DEVELOPMENT>;
if v4 != v5 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
v7 = v6;
v8 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v9 = interfaceinvoke v8.<java.util.Set: java.util.Iterator iterator()>();
label3:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label9;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getKey()>();
v13 = interfaceinvoke v11.<java.util.Map$Entry: java.lang.Object getValue()>();
label4:
v14 = class "Lio/vertx/core/eventbus/MessageCodec;";
v15 = virtualinvoke v14.<java.lang.Class: boolean isAssignableFrom(java.lang.Class)>(v13);
if v15 == 0 goto label6;
v16 = newarray (java.lang.Class)[0];
v17 = virtualinvoke v13.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v16);
v18 = newarray (java.lang.Object)[0];
v19 = virtualinvoke v17.<java.lang.reflect.Constructor: java.lang.Object newInstance(java.lang.Object[])>(v18);
if v7 == 0 goto label5;
interfaceinvoke v3.<io.vertx.core.eventbus.EventBus: io.vertx.core.eventbus.EventBus unregisterDefaultCodec(java.lang.Class)>(v12);
label5:
interfaceinvoke v3.<io.vertx.core.eventbus.EventBus: io.vertx.core.eventbus.EventBus registerDefaultCodec(java.lang.Class,io.vertx.core.eventbus.MessageCodec)>(v12, v19);
goto label3;
label6:
v20 = <io.quarkus.vertx.runtime.VertxRecorder: org.jboss.logging.Logger LOGGER>;
v21 = newarray (java.lang.Object)[1];
v22 = virtualinvoke v12.<java.lang.Class: java.lang.String toString()>();
v21[0] = v22;
v23 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("The codec %s does not inherit from MessageCodec ", v21);
virtualinvoke v20.<org.jboss.logging.Logger: void error(java.lang.Object)>(v23);
label7:
goto label3;
label8:
v24 := @caughtexception;
v25 = <io.quarkus.vertx.runtime.VertxRecorder: org.jboss.logging.Logger LOGGER>;
v26 = virtualinvoke v12.<java.lang.Class: java.lang.String toString()>();
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot instantiate the MessageCodec \u0001");
virtualinvoke v25.<org.jboss.logging.Logger: void error(java.lang.Object,java.lang.Throwable)>(v27, v24);
goto label3;
label9:
return;
catch java.lang.InstantiationException from label4 to label7 with label8;
catch java.lang.IllegalAccessException from label4 to label7 with label8;
catch java.lang.NoSuchMethodException from label4 to label7 with label8;
catch java.lang.reflect.InvocationTargetException from label4 to label7 with label8;
}
public io.quarkus.runtime.RuntimeValue forceStart(java.util.function.Supplier)
{
io.quarkus.runtime.RuntimeValue v2;
java.lang.Object v3;
io.quarkus.vertx.runtime.VertxRecorder v0;
java.util.function.Supplier v1;
v0 := @this: io.quarkus.vertx.runtime.VertxRecorder;
v1 := @parameter0: java.util.function.Supplier;
v2 = new io.quarkus.runtime.RuntimeValue;
v3 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
specialinvoke v2.<io.quarkus.runtime.RuntimeValue: void <init>(java.lang.Object)>(v3);
return v2;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
org.jboss.logging.Logger v2;
v0 = class "Lio/quarkus/vertx/runtime/VertxRecorder;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <org.jboss.logging.Logger: org.jboss.logging.Logger getLogger(java.lang.String)>(v1);
<io.quarkus.vertx.runtime.VertxRecorder: org.jboss.logging.Logger LOGGER> = v2;
return;
}
}