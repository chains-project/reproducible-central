public interface  io.smallrye.common.function.ExceptionPredicate extends java.lang.Object
{
public abstract boolean test(java.lang.Object) throws java.lang.Exception;
public io.smallrye.common.function.ExceptionPredicate and(io.smallrye.common.function.ExceptionPredicate)
{
io.smallrye.common.function.ExceptionPredicate v0, v1, v2;
v0 := @this: io.smallrye.common.function.ExceptionPredicate;
v1 := @parameter0: io.smallrye.common.function.ExceptionPredicate;
v2 = staticinvoke <io.smallrye.common.function.ExceptionPredicate$lambda_and_0__3195: io.smallrye.common.function.ExceptionPredicate bootstrap$(io.smallrye.common.function.ExceptionPredicate,io.smallrye.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionPredicate or(io.smallrye.common.function.ExceptionPredicate)
{
io.smallrye.common.function.ExceptionPredicate v0, v1, v2;
v0 := @this: io.smallrye.common.function.ExceptionPredicate;
v1 := @parameter0: io.smallrye.common.function.ExceptionPredicate;
v2 = staticinvoke <io.smallrye.common.function.ExceptionPredicate$lambda_or_1__3196: io.smallrye.common.function.ExceptionPredicate bootstrap$(io.smallrye.common.function.ExceptionPredicate,io.smallrye.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionPredicate xor(io.smallrye.common.function.ExceptionPredicate)
{
io.smallrye.common.function.ExceptionPredicate v0, v1, v2;
v0 := @this: io.smallrye.common.function.ExceptionPredicate;
v1 := @parameter0: io.smallrye.common.function.ExceptionPredicate;
v2 = staticinvoke <io.smallrye.common.function.ExceptionPredicate$lambda_xor_2__3197: io.smallrye.common.function.ExceptionPredicate bootstrap$(io.smallrye.common.function.ExceptionPredicate,io.smallrye.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
public io.smallrye.common.function.ExceptionPredicate not()
{
io.smallrye.common.function.ExceptionPredicate v0, v1;
v0 := @this: io.smallrye.common.function.ExceptionPredicate;
v1 = staticinvoke <io.smallrye.common.function.ExceptionPredicate$lambda_not_3__3198: io.smallrye.common.function.ExceptionPredicate bootstrap$(io.smallrye.common.function.ExceptionPredicate)>(v0);
return v1;
}
public io.smallrye.common.function.ExceptionBiPredicate 'with'(io.smallrye.common.function.ExceptionPredicate)
{
io.smallrye.common.function.ExceptionBiPredicate v2;
io.smallrye.common.function.ExceptionPredicate v0, v1;
v0 := @this: io.smallrye.common.function.ExceptionPredicate;
v1 := @parameter0: io.smallrye.common.function.ExceptionPredicate;
v2 = staticinvoke <io.smallrye.common.function.ExceptionPredicate$lambda_with_4__3199: io.smallrye.common.function.ExceptionBiPredicate bootstrap$(io.smallrye.common.function.ExceptionPredicate,io.smallrye.common.function.ExceptionPredicate)>(v0, v1);
return v2;
}
}