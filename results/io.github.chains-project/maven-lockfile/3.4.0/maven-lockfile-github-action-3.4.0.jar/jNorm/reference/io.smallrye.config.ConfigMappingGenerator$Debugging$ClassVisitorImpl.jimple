final class io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl extends org.objectweb.asm.ClassVisitor
{
final java.lang.String sourceFile;
void <init>(int)
{
int v1;
io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl v0;
java.lang.StackTraceElement v2;
java.lang.String v3;
v0 := @this: io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl;
v1 := @parameter0: int;
specialinvoke v0.<org.objectweb.asm.ClassVisitor: void <init>(int)>(v1);
v2 = staticinvoke <io.smallrye.config.ConfigMappingGenerator$Debugging: java.lang.StackTraceElement getCaller()>();
v3 = virtualinvoke v2.<java.lang.StackTraceElement: java.lang.String getFileName()>();
v0.<io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl: java.lang.String sourceFile> = v3;
return;
}
void <init>(org.objectweb.asm.ClassWriter)
{
org.objectweb.asm.ClassWriter v1;
io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl v0;
java.lang.StackTraceElement v2;
java.lang.String v3;
v0 := @this: io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl;
v1 := @parameter0: org.objectweb.asm.ClassWriter;
specialinvoke v0.<org.objectweb.asm.ClassVisitor: void <init>(int,org.objectweb.asm.ClassVisitor)>(458752, v1);
v2 = staticinvoke <io.smallrye.config.ConfigMappingGenerator$Debugging: java.lang.StackTraceElement getCaller()>();
v3 = virtualinvoke v2.<java.lang.StackTraceElement: java.lang.String getFileName()>();
v0.<io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl: java.lang.String sourceFile> = v3;
return;
}
public void visitSource(java.lang.String, java.lang.String)
{
io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl v0;
java.lang.String v1, v2, v3;
v0 := @this: io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl: java.lang.String sourceFile>;
specialinvoke v0.<org.objectweb.asm.ClassVisitor: void visitSource(java.lang.String,java.lang.String)>(v3, v2);
return;
}
public org.objectweb.asm.MethodVisitor visitMethod(int, java.lang.String, java.lang.String, java.lang.String, java.lang.String[])
{
org.objectweb.asm.MethodVisitor v8;
io.smallrye.config.ConfigMappingGenerator$Debugging$MethodVisitorImpl v6;
io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl v0;
java.lang.String[] v5;
int v1, v7;
java.lang.String v2, v3, v4;
v0 := @this: io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String[];
v6 = new io.smallrye.config.ConfigMappingGenerator$Debugging$MethodVisitorImpl;
v7 = v0.<io.smallrye.config.ConfigMappingGenerator$Debugging$ClassVisitorImpl: int api>;
v8 = specialinvoke v0.<org.objectweb.asm.ClassVisitor: org.objectweb.asm.MethodVisitor visitMethod(int,java.lang.String,java.lang.String,java.lang.String,java.lang.String[])>(v1, v2, v3, v4, v5);
specialinvoke v6.<io.smallrye.config.ConfigMappingGenerator$Debugging$MethodVisitorImpl: void <init>(int,org.objectweb.asm.MethodVisitor)>(v7, v8);
return v6;
}
}