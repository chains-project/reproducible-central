class io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey extends java.lang.Object
{
private final java.lang.String key;
private final java.lang.Object convertedKey;
public void <init>(java.lang.String, java.lang.Object)
{
java.lang.Object v2;
java.lang.String v1;
io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey v0;
v0 := @this: io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.String key> = v1;
v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.Object convertedKey> = v2;
return;
}
public java.lang.String getKey()
{
java.lang.String v1;
io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey v0;
v0 := @this: io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey;
v1 = v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.String key>;
return v1;
}
public java.lang.Object getConvertedKey()
{
java.lang.Object v1;
io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey v0;
v0 := @this: io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey;
v1 = v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.Object convertedKey>;
return v1;
}
public int getIndex()
{
io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey v0;
java.lang.NumberFormatException v11;
java.lang.IllegalArgumentException v12, v13;
int v10, v2, v4, v5, v6, v8;
java.lang.String v1, v3, v7, v9;
v0 := @this: io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey;
v1 = v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.String key>;
v2 = virtualinvoke v1.<java.lang.String: int indexOf(java.lang.String)>("[");
v3 = v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.String key>;
v4 = virtualinvoke v3.<java.lang.String: int indexOf(java.lang.String)>("]");
v5 = (int) -1;
if v2 == v5 goto label4;
v6 = (int) -1;
if v4 == v6 goto label4;
v7 = v0.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: java.lang.String key>;
v8 = v2 + 1;
v9 = virtualinvoke v7.<java.lang.String: java.lang.String substring(int,int)>(v8, v4);
label1:
v10 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v9);
label2:
return v10;
label3:
v11 := @caughtexception;
v12 = new java.lang.IllegalArgumentException;
specialinvoke v12.<java.lang.IllegalArgumentException: void <init>()>();
throw v12;
label4:
v13 = new java.lang.IllegalArgumentException;
specialinvoke v13.<java.lang.IllegalArgumentException: void <init>()>();
throw v13;
catch java.lang.NumberFormatException from label1 to label2 with label3;
}
static io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey key(java.lang.String, java.lang.String, org.eclipse.microprofile.config.spi.Converter)
{
io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey v15;
org.eclipse.microprofile.config.spi.Converter v2;
int v10, v11, v4, v5, v7, v8, v9;
java.lang.String v0, v1, v16, v3;
boolean v14;
char v12, v6;
java.lang.Object v13;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: org.eclipse.microprofile.config.spi.Converter;
v3 = v0;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
v5 = v4 - 1;
v6 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v5);
if v6 != 34 goto label1;
v7 = virtualinvoke v1.<java.lang.String: int length()>();
v8 = v7 - 1;
v9 = virtualinvoke v0.<java.lang.String: int length()>();
v10 = v8 - v9;
v11 = v10 - 1;
v12 = virtualinvoke v1.<java.lang.String: char charAt(int)>(v11);
if v12 != 34 goto label1;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\"\u0001\"");
label1:
v13 = interfaceinvoke v2.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v0);
v14 = virtualinvoke v13.<java.lang.Object: boolean equals(java.lang.Object)>(v0);
if v14 == 0 goto label2;
v13 = staticinvoke <io.smallrye.config.ConfigMappingProvider: java.lang.String normalizeIfIndexed(java.lang.String)>(v0);
label2:
v15 = new io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey;
v16 = staticinvoke <io.smallrye.config.ConfigMappingProvider: java.lang.String normalizeIfIndexed(java.lang.String)>(v3);
specialinvoke v15.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: void <init>(java.lang.String,java.lang.Object)>(v16, v13);
return v15;
}
static io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey collectionKey(java.lang.String, org.eclipse.microprofile.config.spi.Converter)
{
org.eclipse.microprofile.config.spi.Converter v1;
io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey v4;
java.lang.Object v2;
java.lang.String v0;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v2 = interfaceinvoke v1.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v0);
v3 = virtualinvoke v2.<java.lang.Object: boolean equals(java.lang.Object)>(v0);
if v3 == 0 goto label1;
v2 = staticinvoke <io.smallrye.config.ConfigMappingProvider: java.lang.String normalizeIfIndexed(java.lang.String)>(v0);
label1:
v4 = new io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey;
specialinvoke v4.<io.smallrye.config.ConfigMappingProvider$GetOrCreateEnclosingGroupInMap$MapKey: void <init>(java.lang.String,java.lang.Object)>(v0, v2);
return v4;
}
}