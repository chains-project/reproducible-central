final class io.smallrye.config.ConfigValueMapStringView extends java.util.AbstractMap
{
private final java.util.Map delegate;
private final java.lang.String configSourceName;
private final int configSourceOrdinal;
private java.util.Set entrySet;
private java.util.Collection values;
public void <init>(java.util.Map, java.lang.String, int)
{
java.util.Map v1, v4;
int v3;
io.smallrye.config.ConfigValueMapStringView v0;
java.lang.String v2;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: int;
specialinvoke v0.<java.util.AbstractMap: void <init>()>();
v4 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate> = v4;
v0.<io.smallrye.config.ConfigValueMapStringView: java.lang.String configSourceName> = v2;
v0.<io.smallrye.config.ConfigValueMapStringView: int configSourceOrdinal> = v3;
return;
}
public int size()
{
int v2;
io.smallrye.config.ConfigValueMapStringView v0;
java.util.Map v1;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: int size()>();
return v2;
}
public boolean isEmpty()
{
io.smallrye.config.ConfigValueMapStringView v0;
boolean v2;
java.util.Map v1;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
return v2;
}
public boolean containsKey(java.lang.Object)
{
java.util.Map v2;
java.lang.Object v1;
io.smallrye.config.ConfigValueMapStringView v0;
boolean v3;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v3;
}
public boolean containsValue(java.lang.Object)
{
java.util.Map v3, v5;
java.lang.Object v1;
io.smallrye.config.ConfigValueMapStringView v0;
java.lang.String v2, v6;
boolean v4, v7;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 := @parameter0: java.lang.Object;
if v1 == null goto label1;
v2 = virtualinvoke v1.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
if v2 != null goto label2;
label1:
v3 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v4 = interfaceinvoke v3.<java.util.Map: boolean containsValue(java.lang.Object)>(null);
return v4;
label2:
v5 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v6 = virtualinvoke v1.<io.smallrye.config.ConfigValue: java.lang.String getValue()>();
v7 = interfaceinvoke v5.<java.util.Map: boolean containsValue(java.lang.Object)>(v6);
return v7;
}
public io.smallrye.config.ConfigValue get(java.lang.Object)
{
java.util.Map v2;
java.lang.Object v1, v3;
io.smallrye.config.ConfigValueMapStringView v0;
io.smallrye.config.ConfigValue v4;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = specialinvoke v0.<io.smallrye.config.ConfigValueMapStringView: io.smallrye.config.ConfigValue toConfigValue(java.lang.String,java.lang.String)>(v1, v3);
return v4;
}
public java.util.Set keySet()
{
java.util.Set v2;
io.smallrye.config.ConfigValueMapStringView v0;
java.util.Map v1;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Map delegate>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
return v2;
}
public java.util.Set entrySet()
{
io.smallrye.config.ConfigValueMapStringView$1 v2;
java.util.Set v1, v3;
io.smallrye.config.ConfigValueMapStringView v0;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Set entrySet>;
if v1 != null goto label1;
v2 = new io.smallrye.config.ConfigValueMapStringView$1;
specialinvoke v2.<io.smallrye.config.ConfigValueMapStringView$1: void <init>(io.smallrye.config.ConfigValueMapStringView)>(v0);
v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Set entrySet> = v2;
label1:
v3 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Set entrySet>;
return v3;
}
public java.util.Collection values()
{
io.smallrye.config.ConfigValueMapStringView$2 v2;
java.util.Collection v1, v3;
io.smallrye.config.ConfigValueMapStringView v0;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Collection values>;
if v1 != null goto label1;
v2 = new io.smallrye.config.ConfigValueMapStringView$2;
specialinvoke v2.<io.smallrye.config.ConfigValueMapStringView$2: void <init>(io.smallrye.config.ConfigValueMapStringView)>(v0);
v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Collection values> = v2;
label1:
v3 = v0.<io.smallrye.config.ConfigValueMapStringView: java.util.Collection values>;
return v3;
}
private io.smallrye.config.ConfigValue toConfigValue(java.lang.String, java.lang.String)
{
io.smallrye.config.ConfigValue v11;
io.smallrye.config.ConfigValue$ConfigValueBuilder v10, v3, v4, v5, v6, v8;
int v9;
io.smallrye.config.ConfigValueMapStringView v0;
java.lang.String v1, v2, v7;
v0 := @this: io.smallrye.config.ConfigValueMapStringView;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = staticinvoke <io.smallrye.config.ConfigValue: io.smallrye.config.ConfigValue$ConfigValueBuilder builder()>();
v4 = virtualinvoke v3.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withName(java.lang.String)>(v1);
v5 = virtualinvoke v4.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withValue(java.lang.String)>(v2);
v6 = virtualinvoke v5.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withRawValue(java.lang.String)>(v2);
v7 = v0.<io.smallrye.config.ConfigValueMapStringView: java.lang.String configSourceName>;
v8 = virtualinvoke v6.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withConfigSourceName(java.lang.String)>(v7);
v9 = v0.<io.smallrye.config.ConfigValueMapStringView: int configSourceOrdinal>;
v10 = virtualinvoke v8.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue$ConfigValueBuilder withConfigSourceOrdinal(int)>(v9);
v11 = virtualinvoke v10.<io.smallrye.config.ConfigValue$ConfigValueBuilder: io.smallrye.config.ConfigValue build()>();
return v11;
}
}