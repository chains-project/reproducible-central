final class io.smallrye.config.Converters$RangeCheckConverter extends java.lang.Object implements org.eclipse.microprofile.config.spi.Converter, java.io.Serializable
{
private static final long serialVersionUID;
private final java.util.Comparator comparator;
private final org.eclipse.microprofile.config.spi.Converter delegate;
private final java.lang.Object min;
private final boolean minInclusive;
private final java.lang.Object max;
private final boolean maxInclusive;
void <init>(java.util.Comparator, org.eclipse.microprofile.config.spi.Converter, java.lang.Object, boolean, java.lang.Object, boolean)
{
io.smallrye.config.Converters$RangeCheckConverter v0;
org.eclipse.microprofile.config.spi.Converter v2;
java.lang.Object v3, v5;
java.util.Comparator v1;
boolean v4, v6;
v0 := @this: io.smallrye.config.Converters$RangeCheckConverter;
v1 := @parameter0: java.util.Comparator;
v2 := @parameter1: org.eclipse.microprofile.config.spi.Converter;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: boolean;
v5 := @parameter4: java.lang.Object;
v6 := @parameter5: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.Converters$RangeCheckConverter: java.util.Comparator comparator> = v1;
v0.<io.smallrye.config.Converters$RangeCheckConverter: org.eclipse.microprofile.config.spi.Converter delegate> = v2;
v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object min> = v3;
v0.<io.smallrye.config.Converters$RangeCheckConverter: boolean minInclusive> = v4;
v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object max> = v5;
v0.<io.smallrye.config.Converters$RangeCheckConverter: boolean maxInclusive> = v6;
return;
}
public java.lang.Object convert(java.lang.String)
{
io.smallrye.config.ConfigMessages v12, v20, v23, v9;
org.eclipse.microprofile.config.spi.Converter v2;
int v18, v7;
java.lang.String v1;
boolean v19, v8;
java.lang.IllegalArgumentException v11, v14, v22, v25;
io.smallrye.config.Converters$RangeCheckConverter v0;
java.lang.Object v10, v13, v15, v17, v21, v24, v3, v4, v6;
java.util.Comparator v16, v5;
v0 := @this: io.smallrye.config.Converters$RangeCheckConverter;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.smallrye.config.Converters$RangeCheckConverter: org.eclipse.microprofile.config.spi.Converter delegate>;
v3 = interfaceinvoke v2.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object min>;
if v4 == null goto label3;
v5 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.util.Comparator comparator>;
v6 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object min>;
v7 = interfaceinvoke v5.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v3, v6);
v8 = v0.<io.smallrye.config.Converters$RangeCheckConverter: boolean minInclusive>;
if v8 == 0 goto label2;
if v7 >= 0 goto label3;
v9 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v10 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object min>;
v11 = interfaceinvoke v9.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException lessThanMinimumValue(java.lang.Object,java.lang.String)>(v10, v1);
throw v11;
label2:
if v7 > 0 goto label3;
v12 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v13 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object min>;
v14 = interfaceinvoke v12.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException lessThanEqualToMinimumValue(java.lang.Object,java.lang.String)>(v13, v1);
throw v14;
label3:
v15 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object max>;
if v15 == null goto label5;
v16 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.util.Comparator comparator>;
v17 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object max>;
v18 = interfaceinvoke v16.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v3, v17);
v19 = v0.<io.smallrye.config.Converters$RangeCheckConverter: boolean maxInclusive>;
if v19 == 0 goto label4;
if v18 <= 0 goto label5;
v20 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v21 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object max>;
v22 = interfaceinvoke v20.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException greaterThanMaximumValue(java.lang.Object,java.lang.String)>(v21, v1);
throw v22;
label4:
if v18 < 0 goto label5;
v23 = <io.smallrye.config.ConfigMessages: io.smallrye.config.ConfigMessages msg>;
v24 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object max>;
v25 = interfaceinvoke v23.<io.smallrye.config.ConfigMessages: java.lang.IllegalArgumentException greaterThanEqualToMaximumValue(java.lang.Object,java.lang.String)>(v24, v1);
throw v25;
label5:
return v3;
}
java.lang.Object readResolve()
{
io.smallrye.config.Converters$RangeCheckConverter v0, v2;
org.eclipse.microprofile.config.spi.Converter v4;
java.lang.Object v5, v7;
java.util.Comparator v1, v3;
boolean v6, v8;
v0 := @this: io.smallrye.config.Converters$RangeCheckConverter;
v1 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.util.Comparator comparator>;
if v1 == null goto label1;
v2 = v0;
goto label2;
label1:
v2 = new io.smallrye.config.Converters$RangeCheckConverter;
v3 = staticinvoke <java.util.Comparator: java.util.Comparator naturalOrder()>();
v4 = v0.<io.smallrye.config.Converters$RangeCheckConverter: org.eclipse.microprofile.config.spi.Converter delegate>;
v5 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object min>;
v6 = v0.<io.smallrye.config.Converters$RangeCheckConverter: boolean minInclusive>;
v7 = v0.<io.smallrye.config.Converters$RangeCheckConverter: java.lang.Object max>;
v8 = v0.<io.smallrye.config.Converters$RangeCheckConverter: boolean maxInclusive>;
specialinvoke v2.<io.smallrye.config.Converters$RangeCheckConverter: void <init>(java.util.Comparator,org.eclipse.microprofile.config.spi.Converter,java.lang.Object,boolean,java.lang.Object,boolean)>(v3, v4, v5, v6, v7, v8);
label2:
return v2;
}
}