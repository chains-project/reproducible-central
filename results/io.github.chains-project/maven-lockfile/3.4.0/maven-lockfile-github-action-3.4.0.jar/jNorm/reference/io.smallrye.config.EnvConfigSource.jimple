public class io.smallrye.config.EnvConfigSource extends io.smallrye.config.common.MapBackedConfigSource
{
private static final long serialVersionUID;
private static final int DEFAULT_ORDINAL;
protected void <init>()
{
io.smallrye.config.EnvConfigSource v0;
v0 := @this: io.smallrye.config.EnvConfigSource;
specialinvoke v0.<io.smallrye.config.EnvConfigSource: void <init>(int)>(300);
return;
}
protected void <init>(int)
{
int v1;
io.smallrye.config.EnvConfigSource v0;
java.util.Map v2;
v0 := @this: io.smallrye.config.EnvConfigSource;
v1 := @parameter0: int;
v2 = staticinvoke <io.smallrye.config.EnvConfigSource: java.util.Map getEnvProperties()>();
specialinvoke v0.<io.smallrye.config.EnvConfigSource: void <init>(java.util.Map,int)>(v2, v1);
return;
}
public void <init>(java.util.Map, int)
{
io.smallrye.config.EnvConfigSource v0;
java.util.Map v1;
int v2, v3;
v0 := @this: io.smallrye.config.EnvConfigSource;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: int;
v3 = staticinvoke <io.smallrye.config.EnvConfigSource: int getEnvOrdinal(java.util.Map,int)>(v1, v2);
specialinvoke v0.<io.smallrye.config.common.MapBackedConfigSource: void <init>(java.lang.String,java.util.Map,int)>("EnvConfigSource", v1, v3);
return;
}
public java.lang.String getValue(java.lang.String)
{
io.smallrye.config.EnvConfigSource v0;
java.util.Map v2;
java.lang.String v1, v3;
v0 := @this: io.smallrye.config.EnvConfigSource;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.smallrye.config.EnvConfigSource: java.util.Map getProperties()>();
v3 = staticinvoke <io.smallrye.config.EnvConfigSource: java.lang.String getValue(java.lang.String,java.util.Map)>(v1, v2);
return v3;
}
private static java.lang.String getValue(java.lang.String, java.util.Map)
{
java.util.Map v1;
java.lang.Object v2, v4, v6;
java.lang.String v0, v3, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.Map;
if v0 != null goto label1;
return null;
label1:
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
if v2 == null goto label2;
return v2;
label2:
v3 = staticinvoke <io.smallrye.config.common.utils.StringUtil: java.lang.String replaceNonAlphanumericByUnderscores(java.lang.String)>(v0);
v4 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
if v4 == null goto label3;
return v4;
label3:
v5 = virtualinvoke v3.<java.lang.String: java.lang.String toUpperCase()>();
v6 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v5);
return v6;
}
private static java.util.Map getEnvProperties()
{
java.lang.Object v1;
java.security.PrivilegedAction v0;
java.util.Map v2;
v0 = staticinvoke <io.smallrye.config.EnvConfigSource$lambda_getEnvProperties_0__3105: java.security.PrivilegedAction bootstrap$()>();
v1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v0);
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
return v2;
}
private static int getEnvOrdinal(java.util.Map, int)
{
org.eclipse.microprofile.config.spi.Converter v3;
java.util.Map v0;
int v1, v5;
java.lang.Object v4;
java.lang.String v2;
v0 := @parameter0: java.util.Map;
v1 := @parameter1: int;
v2 = staticinvoke <io.smallrye.config.EnvConfigSource: java.lang.String getValue(java.lang.String,java.util.Map)>("config_ordinal", v0);
if v2 == null goto label1;
v3 = <io.smallrye.config.Converters: org.eclipse.microprofile.config.spi.Converter INTEGER_CONVERTER>;
v4 = interfaceinvoke v3.<org.eclipse.microprofile.config.spi.Converter: java.lang.Object convert(java.lang.String)>(v2);
v5 = virtualinvoke v4.<java.lang.Integer: int intValue()>();
return v5;
label1:
return v1;
}
java.lang.Object writeReplace()
{
io.smallrye.config.EnvConfigSource v0;
io.smallrye.config.EnvConfigSource$Ser v1;
v0 := @this: io.smallrye.config.EnvConfigSource;
v1 = new io.smallrye.config.EnvConfigSource$Ser;
specialinvoke v1.<io.smallrye.config.EnvConfigSource$Ser: void <init>()>();
return v1;
}
}