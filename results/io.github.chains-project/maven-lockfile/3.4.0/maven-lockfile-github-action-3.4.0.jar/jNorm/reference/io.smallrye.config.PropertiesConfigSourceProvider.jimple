public class io.smallrye.config.PropertiesConfigSourceProvider extends io.smallrye.config.AbstractLocationConfigSourceLoader implements org.eclipse.microprofile.config.spi.ConfigSourceProvider
{
private final java.util.List configSources;
private final boolean includeFileSystem;
public void <init>(java.lang.String, java.lang.ClassLoader, boolean)
{
java.util.List v5, v6;
java.lang.ClassLoader v2;
java.lang.String v1;
io.smallrye.config.PropertiesConfigSourceProvider v0;
boolean v3;
java.util.ArrayList v4;
v0 := @this: io.smallrye.config.PropertiesConfigSourceProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.ClassLoader;
v3 := @parameter2: boolean;
specialinvoke v0.<io.smallrye.config.AbstractLocationConfigSourceLoader: void <init>()>();
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.config.PropertiesConfigSourceProvider: java.util.List configSources> = v4;
v0.<io.smallrye.config.PropertiesConfigSourceProvider: boolean includeFileSystem> = v3;
v5 = v0.<io.smallrye.config.PropertiesConfigSourceProvider: java.util.List configSources>;
v6 = virtualinvoke v0.<io.smallrye.config.PropertiesConfigSourceProvider: java.util.List loadConfigSources(java.lang.String,int,java.lang.ClassLoader)>(v1, 100, v2);
interfaceinvoke v5.<java.util.List: boolean addAll(java.util.Collection)>(v6);
return;
}
public java.util.List getConfigSources(java.lang.ClassLoader)
{
java.util.List v2;
java.lang.ClassLoader v1;
io.smallrye.config.PropertiesConfigSourceProvider v0;
v0 := @this: io.smallrye.config.PropertiesConfigSourceProvider;
v1 := @parameter0: java.lang.ClassLoader;
v2 = v0.<io.smallrye.config.PropertiesConfigSourceProvider: java.util.List configSources>;
return v2;
}
protected java.lang.String[] getFileExtensions()
{
java.lang.String[] v1;
io.smallrye.config.PropertiesConfigSourceProvider v0;
v0 := @this: io.smallrye.config.PropertiesConfigSourceProvider;
v1 = newarray (java.lang.String)[1];
v1[0] = "properties";
return v1;
}
protected org.eclipse.microprofile.config.spi.ConfigSource loadConfigSource(java.net.URL, int) throws java.io.IOException
{
java.net.URL v1;
int v2;
io.smallrye.config.PropertiesConfigSource v3;
io.smallrye.config.PropertiesConfigSourceProvider v0;
v0 := @this: io.smallrye.config.PropertiesConfigSourceProvider;
v1 := @parameter0: java.net.URL;
v2 := @parameter1: int;
v3 = new io.smallrye.config.PropertiesConfigSource;
specialinvoke v3.<io.smallrye.config.PropertiesConfigSource: void <init>(java.net.URL,int)>(v1, v2);
return v3;
}
protected java.util.List tryFileSystem(java.net.URI, int)
{
java.util.List v4;
int v2;
java.net.URI v1;
io.smallrye.config.PropertiesConfigSourceProvider v0;
boolean v3;
java.util.ArrayList v5;
v0 := @this: io.smallrye.config.PropertiesConfigSourceProvider;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: int;
v3 = v0.<io.smallrye.config.PropertiesConfigSourceProvider: boolean includeFileSystem>;
if v3 == 0 goto label1;
v4 = specialinvoke v0.<io.smallrye.config.AbstractLocationConfigSourceLoader: java.util.List tryFileSystem(java.net.URI,int)>(v1, v2);
return v4;
label1:
v5 = new java.util.ArrayList;
specialinvoke v5.<java.util.ArrayList: void <init>()>();
return v5;
}
public static io.smallrye.config.PropertiesConfigSourceProvider resource(java.lang.String, java.lang.ClassLoader)
{
java.lang.ClassLoader v1;
java.lang.String v0;
io.smallrye.config.PropertiesConfigSourceProvider v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.ClassLoader;
v2 = new io.smallrye.config.PropertiesConfigSourceProvider;
specialinvoke v2.<io.smallrye.config.PropertiesConfigSourceProvider: void <init>(java.lang.String,java.lang.ClassLoader,boolean)>(v0, v1, 1);
return v2;
}
public static io.smallrye.config.PropertiesConfigSourceProvider classPathResource(java.lang.String, java.lang.ClassLoader)
{
java.lang.ClassLoader v1;
java.lang.String v0;
io.smallrye.config.PropertiesConfigSourceProvider v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.ClassLoader;
v2 = new io.smallrye.config.PropertiesConfigSourceProvider;
specialinvoke v2.<io.smallrye.config.PropertiesConfigSourceProvider: void <init>(java.lang.String,java.lang.ClassLoader,boolean)>(v0, v1, 0);
return v2;
}
public static java.util.List propertiesSources(java.lang.String, java.lang.ClassLoader)
{
java.util.List v3;
java.lang.ClassLoader v1;
java.lang.String v0;
io.smallrye.config.PropertiesConfigSourceProvider v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.ClassLoader;
v2 = staticinvoke <io.smallrye.config.PropertiesConfigSourceProvider: io.smallrye.config.PropertiesConfigSourceProvider resource(java.lang.String,java.lang.ClassLoader)>(v0, v1);
v3 = virtualinvoke v2.<io.smallrye.config.PropertiesConfigSourceProvider: java.util.List getConfigSources(java.lang.ClassLoader)>(v1);
return v3;
}
public static java.util.List classPathSources(java.lang.String, java.lang.ClassLoader)
{
java.util.List v3;
java.lang.ClassLoader v1;
java.lang.String v0;
io.smallrye.config.PropertiesConfigSourceProvider v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.ClassLoader;
v2 = staticinvoke <io.smallrye.config.PropertiesConfigSourceProvider: io.smallrye.config.PropertiesConfigSourceProvider classPathResource(java.lang.String,java.lang.ClassLoader)>(v0, v1);
v3 = virtualinvoke v2.<io.smallrye.config.PropertiesConfigSourceProvider: java.util.List getConfigSources(java.lang.ClassLoader)>(v1);
return v3;
}
}