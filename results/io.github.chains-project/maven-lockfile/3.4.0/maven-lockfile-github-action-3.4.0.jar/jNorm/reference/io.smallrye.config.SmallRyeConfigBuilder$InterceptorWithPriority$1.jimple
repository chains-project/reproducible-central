class io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1 extends java.lang.Object implements io.smallrye.config.ConfigSourceInterceptorFactory
{
final io.smallrye.config.ConfigSourceInterceptor val$interceptor;
void <init>(io.smallrye.config.ConfigSourceInterceptor)
{
io.smallrye.config.ConfigSourceInterceptor v1;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1 v0;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptor;
v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1: io.smallrye.config.ConfigSourceInterceptor val$interceptor> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.config.ConfigSourceInterceptor getInterceptor(io.smallrye.config.ConfigSourceInterceptorContext)
{
io.smallrye.config.ConfigSourceInterceptor v2;
io.smallrye.config.ConfigSourceInterceptorContext v1;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1 v0;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1;
v1 := @parameter0: io.smallrye.config.ConfigSourceInterceptorContext;
v2 = v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1: io.smallrye.config.ConfigSourceInterceptor val$interceptor>;
return v2;
}
public java.util.OptionalInt getPriority()
{
io.smallrye.config.ConfigSourceInterceptor v3;
int v5;
java.lang.Class v4;
io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1 v0;
java.util.OptionalInt v1, v6;
boolean v2;
v0 := @this: io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1;
v1 = specialinvoke v0.<io.smallrye.config.ConfigSourceInterceptorFactory: java.util.OptionalInt getPriority()>();
v2 = virtualinvoke v1.<java.util.OptionalInt: boolean isPresent()>();
if v2 == 0 goto label1;
return v1;
label1:
v3 = v0.<io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority$1: io.smallrye.config.ConfigSourceInterceptor val$interceptor>;
v4 = virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v5 = staticinvoke <io.smallrye.config.SmallRyeConfigBuilder$InterceptorWithPriority: int getPriority(java.lang.Class)>(v4);
v6 = staticinvoke <java.util.OptionalInt: java.util.OptionalInt of(int)>(v5);
return v6;
}
}