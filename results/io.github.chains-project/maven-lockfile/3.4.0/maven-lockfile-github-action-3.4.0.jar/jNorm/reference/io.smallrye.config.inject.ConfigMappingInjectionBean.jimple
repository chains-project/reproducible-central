public class io.smallrye.config.inject.ConfigMappingInjectionBean extends java.lang.Object implements jakarta.enterprise.inject.spi.Bean
{
private final jakarta.enterprise.inject.spi.BeanManager bm;
private final io.smallrye.config.ConfigMappings$ConfigClassWithPrefix configClassWithPrefix;
public void <init>(io.smallrye.config.ConfigMappings$ConfigClassWithPrefix, jakarta.enterprise.inject.spi.BeanManager)
{
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v1;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
jakarta.enterprise.inject.spi.BeanManager v2;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 := @parameter0: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix;
v2 := @parameter1: jakarta.enterprise.inject.spi.BeanManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: jakarta.enterprise.inject.spi.BeanManager bm> = v2;
v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix configClassWithPrefix> = v1;
return;
}
public java.lang.Class getBeanClass()
{
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v1;
java.lang.Class v2;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 = v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix configClassWithPrefix>;
v2 = virtualinvoke v1.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.Class getKlass()>();
return v2;
}
public java.util.Set getInjectionPoints()
{
java.util.Set v1;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v1;
}
public java.lang.Object create(jakarta.enterprise.context.spi.CreationalContext)
{
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v5;
io.smallrye.config.inject.MetadataInjectionPoint v3;
jakarta.enterprise.context.spi.CreationalContext v1;
org.eclipse.microprofile.config.Config v11;
jakarta.enterprise.inject.spi.Annotated v7, v8;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
java.lang.'annotation'.Annotation v9;
java.lang.Class v13;
java.lang.Object v12, v14, v4;
java.lang.ClassLoader v10;
java.lang.String v6;
jakarta.enterprise.inject.spi.BeanManager v2;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 := @parameter0: jakarta.enterprise.context.spi.CreationalContext;
v2 = v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: jakarta.enterprise.inject.spi.BeanManager bm>;
v3 = new io.smallrye.config.inject.MetadataInjectionPoint;
specialinvoke v3.<io.smallrye.config.inject.MetadataInjectionPoint: void <init>()>();
v4 = interfaceinvoke v2.<jakarta.enterprise.inject.spi.BeanManager: java.lang.Object getInjectableReference(jakarta.enterprise.inject.spi.InjectionPoint,jakarta.enterprise.context.spi.CreationalContext)>(v3, v1);
v5 = v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix configClassWithPrefix>;
v6 = virtualinvoke v5.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.String getPrefix()>();
if v4 == null goto label1;
v7 = interfaceinvoke v4.<jakarta.enterprise.inject.spi.InjectionPoint: jakarta.enterprise.inject.spi.Annotated getAnnotated()>();
if v7 == null goto label1;
v8 = interfaceinvoke v4.<jakarta.enterprise.inject.spi.InjectionPoint: jakarta.enterprise.inject.spi.Annotated getAnnotated()>();
v9 = interfaceinvoke v8.<jakarta.enterprise.inject.spi.Annotated: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/config/ConfigMapping;");
if v9 == null goto label1;
v6 = interfaceinvoke v9.<io.smallrye.config.ConfigMapping: java.lang.String prefix()>();
label1:
v10 = staticinvoke <io.smallrye.config.inject.SecuritySupport: java.lang.ClassLoader getContextClassLoader()>();
v11 = staticinvoke <org.eclipse.microprofile.config.ConfigProvider: org.eclipse.microprofile.config.Config getConfig(java.lang.ClassLoader)>(v10);
v12 = interfaceinvoke v11.<org.eclipse.microprofile.config.Config: java.lang.Object unwrap(java.lang.Class)>(class "Lio/smallrye/config/SmallRyeConfig;");
v13 = virtualinvoke v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: java.lang.Class getBeanClass()>();
v14 = virtualinvoke v12.<io.smallrye.config.SmallRyeConfig: java.lang.Object getConfigMapping(java.lang.Class,java.lang.String)>(v13, v6);
return v14;
}
public void destroy(java.lang.Object, jakarta.enterprise.context.spi.CreationalContext)
{
java.lang.Object v1;
jakarta.enterprise.context.spi.CreationalContext v2;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: jakarta.enterprise.context.spi.CreationalContext;
return;
}
public java.util.Set getTypes()
{
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v1;
java.util.Set v3;
java.lang.Class v2;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 = v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix configClassWithPrefix>;
v2 = virtualinvoke v1.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.Class getKlass()>();
v3 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v2);
return v3;
}
public java.util.Set getQualifiers()
{
jakarta.enterprise.inject.Default$Literal v1;
java.util.Set v2;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 = <jakarta.enterprise.inject.Default$Literal: jakarta.enterprise.inject.Default$Literal INSTANCE>;
v2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v1);
return v2;
}
public java.lang.Class getScope()
{
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
return class "Ljakarta/enterprise/context/Dependent;";
}
public java.lang.String getName()
{
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
io.smallrye.config.ConfigMappings$ConfigClassWithPrefix v3;
java.lang.Class v1, v4;
java.lang.String v2, v5, v6;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
v3 = v0.<io.smallrye.config.inject.ConfigMappingInjectionBean: io.smallrye.config.ConfigMappings$ConfigClassWithPrefix configClassWithPrefix>;
v4 = virtualinvoke v3.<io.smallrye.config.ConfigMappings$ConfigClassWithPrefix: java.lang.Class getKlass()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.String getName()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v2, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001_\u0001");
return v6;
}
public java.util.Set getStereotypes()
{
java.util.Set v1;
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v1;
}
public boolean isAlternative()
{
io.smallrye.config.inject.ConfigMappingInjectionBean v0;
v0 := @this: io.smallrye.config.inject.ConfigMappingInjectionBean;
return 0;
}
}