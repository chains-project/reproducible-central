public class io.smallrye.config.inject.InjectionMessages_$bundle extends java.lang.Object implements io.smallrye.config.inject.InjectionMessages, java.io.Serializable
{
private static final long serialVersionUID;
public static final io.smallrye.config.inject.InjectionMessages_$bundle INSTANCE;
private static final java.util.Locale LOCALE;
protected void <init>()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
protected java.lang.Object readResolve()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0, v1;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 = <io.smallrye.config.inject.InjectionMessages_$bundle: io.smallrye.config.inject.InjectionMessages_$bundle INSTANCE>;
return v1;
}
protected java.util.Locale getLoggingLocale()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v1;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 = <io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale LOCALE>;
return v1;
}
protected java.lang.String noConfigValue$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02000: Failed to Inject @ConfigProperty for key %s into %s since the config property could not be found in any config source";
}
public final io.smallrye.config.inject.ConfigException noConfigValue(java.lang.String, java.lang.String)
{
java.lang.Object[] v6;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v4;
java.lang.String v1, v2, v5, v7;
io.smallrye.config.inject.ConfigException v3;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = new io.smallrye.config.inject.ConfigException;
v4 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String noConfigValue$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<io.smallrye.config.inject.ConfigException: void <init>(java.lang.String,java.lang.String)>(v7, v1);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
private static void _copyStackTraceMinusOne(java.lang.Throwable)
{
java.lang.Throwable v0;
java.lang.Object[] v3;
java.lang.StackTraceElement[] v1;
int v2;
v0 := @parameter0: java.lang.Throwable;
v1 = virtualinvoke v0.<java.lang.Throwable: java.lang.StackTraceElement[] getStackTrace()>();
v2 = lengthof v1;
v3 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(v1, 1, v2);
virtualinvoke v0.<java.lang.Throwable: void setStackTrace(java.lang.StackTraceElement[])>(v3);
return;
}
protected java.lang.String retrieveConfigFailure$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02001: Failed to Inject @ConfigProperty for key %s into %s %s";
}
public final io.smallrye.config.inject.ConfigException retrieveConfigFailure(java.lang.String, java.lang.String, java.lang.String, java.lang.Exception)
{
java.lang.Object[] v8;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.lang.Exception v4;
java.util.Locale v6;
java.lang.String v1, v2, v3, v7, v9;
io.smallrye.config.inject.ConfigException v5;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Exception;
v5 = new io.smallrye.config.inject.ConfigException;
v6 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v7 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String retrieveConfigFailure$str()>();
v8 = newarray (java.lang.Object)[3];
v8[0] = v1;
v8[1] = v2;
v8[2] = v3;
v9 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v6, v7, v8);
specialinvoke v5.<io.smallrye.config.inject.ConfigException: void <init>(java.lang.String,java.lang.String,java.lang.Throwable)>(v9, v1, v4);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v5);
return v5;
}
protected java.lang.String noConfigPropertyDefaultName$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02002: Could not find default name for @ConfigProperty InjectionPoint %s";
}
public final java.lang.IllegalStateException noConfigPropertyDefaultName(jakarta.enterprise.inject.spi.InjectionPoint)
{
java.lang.IllegalStateException v2;
java.lang.Object[] v5;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v3;
jakarta.enterprise.inject.spi.InjectionPoint v1;
java.lang.String v4, v6;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: jakarta.enterprise.inject.spi.InjectionPoint;
v2 = new java.lang.IllegalStateException;
v3 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String noConfigPropertyDefaultName$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String unhandledConfigProperty$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02003: Unhandled ConfigProperty";
}
public final java.lang.IllegalStateException unhandledConfigProperty()
{
java.lang.IllegalStateException v1;
java.lang.Object[] v4;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v2;
java.lang.String v3, v5;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 = new java.lang.IllegalStateException;
v2 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v3 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String unhandledConfigProperty$str()>();
v4 = newarray (java.lang.Object)[0];
v5 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v2, v3, v4);
specialinvoke v1.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v1);
return v1;
}
protected java.lang.String propertyNotFound$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02004: Required property %s not found";
}
public final java.util.NoSuchElementException propertyNotFound(java.lang.String)
{
java.lang.Object[] v5;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v3;
java.lang.String v1, v4, v6;
java.util.NoSuchElementException v2;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 = new java.util.NoSuchElementException;
v3 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String propertyNotFound$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String noRawType$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02005: Type has no raw type class: %s";
}
public final java.lang.IllegalArgumentException noRawType(java.lang.reflect.Type)
{
java.lang.Object[] v5;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.lang.reflect.Type v1;
java.util.Locale v3;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: java.lang.reflect.Type;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String noRawType$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
protected java.lang.String illegalConversion$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02006: The property %s cannot be converted to %s";
}
public final java.lang.IllegalArgumentException illegalConversion(java.lang.String, java.lang.reflect.Type)
{
java.lang.Object[] v6;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.lang.IllegalArgumentException v3;
java.lang.reflect.Type v2;
java.util.Locale v4;
java.lang.String v1, v5, v7;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.reflect.Type;
v3 = new java.lang.IllegalArgumentException;
v4 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v5 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String illegalConversion$str()>();
v6 = newarray (java.lang.Object)[2];
v6[0] = v1;
v6[1] = v2;
v7 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v4, v5, v6);
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v7);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v3);
return v3;
}
protected java.lang.String noRegisteredConverter$str()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
return "SRCFG02007: No Converter registered for %s";
}
public final java.lang.IllegalArgumentException noRegisteredConverter(java.lang.Class)
{
java.lang.Object[] v5;
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v3;
java.lang.Class v1;
java.lang.String v4, v6;
java.lang.IllegalArgumentException v2;
v0 := @this: io.smallrye.config.inject.InjectionMessages_$bundle;
v1 := @parameter0: java.lang.Class;
v2 = new java.lang.IllegalArgumentException;
v3 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale getLoggingLocale()>();
v4 = virtualinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: java.lang.String noRegisteredConverter$str()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.util.Locale,java.lang.String,java.lang.Object[])>(v3, v4, v5);
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v6);
staticinvoke <io.smallrye.config.inject.InjectionMessages_$bundle: void _copyStackTraceMinusOne(java.lang.Throwable)>(v2);
return v2;
}
static void <clinit>()
{
io.smallrye.config.inject.InjectionMessages_$bundle v0;
java.util.Locale v1;
v0 = new io.smallrye.config.inject.InjectionMessages_$bundle;
specialinvoke v0.<io.smallrye.config.inject.InjectionMessages_$bundle: void <init>()>();
<io.smallrye.config.inject.InjectionMessages_$bundle: io.smallrye.config.inject.InjectionMessages_$bundle INSTANCE> = v0;
v1 = <java.util.Locale: java.util.Locale ROOT>;
<io.smallrye.config.inject.InjectionMessages_$bundle: java.util.Locale LOCALE> = v1;
return;
}
}