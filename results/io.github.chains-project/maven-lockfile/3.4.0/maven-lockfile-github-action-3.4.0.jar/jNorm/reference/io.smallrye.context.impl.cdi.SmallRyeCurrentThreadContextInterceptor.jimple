public class io.smallrye.context.impl.cdi.SmallRyeCurrentThreadContextInterceptor extends java.lang.Object
{
public void <init>()
{
io.smallrye.context.impl.cdi.SmallRyeCurrentThreadContextInterceptor v0;
v0 := @this: io.smallrye.context.impl.cdi.SmallRyeCurrentThreadContextInterceptor;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.lang.Object manageCurrentContext(jakarta.interceptor.InvocationContext) throws java.lang.Exception
{
io.smallrye.context.impl.cdi.SmallRyeCurrentThreadContextInterceptor v0;
java.util.Map v2, v4;
java.lang.reflect.Method v10, v11;
boolean v20, v22, v5, v7, v9;
io.smallrye.context.SmallRyeThreadContext$Builder v24, v25, v26, v27;
io.smallrye.context.CleanAutoCloseable v28;
io.smallrye.context.SmallRyeThreadContext v23;
java.lang.Throwable v30;
jakarta.interceptor.InvocationContext v1;
java.lang.String[] v12, v13, v14;
int v15, v16, v17;
java.lang.String v18, v19;
java.util.Iterator v6;
java.lang.Object v21, v29, v3, v31, v8;
v0 := @this: io.smallrye.context.impl.cdi.SmallRyeCurrentThreadContextInterceptor;
v1 := @parameter0: jakarta.interceptor.InvocationContext;
v2 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.util.Map getContextData()>();
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>("io.quarkus.arc.interceptorBindings");
if v3 != null goto label01;
v4 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.util.Map getContextData()>();
v3 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>("org.jboss.weld.interceptor.bindings");
label01:
v5 = v3 instanceof java.util.Collection;
if v5 == 0 goto label03;
v6 = interfaceinvoke v3.<java.util.Collection: java.util.Iterator iterator()>();
label02:
v7 = interfaceinvoke v6.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label03;
v8 = interfaceinvoke v6.<java.util.Iterator: java.lang.Object next()>();
v9 = v8 instanceof io.smallrye.context.api.CurrentThreadContext;
if v9 == 0 goto label02;
label03:
if v8 != null goto label04;
v10 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.reflect.Method getMethod()>();
if v10 == null goto label04;
v11 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.reflect.Method getMethod()>();
virtualinvoke v11.<java.lang.reflect.Method: java.lang.'annotation'.Annotation getAnnotation(java.lang.Class)>(class "Lio/smallrye/context/api/CurrentThreadContext;");
label04:
if v8 == null goto label12;
v12 = interfaceinvoke v8.<io.smallrye.context.api.CurrentThreadContext: java.lang.String[] unchanged()>();
v13 = interfaceinvoke v8.<io.smallrye.context.api.CurrentThreadContext: java.lang.String[] propagated()>();
v14 = interfaceinvoke v8.<io.smallrye.context.api.CurrentThreadContext: java.lang.String[] cleared()>();
v15 = lengthof v13;
if v15 != 0 goto label05;
v16 = lengthof v14;
if v16 != 0 goto label05;
v17 = lengthof v12;
if v17 != 1 goto label05;
v18 = "Remaining";
v19 = v12[0];
v20 = virtualinvoke v18.<java.lang.String: boolean equals(java.lang.Object)>(v19);
if v20 == 0 goto label05;
v21 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
return v21;
label05:
v22 = interfaceinvoke v8.<io.smallrye.context.api.CurrentThreadContext: boolean remove()>();
if v22 == 0 goto label06;
v23 = null;
goto label07;
label06:
v24 = staticinvoke <io.smallrye.context.SmallRyeThreadContext: io.smallrye.context.SmallRyeThreadContext$Builder builder()>();
v25 = virtualinvoke v24.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder cleared(java.lang.String[])>(v14);
v26 = virtualinvoke v25.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder propagated(java.lang.String[])>(v13);
v27 = virtualinvoke v26.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext$Builder unchanged(java.lang.String[])>(v12);
v23 = virtualinvoke v27.<io.smallrye.context.SmallRyeThreadContext$Builder: io.smallrye.context.SmallRyeThreadContext build()>();
label07:
v28 = staticinvoke <io.smallrye.context.SmallRyeThreadContext: io.smallrye.context.CleanAutoCloseable withThreadContext(io.smallrye.context.SmallRyeThreadContext)>(v23);
label08:
v29 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
label09:
if v28 == null goto label10;
interfaceinvoke v28.<io.smallrye.context.CleanAutoCloseable: void close()>();
label10:
return v29;
label11:
v30 := @caughtexception;
throw v30;
label12:
v31 = interfaceinvoke v1.<jakarta.interceptor.InvocationContext: java.lang.Object proceed()>();
return v31;
catch java.lang.Throwable from label08 to label09 with label11;
}
}