public class io.smallrye.graphql.client.core.utils.validation.NameValidation extends java.lang.Object
{
private static final java.lang.String _NAME_REGEX;
private static final java.lang.String _FIELD_NAME_REGEX;
private static final java.util.regex.Pattern NAME_PATTERN;
private static final java.util.regex.Pattern FIELD_NAME_PATTERN;
public void <init>()
{
io.smallrye.graphql.client.core.utils.validation.NameValidation v0;
v0 := @this: io.smallrye.graphql.client.core.utils.validation.NameValidation;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String validateNameAllowEmpty(java.lang.String)
{
java.lang.String v0, v5;
java.util.regex.Pattern v2;
java.lang.IllegalArgumentException v4;
boolean v1, v3;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = virtualinvoke v0.<java.lang.String: boolean isEmpty()>();
if v1 == 0 goto label2;
label1:
return "";
label2:
v2 = <io.smallrye.graphql.client.core.utils.validation.NameValidation: java.util.regex.Pattern NAME_PATTERN>;
v3 = staticinvoke <io.smallrye.graphql.client.core.utils.validation.NameValidation: boolean nameMatchesPattern(java.lang.String,java.util.regex.Pattern)>(v0, v2);
if v3 != 0 goto label3;
v4 = new java.lang.IllegalArgumentException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid name: \u0001");
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v5);
throw v4;
label3:
return v0;
}
public static java.lang.String validateFragmentName(java.lang.String)
{
java.lang.String v0, v4;
java.util.regex.Pattern v1;
java.lang.IllegalArgumentException v3, v6;
boolean v2, v5;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = <io.smallrye.graphql.client.core.utils.validation.NameValidation: java.util.regex.Pattern NAME_PATTERN>;
v2 = staticinvoke <io.smallrye.graphql.client.core.utils.validation.NameValidation: boolean nameMatchesPattern(java.lang.String,java.util.regex.Pattern)>(v0, v1);
if v2 != 0 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid fragment name: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label2:
v5 = virtualinvoke v0.<java.lang.String: boolean equals(java.lang.Object)>("on");
if v5 == 0 goto label3;
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Fragment name cannot be \'on\'");
throw v6;
label3:
return v0;
}
public static java.lang.String validateName(java.lang.String)
{
java.lang.String v0, v4;
java.util.regex.Pattern v1;
java.lang.IllegalArgumentException v3;
boolean v2;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = <io.smallrye.graphql.client.core.utils.validation.NameValidation: java.util.regex.Pattern NAME_PATTERN>;
v2 = staticinvoke <io.smallrye.graphql.client.core.utils.validation.NameValidation: boolean nameMatchesPattern(java.lang.String,java.util.regex.Pattern)>(v0, v1);
if v2 != 0 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid name: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label2:
return v0;
}
public static java.lang.String validateFieldName(java.lang.String)
{
java.lang.String v0, v4;
java.util.regex.Pattern v1;
java.lang.IllegalArgumentException v3;
boolean v2;
v0 := @parameter0: java.lang.String;
if v0 == null goto label1;
v1 = <io.smallrye.graphql.client.core.utils.validation.NameValidation: java.util.regex.Pattern FIELD_NAME_PATTERN>;
v2 = staticinvoke <io.smallrye.graphql.client.core.utils.validation.NameValidation: boolean nameMatchesPattern(java.lang.String,java.util.regex.Pattern)>(v0, v1);
if v2 != 0 goto label2;
label1:
v3 = new java.lang.IllegalArgumentException;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Invalid field name: \u0001");
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v4);
throw v3;
label2:
return v0;
}
private static boolean nameMatchesPattern(java.lang.String, java.util.regex.Pattern)
{
java.util.regex.Matcher v2;
java.lang.String v0;
java.util.regex.Pattern v1;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.regex.Pattern;
v2 = virtualinvoke v1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v3 = virtualinvoke v2.<java.util.regex.Matcher: boolean matches()>();
return v3;
}
static void <clinit>()
{
java.util.regex.Pattern v0, v1;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("[a-zA-Z_][a-zA-Z0-9_]*");
<io.smallrye.graphql.client.core.utils.validation.NameValidation: java.util.regex.Pattern NAME_PATTERN> = v0;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^[a-zA-Z_][a-zA-Z0-9_]*(:[a-zA-Z_][a-zA-Z0-9_]*)?$");
<io.smallrye.graphql.client.core.utils.validation.NameValidation: java.util.regex.Pattern FIELD_NAME_PATTERN> = v1;
return;
}
}