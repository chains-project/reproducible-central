public class io.smallrye.graphql.client.impl.ResponseImpl extends java.lang.Object implements io.smallrye.graphql.client.Response
{
public static final java.lang.String STATUS_CODE;
public static final java.lang.String STATUS_MESSAGE;
private final jakarta.json.JsonObject data;
private final java.util.List errors;
private final jakarta.json.JsonObject extensions;
private final java.util.Map metadata;
public void <init>(jakarta.json.JsonObject, java.util.List, java.util.Map)
{
java.util.List v2;
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v3;
jakarta.json.JsonObject v1;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<io.smallrye.graphql.client.impl.ResponseImpl: void <init>(jakarta.json.JsonObject,java.util.List,jakarta.json.JsonObject,java.util.Map)>(v1, v2, null, v3);
return;
}
public void <init>(jakarta.json.JsonObject, java.util.List, jakarta.json.JsonObject, java.util.Map)
{
java.util.List v2;
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v4, v5, v6;
jakarta.json.JsonObject v1, v3;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: java.util.List;
v3 := @parameter2: jakarta.json.JsonObject;
v4 := @parameter3: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data> = v1;
v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors> = v2;
v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject extensions> = v3;
if v4 == null goto label1;
v5 = v4;
goto label2;
label1:
v5 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
label2:
v6 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v5);
v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata> = v6;
return;
}
public void <init>(jakarta.json.JsonObject, java.util.List, java.util.Map, java.lang.Integer, java.lang.String)
{
java.util.List v2;
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v3;
jakarta.json.JsonObject v1;
java.lang.String v5;
java.lang.Integer v4;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: java.lang.Integer;
v5 := @parameter4: java.lang.String;
specialinvoke v0.<io.smallrye.graphql.client.impl.ResponseImpl: void <init>(jakarta.json.JsonObject,java.util.List,jakarta.json.JsonObject,java.util.Map,java.lang.Integer,java.lang.String)>(v1, v2, null, v3, v4, v5);
return;
}
public void <init>(jakarta.json.JsonObject, java.util.List, jakarta.json.JsonObject, java.util.Map, java.lang.Integer, java.lang.String)
{
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.HashMap v7;
java.lang.Integer v5;
java.util.List v10, v2, v9;
java.util.Map v11, v4;
jakarta.json.JsonObject v1, v3;
java.lang.String v6, v8;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: java.util.List;
v3 := @parameter2: jakarta.json.JsonObject;
v4 := @parameter3: java.util.Map;
v5 := @parameter4: java.lang.Integer;
v6 := @parameter5: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data> = v1;
v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors> = v2;
v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject extensions> = v3;
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
if v4 == null goto label1;
interfaceinvoke v7.<java.util.Map: void putAll(java.util.Map)>(v4);
label1:
if v5 == null goto label2;
v8 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v5);
v9 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>(v8);
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("<status-code>", v9);
label2:
if v6 == null goto label3;
v10 = staticinvoke <java.util.List: java.util.List of(java.lang.Object)>(v6);
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("<status-message>", v10);
label3:
v11 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v7);
v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata> = v11;
return;
}
public java.lang.Object getObject(java.lang.Class, java.lang.String)
{
jakarta.json.JsonValue v5;
jakarta.json.JsonObject v12, v15, v25, v3, v4, v7;
boolean v20, v23, v29, v6, v9;
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Set v16, v8;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v24;
jakarta.json.JsonValue$ValueType v18, v19, v21, v22, v27, v28, v34;
java.lang.String v2, v35;
java.util.NoSuchElementException v11, v17;
java.lang.RuntimeException v36;
java.lang.IllegalArgumentException v31;
java.lang.Class v1;
java.lang.Object v13, v26, v32;
io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages v10, v14, v30, v33;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
if v3 == null goto label1;
v4 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v5 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
if v6 != 0 goto label1;
v7 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v8 = interfaceinvoke v7.<jakarta.json.JsonObject: java.util.Set keySet()>();
v9 = interfaceinvoke v8.<java.util.Set: boolean isEmpty()>();
if v9 == 0 goto label2;
label1:
v10 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v11 = interfaceinvoke v10.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.util.NoSuchElementException noDataInResponse()>();
throw v11;
label2:
v12 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v13 = interfaceinvoke v12.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>(v2);
if v13 != null goto label3;
v14 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v15 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v16 = interfaceinvoke v15.<jakarta.json.JsonObject: java.util.Set keySet()>();
v17 = interfaceinvoke v14.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.util.NoSuchElementException fieldNotFoundInResponse(java.lang.String,java.util.Set)>(v2, v16);
throw v17;
label3:
v18 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v19 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
v20 = virtualinvoke v18.<jakarta.json.JsonValue$ValueType: boolean equals(java.lang.Object)>(v19);
if v20 == 0 goto label4;
return null;
label4:
v21 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v22 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType OBJECT>;
v23 = virtualinvoke v21.<jakarta.json.JsonValue$ValueType: boolean equals(java.lang.Object)>(v22);
if v23 == 0 goto label5;
v24 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo of(java.lang.reflect.Type)>(v1);
v25 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonObject asJsonObject()>();
v26 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJson(java.lang.String,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v2, v24, v25, null);
return v26;
label5:
v27 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v28 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType ARRAY>;
v29 = virtualinvoke v27.<jakarta.json.JsonValue$ValueType: boolean equals(java.lang.Object)>(v28);
if v29 == 0 goto label6;
v30 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v31 = interfaceinvoke v30.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.lang.IllegalArgumentException responseContainsArray(java.lang.String)>(v2);
throw v31;
label6:
v32 = specialinvoke v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.lang.Object getScalarValue(jakarta.json.JsonValue)>(v13);
if v32 == null goto label7;
return v32;
label7:
v33 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v34 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v35 = virtualinvoke v34.<jakarta.json.JsonValue$ValueType: java.lang.String toString()>();
v36 = interfaceinvoke v33.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.lang.RuntimeException unexpectedValueInResponse(java.lang.String,java.lang.String)>(v2, v35);
throw v36;
}
public java.util.List getList(java.lang.Class, java.lang.String)
{
jakarta.json.JsonValue v32, v5;
jakarta.json.JsonObject v12, v15, v3, v4, v7;
boolean v20, v21, v24, v6, v9;
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Set v16, v8;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v26;
java.util.ArrayList v25;
jakarta.json.JsonValue$ValueType v18, v19, v29;
java.lang.String v2, v30;
java.util.NoSuchElementException v11, v17;
java.lang.RuntimeException v31;
java.lang.IllegalArgumentException v23;
java.util.function.Consumer v27;
java.lang.Class v1;
java.lang.Object v13;
io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages v10, v14, v22, v28;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
if v3 == null goto label1;
v4 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v5 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
if v6 != 0 goto label1;
v7 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v8 = interfaceinvoke v7.<jakarta.json.JsonObject: java.util.Set keySet()>();
v9 = interfaceinvoke v8.<java.util.Set: boolean isEmpty()>();
if v9 == 0 goto label2;
label1:
v10 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v11 = interfaceinvoke v10.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.util.NoSuchElementException noDataInResponse()>();
throw v11;
label2:
v12 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v13 = interfaceinvoke v12.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>(v2);
if v13 != null goto label3;
v14 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v15 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v16 = interfaceinvoke v15.<jakarta.json.JsonObject: java.util.Set keySet()>();
v17 = interfaceinvoke v14.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.util.NoSuchElementException fieldNotFoundInResponse(java.lang.String,java.util.Set)>(v2, v16);
throw v17;
label3:
v18 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v19 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
v20 = virtualinvoke v18.<jakarta.json.JsonValue$ValueType: boolean equals(java.lang.Object)>(v19);
if v20 == 0 goto label4;
return null;
label4:
v21 = v13 instanceof jakarta.json.JsonObject;
if v21 == 0 goto label5;
v22 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v23 = interfaceinvoke v22.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.lang.IllegalArgumentException responseContainsSingleObject(java.lang.String)>(v2);
throw v23;
label5:
v24 = v13 instanceof jakarta.json.JsonArray;
if v24 == 0 goto label6;
v25 = new java.util.ArrayList;
specialinvoke v25.<java.util.ArrayList: void <init>()>();
v26 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo of(java.lang.reflect.Type)>(v1);
v27 = staticinvoke <io.smallrye.graphql.client.impl.ResponseImpl$lambda_getList_0__702: java.util.function.Consumer bootstrap$(io.smallrye.graphql.client.impl.ResponseImpl,java.util.List,java.lang.String,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo)>(v0, v25, v2, v26);
interfaceinvoke v32.<jakarta.json.JsonArray: void forEach(java.util.function.Consumer)>(v27);
return v25;
label6:
v28 = <io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages msg>;
v29 = interfaceinvoke v13.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v30 = virtualinvoke v29.<jakarta.json.JsonValue$ValueType: java.lang.String toString()>();
v31 = interfaceinvoke v28.<io.smallrye.graphql.client.impl.SmallRyeGraphQLClientMessages: java.lang.RuntimeException unexpectedValueInResponse(java.lang.String,java.lang.String)>(v2, v30);
throw v31;
}
private java.lang.Object getScalarValue(jakarta.json.JsonValue)
{
jakarta.json.JsonValue v1;
io.smallrye.graphql.client.impl.ResponseImpl v0;
long v6;
int[] v2;
java.lang.Long v7;
int v4, v5;
jakarta.json.JsonValue$ValueType v3;
java.lang.Boolean v10, v9;
java.lang.String v8;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 := @parameter0: jakarta.json.JsonValue;
v2 = <io.smallrye.graphql.client.impl.ResponseImpl$1: int[] $SwitchMap$jakarta$json$JsonValue$ValueType>;
v3 = interfaceinvoke v1.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v4 = virtualinvoke v3.<jakarta.json.JsonValue$ValueType: int ordinal()>();
v5 = v2[v4];
tableswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label4;
default: goto label5;
};
label1:
v6 = interfaceinvoke v1.<jakarta.json.JsonNumber: long longValue()>();
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v6);
return v7;
label2:
v8 = interfaceinvoke v1.<jakarta.json.JsonString: java.lang.String getString()>();
return v8;
label3:
v9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
return v9;
label4:
v10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
return v10;
label5:
return null;
}
public jakarta.json.JsonObject getData()
{
jakarta.json.JsonObject v1;
io.smallrye.graphql.client.impl.ResponseImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
return v1;
}
public java.util.List getErrors()
{
java.util.List v1;
io.smallrye.graphql.client.impl.ResponseImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors>;
return v1;
}
public jakarta.json.JsonObject getExtensions()
{
jakarta.json.JsonObject v1;
io.smallrye.graphql.client.impl.ResponseImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject extensions>;
return v1;
}
public void throwExceptionIfErrors()
{
java.util.List v1, v4;
io.smallrye.graphql.client.GraphQLClientException v3;
io.smallrye.graphql.client.impl.ResponseImpl v0;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors>;
v2 = interfaceinvoke v1.<java.util.List: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = new io.smallrye.graphql.client.GraphQLClientException;
v4 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors>;
specialinvoke v3.<io.smallrye.graphql.client.GraphQLClientException: void <init>(java.lang.String,java.util.List)>("Errors from service", v4);
throw v3;
label1:
return;
}
public boolean hasData()
{
jakarta.json.JsonObject v1;
boolean v2;
io.smallrye.graphql.client.impl.ResponseImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasError()
{
java.util.List v1;
boolean v2;
io.smallrye.graphql.client.impl.ResponseImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public boolean hasExtensions()
{
io.smallrye.graphql.client.impl.ResponseImpl v0;
jakarta.json.JsonObject v1, v2;
boolean v3, v4;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject extensions>;
if v1 == null goto label1;
v2 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject extensions>;
v3 = interfaceinvoke v2.<jakarta.json.JsonObject: boolean isEmpty()>();
if v3 != 0 goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public java.lang.String toString()
{
java.util.List v2;
io.smallrye.graphql.client.impl.ResponseImpl v0;
jakarta.json.JsonObject v1, v3;
java.lang.String v4;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject data>;
v2 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.List errors>;
v3 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: jakarta.json.JsonObject extensions>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (jakarta.json.JsonObject,java.util.List,jakarta.json.JsonObject)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("ResponseImpl{data=\u0001, errors=\u0001, extensions=\u0001}");
return v4;
}
public java.util.Map getHeaders()
{
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata>;
return v1;
}
public java.util.Map getTransportMeta()
{
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v1;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata>;
return v1;
}
public java.lang.Integer getStatusCode()
{
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v1, v3;
java.lang.Object v4, v5;
java.lang.Integer v6;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata>;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("<status-code>");
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>("<status-code>");
v5 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(0);
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(java.lang.String)>(v5);
return v6;
label1:
return null;
}
public java.lang.String getStatusMessage()
{
io.smallrye.graphql.client.impl.ResponseImpl v0;
java.util.Map v1, v3;
java.lang.Object v4, v5;
boolean v2;
v0 := @this: io.smallrye.graphql.client.impl.ResponseImpl;
v1 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata>;
v2 = interfaceinvoke v1.<java.util.Map: boolean containsKey(java.lang.Object)>("<status-message>");
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.ResponseImpl: java.util.Map metadata>;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>("<status-message>");
v5 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(0);
return v5;
label1:
return null;
}
}