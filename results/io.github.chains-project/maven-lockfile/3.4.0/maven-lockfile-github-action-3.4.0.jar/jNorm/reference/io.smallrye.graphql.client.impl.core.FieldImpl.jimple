public class io.smallrye.graphql.client.impl.core.FieldImpl extends io.smallrye.graphql.client.impl.core.AbstractField
{
public void <init>()
{
io.smallrye.graphql.client.impl.core.FieldImpl v0;
v0 := @this: io.smallrye.graphql.client.impl.core.FieldImpl;
specialinvoke v0.<io.smallrye.graphql.client.impl.core.AbstractField: void <init>()>();
return;
}
public java.lang.String build()
{
io.smallrye.graphql.client.impl.core.FieldImpl v0;
java.util.List v3, v6, v9;
java.lang.StringBuilder v1;
java.lang.String v11, v12, v2, v5, v8;
boolean v10, v4, v7;
v0 := @this: io.smallrye.graphql.client.impl.core.FieldImpl;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.lang.String getName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
v3 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.util.List getArguments()>();
v4 = interfaceinvoke v3.<java.util.List: boolean isEmpty()>();
if v4 != 0 goto label1;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
v5 = specialinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.lang.String _buildArgs()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
label1:
v6 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.util.List getDirectives()>();
v7 = interfaceinvoke v6.<java.util.List: boolean isEmpty()>();
if v7 != 0 goto label2;
v8 = specialinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.lang.String _buildDirectives()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
label2:
v9 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.util.List getFields()>();
v10 = interfaceinvoke v9.<java.util.List: boolean isEmpty()>();
if v10 != 0 goto label3;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("{");
v11 = specialinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.lang.String _buildFields()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v11);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("}");
label3:
v12 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v12;
}
private java.lang.String _buildArgs()
{
io.smallrye.graphql.client.impl.core.FieldImpl v0;
java.lang.Object[] v4;
io.smallrye.graphql.client.impl.core.ArgumentImpl[] v3;
java.util.List v2;
int v10, v5, v6, v9;
java.lang.StringBuilder v1;
java.lang.String v11, v8;
io.smallrye.graphql.client.impl.core.ArgumentImpl v7;
v0 := @this: io.smallrye.graphql.client.impl.core.FieldImpl;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.util.List getArguments()>();
v3 = newarray (io.smallrye.graphql.client.impl.core.ArgumentImpl)[0];
v4 = interfaceinvoke v2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v3);
v5 = 0;
label1:
v6 = lengthof v4;
if v5 >= v6 goto label3;
v7 = v4[v5];
v8 = virtualinvoke v7.<io.smallrye.graphql.client.impl.core.ArgumentImpl: java.lang.String build()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
v9 = lengthof v4;
v10 = v9 - 1;
if v5 >= v10 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label2:
v5 = v5 + 1;
goto label1;
label3:
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
private java.lang.String _buildFields()
{
io.smallrye.graphql.client.core.FieldOrFragment v7;
io.smallrye.graphql.client.impl.core.FieldImpl v0;
java.lang.Object[] v4;
java.util.List v2;
io.smallrye.graphql.client.core.FieldOrFragment[] v3;
int v10, v5, v6, v9;
java.lang.StringBuilder v1;
java.lang.String v11, v8;
v0 := @this: io.smallrye.graphql.client.impl.core.FieldImpl;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.util.List getFields()>();
v3 = newarray (io.smallrye.graphql.client.core.FieldOrFragment)[0];
v4 = interfaceinvoke v2.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v3);
v5 = 0;
label1:
v6 = lengthof v4;
if v5 >= v6 goto label3;
v7 = v4[v5];
v8 = interfaceinvoke v7.<io.smallrye.graphql.client.core.FieldOrFragment: java.lang.String build()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
v9 = lengthof v4;
v10 = v9 - 1;
if v5 >= v10 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(" ");
label2:
v5 = v5 + 1;
goto label1;
label3:
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
private java.lang.String _buildDirectives()
{
io.smallrye.graphql.client.impl.core.FieldImpl v0;
java.util.List v1;
java.util.stream.Stream v2, v4;
java.lang.Object v6;
java.util.stream.Collector v5;
java.util.function.Function v3;
v0 := @this: io.smallrye.graphql.client.impl.core.FieldImpl;
v1 = virtualinvoke v0.<io.smallrye.graphql.client.impl.core.FieldImpl: java.util.List getDirectives()>();
v2 = interfaceinvoke v1.<java.util.List: java.util.stream.Stream stream()>();
v3 = staticinvoke <io.smallrye.graphql.client.impl.core.FieldImpl$build__784: java.util.function.Function bootstrap$()>();
v4 = interfaceinvoke v2.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v3);
v5 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining()>();
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v5);
return v6;
}
}