public class io.smallrye.graphql.client.impl.typesafe.ResultBuilder extends java.lang.Object
{
private final io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method;
private final jakarta.json.JsonObject response;
private final java.lang.String responseString;
private final java.lang.Integer statusCode;
private final java.lang.String statusMessage;
private jakarta.json.JsonObject data;
private jakarta.json.JsonObject extensions;
private java.util.Map transportMeta;
private static final jakarta.json.JsonPatch ERROR_MARK;
public void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, java.lang.String, boolean)
{
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
java.lang.String v2;
boolean v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation,java.lang.String,java.lang.Integer,java.lang.String,java.util.Map,boolean)>(v1, v2, null, null, null, v3);
return;
}
public void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation, java.lang.String, java.lang.Integer, java.lang.String, java.util.Map, boolean)
{
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
java.lang.Integer v3;
java.util.Map v5;
jakarta.json.JsonObject v8;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v1;
java.lang.Boolean v7;
java.lang.String v2, v4;
boolean v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Integer;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.util.Map;
v6 := @parameter5: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method> = v1;
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.Integer statusCode> = v3;
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.String statusMessage> = v4;
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.String responseString> = v2;
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.util.Map transportMeta> = v5;
v7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
v8 = staticinvoke <io.smallrye.graphql.client.impl.ResponseReader: jakarta.json.JsonObject parseGraphQLResponse(java.lang.String,java.lang.Boolean)>(v2, v7);
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response> = v8;
return;
}
public java.lang.Object read()
{
java.lang.Integer v3;
java.util.Map v24;
jakarta.json.JsonObject v1, v11, v18, v25, v7, v8;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v12, v15, v19, v21, v27, v29, v9;
java.lang.String v13, v20, v28, v4, v5, v6;
boolean v10, v17;
io.smallrye.graphql.client.InvalidResponseException v2;
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
java.lang.Object v14, v23, v26;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v16, v22, v30;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
if v1 != null goto label1;
v2 = new io.smallrye.graphql.client.InvalidResponseException;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.Integer statusCode>;
v4 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.String statusMessage>;
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.lang.String responseString>;
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Integer,java.lang.String,java.lang.String)>(v3, v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected response. Code=\u0001, message=\"\u0001\", body=\"\u0001\"");
specialinvoke v2.<io.smallrye.graphql.client.InvalidResponseException: void <init>(java.lang.String)>(v6);
throw v2;
label1:
v7 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject readData()>();
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data> = v7;
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: void readErrors()>();
v8 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
if v8 != null goto label2;
return null;
label2:
v9 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v10 = virtualinvoke v9.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isSingle()>();
if v10 == 0 goto label3;
v11 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
v12 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v13 = virtualinvoke v12.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String getName()>();
v14 = interfaceinvoke v11.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>(v13);
goto label4;
label3:
v14 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
label4:
v15 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v16 = virtualinvoke v15.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getReturnType()>();
v17 = virtualinvoke v16.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isTypesafeResponse()>();
if v17 == 0 goto label5;
v18 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject readExtensions()>();
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject extensions> = v18;
v19 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v20 = virtualinvoke v19.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String toString()>();
v21 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v22 = virtualinvoke v21.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getReturnType()>();
v23 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJsonTypesafeResponse(java.lang.String,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v20, v22, v14, null);
v24 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.util.Map transportMeta>;
v25 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject extensions>;
v26 = staticinvoke <io.smallrye.graphql.client.typesafe.api.TypesafeResponse: io.smallrye.graphql.client.typesafe.api.TypesafeResponse withTransportMetaAndExtensions(io.smallrye.graphql.client.typesafe.api.TypesafeResponse,java.util.Map,jakarta.json.JsonObject)>(v23, v24, v25);
goto label6;
label5:
v27 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v28 = virtualinvoke v27.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String toString()>();
v29 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v30 = virtualinvoke v29.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getReturnType()>();
v26 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJson(java.lang.String,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v28, v30, v14, null);
label6:
return v26;
}
private jakarta.json.JsonObject readData()
{
jakarta.json.JsonObject v1, v3, v5, v6;
io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation v13, v7, v9;
java.lang.String v10, v14, v15;
boolean v11, v2, v4, v8;
io.smallrye.graphql.client.InvalidResponseException v12;
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v2 = interfaceinvoke v1.<jakarta.json.JsonObject: boolean containsKey(java.lang.Object)>("data");
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v4 = interfaceinvoke v3.<jakarta.json.JsonObject: boolean isNull(java.lang.String)>("data");
if v4 == 0 goto label2;
label1:
return null;
label2:
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v6 = interfaceinvoke v5.<jakarta.json.JsonObject: jakarta.json.JsonObject getJsonObject(java.lang.String)>("data");
v7 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v8 = virtualinvoke v7.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: boolean isSingle()>();
if v8 == 0 goto label3;
v9 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v10 = virtualinvoke v9.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String getName()>();
v11 = interfaceinvoke v6.<jakarta.json.JsonObject: boolean containsKey(java.lang.Object)>(v10);
if v11 != 0 goto label3;
v12 = new io.smallrye.graphql.client.InvalidResponseException;
v13 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation method>;
v14 = virtualinvoke v13.<io.smallrye.graphql.client.impl.typesafe.reflection.MethodInvocation: java.lang.String getName()>();
v15 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v14) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No data for \'\u0001\'");
specialinvoke v12.<io.smallrye.graphql.client.InvalidResponseException: void <init>(java.lang.String)>(v15);
throw v12;
label3:
return v6;
}
private void readErrors()
{
java.util.function.Function v15;
jakarta.json.JsonObject v1, v3, v5;
java.util.stream.Collector v10, v17;
boolean v12, v2, v4;
io.smallrye.graphql.client.GraphQLClientException v13;
java.util.function.Predicate v8;
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
java.util.stream.Stream v14, v16, v7, v9;
java.lang.Object v11, v18;
jakarta.json.JsonArray v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v2 = interfaceinvoke v1.<jakarta.json.JsonObject: boolean containsKey(java.lang.Object)>("errors");
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v4 = interfaceinvoke v3.<jakarta.json.JsonObject: boolean isNull(java.lang.String)>("errors");
if v4 == 0 goto label2;
label1:
return;
label2:
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v6 = interfaceinvoke v5.<jakarta.json.JsonObject: jakarta.json.JsonArray getJsonArray(java.lang.String)>("errors");
if v6 != null goto label3;
return;
label3:
v7 = interfaceinvoke v6.<jakarta.json.JsonArray: java.util.stream.Stream stream()>();
v8 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.ResultBuilder$lambda_readErrors_0__715: java.util.function.Predicate bootstrap$(io.smallrye.graphql.client.impl.typesafe.ResultBuilder)>(v0);
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream filter(java.util.function.Predicate)>(v8);
v10 = staticinvoke <jakarta.json.stream.JsonCollectors: java.util.stream.Collector toJsonArray()>();
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v10);
v12 = interfaceinvoke v11.<jakarta.json.JsonArray: boolean isEmpty()>();
if v12 == 0 goto label4;
return;
label4:
v13 = new io.smallrye.graphql.client.GraphQLClientException;
v14 = interfaceinvoke v11.<jakarta.json.JsonArray: java.util.stream.Stream stream()>();
v15 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.ResultBuilder$readError__716: java.util.function.Function bootstrap$()>();
v16 = interfaceinvoke v14.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v15);
v17 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v18 = interfaceinvoke v16.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v17);
specialinvoke v13.<io.smallrye.graphql.client.GraphQLClientException: void <init>(java.lang.String,java.util.List)>("errors from service", v18);
throw v13;
}
private boolean apply(jakarta.json.JsonValue)
{
jakarta.json.JsonValue v1, v15, v20;
java.util.function.Function v5;
jakarta.json.JsonStructure v24, v27;
jakarta.json.JsonObject v12, v14, v19, v25, v3;
java.lang.String v17;
java.util.stream.Collector v7;
boolean v10, v13, v18;
jakarta.json.JsonPointer v9;
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
jakarta.json.JsonArrayBuilder v11;
java.util.function.Consumer v22;
java.util.List v2;
jakarta.json.JsonPatch v23;
java.util.stream.Stream v4, v6;
java.lang.Class v16;
java.lang.Object v8;
jakarta.json.JsonArray v21, v26;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 := @parameter0: jakarta.json.JsonValue;
v2 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.ResultBuilder: java.util.List getPath(jakarta.json.JsonValue)>(v1);
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
if v3 == null goto label1;
if v2 != null goto label2;
label1:
return 0;
label2:
v4 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v5 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.ResultBuilder$toString__717: java.util.function.Function bootstrap$()>();
v6 = interfaceinvoke v4.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v5);
v7 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector joining(java.lang.CharSequence,java.lang.CharSequence,java.lang.CharSequence)>("/", "/", "");
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v7);
v9 = staticinvoke <jakarta.json.Json: jakarta.json.JsonPointer createPointer(java.lang.String)>(v8);
v10 = specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: boolean exists(jakarta.json.JsonPointer)>(v9);
if v10 != 0 goto label3;
return 0;
label3:
v11 = staticinvoke <jakarta.json.Json: jakarta.json.JsonArrayBuilder createArrayBuilder()>();
v12 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
v13 = interfaceinvoke v9.<jakarta.json.JsonPointer: boolean containsValue(jakarta.json.JsonStructure)>(v12);
if v13 == 0 goto label4;
v14 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
v15 = interfaceinvoke v9.<jakarta.json.JsonPointer: jakarta.json.JsonValue getValue(jakarta.json.JsonStructure)>(v14);
v16 = class "Lio/smallrye/graphql/client/typesafe/api/ErrorOr;";
v17 = virtualinvoke v16.<java.lang.Class: java.lang.String getSimpleName()>();
v18 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonUtils: boolean isListOf(jakarta.json.JsonValue,java.lang.String)>(v15, v17);
if v18 == 0 goto label4;
v19 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
v20 = interfaceinvoke v9.<jakarta.json.JsonPointer: jakarta.json.JsonValue getValue(jakarta.json.JsonStructure)>(v19);
v21 = interfaceinvoke v20.<jakarta.json.JsonValue: jakarta.json.JsonArray asJsonArray()>();
virtualinvoke v11.<java.lang.Object: java.lang.Class getClass()>();
v22 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.ResultBuilder$add__718: java.util.function.Consumer bootstrap$(jakarta.json.JsonArrayBuilder)>(v11);
interfaceinvoke v21.<jakarta.json.JsonArray: void forEach(java.util.function.Consumer)>(v22);
label4:
v23 = <io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonPatch ERROR_MARK>;
v24 = interfaceinvoke v23.<jakarta.json.JsonPatch: jakarta.json.JsonStructure apply(jakarta.json.JsonStructure)>(v1);
interfaceinvoke v11.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonValue)>(v24);
v25 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
v26 = interfaceinvoke v11.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
v27 = interfaceinvoke v9.<jakarta.json.JsonPointer: jakarta.json.JsonStructure replace(jakarta.json.JsonStructure,jakarta.json.JsonValue)>(v25, v26);
v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data> = v27;
return 1;
}
private jakarta.json.JsonObject readExtensions()
{
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
jakarta.json.JsonObject v1, v3, v5, v6;
boolean v2, v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v2 = interfaceinvoke v1.<jakarta.json.JsonObject: boolean containsKey(java.lang.Object)>("extensions");
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v4 = interfaceinvoke v3.<jakarta.json.JsonObject: boolean isNull(java.lang.String)>("extensions");
if v4 == 0 goto label2;
label1:
return null;
label2:
v5 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject response>;
v6 = interfaceinvoke v5.<jakarta.json.JsonObject: jakarta.json.JsonObject getJsonObject(java.lang.String)>("extensions");
return v6;
}
private boolean exists(jakarta.json.JsonPointer)
{
io.smallrye.graphql.client.impl.typesafe.ResultBuilder v0;
jakarta.json.JsonObject v2;
jakarta.json.JsonException v3;
jakarta.json.JsonPointer v1;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.ResultBuilder;
v1 := @parameter0: jakarta.json.JsonPointer;
label1:
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonObject data>;
interfaceinvoke v1.<jakarta.json.JsonPointer: boolean containsValue(jakarta.json.JsonStructure)>(v2);
label2:
return 1;
label3:
v3 := @caughtexception;
return 0;
catch jakarta.json.JsonException from label1 to label2 with label3;
}
private static java.util.List getPath(jakarta.json.JsonValue)
{
jakarta.json.JsonValue v0;
java.util.function.Function v8;
java.util.stream.Stream v7, v9;
jakarta.json.JsonObject v1;
jakarta.json.JsonValue$ValueType v3, v4;
java.lang.Object v11, v2;
java.util.stream.Collector v10;
jakarta.json.JsonArray v6;
boolean v5;
v0 := @parameter0: jakarta.json.JsonValue;
v1 = interfaceinvoke v0.<jakarta.json.JsonValue: jakarta.json.JsonObject asJsonObject()>();
v2 = interfaceinvoke v1.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>("path");
if v2 == null goto label1;
v3 = interfaceinvoke v2.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v4 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType ARRAY>;
v5 = virtualinvoke v3.<jakarta.json.JsonValue$ValueType: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = interfaceinvoke v2.<jakarta.json.JsonValue: jakarta.json.JsonArray asJsonArray()>();
goto label2;
label1:
v6 = null;
label2:
if v6 == null goto label3;
v7 = interfaceinvoke v6.<jakarta.json.JsonArray: java.util.stream.Stream stream()>();
v8 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.ResultBuilder$toValue__719: java.util.function.Function bootstrap$()>();
v9 = interfaceinvoke v7.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v8);
v10 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v11 = interfaceinvoke v9.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v10);
label3:
return v11;
}
static void <clinit>()
{
jakarta.json.JsonPatch v4;
jakarta.json.JsonPatchBuilder v0, v3;
java.lang.Class v1;
java.lang.String v2;
v0 = staticinvoke <jakarta.json.Json: jakarta.json.JsonPatchBuilder createPatchBuilder()>();
v1 = class "Lio/smallrye/graphql/client/typesafe/api/ErrorOr;";
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
v3 = interfaceinvoke v0.<jakarta.json.JsonPatchBuilder: jakarta.json.JsonPatchBuilder add(java.lang.String,java.lang.String)>("/__typename", v2);
v4 = interfaceinvoke v3.<jakarta.json.JsonPatchBuilder: jakarta.json.JsonPatch build()>();
<io.smallrye.graphql.client.impl.typesafe.ResultBuilder: jakarta.json.JsonPatch ERROR_MARK> = v4;
return;
}
}