public abstract class io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean extends java.lang.Object implements jakarta.enterprise.inject.spi.Bean
{
protected final java.lang.Class type;
public void <init>(java.lang.Class)
{
java.lang.Class v1;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 := @parameter0: java.lang.Class;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean: java.lang.Class type> = v1;
return;
}
public java.lang.Class getBeanClass()
{
java.lang.Class v1;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean: java.lang.Class type>;
return v1;
}
public java.util.Set getInjectionPoints()
{
java.util.Set v1;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v1;
}
public java.lang.String getName()
{
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
return null;
}
public java.util.Set getQualifiers()
{
java.util.HashSet v1;
java.util.List v5;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
jakarta.enterprise.util.AnnotationLiteral[] v2;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean$1 v3;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean$2 v4;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 = new java.util.HashSet;
v2 = newarray (jakarta.enterprise.util.AnnotationLiteral)[2];
v3 = new io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean$1;
specialinvoke v3.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean$1: void <init>(io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean)>(v0);
v2[0] = v3;
v4 = new io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean$2;
specialinvoke v4.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean$2: void <init>(io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean)>(v0);
v2[1] = v4;
v5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
specialinvoke v1.<java.util.HashSet: void <init>(java.util.Collection)>(v5);
return v1;
}
public java.lang.Class getScope()
{
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
return class "Ljakarta/enterprise/context/Dependent;";
}
public java.util.Set getStereotypes()
{
java.util.Set v1;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 = staticinvoke <java.util.Collections: java.util.Set emptySet()>();
return v1;
}
public java.util.Set getTypes()
{
java.util.Set v2;
java.lang.Class v1;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean: java.lang.Class type>;
v2 = staticinvoke <java.util.Collections: java.util.Set singleton(java.lang.Object)>(v1);
return v2;
}
public boolean isAlternative()
{
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
return 0;
}
public void destroy(java.lang.Object, jakarta.enterprise.context.spi.CreationalContext)
{
java.lang.Object v1;
jakarta.enterprise.context.spi.CreationalContext v2;
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: jakarta.enterprise.context.spi.CreationalContext;
interfaceinvoke v2.<jakarta.enterprise.context.spi.CreationalContext: void release()>();
return;
}
public java.lang.String toString()
{
io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean v0;
java.util.Set v5;
java.lang.Class v1, v3;
java.lang.String v2, v4, v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getSimpleName()>();
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean: java.lang.Class type>;
v4 = virtualinvoke v3.<java.lang.Class: java.lang.String getName()>();
v5 = virtualinvoke v0.<io.smallrye.graphql.client.impl.typesafe.cdi.AbstractBean: java.util.Set getQualifiers()>();
v6 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String,java.util.Set)>(v2, v4, v5) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: \u0001 with \u0001");
return v6;
}
}