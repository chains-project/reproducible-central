class io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader extends io.smallrye.graphql.client.impl.typesafe.json.Reader
{
private static final java.lang.String JSON_KEY_FOR_KEY;
private static final java.lang.String JSON_KEY_FOR_VALUE;
private final io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo keyType;
private final io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo valueType;
void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo, io.smallrye.graphql.client.impl.typesafe.json.Location, jakarta.json.JsonArray, io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)
{
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v4;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v1, v5, v6;
io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader v0;
io.smallrye.graphql.client.impl.typesafe.json.Location v2;
jakarta.json.JsonArray v3;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader;
v1 := @parameter0: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo;
v2 := @parameter1: io.smallrye.graphql.client.impl.typesafe.json.Location;
v3 := @parameter2: jakarta.json.JsonArray;
v4 := @parameter3: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo;
specialinvoke v0.<io.smallrye.graphql.client.impl.typesafe.json.Reader: void <init>(io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,io.smallrye.graphql.client.impl.typesafe.json.Location,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v1, v2, v3, v4);
v5 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getKeyType()>();
v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo keyType> = v5;
v6 = virtualinvoke v1.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo getValueType()>();
v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo valueType> = v6;
return;
}
java.lang.Object read()
{
jakarta.json.JsonValue v2, v8;
io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader v0;
jakarta.json.JsonObject v14, v20;
boolean v10, v25, v4;
io.smallrye.graphql.client.InvalidResponseException v18, v26;
io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo v24, v28, v3, v31;
java.util.HashMap v7;
jakarta.json.JsonValue$ValueType v16, v17, v22, v23;
java.lang.String v19, v27;
java.util.Iterator v9;
io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo v29, v32;
io.smallrye.graphql.client.impl.typesafe.json.MapLocationBuilder v5;
java.lang.Object v11, v15, v21, v30, v33;
io.smallrye.graphql.client.impl.typesafe.json.Location v1, v12, v13, v6;
v0 := @this: io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader;
v1 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
v2 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: jakarta.json.JsonValue value>;
v3 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo type>;
v4 = virtualinvoke v3.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isMap()>();
staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.GraphQLClientValueHelper: void check(io.smallrye.graphql.client.impl.typesafe.json.Location,java.lang.Object,boolean)>(v1, v2, v4);
v5 = new io.smallrye.graphql.client.impl.typesafe.json.MapLocationBuilder;
v6 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.json.Location location>;
specialinvoke v5.<io.smallrye.graphql.client.impl.typesafe.json.MapLocationBuilder: void <init>(io.smallrye.graphql.client.impl.typesafe.json.Location)>(v6);
v7 = new java.util.HashMap;
specialinvoke v7.<java.util.HashMap: void <init>()>();
v8 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: jakarta.json.JsonValue value>;
v9 = interfaceinvoke v8.<jakarta.json.JsonArray: java.util.Iterator iterator()>();
label1:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label4;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = virtualinvoke v5.<io.smallrye.graphql.client.impl.typesafe.json.MapLocationBuilder: io.smallrye.graphql.client.impl.typesafe.json.Location nextKeyLocation()>();
v13 = virtualinvoke v5.<io.smallrye.graphql.client.impl.typesafe.json.MapLocationBuilder: io.smallrye.graphql.client.impl.typesafe.json.Location nextValueLocation()>();
v14 = interfaceinvoke v11.<jakarta.json.JsonValue: jakarta.json.JsonObject asJsonObject()>();
v15 = interfaceinvoke v14.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>("key");
v16 = interfaceinvoke v15.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v17 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
if v16 != v17 goto label2;
v18 = new io.smallrye.graphql.client.InvalidResponseException;
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.json.Location)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected null key at \u0001");
specialinvoke v18.<io.smallrye.graphql.client.InvalidResponseException: void <init>(java.lang.String)>(v19);
throw v18;
label2:
v20 = interfaceinvoke v11.<jakarta.json.JsonValue: jakarta.json.JsonObject asJsonObject()>();
v21 = interfaceinvoke v20.<jakarta.json.JsonObject: java.lang.Object get(java.lang.Object)>("value");
v22 = interfaceinvoke v21.<jakarta.json.JsonValue: jakarta.json.JsonValue$ValueType getValueType()>();
v23 = <jakarta.json.JsonValue$ValueType: jakarta.json.JsonValue$ValueType NULL>;
if v22 != v23 goto label3;
v24 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo valueType>;
v25 = virtualinvoke v24.<io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo: boolean isNonNull()>();
if v25 == 0 goto label3;
v26 = new io.smallrye.graphql.client.InvalidResponseException;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.smallrye.graphql.client.impl.typesafe.json.Location)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unexpected null value at \u0001");
specialinvoke v26.<io.smallrye.graphql.client.InvalidResponseException: void <init>(java.lang.String)>(v27);
throw v26;
label3:
v28 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo keyType>;
v29 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo field>;
v30 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJson(io.smallrye.graphql.client.impl.typesafe.json.Location,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v12, v28, v15, v29);
v31 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo valueType>;
v32 = v0.<io.smallrye.graphql.client.impl.typesafe.json.JsonMapReader: io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo field>;
v33 = staticinvoke <io.smallrye.graphql.client.impl.typesafe.json.JsonReader: java.lang.Object readJson(io.smallrye.graphql.client.impl.typesafe.json.Location,io.smallrye.graphql.client.impl.typesafe.reflection.TypeInfo,jakarta.json.JsonValue,io.smallrye.graphql.client.impl.typesafe.reflection.FieldInfo)>(v13, v31, v21, v32);
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v30, v33);
goto label1;
label4:
return v7;
}
}