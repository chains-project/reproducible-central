public final class io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629 extends java.lang.Object implements java.util.function.Consumer
{
io.smallrye.mutiny.subscription.MultiEmitter cap0;
public static java.util.function.Consumer bootstrap$(io.smallrye.mutiny.subscription.MultiEmitter)
{
io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629 v1;
io.smallrye.mutiny.subscription.MultiEmitter v0;
v0 := @parameter0: io.smallrye.mutiny.subscription.MultiEmitter;
v1 = new io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629;
specialinvoke v1.<io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629: void <init>(io.smallrye.mutiny.subscription.MultiEmitter)>(v0);
return v1;
}
public void <init>(io.smallrye.mutiny.subscription.MultiEmitter)
{
io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629 v0;
io.smallrye.mutiny.subscription.MultiEmitter v1;
v0 := @this: io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiEmitter;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629: io.smallrye.mutiny.subscription.MultiEmitter cap0> = v1;
return;
}
public void accept(java.lang.Object)
{
io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629 v0;
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiEmitter v2;
v0 := @this: io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.graphql.client.vertx.websocket.graphqltransportws.GraphQLTransportWSSubprotocolHandler$fail__629: io.smallrye.mutiny.subscription.MultiEmitter cap0>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiEmitter: void fail(java.lang.Throwable)>(v1);
return;
}
}