public class io.smallrye.mutiny.groups.MultiGroup extends java.lang.Object
{
private final io.smallrye.mutiny.Multi upstream;
public void <init>(io.smallrye.mutiny.Multi)
{
io.smallrye.mutiny.groups.MultiGroup v0;
java.lang.Object v2;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.groups.MultiGroup;
v1 := @parameter0: io.smallrye.mutiny.Multi;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.MultiGroup: io.smallrye.mutiny.Multi upstream> = v2;
return;
}
public io.smallrye.mutiny.groups.MultiGroupIntoLists intoLists()
{
io.smallrye.mutiny.groups.MultiGroupIntoLists v1;
io.smallrye.mutiny.groups.MultiGroup v0;
io.smallrye.mutiny.Multi v2;
v0 := @this: io.smallrye.mutiny.groups.MultiGroup;
v1 = new io.smallrye.mutiny.groups.MultiGroupIntoLists;
v2 = v0.<io.smallrye.mutiny.groups.MultiGroup: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiGroupIntoLists: void <init>(io.smallrye.mutiny.Multi)>(v2);
return v1;
}
public io.smallrye.mutiny.groups.MultiGroupIntoMultis intoMultis()
{
io.smallrye.mutiny.groups.MultiGroup v0;
io.smallrye.mutiny.groups.MultiGroupIntoMultis v1;
io.smallrye.mutiny.Multi v2;
v0 := @this: io.smallrye.mutiny.groups.MultiGroup;
v1 = new io.smallrye.mutiny.groups.MultiGroupIntoMultis;
v2 = v0.<io.smallrye.mutiny.groups.MultiGroup: io.smallrye.mutiny.Multi upstream>;
specialinvoke v1.<io.smallrye.mutiny.groups.MultiGroupIntoMultis: void <init>(io.smallrye.mutiny.Multi)>(v2);
return v1;
}
public io.smallrye.mutiny.Multi by(java.util.function.Function)
{
java.util.function.Function v1, v3, v6;
io.smallrye.mutiny.Multi v5, v7;
io.smallrye.mutiny.groups.MultiGroup v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.MultiGroupByOp v4;
v0 := @this: io.smallrye.mutiny.groups.MultiGroup;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "keyMapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiGroupByOp;
v5 = v0.<io.smallrye.mutiny.groups.MultiGroup: io.smallrye.mutiny.Multi upstream>;
v6 = staticinvoke <io.smallrye.mutiny.groups.MultiGroup$lambda_by_0__2929: java.util.function.Function bootstrap$()>();
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.Function,java.util.function.Function)>(v5, v3, v6);
v7 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v4);
return v7;
}
public io.smallrye.mutiny.Multi by(java.util.function.Function, java.util.function.Function)
{
java.util.function.Function v1, v2, v4, v6;
io.smallrye.mutiny.Multi v8, v9;
io.smallrye.mutiny.groups.MultiGroup v0;
java.lang.Object v3, v5;
io.smallrye.mutiny.operators.multi.MultiGroupByOp v7;
v0 := @this: io.smallrye.mutiny.groups.MultiGroup;
v1 := @parameter0: java.util.function.Function;
v2 := @parameter1: java.util.function.Function;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "keyMapper");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "valueMapper");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v5);
v7 = new io.smallrye.mutiny.operators.multi.MultiGroupByOp;
v8 = v0.<io.smallrye.mutiny.groups.MultiGroup: io.smallrye.mutiny.Multi upstream>;
specialinvoke v7.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.Function,java.util.function.Function)>(v8, v4, v6);
v9 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Multi onMultiCreation(io.smallrye.mutiny.Multi)>(v7);
return v9;
}
}