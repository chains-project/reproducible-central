public class io.smallrye.mutiny.groups.UniAndGroup4 extends io.smallrye.mutiny.groups.UniAndGroupIterable
{
public void <init>(io.smallrye.mutiny.Uni, io.smallrye.mutiny.Uni, io.smallrye.mutiny.Uni, io.smallrye.mutiny.Uni)
{
java.util.List v6;
io.smallrye.mutiny.groups.UniAndGroup4 v0;
io.smallrye.mutiny.Uni[] v5;
io.smallrye.mutiny.Uni v1, v2, v3, v4;
v0 := @this: io.smallrye.mutiny.groups.UniAndGroup4;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: io.smallrye.mutiny.Uni;
v3 := @parameter2: io.smallrye.mutiny.Uni;
v4 := @parameter3: io.smallrye.mutiny.Uni;
v5 = newarray (io.smallrye.mutiny.Uni)[3];
v5[0] = v2;
v5[1] = v3;
v5[2] = v4;
v6 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v5);
specialinvoke v0.<io.smallrye.mutiny.groups.UniAndGroupIterable: void <init>(io.smallrye.mutiny.Uni,java.lang.Iterable)>(v1, v6);
return;
}
public io.smallrye.mutiny.groups.UniAndGroup4 collectFailures()
{
io.smallrye.mutiny.groups.UniAndGroup4 v0;
v0 := @this: io.smallrye.mutiny.groups.UniAndGroup4;
specialinvoke v0.<io.smallrye.mutiny.groups.UniAndGroupIterable: io.smallrye.mutiny.groups.UniAndGroupIterable collectFailures()>();
return v0;
}
public io.smallrye.mutiny.Uni asTuple()
{
io.smallrye.mutiny.tuples.Functions$Function4 v1;
io.smallrye.mutiny.groups.UniAndGroup4 v0;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.groups.UniAndGroup4;
v1 = staticinvoke <io.smallrye.mutiny.groups.UniAndGroup4$of__2852: io.smallrye.mutiny.tuples.Functions$Function4 bootstrap$()>();
v2 = specialinvoke v0.<io.smallrye.mutiny.groups.UniAndGroup4: io.smallrye.mutiny.Uni combine(io.smallrye.mutiny.tuples.Functions$Function4)>(v1);
return v2;
}
public io.smallrye.mutiny.Uni combinedWith(io.smallrye.mutiny.tuples.Functions$Function4)
{
io.smallrye.mutiny.groups.UniAndGroup4 v0;
io.smallrye.mutiny.tuples.Functions$Function4 v1, v3;
java.lang.Object v2;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniAndGroup4;
v1 := @parameter0: io.smallrye.mutiny.tuples.Functions$Function4;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "combinator");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.tuples.Functions$Function4 decorate(io.smallrye.mutiny.tuples.Functions$Function4)>(v2);
v4 = specialinvoke v0.<io.smallrye.mutiny.groups.UniAndGroup4: io.smallrye.mutiny.Uni combine(io.smallrye.mutiny.tuples.Functions$Function4)>(v3);
return v4;
}
private io.smallrye.mutiny.Uni combine(io.smallrye.mutiny.tuples.Functions$Function4)
{
io.smallrye.mutiny.groups.UniAndGroup4 v0;
io.smallrye.mutiny.tuples.Functions$Function4 v1;
java.util.function.Function v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniAndGroup4;
v1 := @parameter0: io.smallrye.mutiny.tuples.Functions$Function4;
v2 = staticinvoke <io.smallrye.mutiny.groups.UniAndGroup4$lambda_combine_0__2853: java.util.function.Function bootstrap$(io.smallrye.mutiny.tuples.Functions$Function4)>(v1);
v3 = specialinvoke v0.<io.smallrye.mutiny.groups.UniAndGroupIterable: io.smallrye.mutiny.Uni combinedWith(java.util.function.Function)>(v2);
return v3;
}
}