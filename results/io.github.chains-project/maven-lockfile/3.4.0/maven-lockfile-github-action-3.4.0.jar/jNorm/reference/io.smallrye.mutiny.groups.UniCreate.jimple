public class io.smallrye.mutiny.groups.UniCreate extends java.lang.Object
{
public static final io.smallrye.mutiny.groups.UniCreate INSTANCE;
private static final io.smallrye.mutiny.Uni UNI_OF_NULL;
private void <init>()
{
io.smallrye.mutiny.groups.UniCreate v0;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.smallrye.mutiny.Uni converter(io.smallrye.mutiny.converters.UniConverter, java.lang.Object)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v2;
io.smallrye.mutiny.converters.UniConverter v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: io.smallrye.mutiny.converters.UniConverter;
v2 := @parameter1: java.lang.Object;
v3 = interfaceinvoke v1.<io.smallrye.mutiny.converters.UniConverter: io.smallrye.mutiny.Uni 'from'(java.lang.Object)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni completionStage(java.util.concurrent.CompletionStage)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.util.concurrent.CompletionStage v1;
java.lang.Object v2;
java.util.function.Supplier v3;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.concurrent.CompletionStage;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stage");
v3 = staticinvoke <io.smallrye.mutiny.groups.UniCreate$lambda_completionStage_0__2867: java.util.function.Supplier bootstrap$(java.util.concurrent.CompletionStage)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni completionStage(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni completionStage(java.util.function.Supplier, java.util.function.Function)
{
java.util.function.Function v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.Uni v8;
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v3, v5;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState v7;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stateSupplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "mapper");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v5);
v7 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState;
specialinvoke v7.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStageWithState: void <init>(java.util.function.Supplier,java.util.function.Function)>(v4, v6);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v7);
return v8;
}
public io.smallrye.mutiny.Uni completionStage(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage v4;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromCompletionStage: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni future(java.util.concurrent.Future)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture v3;
io.smallrye.mutiny.groups.UniCreate v0;
java.util.concurrent.Future v1;
java.lang.Object v2;
java.util.function.Supplier v4;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.concurrent.Future;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "future");
v3 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture;
v4 = staticinvoke <io.smallrye.mutiny.groups.UniCreate$lambda_future_1__2868: java.util.function.Supplier bootstrap$(java.util.concurrent.Future)>(v2);
specialinvoke v3.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture: void <init>(java.util.function.Supplier)>(v4);
return v3;
}
public io.smallrye.mutiny.Uni future(java.util.function.Supplier)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture v4;
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture: void <init>(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni future(java.util.concurrent.Future, java.time.Duration)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture v5;
io.smallrye.mutiny.groups.UniCreate v0;
java.util.concurrent.Future v1;
java.time.Duration v2, v4;
java.lang.Object v3;
java.util.function.Supplier v6;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.concurrent.Future;
v2 := @parameter1: java.time.Duration;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "future");
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v2, "timeout");
v5 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture;
v6 = staticinvoke <io.smallrye.mutiny.groups.UniCreate$lambda_future_2__2869: java.util.function.Supplier bootstrap$(java.util.concurrent.Future)>(v3);
specialinvoke v5.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture: void <init>(java.util.function.Supplier,java.time.Duration)>(v6, v4);
return v5;
}
public io.smallrye.mutiny.Uni future(java.util.function.Supplier, java.time.Duration)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture v6;
io.smallrye.mutiny.groups.UniCreate v0;
java.time.Duration v2, v5;
java.lang.Object v3;
java.util.function.Supplier v1, v4;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.time.Duration;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v2, "timeout");
v6 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture;
specialinvoke v6.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromFuture: void <init>(java.util.function.Supplier,java.time.Duration)>(v4, v5);
return v6;
}
public io.smallrye.mutiny.Uni publisher(java.util.concurrent.Flow$Publisher)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.util.concurrent.Flow$Publisher v1;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromPublisher v3;
java.lang.Object v2;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.concurrent.Flow$Publisher;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "publisher");
v3 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromPublisher;
specialinvoke v3.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromPublisher: void <init>(java.util.concurrent.Flow$Publisher)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni item(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemSupplier v4;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemSupplier;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemSupplier: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni item(java.util.function.Supplier, java.util.function.Function)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState v7;
java.util.function.Function v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.Uni v8;
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v3, v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stateSupplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "mapper");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v5);
v7 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState;
specialinvoke v7.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState: void <init>(java.util.function.Supplier,java.util.function.Function)>(v4, v6);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v7);
return v8;
}
public io.smallrye.mutiny.Uni item(java.lang.Object)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v1;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownItem v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.lang.Object;
v2 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownItem;
specialinvoke v2.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownItem: void <init>(java.lang.Object)>(v1);
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni voidItem()
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni nullItem()>();
return v1;
}
public io.smallrye.mutiny.Uni nullItem()
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 = <io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni UNI_OF_NULL>;
return v1;
}
public io.smallrye.mutiny.Uni optional(java.util.Optional)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.util.Optional v1;
java.lang.Object v2;
java.util.function.Supplier v3;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.Optional;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "optional");
v3 = staticinvoke <io.smallrye.mutiny.groups.UniCreate$lambda_optional_3__2870: java.util.function.Supplier bootstrap$(java.util.Optional)>(v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni optional(java.util.function.Supplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni optional(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v2;
java.util.function.Supplier v1, v3, v4;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = staticinvoke <io.smallrye.mutiny.groups.UniCreate$lambda_optional_4__2871: java.util.function.Supplier bootstrap$(java.util.function.Supplier)>(v3);
v5 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni item(java.util.function.Supplier)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni emitter(java.util.function.Consumer)
{
java.util.function.Consumer v1, v3;
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter v4;
java.lang.Object v2;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Consumer;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "consumer");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Consumer decorate(java.util.function.Consumer)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniCreateWithEmitter: void <init>(java.util.function.Consumer)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni emitter(java.util.function.Supplier, java.util.function.BiConsumer)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState v7;
java.util.function.Supplier v1, v6;
io.smallrye.mutiny.Uni v8;
io.smallrye.mutiny.groups.UniCreate v0;
java.util.function.BiConsumer v2, v4;
java.lang.Object v3, v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.BiConsumer;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "consumer");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.BiConsumer decorate(java.util.function.BiConsumer)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stateSupplier");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v5);
v7 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState;
specialinvoke v7.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromEmitterWithState: void <init>(java.util.function.Supplier,java.util.function.BiConsumer)>(v6, v4);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v7);
return v8;
}
public io.smallrye.mutiny.Uni deferred(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplier v4;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplier;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplier: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni context(java.util.function.Function)
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext v4;
java.lang.Object v2;
java.util.function.Function v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "mapper");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.DeferredUniWithContext: void <init>(java.util.function.Function)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni deferred(java.util.function.Supplier, java.util.function.Function)
{
java.util.function.Function v2, v6;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.Uni v8;
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplierWithState v7;
java.lang.Object v3, v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "stateSupplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "mapper");
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Function decorate(java.util.function.Function)>(v5);
v7 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplierWithState;
specialinvoke v7.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromDeferredSupplierWithState: void <init>(java.util.function.Supplier,java.util.function.Function)>(v4, v6);
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v7);
return v8;
}
public io.smallrye.mutiny.Uni failure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.groups.UniCreate v0;
java.lang.Object v3;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownFailure v2;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.lang.Throwable;
v2 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownFailure;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "failure");
specialinvoke v2.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromKnownFailure: void <init>(java.lang.Throwable)>(v3);
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v2);
return v4;
}
public io.smallrye.mutiny.Uni failure(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromFailureSupplier v4;
java.lang.Object v2;
java.util.function.Supplier v1, v3;
io.smallrye.mutiny.Uni v5;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.builders.UniCreateFromFailureSupplier;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromFailureSupplier: void <init>(java.util.function.Supplier)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v5;
}
public io.smallrye.mutiny.Uni nothing()
{
io.smallrye.mutiny.operators.uni.UniNever v1;
io.smallrye.mutiny.groups.UniCreate v0;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 = <io.smallrye.mutiny.operators.uni.UniNever: io.smallrye.mutiny.operators.uni.UniNever INSTANCE>;
return v1;
}
public io.smallrye.mutiny.Uni multi(io.smallrye.mutiny.Multi)
{
io.smallrye.mutiny.groups.UniCreate v0;
io.smallrye.mutiny.Multi v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.groups.UniCreate;
v1 := @parameter0: io.smallrye.mutiny.Multi;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "multi");
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.Uni toUni()>();
return v2;
}
static void <clinit>()
{
io.smallrye.mutiny.groups.UniCreate v0, v1;
io.smallrye.mutiny.Uni v2;
v0 = new io.smallrye.mutiny.groups.UniCreate;
specialinvoke v0.<io.smallrye.mutiny.groups.UniCreate: void <init>()>();
<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.groups.UniCreate INSTANCE> = v0;
v1 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v2 = virtualinvoke v1.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni item(java.lang.Object)>(null);
<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni UNI_OF_NULL> = v2;
return;
}
}