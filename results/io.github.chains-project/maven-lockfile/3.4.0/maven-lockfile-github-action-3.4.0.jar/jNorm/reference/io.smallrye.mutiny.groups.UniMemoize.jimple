public class io.smallrye.mutiny.groups.UniMemoize extends java.lang.Object
{
private final io.smallrye.mutiny.Uni upstream;
public void <init>(io.smallrye.mutiny.operators.AbstractUni)
{
java.lang.Object v2;
io.smallrye.mutiny.operators.AbstractUni v1;
io.smallrye.mutiny.groups.UniMemoize v0;
v0 := @this: io.smallrye.mutiny.groups.UniMemoize;
v1 := @parameter0: io.smallrye.mutiny.operators.AbstractUni;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.UniMemoize: io.smallrye.mutiny.Uni upstream> = v2;
return;
}
public io.smallrye.mutiny.Uni until(java.util.function.BooleanSupplier)
{
io.smallrye.mutiny.operators.uni.UniMemoizeOp v4;
java.lang.Object v2;
io.smallrye.mutiny.groups.UniMemoize v0;
io.smallrye.mutiny.Uni v5, v6;
java.util.function.BooleanSupplier v1, v3;
v0 := @this: io.smallrye.mutiny.groups.UniMemoize;
v1 := @parameter0: java.util.function.BooleanSupplier;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "invalidationGuard");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.BooleanSupplier decorate(java.util.function.BooleanSupplier)>(v2);
v4 = new io.smallrye.mutiny.operators.uni.UniMemoizeOp;
v5 = v0.<io.smallrye.mutiny.groups.UniMemoize: io.smallrye.mutiny.Uni upstream>;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniMemoizeOp: void <init>(io.smallrye.mutiny.Uni,java.util.function.BooleanSupplier)>(v5, v3);
v6 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v4);
return v6;
}
public io.smallrye.mutiny.Uni atLeast(java.time.Duration)
{
java.time.Duration v1, v2;
io.smallrye.mutiny.groups.UniMemoize$1 v3;
io.smallrye.mutiny.groups.UniMemoize v0;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.smallrye.mutiny.groups.UniMemoize;
v1 := @parameter0: java.time.Duration;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v1, "duration");
v3 = new io.smallrye.mutiny.groups.UniMemoize$1;
specialinvoke v3.<io.smallrye.mutiny.groups.UniMemoize$1: void <init>(io.smallrye.mutiny.groups.UniMemoize,java.time.Duration)>(v0, v2);
v4 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniMemoize: io.smallrye.mutiny.Uni until(java.util.function.BooleanSupplier)>(v3);
return v4;
}
public io.smallrye.mutiny.Uni indefinitely()
{
io.smallrye.mutiny.groups.UniMemoize v0;
io.smallrye.mutiny.Uni v2;
java.util.function.BooleanSupplier v1;
v0 := @this: io.smallrye.mutiny.groups.UniMemoize;
v1 = staticinvoke <io.smallrye.mutiny.groups.UniMemoize$lambda_indefinitely_0__2851: java.util.function.BooleanSupplier bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniMemoize: io.smallrye.mutiny.Uni until(java.util.function.BooleanSupplier)>(v1);
return v2;
}
}