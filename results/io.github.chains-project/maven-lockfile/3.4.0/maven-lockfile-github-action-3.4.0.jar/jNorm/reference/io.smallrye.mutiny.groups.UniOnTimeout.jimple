public class io.smallrye.mutiny.groups.UniOnTimeout extends java.lang.Object
{
private final io.smallrye.mutiny.Uni failure;
private final java.time.Duration timeout;
private final java.util.concurrent.ScheduledExecutorService executor;
public void <init>(io.smallrye.mutiny.Uni, java.time.Duration, java.util.concurrent.ScheduledExecutorService)
{
java.time.Duration v2;
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.util.concurrent.ScheduledExecutorService v3;
java.lang.Object v4;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: java.time.Duration;
v3 := @parameter2: java.util.concurrent.ScheduledExecutorService;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni failure> = v4;
v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.time.Duration timeout> = v2;
v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.util.concurrent.ScheduledExecutorService executor> = v3;
return;
}
public io.smallrye.mutiny.groups.UniOnTimeout after(java.time.Duration)
{
java.time.Duration v1, v4;
io.smallrye.mutiny.groups.UniOnTimeout v0, v2;
java.util.concurrent.ScheduledExecutorService v5;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.time.Duration;
v2 = new io.smallrye.mutiny.groups.UniOnTimeout;
v3 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni failure>;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v1, "timeout");
v5 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.util.concurrent.ScheduledExecutorService executor>;
specialinvoke v2.<io.smallrye.mutiny.groups.UniOnTimeout: void <init>(io.smallrye.mutiny.Uni,java.time.Duration,java.util.concurrent.ScheduledExecutorService)>(v3, v4, v5);
return v2;
}
public io.smallrye.mutiny.groups.UniOnTimeout on(java.util.concurrent.ScheduledExecutorService)
{
java.time.Duration v4;
io.smallrye.mutiny.groups.UniOnTimeout v0, v2;
java.util.concurrent.ScheduledExecutorService v1;
java.lang.Object v5;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.util.concurrent.ScheduledExecutorService;
v2 = new io.smallrye.mutiny.groups.UniOnTimeout;
v3 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni failure>;
v4 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.time.Duration timeout>;
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "executor");
specialinvoke v2.<io.smallrye.mutiny.groups.UniOnTimeout: void <init>(io.smallrye.mutiny.Uni,java.time.Duration,java.util.concurrent.ScheduledExecutorService)>(v3, v4, v5);
return v2;
}
public io.smallrye.mutiny.Uni fail()
{
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v2, v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 = staticinvoke <io.smallrye.mutiny.groups.UniOnTimeout$init__3004: java.util.function.Supplier bootstrap$()>();
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni failWith(java.util.function.Supplier)>(v1);
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni failWith(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.util.function.Supplier v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.lang.Throwable;
v2 = staticinvoke <io.smallrye.mutiny.groups.UniOnTimeout$lambda_failWith_0__3005: java.util.function.Supplier bootstrap$(java.lang.Throwable)>(v1);
v3 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni failWith(java.util.function.Supplier)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni failWith(java.util.function.Supplier)
{
io.smallrye.mutiny.operators.uni.UniFailOnTimeout v5;
java.util.function.Supplier v1, v4;
io.smallrye.mutiny.Uni v6, v9;
java.time.Duration v2, v7;
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.util.concurrent.ScheduledExecutorService v8;
java.lang.Object v3;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.util.function.Supplier;
v2 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.time.Duration timeout>;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v2, "timeout");
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Supplier decorate(java.util.function.Supplier)>(v3);
v5 = new io.smallrye.mutiny.operators.uni.UniFailOnTimeout;
v6 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni failure>;
v7 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.time.Duration timeout>;
v8 = v0.<io.smallrye.mutiny.groups.UniOnTimeout: java.util.concurrent.ScheduledExecutorService executor>;
specialinvoke v5.<io.smallrye.mutiny.operators.uni.UniFailOnTimeout: void <init>(io.smallrye.mutiny.Uni,java.time.Duration,java.util.function.Supplier,java.util.concurrent.ScheduledExecutorService)>(v6, v7, v4, v8);
v9 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: io.smallrye.mutiny.Uni onUniCreation(io.smallrye.mutiny.Uni)>(v5);
return v9;
}
public io.smallrye.mutiny.Uni recoverWithItem(java.lang.Object)
{
io.smallrye.mutiny.groups.UniOnFailure v3;
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.lang.Object v1;
io.smallrye.mutiny.Uni v2, v4;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni fail()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithItem(java.lang.Object)>(v1);
return v4;
}
public io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnFailure v3;
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v2, v4;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.util.function.Supplier;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni fail()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithItem(java.util.function.Supplier)>(v1);
return v4;
}
public io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Supplier)
{
io.smallrye.mutiny.groups.UniOnFailure v3;
io.smallrye.mutiny.groups.UniOnTimeout v0;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v2, v4;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: java.util.function.Supplier;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni fail()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithUni(java.util.function.Supplier)>(v1);
return v4;
}
public io.smallrye.mutiny.Uni recoverWithUni(io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniOnFailure v3;
io.smallrye.mutiny.groups.UniOnTimeout v0;
io.smallrye.mutiny.Uni v1, v2, v4;
v0 := @this: io.smallrye.mutiny.groups.UniOnTimeout;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniOnTimeout: io.smallrye.mutiny.Uni fail()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnFailure onFailure(java.lang.Class)>(class "Lio/smallrye/mutiny/TimeoutException;");
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniOnFailure: io.smallrye.mutiny.Uni recoverWithUni(io.smallrye.mutiny.Uni)>(v1);
return v4;
}
}