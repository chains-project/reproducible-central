public class io.smallrye.mutiny.groups.UniRepeat extends java.lang.Object
{
private final io.smallrye.mutiny.Uni upstream;
private final io.smallrye.mutiny.Uni delay;
public void <init>(io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniRepeat v0;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 := @parameter0: io.smallrye.mutiny.Uni;
specialinvoke v0.<io.smallrye.mutiny.groups.UniRepeat: void <init>(io.smallrye.mutiny.Uni,io.smallrye.mutiny.Uni)>(v1, null);
return;
}
public void <init>(io.smallrye.mutiny.Uni, io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniRepeat v0;
io.smallrye.mutiny.Uni v1, v2;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: io.smallrye.mutiny.Uni;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni upstream> = v1;
v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni delay> = v2;
return;
}
public io.smallrye.mutiny.groups.UniRepeat withDelay(java.time.Duration)
{
io.smallrye.mutiny.groups.UniRepeat v0, v2;
io.smallrye.mutiny.groups.UniOnItemDelay v7;
io.smallrye.mutiny.Uni v3, v5, v8;
io.smallrye.mutiny.groups.UniOnItem v6;
io.smallrye.mutiny.groups.UniCreate v4;
java.time.Duration v1;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 := @parameter0: java.time.Duration;
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.time.Duration validate(java.time.Duration,java.lang.String)>(v1, "delay");
v2 = new io.smallrye.mutiny.groups.UniRepeat;
v3 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni upstream>;
v4 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni voidItem()>();
v6 = interfaceinvoke v5.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniOnItem onItem()>();
v7 = virtualinvoke v6.<io.smallrye.mutiny.groups.UniOnItem: io.smallrye.mutiny.groups.UniOnItemDelay delayIt()>();
v8 = virtualinvoke v7.<io.smallrye.mutiny.groups.UniOnItemDelay: io.smallrye.mutiny.Uni by(java.time.Duration)>(v1);
specialinvoke v2.<io.smallrye.mutiny.groups.UniRepeat: void <init>(io.smallrye.mutiny.Uni,io.smallrye.mutiny.Uni)>(v3, v8);
return v2;
}
public io.smallrye.mutiny.Multi indefinitely()
{
io.smallrye.mutiny.groups.UniRepeat v0;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 = virtualinvoke v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Multi atMost(long)>(9223372036854775807L);
return v1;
}
public io.smallrye.mutiny.Multi atMost(long)
{
io.smallrye.mutiny.groups.UniRepeat v0;
io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp v3;
long v1, v2;
io.smallrye.mutiny.Multi v5;
io.smallrye.mutiny.Uni v4, v6;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 := @parameter0: long;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: long positive(long,java.lang.String)>(v1, "times");
v3 = new io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp;
v4 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni upstream>;
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.Multi toMulti()>();
v6 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni delay>;
specialinvoke v3.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp: void <init>(io.smallrye.mutiny.Multi,long,io.smallrye.mutiny.Uni)>(v5, v2, v6);
return v3;
}
public io.smallrye.mutiny.Multi until(java.util.function.Predicate)
{
java.util.function.Predicate v1, v3;
io.smallrye.mutiny.groups.UniRepeat v0;
io.smallrye.mutiny.Multi v6;
io.smallrye.mutiny.Uni v5, v7;
io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp v4;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 := @parameter0: java.util.function.Predicate;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "predicate");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Predicate decorate(java.util.function.Predicate)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp;
v5 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni upstream>;
v6 = interfaceinvoke v5.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.Multi toMulti()>();
v7 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni delay>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiRepeatUntilOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.Predicate,io.smallrye.mutiny.Uni)>(v6, v3, v7);
return v4;
}
public io.smallrye.mutiny.Multi whilst(java.util.function.Predicate)
{
java.util.function.Predicate v1, v3;
io.smallrye.mutiny.groups.UniRepeat v0;
io.smallrye.mutiny.Multi v6;
io.smallrye.mutiny.Uni v5, v7;
io.smallrye.mutiny.operators.multi.MultiRepeatWhilstOp v4;
java.lang.Object v2;
v0 := @this: io.smallrye.mutiny.groups.UniRepeat;
v1 := @parameter0: java.util.function.Predicate;
v2 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "predicate");
v3 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.function.Predicate decorate(java.util.function.Predicate)>(v2);
v4 = new io.smallrye.mutiny.operators.multi.MultiRepeatWhilstOp;
v5 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni upstream>;
v6 = interfaceinvoke v5.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.Multi toMulti()>();
v7 = v0.<io.smallrye.mutiny.groups.UniRepeat: io.smallrye.mutiny.Uni delay>;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiRepeatWhilstOp: void <init>(io.smallrye.mutiny.Multi,java.util.function.Predicate,io.smallrye.mutiny.Uni)>(v6, v3, v7);
return v4;
}
}