final class io.smallrye.mutiny.helpers.queues.EmptyQueue extends java.lang.Object implements java.util.Queue
{
void <init>()
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean add(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.lang.Object;
return 0;
}
public boolean addAll(java.util.Collection)
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.util.Collection;
return 0;
}
public void clear()
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
return;
}
public boolean contains(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.lang.Object;
return 0;
}
public boolean containsAll(java.util.Collection)
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.util.Collection;
return 0;
}
public java.lang.Object element()
{
java.util.NoSuchElementException v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 = new java.util.NoSuchElementException;
specialinvoke v1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("This is an empty queue");
throw v1;
}
public boolean isEmpty()
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
return 1;
}
public java.util.Iterator iterator()
{
java.util.Iterator v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 = staticinvoke <java.util.Collections: java.util.Iterator emptyIterator()>();
return v1;
}
public boolean offer(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.lang.Object;
return 0;
}
public java.lang.Object peek()
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
return null;
}
public java.lang.Object poll()
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
return null;
}
public java.lang.Object remove()
{
java.util.NoSuchElementException v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 = new java.util.NoSuchElementException;
specialinvoke v1.<java.util.NoSuchElementException: void <init>(java.lang.String)>("This is an empty queue");
throw v1;
}
public boolean remove(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.lang.Object;
return 0;
}
public boolean removeAll(java.util.Collection)
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.util.Collection;
return 0;
}
public boolean retainAll(java.util.Collection)
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
java.util.Collection v1;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.util.Collection;
return 0;
}
public int size()
{
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
return 0;
}
public java.lang.Object[] toArray()
{
java.lang.Object[] v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 = newarray (java.lang.Object)[0];
return v1;
}
public java.lang.Object[] toArray(java.lang.Object[])
{
int v2;
java.lang.Object[] v1;
io.smallrye.mutiny.helpers.queues.EmptyQueue v0;
v0 := @this: io.smallrye.mutiny.helpers.queues.EmptyQueue;
v1 := @parameter0: java.lang.Object[];
v2 = lengthof v1;
if v2 <= 0 goto label1;
v1[0] = null;
label1:
return v1;
}
}