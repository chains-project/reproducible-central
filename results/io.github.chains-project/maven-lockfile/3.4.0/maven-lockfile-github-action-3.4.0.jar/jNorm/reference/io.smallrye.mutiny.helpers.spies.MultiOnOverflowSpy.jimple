public class io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy extends io.smallrye.mutiny.helpers.spies.MultiSpyBase
{
private final java.util.List droppedItems;
private final java.util.function.Function strategyMapper;
public java.util.List droppedItems()
{
java.util.List v1, v2, v3, v4;
io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy;
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems>;
if v1 == null goto label1;
v2 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems>;
v3 = staticinvoke <java.util.Collections: java.util.List synchronizedList(java.util.List)>(v2);
return v3;
label1:
v4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v4;
}
public void reset()
{
java.lang.Throwable v4;
java.util.List v1, v2, v3;
io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy v0;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void reset()>();
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems>;
if v1 == null goto label4;
v2 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems>;
entermonitor v2;
label1:
v3 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems>;
interfaceinvoke v3.<java.util.List: void clear()>();
exitmonitor v2;
label2:
goto label4;
label3:
v4 := @caughtexception;
exitmonitor v2;
throw v4;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
void <init>(io.smallrye.mutiny.Multi, boolean, java.util.function.Function)
{
io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy v0;
java.util.function.Function v3;
io.smallrye.mutiny.Multi v1;
boolean v2;
java.util.ArrayList v4;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: boolean;
v3 := @parameter2: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.function.Function strategyMapper> = v3;
if v2 == 0 goto label1;
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems> = v4;
goto label2;
label1:
v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems> = null;
label2:
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiOverflowStrategy v6;
io.smallrye.mutiny.groups.MultiSubscribe v9;
io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy v0;
java.util.function.Function v2;
io.smallrye.mutiny.Multi v3;
java.util.function.Consumer v5;
java.lang.Object v7, v8;
io.smallrye.mutiny.groups.MultiOverflow v4;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.function.Function strategyMapper>;
v3 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: io.smallrye.mutiny.Multi upstream>;
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiOverflow onOverflow()>();
v5 = staticinvoke <io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy$lambda_subscribe_0__2753: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy)>(v0);
v6 = virtualinvoke v4.<io.smallrye.mutiny.groups.MultiOverflow: io.smallrye.mutiny.groups.MultiOverflowStrategy invoke(java.util.function.Consumer)>(v5);
v7 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v6);
v8 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v7, "wrapper");
v9 = interfaceinvoke v8.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
virtualinvoke v9.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
return;
}
public java.lang.String toString()
{
java.util.List v1;
io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy v0;
java.lang.String v2, v3;
v0 := @this: io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy;
v1 = v0.<io.smallrye.mutiny.helpers.spies.MultiOnOverflowSpy: java.util.List droppedItems>;
v2 = specialinvoke v0.<io.smallrye.mutiny.helpers.spies.MultiSpyBase: java.lang.String toString()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.List,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("MultiOnItemSpy{items=\u0001} \u0001");
return v3;
}
}