public final class io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805 extends java.lang.Object implements java.lang.Runnable
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask cap0;
long cap1;
java.util.concurrent.CompletableFuture cap2;
public static java.lang.Runnable bootstrap$(io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask, long, java.util.concurrent.CompletableFuture)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask v0;
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805 v3;
java.util.concurrent.CompletableFuture v2;
long v1;
v0 := @parameter0: io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask;
v1 := @parameter1: long;
v2 := @parameter2: java.util.concurrent.CompletableFuture;
v3 = new io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805;
specialinvoke v3.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: void <init>(io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask,long,java.util.concurrent.CompletableFuture)>(v0, v1, v2);
return v3;
}
public void <init>(io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask, long, java.util.concurrent.CompletableFuture)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask v1;
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805 v0;
java.util.concurrent.CompletableFuture v3;
long v2;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805;
v1 := @parameter0: io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask;
v2 := @parameter1: long;
v3 := @parameter2: java.util.concurrent.CompletableFuture;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask cap0> = v1;
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: long cap1> = v2;
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: java.util.concurrent.CompletableFuture cap2> = v3;
return;
}
public void run()
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask v1;
io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805 v0;
java.util.concurrent.CompletableFuture v3;
long v2;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805;
v1 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask cap0>;
v2 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: long cap1>;
v3 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask$lambda_future_0__2805: java.util.concurrent.CompletableFuture cap2>;
specialinvoke v1.<io.smallrye.mutiny.helpers.test.AssertSubscriber$ItemTask: void lambda$future$0(long,java.util.concurrent.CompletableFuture)>(v2, v3);
return;
}
}