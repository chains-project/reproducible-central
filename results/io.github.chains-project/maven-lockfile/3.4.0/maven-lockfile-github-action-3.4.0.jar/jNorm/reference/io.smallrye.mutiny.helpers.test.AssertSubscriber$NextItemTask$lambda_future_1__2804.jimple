public final class io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804 extends java.lang.Object implements java.util.function.BiConsumer
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask cap0;
io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener cap1;
public static java.util.function.BiConsumer bootstrap$(io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask, io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask v0;
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804 v2;
io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener v1;
v0 := @parameter0: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask;
v1 := @parameter1: io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener;
v2 = new io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804;
specialinvoke v2.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804: void <init>(io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask,io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener)>(v0, v1);
return v2;
}
public void <init>(io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask, io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask v1;
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804 v0;
io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener v2;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804;
v1 := @parameter0: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask;
v2 := @parameter1: io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask cap0> = v1;
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804: io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener cap1> = v2;
return;
}
public void accept(java.lang.Object, java.lang.Object)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask v3;
io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804 v0;
java.lang.Object v1, v2;
io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener v4;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804: io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask cap0>;
v4 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask$lambda_future_1__2804: io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener cap1>;
specialinvoke v3.<io.smallrye.mutiny.helpers.test.AssertSubscriber$NextItemTask: void lambda$future$1(io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener,java.lang.Void,java.lang.Throwable)>(v4, v1, v2);
return;
}
}