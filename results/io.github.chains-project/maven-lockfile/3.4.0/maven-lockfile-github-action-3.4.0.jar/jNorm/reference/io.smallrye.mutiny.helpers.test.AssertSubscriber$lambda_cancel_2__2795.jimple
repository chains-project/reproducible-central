public final class io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795 extends java.lang.Object implements java.util.function.Consumer
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$Event cap0;
public static java.util.function.Consumer bootstrap$(io.smallrye.mutiny.helpers.test.AssertSubscriber$Event)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$Event v0;
io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795 v1;
v0 := @parameter0: io.smallrye.mutiny.helpers.test.AssertSubscriber$Event;
v1 = new io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795;
specialinvoke v1.<io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795: void <init>(io.smallrye.mutiny.helpers.test.AssertSubscriber$Event)>(v0);
return v1;
}
public void <init>(io.smallrye.mutiny.helpers.test.AssertSubscriber$Event)
{
io.smallrye.mutiny.helpers.test.AssertSubscriber$Event v1;
io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795 v0;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795;
v1 := @parameter0: io.smallrye.mutiny.helpers.test.AssertSubscriber$Event;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795: io.smallrye.mutiny.helpers.test.AssertSubscriber$Event cap0> = v1;
return;
}
public void accept(java.lang.Object)
{
java.lang.Object v1;
io.smallrye.mutiny.helpers.test.AssertSubscriber$Event v2;
io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795 v0;
v0 := @this: io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.helpers.test.AssertSubscriber$lambda_cancel_2__2795: io.smallrye.mutiny.helpers.test.AssertSubscriber$Event cap0>;
staticinvoke <io.smallrye.mutiny.helpers.test.AssertSubscriber: void lambda$cancel$2(io.smallrye.mutiny.helpers.test.AssertSubscriber$Event,io.smallrye.mutiny.helpers.test.AssertSubscriber$EventListener)>(v2, v1);
return;
}
}