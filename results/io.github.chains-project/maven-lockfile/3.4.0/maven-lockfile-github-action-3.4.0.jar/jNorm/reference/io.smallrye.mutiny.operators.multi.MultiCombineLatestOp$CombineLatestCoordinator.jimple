final class io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator extends java.lang.Object implements java.util.concurrent.Flow$Subscription
{
private final io.smallrye.mutiny.subscription.MultiSubscriber downstream;
private final java.util.function.Function combinator;
private final java.util.List subscribers;
private final io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue queue;
private final java.lang.Object[] latest;
private final boolean delayErrors;
private int nonEmptySources;
private int completedSources;
private volatile boolean cancelled;
private volatile boolean done;
private final java.util.concurrent.atomic.AtomicLong requested;
private final java.util.concurrent.atomic.AtomicReference failure;
private final java.util.concurrent.atomic.AtomicInteger wip;
void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, java.util.function.Function, int, int, boolean)
{
java.lang.Object[] v15;
java.util.concurrent.atomic.AtomicReference v8;
java.util.function.Function v2;
java.util.ArrayList v6;
java.util.concurrent.atomic.AtomicInteger v9;
int v12, v3, v4;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
boolean v10, v5;
io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue v16;
io.smallrye.mutiny.Context v11;
java.util.concurrent.atomic.AtomicLong v7;
java.util.List v13;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber v14;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: int;
v4 := @parameter3: int;
v5 := @parameter4: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.List subscribers> = v6;
v7 = new java.util.concurrent.atomic.AtomicLong;
specialinvoke v7.<java.util.concurrent.atomic.AtomicLong: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicLong requested> = v7;
v8 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v8.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference failure> = v8;
v9 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v9.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicInteger wip> = v9;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream> = v1;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.function.Function combinator> = v2;
v10 = v1 instanceof io.smallrye.mutiny.subscription.ContextSupport;
if v10 == 0 goto label1;
v11 = interfaceinvoke v1.<io.smallrye.mutiny.subscription.ContextSupport: io.smallrye.mutiny.Context context()>();
goto label2;
label1:
v11 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
label2:
v12 = 0;
label3:
if v12 >= v3 goto label4;
v13 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.List subscribers>;
v14 = new io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber;
specialinvoke v14.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: void <init>(io.smallrye.mutiny.Context,io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator,int,int)>(v11, v0, v12, v4);
interfaceinvoke v13.<java.util.List: boolean add(java.lang.Object)>(v14);
v12 = v12 + 1;
goto label3;
label4:
v15 = newarray (java.lang.Object)[v3];
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.lang.Object[] latest> = v15;
v16 = new io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue;
specialinvoke v16.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: void <init>(int)>(v4);
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue queue> = v16;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean delayErrors> = v5;
return;
}
public void request(long)
{
java.util.concurrent.atomic.AtomicLong v3;
byte v2;
long v1;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicLong requested>;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: long add(java.util.concurrent.atomic.AtomicLong,long)>(v3, v1);
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void drain()>();
label1:
return;
}
public void cancel()
{
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean cancelled> = 1;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
return;
}
private void subscribe(java.util.List)
{
java.util.Iterator v4;
java.util.concurrent.Flow$Subscriber v11;
java.util.List v1, v3;
int v2;
java.lang.Object v10, v6, v9;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
boolean v5, v7, v8;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: java.util.List;
v2 = 0;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.List subscribers>;
v4 = interfaceinvoke v3.<java.util.List: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean done>;
if v7 != 0 goto label2;
v8 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean cancelled>;
if v8 == 0 goto label3;
label2:
return;
label3:
v9 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v2);
v10 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(v2);
v11 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.Flow$Subscriber onMultiSubscription(java.util.concurrent.Flow$Publisher,java.util.concurrent.Flow$Subscriber)>(v10, v6);
interfaceinvoke v9.<java.util.concurrent.Flow$Publisher: void subscribe(java.util.concurrent.Flow$Subscriber)>(v11);
v2 = v2 + 1;
goto label1;
label4:
return;
}
void innerValue(int, java.lang.Object)
{
io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue v7;
java.lang.Throwable v12;
java.lang.Object[] v3;
java.util.List v13, v8;
int v1, v4, v6;
java.lang.Object v10, v14, v2, v5, v9;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
boolean v11;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Object;
entermonitor v0;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.lang.Object[] latest>;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: int nonEmptySources>;
v5 = v3[v1];
if v5 != null goto label2;
v4 = v4 + 1;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: int nonEmptySources> = v4;
label2:
v3[v1] = v2;
v6 = lengthof v3;
if v6 != v4 goto label3;
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue queue>;
v8 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.List subscribers>;
v9 = interfaceinvoke v8.<java.util.List: java.lang.Object get(int)>(v1);
v10 = virtualinvoke v3.<java.lang.Object: java.lang.Object clone()>();
virtualinvoke v7.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: boolean offer(java.lang.Object,java.lang.Object)>(v9, v10);
v11 = 0;
goto label4;
label3:
v11 = 1;
label4:
exitmonitor v0;
label5:
goto label7;
label6:
v12 := @caughtexception;
exitmonitor v0;
throw v12;
label7:
if v11 == 0 goto label8;
v13 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.List subscribers>;
v14 = interfaceinvoke v13.<java.util.List: java.lang.Object get(int)>(v1);
virtualinvoke v14.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: void requestOneItem()>();
goto label9;
label8:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void drain()>();
label9:
return;
catch java.lang.Throwable from label1 to label5 with label6;
}
void innerComplete(int)
{
java.lang.Throwable v7;
java.lang.Object[] v2;
int v1, v4, v5, v6;
java.lang.Object v3;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: int;
entermonitor v0;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.lang.Object[] latest>;
v3 = v2[v1];
if v3 == null goto label4;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: int completedSources>;
v5 = v4 + 1;
v6 = lengthof v2;
if v5 != v6 goto label2;
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean done> = 1;
goto label5;
label2:
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: int completedSources> = v5;
exitmonitor v0;
label3:
return;
label4:
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean done> = 1;
label5:
exitmonitor v0;
label6:
goto label8;
label7:
v7 := @caughtexception;
exitmonitor v0;
throw v7;
label8:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void drain()>();
return;
catch java.lang.Throwable from label1 to label3 with label7;
catch java.lang.Throwable from label4 to label6 with label7;
}
void innerError(int, java.lang.Throwable)
{
java.lang.Throwable v2;
int v1;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
java.util.concurrent.atomic.AtomicReference v3;
boolean v4, v5;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.Throwable;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference failure>;
v4 = staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: boolean addFailure(java.util.concurrent.atomic.AtomicReference,java.lang.Throwable)>(v3, v2);
if v4 == 0 goto label2;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean delayErrors>;
if v5 != 0 goto label1;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean done> = 1;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void drain()>();
goto label2;
label1:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void innerComplete(int)>(v1);
label2:
return;
}
void drainAsync()
{
java.lang.Throwable v16;
long v28, v4, v5;
java.util.concurrent.atomic.AtomicReference v17, v18;
java.util.function.Function v12;
java.lang.NullPointerException v15;
byte v21, v25, v26, v6;
java.util.concurrent.atomic.AtomicInteger v29;
int v2, v30;
io.smallrye.mutiny.subscription.MultiSubscriber v19, v20;
boolean v10, v22, v23, v24, v7, v9;
io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue v1;
java.util.concurrent.atomic.AtomicLong v27, v3;
java.util.List v13;
java.lang.Object v11, v14, v8;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue queue>;
v2 = 1;
label01:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicLong requested>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicLong: long get()>();
v5 = 0L;
label02:
v6 = v5 cmp v4;
if v6 == 0 goto label09;
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean done>;
v8 = virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: java.lang.Object poll()>();
if v8 != null goto label03;
v9 = 1;
goto label04;
label03:
v9 = 0;
label04:
v10 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean isEmptyOrDone(boolean,boolean)>(v7, v9);
if v10 == 0 goto label05;
return;
label05:
if v9 != 0 goto label09;
v11 = virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: java.lang.Object poll()>();
label06:
v12 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.function.Function combinator>;
v13 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v11);
v14 = interfaceinvoke v12.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v13);
if v14 != null goto label08;
v15 = new java.lang.NullPointerException;
specialinvoke v15.<java.lang.NullPointerException: void <init>(java.lang.String)>("The combinator returned `null`");
throw v15;
label07:
v16 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
v17 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference failure>;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: boolean addFailure(java.util.concurrent.atomic.AtomicReference,java.lang.Throwable)>(v17, v16);
v18 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference failure>;
v19 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void terminateAndPropagate(java.util.concurrent.atomic.AtomicReference,java.util.concurrent.Flow$Subscriber)>(v18, v19);
return;
label08:
v20 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v20.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v14);
virtualinvoke v8.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: void requestOneItem()>();
v5 = v5 + 1L;
goto label02;
label09:
v21 = v5 cmp v4;
if v21 != 0 goto label10;
v22 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean done>;
v23 = virtualinvoke v1.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: boolean isEmpty()>();
v24 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean isEmptyOrDone(boolean,boolean)>(v22, v23);
if v24 == 0 goto label10;
return;
label10:
v25 = v5 cmp 0L;
if v25 == 0 goto label11;
v26 = v4 cmp 9223372036854775807L;
if v26 == 0 goto label11;
v27 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicLong requested>;
v28 = neg v5;
virtualinvoke v27.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(v28);
label11:
v29 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicInteger wip>;
v30 = neg v2;
v2 = virtualinvoke v29.<java.util.concurrent.atomic.AtomicInteger: int addAndGet(int)>(v30);
if v2 != 0 goto label01;
return;
catch java.lang.Throwable from label06 to label07 with label07;
}
void drain()
{
int v2;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
java.util.concurrent.atomic.AtomicInteger v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicInteger wip>;
v2 = virtualinvoke v1.<java.util.concurrent.atomic.AtomicInteger: int getAndIncrement()>();
if v2 == 0 goto label1;
return;
label1:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void drainAsync()>();
return;
}
boolean isEmptyOrDone(boolean, boolean)
{
java.lang.Throwable v12, v13, v7, v8;
java.util.concurrent.atomic.AtomicReference v11, v6;
io.smallrye.mutiny.subscription.MultiSubscriber v10, v15, v16, v9;
boolean v1, v2, v3, v5;
io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue v14, v4;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean cancelled>;
if v3 == 0 goto label1;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue queue>;
virtualinvoke v4.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: void clear()>();
return 1;
label1:
if v1 == 0 goto label6;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: boolean delayErrors>;
if v5 == 0 goto label4;
if v2 == 0 goto label6;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
v6 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference failure>;
v7 = staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReference)>(v6);
if v7 == null goto label2;
v8 = <io.smallrye.mutiny.helpers.Subscriptions: java.lang.Throwable TERMINATED>;
if v7 == v8 goto label2;
v9 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v9.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v7);
goto label3;
label2:
v10 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v10.<io.smallrye.mutiny.subscription.MultiSubscriber: void onCompletion()>();
label3:
return 1;
label4:
v11 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.concurrent.atomic.AtomicReference failure>;
v12 = staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: java.lang.Throwable terminate(java.util.concurrent.atomic.AtomicReference)>(v11);
if v12 == null goto label5;
v13 = <io.smallrye.mutiny.helpers.Subscriptions: java.lang.Throwable TERMINATED>;
if v12 == v13 goto label5;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
v14 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue queue>;
virtualinvoke v14.<io.smallrye.mutiny.helpers.queues.SpscLinkedArrayQueue: void clear()>();
v15 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v15.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v12);
return 1;
label5:
if v2 == 0 goto label6;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: void cancelAll()>();
v16 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v16.<io.smallrye.mutiny.subscription.MultiSubscriber: void onCompletion()>();
return 1;
label6:
return 0;
}
void cancelAll()
{
java.util.List v1;
java.util.Iterator v2;
java.lang.Object v4;
io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestCoordinator: java.util.List subscribers>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v4.<io.smallrye.mutiny.operators.multi.MultiCombineLatestOp$CombineLatestInnerSubscriber: void cancel()>();
goto label1;
label2:
return;
}
}