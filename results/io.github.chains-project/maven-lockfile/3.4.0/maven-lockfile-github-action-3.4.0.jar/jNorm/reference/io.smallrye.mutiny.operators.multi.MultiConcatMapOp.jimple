public class io.smallrye.mutiny.operators.multi.MultiConcatMapOp extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final java.util.function.Function mapper;
private final boolean postponeFailurePropagation;
public void <init>(io.smallrye.mutiny.Multi, java.util.function.Function, boolean)
{
io.smallrye.mutiny.operators.multi.MultiConcatMapOp v0;
java.util.function.Function v2;
io.smallrye.mutiny.Multi v1;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiConcatMapOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: boolean;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp: java.util.function.Function mapper> = v2;
v0.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp: boolean postponeFailurePropagation> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiConcatMapOp$ConcatMapMainSubscriber v3;
java.util.function.Function v4;
io.smallrye.mutiny.Multi v6, v7;
java.lang.NullPointerException v2;
java.util.concurrent.Flow$Subscriber v8;
io.smallrye.mutiny.operators.multi.MultiConcatMapOp v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiConcatMapOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The subscriber must not be `null`");
throw v2;
label1:
v3 = new io.smallrye.mutiny.operators.multi.MultiConcatMapOp$ConcatMapMainSubscriber;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp: java.util.function.Function mapper>;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp: boolean postponeFailurePropagation>;
specialinvoke v3.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp$ConcatMapMainSubscriber: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.function.Function,boolean)>(v1, v4, v5);
v6 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp: io.smallrye.mutiny.Multi upstream>;
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatMapOp: io.smallrye.mutiny.Multi upstream>;
v8 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.Flow$Subscriber onMultiSubscription(java.util.concurrent.Flow$Publisher,java.util.concurrent.Flow$Subscriber)>(v7, v3);
interfaceinvoke v6.<io.smallrye.mutiny.Multi: void subscribe(java.util.concurrent.Flow$Subscriber)>(v8);
return;
}
}