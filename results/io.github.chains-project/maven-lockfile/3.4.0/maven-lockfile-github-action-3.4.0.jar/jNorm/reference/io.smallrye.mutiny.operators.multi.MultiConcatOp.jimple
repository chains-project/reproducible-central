public class io.smallrye.mutiny.operators.multi.MultiConcatOp extends io.smallrye.mutiny.operators.AbstractMulti
{
private final java.util.concurrent.Flow$Publisher[] publishers;
private final boolean postponeFailurePropagation;
public transient void <init>(boolean, java.util.concurrent.Flow$Publisher[])
{
java.lang.Object[] v3;
io.smallrye.mutiny.operators.multi.MultiConcatOp v0;
java.util.concurrent.Flow$Publisher[] v2;
boolean v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiConcatOp;
v1 := @parameter0: boolean;
v2 := @parameter1: java.util.concurrent.Flow$Publisher[];
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object[] doesNotContainNull(java.lang.Object[],java.lang.String)>(v2, "publishers");
v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers> = v3;
v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: boolean postponeFailurePropagation> = v1;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
java.util.concurrent.Flow$Publisher[] v14, v17, v3, v5, v7, v9;
java.lang.NullPointerException v2;
io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArraySubscriber v16;
int v4, v6;
io.smallrye.mutiny.operators.multi.MultiConcatOp v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
boolean v12, v15, v18;
io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArrayAndPostponeFailureSubscriber v13;
java.util.concurrent.Flow$Subscriber v11;
java.util.concurrent.Flow$Publisher v10, v8;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiConcatOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The subscriber must not be `null`");
throw v2;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers>;
v4 = lengthof v3;
if v4 != 0 goto label2;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void complete(java.util.concurrent.Flow$Subscriber)>(v1);
return;
label2:
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers>;
v6 = lengthof v5;
if v6 != 1 goto label3;
v7 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers>;
v8 = v7[0];
v9 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers>;
v10 = v9[0];
v11 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.Flow$Subscriber onMultiSubscription(java.util.concurrent.Flow$Publisher,java.util.concurrent.Flow$Subscriber)>(v10, v1);
interfaceinvoke v8.<java.util.concurrent.Flow$Publisher: void subscribe(java.util.concurrent.Flow$Subscriber)>(v11);
return;
label3:
v12 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: boolean postponeFailurePropagation>;
if v12 == 0 goto label4;
v13 = new io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArrayAndPostponeFailureSubscriber;
v14 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers>;
specialinvoke v13.<io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArrayAndPostponeFailureSubscriber: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.concurrent.Flow$Publisher[])>(v1, v14);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v13);
v15 = virtualinvoke v13.<io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArrayAndPostponeFailureSubscriber: boolean isCancelled()>();
if v15 != 0 goto label5;
virtualinvoke v13.<io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArrayAndPostponeFailureSubscriber: void onCompletion()>();
goto label5;
label4:
v16 = new io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArraySubscriber;
v17 = v0.<io.smallrye.mutiny.operators.multi.MultiConcatOp: java.util.concurrent.Flow$Publisher[] publishers>;
specialinvoke v16.<io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArraySubscriber: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.concurrent.Flow$Publisher[])>(v1, v17);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v16);
v18 = virtualinvoke v16.<io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArraySubscriber: boolean isCancelled()>();
if v18 != 0 goto label5;
virtualinvoke v16.<io.smallrye.mutiny.operators.multi.MultiConcatOp$ConcatArraySubscriber: void onCompletion()>();
label5:
return;
}
}