public class io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout extends io.smallrye.mutiny.operators.MultiOperator
{
private final java.time.Duration timeout;
private final java.util.function.Supplier supplier;
private final java.util.concurrent.ScheduledExecutorService executor;
public void <init>(io.smallrye.mutiny.Multi, java.time.Duration, java.util.function.Supplier, java.util.concurrent.ScheduledExecutorService)
{
io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout v0;
java.time.Duration v2;
java.util.concurrent.ScheduledExecutorService v4, v5;
java.util.function.Supplier v3;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.time.Duration;
v3 := @parameter2: java.util.function.Supplier;
v4 := @parameter3: java.util.concurrent.ScheduledExecutorService;
specialinvoke v0.<io.smallrye.mutiny.operators.MultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout: java.time.Duration timeout> = v2;
v0.<io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout: java.util.function.Supplier supplier> = v3;
if v4 != null goto label1;
v5 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.ScheduledExecutorService getDefaultWorkerPool()>();
goto label2;
label1:
v5 = v4;
label2:
v0.<io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout: java.util.concurrent.ScheduledExecutorService executor> = v5;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v3;
io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout$MultiFailOnItemTimeoutProcessor v4;
io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout v0;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout: io.smallrye.mutiny.Multi upstream()>();
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v4 = new io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout$MultiFailOnItemTimeoutProcessor;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout$MultiFailOnItemTimeoutProcessor: void <init>(io.smallrye.mutiny.operators.multi.MultiFailOnItemTimeout,io.smallrye.mutiny.subscription.MultiSubscriber)>(v0, v1);
virtualinvoke v3.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v4);
return;
}
}