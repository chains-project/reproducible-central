public final class io.smallrye.mutiny.operators.multi.MultiGroupByOp extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final java.util.function.Function keySelector;
private final java.util.function.Function valueSelector;
public void <init>(io.smallrye.mutiny.Multi, java.util.function.Function, java.util.function.Function)
{
io.smallrye.mutiny.operators.multi.MultiGroupByOp v0;
java.util.function.Function v2, v3;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiGroupByOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.function.Function;
v3 := @parameter2: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: java.util.function.Function keySelector> = v2;
v0.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: java.util.function.Function valueSelector> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v7;
io.smallrye.mutiny.operators.multi.MultiGroupByOp$MultiGroupByProcessor v3;
java.util.concurrent.ConcurrentHashMap v2;
java.util.function.Function v4, v5;
io.smallrye.mutiny.Multi v6;
io.smallrye.mutiny.operators.multi.MultiGroupByOp v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiGroupByOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "The subscriber must not be `null`");
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v3 = new io.smallrye.mutiny.operators.multi.MultiGroupByOp$MultiGroupByProcessor;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: java.util.function.Function keySelector>;
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: java.util.function.Function valueSelector>;
specialinvoke v3.<io.smallrye.mutiny.operators.multi.MultiGroupByOp$MultiGroupByProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,java.util.function.Function,java.util.function.Function,java.util.Map)>(v1, v4, v5, v2);
v6 = v0.<io.smallrye.mutiny.operators.multi.MultiGroupByOp: io.smallrye.mutiny.Multi upstream>;
v7 = interfaceinvoke v6.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
virtualinvoke v7.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v3);
return;
}
}