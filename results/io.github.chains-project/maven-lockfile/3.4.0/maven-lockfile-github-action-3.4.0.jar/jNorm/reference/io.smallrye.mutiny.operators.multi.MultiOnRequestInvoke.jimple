public class io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final java.util.function.LongConsumer consumer;
public void <init>(io.smallrye.mutiny.Multi, java.util.function.LongConsumer)
{
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke v0;
io.smallrye.mutiny.Multi v1;
java.util.function.LongConsumer v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.function.LongConsumer;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke: java.util.function.LongConsumer consumer> = v2;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v3;
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke v0;
java.lang.Object v5;
io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator v4;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke: io.smallrye.mutiny.Multi upstream>;
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v4 = new io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator;
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "downstream");
specialinvoke v4.<io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke$MultiOnRequestInvokeOperator: void <init>(io.smallrye.mutiny.operators.multi.MultiOnRequestInvoke,io.smallrye.mutiny.subscription.MultiSubscriber)>(v0, v5);
virtualinvoke v3.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v4);
return;
}
}