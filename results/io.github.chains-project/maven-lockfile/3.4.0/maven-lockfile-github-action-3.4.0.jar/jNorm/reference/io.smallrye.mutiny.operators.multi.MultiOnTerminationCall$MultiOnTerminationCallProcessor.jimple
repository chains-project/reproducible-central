class io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private volatile io.smallrye.mutiny.subscription.Cancellable cancellable;
private final java.util.concurrent.atomic.AtomicBoolean mapperInvoked;
final io.smallrye.mutiny.operators.multi.MultiOnTerminationCall this$0;
public void <init>(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall, io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor v0;
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall v1;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v2);
v3 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: java.util.concurrent.atomic.AtomicBoolean mapperInvoked> = v3;
return;
}
public void cancel()
{
io.smallrye.mutiny.Uni v4;
java.util.function.Consumer v6, v7;
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor v0;
java.lang.Boolean v3;
io.smallrye.mutiny.groups.UniSubscribe v5;
io.smallrye.mutiny.subscription.Cancellable v1, v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor;
v1 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable>;
if v1 == null goto label1;
v2 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.Cancellable: void cancel()>();
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void cancel()>();
goto label2;
label1:
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
v4 = specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.Uni execute(java.lang.Throwable,java.lang.Boolean)>(null, v3);
v5 = interfaceinvoke v4.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v6 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor$lambda_cancel_0__2668: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor)>(v0);
v7 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor$lambda_cancel_1__2669: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor)>(v0);
virtualinvoke v5.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v6, v7);
label2:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.Uni v3;
java.util.function.Consumer v5, v6;
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor v0;
java.lang.Boolean v2;
io.smallrye.mutiny.groups.UniSubscribe v4;
io.smallrye.mutiny.subscription.Cancellable v7;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v3 = specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.Uni execute(java.lang.Throwable,java.lang.Boolean)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor$lambda_onFailure_2__2670: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor,java.lang.Throwable)>(v0, v1);
v6 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor$lambda_onFailure_3__2671: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor,java.lang.Throwable)>(v0, v1);
v7 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v5, v6);
v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable> = v7;
return;
}
public void onCompletion()
{
java.util.function.Consumer v4, v5;
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor v0;
java.lang.Boolean v1;
io.smallrye.mutiny.groups.UniSubscribe v3;
io.smallrye.mutiny.subscription.Cancellable v6;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor;
v1 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
v2 = specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.Uni execute(java.lang.Throwable,java.lang.Boolean)>(null, v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor$lambda_onCompletion_4__2672: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor)>(v0);
v5 = staticinvoke <io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor$lambda_onCompletion_5__2673: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor)>(v0);
v6 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v4, v5);
v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.subscription.Cancellable cancellable> = v6;
return;
}
private io.smallrye.mutiny.Uni execute(java.lang.Throwable, java.lang.Boolean)
{
java.lang.Throwable v1, v9;
java.util.function.BiFunction v6;
java.util.concurrent.atomic.AtomicBoolean v3;
io.smallrye.mutiny.Uni v11, v13;
io.smallrye.mutiny.groups.UniCreate v10, v12;
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor v0;
io.smallrye.mutiny.operators.multi.MultiOnTerminationCall v5;
java.lang.Boolean v2;
java.lang.Object v7, v8;
boolean v4;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 := @parameter1: java.lang.Boolean;
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: java.util.concurrent.atomic.AtomicBoolean mapperInvoked>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v4 == 0 goto label4;
label1:
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall$MultiOnTerminationCallProcessor: io.smallrye.mutiny.operators.multi.MultiOnTerminationCall this$0>;
v6 = v5.<io.smallrye.mutiny.operators.multi.MultiOnTerminationCall: java.util.function.BiFunction mapper>;
v7 = interfaceinvoke v6.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v1, v2);
v8 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v7, "Uni should not be null");
label2:
return v8;
label3:
v9 := @caughtexception;
v10 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v11 = virtualinvoke v10.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni failure(java.lang.Throwable)>(v9);
return v11;
label4:
v12 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v13 = virtualinvoke v12.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni nullItem()>();
return v13;
catch java.lang.Throwable from label1 to label2 with label3;
}
}