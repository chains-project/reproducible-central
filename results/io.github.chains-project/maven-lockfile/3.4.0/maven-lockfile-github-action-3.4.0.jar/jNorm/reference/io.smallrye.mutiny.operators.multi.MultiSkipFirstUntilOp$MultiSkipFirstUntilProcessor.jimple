final class io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor extends io.smallrye.mutiny.operators.multi.MultiOperatorProcessor
{
private final java.util.function.Predicate predicate;
private boolean gateOpen;
void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, java.util.function.Predicate)
{
io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor v0;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
java.util.function.Predicate v2;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: java.util.function.Predicate;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.MultiOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: boolean gateOpen> = 0;
v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: java.util.function.Predicate predicate> = v2;
return;
}
public void onItem(java.lang.Object)
{
java.lang.Throwable v7;
io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor v0;
java.util.function.Predicate v5;
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v4, v8;
boolean v2, v3, v6;
v0 := @this: io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: boolean isDone()>();
if v2 == 0 goto label1;
return;
label1:
v3 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: boolean gateOpen>;
if v3 == 0 goto label2;
v4 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v4.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
return;
label2:
v5 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: java.util.function.Predicate predicate>;
v6 = interfaceinvoke v5.<java.util.function.Predicate: boolean test(java.lang.Object)>(v1);
label3:
goto label5;
label4:
v7 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: void failAndCancel(java.lang.Throwable)>(v7);
return;
label5:
if v6 != 0 goto label6;
v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: boolean gateOpen> = 1;
v8 = v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v8.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v1);
return;
label6:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.MultiSkipFirstUntilOp$MultiSkipFirstUntilProcessor: void request(long)>(1L);
return;
catch java.lang.Throwable from label2 to label3 with label4;
}
}