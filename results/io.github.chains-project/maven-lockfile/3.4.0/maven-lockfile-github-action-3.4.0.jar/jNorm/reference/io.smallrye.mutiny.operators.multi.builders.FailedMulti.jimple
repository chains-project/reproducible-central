public class io.smallrye.mutiny.operators.multi.builders.FailedMulti extends io.smallrye.mutiny.operators.AbstractMulti
{
private final java.util.function.Supplier supplier;
public void <init>(java.lang.Throwable)
{
io.smallrye.mutiny.operators.multi.builders.FailedMulti v0;
java.lang.Throwable v1;
java.util.function.Supplier v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.FailedMulti;
v1 := @parameter0: java.lang.Throwable;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "failure");
v2 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.FailedMulti$lambda_new_0__2692: java.util.function.Supplier bootstrap$(java.lang.Throwable)>(v1);
v0.<io.smallrye.mutiny.operators.multi.builders.FailedMulti: java.util.function.Supplier supplier> = v2;
return;
}
public void <init>(java.util.function.Supplier)
{
io.smallrye.mutiny.operators.multi.builders.FailedMulti v0;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.FailedMulti;
v1 := @parameter0: java.util.function.Supplier;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "supplier");
v0.<io.smallrye.mutiny.operators.multi.builders.FailedMulti: java.util.function.Supplier supplier> = v1;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
java.lang.Throwable v5;
io.smallrye.mutiny.operators.multi.builders.FailedMulti v0;
java.lang.Object v3;
java.util.function.Supplier v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
java.lang.NullPointerException v4;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.FailedMulti;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.FailedMulti: java.util.function.Supplier supplier>;
v3 = interfaceinvoke v2.<java.util.function.Supplier: java.lang.Object get()>();
if v3 != null goto label2;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>(java.lang.String)>("The supplier returned `null`");
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void fail(java.util.concurrent.Flow$Subscriber,java.lang.Throwable)>(v1, v4);
goto label5;
label2:
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void fail(java.util.concurrent.Flow$Subscriber,java.lang.Throwable)>(v1, v3);
label3:
goto label5;
label4:
v5 := @caughtexception;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void fail(java.util.concurrent.Flow$Subscriber,java.lang.Throwable)>(v1, v5);
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
}