class io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription extends java.lang.Object implements java.util.concurrent.Flow$Subscription, io.smallrye.mutiny.groups.GeneratorEmitter
{
private final io.smallrye.mutiny.subscription.MultiSubscriber downstream;
private java.lang.Object state;
protected volatile boolean cancelled;
protected final java.util.concurrent.atomic.AtomicLong requested;
final io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti this$0;
void <init>(io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti, io.smallrye.mutiny.subscription.MultiSubscriber, java.lang.Object)
{
java.util.concurrent.atomic.AtomicLong v4;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti v1;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
java.lang.Object v3;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti;
v2 := @parameter1: io.smallrye.mutiny.subscription.MultiSubscriber;
v3 := @parameter2: java.lang.Object;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = new java.util.concurrent.atomic.AtomicLong;
specialinvoke v4.<java.util.concurrent.atomic.AtomicLong: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: java.util.concurrent.atomic.AtomicLong requested> = v4;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.subscription.MultiSubscriber downstream> = v2;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: java.lang.Object state> = v3;
return;
}
public void request(long)
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
long v1, v4;
java.lang.IllegalArgumentException v8;
java.util.concurrent.atomic.AtomicLong v3;
byte v2, v5, v6;
io.smallrye.mutiny.subscription.MultiSubscriber v7;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 <= 0 goto label2;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: java.util.concurrent.atomic.AtomicLong requested>;
v4 = staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: long add(java.util.concurrent.atomic.AtomicLong,long)>(v3, v1);
v5 = v4 cmp 0L;
if v5 != 0 goto label3;
v6 = v1 cmp 9223372036854775807L;
if v6 != 0 goto label1;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: void generateAll()>();
goto label3;
label1:
specialinvoke v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: void generateSome(long)>(v1);
goto label3;
label2:
v7 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
v8 = staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: java.lang.IllegalArgumentException getInvalidRequestException()>();
interfaceinvoke v7.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v8);
label3:
return;
}
private void doGenerate()
{
java.lang.Throwable v5;
java.util.function.BiFunction v2;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti v1;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
java.lang.Object v3, v4;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
label1:
v1 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti this$0>;
v2 = v1.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti: java.util.function.BiFunction generator>;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: java.lang.Object state>;
v4 = interfaceinvoke v2.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v3, v0);
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: java.lang.Object state> = v4;
label2:
goto label4;
label3:
v5 := @caughtexception;
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: void fail(java.lang.Throwable)>(v5);
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void generateAll()
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
boolean v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
label1:
v1 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v1 != 0 goto label2;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: void doGenerate()>();
goto label1;
label2:
return;
}
private void generateSome(long)
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
long v1, v10, v2, v3;
java.util.concurrent.atomic.AtomicLong v9;
byte v11, v6, v8;
boolean v4, v5, v7;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v1 := @parameter0: long;
v2 = 0L;
v3 = v1;
label1:
v4 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v4 == 0 goto label2;
return;
label2:
v5 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v5 != 0 goto label3;
v6 = v2 cmp v3;
if v6 == 0 goto label3;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: void doGenerate()>();
v2 = v2 + 1L;
v7 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v7 == 0 goto label2;
return;
label3:
v8 = v2 cmp v3;
if v8 != 0 goto label1;
v9 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: java.util.concurrent.atomic.AtomicLong requested>;
v10 = neg v2;
v3 = virtualinvoke v9.<java.util.concurrent.atomic.AtomicLong: long addAndGet(long)>(v10);
v11 = v3 cmp 0L;
if v11 != 0 goto label4;
return;
label4:
v2 = 0L;
goto label1;
}
public void cancel()
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled> = 1;
return;
}
public void emit(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
java.lang.Object v1, v4;
io.smallrye.mutiny.subscription.MultiSubscriber v3;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v2 != 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNullNpe(java.lang.Object,java.lang.String)>(v1, "item");
interfaceinvoke v3.<io.smallrye.mutiny.subscription.MultiSubscriber: void onItem(java.lang.Object)>(v4);
label1:
return;
}
public void fail(java.lang.Throwable)
{
java.lang.Throwable v1;
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
io.smallrye.mutiny.subscription.MultiSubscriber v3, v4;
java.lang.NullPointerException v5;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v1 := @parameter0: java.lang.Throwable;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v2 != 0 goto label2;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled> = 1;
if v1 == null goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v3.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label2;
label1:
v4 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>(java.lang.String)>("The failure is null");
interfaceinvoke v4.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v5);
label2:
return;
}
public void complete()
{
io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription v0;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
boolean v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription;
v1 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled>;
if v1 != 0 goto label1;
v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: boolean cancelled> = 1;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.GeneratorBasedMulti$GeneratorSubscription: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiSubscriber: void onCompletion()>();
label1:
return;
}
}