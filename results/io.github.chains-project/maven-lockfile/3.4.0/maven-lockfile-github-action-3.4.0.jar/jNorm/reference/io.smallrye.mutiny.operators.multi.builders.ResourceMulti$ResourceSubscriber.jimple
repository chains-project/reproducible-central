class io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber extends java.lang.Object implements java.util.concurrent.Flow$Subscription, io.smallrye.mutiny.subscription.MultiSubscriber, io.smallrye.mutiny.subscription.ContextSupport
{
private final io.smallrye.mutiny.subscription.MultiSubscriber downstream;
private final java.lang.Object resource;
private final java.util.function.Function onCompletion;
private final java.util.function.BiFunction onFailure;
private final java.util.function.Function onCancellation;
private final java.util.concurrent.atomic.AtomicBoolean terminated;
private final java.util.concurrent.atomic.AtomicReference upstream;
public void <init>(io.smallrye.mutiny.subscription.MultiSubscriber, java.lang.Object, java.util.function.Function, java.util.function.BiFunction, java.util.function.Function)
{
java.util.function.BiFunction v4;
java.util.concurrent.atomic.AtomicBoolean v6;
java.util.concurrent.atomic.AtomicReference v7;
java.util.function.Function v3, v5;
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
java.lang.Object v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.util.function.Function;
v4 := @parameter3: java.util.function.BiFunction;
v5 := @parameter4: java.util.function.Function;
specialinvoke v0.<java.lang.Object: void <init>()>();
v6 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v6.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicBoolean terminated> = v6;
v7 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v7.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream> = v7;
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream> = v1;
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.lang.Object resource> = v2;
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.function.Function onCompletion> = v3;
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.function.BiFunction onFailure> = v4;
v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.function.Function onCancellation> = v5;
return;
}
public void onSubscribe(java.util.concurrent.Flow$Subscription)
{
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
java.util.concurrent.atomic.AtomicReference v2;
io.smallrye.mutiny.subscription.MultiSubscriber v4;
boolean v3;
java.util.concurrent.Flow$Subscription v1;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 := @parameter0: java.util.concurrent.Flow$Subscription;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, v1);
if v3 == 0 goto label1;
v4 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v4.<io.smallrye.mutiny.subscription.MultiSubscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v0);
label1:
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
java.lang.Object v1;
io.smallrye.mutiny.subscription.MultiSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v2.<io.smallrye.mutiny.subscription.MultiSubscriber: void onNext(java.lang.Object)>(v1);
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1, v2, v9;
java.util.function.BiFunction v5;
java.util.concurrent.atomic.AtomicBoolean v3;
java.util.concurrent.atomic.AtomicReference v10;
java.lang.NullPointerException v8;
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
io.smallrye.mutiny.subscription.MultiSubscriber v11;
boolean v4;
java.util.function.Consumer v15, v16;
io.smallrye.mutiny.CompositeException v12;
java.lang.Throwable[] v13;
io.smallrye.mutiny.groups.UniSubscribe v14;
java.lang.Object v6, v7;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 := @parameter0: java.lang.Throwable;
v2 = null;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicBoolean terminated>;
v4 = virtualinvoke v3.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v4 == 0 goto label3;
label1:
v5 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.function.BiFunction onFailure>;
v6 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.lang.Object resource>;
v7 = interfaceinvoke v5.<java.util.function.BiFunction: java.lang.Object apply(java.lang.Object,java.lang.Object)>(v6, v1);
if v7 != null goto label3;
v8 = new java.lang.NullPointerException;
specialinvoke v8.<java.lang.NullPointerException: void <init>(java.lang.String)>("The finalizer produced a `null` Uni");
throw v8;
label2:
v9 := @caughtexception;
v2 = v9;
label3:
v10 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void cancel(java.util.concurrent.atomic.AtomicReference)>(v10);
if v2 == null goto label4;
v11 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
v12 = new io.smallrye.mutiny.CompositeException;
v13 = newarray (java.lang.Throwable)[2];
v13[0] = v1;
v13[1] = v2;
specialinvoke v12.<io.smallrye.mutiny.CompositeException: void <init>(java.lang.Throwable[])>(v13);
interfaceinvoke v11.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v12);
goto label5;
label4:
v14 = interfaceinvoke v7.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v15 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber$lambda_onFailure_0__2684: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber,java.lang.Throwable)>(v0, v1);
v16 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber$lambda_onFailure_1__2685: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber,java.lang.Throwable)>(v0, v1);
virtualinvoke v14.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v15, v16);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label2;
}
public void onCompletion()
{
java.lang.Throwable v1, v8;
java.util.concurrent.atomic.AtomicBoolean v2;
java.util.concurrent.atomic.AtomicReference v9;
java.util.function.Function v4;
java.lang.NullPointerException v7;
java.util.function.Consumer v12, v14;
io.smallrye.mutiny.groups.UniSubscribe v11;
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
java.lang.Object v5, v6;
io.smallrye.mutiny.subscription.MultiSubscriber v10, v13;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 = null;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicBoolean terminated>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v3 == 0 goto label3;
label1:
v4 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.function.Function onCompletion>;
v5 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.lang.Object resource>;
v6 = interfaceinvoke v4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v5);
if v6 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("The finalizer produced a `null` Uni");
throw v7;
label2:
v8 := @caughtexception;
v1 = v8;
label3:
v9 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void cancel(java.util.concurrent.atomic.AtomicReference)>(v9);
if v1 == null goto label4;
v10 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v10.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label5;
label4:
v11 = interfaceinvoke v6.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v12 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber$lambda_onCompletion_2__2686: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber)>(v0);
v13 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
virtualinvoke v13.<java.lang.Object: java.lang.Class getClass()>();
v14 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber$onFailure__2687: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.subscription.MultiSubscriber)>(v13);
virtualinvoke v11.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v12, v14);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label2;
}
public void request(long)
{
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
java.lang.Object v3;
long v1;
java.util.concurrent.atomic.AtomicReference v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 := @parameter0: long;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
interfaceinvoke v3.<java.util.concurrent.Flow$Subscription: void request(long)>(v1);
return;
}
public void cancel()
{
java.lang.Throwable v1, v8;
java.util.concurrent.atomic.AtomicBoolean v2;
java.util.concurrent.atomic.AtomicReference v9;
java.util.function.Function v4;
java.lang.NullPointerException v7;
java.util.function.Consumer v12, v13;
io.smallrye.mutiny.groups.UniSubscribe v11;
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
java.lang.Object v5, v6;
io.smallrye.mutiny.subscription.MultiSubscriber v10;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 = null;
v2 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicBoolean terminated>;
v3 = virtualinvoke v2.<java.util.concurrent.atomic.AtomicBoolean: boolean compareAndSet(boolean,boolean)>(0, 1);
if v3 == 0 goto label3;
label1:
v4 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.function.Function onCancellation>;
v5 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.lang.Object resource>;
v6 = interfaceinvoke v4.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v5);
if v6 != null goto label3;
v7 = new java.lang.NullPointerException;
specialinvoke v7.<java.lang.NullPointerException: void <init>(java.lang.String)>("The finalizer produced a `null` Uni");
throw v7;
label2:
v8 := @caughtexception;
v1 = v8;
label3:
v9 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: java.util.concurrent.atomic.AtomicReference upstream>;
staticinvoke <io.smallrye.mutiny.helpers.Subscriptions: void cancel(java.util.concurrent.atomic.AtomicReference)>(v9);
if v1 == null goto label4;
v10 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
interfaceinvoke v10.<io.smallrye.mutiny.subscription.MultiSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label5;
label4:
v11 = interfaceinvoke v6.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v12 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber$lambda_cancel_3__2688: java.util.function.Consumer bootstrap$()>();
v13 = staticinvoke <io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber$handleDroppedException__2689: java.util.function.Consumer bootstrap$()>();
virtualinvoke v11.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v12, v13);
label5:
return;
catch java.lang.Throwable from label1 to label2 with label2;
}
public io.smallrye.mutiny.Context context()
{
io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber v0;
io.smallrye.mutiny.Context v4, v5;
io.smallrye.mutiny.subscription.MultiSubscriber v1, v3;
boolean v2;
v0 := @this: io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber;
v1 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
v2 = v1 instanceof io.smallrye.mutiny.subscription.ContextSupport;
if v2 == 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.multi.builders.ResourceMulti$ResourceSubscriber: io.smallrye.mutiny.subscription.MultiSubscriber downstream>;
v4 = interfaceinvoke v3.<io.smallrye.mutiny.subscription.ContextSupport: io.smallrye.mutiny.Context context()>();
return v4;
label1:
v5 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
return v5;
}
}