public class io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter extends io.smallrye.mutiny.operators.MultiOperator
{
private final int numberOfSubscribers;
private final java.util.concurrent.atomic.AtomicInteger count;
private final io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection;
public void <init>(io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti, int, io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)
{
io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter v0;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v1;
java.util.concurrent.atomic.AtomicInteger v4;
int v2;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v3;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti;
v2 := @parameter1: int;
v3 := @parameter2: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection;
specialinvoke v0.<io.smallrye.mutiny.operators.MultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v4 = new java.util.concurrent.atomic.AtomicInteger;
specialinvoke v4.<java.util.concurrent.atomic.AtomicInteger: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: java.util.concurrent.atomic.AtomicInteger count> = v4;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: int numberOfSubscribers> = v2;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v4;
io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter v0;
io.smallrye.mutiny.Multi v3, v8;
java.lang.NullPointerException v2;
java.util.concurrent.atomic.AtomicInteger v5;
int v6, v7;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v9;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The subscriber must not be `null`");
throw v2;
label1:
v3 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: io.smallrye.mutiny.Multi upstream()>();
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
virtualinvoke v4.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v1);
v5 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: java.util.concurrent.atomic.AtomicInteger count>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicInteger: int incrementAndGet()>();
v7 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: int numberOfSubscribers>;
if v6 != v7 goto label2;
v8 = virtualinvoke v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: io.smallrye.mutiny.Multi upstream()>();
v9 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiConnectAfter: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
virtualinvoke v8.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: void connect(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v9);
label2:
return;
}
}