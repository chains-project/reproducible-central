final class io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher extends java.lang.Object implements java.util.concurrent.Flow$Publisher
{
private final java.util.concurrent.atomic.AtomicReference curr;
private final int bufferSize;
void <init>(java.util.concurrent.atomic.AtomicReference, int)
{
int v2;
io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher v0;
java.util.concurrent.atomic.AtomicReference v1;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher;
v1 := @parameter0: java.util.concurrent.atomic.AtomicReference;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher: java.util.concurrent.atomic.AtomicReference curr> = v1;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher: int bufferSize> = v2;
return;
}
public void subscribe(java.util.concurrent.Flow$Subscriber)
{
java.util.concurrent.atomic.AtomicBoolean v7;
long v16;
java.util.concurrent.atomic.AtomicReference v10, v12, v18, v5;
io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher v0;
byte v17;
int v11;
boolean v13, v14, v2, v8;
io.smallrye.mutiny.Context v3;
io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber v4;
java.util.concurrent.Flow$Subscriber v1;
java.util.concurrent.atomic.AtomicLong v15;
io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber v9;
java.lang.Object v6;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher;
v1 := @parameter0: java.util.concurrent.Flow$Subscriber;
v2 = v1 instanceof io.smallrye.mutiny.subscription.ContextSupport;
if v2 == 0 goto label1;
v3 = interfaceinvoke v1.<io.smallrye.mutiny.subscription.ContextSupport: io.smallrye.mutiny.Context context()>();
goto label2;
label1:
v3 = staticinvoke <io.smallrye.mutiny.Context: io.smallrye.mutiny.Context empty()>();
label2:
v4 = new io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber: void <init>(java.util.concurrent.Flow$Subscriber)>(v1);
interfaceinvoke v1.<java.util.concurrent.Flow$Subscriber: void onSubscribe(java.util.concurrent.Flow$Subscription)>(v4);
label3:
v5 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher: java.util.concurrent.atomic.AtomicReference curr>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
if v6 == null goto label4;
v7 = v6.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber: java.util.concurrent.atomic.AtomicBoolean cancelled>;
v8 = virtualinvoke v7.<java.util.concurrent.atomic.AtomicBoolean: boolean get()>();
if v8 == 0 goto label5;
label4:
v9 = new io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber;
v10 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher: java.util.concurrent.atomic.AtomicReference curr>;
v11 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher: int bufferSize>;
specialinvoke v9.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber: void <init>(java.util.concurrent.atomic.AtomicReference,int,io.smallrye.mutiny.Context)>(v10, v11, v3);
v12 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerPublisher: java.util.concurrent.atomic.AtomicReference curr>;
v13 = virtualinvoke v12.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(v6, v9);
if v13 == 0 goto label3;
v6 = v9;
label5:
v14 = virtualinvoke v6.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber: boolean add(io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber)>(v4);
if v14 == 0 goto label3;
v15 = v4.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber: java.util.concurrent.atomic.AtomicLong requested>;
v16 = virtualinvoke v15.<java.util.concurrent.atomic.AtomicLong: long get()>();
v17 = v16 cmp -9223372036854775808L;
if v17 != 0 goto label6;
virtualinvoke v6.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber: void remove(io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber)>(v4);
goto label7;
label6:
v18 = v4.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$InnerSubscriber: java.util.concurrent.atomic.AtomicReference parent>;
virtualinvoke v18.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v6);
label7:
virtualinvoke v6.<io.smallrye.mutiny.operators.multi.multicast.MultiPublishOp$PublishSubscriber: void drain()>();
return;
}
}