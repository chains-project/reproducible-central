public class io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount extends io.smallrye.mutiny.operators.AbstractMulti implements io.smallrye.mutiny.Multi
{
private final io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream;
private final int numberOfSubscribers;
private final java.time.Duration duration;
private final java.util.concurrent.ScheduledExecutorService executor;
private io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection;
public void <init>(io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti)
{
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v0;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v1;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: void <init>(io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti,int,java.time.Duration)>(v1, 1, null);
return;
}
public void <init>(io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti, int, java.time.Duration)
{
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v0;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v1;
java.time.Duration v3;
int v2;
java.util.concurrent.ScheduledExecutorService v4;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti;
v2 := @parameter1: int;
v3 := @parameter2: java.time.Duration;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream> = v1;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: int numberOfSubscribers> = v2;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: java.time.Duration duration> = v3;
v4 = staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: java.util.concurrent.ScheduledExecutorService getDefaultWorkerPool()>();
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: java.util.concurrent.ScheduledExecutorService executor> = v4;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
java.lang.Throwable v6;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v0;
io.smallrye.mutiny.groups.MultiSubscribe v8;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v10, v7;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber v9;
int v4;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v2, v3;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
boolean v5;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
entermonitor v0;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
if v2 != null goto label2;
v3 = new io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection;
specialinvoke v3.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: void <init>(io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount,io.smallrye.mutiny.subscription.MultiSubscriber)>(v0, v1);
v2 = v3;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection> = v3;
label2:
virtualinvoke v2.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: void cancelTimerIf0()>();
v4 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: int numberOfSubscribers>;
v5 = virtualinvoke v2.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: boolean shouldConnectAfterIncrement(int)>(v4);
exitmonitor v0;
label3:
goto label5;
label4:
v6 := @caughtexception;
exitmonitor v0;
throw v6;
label5:
v7 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream>;
v8 = virtualinvoke v7.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v9 = new io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber;
specialinvoke v9.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCountSubscriber: void <init>(io.smallrye.mutiny.subscription.MultiSubscriber,io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount,io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v1, v0, v2);
virtualinvoke v8.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v9);
if v5 == 0 goto label6;
v10 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream>;
virtualinvoke v10.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti: void connect(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v2);
label6:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
void cancel(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)
{
java.lang.Throwable v11;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v0;
java.util.concurrent.ScheduledFuture v16;
long v14, v4, v9;
byte v10, v5;
java.time.Duration v13, v7, v8;
java.util.concurrent.ScheduledExecutorService v12;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v1, v2, v3;
boolean v6;
java.util.concurrent.TimeUnit v15;
io.smallrye.mutiny.subscription.Cancellable v17;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection;
entermonitor v0;
label01:
v2 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
if v2 == null goto label02;
v3 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
if v3 == v1 goto label04;
label02:
exitmonitor v0;
label03:
return;
label04:
v4 = virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: long decrement()>();
v5 = v4 cmp 0L;
if v5 != 0 goto label05;
v6 = virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: boolean isConnected()>();
if v6 != 0 goto label07;
label05:
exitmonitor v0;
label06:
return;
label07:
v7 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: java.time.Duration duration>;
if v7 == null goto label08;
v8 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: java.time.Duration duration>;
v9 = virtualinvoke v8.<java.time.Duration: long toMillis()>();
v10 = v9 cmp 0L;
if v10 != 0 goto label10;
label08:
virtualinvoke v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: void timeout(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)>(v1);
exitmonitor v0;
label09:
return;
label10:
exitmonitor v0;
label11:
goto label13;
label12:
v11 := @caughtexception;
exitmonitor v0;
throw v11;
label13:
v12 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: java.util.concurrent.ScheduledExecutorService executor>;
v13 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: java.time.Duration duration>;
v14 = virtualinvoke v13.<java.time.Duration: long toMillis()>();
v15 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
v16 = interfaceinvoke v12.<java.util.concurrent.ScheduledExecutorService: java.util.concurrent.ScheduledFuture schedule(java.lang.Runnable,long,java.util.concurrent.TimeUnit)>(v1, v14, v15);
v17 = staticinvoke <io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount$lambda_cancel_0__2679: io.smallrye.mutiny.subscription.Cancellable bootstrap$(java.util.concurrent.ScheduledFuture)>(v16);
virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: void setTimer(io.smallrye.mutiny.subscription.Cancellable)>(v17);
return;
catch java.lang.Throwable from label01 to label03 with label12;
catch java.lang.Throwable from label04 to label06 with label12;
catch java.lang.Throwable from label07 to label09 with label12;
catch java.lang.Throwable from label10 to label11 with label12;
}
void terminated(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)
{
java.lang.Throwable v8;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v0;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v5, v7;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v1, v2, v3;
boolean v4, v6;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection;
entermonitor v0;
label1:
v2 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
if v2 == null goto label2;
v3 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
if v3 != v1 goto label2;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection> = null;
virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: void cancel()>();
label2:
v4 = virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: boolean decrementAndReached0()>();
if v4 == 0 goto label3;
v5 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream>;
v6 = v5 instanceof io.smallrye.mutiny.subscription.Cancellable;
if v6 == 0 goto label3;
v7 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream>;
interfaceinvoke v7.<io.smallrye.mutiny.subscription.Cancellable: void cancel()>();
label3:
exitmonitor v0;
label4:
goto label6;
label5:
v8 := @caughtexception;
exitmonitor v0;
throw v8;
label6:
return;
catch java.lang.Throwable from label1 to label4 with label5;
}
void timeout(io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection)
{
java.lang.Throwable v8;
io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount v0;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti v5, v7;
long v2;
byte v3;
io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection v1, v4;
boolean v6;
v0 := @this: io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection;
entermonitor v0;
label1:
v2 = virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: long getSubscriberCount()>();
v3 = v2 cmp 0L;
if v3 != 0 goto label2;
v4 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection>;
if v1 != v4 goto label2;
v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection connection> = null;
virtualinvoke v1.<io.smallrye.mutiny.operators.multi.multicast.ConnectableMultiConnection: void cancel()>();
v5 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream>;
v6 = v5 instanceof io.smallrye.mutiny.subscription.Cancellable;
if v6 == 0 goto label2;
v7 = v0.<io.smallrye.mutiny.operators.multi.multicast.MultiReferenceCount: io.smallrye.mutiny.operators.multi.multicast.ConnectableMulti upstream>;
interfaceinvoke v7.<io.smallrye.mutiny.subscription.Cancellable: void cancel()>();
label2:
exitmonitor v0;
label3:
goto label5;
label4:
v8 := @caughtexception;
exitmonitor v0;
throw v8;
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
}