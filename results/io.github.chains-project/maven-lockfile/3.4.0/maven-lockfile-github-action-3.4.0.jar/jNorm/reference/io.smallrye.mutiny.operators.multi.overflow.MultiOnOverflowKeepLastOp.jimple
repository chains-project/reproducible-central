public class io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp extends io.smallrye.mutiny.operators.multi.AbstractMultiOperator
{
private final java.util.function.Consumer dropConsumer;
private final java.util.function.Function dropUniMapper;
public void <init>(io.smallrye.mutiny.Multi, java.util.function.Consumer, java.util.function.Function)
{
java.util.function.Consumer v2;
io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp v0;
java.util.function.Function v3;
io.smallrye.mutiny.Multi v1;
v0 := @this: io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp;
v1 := @parameter0: io.smallrye.mutiny.Multi;
v2 := @parameter1: java.util.function.Consumer;
v3 := @parameter2: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.operators.multi.AbstractMultiOperator: void <init>(io.smallrye.mutiny.Multi)>(v1);
v0.<io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp: java.util.function.Consumer dropConsumer> = v2;
v0.<io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp: java.util.function.Function dropUniMapper> = v3;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.groups.MultiSubscribe v3;
io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp v0;
io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp$MultiOnOverflowLatestProcessor v4;
io.smallrye.mutiny.Multi v2;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
v0 := @this: io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
v2 = v0.<io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp: io.smallrye.mutiny.Multi upstream>;
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Multi: io.smallrye.mutiny.groups.MultiSubscribe subscribe()>();
v4 = new io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp$MultiOnOverflowLatestProcessor;
specialinvoke v4.<io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp$MultiOnOverflowLatestProcessor: void <init>(io.smallrye.mutiny.operators.multi.overflow.MultiOnOverflowKeepLastOp,io.smallrye.mutiny.subscription.MultiSubscriber)>(v0, v1);
virtualinvoke v3.<io.smallrye.mutiny.groups.MultiSubscribe: io.smallrye.mutiny.subscription.MultiSubscriber withSubscriber(io.smallrye.mutiny.subscription.MultiSubscriber)>(v4);
return;
}
}