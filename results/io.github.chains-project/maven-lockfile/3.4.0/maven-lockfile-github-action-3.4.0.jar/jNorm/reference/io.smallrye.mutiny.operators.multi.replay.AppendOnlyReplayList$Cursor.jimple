public class io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor extends java.lang.Object
{
private io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current;
private boolean start;
private boolean currentHasBeenRead;
static final boolean $assertionsDisabled;
final io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList this$0;
public void <init>(io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList)
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList v1;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v2;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v1 := @parameter0: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = <io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell SENTINEL_EMPTY>;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current> = v2;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean start> = 1;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean currentHasBeenRead> = 0;
return;
}
public boolean hasNext()
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v1, v2, v4, v5, v7, v8, v9;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList v3;
boolean v10, v6;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v1 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v2 = <io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell SENTINEL_EMPTY>;
if v1 != v2 goto label2;
v3 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList this$0>;
v4 = v3.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell head>;
v5 = <io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell SENTINEL_EMPTY>;
if v4 == v5 goto label1;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current> = v4;
return 1;
label1:
return 0;
label2:
v6 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean currentHasBeenRead>;
if v6 != 0 goto label3;
return 1;
label3:
v7 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v8 = v7.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell next>;
v9 = <io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell SENTINEL_END>;
if v8 == v9 goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
}
public void moveToNext()
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
java.lang.AssertionError v6;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v3, v4, v5, v7, v8;
boolean v1, v2;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v1 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean start>;
if v1 == 0 goto label1;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean start> = 0;
return;
label1:
v2 = <io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean $assertionsDisabled>;
if v2 != 0 goto label2;
v3 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v4 = v3.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell next>;
v5 = <io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell SENTINEL_END>;
if v4 != v5 goto label2;
v6 = new java.lang.AssertionError;
specialinvoke v6.<java.lang.AssertionError: void <init>()>();
throw v6;
label2:
v7 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v8 = v7.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell next>;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current> = v8;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean currentHasBeenRead> = 0;
return;
}
public java.lang.Object read()
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v1;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean currentHasBeenRead> = 1;
v1 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v2 = v1.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: java.lang.Object value>;
return v2;
}
public boolean hasReachedCompletion()
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v1;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v1 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v2 = v1.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: java.lang.Object value>;
v3 = v2 instanceof io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Completion;
return v3;
}
public boolean hasReachedFailure()
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v1;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v1 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v2 = v1.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: java.lang.Object value>;
v3 = v2 instanceof io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Failure;
return v3;
}
public java.lang.Throwable readFailure()
{
java.lang.Throwable v3;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
java.lang.Object v2;
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell v1;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean currentHasBeenRead> = 1;
v1 = v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell current>;
v2 = v1.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cell: java.lang.Object value>;
v3 = v2.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Failure: java.lang.Throwable failure>;
return v3;
}
public void readCompletion()
{
io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor v0;
v0 := @this: io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor;
v0.<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean currentHasBeenRead> = 1;
return;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lio/smallrye/mutiny/operators/multi/replay/AppendOnlyReplayList;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<io.smallrye.mutiny.operators.multi.replay.AppendOnlyReplayList$Cursor: boolean $assertionsDisabled> = v2;
return;
}
}