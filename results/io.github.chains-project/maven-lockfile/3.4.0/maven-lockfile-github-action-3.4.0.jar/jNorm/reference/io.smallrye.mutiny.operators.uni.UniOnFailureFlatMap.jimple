public class io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap extends io.smallrye.mutiny.operators.UniOperator
{
private final java.util.function.Function mapper;
private final java.util.function.Predicate predicate;
public void <init>(io.smallrye.mutiny.Uni, java.util.function.Predicate, java.util.function.Function)
{
java.util.function.Predicate v2;
java.lang.Object v4, v5, v6;
io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap v0;
java.util.function.Function v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: java.util.function.Predicate;
v3 := @parameter2: java.util.function.Function;
v4 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "upstream");
specialinvoke v0.<io.smallrye.mutiny.operators.UniOperator: void <init>(io.smallrye.mutiny.Uni)>(v4);
v5 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v3, "mapper");
v0.<io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap: java.util.function.Function mapper> = v5;
v6 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v2, "predicate");
v0.<io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap: java.util.function.Predicate predicate> = v6;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.subscription.UniSubscriber v1;
io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap v0;
io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap$UniOnFailureFlatMapProcessor v3;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap: io.smallrye.mutiny.Uni upstream()>();
v3 = new io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap$UniOnFailureFlatMapProcessor;
specialinvoke v3.<io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap$UniOnFailureFlatMapProcessor: void <init>(io.smallrye.mutiny.operators.uni.UniOnFailureFlatMap,io.smallrye.mutiny.subscription.UniSubscriber)>(v0, v1);
staticinvoke <io.smallrye.mutiny.operators.AbstractUni: void subscribe(io.smallrye.mutiny.Uni,io.smallrye.mutiny.subscription.UniSubscriber)>(v2, v3);
return;
}
}