class io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor extends io.smallrye.mutiny.operators.uni.UniOperatorProcessor
{
final io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0;
public void <init>(io.smallrye.mutiny.operators.uni.UniOnItemConsume, io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor v0;
io.smallrye.mutiny.operators.uni.UniOnItemConsume v1;
io.smallrye.mutiny.subscription.UniSubscriber v2;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor;
v1 := @parameter0: io.smallrye.mutiny.operators.uni.UniOnItemConsume;
v2 := @parameter1: io.smallrye.mutiny.subscription.UniSubscriber;
v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0> = v1;
specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOperatorProcessor: void <init>(io.smallrye.mutiny.subscription.UniSubscriber)>(v2);
return;
}
public void onItem(java.lang.Object)
{
io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor v0;
io.smallrye.mutiny.operators.uni.UniOnItemConsume v3;
io.smallrye.mutiny.subscription.UniSubscriber v5, v7;
java.util.function.Consumer v4;
java.lang.Object v1;
boolean v2, v6;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor;
v1 := @parameter0: java.lang.Object;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: boolean isCancelled()>();
if v2 != 0 goto label1;
v3 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0>;
v4 = v3.<io.smallrye.mutiny.operators.uni.UniOnItemConsume: java.util.function.Consumer onItemCallback>;
v5 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v6 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: boolean invokeEventHandler(java.util.function.Consumer,java.lang.Object,boolean,io.smallrye.mutiny.subscription.UniSubscriber)>(v4, v1, 0, v5);
if v6 == 0 goto label1;
v7 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v7.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v1);
label1:
return;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1, v14;
io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor v0;
io.smallrye.mutiny.subscription.UniSubscriber v10, v12, v13, v15, v20, v22;
boolean v11, v2, v21, v7;
java.util.function.Predicate v4, v6;
io.smallrye.mutiny.operators.uni.UniOnItemConsume v18, v3, v5, v8;
java.util.function.Consumer v19, v9;
io.smallrye.mutiny.CompositeException v16;
java.lang.Throwable[] v17;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor;
v1 := @parameter0: java.lang.Throwable;
v2 = virtualinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: boolean isCancelled()>();
if v2 != 0 goto label6;
v3 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0>;
v4 = v3.<io.smallrye.mutiny.operators.uni.UniOnItemConsume: java.util.function.Predicate onFailurePredicate>;
if v4 == null goto label5;
label1:
v5 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0>;
v6 = v5.<io.smallrye.mutiny.operators.uni.UniOnItemConsume: java.util.function.Predicate onFailurePredicate>;
v7 = interfaceinvoke v6.<java.util.function.Predicate: boolean test(java.lang.Object)>(v1);
if v7 == 0 goto label2;
v8 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0>;
v9 = v8.<io.smallrye.mutiny.operators.uni.UniOnItemConsume: java.util.function.Consumer onFailureCallback>;
v10 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v11 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: boolean invokeEventHandler(java.util.function.Consumer,java.lang.Object,boolean,io.smallrye.mutiny.subscription.UniSubscriber)>(v9, v1, 1, v10);
if v11 == 0 goto label7;
v12 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v12.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label7;
label2:
v13 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v13.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
label3:
goto label7;
label4:
v14 := @caughtexception;
v15 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v16 = new io.smallrye.mutiny.CompositeException;
v17 = newarray (java.lang.Throwable)[2];
v17[0] = v1;
v17[1] = v14;
specialinvoke v16.<io.smallrye.mutiny.CompositeException: void <init>(java.lang.Throwable[])>(v17);
interfaceinvoke v15.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v16);
goto label7;
label5:
v18 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.operators.uni.UniOnItemConsume this$0>;
v19 = v18.<io.smallrye.mutiny.operators.uni.UniOnItemConsume: java.util.function.Consumer onFailureCallback>;
v20 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
v21 = specialinvoke v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: boolean invokeEventHandler(java.util.function.Consumer,java.lang.Object,boolean,io.smallrye.mutiny.subscription.UniSubscriber)>(v19, v1, 1, v20);
if v21 == 0 goto label7;
v22 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor: io.smallrye.mutiny.subscription.UniSubscriber downstream>;
interfaceinvoke v22.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v1);
goto label7;
label6:
staticinvoke <io.smallrye.mutiny.infrastructure.Infrastructure: void handleDroppedException(java.lang.Throwable)>(v1);
label7:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
private boolean invokeEventHandler(java.util.function.Consumer, java.lang.Object, boolean, io.smallrye.mutiny.subscription.UniSubscriber)
{
java.lang.Throwable v5;
io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor v0;
io.smallrye.mutiny.subscription.UniSubscriber v4;
java.util.function.Consumer v1;
io.smallrye.mutiny.CompositeException v6;
java.lang.Throwable[] v7;
java.lang.Object v2;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnItemConsume$UniOnItemComsumeProcessor;
v1 := @parameter0: java.util.function.Consumer;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: boolean;
v4 := @parameter3: io.smallrye.mutiny.subscription.UniSubscriber;
if v1 == null goto label6;
label1:
interfaceinvoke v1.<java.util.function.Consumer: void accept(java.lang.Object)>(v2);
label2:
goto label6;
label3:
v5 := @caughtexception;
if v3 == 0 goto label4;
v6 = new io.smallrye.mutiny.CompositeException;
v7 = newarray (java.lang.Throwable)[2];
v7[0] = v2;
v7[1] = v5;
specialinvoke v6.<io.smallrye.mutiny.CompositeException: void <init>(java.lang.Throwable[])>(v7);
interfaceinvoke v4.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v6);
goto label5;
label4:
interfaceinvoke v4.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v5);
label5:
return 0;
label6:
return 1;
catch java.lang.Throwable from label1 to label2 with label3;
}
}