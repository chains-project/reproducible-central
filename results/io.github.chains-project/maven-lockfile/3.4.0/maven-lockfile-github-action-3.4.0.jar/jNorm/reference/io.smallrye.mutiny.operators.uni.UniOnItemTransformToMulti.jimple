public class io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti extends io.smallrye.mutiny.operators.AbstractMulti
{
private final java.util.function.Function mapper;
private final io.smallrye.mutiny.Uni upstream;
public void <init>(io.smallrye.mutiny.Uni, java.util.function.Function)
{
io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti v0;
java.util.function.Function v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractMulti: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti: io.smallrye.mutiny.Uni upstream> = v1;
v0.<io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti: java.util.function.Function mapper> = v2;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.MultiSubscriber)
{
io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti v0;
io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti$FlatMapPublisherSubscriber v4;
java.util.function.Function v5;
io.smallrye.mutiny.subscription.MultiSubscriber v1;
java.lang.NullPointerException v2;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti;
v1 := @parameter0: io.smallrye.mutiny.subscription.MultiSubscriber;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>("The subscriber must not be `null`");
throw v2;
label1:
v3 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti: io.smallrye.mutiny.Uni upstream>;
v4 = new io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti$FlatMapPublisherSubscriber;
v5 = v0.<io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti: java.util.function.Function mapper>;
specialinvoke v4.<io.smallrye.mutiny.operators.uni.UniOnItemTransformToMulti$FlatMapPublisherSubscriber: void <init>(java.util.concurrent.Flow$Subscriber,java.util.function.Function)>(v1, v5);
staticinvoke <io.smallrye.mutiny.operators.AbstractUni: void subscribe(io.smallrye.mutiny.Uni,io.smallrye.mutiny.subscription.UniSubscriber)>(v3, v4);
return;
}
}