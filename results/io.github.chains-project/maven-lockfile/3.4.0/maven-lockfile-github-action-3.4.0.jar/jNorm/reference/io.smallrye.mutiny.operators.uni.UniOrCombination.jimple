public class io.smallrye.mutiny.operators.uni.UniOrCombination extends io.smallrye.mutiny.operators.UniOperator
{
private final java.util.List challengers;
public void <init>(java.lang.Iterable)
{
java.util.function.Consumer v4;
io.smallrye.mutiny.operators.uni.UniOrCombination v0;
java.lang.Object v3;
java.lang.Iterable v1;
java.util.ArrayList v2;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOrCombination;
v1 := @parameter0: java.lang.Iterable;
specialinvoke v0.<io.smallrye.mutiny.operators.UniOperator: void <init>(io.smallrye.mutiny.Uni)>(null);
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<io.smallrye.mutiny.operators.uni.UniOrCombination: java.util.List challengers> = v2;
v3 = staticinvoke <io.smallrye.mutiny.helpers.ParameterValidation: java.lang.Object nonNull(java.lang.Object,java.lang.String)>(v1, "iterable");
v4 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOrCombination$lambda_new_0__2705: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.operators.uni.UniOrCombination)>(v0);
interfaceinvoke v3.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v4);
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
io.smallrye.mutiny.subscription.UniSubscription v13, v4;
io.smallrye.mutiny.operators.uni.UniOrCombination v0;
java.util.concurrent.atomic.AtomicBoolean v9;
io.smallrye.mutiny.subscription.UniSubscriber v1;
java.util.ArrayList v10;
java.util.function.Consumer v12, v14;
java.util.List v11, v2, v5, v7;
int v6;
java.lang.Object v8;
boolean v3;
v0 := @this: io.smallrye.mutiny.operators.uni.UniOrCombination;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
v2 = v0.<io.smallrye.mutiny.operators.uni.UniOrCombination: java.util.List challengers>;
v3 = interfaceinvoke v2.<java.util.List: boolean isEmpty()>();
if v3 == 0 goto label1;
v4 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v4);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(null);
return;
label1:
v5 = v0.<io.smallrye.mutiny.operators.uni.UniOrCombination: java.util.List challengers>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
if v6 != 1 goto label2;
v7 = v0.<io.smallrye.mutiny.operators.uni.UniOrCombination: java.util.List challengers>;
v8 = interfaceinvoke v7.<java.util.List: java.lang.Object get(int)>(0);
staticinvoke <io.smallrye.mutiny.operators.AbstractUni: void subscribe(io.smallrye.mutiny.Uni,io.smallrye.mutiny.subscription.UniSubscriber)>(v8, v1);
return;
label2:
v9 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v9.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v10 = new java.util.ArrayList;
specialinvoke v10.<java.util.ArrayList: void <init>()>();
v11 = v0.<io.smallrye.mutiny.operators.uni.UniOrCombination: java.util.List challengers>;
v12 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOrCombination$lambda_subscribe_1__2706: java.util.function.Consumer bootstrap$(io.smallrye.mutiny.subscription.UniSubscriber,java.util.List)>(v1, v10);
interfaceinvoke v11.<java.util.List: void forEach(java.util.function.Consumer)>(v12);
v13 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOrCombination$lambda_subscribe_3__2707: io.smallrye.mutiny.subscription.UniSubscription bootstrap$(java.util.concurrent.atomic.AtomicBoolean,java.util.List)>(v9, v10);
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v13);
v14 = staticinvoke <io.smallrye.mutiny.operators.uni.UniOrCombination$lambda_subscribe_6__2708: java.util.function.Consumer bootstrap$(java.util.concurrent.atomic.AtomicBoolean,java.util.List,io.smallrye.mutiny.subscription.UniSubscriber)>(v9, v10, v1);
interfaceinvoke v10.<java.util.List: void forEach(java.util.function.Consumer)>(v14);
return;
}
}