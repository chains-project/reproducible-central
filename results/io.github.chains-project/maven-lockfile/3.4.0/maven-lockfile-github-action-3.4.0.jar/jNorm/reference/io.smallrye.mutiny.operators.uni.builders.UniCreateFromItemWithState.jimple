public class io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState extends io.smallrye.mutiny.operators.AbstractUni
{
private final java.util.function.Function mapper;
private final io.smallrye.mutiny.operators.uni.builders.StateHolder holder;
public void <init>(java.util.function.Supplier, java.util.function.Function)
{
io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState v0;
io.smallrye.mutiny.operators.uni.builders.StateHolder v3;
java.util.function.Function v2;
java.util.function.Supplier v1;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: java.util.function.Function;
specialinvoke v0.<io.smallrye.mutiny.operators.AbstractUni: void <init>()>();
v3 = new io.smallrye.mutiny.operators.uni.builders.StateHolder;
specialinvoke v3.<io.smallrye.mutiny.operators.uni.builders.StateHolder: void <init>(java.util.function.Supplier)>(v1);
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState: io.smallrye.mutiny.operators.uni.builders.StateHolder holder> = v3;
v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState: java.util.function.Function mapper> = v2;
return;
}
public void subscribe(io.smallrye.mutiny.subscription.UniSubscriber)
{
java.lang.Throwable v5, v8;
io.smallrye.mutiny.subscription.UniSubscription v2;
io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState v0;
io.smallrye.mutiny.operators.uni.builders.StateHolder v3;
io.smallrye.mutiny.subscription.UniSubscriber v1;
java.util.function.Function v6;
java.lang.Object v4, v7;
v0 := @this: io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState;
v1 := @parameter0: io.smallrye.mutiny.subscription.UniSubscriber;
v2 = <io.smallrye.mutiny.helpers.EmptyUniSubscription: io.smallrye.mutiny.subscription.UniSubscription DONE>;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onSubscribe(io.smallrye.mutiny.subscription.UniSubscription)>(v2);
label1:
v3 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState: io.smallrye.mutiny.operators.uni.builders.StateHolder holder>;
v4 = virtualinvoke v3.<io.smallrye.mutiny.operators.uni.builders.StateHolder: java.lang.Object get()>();
label2:
goto label4;
label3:
v5 := @caughtexception;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v5);
return;
label4:
v6 = v0.<io.smallrye.mutiny.operators.uni.builders.UniCreateFromItemWithState: java.util.function.Function mapper>;
v7 = interfaceinvoke v6.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v4);
label5:
goto label7;
label6:
v8 := @caughtexception;
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onFailure(java.lang.Throwable)>(v8);
return;
label7:
interfaceinvoke v1.<io.smallrye.mutiny.subscription.UniSubscriber: void onItem(java.lang.Object)>(v7);
return;
catch java.lang.Throwable from label1 to label2 with label3;
catch java.lang.Throwable from label4 to label5 with label6;
}
}