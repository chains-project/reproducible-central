public interface  io.smallrye.mutiny.tuples.Functions$Function6 extends java.lang.Object implements java.util.function.Function
{
public abstract java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object, java.lang.Object);
public java.lang.Object apply(java.util.List)
{
java.util.List v1;
io.smallrye.mutiny.tuples.Functions$Function6 v0;
java.lang.Object v2, v3, v4, v5, v6, v7, v8;
v0 := @this: io.smallrye.mutiny.tuples.Functions$Function6;
v1 := @parameter0: java.util.List;
v2 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(0);
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(1);
v4 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(2);
v5 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(3);
v6 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(4);
v7 = interfaceinvoke v1.<java.util.List: java.lang.Object get(int)>(5);
v8 = interfaceinvoke v0.<io.smallrye.mutiny.tuples.Functions$Function6: java.lang.Object apply(java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object,java.lang.Object)>(v2, v3, v4, v5, v6, v7);
return v8;
}
}