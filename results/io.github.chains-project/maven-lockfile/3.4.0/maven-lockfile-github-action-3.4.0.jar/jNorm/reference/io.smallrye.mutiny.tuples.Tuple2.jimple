public class io.smallrye.mutiny.tuples.Tuple2 extends java.lang.Object implements io.smallrye.mutiny.tuples.Tuple
{
final java.lang.Object item1;
final java.lang.Object item2;
protected void <init>(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
io.smallrye.mutiny.tuples.Tuple2 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1> = v1;
v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2> = v2;
return;
}
public static io.smallrye.mutiny.tuples.Tuple2 of(java.lang.Object, java.lang.Object)
{
java.lang.Object v0, v1;
io.smallrye.mutiny.tuples.Tuple2 v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 = new io.smallrye.mutiny.tuples.Tuple2;
specialinvoke v2.<io.smallrye.mutiny.tuples.Tuple2: void <init>(java.lang.Object,java.lang.Object)>(v0, v1);
return v2;
}
public java.lang.Object getItem1()
{
java.lang.Object v1;
io.smallrye.mutiny.tuples.Tuple2 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
return v1;
}
public java.lang.Object getItem2()
{
java.lang.Object v1;
io.smallrye.mutiny.tuples.Tuple2 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
return v1;
}
public io.smallrye.mutiny.tuples.Tuple2 mapItem1(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple2 v0, v5;
java.lang.Object v2, v3, v4;
java.util.function.Function v1;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v3 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v2);
v4 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v5 = staticinvoke <io.smallrye.mutiny.tuples.Tuple2: io.smallrye.mutiny.tuples.Tuple2 of(java.lang.Object,java.lang.Object)>(v3, v4);
return v5;
}
public io.smallrye.mutiny.tuples.Tuple2 mapItem2(java.util.function.Function)
{
io.smallrye.mutiny.tuples.Tuple2 v0, v5;
java.lang.Object v2, v3, v4;
java.util.function.Function v1;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v4 = interfaceinvoke v1.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v3);
v5 = staticinvoke <io.smallrye.mutiny.tuples.Tuple2: io.smallrye.mutiny.tuples.Tuple2 of(java.lang.Object,java.lang.Object)>(v2, v4);
return v5;
}
public java.lang.Object nth(int)
{
io.smallrye.mutiny.tuples.Tuple2 v0;
int v1;
java.lang.Object v2, v3;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 := @parameter0: int;
virtualinvoke v0.<io.smallrye.mutiny.tuples.Tuple2: void assertIndexInBounds(int)>(v1);
if v1 != 0 goto label1;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
return v2;
label1:
v3 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
return v3;
}
protected void assertIndexInBounds(int)
{
java.lang.IndexOutOfBoundsException v3;
io.smallrye.mutiny.tuples.Tuple2 v0;
int v1, v2, v4;
java.lang.String v5;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 := @parameter0: int;
if v1 < 0 goto label1;
v2 = virtualinvoke v0.<io.smallrye.mutiny.tuples.Tuple2: int size()>();
if v1 < v2 goto label2;
label1:
v3 = new java.lang.IndexOutOfBoundsException;
v4 = virtualinvoke v0.<io.smallrye.mutiny.tuples.Tuple2: int size()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int)>(v1, v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot retrieve item at position \u0001, size is \u0001");
specialinvoke v3.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v5);
throw v3;
label2:
return;
}
public java.util.List asList()
{
java.util.List v4;
java.lang.Object[] v1;
io.smallrye.mutiny.tuples.Tuple2 v0;
java.lang.Object v2, v3;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v1[0] = v2;
v3 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v1[1] = v3;
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v4;
}
public boolean equals(java.lang.Object)
{
io.smallrye.mutiny.tuples.Tuple2 v0;
java.lang.Object v1, v3, v4, v6, v7;
boolean v2, v5, v8;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof io.smallrye.mutiny.tuples.Tuple2;
if v2 != 0 goto label2;
return 0;
label2:
v3 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v4 = v1.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v3, v4);
if v5 != 0 goto label3;
return 0;
label3:
v6 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v7 = v1.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v8 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v6, v7);
return v8;
}
public int hashCode()
{
io.smallrye.mutiny.tuples.Tuple2 v0;
int v3, v4, v7, v8;
java.lang.Object v1, v2, v5, v6;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
if v1 == null goto label1;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v3 = virtualinvoke v2.<java.lang.Object: int hashCode()>();
goto label2;
label1:
v3 = 0;
label2:
v4 = 31 * v3;
v5 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
if v5 == null goto label3;
v6 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v7 = virtualinvoke v6.<java.lang.Object: int hashCode()>();
goto label4;
label3:
v7 = 0;
label4:
v8 = v4 + v7;
return v8;
}
public int size()
{
io.smallrye.mutiny.tuples.Tuple2 v0;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
return 2;
}
public java.lang.String toString()
{
io.smallrye.mutiny.tuples.Tuple2 v0;
java.lang.Object v1, v2;
java.lang.String v3;
v0 := @this: io.smallrye.mutiny.tuples.Tuple2;
v1 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item1>;
v2 = v0.<io.smallrye.mutiny.tuples.Tuple2: java.lang.Object item2>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Object,java.lang.Object)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Tuple{item1=\u0001, item2=\u0001}");
return v3;
}
}