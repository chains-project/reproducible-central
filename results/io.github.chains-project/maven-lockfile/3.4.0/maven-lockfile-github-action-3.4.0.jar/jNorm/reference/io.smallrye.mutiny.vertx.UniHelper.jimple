public class io.smallrye.mutiny.vertx.UniHelper extends java.lang.Object
{
public static java.util.function.Consumer NOOP;
public void <init>()
{
io.smallrye.mutiny.vertx.UniHelper v0;
v0 := @this: io.smallrye.mutiny.vertx.UniHelper;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)
{
java.util.function.Consumer v0;
io.smallrye.mutiny.Uni v1;
v0 := @parameter0: java.util.function.Consumer;
v1 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v0);
return v1;
}
public static io.vertx.core.Future toFuture(io.smallrye.mutiny.Uni)
{
java.util.function.Consumer v3, v4;
io.vertx.core.Promise v1;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.vertx.core.Future v5;
io.smallrye.mutiny.Uni v0;
v0 := @parameter0: io.smallrye.mutiny.Uni;
v1 = staticinvoke <io.vertx.core.Promise: io.vertx.core.Promise promise()>();
v2 = interfaceinvoke v0.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v3 = staticinvoke <io.smallrye.mutiny.vertx.UniHelper$complete__2321: java.util.function.Consumer bootstrap$(io.vertx.core.Promise)>(v1);
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v4 = staticinvoke <io.smallrye.mutiny.vertx.UniHelper$fail__2322: java.util.function.Consumer bootstrap$(io.vertx.core.Promise)>(v1);
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer,java.util.function.Consumer)>(v3, v4);
v5 = interfaceinvoke v1.<io.vertx.core.Promise: io.vertx.core.Future future()>();
return v5;
}
public static io.smallrye.mutiny.Uni toUni(io.vertx.core.Future)
{
io.smallrye.mutiny.groups.UniCreate v1;
java.util.concurrent.CompletionStage v2;
io.vertx.core.Future v0;
io.smallrye.mutiny.Uni v3;
v0 := @parameter0: io.vertx.core.Future;
v1 = staticinvoke <io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniCreate createFrom()>();
v2 = interfaceinvoke v0.<io.vertx.core.Future: java.util.concurrent.CompletionStage toCompletionStage()>();
v3 = virtualinvoke v1.<io.smallrye.mutiny.groups.UniCreate: io.smallrye.mutiny.Uni completionStage(java.util.concurrent.CompletionStage)>(v2);
return v3;
}
public static io.smallrye.mutiny.subscription.UniSubscriber toSubscriber(io.vertx.core.Handler)
{
java.util.concurrent.atomic.AtomicBoolean v1;
io.vertx.core.Handler v0;
io.smallrye.mutiny.vertx.UniHelper$2 v2;
v0 := @parameter0: io.vertx.core.Handler;
v1 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v1.<java.util.concurrent.atomic.AtomicBoolean: void <init>()>();
v2 = new io.smallrye.mutiny.vertx.UniHelper$2;
specialinvoke v2.<io.smallrye.mutiny.vertx.UniHelper$2: void <init>(java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Handler)>(v1, v0);
return v2;
}
static void <clinit>()
{
io.smallrye.mutiny.vertx.UniHelper$1 v0;
v0 = new io.smallrye.mutiny.vertx.UniHelper$1;
specialinvoke v0.<io.smallrye.mutiny.vertx.UniHelper$1: void <init>()>();
<io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP> = v0;
return;
}
}