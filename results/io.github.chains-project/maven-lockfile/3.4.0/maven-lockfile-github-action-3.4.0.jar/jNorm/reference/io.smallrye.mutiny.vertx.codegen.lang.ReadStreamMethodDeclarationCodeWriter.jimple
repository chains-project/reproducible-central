public class io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter extends java.lang.Object implements io.smallrye.mutiny.vertx.codegen.lang.ConditionalCodeWriter
{
public void <init>()
{
io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void generate(io.vertx.codegen.ClassModel, java.io.PrintWriter)
{
java.io.PrintWriter v2;
io.vertx.codegen.type.ClassTypeInfo v3;
io.vertx.codegen.ClassModel v1;
java.util.List v4;
io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter v0;
java.lang.Class v5;
java.lang.Object v8;
java.lang.String v6, v7, v9;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 := @parameter1: java.io.PrintWriter;
v3 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v4 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: java.util.List getParams()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>("  @CheckReturnValue\n");
v5 = class "Lio/smallrye/mutiny/Multi;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("  \u0001<");
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v7);
v8 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(0);
v9 = virtualinvoke v8.<io.vertx.codegen.TypeParamInfo$Class: java.lang.String getName()>();
virtualinvoke v2.<java.io.PrintWriter: void print(java.lang.String)>(v9);
virtualinvoke v2.<java.io.PrintWriter: void println(java.lang.String)>("> toMulti();");
virtualinvoke v2.<java.io.PrintWriter: void println()>();
return;
}
public boolean test(io.vertx.codegen.ClassModel)
{
io.vertx.codegen.type.ClassTypeInfo v3, v4;
io.vertx.codegen.ClassModel v1;
io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter v0;
java.lang.String v5;
boolean v2, v6, v7;
v0 := @this: io.smallrye.mutiny.vertx.codegen.lang.ReadStreamMethodDeclarationCodeWriter;
v1 := @parameter0: io.vertx.codegen.ClassModel;
v2 = virtualinvoke v1.<io.vertx.codegen.ClassModel: boolean isConcrete()>();
if v2 != 0 goto label1;
v3 = virtualinvoke v1.<io.vertx.codegen.ClassModel: io.vertx.codegen.type.ClassTypeInfo getType()>();
v4 = virtualinvoke v3.<io.vertx.codegen.type.ClassTypeInfo: io.vertx.codegen.type.ClassTypeInfo getRaw()>();
v5 = virtualinvoke v4.<io.vertx.codegen.type.ClassTypeInfo: java.lang.String getName()>();
v6 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("io.vertx.core.streams.ReadStream");
if v6 == 0 goto label1;
v7 = 1;
goto label2;
label1:
v7 = 0;
label2:
return v7;
}
}