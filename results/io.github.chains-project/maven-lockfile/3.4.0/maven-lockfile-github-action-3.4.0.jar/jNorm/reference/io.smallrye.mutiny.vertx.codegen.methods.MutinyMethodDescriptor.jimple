public class io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor extends java.lang.Object
{
public final boolean fluent;
private final io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind;
private final io.vertx.codegen.MethodInfo method;
private final io.vertx.codegen.MethodInfo original;
private final boolean isPrivate;
public static io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor createAndForgetMethod(io.vertx.codegen.MethodInfo, io.vertx.codegen.MethodInfo, boolean)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v4;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v3;
io.vertx.codegen.MethodInfo v0, v1;
boolean v2;
v0 := @parameter0: io.vertx.codegen.MethodInfo;
v1 := @parameter1: io.vertx.codegen.MethodInfo;
v2 := @parameter2: boolean;
v3 = new io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v4 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind FORGET>;
specialinvoke v3.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind,boolean)>(v0, v1, v4, v2);
return v3;
}
public void <init>(io.vertx.codegen.MethodInfo, io.vertx.codegen.MethodInfo, io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind, boolean)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v3;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
io.vertx.codegen.MethodInfo v1, v2;
boolean v4;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 := @parameter2: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind;
v4 := @parameter3: boolean;
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind,boolean,boolean)>(v1, v2, v3, v4, 0);
return;
}
public void <init>(io.vertx.codegen.MethodInfo, io.vertx.codegen.MethodInfo, io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind, boolean, boolean)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v3;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
io.vertx.codegen.MethodInfo v1, v2;
boolean v4, v5;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 := @parameter2: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind> = v3;
v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean fluent> = v4;
v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo method> = v1;
v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo original> = v2;
v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isPrivate> = v5;
return;
}
public void <init>(io.vertx.codegen.MethodInfo, io.vertx.codegen.MethodInfo, io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind)
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v3;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
io.vertx.codegen.MethodInfo v1, v2;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 := @parameter0: io.vertx.codegen.MethodInfo;
v2 := @parameter1: io.vertx.codegen.MethodInfo;
v3 := @parameter2: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind;
specialinvoke v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: void <init>(io.vertx.codegen.MethodInfo,io.vertx.codegen.MethodInfo,io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind,boolean)>(v1, v2, v3, 0);
return;
}
public java.lang.String getMethodName()
{
java.lang.String v2;
io.vertx.codegen.MethodInfo v1;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo method>;
v2 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
return v2;
}
public java.lang.String getOriginalMethodName()
{
java.lang.String v2;
io.vertx.codegen.MethodInfo v1;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo original>;
v2 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: java.lang.String getName()>();
return v2;
}
public io.vertx.codegen.MethodInfo getOriginalMethod()
{
io.vertx.codegen.MethodInfo v1;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo original>;
return v1;
}
public io.vertx.codegen.MethodInfo getMethod()
{
io.vertx.codegen.MethodInfo v1;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo method>;
return v1;
}
public boolean isFluent()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean fluent>;
return v1;
}
public boolean isDeprecated()
{
io.vertx.codegen.MethodInfo v1;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v2;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.vertx.codegen.MethodInfo method>;
v2 = virtualinvoke v1.<io.vertx.codegen.MethodInfo: boolean isDeprecated()>();
return v2;
}
public boolean isAwaitMethod()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v1, v2;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind>;
v2 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind AWAIT>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isForgetMethod()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v1, v2;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind>;
v2 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind FORGET>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isUniMethod()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v1, v2;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind>;
v2 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind UNI>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isConsumerMethod()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v1, v2;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind>;
v2 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind CONSUMER>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isSimple()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind v1, v2;
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v3;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind kind>;
v2 = <io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor$MutinyKind SIMPLE>;
if v1 != v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isPrivate()
{
io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor v0;
boolean v1;
v0 := @this: io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor;
v1 = v0.<io.smallrye.mutiny.vertx.codegen.methods.MutinyMethodDescriptor: boolean isPrivate>;
return v1;
}
}