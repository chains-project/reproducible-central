public class io.smallrye.stork.utils.ServiceInstanceIds extends java.lang.Object
{
private static final java.util.concurrent.atomic.AtomicLong idSequence;
public static java.lang.Long next()
{
java.util.concurrent.atomic.AtomicLong v0;
long v1;
java.lang.Long v2;
v0 = <io.smallrye.stork.utils.ServiceInstanceIds: java.util.concurrent.atomic.AtomicLong idSequence>;
v1 = virtualinvoke v0.<java.util.concurrent.atomic.AtomicLong: long getAndIncrement()>();
v2 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v1);
return v2;
}
private void <init>()
{
io.smallrye.stork.utils.ServiceInstanceIds v0;
v0 := @this: io.smallrye.stork.utils.ServiceInstanceIds;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void <clinit>()
{
java.util.concurrent.atomic.AtomicLong v0;
v0 = new java.util.concurrent.atomic.AtomicLong;
specialinvoke v0.<java.util.concurrent.atomic.AtomicLong: void <init>()>();
<io.smallrye.stork.utils.ServiceInstanceIds: java.util.concurrent.atomic.AtomicLong idSequence> = v0;
return;
}
}