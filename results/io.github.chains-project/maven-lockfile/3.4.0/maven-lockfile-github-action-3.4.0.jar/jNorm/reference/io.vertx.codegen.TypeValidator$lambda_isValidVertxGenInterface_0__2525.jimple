public final class io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525 extends java.lang.Object implements java.util.function.Predicate
{
javax.lang.model.element.Element cap0;
boolean cap1;
public static java.util.function.Predicate bootstrap$(javax.lang.model.element.Element, boolean)
{
javax.lang.model.element.Element v0;
io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525 v2;
boolean v1;
v0 := @parameter0: javax.lang.model.element.Element;
v1 := @parameter1: boolean;
v2 = new io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525;
specialinvoke v2.<io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525: void <init>(javax.lang.model.element.Element,boolean)>(v0, v1);
return v2;
}
public void <init>(javax.lang.model.element.Element, boolean)
{
javax.lang.model.element.Element v1;
io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525 v0;
boolean v2;
v0 := @this: io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525;
v1 := @parameter0: javax.lang.model.element.Element;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525: javax.lang.model.element.Element cap0> = v1;
v0.<io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525: boolean cap1> = v2;
return;
}
public boolean test(java.lang.Object)
{
java.lang.Object v1;
javax.lang.model.element.Element v2;
io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525 v0;
boolean v3, v4;
v0 := @this: io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525: javax.lang.model.element.Element cap0>;
v3 = v0.<io.vertx.codegen.TypeValidator$lambda_isValidVertxGenInterface_0__2525: boolean cap1>;
v4 = staticinvoke <io.vertx.codegen.TypeValidator: boolean lambda$isValidVertxGenInterface$0(javax.lang.model.element.Element,boolean,io.vertx.codegen.type.TypeInfo)>(v2, v3, v1);
return v4;
}
}