public class io.vertx.codegen.format.CamelCase extends io.vertx.codegen.format.Case
{
public static final io.vertx.codegen.format.Case INSTANCE;
public void <init>()
{
io.vertx.codegen.format.CamelCase v0;
v0 := @this: io.vertx.codegen.format.CamelCase;
specialinvoke v0.<io.vertx.codegen.format.Case: void <init>()>();
return;
}
public java.lang.String name()
{
io.vertx.codegen.format.CamelCase v0;
v0 := @this: io.vertx.codegen.format.CamelCase;
return "CAMEL";
}
public java.lang.String format(java.lang.Iterable)
{
java.util.Iterator v3;
char v7, v9;
java.lang.Iterable v1;
int v10, v6;
io.vertx.codegen.format.CamelCase v0;
java.lang.Object v5;
java.lang.StringBuilder v2;
java.lang.String v11;
boolean v4, v8;
v0 := @this: io.vertx.codegen.format.CamelCase;
v1 := @parameter0: java.lang.Iterable;
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = interfaceinvoke v1.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v5.<java.lang.String: int length()>();
if v6 <= 0 goto label1;
v7 = virtualinvoke v5.<java.lang.String: char charAt(int)>(0);
v8 = staticinvoke <java.lang.Character: boolean isLowerCase(char)>(v7);
if v8 == 0 goto label2;
v9 = staticinvoke <java.lang.Character: char toUpperCase(char)>(v7);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v9);
v10 = virtualinvoke v5.<java.lang.String: int length()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence,int,int)>(v5, 1, v10);
goto label1;
label2:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
goto label1;
label3:
v11 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
public java.util.List parse(java.lang.String)
{
java.lang.String[] v2;
java.util.List v6, v7;
int v3;
io.vertx.codegen.format.CamelCase v0;
java.lang.String v1, v4;
boolean v5;
v0 := @this: io.vertx.codegen.format.CamelCase;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>("(?<!(^|[A-Z]))(?=[A-Z])|(?<!^)(?=[A-Z][a-z])");
v3 = lengthof v2;
if v3 != 1 goto label1;
v4 = v2[0];
v5 = virtualinvoke v4.<java.lang.String: boolean isEmpty()>();
if v5 == 0 goto label1;
v6 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v6;
label1:
v7 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v2);
return v7;
}
static void <clinit>()
{
io.vertx.codegen.format.CamelCase v0;
v0 = new io.vertx.codegen.format.CamelCase;
specialinvoke v0.<io.vertx.codegen.format.CamelCase: void <init>()>();
<io.vertx.codegen.format.CamelCase: io.vertx.codegen.format.Case INSTANCE> = v0;
return;
}
}