public class io.vertx.codegen.type.ApiTypeInfo extends io.vertx.codegen.type.ClassTypeInfo
{
final boolean proxyGen;
final boolean concrete;
final io.vertx.codegen.type.TypeInfo handlerArg;
public void <init>(java.lang.String, boolean, java.util.List, io.vertx.codegen.type.TypeInfo, io.vertx.codegen.ModuleInfo, boolean, boolean, io.vertx.codegen.type.DataObjectInfo)
{
io.vertx.codegen.type.ApiTypeInfo v0;
io.vertx.codegen.type.TypeInfo v4;
io.vertx.codegen.type.DataObjectInfo v8;
java.util.List v3;
io.vertx.codegen.ModuleInfo v5;
java.lang.String v1;
io.vertx.codegen.type.ClassKind v9;
boolean v2, v6, v7;
v0 := @this: io.vertx.codegen.type.ApiTypeInfo;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 := @parameter2: java.util.List;
v4 := @parameter3: io.vertx.codegen.type.TypeInfo;
v5 := @parameter4: io.vertx.codegen.ModuleInfo;
v6 := @parameter5: boolean;
v7 := @parameter6: boolean;
v8 := @parameter7: io.vertx.codegen.type.DataObjectInfo;
v9 = <io.vertx.codegen.type.ClassKind: io.vertx.codegen.type.ClassKind API>;
specialinvoke v0.<io.vertx.codegen.type.ClassTypeInfo: void <init>(io.vertx.codegen.type.ClassKind,java.lang.String,io.vertx.codegen.ModuleInfo,boolean,java.util.List,io.vertx.codegen.type.DataObjectInfo)>(v9, v1, v5, v6, v3, v8);
v0.<io.vertx.codegen.type.ApiTypeInfo: boolean concrete> = v2;
v0.<io.vertx.codegen.type.ApiTypeInfo: boolean proxyGen> = v7;
v0.<io.vertx.codegen.type.ApiTypeInfo: io.vertx.codegen.type.TypeInfo handlerArg> = v4;
return;
}
public boolean isProxyGen()
{
boolean v1;
io.vertx.codegen.type.ApiTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ApiTypeInfo;
v1 = v0.<io.vertx.codegen.type.ApiTypeInfo: boolean proxyGen>;
return v1;
}
public boolean isConcrete()
{
boolean v1;
io.vertx.codegen.type.ApiTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ApiTypeInfo;
v1 = v0.<io.vertx.codegen.type.ApiTypeInfo: boolean concrete>;
return v1;
}
public boolean isAbstract()
{
boolean v1, v2;
io.vertx.codegen.type.ApiTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ApiTypeInfo;
v1 = v0.<io.vertx.codegen.type.ApiTypeInfo: boolean concrete>;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public io.vertx.codegen.type.TypeInfo getHandlerArg()
{
io.vertx.codegen.type.ApiTypeInfo v0;
io.vertx.codegen.type.TypeInfo v1;
v0 := @this: io.vertx.codegen.type.ApiTypeInfo;
v1 = v0.<io.vertx.codegen.type.ApiTypeInfo: io.vertx.codegen.type.TypeInfo handlerArg>;
return v1;
}
public boolean isHandler()
{
boolean v2;
io.vertx.codegen.type.ApiTypeInfo v0;
io.vertx.codegen.type.TypeInfo v1;
v0 := @this: io.vertx.codegen.type.ApiTypeInfo;
v1 = v0.<io.vertx.codegen.type.ApiTypeInfo: io.vertx.codegen.type.TypeInfo handlerArg>;
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
}