public class io.vertx.codegen.type.ArrayTypeInfo extends io.vertx.codegen.type.TypeInfo
{
private final io.vertx.codegen.type.TypeInfo componentType;
private final boolean nullable;
public void <init>(io.vertx.codegen.type.TypeInfo, boolean)
{
io.vertx.codegen.type.ArrayTypeInfo v0;
boolean v2;
io.vertx.codegen.type.TypeInfo v1;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.TypeInfo;
v2 := @parameter1: boolean;
specialinvoke v0.<io.vertx.codegen.type.TypeInfo: void <init>()>();
v0.<io.vertx.codegen.type.ArrayTypeInfo: io.vertx.codegen.type.TypeInfo componentType> = v1;
v0.<io.vertx.codegen.type.ArrayTypeInfo: boolean nullable> = v2;
return;
}
public boolean isNullable()
{
io.vertx.codegen.type.ArrayTypeInfo v0;
boolean v1;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 = v0.<io.vertx.codegen.type.ArrayTypeInfo: boolean nullable>;
return v1;
}
public void collectImports(java.util.Collection)
{
io.vertx.codegen.type.ArrayTypeInfo v0;
io.vertx.codegen.type.TypeInfo v2;
java.util.Collection v1;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 := @parameter0: java.util.Collection;
v2 = v0.<io.vertx.codegen.type.ArrayTypeInfo: io.vertx.codegen.type.TypeInfo componentType>;
virtualinvoke v2.<io.vertx.codegen.type.TypeInfo: void collectImports(java.util.Collection)>(v1);
return;
}
public java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)
{
io.vertx.codegen.type.TypeInfo v2;
io.vertx.codegen.type.ArrayTypeInfo v0;
java.lang.String v3, v4;
io.vertx.codegen.type.TypeNameTranslator v1;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 := @parameter0: io.vertx.codegen.type.TypeNameTranslator;
v2 = v0.<io.vertx.codegen.type.ArrayTypeInfo: io.vertx.codegen.type.TypeInfo componentType>;
v3 = virtualinvoke v2.<io.vertx.codegen.type.TypeInfo: java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)>(v1);
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[]");
return v4;
}
public java.lang.String getSimpleName()
{
io.vertx.codegen.type.TypeInfo v1;
io.vertx.codegen.type.ArrayTypeInfo v0;
java.lang.String v2, v3;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 = v0.<io.vertx.codegen.type.ArrayTypeInfo: io.vertx.codegen.type.TypeInfo componentType>;
v2 = virtualinvoke v1.<io.vertx.codegen.type.TypeInfo: java.lang.String getSimpleName()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[]");
return v3;
}
public boolean equals(java.lang.Object)
{
java.lang.Object v1;
io.vertx.codegen.type.ArrayTypeInfo v0;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 := @parameter0: java.lang.Object;
return 0;
}
public io.vertx.codegen.type.ClassKind getKind()
{
io.vertx.codegen.type.ArrayTypeInfo v0;
io.vertx.codegen.type.ClassKind v1;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 = <io.vertx.codegen.type.ClassKind: io.vertx.codegen.type.ClassKind OTHER>;
return v1;
}
java.lang.String format(boolean)
{
io.vertx.codegen.type.TypeInfo v2;
io.vertx.codegen.type.ArrayTypeInfo v0;
java.lang.String v3, v4;
boolean v1;
v0 := @this: io.vertx.codegen.type.ArrayTypeInfo;
v1 := @parameter0: boolean;
v2 = v0.<io.vertx.codegen.type.ArrayTypeInfo: io.vertx.codegen.type.TypeInfo componentType>;
v3 = virtualinvoke v2.<io.vertx.codegen.type.TypeInfo: java.lang.String format(boolean)>(v1);
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001[]");
return v4;
}
}