class io.vertx.codegen.type.TreeTypeInternal$1 extends java.lang.Object implements io.vertx.codegen.type.TypeUse$TypeInternalProvider
{
void <init>()
{
io.vertx.codegen.type.TreeTypeInternal$1 v0;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal$1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.vertx.codegen.type.TypeUse$TypeInternal forParam(javax.'annotation'.processing.ProcessingEnvironment, javax.lang.model.element.ExecutableElement, int)
{
com.sun.source.tree.MethodTree v5;
io.vertx.codegen.type.TreeTypeInternal v9;
javax.lang.model.element.ExecutableElement v2;
io.vertx.codegen.type.TreeTypeInternal$1 v0;
java.util.List v6;
int v3;
javax.'annotation'.processing.ProcessingEnvironment v1;
java.lang.Object v7;
com.sun.source.tree.Tree v8;
com.sun.source.util.Trees v4;
boolean v10;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal$1;
v1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;
v2 := @parameter1: javax.lang.model.element.ExecutableElement;
v3 := @parameter2: int;
v4 = staticinvoke <com.sun.source.util.Trees: com.sun.source.util.Trees instance(javax.'annotation'.processing.ProcessingEnvironment)>(v1);
if v4 != null goto label1;
return null;
label1:
v5 = virtualinvoke v4.<com.sun.source.util.Trees: com.sun.source.tree.MethodTree getTree(javax.lang.model.element.ExecutableElement)>(v2);
if v5 != null goto label2;
return null;
label2:
v6 = interfaceinvoke v5.<com.sun.source.tree.MethodTree: java.util.List getParameters()>();
v7 = interfaceinvoke v6.<java.util.List: java.lang.Object get(int)>(v3);
v8 = interfaceinvoke v7.<com.sun.source.tree.VariableTree: com.sun.source.tree.Tree getType()>();
v9 = new io.vertx.codegen.type.TreeTypeInternal;
v10 = staticinvoke <io.vertx.codegen.type.TreeTypeInternal: boolean isNullable(com.sun.source.tree.Tree)>(v8);
specialinvoke v9.<io.vertx.codegen.type.TreeTypeInternal: void <init>(com.sun.source.tree.Tree,boolean)>(v8, v10);
return v9;
}
public io.vertx.codegen.type.TypeUse$TypeInternal forReturn(javax.'annotation'.processing.ProcessingEnvironment, javax.lang.model.element.ExecutableElement)
{
com.sun.source.tree.MethodTree v4;
io.vertx.codegen.type.TreeTypeInternal v16;
java.lang.String v13, v14;
com.sun.source.util.Trees v3;
com.sun.tools.javac.tree.JCTree$JCModifiers v7;
boolean v10, v15, v6;
java.util.Iterator v9;
javax.lang.model.element.ExecutableElement v2;
io.vertx.codegen.type.TreeTypeInternal$1 v0;
com.sun.tools.javac.tree.JCTree v5;
com.sun.tools.javac.util.List v8;
javax.'annotation'.processing.ProcessingEnvironment v1;
java.lang.Object v11;
com.sun.tools.javac.code.Type v12;
v0 := @this: io.vertx.codegen.type.TreeTypeInternal$1;
v1 := @parameter0: javax.'annotation'.processing.ProcessingEnvironment;
v2 := @parameter1: javax.lang.model.element.ExecutableElement;
v3 = staticinvoke <com.sun.source.util.Trees: com.sun.source.util.Trees instance(javax.'annotation'.processing.ProcessingEnvironment)>(v1);
if v3 != null goto label1;
return null;
label1:
v4 = virtualinvoke v3.<com.sun.source.util.Trees: com.sun.source.tree.MethodTree getTree(javax.lang.model.element.ExecutableElement)>(v2);
if v4 != null goto label2;
return null;
label2:
v5 = virtualinvoke v4.<com.sun.tools.javac.tree.JCTree$JCMethodDecl: com.sun.tools.javac.tree.JCTree getReturnType()>();
v6 = staticinvoke <io.vertx.codegen.type.TreeTypeInternal: boolean isNullable(com.sun.source.tree.Tree)>(v5);
if v6 != 0 goto label4;
v7 = v4.<com.sun.tools.javac.tree.JCTree$JCMethodDecl: com.sun.tools.javac.tree.JCTree$JCModifiers mods>;
v8 = v7.<com.sun.tools.javac.tree.JCTree$JCModifiers: com.sun.tools.javac.util.List annotations>;
v9 = virtualinvoke v8.<com.sun.tools.javac.util.List: java.util.Iterator iterator()>();
label3:
v10 = interfaceinvoke v9.<java.util.Iterator: boolean hasNext()>();
if v10 == 0 goto label4;
v11 = interfaceinvoke v9.<java.util.Iterator: java.lang.Object next()>();
v12 = v11.<com.sun.tools.javac.tree.JCTree$JCAnnotation: com.sun.tools.javac.code.Type type>;
v13 = virtualinvoke v12.<com.sun.tools.javac.code.Type: java.lang.String toString()>();
v14 = <io.vertx.codegen.type.TypeUse: java.lang.String NULLABLE>;
v15 = virtualinvoke v13.<java.lang.String: boolean equals(java.lang.Object)>(v14);
if v15 == 0 goto label3;
v6 = 1;
label4:
v16 = new io.vertx.codegen.type.TreeTypeInternal;
specialinvoke v16.<io.vertx.codegen.type.TreeTypeInternal: void <init>(com.sun.source.tree.Tree,boolean)>(v5, v6);
return v16;
}
}