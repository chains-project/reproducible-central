public abstract class io.vertx.codegen.type.TypeInfo extends java.lang.Object
{
public void <init>()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public abstract boolean equals(java.lang.Object);
public int hashCode()
{
int v2;
java.lang.String v1;
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: java.lang.String toString()>();
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
return v2;
}
public void collectImports(java.util.Collection)
{
io.vertx.codegen.type.TypeInfo v0;
java.util.Collection v1;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 := @parameter0: java.util.Collection;
return;
}
public io.vertx.codegen.type.TypeInfo getErased()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return v0;
}
public io.vertx.codegen.type.ClassTypeInfo getRaw()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return null;
}
public abstract io.vertx.codegen.type.ClassKind getKind();
public java.lang.String getName()
{
java.lang.String v1;
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: java.lang.String format(boolean)>(1);
return v1;
}
public boolean isNullable()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return 0;
}
public java.lang.String translateName(java.lang.String)
{
io.vertx.codegen.type.TypeInfo v0;
java.lang.String v1, v3;
io.vertx.codegen.type.TypeNameTranslator v2;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.codegen.type.TypeNameTranslator: io.vertx.codegen.type.TypeNameTranslator hierarchical(java.lang.String)>(v1);
v3 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)>(v2);
return v3;
}
public java.lang.String translateName(io.vertx.codegen.type.TypeNameTranslator)
{
java.lang.String v2;
io.vertx.codegen.type.TypeNameTranslator v1;
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 := @parameter0: io.vertx.codegen.type.TypeNameTranslator;
v2 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
return v2;
}
public java.lang.String getSimpleName()
{
java.lang.String v1;
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: java.lang.String format(boolean)>(0);
return v1;
}
public java.lang.String toString()
{
java.lang.String v1;
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: java.lang.String getName()>();
return v1;
}
public boolean isParameterized()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return 0;
}
public boolean isVariable()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return 0;
}
public boolean isDataObjectHolder()
{
io.vertx.codegen.type.DataObjectInfo v1;
boolean v2;
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
v1 = virtualinvoke v0.<io.vertx.codegen.type.TypeInfo: io.vertx.codegen.type.DataObjectInfo getDataObject()>();
if v1 == null goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public io.vertx.codegen.type.DataObjectInfo getDataObject()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return null;
}
public boolean isVoid()
{
io.vertx.codegen.type.TypeInfo v0;
v0 := @this: io.vertx.codegen.type.TypeInfo;
return 0;
}
abstract java.lang.String format(boolean);
}