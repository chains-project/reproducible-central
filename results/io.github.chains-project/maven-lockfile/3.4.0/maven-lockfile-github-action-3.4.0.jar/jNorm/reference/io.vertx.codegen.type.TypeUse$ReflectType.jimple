class io.vertx.codegen.type.TypeUse$ReflectType extends java.lang.Object implements io.vertx.codegen.type.TypeUse$TypeInternal
{
private final java.lang.reflect.AnnotatedType annotatedType;
private final boolean nullable;
private void <init>(java.lang.reflect.AnnotatedType)
{
java.lang.reflect.AnnotatedType v1;
io.vertx.codegen.type.TypeUse$ReflectType v0;
boolean v2;
v0 := @this: io.vertx.codegen.type.TypeUse$ReflectType;
v1 := @parameter0: java.lang.reflect.AnnotatedType;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.codegen.type.TypeUse$ReflectType: java.lang.reflect.AnnotatedType annotatedType> = v1;
v2 = staticinvoke <io.vertx.codegen.type.TypeUse$ReflectType: boolean isNullable(java.lang.reflect.AnnotatedType)>(v1);
v0.<io.vertx.codegen.type.TypeUse$ReflectType: boolean nullable> = v2;
return;
}
public java.lang.String rawName()
{
io.vertx.codegen.type.TypeUse$ReflectType v0;
java.lang.reflect.Type v4, v5;
java.lang.reflect.AnnotatedType v1, v3;
java.lang.String v6;
boolean v2;
v0 := @this: io.vertx.codegen.type.TypeUse$ReflectType;
v1 = v0.<io.vertx.codegen.type.TypeUse$ReflectType: java.lang.reflect.AnnotatedType annotatedType>;
v2 = v1 instanceof java.lang.reflect.AnnotatedParameterizedType;
if v2 == 0 goto label1;
v3 = v0.<io.vertx.codegen.type.TypeUse$ReflectType: java.lang.reflect.AnnotatedType annotatedType>;
v4 = interfaceinvoke v3.<java.lang.reflect.AnnotatedType: java.lang.reflect.Type getType()>();
v5 = interfaceinvoke v4.<java.lang.reflect.ParameterizedType: java.lang.reflect.Type getRawType()>();
v6 = interfaceinvoke v5.<java.lang.reflect.Type: java.lang.String getTypeName()>();
return v6;
label1:
return null;
}
public boolean isNullable()
{
io.vertx.codegen.type.TypeUse$ReflectType v0;
boolean v1;
v0 := @this: io.vertx.codegen.type.TypeUse$ReflectType;
v1 = v0.<io.vertx.codegen.type.TypeUse$ReflectType: boolean nullable>;
return v1;
}
public io.vertx.codegen.type.TypeUse$TypeInternal getArgAt(int)
{
io.vertx.codegen.type.TypeUse$ReflectType v0, v3;
int v1;
java.lang.reflect.AnnotatedType v2, v5;
java.lang.reflect.AnnotatedType[] v4;
v0 := @this: io.vertx.codegen.type.TypeUse$ReflectType;
v1 := @parameter0: int;
v2 = v0.<io.vertx.codegen.type.TypeUse$ReflectType: java.lang.reflect.AnnotatedType annotatedType>;
v3 = new io.vertx.codegen.type.TypeUse$ReflectType;
v4 = interfaceinvoke v2.<java.lang.reflect.AnnotatedParameterizedType: java.lang.reflect.AnnotatedType[] getAnnotatedActualTypeArguments()>();
v5 = v4[v1];
specialinvoke v3.<io.vertx.codegen.type.TypeUse$ReflectType: void <init>(java.lang.reflect.AnnotatedType)>(v5);
return v3;
}
private static boolean isNullable(java.lang.reflect.AnnotatedType)
{
java.lang.reflect.AnnotatedType v0;
java.lang.'annotation'.Annotation[] v1;
int v2, v3;
java.lang.'annotation'.Annotation v4;
java.lang.Class v5;
java.lang.String v6, v7;
boolean v8;
v0 := @parameter0: java.lang.reflect.AnnotatedType;
v1 = interfaceinvoke v0.<java.lang.reflect.AnnotatedType: java.lang.'annotation'.Annotation[] getAnnotations()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = interfaceinvoke v4.<java.lang.'annotation'.Annotation: java.lang.Class annotationType()>();
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
v7 = <io.vertx.codegen.type.TypeUse: java.lang.String NULLABLE>;
v8 = virtualinvoke v6.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label2;
return 1;
label2:
v3 = v3 + 1;
goto label1;
label3:
return 0;
}
}