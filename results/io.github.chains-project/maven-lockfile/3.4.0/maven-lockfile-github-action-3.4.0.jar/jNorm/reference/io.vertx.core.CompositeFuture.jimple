public interface  io.vertx.core.CompositeFuture extends java.lang.Object implements io.vertx.core.Future
{
public static io.vertx.core.CompositeFuture all(io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v3;
io.vertx.core.Future[] v2;
io.vertx.core.Future v0, v1;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 = newarray (io.vertx.core.Future)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture all(io.vertx.core.Future[])>(v2);
return v3;
}
public static io.vertx.core.CompositeFuture all(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v4;
io.vertx.core.Future[] v3;
io.vertx.core.Future v0, v1, v2;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 = newarray (io.vertx.core.Future)[3];
v3[0] = v0;
v3[1] = v1;
v3[2] = v2;
v4 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture all(io.vertx.core.Future[])>(v3);
return v4;
}
public static io.vertx.core.CompositeFuture all(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v5;
io.vertx.core.Future[] v4;
io.vertx.core.Future v0, v1, v2, v3;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 = newarray (io.vertx.core.Future)[4];
v4[0] = v0;
v4[1] = v1;
v4[2] = v2;
v4[3] = v3;
v5 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture all(io.vertx.core.Future[])>(v4);
return v5;
}
public static io.vertx.core.CompositeFuture all(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v6;
io.vertx.core.Future[] v5;
io.vertx.core.Future v0, v1, v2, v3, v4;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 := @parameter4: io.vertx.core.Future;
v5 = newarray (io.vertx.core.Future)[5];
v5[0] = v0;
v5[1] = v1;
v5[2] = v2;
v5[3] = v3;
v5[4] = v4;
v6 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture all(io.vertx.core.Future[])>(v5);
return v6;
}
public static io.vertx.core.CompositeFuture all(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.Future v0, v1, v2, v3, v4, v5;
io.vertx.core.CompositeFuture v7;
io.vertx.core.Future[] v6;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 := @parameter4: io.vertx.core.Future;
v5 := @parameter5: io.vertx.core.Future;
v6 = newarray (io.vertx.core.Future)[6];
v6[0] = v0;
v6[1] = v1;
v6[2] = v2;
v6[3] = v3;
v6[4] = v4;
v6[5] = v5;
v7 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture all(io.vertx.core.Future[])>(v6);
return v7;
}
public static io.vertx.core.CompositeFuture all(java.util.List)
{
io.vertx.core.CompositeFuture v3;
java.util.List v0;
java.lang.Object[] v2;
io.vertx.core.Future[] v1;
v0 := @parameter0: java.util.List;
v1 = newarray (io.vertx.core.Future)[0];
v2 = interfaceinvoke v0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v1);
v3 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture all(io.vertx.core.Future[])>(v2);
return v3;
}
public static io.vertx.core.CompositeFuture any(io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v3;
io.vertx.core.Future[] v2;
io.vertx.core.Future v0, v1;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 = newarray (io.vertx.core.Future)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture any(io.vertx.core.Future[])>(v2);
return v3;
}
public static io.vertx.core.CompositeFuture any(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v4;
io.vertx.core.Future[] v3;
io.vertx.core.Future v0, v1, v2;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 = newarray (io.vertx.core.Future)[3];
v3[0] = v0;
v3[1] = v1;
v3[2] = v2;
v4 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture any(io.vertx.core.Future[])>(v3);
return v4;
}
public static io.vertx.core.CompositeFuture any(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v5;
io.vertx.core.Future[] v4;
io.vertx.core.Future v0, v1, v2, v3;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 = newarray (io.vertx.core.Future)[4];
v4[0] = v0;
v4[1] = v1;
v4[2] = v2;
v4[3] = v3;
v5 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture any(io.vertx.core.Future[])>(v4);
return v5;
}
public static io.vertx.core.CompositeFuture any(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v6;
io.vertx.core.Future[] v5;
io.vertx.core.Future v0, v1, v2, v3, v4;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 := @parameter4: io.vertx.core.Future;
v5 = newarray (io.vertx.core.Future)[5];
v5[0] = v0;
v5[1] = v1;
v5[2] = v2;
v5[3] = v3;
v5[4] = v4;
v6 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture any(io.vertx.core.Future[])>(v5);
return v6;
}
public static io.vertx.core.CompositeFuture any(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.Future v0, v1, v2, v3, v4, v5;
io.vertx.core.CompositeFuture v7;
io.vertx.core.Future[] v6;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 := @parameter4: io.vertx.core.Future;
v5 := @parameter5: io.vertx.core.Future;
v6 = newarray (io.vertx.core.Future)[6];
v6[0] = v0;
v6[1] = v1;
v6[2] = v2;
v6[3] = v3;
v6[4] = v4;
v6[5] = v5;
v7 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture any(io.vertx.core.Future[])>(v6);
return v7;
}
public static io.vertx.core.CompositeFuture any(java.util.List)
{
io.vertx.core.CompositeFuture v3;
java.util.List v0;
java.lang.Object[] v2;
io.vertx.core.Future[] v1;
v0 := @parameter0: java.util.List;
v1 = newarray (io.vertx.core.Future)[0];
v2 = interfaceinvoke v0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v1);
v3 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture any(io.vertx.core.Future[])>(v2);
return v3;
}
public static io.vertx.core.CompositeFuture join(io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v3;
io.vertx.core.Future[] v2;
io.vertx.core.Future v0, v1;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 = newarray (io.vertx.core.Future)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture join(io.vertx.core.Future[])>(v2);
return v3;
}
public static io.vertx.core.CompositeFuture join(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v4;
io.vertx.core.Future[] v3;
io.vertx.core.Future v0, v1, v2;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 = newarray (io.vertx.core.Future)[3];
v3[0] = v0;
v3[1] = v1;
v3[2] = v2;
v4 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture join(io.vertx.core.Future[])>(v3);
return v4;
}
public static io.vertx.core.CompositeFuture join(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v5;
io.vertx.core.Future[] v4;
io.vertx.core.Future v0, v1, v2, v3;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 = newarray (io.vertx.core.Future)[4];
v4[0] = v0;
v4[1] = v1;
v4[2] = v2;
v4[3] = v3;
v5 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture join(io.vertx.core.Future[])>(v4);
return v5;
}
public static io.vertx.core.CompositeFuture join(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.CompositeFuture v6;
io.vertx.core.Future[] v5;
io.vertx.core.Future v0, v1, v2, v3, v4;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 := @parameter4: io.vertx.core.Future;
v5 = newarray (io.vertx.core.Future)[5];
v5[0] = v0;
v5[1] = v1;
v5[2] = v2;
v5[3] = v3;
v5[4] = v4;
v6 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture join(io.vertx.core.Future[])>(v5);
return v6;
}
public static io.vertx.core.CompositeFuture join(io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future, io.vertx.core.Future)
{
io.vertx.core.Future v0, v1, v2, v3, v4, v5;
io.vertx.core.CompositeFuture v7;
io.vertx.core.Future[] v6;
v0 := @parameter0: io.vertx.core.Future;
v1 := @parameter1: io.vertx.core.Future;
v2 := @parameter2: io.vertx.core.Future;
v3 := @parameter3: io.vertx.core.Future;
v4 := @parameter4: io.vertx.core.Future;
v5 := @parameter5: io.vertx.core.Future;
v6 = newarray (io.vertx.core.Future)[6];
v6[0] = v0;
v6[1] = v1;
v6[2] = v2;
v6[3] = v3;
v6[4] = v4;
v6[5] = v5;
v7 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture join(io.vertx.core.Future[])>(v6);
return v7;
}
public static io.vertx.core.CompositeFuture join(java.util.List)
{
io.vertx.core.CompositeFuture v3;
java.util.List v0;
java.lang.Object[] v2;
io.vertx.core.Future[] v1;
v0 := @parameter0: java.util.List;
v1 = newarray (io.vertx.core.Future)[0];
v2 = interfaceinvoke v0.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v1);
v3 = staticinvoke <io.vertx.core.impl.future.CompositeFutureImpl: io.vertx.core.CompositeFuture join(io.vertx.core.Future[])>(v2);
return v3;
}
public abstract io.vertx.core.CompositeFuture onComplete(io.vertx.core.Handler);
public io.vertx.core.CompositeFuture onSuccess(io.vertx.core.Handler)
{
io.vertx.core.CompositeFuture v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.CompositeFuture;
v1 := @parameter0: io.vertx.core.Handler;
specialinvoke v0.<io.vertx.core.Future: io.vertx.core.Future onSuccess(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.core.CompositeFuture onFailure(io.vertx.core.Handler)
{
io.vertx.core.CompositeFuture v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.CompositeFuture;
v1 := @parameter0: io.vertx.core.Handler;
specialinvoke v0.<io.vertx.core.Future: io.vertx.core.Future onFailure(io.vertx.core.Handler)>(v1);
return v0;
}
public abstract java.lang.Throwable cause(int);
public abstract boolean succeeded(int);
public abstract boolean failed(int);
public abstract boolean isComplete(int);
public abstract java.lang.Object resultAt(int);
public abstract int size();
public java.util.List list()
{
io.vertx.core.CompositeFuture v0;
int v1, v3;
java.lang.Object v4;
java.util.ArrayList v2;
v0 := @this: io.vertx.core.CompositeFuture;
v1 = interfaceinvoke v0.<io.vertx.core.CompositeFuture: int size()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(v1);
v3 = 0;
label1:
if v3 >= v1 goto label2;
v4 = interfaceinvoke v0.<io.vertx.core.CompositeFuture: java.lang.Object resultAt(int)>(v3);
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v2;
}
public java.util.List causes()
{
java.lang.Throwable v4;
io.vertx.core.CompositeFuture v0;
int v1, v3;
java.util.ArrayList v2;
v0 := @this: io.vertx.core.CompositeFuture;
v1 = interfaceinvoke v0.<io.vertx.core.CompositeFuture: int size()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>(int)>(v1);
v3 = 0;
label1:
if v3 >= v1 goto label2;
v4 = interfaceinvoke v0.<io.vertx.core.CompositeFuture: java.lang.Throwable cause(int)>(v3);
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v4);
v3 = v3 + 1;
goto label1;
label2:
return v2;
}
}