public class io.vertx.core.Launcher extends io.vertx.core.impl.launcher.VertxCommandLauncher implements io.vertx.core.impl.launcher.VertxLifecycleHooks
{
public void <init>()
{
io.vertx.core.Launcher v0;
v0 := @this: io.vertx.core.Launcher;
specialinvoke v0.<io.vertx.core.impl.launcher.VertxCommandLauncher: void <init>()>();
return;
}
public static void main(java.lang.String[])
{
io.vertx.core.Launcher v1;
java.lang.String[] v0;
v0 := @parameter0: java.lang.String[];
v1 = new io.vertx.core.Launcher;
specialinvoke v1.<io.vertx.core.Launcher: void <init>()>();
virtualinvoke v1.<io.vertx.core.Launcher: void dispatch(java.lang.String[])>(v0);
return;
}
public static transient void executeCommand(java.lang.String, java.lang.String[])
{
io.vertx.core.Launcher v2;
java.lang.String[] v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String[];
v2 = new io.vertx.core.Launcher;
specialinvoke v2.<io.vertx.core.Launcher: void <init>()>();
virtualinvoke v2.<io.vertx.core.Launcher: void execute(java.lang.String,java.lang.String[])>(v0, v1);
return;
}
public void afterConfigParsed(io.vertx.core.json.JsonObject)
{
io.vertx.core.Launcher v0;
io.vertx.core.json.JsonObject v1;
v0 := @this: io.vertx.core.Launcher;
v1 := @parameter0: io.vertx.core.json.JsonObject;
return;
}
public void beforeStartingVertx(io.vertx.core.VertxOptions)
{
io.vertx.core.VertxOptions v1;
io.vertx.core.Launcher v0;
v0 := @this: io.vertx.core.Launcher;
v1 := @parameter0: io.vertx.core.VertxOptions;
return;
}
public void afterStartingVertx(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v1;
io.vertx.core.Launcher v0;
v0 := @this: io.vertx.core.Launcher;
v1 := @parameter0: io.vertx.core.Vertx;
return;
}
public void beforeDeployingVerticle(io.vertx.core.DeploymentOptions)
{
io.vertx.core.Launcher v0;
io.vertx.core.DeploymentOptions v1;
v0 := @this: io.vertx.core.Launcher;
v1 := @parameter0: io.vertx.core.DeploymentOptions;
return;
}
public void beforeStoppingVertx(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v1;
io.vertx.core.Launcher v0;
v0 := @this: io.vertx.core.Launcher;
v1 := @parameter0: io.vertx.core.Vertx;
return;
}
public void afterStoppingVertx()
{
io.vertx.core.Launcher v0;
v0 := @this: io.vertx.core.Launcher;
return;
}
public void handleDeployFailed(io.vertx.core.Vertx, java.lang.String, io.vertx.core.DeploymentOptions, java.lang.Throwable)
{
java.lang.Throwable v4;
io.vertx.core.Launcher v0;
io.vertx.core.DeploymentOptions v3;
io.vertx.core.Vertx v1;
java.lang.String v2;
v0 := @this: io.vertx.core.Launcher;
v1 := @parameter0: io.vertx.core.Vertx;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.core.DeploymentOptions;
v4 := @parameter3: java.lang.Throwable;
interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.Future close()>();
return;
}
}