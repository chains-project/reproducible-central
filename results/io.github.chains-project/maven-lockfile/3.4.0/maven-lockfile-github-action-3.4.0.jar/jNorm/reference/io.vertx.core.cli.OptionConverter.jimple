public class io.vertx.core.cli.OptionConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.cli.OptionConverter v0;
v0 := @this: io.vertx.core.cli.OptionConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.cli.Option)
{
byte v6;
java.util.LinkedHashSet v26;
io.vertx.core.cli.Option v1;
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v22, v25, v3, v30, v33, v36, v38, v40, v42, v44, v46, v48, v51, v53, v55, v57, v59, v62, v64, v8, v9;
java.lang.Iterable v0;
int v7;
java.util.Iterator v2;
java.util.function.Consumer v28;
java.lang.Object v21, v23, v24, v27, v29, v31, v32, v34, v35, v37, v39, v4, v41, v43, v45, v47, v49, v5, v50, v52, v54, v56, v58, v60, v61, v63;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.cli.Option;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label28;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -2074601689: goto label09;
case -2028219097: goto label13;
case -1724546052: goto label05;
case -1217487446: goto label08;
case -745189887: goto label02;
case -659125328: goto label04;
case -393139297: goto label12;
case -191836244: goto label10;
case 3145580: goto label06;
case 3198785: goto label07;
case 3373707: goto label11;
case 751720178: goto label03;
case 1875949435: goto label14;
default: goto label15;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("argName");
if v8 == 0 goto label15;
v6 = 0;
goto label15;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("choices");
if v9 == 0 goto label15;
v6 = 1;
goto label15;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("defaultValue");
if v10 == 0 goto label15;
v6 = 2;
goto label15;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("description");
if v11 == 0 goto label15;
v6 = 3;
goto label15;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("flag");
if v12 == 0 goto label15;
v6 = 4;
goto label15;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("help");
if v13 == 0 goto label15;
v6 = 5;
goto label15;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("hidden");
if v14 == 0 goto label15;
v6 = 6;
goto label15;
label09:
v15 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("longName");
if v15 == 0 goto label15;
v6 = 7;
goto label15;
label10:
v16 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("multiValued");
if v16 == 0 goto label15;
v6 = 8;
goto label15;
label11:
v17 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("name");
if v17 == 0 goto label15;
v6 = 9;
goto label15;
label12:
v18 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("required");
if v18 == 0 goto label15;
v6 = 10;
goto label15;
label13:
v19 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("shortName");
if v19 == 0 goto label15;
v6 = 11;
goto label15;
label14:
v20 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("singleValued");
if v20 == 0 goto label15;
v6 = 12;
label15:
tableswitch(v6)
{
case 0: goto label16;
case 1: goto label17;
case 2: goto label18;
case 3: goto label19;
case 4: goto label20;
case 5: goto label21;
case 6: goto label22;
case 7: goto label23;
case 8: goto label24;
case 9: goto label01;
case 10: goto label25;
case 11: goto label26;
case 12: goto label27;
default: goto label01;
};
label16:
v21 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v22 = v21 instanceof java.lang.String;
if v22 == 0 goto label01;
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setArgName(java.lang.String)>(v23);
goto label01;
label17:
v24 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v25 = v24 instanceof io.vertx.core.json.JsonArray;
if v25 == 0 goto label01;
v26 = new java.util.LinkedHashSet;
specialinvoke v26.<java.util.LinkedHashSet: void <init>()>();
v27 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v28 = staticinvoke <io.vertx.core.cli.OptionConverter$lambda_fromJson_0__1212: java.util.function.Consumer bootstrap$(java.util.LinkedHashSet)>(v26);
interfaceinvoke v27.<java.lang.Iterable: void forEach(java.util.function.Consumer)>(v28);
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setChoices(java.util.Set)>(v26);
goto label01;
label18:
v29 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v30 = v29 instanceof java.lang.String;
if v30 == 0 goto label01;
v31 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setDefaultValue(java.lang.String)>(v31);
goto label01;
label19:
v32 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v33 = v32 instanceof java.lang.String;
if v33 == 0 goto label01;
v34 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setDescription(java.lang.String)>(v34);
goto label01;
label20:
v35 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v36 = v35 instanceof java.lang.Boolean;
if v36 == 0 goto label01;
v37 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v38 = virtualinvoke v37.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setFlag(boolean)>(v38);
goto label01;
label21:
v39 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v40 = v39 instanceof java.lang.Boolean;
if v40 == 0 goto label01;
v41 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v42 = virtualinvoke v41.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setHelp(boolean)>(v42);
goto label01;
label22:
v43 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v44 = v43 instanceof java.lang.Boolean;
if v44 == 0 goto label01;
v45 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v46 = virtualinvoke v45.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setHidden(boolean)>(v46);
goto label01;
label23:
v47 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v48 = v47 instanceof java.lang.String;
if v48 == 0 goto label01;
v49 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setLongName(java.lang.String)>(v49);
goto label01;
label24:
v50 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v51 = v50 instanceof java.lang.Boolean;
if v51 == 0 goto label01;
v52 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v53 = virtualinvoke v52.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setMultiValued(boolean)>(v53);
goto label01;
label25:
v54 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v55 = v54 instanceof java.lang.Boolean;
if v55 == 0 goto label01;
v56 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v57 = virtualinvoke v56.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setRequired(boolean)>(v57);
goto label01;
label26:
v58 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v59 = v58 instanceof java.lang.String;
if v59 == 0 goto label01;
v60 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setShortName(java.lang.String)>(v60);
goto label01;
label27:
v61 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v62 = v61 instanceof java.lang.Boolean;
if v62 == 0 goto label01;
v63 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v64 = virtualinvoke v63.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.cli.Option: io.vertx.core.cli.Option setSingleValued(boolean)>(v64);
goto label01;
label28:
return;
}
static void toJson(io.vertx.core.cli.Option, io.vertx.core.json.JsonObject)
{
io.vertx.core.cli.Option v0;
io.vertx.core.json.JsonObject v1;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.cli.Option;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.cli.OptionConverter: void toJson(io.vertx.core.cli.Option,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.cli.Option, java.util.Map)
{
io.vertx.core.cli.Option v0;
java.util.Map v1;
java.lang.Boolean v13, v15, v17, v21, v25, v29;
java.lang.String v10, v11, v18, v19, v2, v22, v23, v26, v27, v3, v8, v9;
boolean v12, v14, v16, v20, v24, v28;
java.util.Set v4, v6;
java.util.function.Consumer v7;
io.vertx.core.json.JsonArray v5;
v0 := @parameter0: io.vertx.core.cli.Option;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getArgName()>();
if v2 == null goto label1;
v3 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getArgName()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("argName", v3);
label1:
v4 = virtualinvoke v0.<io.vertx.core.cli.Option: java.util.Set getChoices()>();
if v4 == null goto label2;
v5 = new io.vertx.core.json.JsonArray;
specialinvoke v5.<io.vertx.core.json.JsonArray: void <init>()>();
v6 = virtualinvoke v0.<io.vertx.core.cli.Option: java.util.Set getChoices()>();
v7 = staticinvoke <io.vertx.core.cli.OptionConverter$lambda_toJson_1__1213: java.util.function.Consumer bootstrap$(io.vertx.core.json.JsonArray)>(v5);
interfaceinvoke v6.<java.util.Set: void forEach(java.util.function.Consumer)>(v7);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("choices", v5);
label2:
v8 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getDefaultValue()>();
if v8 == null goto label3;
v9 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getDefaultValue()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("defaultValue", v9);
label3:
v10 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getDescription()>();
if v10 == null goto label4;
v11 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getDescription()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("description", v11);
label4:
v12 = virtualinvoke v0.<io.vertx.core.cli.Option: boolean isFlag()>();
v13 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v12);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("flag", v13);
v14 = virtualinvoke v0.<io.vertx.core.cli.Option: boolean isHelp()>();
v15 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v14);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("help", v15);
v16 = virtualinvoke v0.<io.vertx.core.cli.Option: boolean isHidden()>();
v17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v16);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("hidden", v17);
v18 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getLongName()>();
if v18 == null goto label5;
v19 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getLongName()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("longName", v19);
label5:
v20 = virtualinvoke v0.<io.vertx.core.cli.Option: boolean isMultiValued()>();
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v20);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("multiValued", v21);
v22 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getName()>();
if v22 == null goto label6;
v23 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getName()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("name", v23);
label6:
v24 = virtualinvoke v0.<io.vertx.core.cli.Option: boolean isRequired()>();
v25 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v24);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("required", v25);
v26 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getShortName()>();
if v26 == null goto label7;
v27 = virtualinvoke v0.<io.vertx.core.cli.Option: java.lang.String getShortName()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("shortName", v27);
label7:
v28 = virtualinvoke v0.<io.vertx.core.cli.Option: boolean isSingleValued()>();
v29 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v28);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("singleValued", v29);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.cli.OptionConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.cli.OptionConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}