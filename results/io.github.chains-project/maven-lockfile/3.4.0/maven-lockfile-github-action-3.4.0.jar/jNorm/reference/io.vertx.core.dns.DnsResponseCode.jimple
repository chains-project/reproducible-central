public final enum class io.vertx.core.dns.DnsResponseCode extends java.lang.Enum
{
public static final enum io.vertx.core.dns.DnsResponseCode NOERROR;
public static final enum io.vertx.core.dns.DnsResponseCode FORMERROR;
public static final enum io.vertx.core.dns.DnsResponseCode SERVFAIL;
public static final enum io.vertx.core.dns.DnsResponseCode NXDOMAIN;
public static final enum io.vertx.core.dns.DnsResponseCode NOTIMPL;
public static final enum io.vertx.core.dns.DnsResponseCode REFUSED;
public static final enum io.vertx.core.dns.DnsResponseCode YXDOMAIN;
public static final enum io.vertx.core.dns.DnsResponseCode YXRRSET;
public static final enum io.vertx.core.dns.DnsResponseCode NXRRSET;
public static final enum io.vertx.core.dns.DnsResponseCode NOTAUTH;
public static final enum io.vertx.core.dns.DnsResponseCode NOTZONE;
public static final enum io.vertx.core.dns.DnsResponseCode BADVERS;
public static final enum io.vertx.core.dns.DnsResponseCode BADSIG;
public static final enum io.vertx.core.dns.DnsResponseCode BADKEY;
public static final enum io.vertx.core.dns.DnsResponseCode BADTIME;
private final int errorCode;
private final java.lang.String message;
private static final io.vertx.core.dns.DnsResponseCode[] $VALUES;
public static io.vertx.core.dns.DnsResponseCode[] values()
{
io.vertx.core.dns.DnsResponseCode[] v0;
java.lang.Object v1;
v0 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static io.vertx.core.dns.DnsResponseCode valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lio/vertx/core/dns/DnsResponseCode;", v0);
return v1;
}
public static io.vertx.core.dns.DnsResponseCode valueOf(int)
{
int v0, v2, v3, v5;
io.vertx.core.dns.DnsResponseCode v4;
io.vertx.core.dns.DnsResponseCode[] v1;
v0 := @parameter0: int;
v1 = staticinvoke <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode[] values()>();
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = v4.<io.vertx.core.dns.DnsResponseCode: int errorCode>;
if v5 != v0 goto label2;
return v4;
label2:
v3 = v3 + 1;
goto label1;
label3:
return null;
}
private void <init>(java.lang.String, int, int, java.lang.String)
{
int v2, v3;
io.vertx.core.dns.DnsResponseCode v0;
java.lang.String v1, v4;
v0 := @this: io.vertx.core.dns.DnsResponseCode;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 := @parameter3: java.lang.String;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
v0.<io.vertx.core.dns.DnsResponseCode: int errorCode> = v3;
v0.<io.vertx.core.dns.DnsResponseCode: java.lang.String message> = v4;
return;
}
public int code()
{
int v1;
io.vertx.core.dns.DnsResponseCode v0;
v0 := @this: io.vertx.core.dns.DnsResponseCode;
v1 = v0.<io.vertx.core.dns.DnsResponseCode: int errorCode>;
return v1;
}
public java.lang.String toString()
{
int v2;
io.vertx.core.dns.DnsResponseCode v0;
java.lang.String v1, v3, v4;
v0 := @this: io.vertx.core.dns.DnsResponseCode;
v1 = virtualinvoke v0.<io.vertx.core.dns.DnsResponseCode: java.lang.String name()>();
v2 = v0.<io.vertx.core.dns.DnsResponseCode: int errorCode>;
v3 = v0.<io.vertx.core.dns.DnsResponseCode: java.lang.String message>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,int,java.lang.String)>(v1, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001: type \u0001, \u0001");
return v4;
}
private static io.vertx.core.dns.DnsResponseCode[] $values()
{
io.vertx.core.dns.DnsResponseCode v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7, v8, v9;
io.vertx.core.dns.DnsResponseCode[] v0;
v0 = newarray (io.vertx.core.dns.DnsResponseCode)[15];
v1 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOERROR>;
v0[0] = v1;
v2 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode FORMERROR>;
v0[1] = v2;
v3 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode SERVFAIL>;
v0[2] = v3;
v4 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NXDOMAIN>;
v0[3] = v4;
v5 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOTIMPL>;
v0[4] = v5;
v6 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode REFUSED>;
v0[5] = v6;
v7 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode YXDOMAIN>;
v0[6] = v7;
v8 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode YXRRSET>;
v0[7] = v8;
v9 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NXRRSET>;
v0[8] = v9;
v10 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOTAUTH>;
v0[9] = v10;
v11 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOTZONE>;
v0[10] = v11;
v12 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADVERS>;
v0[11] = v12;
v13 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADSIG>;
v0[12] = v13;
v14 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADKEY>;
v0[13] = v14;
v15 = <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADTIME>;
v0[14] = v15;
return v0;
}
static void <clinit>()
{
io.vertx.core.dns.DnsResponseCode v0, v1, v10, v11, v12, v13, v14, v2, v3, v4, v5, v6, v7, v8, v9;
io.vertx.core.dns.DnsResponseCode[] v15;
v0 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v0.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("NOERROR", 0, 0, "no error");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOERROR> = v0;
v1 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v1.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("FORMERROR", 1, 1, "format error");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode FORMERROR> = v1;
v2 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v2.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("SERVFAIL", 2, 2, "server failure");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode SERVFAIL> = v2;
v3 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v3.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("NXDOMAIN", 3, 3, "name error");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NXDOMAIN> = v3;
v4 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v4.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("NOTIMPL", 4, 4, "not implemented");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOTIMPL> = v4;
v5 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v5.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("REFUSED", 5, 5, "operation refused");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode REFUSED> = v5;
v6 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v6.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("YXDOMAIN", 6, 6, "domain name should not exist");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode YXDOMAIN> = v6;
v7 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v7.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("YXRRSET", 7, 7, "resource record set should not exist");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode YXRRSET> = v7;
v8 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v8.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("NXRRSET", 8, 8, "rrset does not exist");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NXRRSET> = v8;
v9 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v9.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("NOTAUTH", 9, 9, "not authoritative for zone");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOTAUTH> = v9;
v10 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v10.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("NOTZONE", 10, 10, "name not in zone");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode NOTZONE> = v10;
v11 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v11.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("BADVERS", 11, 11, "bad extension mechanism for version");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADVERS> = v11;
v12 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v12.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("BADSIG", 12, 12, "bad signature");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADSIG> = v12;
v13 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v13.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("BADKEY", 13, 13, "bad key");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADKEY> = v13;
v14 = new io.vertx.core.dns.DnsResponseCode;
specialinvoke v14.<io.vertx.core.dns.DnsResponseCode: void <init>(java.lang.String,int,int,java.lang.String)>("BADTIME", 14, 14, "bad timestamp");
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode BADTIME> = v14;
v15 = staticinvoke <io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode[] $values()>();
<io.vertx.core.dns.DnsResponseCode: io.vertx.core.dns.DnsResponseCode[] $VALUES> = v15;
return;
}
}