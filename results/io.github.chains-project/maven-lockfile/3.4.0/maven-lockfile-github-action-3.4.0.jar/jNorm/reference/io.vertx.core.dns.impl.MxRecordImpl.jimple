public final class io.vertx.core.dns.impl.MxRecordImpl extends java.lang.Object implements io.vertx.core.dns.MxRecord, java.lang.Comparable
{
private final int priority;
private final java.lang.String name;
public void <init>(int, java.lang.String)
{
int v1;
java.lang.String v2;
io.vertx.core.dns.impl.MxRecordImpl v0;
v0 := @this: io.vertx.core.dns.impl.MxRecordImpl;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.dns.impl.MxRecordImpl: int priority> = v1;
v0.<io.vertx.core.dns.impl.MxRecordImpl: java.lang.String name> = v2;
return;
}
public int priority()
{
int v1;
io.vertx.core.dns.impl.MxRecordImpl v0;
v0 := @this: io.vertx.core.dns.impl.MxRecordImpl;
v1 = v0.<io.vertx.core.dns.impl.MxRecordImpl: int priority>;
return v1;
}
public java.lang.String name()
{
java.lang.String v1;
io.vertx.core.dns.impl.MxRecordImpl v0;
v0 := @this: io.vertx.core.dns.impl.MxRecordImpl;
v1 = v0.<io.vertx.core.dns.impl.MxRecordImpl: java.lang.String name>;
return v1;
}
public java.lang.String toString()
{
int v1;
java.lang.String v2, v3;
io.vertx.core.dns.impl.MxRecordImpl v0;
v0 := @this: io.vertx.core.dns.impl.MxRecordImpl;
v1 = virtualinvoke v0.<io.vertx.core.dns.impl.MxRecordImpl: int priority()>();
v2 = virtualinvoke v0.<io.vertx.core.dns.impl.MxRecordImpl: java.lang.String name()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");
return v3;
}
public int compareTo(io.vertx.core.dns.MxRecord)
{
int v2, v4, v6;
io.vertx.core.dns.MxRecord v1;
java.lang.Integer v3, v5;
io.vertx.core.dns.impl.MxRecordImpl v0;
v0 := @this: io.vertx.core.dns.impl.MxRecordImpl;
v1 := @parameter0: io.vertx.core.dns.MxRecord;
v2 = virtualinvoke v0.<io.vertx.core.dns.impl.MxRecordImpl: int priority()>();
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v4 = interfaceinvoke v1.<io.vertx.core.dns.MxRecord: int priority()>();
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v6 = virtualinvoke v3.<java.lang.Integer: int compareTo(java.lang.Integer)>(v5);
return v6;
}
}