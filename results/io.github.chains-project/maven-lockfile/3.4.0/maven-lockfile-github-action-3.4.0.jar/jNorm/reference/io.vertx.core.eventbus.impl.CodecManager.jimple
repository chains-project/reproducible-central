public class io.vertx.core.eventbus.impl.CodecManager extends java.lang.Object
{
public static final io.vertx.core.eventbus.MessageCodec PING_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec NULL_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec STRING_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec BUFFER_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec JSON_OBJECT_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec JSON_ARRAY_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec BYTE_ARRAY_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec INT_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec LONG_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec FLOAT_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec DOUBLE_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec BOOLEAN_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec SHORT_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec CHAR_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec BYTE_MESSAGE_CODEC;
public static final io.vertx.core.eventbus.MessageCodec REPLY_EXCEPTION_MESSAGE_CODEC;
private final io.vertx.core.eventbus.MessageCodec[] systemCodecs;
private final java.util.concurrent.ConcurrentMap userCodecMap;
private final java.util.concurrent.ConcurrentMap defaultCodecMap;
private final io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec clusterSerializableCodec;
private final io.vertx.core.eventbus.impl.codecs.SerializableCodec serializableCodec;
private volatile java.util.function.Function clusterSerializableCheck;
private volatile java.util.function.Function serializableCheck;
private volatile java.util.function.Function codecSelector;
public void <init>()
{
io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec v25, v3;
io.vertx.core.eventbus.MessageCodec[] v27, v8;
java.util.function.Function v5, v6, v7;
io.vertx.core.eventbus.impl.CodecManager v0;
io.vertx.core.eventbus.impl.codecs.SerializableCodec v26, v4;
java.util.concurrent.ConcurrentHashMap v1, v2;
io.vertx.core.eventbus.MessageCodec v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v9;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap> = v1;
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap defaultCodecMap> = v2;
v3 = new io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec;
specialinvoke v3.<io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec: void <init>(io.vertx.core.eventbus.impl.CodecManager)>(v0);
v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec clusterSerializableCodec> = v3;
v4 = new io.vertx.core.eventbus.impl.codecs.SerializableCodec;
specialinvoke v4.<io.vertx.core.eventbus.impl.codecs.SerializableCodec: void <init>(io.vertx.core.eventbus.impl.CodecManager)>(v0);
v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.impl.codecs.SerializableCodec serializableCodec> = v4;
v5 = staticinvoke <io.vertx.core.eventbus.impl.CodecManager$lambda_new_0__1419: java.util.function.Function bootstrap$()>();
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function clusterSerializableCheck> = v5;
v6 = <io.vertx.core.eventbus.EventBus: java.util.function.Function DEFAULT_SERIALIZABLE_CHECKER>;
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function serializableCheck> = v6;
v7 = staticinvoke <io.vertx.core.eventbus.impl.CodecManager$lambda_new_1__1420: java.util.function.Function bootstrap$()>();
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function codecSelector> = v7;
v8 = newarray (io.vertx.core.eventbus.MessageCodec)[18];
v9 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec NULL_MESSAGE_CODEC>;
v8[0] = v9;
v10 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec PING_MESSAGE_CODEC>;
v8[1] = v10;
v11 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec STRING_MESSAGE_CODEC>;
v8[2] = v11;
v12 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BUFFER_MESSAGE_CODEC>;
v8[3] = v12;
v13 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec JSON_OBJECT_MESSAGE_CODEC>;
v8[4] = v13;
v14 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec JSON_ARRAY_MESSAGE_CODEC>;
v8[5] = v14;
v15 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BYTE_ARRAY_MESSAGE_CODEC>;
v8[6] = v15;
v16 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec INT_MESSAGE_CODEC>;
v8[7] = v16;
v17 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec LONG_MESSAGE_CODEC>;
v8[8] = v17;
v18 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec FLOAT_MESSAGE_CODEC>;
v8[9] = v18;
v19 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec DOUBLE_MESSAGE_CODEC>;
v8[10] = v19;
v20 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BOOLEAN_MESSAGE_CODEC>;
v8[11] = v20;
v21 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec SHORT_MESSAGE_CODEC>;
v8[12] = v21;
v22 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec CHAR_MESSAGE_CODEC>;
v8[13] = v22;
v23 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BYTE_MESSAGE_CODEC>;
v8[14] = v23;
v24 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec REPLY_EXCEPTION_MESSAGE_CODEC>;
v8[15] = v24;
v25 = v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec clusterSerializableCodec>;
v8[16] = v25;
v26 = v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.impl.codecs.SerializableCodec serializableCodec>;
v8[17] = v26;
v27 = specialinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec[] codecs(io.vertx.core.eventbus.MessageCodec[])>(v8);
v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec[] systemCodecs> = v27;
return;
}
public io.vertx.core.eventbus.MessageCodec lookupCodec(java.lang.Object, java.lang.String, boolean)
{
boolean v10, v11, v12, v13, v14, v15, v16, v17, v18, v26, v29, v3, v30, v33, v5, v6, v7, v8, v9;
java.util.function.Function v24;
java.util.concurrent.ConcurrentMap v19, v22;
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.String v2, v28, v32, v36;
java.lang.IllegalArgumentException v34;
io.vertx.core.eventbus.MessageCodec v4;
java.lang.Class v20, v23, v27, v31, v35;
java.lang.Object v1, v21, v25;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
if v2 == null goto label01;
virtualinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec getCodec(java.lang.String)>(v2);
goto label21;
label01:
if v1 != null goto label02;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec NULL_MESSAGE_CODEC>;
goto label21;
label02:
v5 = v1 instanceof java.lang.String;
if v5 == 0 goto label03;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec STRING_MESSAGE_CODEC>;
goto label21;
label03:
v6 = v1 instanceof io.vertx.core.buffer.Buffer;
if v6 == 0 goto label04;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BUFFER_MESSAGE_CODEC>;
goto label21;
label04:
v7 = v1 instanceof io.vertx.core.json.JsonObject;
if v7 == 0 goto label05;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec JSON_OBJECT_MESSAGE_CODEC>;
goto label21;
label05:
v8 = v1 instanceof io.vertx.core.json.JsonArray;
if v8 == 0 goto label06;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec JSON_ARRAY_MESSAGE_CODEC>;
goto label21;
label06:
v9 = v1 instanceof byte[];
if v9 == 0 goto label07;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BYTE_ARRAY_MESSAGE_CODEC>;
goto label21;
label07:
v10 = v1 instanceof java.lang.Integer;
if v10 == 0 goto label08;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec INT_MESSAGE_CODEC>;
goto label21;
label08:
v11 = v1 instanceof java.lang.Long;
if v11 == 0 goto label09;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec LONG_MESSAGE_CODEC>;
goto label21;
label09:
v12 = v1 instanceof java.lang.Float;
if v12 == 0 goto label10;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec FLOAT_MESSAGE_CODEC>;
goto label21;
label10:
v13 = v1 instanceof java.lang.Double;
if v13 == 0 goto label11;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec DOUBLE_MESSAGE_CODEC>;
goto label21;
label11:
v14 = v1 instanceof java.lang.Boolean;
if v14 == 0 goto label12;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BOOLEAN_MESSAGE_CODEC>;
goto label21;
label12:
v15 = v1 instanceof java.lang.Short;
if v15 == 0 goto label13;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec SHORT_MESSAGE_CODEC>;
goto label21;
label13:
v16 = v1 instanceof java.lang.Character;
if v16 == 0 goto label14;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec CHAR_MESSAGE_CODEC>;
goto label21;
label14:
v17 = v1 instanceof java.lang.Byte;
if v17 == 0 goto label15;
v4 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BYTE_MESSAGE_CODEC>;
goto label21;
label15:
v18 = v1 instanceof io.vertx.core.eventbus.ReplyException;
if v18 == 0 goto label16;
v19 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap defaultCodecMap>;
v20 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v21 = interfaceinvoke v19.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v20);
if v21 != null goto label22;
v21 = <io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec REPLY_EXCEPTION_MESSAGE_CODEC>;
goto label21;
label16:
v22 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap defaultCodecMap>;
v23 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
interfaceinvoke v22.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v23);
if v21 != null goto label22;
v24 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function codecSelector>;
v25 = interfaceinvoke v24.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
if v25 == null goto label17;
v21 = virtualinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec getCodec(java.lang.String)>(v25);
goto label21;
label17:
v26 = v1 instanceof io.vertx.core.shareddata.impl.ClusterSerializable;
if v26 == 0 goto label19;
if v3 != 0 goto label18;
v27 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v28 = virtualinvoke v27.<java.lang.Class: java.lang.String getName()>();
v29 = virtualinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: boolean acceptClusterSerializable(java.lang.String)>(v28);
if v29 == 0 goto label19;
label18:
v21 = v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.impl.codecs.ClusterSerializableCodec clusterSerializableCodec>;
goto label21;
label19:
v30 = v1 instanceof java.io.Serializable;
if v30 == 0 goto label21;
if v3 != 0 goto label20;
v31 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v32 = virtualinvoke v31.<java.lang.Class: java.lang.String getName()>();
v33 = virtualinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: boolean acceptSerializable(java.lang.String)>(v32);
if v33 == 0 goto label21;
label20:
v21 = v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.impl.codecs.SerializableCodec serializableCodec>;
label21:
if v21 != null goto label22;
v34 = new java.lang.IllegalArgumentException;
v35 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v36 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v35) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No message codec for type: \u0001");
specialinvoke v34.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v36);
throw v34;
label22:
return v21;
}
public io.vertx.core.eventbus.MessageCodec getCodec(java.lang.String)
{
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.Object v3;
java.lang.String v1;
java.util.concurrent.ConcurrentMap v2;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public void registerCodec(io.vertx.core.eventbus.MessageCodec)
{
java.lang.IllegalStateException v6;
java.util.concurrent.ConcurrentMap v3, v9;
io.vertx.core.eventbus.MessageCodec v1;
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.String v10, v2, v4, v7, v8;
boolean v5;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: io.vertx.core.eventbus.MessageCodec;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "codec");
v2 = interfaceinvoke v1.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "code.name()");
specialinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: void checkSystemCodec(io.vertx.core.eventbus.MessageCodec)>(v1);
v3 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
v4 = interfaceinvoke v1.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
v5 = interfaceinvoke v3.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = new java.lang.IllegalStateException;
v7 = interfaceinvoke v1.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v7) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Already a codec registered with name \u0001");
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v8);
throw v6;
label1:
v9 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
v10 = interfaceinvoke v1.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
interfaceinvoke v9.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v1);
return;
}
public void unregisterCodec(java.lang.String)
{
java.lang.String v1;
io.vertx.core.eventbus.impl.CodecManager v0;
java.util.concurrent.ConcurrentMap v2;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(v1);
return;
}
public void registerDefaultCodec(java.lang.Class, io.vertx.core.eventbus.MessageCodec)
{
java.lang.IllegalStateException v11, v6;
java.util.concurrent.ConcurrentMap v14, v15, v4, v8;
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.String v12, v13, v16, v3, v7, v9;
boolean v10, v5;
io.vertx.core.eventbus.MessageCodec v2;
java.lang.Class v1;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: io.vertx.core.eventbus.MessageCodec;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "codec");
v3 = interfaceinvoke v2.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v3, "code.name()");
specialinvoke v0.<io.vertx.core.eventbus.impl.CodecManager: void checkSystemCodec(io.vertx.core.eventbus.MessageCodec)>(v2);
v4 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap defaultCodecMap>;
v5 = interfaceinvoke v4.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(v1);
if v5 == 0 goto label1;
v6 = new java.lang.IllegalStateException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.Class)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Already a default codec registered for class \u0001");
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v7);
throw v6;
label1:
v8 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
v9 = interfaceinvoke v2.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
v10 = interfaceinvoke v8.<java.util.concurrent.ConcurrentMap: boolean containsKey(java.lang.Object)>(v9);
if v10 == 0 goto label2;
v11 = new java.lang.IllegalStateException;
v12 = interfaceinvoke v2.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
v13 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v12) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Already a codec registered with name \u0001");
specialinvoke v11.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v13);
throw v11;
label2:
v14 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap defaultCodecMap>;
interfaceinvoke v14.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
v15 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
v16 = interfaceinvoke v2.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
interfaceinvoke v15.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v16, v2);
return;
}
public void unregisterDefaultCodec(java.lang.Class)
{
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.Class v1;
java.lang.Object v3;
java.lang.String v5;
java.util.concurrent.ConcurrentMap v2, v4;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.Class;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap defaultCodecMap>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(v1);
if v3 == null goto label1;
v4 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.concurrent.ConcurrentMap userCodecMap>;
v5 = interfaceinvoke v3.<io.vertx.core.eventbus.MessageCodec: java.lang.String name()>();
interfaceinvoke v4.<java.util.concurrent.ConcurrentMap: java.lang.Object remove(java.lang.Object)>(v5);
label1:
return;
}
public io.vertx.core.eventbus.MessageCodec[] systemCodecs()
{
io.vertx.core.eventbus.MessageCodec[] v1;
io.vertx.core.eventbus.impl.CodecManager v0;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 = v0.<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec[] systemCodecs>;
return v1;
}
private void checkSystemCodec(io.vertx.core.eventbus.MessageCodec)
{
io.vertx.core.eventbus.MessageCodec v1;
byte v2;
io.vertx.core.eventbus.impl.CodecManager v0;
int v3;
java.lang.IllegalArgumentException v4;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: io.vertx.core.eventbus.MessageCodec;
v2 = interfaceinvoke v1.<io.vertx.core.eventbus.MessageCodec: byte systemCodecID()>();
v3 = (int) -1;
if v2 == v3 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Can\'t register a system codec");
throw v4;
label1:
return;
}
private transient io.vertx.core.eventbus.MessageCodec[] codecs(io.vertx.core.eventbus.MessageCodec[])
{
io.vertx.core.eventbus.MessageCodec[] v1, v3;
io.vertx.core.eventbus.MessageCodec v6;
byte v7;
io.vertx.core.eventbus.impl.CodecManager v0;
int v2, v4, v5;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: io.vertx.core.eventbus.MessageCodec[];
v2 = lengthof v1;
v3 = newarray (io.vertx.core.eventbus.MessageCodec)[v2];
v4 = lengthof v1;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v1[v5];
v7 = interfaceinvoke v6.<io.vertx.core.eventbus.MessageCodec: byte systemCodecID()>();
v3[v7] = v6;
v5 = v5 + 1;
goto label1;
label2:
return v3;
}
public void clusterSerializableCheck(java.util.function.Function)
{
java.lang.Object v2;
java.util.function.Function v1;
io.vertx.core.eventbus.impl.CodecManager v0;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function clusterSerializableCheck> = v2;
return;
}
public boolean acceptClusterSerializable(java.lang.String)
{
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.Object v3;
java.lang.String v1;
java.util.function.Function v2;
boolean v4;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function clusterSerializableCheck>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
return v4;
}
public void serializableCheck(java.util.function.Function)
{
java.lang.Object v2;
java.util.function.Function v1;
io.vertx.core.eventbus.impl.CodecManager v0;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function serializableCheck> = v2;
return;
}
public boolean acceptSerializable(java.lang.String)
{
io.vertx.core.eventbus.impl.CodecManager v0;
java.lang.Object v3;
java.lang.String v1;
java.util.function.Function v2;
boolean v4;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function serializableCheck>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
v4 = virtualinvoke v3.<java.lang.Boolean: boolean booleanValue()>();
return v4;
}
public void codecSelector(java.util.function.Function)
{
java.lang.Object v2;
java.util.function.Function v1;
io.vertx.core.eventbus.impl.CodecManager v0;
v0 := @this: io.vertx.core.eventbus.impl.CodecManager;
v1 := @parameter0: java.util.function.Function;
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v1);
v0.<io.vertx.core.eventbus.impl.CodecManager: java.util.function.Function codecSelector> = v2;
return;
}
static void <clinit>()
{
io.vertx.core.eventbus.impl.codecs.ShortMessageCodec v12;
io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec v6;
io.vertx.core.eventbus.impl.codecs.NullMessageCodec v1;
io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec v15;
io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec v10;
io.vertx.core.eventbus.impl.codecs.FloatMessageCodec v9;
io.vertx.core.eventbus.impl.codecs.LongMessageCodec v8;
io.vertx.core.eventbus.impl.codecs.PingMessageCodec v0;
io.vertx.core.eventbus.impl.codecs.IntMessageCodec v7;
io.vertx.core.eventbus.impl.codecs.StringMessageCodec v2;
io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec v4;
io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec v5;
io.vertx.core.eventbus.impl.codecs.BufferMessageCodec v3;
io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec v11;
io.vertx.core.eventbus.impl.codecs.CharMessageCodec v13;
io.vertx.core.eventbus.impl.codecs.ByteMessageCodec v14;
v0 = new io.vertx.core.eventbus.impl.codecs.PingMessageCodec;
specialinvoke v0.<io.vertx.core.eventbus.impl.codecs.PingMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec PING_MESSAGE_CODEC> = v0;
v1 = new io.vertx.core.eventbus.impl.codecs.NullMessageCodec;
specialinvoke v1.<io.vertx.core.eventbus.impl.codecs.NullMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec NULL_MESSAGE_CODEC> = v1;
v2 = new io.vertx.core.eventbus.impl.codecs.StringMessageCodec;
specialinvoke v2.<io.vertx.core.eventbus.impl.codecs.StringMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec STRING_MESSAGE_CODEC> = v2;
v3 = new io.vertx.core.eventbus.impl.codecs.BufferMessageCodec;
specialinvoke v3.<io.vertx.core.eventbus.impl.codecs.BufferMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BUFFER_MESSAGE_CODEC> = v3;
v4 = new io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec;
specialinvoke v4.<io.vertx.core.eventbus.impl.codecs.JsonObjectMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec JSON_OBJECT_MESSAGE_CODEC> = v4;
v5 = new io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec;
specialinvoke v5.<io.vertx.core.eventbus.impl.codecs.JsonArrayMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec JSON_ARRAY_MESSAGE_CODEC> = v5;
v6 = new io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec;
specialinvoke v6.<io.vertx.core.eventbus.impl.codecs.ByteArrayMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BYTE_ARRAY_MESSAGE_CODEC> = v6;
v7 = new io.vertx.core.eventbus.impl.codecs.IntMessageCodec;
specialinvoke v7.<io.vertx.core.eventbus.impl.codecs.IntMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec INT_MESSAGE_CODEC> = v7;
v8 = new io.vertx.core.eventbus.impl.codecs.LongMessageCodec;
specialinvoke v8.<io.vertx.core.eventbus.impl.codecs.LongMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec LONG_MESSAGE_CODEC> = v8;
v9 = new io.vertx.core.eventbus.impl.codecs.FloatMessageCodec;
specialinvoke v9.<io.vertx.core.eventbus.impl.codecs.FloatMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec FLOAT_MESSAGE_CODEC> = v9;
v10 = new io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec;
specialinvoke v10.<io.vertx.core.eventbus.impl.codecs.DoubleMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec DOUBLE_MESSAGE_CODEC> = v10;
v11 = new io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec;
specialinvoke v11.<io.vertx.core.eventbus.impl.codecs.BooleanMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BOOLEAN_MESSAGE_CODEC> = v11;
v12 = new io.vertx.core.eventbus.impl.codecs.ShortMessageCodec;
specialinvoke v12.<io.vertx.core.eventbus.impl.codecs.ShortMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec SHORT_MESSAGE_CODEC> = v12;
v13 = new io.vertx.core.eventbus.impl.codecs.CharMessageCodec;
specialinvoke v13.<io.vertx.core.eventbus.impl.codecs.CharMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec CHAR_MESSAGE_CODEC> = v13;
v14 = new io.vertx.core.eventbus.impl.codecs.ByteMessageCodec;
specialinvoke v14.<io.vertx.core.eventbus.impl.codecs.ByteMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec BYTE_MESSAGE_CODEC> = v14;
v15 = new io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec;
specialinvoke v15.<io.vertx.core.eventbus.impl.codecs.ReplyExceptionMessageCodec: void <init>()>();
<io.vertx.core.eventbus.impl.CodecManager: io.vertx.core.eventbus.MessageCodec REPLY_EXCEPTION_MESSAGE_CODEC> = v15;
return;
}
}