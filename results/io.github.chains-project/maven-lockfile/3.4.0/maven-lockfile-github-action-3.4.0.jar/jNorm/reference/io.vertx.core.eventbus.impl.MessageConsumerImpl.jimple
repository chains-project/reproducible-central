public class io.vertx.core.eventbus.impl.MessageConsumerImpl extends io.vertx.core.eventbus.impl.HandlerRegistration implements io.vertx.core.eventbus.MessageConsumer
{
private static final io.vertx.core.impl.logging.Logger log;
private static final int DEFAULT_MAX_BUFFERED_MESSAGES;
private final io.vertx.core.Vertx vertx;
private final io.vertx.core.impl.ContextInternal context;
private final io.vertx.core.eventbus.impl.EventBusImpl eventBus;
private final java.lang.String address;
private final boolean localOnly;
private io.vertx.core.Handler handler;
private io.vertx.core.Handler completionHandler;
private io.vertx.core.Handler endHandler;
private io.vertx.core.Handler discardHandler;
private int maxBufferedMessages;
private java.util.Queue pending;
private long demand;
private io.vertx.core.Promise result;
void <init>(io.vertx.core.Vertx, io.vertx.core.impl.ContextInternal, io.vertx.core.eventbus.impl.EventBusImpl, java.lang.String, boolean)
{
io.vertx.core.eventbus.impl.EventBusImpl v3;
io.vertx.core.Vertx v1;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.impl.ContextInternal v2;
java.lang.String v4;
java.util.ArrayDeque v6;
boolean v5;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Vertx;
v2 := @parameter1: io.vertx.core.impl.ContextInternal;
v3 := @parameter2: io.vertx.core.eventbus.impl.EventBusImpl;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: boolean;
specialinvoke v0.<io.vertx.core.eventbus.impl.HandlerRegistration: void <init>(io.vertx.core.impl.ContextInternal,io.vertx.core.eventbus.impl.EventBusImpl,java.lang.String,boolean)>(v2, v3, v4, 0);
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: int maxBufferedMessages> = 1000;
v6 = new java.util.ArrayDeque;
specialinvoke v6.<java.util.ArrayDeque: void <init>(int)>(8);
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending> = v6;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand> = 9223372036854775807L;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Vertx vertx> = v1;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.ContextInternal context> = v2;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.eventbus.impl.EventBusImpl eventBus> = v3;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.lang.String address> = v4;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: boolean localOnly> = v5;
return;
}
public io.vertx.core.eventbus.MessageConsumer setMaxBufferedMessages(int)
{
java.lang.Throwable v14;
java.util.ArrayList v9;
int v1, v11, v4, v5;
boolean v16, v2, v7;
java.util.Iterator v15;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
java.lang.Object v13, v17;
java.util.Queue v10, v12, v3, v6;
io.vertx.core.Handler v8;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: int;
if v1 < 0 goto label01;
v2 = 1;
goto label02;
label01:
v2 = 0;
label02:
staticinvoke <io.vertx.core.impl.Arguments: void require(boolean,java.lang.String)>(v2, "Max buffered messages cannot be negative");
entermonitor v0;
label03:
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: int maxBufferedMessages> = v1;
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v4 = interfaceinvoke v3.<java.util.Queue: int size()>();
v5 = v4 - v1;
if v5 > 0 goto label05;
exitmonitor v0;
label04:
return v0;
label05:
v6 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v7 = interfaceinvoke v6.<java.util.Queue: boolean isEmpty()>();
if v7 == 0 goto label07;
exitmonitor v0;
label06:
return v0;
label07:
v8 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler discardHandler>;
v9 = new java.util.ArrayList;
specialinvoke v9.<java.util.ArrayList: void <init>(int)>(v5);
label08:
v10 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v11 = interfaceinvoke v10.<java.util.Queue: int size()>();
if v11 <= v1 goto label09;
v12 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v13 = interfaceinvoke v12.<java.util.Queue: java.lang.Object poll()>();
interfaceinvoke v9.<java.util.List: boolean add(java.lang.Object)>(v13);
goto label08;
label09:
exitmonitor v0;
label10:
goto label12;
label11:
v14 := @caughtexception;
exitmonitor v0;
throw v14;
label12:
v15 = interfaceinvoke v9.<java.util.List: java.util.Iterator iterator()>();
label13:
v16 = interfaceinvoke v15.<java.util.Iterator: boolean hasNext()>();
if v16 == 0 goto label15;
v17 = interfaceinvoke v15.<java.util.Iterator: java.lang.Object next()>();
if v8 == null goto label14;
interfaceinvoke v8.<io.vertx.core.Handler: void handle(java.lang.Object)>(v17);
label14:
virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void discard(io.vertx.core.eventbus.Message)>(v17);
goto label13;
label15:
return v0;
catch java.lang.Throwable from label03 to label04 with label11;
catch java.lang.Throwable from label05 to label06 with label11;
catch java.lang.Throwable from label07 to label10 with label11;
}
public synchronized int getMaxBufferedMessages()
{
int v1;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: int maxBufferedMessages>;
return v1;
}
public java.lang.String address()
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
java.lang.String v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.lang.String address>;
return v1;
}
public synchronized void completionHandler(io.vertx.core.Handler)
{
io.vertx.core.Promise v2, v3;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.Handler v1;
io.vertx.core.Future v4;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Handler;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Promise result>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Promise result>;
v4 = interfaceinvoke v3.<io.vertx.core.Promise: io.vertx.core.Future future()>();
interfaceinvoke v4.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler completionHandler> = v1;
label2:
return;
}
public synchronized io.vertx.core.Future unregister()
{
java.util.Iterator v8;
io.vertx.core.Promise v13;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.impl.ContextInternal v11;
io.vertx.core.Future v12;
int v4;
java.lang.Object v10;
java.util.Queue v3, v5;
io.vertx.core.Handler v1, v14, v2, v6;
java.util.ArrayDeque v7;
boolean v9;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler handler> = null;
v1 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler endHandler>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler endHandler>;
interfaceinvoke v2.<io.vertx.core.Handler: void handle(java.lang.Object)>(null);
label1:
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v4 = interfaceinvoke v3.<java.util.Queue: int size()>();
if v4 <= 0 goto label3;
v5 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v6 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler discardHandler>;
v7 = new java.util.ArrayDeque;
specialinvoke v7.<java.util.ArrayDeque: void <init>()>();
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending> = v7;
v8 = interfaceinvoke v5.<java.util.Queue: java.util.Iterator iterator()>();
label2:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label3;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void discard(io.vertx.core.eventbus.Message)>(v10);
if v6 == null goto label2;
v11 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.ContextInternal context>;
interfaceinvoke v11.<io.vertx.core.impl.ContextInternal: void emit(java.lang.Object,io.vertx.core.Handler)>(v10, v6);
goto label2;
label3:
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler discardHandler> = null;
v12 = specialinvoke v0.<io.vertx.core.eventbus.impl.HandlerRegistration: io.vertx.core.Future unregister()>();
v13 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Promise result>;
if v13 == null goto label4;
v14 = staticinvoke <io.vertx.core.eventbus.impl.MessageConsumerImpl$lambda_unregister_0__1413: io.vertx.core.Handler bootstrap$(io.vertx.core.Promise)>(v13);
interfaceinvoke v12.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v14);
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Promise result> = null;
label4:
return v12;
}
protected boolean doReceive(io.vertx.core.eventbus.Message)
{
java.lang.Throwable v25;
long v20, v22, v23, v3;
byte v21, v4;
int v12, v16, v6, v7;
java.lang.String v13, v14;
io.vertx.core.impl.logging.Logger v11;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.eventbus.Message v1;
java.lang.Object v19;
java.util.Queue v15, v17, v18, v5, v8;
io.vertx.core.Handler v10, v2, v24, v9;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.eventbus.Message;
entermonitor v0;
label01:
v2 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler handler>;
if v2 != null goto label03;
exitmonitor v0;
label02:
return 0;
label03:
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v4 = v3 cmp 0L;
if v4 != 0 goto label09;
v5 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v6 = interfaceinvoke v5.<java.util.Queue: int size()>();
v7 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: int maxBufferedMessages>;
if v6 >= v7 goto label05;
v8 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
interfaceinvoke v8.<java.util.Queue: boolean add(java.lang.Object)>(v1);
exitmonitor v0;
label04:
return 1;
label05:
virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void discard(io.vertx.core.eventbus.Message)>(v1);
v9 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler discardHandler>;
if v9 == null goto label06;
v10 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler discardHandler>;
interfaceinvoke v10.<io.vertx.core.Handler: void handle(java.lang.Object)>(v1);
goto label07;
label06:
v11 = <io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.logging.Logger log>;
v12 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: int maxBufferedMessages>;
v13 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.lang.String address>;
v14 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,java.lang.String)>(v12, v13) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Discarding message as more than \u0001 buffered in paused consumer. address: \u0001");
interfaceinvoke v11.<io.vertx.core.impl.logging.Logger: void warn(java.lang.Object)>(v14);
label07:
exitmonitor v0;
label08:
return 1;
label09:
v15 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v16 = interfaceinvoke v15.<java.util.Queue: int size()>();
if v16 <= 0 goto label10;
v17 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
interfaceinvoke v17.<java.util.Queue: boolean add(java.lang.Object)>(v1);
v18 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v19 = interfaceinvoke v18.<java.util.Queue: java.lang.Object poll()>();
label10:
v20 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v21 = v20 cmp 9223372036854775807L;
if v21 == 0 goto label11;
v22 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v23 = v22 - 1L;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand> = v23;
label11:
v24 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler handler>;
exitmonitor v0;
label12:
goto label14;
label13:
v25 := @caughtexception;
exitmonitor v0;
throw v25;
label14:
specialinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void deliver(io.vertx.core.Handler,io.vertx.core.eventbus.Message)>(v24, v19);
return 1;
catch java.lang.Throwable from label01 to label02 with label13;
catch java.lang.Throwable from label03 to label04 with label13;
catch java.lang.Throwable from label05 to label08 with label13;
catch java.lang.Throwable from label09 to label12 with label13;
}
protected void dispatch(io.vertx.core.eventbus.Message, io.vertx.core.impl.ContextInternal, io.vertx.core.Handler)
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.eventbus.Message v1;
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.Handler v3;
java.lang.NullPointerException v4;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.eventbus.Message;
v2 := @parameter1: io.vertx.core.impl.ContextInternal;
v3 := @parameter2: io.vertx.core.Handler;
if v3 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>()>();
throw v4;
label1:
interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: void dispatch(java.lang.Object,io.vertx.core.Handler)>(v1, v3);
return;
}
private void deliver(io.vertx.core.Handler, io.vertx.core.eventbus.Message)
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.eventbus.Message v2;
io.vertx.core.impl.ContextInternal v3, v4;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Handler;
v2 := @parameter1: io.vertx.core.eventbus.Message;
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.ContextInternal context>;
v4 = interfaceinvoke v3.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.ContextInternal duplicate()>();
virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void dispatch(io.vertx.core.Handler,io.vertx.core.eventbus.Message,io.vertx.core.impl.ContextInternal)>(v1, v2, v4);
specialinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void checkNextTick()>();
return;
}
private synchronized void checkNextTick()
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.impl.ContextInternal v5;
long v3;
io.netty.channel.EventLoop v6;
java.lang.Runnable v7;
byte v4;
java.util.Queue v1;
boolean v2;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: java.util.Queue pending>;
v2 = interfaceinvoke v1.<java.util.Queue: boolean isEmpty()>();
if v2 != 0 goto label1;
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v4 = v3 cmp 0L;
if v4 <= 0 goto label1;
v5 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.ContextInternal context>;
v6 = interfaceinvoke v5.<io.vertx.core.impl.ContextInternal: io.netty.channel.EventLoop nettyEventLoop()>();
v7 = staticinvoke <io.vertx.core.eventbus.impl.MessageConsumerImpl$lambda_checkNextTick_1__1414: java.lang.Runnable bootstrap$(io.vertx.core.eventbus.impl.MessageConsumerImpl)>(v0);
interfaceinvoke v6.<io.netty.channel.EventLoop: void execute(java.lang.Runnable)>(v7);
label1:
return;
}
public synchronized void discardHandler(io.vertx.core.Handler)
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Handler;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler discardHandler> = v1;
return;
}
public synchronized io.vertx.core.eventbus.MessageConsumer handler(io.vertx.core.Handler)
{
java.lang.Throwable v13;
io.vertx.core.impl.future.PromiseInternal v4, v9;
io.vertx.core.Promise v2;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.impl.ContextInternal v3, v8;
io.vertx.core.Future v11, v6;
io.vertx.core.Handler v1, v12, v5, v7;
boolean v10;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Handler;
if v1 == null goto label6;
entermonitor v0;
label1:
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler handler> = v1;
v2 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Promise result>;
if v2 != null goto label3;
v3 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.ContextInternal context>;
v4 = interfaceinvoke v3.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise()>();
v5 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler completionHandler>;
if v5 == null goto label2;
v6 = interfaceinvoke v4.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v7 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler completionHandler>;
interfaceinvoke v6.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v7);
label2:
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Promise result> = v4;
v8 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.ContextInternal context>;
v9 = interfaceinvoke v8.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise()>();
v10 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: boolean localOnly>;
virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void register(java.lang.String,boolean,io.vertx.core.Promise)>(null, v10, v9);
v11 = interfaceinvoke v9.<io.vertx.core.Promise: io.vertx.core.Future future()>();
v12 = staticinvoke <io.vertx.core.eventbus.impl.MessageConsumerImpl$lambda_handler_2__1415: io.vertx.core.Handler bootstrap$(io.vertx.core.Promise)>(v4);
interfaceinvoke v11.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v12);
label3:
exitmonitor v0;
label4:
goto label7;
label5:
v13 := @caughtexception;
exitmonitor v0;
throw v13;
label6:
virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Future unregister()>();
label7:
return v0;
catch java.lang.Throwable from label1 to label4 with label5;
}
public io.vertx.core.streams.ReadStream bodyStream()
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.eventbus.impl.BodyReadStream v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 = new io.vertx.core.eventbus.impl.BodyReadStream;
specialinvoke v1.<io.vertx.core.eventbus.impl.BodyReadStream: void <init>(io.vertx.core.streams.ReadStream)>(v0);
return v1;
}
public synchronized io.vertx.core.eventbus.MessageConsumer pause()
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand> = 0L;
return v0;
}
public io.vertx.core.eventbus.MessageConsumer resume()
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.eventbus.MessageConsumer v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 = virtualinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.eventbus.MessageConsumer fetch(long)>(9223372036854775807L);
return v1;
}
public synchronized io.vertx.core.eventbus.MessageConsumer fetch(long)
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
long v1, v4, v5, v6, v8;
java.lang.IllegalArgumentException v3;
byte v2, v7, v9;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: long;
v2 = v1 cmp 0L;
if v2 >= 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>()>();
throw v3;
label1:
v4 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v5 = v4 + v1;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand> = v5;
v6 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v7 = v6 cmp 0L;
if v7 >= 0 goto label2;
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand> = 9223372036854775807L;
label2:
v8 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: long demand>;
v9 = v8 cmp 0L;
if v9 <= 0 goto label3;
specialinvoke v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: void checkNextTick()>();
label3:
return v0;
}
public synchronized io.vertx.core.eventbus.MessageConsumer endHandler(io.vertx.core.Handler)
{
io.vertx.core.Vertx v2;
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.Handler v1, v4;
io.vertx.core.Context v3;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Handler;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Vertx vertx>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.Context getOrCreateContext()>();
v4 = staticinvoke <io.vertx.core.eventbus.impl.MessageConsumerImpl$lambda_endHandler_4__1416: io.vertx.core.Handler bootstrap$(io.vertx.core.Context,io.vertx.core.Handler)>(v3, v1);
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler endHandler> = v4;
goto label2;
label1:
v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler endHandler> = null;
label2:
return v0;
}
public synchronized io.vertx.core.eventbus.MessageConsumer exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 := @parameter0: io.vertx.core.Handler;
return v0;
}
public synchronized io.vertx.core.Handler getHandler()
{
io.vertx.core.eventbus.impl.MessageConsumerImpl v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.eventbus.impl.MessageConsumerImpl;
v1 = v0.<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.Handler handler>;
return v1;
}
static void <clinit>()
{
io.vertx.core.impl.logging.Logger v0;
v0 = staticinvoke <io.vertx.core.impl.logging.LoggerFactory: io.vertx.core.impl.logging.Logger getLogger(java.lang.Class)>(class "Lio/vertx/core/eventbus/impl/MessageConsumerImpl;");
<io.vertx.core.eventbus.impl.MessageConsumerImpl: io.vertx.core.impl.logging.Logger log> = v0;
return;
}
}