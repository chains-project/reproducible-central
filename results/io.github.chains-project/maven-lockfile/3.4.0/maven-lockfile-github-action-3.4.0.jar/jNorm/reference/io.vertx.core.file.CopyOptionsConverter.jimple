public class io.vertx.core.file.CopyOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.file.CopyOptionsConverter v0;
v0 := @this: io.vertx.core.file.CopyOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.file.CopyOptions)
{
java.lang.Iterable v0;
byte v6;
int v7;
boolean v10, v11, v13, v15, v17, v19, v21, v23, v25, v27, v3, v8, v9;
java.util.Iterator v2;
io.vertx.core.file.CopyOptions v1;
java.lang.Object v12, v14, v16, v18, v20, v22, v24, v26, v4, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.file.CopyOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label11;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -1612883873: goto label05;
case 138705052: goto label02;
case 275064492: goto label03;
case 812468775: goto label04;
default: goto label06;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("atomicMove");
if v8 == 0 goto label06;
v6 = 0;
goto label06;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("copyAttributes");
if v9 == 0 goto label06;
v6 = 1;
goto label06;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("nofollowLinks");
if v10 == 0 goto label06;
v6 = 2;
goto label06;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("replaceExisting");
if v11 == 0 goto label06;
v6 = 3;
label06:
tableswitch(v6)
{
case 0: goto label07;
case 1: goto label08;
case 2: goto label09;
case 3: goto label10;
default: goto label01;
};
label07:
v12 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v13 = v12 instanceof java.lang.Boolean;
if v13 == 0 goto label01;
v14 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v15 = virtualinvoke v14.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.CopyOptions: io.vertx.core.file.CopyOptions setAtomicMove(boolean)>(v15);
goto label01;
label08:
v16 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v17 = v16 instanceof java.lang.Boolean;
if v17 == 0 goto label01;
v18 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v19 = virtualinvoke v18.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.CopyOptions: io.vertx.core.file.CopyOptions setCopyAttributes(boolean)>(v19);
goto label01;
label09:
v20 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v21 = v20 instanceof java.lang.Boolean;
if v21 == 0 goto label01;
v22 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v23 = virtualinvoke v22.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.CopyOptions: io.vertx.core.file.CopyOptions setNofollowLinks(boolean)>(v23);
goto label01;
label10:
v24 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v25 = v24 instanceof java.lang.Boolean;
if v25 == 0 goto label01;
v26 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v27 = virtualinvoke v26.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.CopyOptions: io.vertx.core.file.CopyOptions setReplaceExisting(boolean)>(v27);
goto label01;
label11:
return;
}
static void toJson(io.vertx.core.file.CopyOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.file.CopyOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.file.CopyOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.file.CopyOptionsConverter: void toJson(io.vertx.core.file.CopyOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.file.CopyOptions, java.util.Map)
{
io.vertx.core.file.CopyOptions v0;
java.util.Map v1;
java.lang.Boolean v3, v5, v7, v9;
boolean v2, v4, v6, v8;
v0 := @parameter0: io.vertx.core.file.CopyOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.file.CopyOptions: boolean isAtomicMove()>();
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v2);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("atomicMove", v3);
v4 = virtualinvoke v0.<io.vertx.core.file.CopyOptions: boolean isCopyAttributes()>();
v5 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v4);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("copyAttributes", v5);
v6 = virtualinvoke v0.<io.vertx.core.file.CopyOptions: boolean isNofollowLinks()>();
v7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("nofollowLinks", v7);
v8 = virtualinvoke v0.<io.vertx.core.file.CopyOptions: boolean isReplaceExisting()>();
v9 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v8);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("replaceExisting", v9);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.file.CopyOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.file.CopyOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}