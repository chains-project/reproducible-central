public class io.vertx.core.file.FileSystemOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.file.FileSystemOptionsConverter v0;
v0 := @this: io.vertx.core.file.FileSystemOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.file.FileSystemOptions)
{
java.lang.Iterable v0;
byte v6;
int v7;
boolean v10, v12, v14, v16, v19, v21, v3, v8, v9;
java.util.Iterator v2;
io.vertx.core.file.FileSystemOptions v1;
java.lang.Object v11, v13, v15, v17, v18, v20, v4, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.file.FileSystemOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label9;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -1701563577: goto label3;
case -1365523682: goto label4;
case -156713163: goto label2;
default: goto label5;
};
label2:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("classPathResolvingEnabled");
if v8 == 0 goto label5;
v6 = 0;
goto label5;
label3:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("fileCacheDir");
if v9 == 0 goto label5;
v6 = 1;
goto label5;
label4:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("fileCachingEnabled");
if v10 == 0 goto label5;
v6 = 2;
label5:
tableswitch(v6)
{
case 0: goto label6;
case 1: goto label7;
case 2: goto label8;
default: goto label1;
};
label6:
v11 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v12 = v11 instanceof java.lang.Boolean;
if v12 == 0 goto label1;
v13 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v14 = virtualinvoke v13.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.FileSystemOptions: io.vertx.core.file.FileSystemOptions setClassPathResolvingEnabled(boolean)>(v14);
goto label1;
label7:
v15 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = v15 instanceof java.lang.String;
if v16 == 0 goto label1;
v17 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.file.FileSystemOptions: io.vertx.core.file.FileSystemOptions setFileCacheDir(java.lang.String)>(v17);
goto label1;
label8:
v18 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v19 = v18 instanceof java.lang.Boolean;
if v19 == 0 goto label1;
v20 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v21 = virtualinvoke v20.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.file.FileSystemOptions: io.vertx.core.file.FileSystemOptions setFileCachingEnabled(boolean)>(v21);
goto label1;
label9:
return;
}
static void toJson(io.vertx.core.file.FileSystemOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.file.FileSystemOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.file.FileSystemOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.file.FileSystemOptionsConverter: void toJson(io.vertx.core.file.FileSystemOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.file.FileSystemOptions, java.util.Map)
{
io.vertx.core.file.FileSystemOptions v0;
java.util.Map v1;
java.lang.Boolean v3, v7;
java.lang.String v4, v5;
boolean v2, v6;
v0 := @parameter0: io.vertx.core.file.FileSystemOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.file.FileSystemOptions: boolean isClassPathResolvingEnabled()>();
v3 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v2);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("classPathResolvingEnabled", v3);
v4 = virtualinvoke v0.<io.vertx.core.file.FileSystemOptions: java.lang.String getFileCacheDir()>();
if v4 == null goto label1;
v5 = virtualinvoke v0.<io.vertx.core.file.FileSystemOptions: java.lang.String getFileCacheDir()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fileCacheDir", v5);
label1:
v6 = virtualinvoke v0.<io.vertx.core.file.FileSystemOptions: boolean isFileCachingEnabled()>();
v7 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v6);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("fileCachingEnabled", v7);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.file.FileSystemOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.file.FileSystemOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}