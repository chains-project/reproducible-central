class io.vertx.core.file.impl.FileSystemImpl$13 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$parentDir;
final java.nio.file.attribute.FileAttribute val$attrs;
final java.lang.String val$prefix;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, java.nio.file.attribute.FileAttribute, java.lang.String)
{
io.vertx.core.file.impl.FileSystemImpl v1;
java.nio.file.attribute.FileAttribute v3;
java.lang.String v2, v4;
io.vertx.core.file.impl.FileSystemImpl$13 v0;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$13;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.nio.file.attribute.FileAttribute;
v4 := @parameter3: java.lang.String;
v0.<io.vertx.core.file.impl.FileSystemImpl$13: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$parentDir> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.nio.file.attribute.FileAttribute val$attrs> = v3;
v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$prefix> = v4;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public java.lang.String perform()
{
io.vertx.core.file.FileSystemException v23;
java.nio.file.attribute.FileAttribute[] v13, v16, v19, v9;
java.lang.String v1, v12, v15, v18, v21, v24, v25, v4, v8;
io.vertx.core.file.impl.FileSystemImpl$13 v0;
java.nio.file.Path v11, v6;
io.vertx.core.impl.VertxInternal v3;
java.io.IOException v22;
java.nio.file.attribute.FileAttribute v10, v14, v17, v7;
java.io.File v20, v5;
io.vertx.core.file.impl.FileSystemImpl v2;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$13;
label1:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$parentDir>;
if v1 == null goto label3;
v2 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: io.vertx.core.file.impl.FileSystemImpl this$0>;
v3 = v2.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v4 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$parentDir>;
v5 = interfaceinvoke v3.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v4);
v6 = virtualinvoke v5.<java.io.File: java.nio.file.Path toPath()>();
v7 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.nio.file.attribute.FileAttribute val$attrs>;
if v7 == null goto label2;
v8 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$prefix>;
v9 = newarray (java.nio.file.attribute.FileAttribute)[1];
v10 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.nio.file.attribute.FileAttribute val$attrs>;
v9[0] = v10;
v11 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[])>(v6, v8, v9);
goto label5;
label2:
v12 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$prefix>;
v13 = newarray (java.nio.file.attribute.FileAttribute)[0];
v11 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.nio.file.Path,java.lang.String,java.nio.file.attribute.FileAttribute[])>(v6, v12, v13);
goto label5;
label3:
v14 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.nio.file.attribute.FileAttribute val$attrs>;
if v14 == null goto label4;
v15 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$prefix>;
v16 = newarray (java.nio.file.attribute.FileAttribute)[1];
v17 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.nio.file.attribute.FileAttribute val$attrs>;
v16[0] = v17;
v11 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>(v15, v16);
goto label5;
label4:
v18 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$prefix>;
v19 = newarray (java.nio.file.attribute.FileAttribute)[0];
v11 = staticinvoke <java.nio.file.Files: java.nio.file.Path createTempDirectory(java.lang.String,java.nio.file.attribute.FileAttribute[])>(v18, v19);
label5:
v20 = interfaceinvoke v11.<java.nio.file.Path: java.io.File toFile()>();
v21 = virtualinvoke v20.<java.io.File: java.lang.String getAbsolutePath()>();
label6:
return v21;
label7:
v22 := @caughtexception;
v23 = new io.vertx.core.file.FileSystemException;
v24 = v0.<io.vertx.core.file.impl.FileSystemImpl$13: java.lang.String val$parentDir>;
v25 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFolderAccessErrorMessage(java.lang.String,java.lang.String)>("create subfolder of", v24);
specialinvoke v23.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v25, v22);
throw v23;
catch java.io.IOException from label1 to label6 with label7;
}
}