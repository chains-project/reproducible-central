class io.vertx.core.file.impl.FileSystemImpl$15 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$p;
final java.lang.String val$filter;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, java.lang.String)
{
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemImpl$15 v0;
java.lang.String v2, v3;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$15;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v0.<io.vertx.core.file.impl.FileSystemImpl$15: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$15: java.lang.String val$p> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$15: java.lang.String val$filter> = v3;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public java.util.List perform()
{
io.vertx.core.file.impl.FileSystemImpl$15$1 v12, v13;
io.vertx.core.file.FileSystemException v23, v6, v9;
java.util.ArrayList v15;
int v16, v18, v19;
java.lang.String v10, v11, v21, v24, v25, v3, v7;
boolean v5, v8;
io.vertx.core.file.impl.FileSystemImpl$15 v0;
io.vertx.core.impl.VertxInternal v2;
java.io.IOException v22;
java.io.File v20, v4;
io.vertx.core.file.impl.FileSystemImpl v1;
java.io.File[] v14, v17;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$15;
label01:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$15: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$15: java.lang.String val$p>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: boolean exists()>();
if v5 != 0 goto label02;
v6 = new io.vertx.core.file.FileSystemException;
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.io.File)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot read directory \u0001. Does not exist");
specialinvoke v6.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String)>(v7);
throw v6;
label02:
v8 = virtualinvoke v4.<java.io.File: boolean isDirectory()>();
if v8 != 0 goto label03;
v9 = new io.vertx.core.file.FileSystemException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.io.File)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Cannot read directory \u0001. It\'s not a directory");
specialinvoke v9.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String)>(v10);
throw v9;
label03:
v11 = v0.<io.vertx.core.file.impl.FileSystemImpl$15: java.lang.String val$filter>;
if v11 == null goto label04;
v12 = new io.vertx.core.file.impl.FileSystemImpl$15$1;
specialinvoke v12.<io.vertx.core.file.impl.FileSystemImpl$15$1: void <init>(io.vertx.core.file.impl.FileSystemImpl$15)>(v0);
v13 = v12;
goto label05;
label04:
v13 = null;
label05:
if v13 != null goto label06;
v14 = virtualinvoke v4.<java.io.File: java.io.File[] listFiles()>();
goto label07;
label06:
v14 = virtualinvoke v4.<java.io.File: java.io.File[] listFiles(java.io.FilenameFilter)>(v13);
label07:
v15 = new java.util.ArrayList;
v16 = lengthof v14;
specialinvoke v15.<java.util.ArrayList: void <init>(int)>(v16);
v17 = v14;
v18 = lengthof v14;
v19 = 0;
label08:
if v19 >= v18 goto label09;
v20 = v17[v19];
v21 = virtualinvoke v20.<java.io.File: java.lang.String getCanonicalPath()>();
interfaceinvoke v15.<java.util.List: boolean add(java.lang.Object)>(v21);
v19 = v19 + 1;
goto label08;
label09:
return v15;
label10:
v22 := @caughtexception;
v23 = new io.vertx.core.file.FileSystemException;
v24 = v0.<io.vertx.core.file.impl.FileSystemImpl$15: java.lang.String val$p>;
v25 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFolderAccessErrorMessage(java.lang.String,java.lang.String)>("read", v24);
specialinvoke v23.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v25, v22);
throw v23;
catch java.io.IOException from label01 to label09 with label10;
}
}