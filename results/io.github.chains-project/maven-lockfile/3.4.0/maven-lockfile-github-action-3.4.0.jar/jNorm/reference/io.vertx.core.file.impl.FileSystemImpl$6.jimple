class io.vertx.core.file.impl.FileSystemImpl$6 extends io.vertx.core.file.impl.FileSystemImpl$BlockingAction
{
final java.lang.String val$path;
final java.lang.String val$user;
final java.lang.String val$group;
final io.vertx.core.file.impl.FileSystemImpl this$0;
void <init>(io.vertx.core.file.impl.FileSystemImpl, java.lang.String, java.lang.String, java.lang.String)
{
io.vertx.core.file.impl.FileSystemImpl v1;
io.vertx.core.file.impl.FileSystemImpl$6 v0;
java.lang.String v2, v3, v4;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$6;
v1 := @parameter0: io.vertx.core.file.impl.FileSystemImpl;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v0.<io.vertx.core.file.impl.FileSystemImpl$6: io.vertx.core.file.impl.FileSystemImpl this$0> = v1;
v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$path> = v2;
v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$user> = v3;
v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$group> = v4;
specialinvoke v0.<io.vertx.core.file.impl.FileSystemImpl$BlockingAction: void <init>(io.vertx.core.file.impl.FileSystemImpl)>(v1);
return;
}
public java.lang.Void perform()
{
io.vertx.core.file.impl.FileSystemImpl$6 v0;
io.vertx.core.file.FileSystemException v18, v20, v24;
java.nio.file.attribute.GroupPrincipal v13;
java.nio.file.LinkOption v16;
java.nio.file.attribute.UserPrincipal v11, v9;
java.lang.SecurityException v19;
java.lang.String v10, v12, v14, v21, v22, v25, v26, v3, v8;
java.nio.file.Path v5;
io.vertx.core.impl.VertxInternal v2;
java.nio.file.LinkOption[] v15;
java.nio.file.attribute.FileAttributeView v17;
java.io.IOException v23;
java.nio.file.FileSystem v6;
java.io.File v4;
io.vertx.core.file.impl.FileSystemImpl v1;
java.nio.file.attribute.UserPrincipalLookupService v7;
v0 := @this: io.vertx.core.file.impl.FileSystemImpl$6;
label01:
v1 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: io.vertx.core.file.impl.FileSystemImpl this$0>;
v2 = v1.<io.vertx.core.file.impl.FileSystemImpl: io.vertx.core.impl.VertxInternal vertx>;
v3 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$path>;
v4 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: java.io.File resolveFile(java.lang.String)>(v3);
v5 = virtualinvoke v4.<java.io.File: java.nio.file.Path toPath()>();
v6 = interfaceinvoke v5.<java.nio.file.Path: java.nio.file.FileSystem getFileSystem()>();
v7 = virtualinvoke v6.<java.nio.file.FileSystem: java.nio.file.attribute.UserPrincipalLookupService getUserPrincipalLookupService()>();
v8 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$user>;
if v8 != null goto label02;
v9 = null;
goto label03;
label02:
v10 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$user>;
v9 = virtualinvoke v7.<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.UserPrincipal lookupPrincipalByName(java.lang.String)>(v10);
label03:
v11 = v9;
v12 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$group>;
if v12 != null goto label04;
v13 = null;
goto label05;
label04:
v14 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$group>;
v13 = virtualinvoke v7.<java.nio.file.attribute.UserPrincipalLookupService: java.nio.file.attribute.GroupPrincipal lookupPrincipalByGroupName(java.lang.String)>(v14);
label05:
if v13 == null goto label07;
v15 = newarray (java.nio.file.LinkOption)[1];
v16 = <java.nio.file.LinkOption: java.nio.file.LinkOption NOFOLLOW_LINKS>;
v15[0] = v16;
v17 = staticinvoke <java.nio.file.Files: java.nio.file.attribute.FileAttributeView getFileAttributeView(java.nio.file.Path,java.lang.Class,java.nio.file.LinkOption[])>(v5, class "Ljava/nio/file/attribute/PosixFileAttributeView;", v15);
if v17 != null goto label06;
v18 = new io.vertx.core.file.FileSystemException;
specialinvoke v18.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String)>("Change group of file not supported");
throw v18;
label06:
interfaceinvoke v17.<java.nio.file.attribute.PosixFileAttributeView: void setGroup(java.nio.file.attribute.GroupPrincipal)>(v13);
label07:
if v11 == null goto label11;
staticinvoke <java.nio.file.Files: java.nio.file.Path setOwner(java.nio.file.Path,java.nio.file.attribute.UserPrincipal)>(v5, v11);
label08:
goto label11;
label09:
v19 := @caughtexception;
v20 = new io.vertx.core.file.FileSystemException;
v21 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$path>;
v22 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v21) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Accessed denied for chown on \u0001");
specialinvoke v20.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String)>(v22);
throw v20;
label10:
v23 := @caughtexception;
v24 = new io.vertx.core.file.FileSystemException;
v25 = v0.<io.vertx.core.file.impl.FileSystemImpl$6: java.lang.String val$path>;
v26 = staticinvoke <io.vertx.core.file.impl.FileSystemImpl: java.lang.String getFileAccessErrorMessage(java.lang.String,java.lang.String)>("crown", v25);
specialinvoke v24.<io.vertx.core.file.FileSystemException: void <init>(java.lang.String,java.lang.Throwable)>(v26, v23);
throw v24;
label11:
return null;
catch java.lang.SecurityException from label01 to label08 with label09;
catch java.io.IOException from label01 to label08 with label10;
}
}