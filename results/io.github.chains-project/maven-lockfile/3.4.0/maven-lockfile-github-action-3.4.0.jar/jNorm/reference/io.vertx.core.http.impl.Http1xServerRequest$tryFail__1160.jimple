public final class io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160 extends java.lang.Object implements io.vertx.core.Handler
{
io.vertx.core.impl.future.PromiseInternal cap0;
public static io.vertx.core.Handler bootstrap$(io.vertx.core.impl.future.PromiseInternal)
{
io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160 v1;
io.vertx.core.impl.future.PromiseInternal v0;
v0 := @parameter0: io.vertx.core.impl.future.PromiseInternal;
v1 = new io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160;
specialinvoke v1.<io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160: void <init>(io.vertx.core.impl.future.PromiseInternal)>(v0);
return v1;
}
public void <init>(io.vertx.core.impl.future.PromiseInternal)
{
io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160 v0;
io.vertx.core.impl.future.PromiseInternal v1;
v0 := @this: io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160;
v1 := @parameter0: io.vertx.core.impl.future.PromiseInternal;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160: io.vertx.core.impl.future.PromiseInternal cap0> = v1;
return;
}
public void handle(java.lang.Object)
{
io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160 v0;
java.lang.Object v1;
io.vertx.core.impl.future.PromiseInternal v2;
v0 := @this: io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.core.http.impl.Http1xServerRequest$tryFail__1160: io.vertx.core.impl.future.PromiseInternal cap0>;
interfaceinvoke v2.<io.vertx.core.Promise: boolean tryFail(java.lang.Throwable)>(v1);
return;
}
}