class io.vertx.core.http.impl.HttpUtils$5 extends io.vertx.core.http.StreamPriority
{
void <init>()
{
io.vertx.core.http.impl.HttpUtils$5 v0;
v0 := @this: io.vertx.core.http.impl.HttpUtils$5;
specialinvoke v0.<io.vertx.core.http.StreamPriority: void <init>()>();
return;
}
public io.vertx.core.http.StreamPriority setWeight(short)
{
java.lang.UnsupportedOperationException v2;
short v1;
io.vertx.core.http.impl.HttpUtils$5 v0;
v0 := @this: io.vertx.core.http.impl.HttpUtils$5;
v1 := @parameter0: short;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unmodifiable stream priority");
throw v2;
}
public io.vertx.core.http.StreamPriority setDependency(int)
{
int v1;
java.lang.UnsupportedOperationException v2;
io.vertx.core.http.impl.HttpUtils$5 v0;
v0 := @this: io.vertx.core.http.impl.HttpUtils$5;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unmodifiable stream priority");
throw v2;
}
public io.vertx.core.http.StreamPriority setExclusive(boolean)
{
java.lang.UnsupportedOperationException v2;
io.vertx.core.http.impl.HttpUtils$5 v0;
boolean v1;
v0 := @this: io.vertx.core.http.impl.HttpUtils$5;
v1 := @parameter0: boolean;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("Unmodifiable stream priority");
throw v2;
}
}