public class io.vertx.core.http.impl.SharedHttpClient extends java.lang.Object implements io.vertx.core.http.impl.HttpClientInternal
{
public static final java.lang.String SHARED_MAP_NAME;
private final io.vertx.core.impl.VertxInternal vertx;
private final io.vertx.core.impl.CloseFuture closeFuture;
private final io.vertx.core.http.impl.HttpClientInternal delegate;
public void <init>(io.vertx.core.impl.VertxInternal, io.vertx.core.impl.CloseFuture, io.vertx.core.http.HttpClient)
{
io.vertx.core.impl.VertxInternal v1;
io.vertx.core.impl.CloseFuture v2;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.http.HttpClient v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.impl.VertxInternal;
v2 := @parameter1: io.vertx.core.impl.CloseFuture;
v3 := @parameter2: io.vertx.core.http.HttpClient;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.impl.VertxInternal vertx> = v1;
v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.impl.CloseFuture closeFuture> = v2;
v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate> = v3;
return;
}
public void close(io.vertx.core.Handler)
{
io.vertx.core.impl.VertxInternal v2;
io.vertx.core.impl.future.PromiseInternal v5;
io.vertx.core.impl.CloseFuture v4;
io.vertx.core.impl.ContextInternal v3;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Handler v1;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.impl.VertxInternal vertx>;
v3 = interfaceinvoke v2.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.ContextInternal getOrCreateContext()>();
v4 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.impl.CloseFuture closeFuture>;
if v1 == null goto label1;
v5 = interfaceinvoke v3.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise(io.vertx.core.Handler)>(v1);
goto label2;
label1:
v5 = null;
label2:
virtualinvoke v4.<io.vertx.core.impl.CloseFuture: void close(io.vertx.core.Promise)>(v5);
return;
}
public io.vertx.core.Future close()
{
io.vertx.core.impl.VertxInternal v1;
io.vertx.core.impl.future.PromiseInternal v3;
io.vertx.core.impl.CloseFuture v4;
io.vertx.core.impl.ContextInternal v2;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Future v5;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.impl.VertxInternal vertx>;
v2 = interfaceinvoke v1.<io.vertx.core.impl.VertxInternal: io.vertx.core.impl.ContextInternal getOrCreateContext()>();
v3 = interfaceinvoke v2.<io.vertx.core.impl.ContextInternal: io.vertx.core.impl.future.PromiseInternal promise()>();
v4 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.impl.CloseFuture closeFuture>;
virtualinvoke v4.<io.vertx.core.impl.CloseFuture: void close(io.vertx.core.Promise)>(v3);
v5 = interfaceinvoke v3.<io.vertx.core.impl.future.PromiseInternal: io.vertx.core.Future future()>();
return v5;
}
public void request(io.vertx.core.http.RequestOptions, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v3;
io.vertx.core.http.RequestOptions v1;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientInternal: void request(io.vertx.core.http.RequestOptions,io.vertx.core.Handler)>(v1, v2);
return;
}
public io.vertx.core.Future request(io.vertx.core.http.RequestOptions)
{
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.http.RequestOptions v1;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.RequestOptions;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future request(io.vertx.core.http.RequestOptions)>(v1);
return v3;
}
public void request(io.vertx.core.http.HttpMethod, int, java.lang.String, java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v6;
io.vertx.core.http.HttpMethod v1;
int v2;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v3, v4;
io.vertx.core.Handler v5;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: io.vertx.core.Handler;
v6 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v6.<io.vertx.core.http.impl.HttpClientInternal: void request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String,io.vertx.core.Handler)>(v1, v2, v3, v4, v5);
return;
}
public io.vertx.core.Future request(io.vertx.core.http.HttpMethod, int, java.lang.String, java.lang.String)
{
io.vertx.core.http.impl.HttpClientInternal v5;
io.vertx.core.http.HttpMethod v1;
int v2;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v3, v4;
io.vertx.core.Future v6;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: int;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.String;
v5 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v6 = interfaceinvoke v5.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future request(io.vertx.core.http.HttpMethod,int,java.lang.String,java.lang.String)>(v1, v2, v3, v4);
return v6;
}
public void request(io.vertx.core.http.HttpMethod, java.lang.String, java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v5;
io.vertx.core.http.HttpMethod v1;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v2, v3;
io.vertx.core.Handler v4;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.vertx.core.Handler;
v5 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v5.<io.vertx.core.http.impl.HttpClientInternal: void request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String,io.vertx.core.Handler)>(v1, v2, v3, v4);
return;
}
public io.vertx.core.Future request(io.vertx.core.http.HttpMethod, java.lang.String, java.lang.String)
{
io.vertx.core.http.impl.HttpClientInternal v4;
io.vertx.core.http.HttpMethod v1;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v2, v3;
io.vertx.core.Future v5;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v5 = interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future request(io.vertx.core.http.HttpMethod,java.lang.String,java.lang.String)>(v1, v2, v3);
return v5;
}
public void request(io.vertx.core.http.HttpMethod, java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v4;
io.vertx.core.http.HttpMethod v1;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v2;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientInternal: void request(io.vertx.core.http.HttpMethod,java.lang.String,io.vertx.core.Handler)>(v1, v2, v3);
return;
}
public io.vertx.core.Future request(io.vertx.core.http.HttpMethod, java.lang.String)
{
io.vertx.core.http.impl.HttpClientInternal v3;
io.vertx.core.http.HttpMethod v1;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v2;
io.vertx.core.Future v4;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future request(io.vertx.core.http.HttpMethod,java.lang.String)>(v1, v2);
return v4;
}
public void webSocket(int, java.lang.String, java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v5;
int v1;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v2, v3;
io.vertx.core.Handler v4;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: io.vertx.core.Handler;
v5 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v5.<io.vertx.core.http.impl.HttpClientInternal: void webSocket(int,java.lang.String,java.lang.String,io.vertx.core.Handler)>(v1, v2, v3, v4);
return;
}
public io.vertx.core.Future webSocket(int, java.lang.String, java.lang.String)
{
io.vertx.core.http.impl.HttpClientInternal v4;
int v1;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v2, v3;
io.vertx.core.Future v5;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v5 = interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future webSocket(int,java.lang.String,java.lang.String)>(v1, v2, v3);
return v5;
}
public void webSocket(java.lang.String, java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v4;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v1, v2;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v4.<io.vertx.core.http.impl.HttpClientInternal: void webSocket(java.lang.String,java.lang.String,io.vertx.core.Handler)>(v1, v2, v3);
return;
}
public io.vertx.core.Future webSocket(java.lang.String, java.lang.String)
{
io.vertx.core.http.impl.HttpClientInternal v3;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v1, v2;
io.vertx.core.Future v4;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future webSocket(java.lang.String,java.lang.String)>(v1, v2);
return v4;
}
public void webSocket(java.lang.String, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v3;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v1;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientInternal: void webSocket(java.lang.String,io.vertx.core.Handler)>(v1, v2);
return;
}
public io.vertx.core.Future webSocket(java.lang.String)
{
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v1;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future webSocket(java.lang.String)>(v1);
return v3;
}
public void webSocket(io.vertx.core.http.WebSocketConnectOptions, io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v3;
io.vertx.core.http.WebSocketConnectOptions v1;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.WebSocketConnectOptions;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v3.<io.vertx.core.http.impl.HttpClientInternal: void webSocket(io.vertx.core.http.WebSocketConnectOptions,io.vertx.core.Handler)>(v1, v2);
return;
}
public io.vertx.core.Future webSocket(io.vertx.core.http.WebSocketConnectOptions)
{
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.http.WebSocketConnectOptions v1;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.http.WebSocketConnectOptions;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future webSocket(io.vertx.core.http.WebSocketConnectOptions)>(v1);
return v3;
}
public void webSocketAbs(java.lang.String, io.vertx.core.MultiMap, io.vertx.core.http.WebsocketVersion, java.util.List, io.vertx.core.Handler)
{
java.util.List v4;
io.vertx.core.http.impl.HttpClientInternal v6;
io.vertx.core.MultiMap v2;
io.vertx.core.http.WebsocketVersion v3;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v1;
io.vertx.core.Handler v5;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.MultiMap;
v3 := @parameter2: io.vertx.core.http.WebsocketVersion;
v4 := @parameter3: java.util.List;
v5 := @parameter4: io.vertx.core.Handler;
v6 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
interfaceinvoke v6.<io.vertx.core.http.impl.HttpClientInternal: void webSocketAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.util.List,io.vertx.core.Handler)>(v1, v2, v3, v4, v5);
return;
}
public io.vertx.core.Future webSocketAbs(java.lang.String, io.vertx.core.MultiMap, io.vertx.core.http.WebsocketVersion, java.util.List)
{
java.util.List v4;
io.vertx.core.http.impl.HttpClientInternal v5;
io.vertx.core.MultiMap v2;
io.vertx.core.http.WebsocketVersion v3;
io.vertx.core.http.impl.SharedHttpClient v0;
java.lang.String v1;
io.vertx.core.Future v6;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.MultiMap;
v3 := @parameter2: io.vertx.core.http.WebsocketVersion;
v4 := @parameter3: java.util.List;
v5 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v6 = interfaceinvoke v5.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future webSocketAbs(java.lang.String,io.vertx.core.MultiMap,io.vertx.core.http.WebsocketVersion,java.util.List)>(v1, v2, v3, v4);
return v6;
}
public io.vertx.core.Future updateSSLOptions(io.vertx.core.net.SSLOptions)
{
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.net.SSLOptions v1;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Future v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.net.SSLOptions;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.Future updateSSLOptions(io.vertx.core.net.SSLOptions)>(v1);
return v3;
}
public io.vertx.core.http.HttpClient connectionHandler(io.vertx.core.Handler)
{
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.Handler v1;
io.vertx.core.http.HttpClient v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.http.HttpClient connectionHandler(io.vertx.core.Handler)>(v1);
return v3;
}
public io.vertx.core.http.HttpClient redirectHandler(java.util.function.Function)
{
io.vertx.core.http.impl.HttpClientInternal v2;
io.vertx.core.http.impl.SharedHttpClient v0;
java.util.function.Function v1;
io.vertx.core.http.HttpClient v3;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 := @parameter0: java.util.function.Function;
v2 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.http.HttpClient redirectHandler(java.util.function.Function)>(v1);
return v3;
}
public java.util.function.Function redirectHandler()
{
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.http.impl.HttpClientInternal v1;
java.util.function.Function v2;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientInternal: java.util.function.Function redirectHandler()>();
return v2;
}
public io.vertx.core.impl.VertxInternal vertx()
{
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.impl.VertxInternal v2;
io.vertx.core.http.impl.HttpClientInternal v1;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.impl.VertxInternal vertx()>();
return v2;
}
public io.vertx.core.http.HttpClientOptions options()
{
io.vertx.core.http.HttpClientOptions v2;
io.vertx.core.http.impl.SharedHttpClient v0;
io.vertx.core.http.impl.HttpClientInternal v1;
v0 := @this: io.vertx.core.http.impl.SharedHttpClient;
v1 = v0.<io.vertx.core.http.impl.SharedHttpClient: io.vertx.core.http.impl.HttpClientInternal delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.http.impl.HttpClientInternal: io.vertx.core.http.HttpClientOptions options()>();
return v2;
}
}