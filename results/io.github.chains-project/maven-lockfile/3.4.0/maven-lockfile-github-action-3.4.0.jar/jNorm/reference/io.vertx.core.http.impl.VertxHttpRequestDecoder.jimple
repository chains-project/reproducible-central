public class io.vertx.core.http.impl.VertxHttpRequestDecoder extends io.netty.handler.codec.http.HttpRequestDecoder
{
public void <init>(io.vertx.core.http.HttpServerOptions)
{
io.vertx.core.http.impl.VertxHttpRequestDecoder v0;
int v2, v3, v4, v7;
io.vertx.core.http.HttpServerOptions v1;
boolean v5, v6;
v0 := @this: io.vertx.core.http.impl.VertxHttpRequestDecoder;
v1 := @parameter0: io.vertx.core.http.HttpServerOptions;
v2 = virtualinvoke v1.<io.vertx.core.http.HttpServerOptions: int getMaxInitialLineLength()>();
v3 = virtualinvoke v1.<io.vertx.core.http.HttpServerOptions: int getMaxHeaderSize()>();
v4 = virtualinvoke v1.<io.vertx.core.http.HttpServerOptions: int getMaxChunkSize()>();
v5 = <io.vertx.core.http.HttpHeaders: boolean DISABLE_HTTP_HEADERS_VALIDATION>;
if v5 != 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
v7 = virtualinvoke v1.<io.vertx.core.http.HttpServerOptions: int getDecoderInitialBufferSize()>();
specialinvoke v0.<io.netty.handler.codec.http.HttpRequestDecoder: void <init>(int,int,int,boolean,int)>(v2, v3, v4, v6, v7);
return;
}
protected io.netty.handler.codec.http.HttpMessage createMessage(java.lang.String[])
{
io.netty.handler.codec.http.HttpVersion v4;
io.vertx.core.http.impl.VertxHttpRequestDecoder v0;
io.netty.handler.codec.http.HttpMethod v6;
java.lang.String[] v1;
io.vertx.core.http.impl.headers.HeadersMultiMap v8;
io.netty.handler.codec.http.DefaultHttpRequest v2;
java.lang.String v3, v5, v7;
v0 := @this: io.vertx.core.http.impl.VertxHttpRequestDecoder;
v1 := @parameter0: java.lang.String[];
v2 = new io.netty.handler.codec.http.DefaultHttpRequest;
v3 = v1[2];
v4 = staticinvoke <io.netty.handler.codec.http.HttpVersion: io.netty.handler.codec.http.HttpVersion valueOf(java.lang.String)>(v3);
v5 = v1[0];
v6 = staticinvoke <io.netty.handler.codec.http.HttpMethod: io.netty.handler.codec.http.HttpMethod valueOf(java.lang.String)>(v5);
v7 = v1[1];
v8 = staticinvoke <io.vertx.core.http.impl.headers.HeadersMultiMap: io.vertx.core.http.impl.headers.HeadersMultiMap httpHeaders()>();
specialinvoke v2.<io.netty.handler.codec.http.DefaultHttpRequest: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpMethod,java.lang.String,io.netty.handler.codec.http.HttpHeaders)>(v4, v6, v7, v8);
return v2;
}
protected boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage)
{
io.netty.handler.codec.http.HttpMessage v1;
io.vertx.core.http.impl.VertxHttpRequestDecoder v0;
java.lang.Class v2;
boolean v3;
v0 := @this: io.vertx.core.http.impl.VertxHttpRequestDecoder;
v1 := @parameter0: io.netty.handler.codec.http.HttpMessage;
if v1 != null goto label1;
return 0;
label1:
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 != class "Lio/netty/handler/codec/http/DefaultHttpRequest;" goto label2;
return 0;
label2:
v3 = specialinvoke v0.<io.netty.handler.codec.http.HttpRequestDecoder: boolean isContentAlwaysEmpty(io.netty.handler.codec.http.HttpMessage)>(v1);
return v3;
}
}