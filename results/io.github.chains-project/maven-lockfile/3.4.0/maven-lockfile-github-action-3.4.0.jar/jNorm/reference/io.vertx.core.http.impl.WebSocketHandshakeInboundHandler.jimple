class io.vertx.core.http.impl.WebSocketHandshakeInboundHandler extends io.netty.channel.ChannelInboundHandlerAdapter
{
private final io.vertx.core.Handler wsHandler;
private final io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker;
private io.netty.channel.ChannelHandlerContext chctx;
private io.netty.handler.codec.http.FullHttpResponse response;
private io.netty.channel.ChannelFuture fut;
void <init>(io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker, io.vertx.core.Handler)
{
io.vertx.core.Handler v2;
io.vertx.core.http.impl.WebSocketHandshakeInboundHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v1;
v0 := @this: io.vertx.core.http.impl.WebSocketHandshakeInboundHandler;
v1 := @parameter0: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker;
v2 := @parameter1: io.vertx.core.Handler;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void <init>()>();
v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker> = v1;
v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.vertx.core.Handler wsHandler> = v2;
return;
}
public void handlerAdded(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.Channel v3;
io.netty.channel.ChannelHandlerContext v1;
io.vertx.core.http.impl.WebSocketHandshakeInboundHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker v2;
io.netty.channel.ChannelFuture v4;
v0 := @this: io.vertx.core.http.impl.WebSocketHandshakeInboundHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void handlerAdded(io.netty.channel.ChannelHandlerContext)>(v1);
v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.channel.ChannelHandlerContext chctx> = v1;
v2 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker handshaker>;
v3 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.Channel channel()>();
v4 = virtualinvoke v2.<io.netty.handler.codec.http.websocketx.WebSocketClientHandshaker: io.netty.channel.ChannelFuture handshake(io.netty.channel.Channel)>(v3);
v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.channel.ChannelFuture fut> = v4;
return;
}
public void channelInactive(io.netty.channel.ChannelHandlerContext) throws java.lang.Exception
{
io.netty.channel.ChannelHandlerContext v1;
io.vertx.core.http.impl.WebSocketHandshakeInboundHandler v0;
io.netty.handler.codec.http.websocketx.WebSocketHandshakeException v3;
io.vertx.core.Handler v2;
io.vertx.core.Future v4;
v0 := @this: io.vertx.core.http.impl.WebSocketHandshakeInboundHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
specialinvoke v0.<io.netty.channel.ChannelInboundHandlerAdapter: void channelInactive(io.netty.channel.ChannelHandlerContext)>(v1);
v2 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.vertx.core.Handler wsHandler>;
v3 = new io.netty.handler.codec.http.websocketx.WebSocketHandshakeException;
specialinvoke v3.<io.netty.handler.codec.http.websocketx.WebSocketHandshakeException: void <init>(java.lang.String)>("Connection closed while handshake in process");
v4 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future failedFuture(java.lang.Throwable)>(v3);
interfaceinvoke v2.<io.vertx.core.Handler: void handle(java.lang.Object)>(v4);
return;
}
public void channelRead(io.netty.channel.ChannelHandlerContext, java.lang.Object)
{
java.lang.Throwable v24;
io.netty.handler.codec.http.HttpVersion v5;
io.netty.handler.codec.http.HttpHeaders v17, v18, v8, v9;
io.netty.channel.ChannelHandlerContext v1, v19;
io.netty.buffer.ByteBuf v13, v14;
io.vertx.core.http.impl.WebSocketHandshakeInboundHandler v0;
boolean v10, v15, v3;
io.netty.handler.codec.http.HttpResponseStatus v6;
io.netty.channel.ChannelPipeline v20, v22;
io.netty.handler.codec.http.FullHttpResponse v11, v12, v16, v23, v7;
io.netty.handler.codec.http.DefaultFullHttpResponse v4;
io.netty.channel.ChannelHandler v21;
java.lang.Object v2;
v0 := @this: io.vertx.core.http.impl.WebSocketHandshakeInboundHandler;
v1 := @parameter0: io.netty.channel.ChannelHandlerContext;
v2 := @parameter1: java.lang.Object;
v3 = v2 instanceof io.netty.handler.codec.http.HttpResponse;
if v3 == 0 goto label1;
v4 = new io.netty.handler.codec.http.DefaultFullHttpResponse;
v5 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpVersion protocolVersion()>();
v6 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
specialinvoke v4.<io.netty.handler.codec.http.DefaultFullHttpResponse: void <init>(io.netty.handler.codec.http.HttpVersion,io.netty.handler.codec.http.HttpResponseStatus)>(v5, v6);
v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.FullHttpResponse response> = v4;
v7 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.FullHttpResponse response>;
v8 = interfaceinvoke v7.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
v9 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
virtualinvoke v8.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v9);
label1:
v10 = v2 instanceof io.netty.handler.codec.http.HttpContent;
if v10 == 0 goto label6;
label2:
v11 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.FullHttpResponse response>;
if v11 == null goto label4;
v12 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.FullHttpResponse response>;
v13 = interfaceinvoke v12.<io.netty.handler.codec.http.FullHttpResponse: io.netty.buffer.ByteBuf content()>();
v14 = interfaceinvoke v2.<io.netty.handler.codec.http.HttpContent: io.netty.buffer.ByteBuf content()>();
virtualinvoke v13.<io.netty.buffer.ByteBuf: io.netty.buffer.ByteBuf writeBytes(io.netty.buffer.ByteBuf)>(v14);
v15 = v2 instanceof io.netty.handler.codec.http.LastHttpContent;
if v15 == 0 goto label4;
v16 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.FullHttpResponse response>;
v17 = interfaceinvoke v16.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders trailingHeaders()>();
v18 = interfaceinvoke v2.<io.netty.handler.codec.http.LastHttpContent: io.netty.handler.codec.http.HttpHeaders trailingHeaders()>();
virtualinvoke v17.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(io.netty.handler.codec.http.HttpHeaders)>(v18);
v19 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.channel.ChannelHandlerContext chctx>;
v20 = interfaceinvoke v19.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v20.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v0);
v21 = interfaceinvoke v20.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelHandler get(java.lang.Class)>(class "Lio/netty/handler/codec/http/HttpContentDecompressor;");
if v21 == null goto label3;
v22 = interfaceinvoke v1.<io.netty.channel.ChannelHandlerContext: io.netty.channel.ChannelPipeline pipeline()>();
interfaceinvoke v22.<io.netty.channel.ChannelPipeline: io.netty.channel.ChannelPipeline remove(io.netty.channel.ChannelHandler)>(v21);
label3:
v23 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.handler.codec.http.FullHttpResponse response>;
specialinvoke v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: void handshakeComplete(io.netty.handler.codec.http.FullHttpResponse)>(v23);
label4:
interfaceinvoke v2.<io.netty.handler.codec.http.HttpContent: boolean release()>();
goto label6;
label5:
v24 := @caughtexception;
interfaceinvoke v2.<io.netty.handler.codec.http.HttpContent: boolean release()>();
throw v24;
label6:
return;
catch java.lang.Throwable from label2 to label4 with label5;
}
private void handshakeComplete(io.netty.handler.codec.http.FullHttpResponse)
{
io.netty.handler.codec.http.HttpHeaders v8;
io.netty.util.concurrent.GenericFutureListener v13;
io.netty.handler.codec.http.HttpResponseStatus v2;
io.vertx.core.Future v11;
io.netty.channel.ChannelFuture v12;
io.netty.handler.codec.http.FullHttpResponse v1;
io.vertx.core.http.impl.headers.HeadersAdaptor v7;
io.vertx.core.http.UpgradeRejectedException v6;
io.netty.buffer.ByteBuf v5;
io.vertx.core.buffer.Buffer v9;
io.vertx.core.http.impl.WebSocketHandshakeInboundHandler v0;
int v3;
java.lang.String v4;
io.vertx.core.Handler v10;
v0 := @this: io.vertx.core.http.impl.WebSocketHandshakeInboundHandler;
v1 := @parameter0: io.netty.handler.codec.http.FullHttpResponse;
v2 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpResponseStatus status()>();
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpResponseStatus: int code()>();
if v3 == 101 goto label3;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("WebSocket upgrade failure: \u0001");
v5 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.buffer.ByteBuf content()>();
v6 = new io.vertx.core.http.UpgradeRejectedException;
v7 = new io.vertx.core.http.impl.headers.HeadersAdaptor;
v8 = interfaceinvoke v1.<io.netty.handler.codec.http.FullHttpResponse: io.netty.handler.codec.http.HttpHeaders headers()>();
specialinvoke v7.<io.vertx.core.http.impl.headers.HeadersAdaptor: void <init>(io.netty.handler.codec.http.HttpHeaders)>(v8);
if v5 == null goto label1;
v9 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(io.netty.buffer.ByteBuf)>(v5);
goto label2;
label1:
v9 = null;
label2:
specialinvoke v6.<io.vertx.core.http.UpgradeRejectedException: void <init>(java.lang.String,int,io.vertx.core.MultiMap,io.vertx.core.buffer.Buffer)>(v4, v3, v7, v9);
v10 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.vertx.core.Handler wsHandler>;
v11 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future failedFuture(java.lang.Throwable)>(v6);
interfaceinvoke v10.<io.vertx.core.Handler: void handle(java.lang.Object)>(v11);
goto label4;
label3:
v12 = v0.<io.vertx.core.http.impl.WebSocketHandshakeInboundHandler: io.netty.channel.ChannelFuture fut>;
v13 = staticinvoke <io.vertx.core.http.impl.WebSocketHandshakeInboundHandler$lambda_handshakeComplete_0__1012: io.netty.util.concurrent.GenericFutureListener bootstrap$(io.vertx.core.http.impl.WebSocketHandshakeInboundHandler,io.netty.handler.codec.http.FullHttpResponse)>(v0, v1);
interfaceinvoke v12.<io.netty.channel.ChannelFuture: io.netty.channel.ChannelFuture addListener(io.netty.util.concurrent.GenericFutureListener)>(v13);
label4:
return;
}
}