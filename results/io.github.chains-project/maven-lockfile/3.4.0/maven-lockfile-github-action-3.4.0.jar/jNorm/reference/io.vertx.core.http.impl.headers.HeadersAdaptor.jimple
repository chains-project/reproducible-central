public class io.vertx.core.http.impl.headers.HeadersAdaptor extends java.lang.Object implements io.vertx.core.MultiMap
{
private final io.netty.handler.codec.http.HttpHeaders headers;
public void <init>(io.netty.handler.codec.http.HttpHeaders)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: io.netty.handler.codec.http.HttpHeaders;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers> = v1;
return;
}
public java.lang.String get(java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.String v1, v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.String)>(v1);
return v3;
}
public java.util.List getAll(java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.List v3;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.String)>(v1);
return v3;
}
public java.util.List entries()
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.List v2;
io.netty.handler.codec.http.HttpHeaders v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.util.List entries()>();
return v2;
}
public boolean contains(java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.String v1;
boolean v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.String)>(v1);
return v3;
}
public boolean isEmpty()
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v1;
boolean v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: boolean isEmpty()>();
return v2;
}
public java.util.Set names()
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.Set v2;
io.netty.handler.codec.http.HttpHeaders v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.util.Set names()>();
return v2;
}
public io.vertx.core.MultiMap add(java.lang.String, java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.String v1, v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Object)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap add(java.lang.String, java.lang.Iterable)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.String,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap addAll(io.vertx.core.MultiMap)
{
java.util.Iterator v3;
io.vertx.core.MultiMap v1;
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.List v2;
java.lang.Object v5, v6, v7;
boolean v4;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: io.vertx.core.MultiMap;
v2 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.util.List entries()>();
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.vertx.core.MultiMap add(java.lang.String,java.lang.String)>(v6, v7);
goto label1;
label2:
return v0;
}
public io.vertx.core.MultiMap addAll(java.util.Map)
{
java.util.Iterator v3;
java.util.Set v2;
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.Map v1;
java.lang.Object v5, v6, v7;
boolean v4;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.vertx.core.MultiMap add(java.lang.String,java.lang.String)>(v6, v7);
goto label1;
label2:
return v0;
}
public io.vertx.core.MultiMap set(java.lang.String, java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3, v4;
java.lang.String v1, v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Object)>(v1, v2);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.String)>(v1);
label2:
return v0;
}
public io.vertx.core.MultiMap set(java.lang.String, java.lang.Iterable)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.String v1;
java.lang.Iterable v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.String,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap setAll(io.vertx.core.MultiMap)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.Iterator v2;
io.vertx.core.MultiMap v1;
java.lang.Object v4, v5, v6;
boolean v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: io.vertx.core.MultiMap;
virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.vertx.core.MultiMap clear()>();
v2 = interfaceinvoke v1.<io.vertx.core.MultiMap: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.vertx.core.MultiMap add(java.lang.String,java.lang.String)>(v5, v6);
goto label1;
label2:
return v0;
}
public io.vertx.core.MultiMap remove(java.lang.String)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.String v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.String)>(v1);
return v0;
}
public io.vertx.core.MultiMap clear()
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders clear()>();
return v0;
}
public java.util.Iterator iterator()
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v1;
java.util.Iterator v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v2 = virtualinvoke v1.<io.netty.handler.codec.http.HttpHeaders: java.util.Iterator iteratorAsString()>();
return v2;
}
public int size()
{
int v2;
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.Set v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: java.util.Set names()>();
v2 = interfaceinvoke v1.<java.util.Set: int size()>();
return v2;
}
public io.vertx.core.MultiMap setAll(java.util.Map)
{
java.util.Iterator v3;
java.util.Set v2;
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.Map v1;
java.lang.Object v5, v6, v7;
boolean v4;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.util.Map;
virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.vertx.core.MultiMap clear()>();
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.vertx.core.MultiMap add(java.lang.String,java.lang.String)>(v6, v7);
goto label1;
label2:
return v0;
}
public java.lang.String get(java.lang.CharSequence)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
java.lang.String v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.lang.String get(java.lang.CharSequence)>(v1);
return v3;
}
public java.util.List getAll(java.lang.CharSequence)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.List v3;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: java.util.List getAll(java.lang.CharSequence)>(v1);
return v3;
}
public boolean contains(java.lang.CharSequence)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
boolean v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v3 = virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence)>(v1);
return v3;
}
public boolean contains(java.lang.String, java.lang.String, boolean)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v4;
java.lang.String v1, v2;
boolean v3, v5;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: boolean;
v4 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.String,java.lang.String,boolean)>(v1, v2, v3);
return v5;
}
public boolean contains(java.lang.CharSequence, java.lang.CharSequence, boolean)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v4;
java.lang.CharSequence v1, v2;
boolean v3, v5;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 := @parameter2: boolean;
v4 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
v5 = virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: boolean contains(java.lang.CharSequence,java.lang.CharSequence,boolean)>(v1, v2, v3);
return v5;
}
public io.vertx.core.MultiMap add(java.lang.CharSequence, java.lang.CharSequence)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1, v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Object)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap add(java.lang.CharSequence, java.lang.Iterable)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
java.lang.Iterable v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders add(java.lang.CharSequence,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap set(java.lang.CharSequence, java.lang.CharSequence)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3, v4;
java.lang.CharSequence v1, v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.CharSequence;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Object)>(v1, v2);
goto label2;
label1:
v4 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v4.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v1);
label2:
return v0;
}
public io.vertx.core.MultiMap set(java.lang.CharSequence, java.lang.Iterable)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v3;
java.lang.CharSequence v1;
java.lang.Iterable v2;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: java.lang.Iterable;
v3 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v3.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders set(java.lang.CharSequence,java.lang.Iterable)>(v1, v2);
return v0;
}
public io.vertx.core.MultiMap remove(java.lang.CharSequence)
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
io.netty.handler.codec.http.HttpHeaders v2;
java.lang.CharSequence v1;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 := @parameter0: java.lang.CharSequence;
v2 = v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: io.netty.handler.codec.http.HttpHeaders headers>;
virtualinvoke v2.<io.netty.handler.codec.http.HttpHeaders: io.netty.handler.codec.http.HttpHeaders remove(java.lang.CharSequence)>(v1);
return v0;
}
public java.lang.String toString()
{
io.vertx.core.http.impl.headers.HeadersAdaptor v0;
java.util.Iterator v2;
java.lang.Object v4;
java.lang.StringBuilder v1, v5;
java.lang.String v6;
boolean v3;
v0 := @this: io.vertx.core.http.impl.headers.HeadersAdaptor;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<io.vertx.core.http.impl.headers.HeadersAdaptor: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.Object)>(v4);
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(10);
goto label1;
label2:
v6 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v6;
}
}