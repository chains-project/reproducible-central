public class io.vertx.core.impl.Arguments extends java.lang.Object
{
public void <init>()
{
io.vertx.core.impl.Arguments v0;
v0 := @this: io.vertx.core.impl.Arguments;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static void require(boolean, java.lang.String)
{
java.lang.String v1;
java.lang.IllegalArgumentException v2;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: java.lang.String;
if v0 != 0 goto label1;
v2 = new java.lang.IllegalArgumentException;
specialinvoke v2.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v1);
throw v2;
label1:
return;
}
public static void requireInRange(int, int, int, java.lang.String)
{
int v0, v1, v2;
java.lang.String v3;
java.lang.IllegalArgumentException v4;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: java.lang.String;
if v0 < v1 goto label1;
if v0 <= v2 goto label2;
label1:
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v3);
throw v4;
label2:
return;
}
}