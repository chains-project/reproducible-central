class io.vertx.core.impl.future.Mapping extends io.vertx.core.impl.future.Operation implements io.vertx.core.impl.future.Listener
{
private final java.util.function.Function successMapper;
void <init>(io.vertx.core.impl.ContextInternal, java.util.function.Function)
{
io.vertx.core.impl.ContextInternal v1;
java.util.function.Function v2;
io.vertx.core.impl.future.Mapping v0;
v0 := @this: io.vertx.core.impl.future.Mapping;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.util.function.Function;
specialinvoke v0.<io.vertx.core.impl.future.Operation: void <init>(io.vertx.core.impl.ContextInternal)>(v1);
v0.<io.vertx.core.impl.future.Mapping: java.util.function.Function successMapper> = v2;
return;
}
public void onSuccess(java.lang.Object)
{
java.lang.Throwable v4;
io.vertx.core.impl.future.Mapping v0;
java.lang.Object v1, v3;
java.util.function.Function v2;
v0 := @this: io.vertx.core.impl.future.Mapping;
v1 := @parameter0: java.lang.Object;
label1:
v2 = v0.<io.vertx.core.impl.future.Mapping: java.util.function.Function successMapper>;
v3 = interfaceinvoke v2.<java.util.function.Function: java.lang.Object apply(java.lang.Object)>(v1);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<io.vertx.core.impl.future.Mapping: boolean tryFail(java.lang.Throwable)>(v4);
return;
label4:
virtualinvoke v0.<io.vertx.core.impl.future.Mapping: boolean tryComplete(java.lang.Object)>(v3);
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void onFailure(java.lang.Throwable)
{
java.lang.Throwable v1;
io.vertx.core.impl.future.Mapping v0;
v0 := @this: io.vertx.core.impl.future.Mapping;
v1 := @parameter0: java.lang.Throwable;
virtualinvoke v0.<io.vertx.core.impl.future.Mapping: boolean tryFail(java.lang.Throwable)>(v1);
return;
}
}