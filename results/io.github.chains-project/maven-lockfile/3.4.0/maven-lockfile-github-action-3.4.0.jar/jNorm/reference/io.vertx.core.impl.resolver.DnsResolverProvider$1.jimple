class io.vertx.core.impl.resolver.DnsResolverProvider$1 extends java.lang.Object implements io.netty.resolver.HostsFileEntriesResolver
{
final io.netty.resolver.HostsFileEntries val$entries;
final io.vertx.core.impl.resolver.DnsResolverProvider this$0;
void <init>(io.vertx.core.impl.resolver.DnsResolverProvider, io.netty.resolver.HostsFileEntries)
{
io.netty.resolver.HostsFileEntries v2;
io.vertx.core.impl.resolver.DnsResolverProvider v1;
io.vertx.core.impl.resolver.DnsResolverProvider$1 v0;
v0 := @this: io.vertx.core.impl.resolver.DnsResolverProvider$1;
v1 := @parameter0: io.vertx.core.impl.resolver.DnsResolverProvider;
v2 := @parameter1: io.netty.resolver.HostsFileEntries;
v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.vertx.core.impl.resolver.DnsResolverProvider this$0> = v1;
v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public java.net.InetAddress address(java.lang.String, io.netty.resolver.ResolvedAddressTypes)
{
io.vertx.core.impl.resolver.DnsResolverProvider$1 v0;
java.net.InetAddress v6;
java.util.Locale v7;
int v4, v5;
io.netty.resolver.ResolvedAddressTypes v2;
java.lang.String v1, v8;
boolean v3;
v0 := @this: io.vertx.core.impl.resolver.DnsResolverProvider$1;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.resolver.ResolvedAddressTypes;
v3 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>(".");
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<java.lang.String: int length()>();
v5 = v4 - 1;
v1 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v5);
label1:
v6 = virtualinvoke v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: java.net.InetAddress lookup(java.lang.String,io.netty.resolver.ResolvedAddressTypes)>(v1, v2);
if v6 != null goto label2;
v7 = <java.util.Locale: java.util.Locale ENGLISH>;
v8 = virtualinvoke v1.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v7);
v6 = virtualinvoke v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: java.net.InetAddress lookup(java.lang.String,io.netty.resolver.ResolvedAddressTypes)>(v8, v2);
label2:
return v6;
}
java.net.InetAddress lookup(java.lang.String, io.netty.resolver.ResolvedAddressTypes)
{
io.netty.resolver.HostsFileEntries v12, v15, v18, v21, v6, v9;
int[] v3;
java.util.Map v10, v13, v16, v19, v22, v7;
int v4, v5;
java.lang.String v1, v25;
io.vertx.core.impl.resolver.DnsResolverProvider$1 v0;
java.lang.IllegalArgumentException v24;
io.netty.resolver.ResolvedAddressTypes v2;
java.lang.Object v11, v14, v17, v20, v23, v8;
v0 := @this: io.vertx.core.impl.resolver.DnsResolverProvider$1;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.netty.resolver.ResolvedAddressTypes;
v3 = <io.vertx.core.impl.resolver.DnsResolverProvider$3: int[] $SwitchMap$io$netty$resolver$ResolvedAddressTypes>;
v4 = virtualinvoke v2.<io.netty.resolver.ResolvedAddressTypes: int ordinal()>();
v5 = v3[v4];
tableswitch(v5)
{
case 1: goto label1;
case 2: goto label2;
case 3: goto label3;
case 4: goto label5;
default: goto label7;
};
label1:
v6 = v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries>;
v7 = virtualinvoke v6.<io.netty.resolver.HostsFileEntries: java.util.Map inet4Entries()>();
v8 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v8;
label2:
v9 = v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries>;
v10 = virtualinvoke v9.<io.netty.resolver.HostsFileEntries: java.util.Map inet6Entries()>();
v11 = interfaceinvoke v10.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v11;
label3:
v12 = v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries>;
v13 = virtualinvoke v12.<io.netty.resolver.HostsFileEntries: java.util.Map inet4Entries()>();
v14 = interfaceinvoke v13.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v14 != null goto label4;
v15 = v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries>;
v16 = virtualinvoke v15.<io.netty.resolver.HostsFileEntries: java.util.Map inet6Entries()>();
v17 = interfaceinvoke v16.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
label4:
return v17;
label5:
v18 = v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries>;
v19 = virtualinvoke v18.<io.netty.resolver.HostsFileEntries: java.util.Map inet6Entries()>();
v20 = interfaceinvoke v19.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v20 != null goto label6;
v21 = v0.<io.vertx.core.impl.resolver.DnsResolverProvider$1: io.netty.resolver.HostsFileEntries val$entries>;
v22 = virtualinvoke v21.<io.netty.resolver.HostsFileEntries: java.util.Map inet4Entries()>();
v23 = interfaceinvoke v22.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
label6:
return v23;
label7:
v24 = new java.lang.IllegalArgumentException;
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (io.netty.resolver.ResolvedAddressTypes)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unknown ResolvedAddressTypes \u0001");
specialinvoke v24.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v25);
throw v24;
}
}