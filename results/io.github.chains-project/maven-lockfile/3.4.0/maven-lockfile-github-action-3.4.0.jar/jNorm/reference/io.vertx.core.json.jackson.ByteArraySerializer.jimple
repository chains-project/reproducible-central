class io.vertx.core.json.jackson.ByteArraySerializer extends com.fasterxml.jackson.databind.JsonSerializer
{
void <init>()
{
io.vertx.core.json.jackson.ByteArraySerializer v0;
v0 := @this: io.vertx.core.json.jackson.ByteArraySerializer;
specialinvoke v0.<com.fasterxml.jackson.databind.JsonSerializer: void <init>()>();
return;
}
public void serialize(byte[], com.fasterxml.jackson.core.JsonGenerator, com.fasterxml.jackson.databind.SerializerProvider) throws java.io.IOException
{
byte[] v1;
com.fasterxml.jackson.core.JsonGenerator v2;
java.util.Base64$Encoder v4;
com.fasterxml.jackson.databind.SerializerProvider v3;
java.lang.String v5;
io.vertx.core.json.jackson.ByteArraySerializer v0;
v0 := @this: io.vertx.core.json.jackson.ByteArraySerializer;
v1 := @parameter0: byte[];
v2 := @parameter1: com.fasterxml.jackson.core.JsonGenerator;
v3 := @parameter2: com.fasterxml.jackson.databind.SerializerProvider;
v4 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
v5 = virtualinvoke v4.<java.util.Base64$Encoder: java.lang.String encodeToString(byte[])>(v1);
virtualinvoke v2.<com.fasterxml.jackson.core.JsonGenerator: void writeString(java.lang.String)>(v5);
return;
}
}