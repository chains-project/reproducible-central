public class io.vertx.core.json.pointer.impl.JsonPointerImpl extends java.lang.Object implements io.vertx.core.json.pointer.JsonPointer
{
public static final java.util.regex.Pattern VALID_POINTER_PATTERN;
java.net.URI startingUri;
java.util.List decodedTokens;
public void <init>(java.net.URI)
{
java.lang.String v3;
java.net.URI v1, v2;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.util.ArrayList v4;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.net.URI;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI removeFragment(java.net.URI)>(v1);
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri> = v2;
v3 = virtualinvoke v1.<java.net.URI: java.lang.String getFragment()>();
v4 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.ArrayList parse(java.lang.String)>(v3);
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens> = v4;
return;
}
public void <init>(java.lang.String)
{
java.lang.String v1;
java.net.URI v2;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.util.ArrayList v3;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("#");
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri> = v2;
v3 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.ArrayList parse(java.lang.String)>(v1);
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens> = v3;
return;
}
public void <init>()
{
java.net.URI v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.util.ArrayList v2;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = staticinvoke <java.net.URI: java.net.URI create(java.lang.String)>("#");
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri> = v1;
v2 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.ArrayList parse(java.lang.String)>(null);
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens> = v2;
return;
}
protected void <init>(java.net.URI, java.util.List)
{
java.util.List v2;
java.net.URI v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.util.ArrayList v3;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: java.util.List;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri> = v1;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>(java.util.Collection)>(v2);
v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens> = v3;
return;
}
private java.util.ArrayList parse(java.lang.String)
{
java.lang.String[] v9;
java.util.function.Function v12;
java.util.function.Supplier v14;
java.util.ArrayList v4;
java.util.regex.Matcher v6;
int v8;
java.lang.String v1, v2;
java.util.stream.Collector v15;
boolean v3, v7;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.lang.IllegalArgumentException v17;
java.util.stream.Stream v10, v11, v13;
java.lang.Object v16;
java.util.regex.Pattern v5;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.String;
if v1 == null goto label1;
v2 = "";
v3 = virtualinvoke v2.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v3 == 0 goto label2;
label1:
v4 = new java.util.ArrayList;
specialinvoke v4.<java.util.ArrayList: void <init>()>();
return v4;
label2:
v5 = <io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.regex.Pattern VALID_POINTER_PATTERN>;
v6 = virtualinvoke v5.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v1);
v7 = virtualinvoke v6.<java.util.regex.Matcher: boolean matches()>();
if v7 == 0 goto label3;
v8 = (int) -1;
v9 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String,int)>("\\/", v8);
v10 = staticinvoke <java.util.Arrays: java.util.stream.Stream stream(java.lang.Object[])>(v9);
v11 = interfaceinvoke v10.<java.util.stream.Stream: java.util.stream.Stream skip(long)>(1L);
v12 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$unescape__1167: java.util.function.Function bootstrap$(io.vertx.core.json.pointer.impl.JsonPointerImpl)>(v0);
v13 = interfaceinvoke v11.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v12);
v14 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$init__1168: java.util.function.Supplier bootstrap$()>();
v15 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toCollection(java.util.function.Supplier)>(v14);
v16 = interfaceinvoke v13.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v15);
return v16;
label3:
v17 = new java.lang.IllegalArgumentException;
specialinvoke v17.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The provided pointer is not a valid JSON Pointer");
throw v17;
}
public java.lang.String escape(java.lang.String)
{
java.lang.String v1, v2, v3;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("~", "~0");
v3 = virtualinvoke v2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("/", "~1");
return v3;
}
public java.lang.String unescape(java.lang.String)
{
java.lang.String v1, v2, v3;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("~1", "/");
v3 = virtualinvoke v2.<java.lang.String: java.lang.String replace(java.lang.CharSequence,java.lang.CharSequence)>("~0", "~");
return v3;
}
public boolean isRootPointer()
{
java.util.List v1;
int v2;
boolean v3;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
if v2 != 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean isLocalPointer()
{
java.lang.String v3, v5;
java.net.URI v1, v2, v4;
boolean v6, v7;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
if v1 == null goto label1;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v3 = virtualinvoke v2.<java.net.URI: java.lang.String getSchemeSpecificPart()>();
if v3 == null goto label1;
v4 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v5 = virtualinvoke v4.<java.net.URI: java.lang.String getSchemeSpecificPart()>();
v6 = virtualinvoke v5.<java.lang.String: boolean isEmpty()>();
if v6 == 0 goto label2;
label1:
v7 = 1;
goto label3;
label2:
v7 = 0;
label3:
return v7;
}
public boolean isParent(io.vertx.core.json.pointer.JsonPointer)
{
java.util.stream.IntStream v13;
int v10, v12, v8;
java.lang.Boolean v18;
java.net.URI v2, v3, v4, v5;
boolean v20, v21, v6;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.util.function.IntFunction v14;
java.util.function.BinaryOperator v16;
java.util.List v11, v7, v9;
java.util.stream.Stream v15;
java.util.Optional v17;
java.lang.Object v19;
io.vertx.core.json.pointer.JsonPointer v1;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: io.vertx.core.json.pointer.JsonPointer;
if v1 == null goto label3;
v2 = virtualinvoke v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI getURIWithoutFragment()>();
if v2 != null goto label1;
v3 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI getURIWithoutFragment()>();
if v3 == null goto label2;
label1:
v4 = virtualinvoke v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI getURIWithoutFragment()>();
v5 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI getURIWithoutFragment()>();
v6 = virtualinvoke v4.<java.net.URI: boolean equals(java.lang.Object)>(v5);
if v6 == 0 goto label3;
label2:
v7 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v8 = interfaceinvoke v7.<java.util.List: int size()>();
v9 = v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v10 = interfaceinvoke v9.<java.util.List: int size()>();
if v8 >= v10 goto label3;
v11 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v12 = interfaceinvoke v11.<java.util.List: int size()>();
v13 = staticinvoke <java.util.stream.IntStream: java.util.stream.IntStream range(int,int)>(0, v12);
v14 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$lambda_isParent_0__1169: java.util.function.IntFunction bootstrap$(io.vertx.core.json.pointer.impl.JsonPointerImpl,io.vertx.core.json.pointer.impl.JsonPointerImpl)>(v0, v1);
v15 = interfaceinvoke v13.<java.util.stream.IntStream: java.util.stream.Stream mapToObj(java.util.function.IntFunction)>(v14);
v16 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$logicalAnd__1170: java.util.function.BinaryOperator bootstrap$()>();
v17 = interfaceinvoke v15.<java.util.stream.Stream: java.util.Optional reduce(java.util.function.BinaryOperator)>(v16);
v18 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(1);
v19 = virtualinvoke v17.<java.util.Optional: java.lang.Object orElse(java.lang.Object)>(v18);
v20 = virtualinvoke v19.<java.lang.Boolean: boolean booleanValue()>();
if v20 == 0 goto label3;
v21 = 1;
goto label4;
label3:
v21 = 0;
label4:
return v21;
}
public java.lang.String toString()
{
java.util.function.Function v4;
java.util.List v2;
java.util.stream.Stream v3, v5;
java.lang.Object v7;
java.lang.String v8, v9;
java.util.stream.Collector v6;
boolean v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean isRootPointer()>();
if v1 == 0 goto label1;
return "";
label1:
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v3 = interfaceinvoke v2.<java.util.List: java.util.stream.Stream stream()>();
v4 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$escape__1171: java.util.function.Function bootstrap$(io.vertx.core.json.pointer.impl.JsonPointerImpl)>(v0);
v5 = interfaceinvoke v3.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v4);
v6 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v7 = interfaceinvoke v5.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v6);
v8 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>("/", v7);
v9 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v8) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/\u0001");
return v9;
}
public java.net.URI toURI()
{
java.util.function.Function v7;
java.util.List v5;
java.util.stream.Stream v6, v8;
java.lang.Object v10;
java.lang.String v11, v12;
java.net.URI v13, v2, v3, v4;
java.util.stream.Collector v9;
boolean v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean isRootPointer()>();
if v1 == 0 goto label1;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v3 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI replaceFragment(java.net.URI,java.lang.String)>(v2, "");
return v3;
label1:
v4 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v5 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v6 = interfaceinvoke v5.<java.util.List: java.util.stream.Stream stream()>();
v7 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$escape__1172: java.util.function.Function bootstrap$(io.vertx.core.json.pointer.impl.JsonPointerImpl)>(v0);
v8 = interfaceinvoke v6.<java.util.stream.Stream: java.util.stream.Stream map(java.util.function.Function)>(v7);
v9 = staticinvoke <java.util.stream.Collectors: java.util.stream.Collector toList()>();
v10 = interfaceinvoke v8.<java.util.stream.Stream: java.lang.Object collect(java.util.stream.Collector)>(v9);
v11 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>("/", v10);
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v11) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/\u0001");
v13 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI replaceFragment(java.net.URI,java.lang.String)>(v4, v12);
return v13;
}
public java.net.URI getURIWithoutFragment()
{
java.net.URI v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
return v1;
}
public io.vertx.core.json.pointer.JsonPointer append(java.lang.String)
{
java.util.List v2;
java.lang.String v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
return v0;
}
public io.vertx.core.json.pointer.JsonPointer append(int)
{
int v1;
java.lang.String v2;
io.vertx.core.json.pointer.JsonPointer v3;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: int;
v2 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v1);
v3 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: io.vertx.core.json.pointer.JsonPointer append(java.lang.String)>(v2);
return v3;
}
public io.vertx.core.json.pointer.JsonPointer append(java.util.List)
{
java.util.List v1, v2;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.util.List;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v1);
return v0;
}
public io.vertx.core.json.pointer.JsonPointer append(io.vertx.core.json.pointer.JsonPointer)
{
java.util.List v2, v3;
io.vertx.core.json.pointer.JsonPointer v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: io.vertx.core.json.pointer.JsonPointer;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v3 = v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
interfaceinvoke v2.<java.util.List: boolean addAll(java.util.Collection)>(v3);
return v0;
}
public io.vertx.core.json.pointer.JsonPointer parent()
{
java.util.List v2, v3;
int v4, v5;
boolean v1;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean isRootPointer()>();
if v1 != 0 goto label1;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v3 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v4 = interfaceinvoke v3.<java.util.List: int size()>();
v5 = v4 - 1;
interfaceinvoke v2.<java.util.List: java.lang.Object remove(int)>(v5);
label1:
return v0;
}
public io.vertx.core.json.pointer.JsonPointer copy()
{
java.util.List v3;
java.net.URI v2;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0, v1;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = new io.vertx.core.json.pointer.impl.JsonPointerImpl;
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v3 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
specialinvoke v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: void <init>(java.net.URI,java.util.List)>(v2, v3);
return v1;
}
public boolean equals(java.lang.Object)
{
java.util.List v7, v8;
java.lang.Class v2, v3;
java.lang.Object v1;
java.net.URI v4, v5;
boolean v10, v6, v9;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v5 = v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v6 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v4, v5);
if v6 == 0 goto label4;
v7 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v8 = v1.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v9 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v7, v8);
if v9 == 0 goto label4;
v10 = 1;
goto label5;
label4:
v10 = 0;
label5:
return v10;
}
public int hashCode()
{
java.util.List v3;
java.lang.Object[] v1;
int v4;
java.net.URI v2;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 = newarray (java.lang.Object)[2];
v2 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI startingUri>;
v1[0] = v2;
v3 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v1[1] = v3;
v4 = staticinvoke <java.util.Objects: int hash(java.lang.Object[])>(v1);
return v4;
}
public java.lang.Object queryOrDefault(java.lang.Object, io.vertx.core.json.pointer.JsonPointerIterator, java.lang.Object)
{
int v10, v11, v20;
java.lang.String v18;
boolean v13, v15, v17, v19, v22, v4, v5;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.lang.NumberFormatException v24;
io.vertx.core.json.pointer.JsonPointerIterator v2;
java.util.List v8, v9;
java.lang.Object v1, v12, v14, v16, v21, v23, v3, v6, v7;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.json.pointer.JsonPointerIterator;
v3 := @parameter2: java.lang.Object;
v4 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean isRootPointer()>();
if v4 == 0 goto label03;
v5 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v1);
if v5 == 0 goto label01;
v6 = v3;
goto label02;
label01:
v6 = v1;
label02:
return v6;
label03:
v7 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.lang.Object walkTillLastElement(java.lang.Object,io.vertx.core.json.pointer.JsonPointerIterator,boolean,java.util.function.Consumer)>(v1, v2, 0, null);
v8 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v9 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v10 = interfaceinvoke v9.<java.util.List: int size()>();
v11 = v10 - 1;
v12 = interfaceinvoke v8.<java.util.List: java.lang.Object get(int)>(v11);
v13 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isObject(java.lang.Object)>(v7);
if v13 == 0 goto label06;
v14 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getObjectParameter(java.lang.Object,java.lang.String,boolean)>(v7, v12, 0);
v15 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v14);
if v15 != 0 goto label04;
v16 = v14;
goto label05;
label04:
v16 = v3;
label05:
return v16;
label06:
v17 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isArray(java.lang.Object)>(v7);
if v17 == 0 goto label11;
v18 = "-";
v19 = virtualinvoke v18.<java.lang.String: boolean equals(java.lang.Object)>(v12);
if v19 != 0 goto label11;
label07:
v20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v12);
v21 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getArrayElement(java.lang.Object,int)>(v7, v20);
v22 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v21);
if v22 != 0 goto label08;
v23 = v21;
goto label09;
label08:
v23 = v3;
label09:
return v23;
label10:
v24 := @caughtexception;
return v3;
label11:
return v3;
catch java.lang.NumberFormatException from label07 to label09 with label10;
}
public java.util.List tracedQuery(java.lang.Object, io.vertx.core.json.pointer.JsonPointerIterator)
{
java.util.ArrayList v3;
int v11, v12, v18;
java.lang.String v16;
boolean v14, v15, v17, v20, v4, v5, v8;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.lang.NumberFormatException v19;
io.vertx.core.json.pointer.JsonPointerIterator v2;
java.util.function.Consumer v6;
java.util.List v10, v9;
java.lang.Object v1, v13, v7;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.json.pointer.JsonPointerIterator;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v4 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean isRootPointer()>();
if v4 == 0 goto label1;
v5 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v1);
if v5 != 0 goto label1;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v1);
goto label8;
label1:
virtualinvoke v3.<java.lang.Object: java.lang.Class getClass()>();
v6 = staticinvoke <io.vertx.core.json.pointer.impl.JsonPointerImpl$add__1173: java.util.function.Consumer bootstrap$(java.util.List)>(v3);
v7 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.lang.Object walkTillLastElement(java.lang.Object,io.vertx.core.json.pointer.JsonPointerIterator,boolean,java.util.function.Consumer)>(v1, v2, 0, v6);
v8 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v7);
if v8 != 0 goto label2;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v7);
label2:
v9 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v10 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v11 = interfaceinvoke v10.<java.util.List: int size()>();
v12 = v11 - 1;
v13 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(v12);
v14 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isObject(java.lang.Object)>(v7);
if v14 == 0 goto label3;
v7 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getObjectParameter(java.lang.Object,java.lang.String,boolean)>(v7, v13, 0);
goto label7;
label3:
v15 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isArray(java.lang.Object)>(v7);
if v15 == 0 goto label7;
v16 = "-";
v17 = virtualinvoke v16.<java.lang.String: boolean equals(java.lang.Object)>(v13);
if v17 != 0 goto label7;
label4:
v18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v13);
v7 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getArrayElement(java.lang.Object,int)>(v7, v18);
label5:
goto label7;
label6:
v19 := @caughtexception;
label7:
v20 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v7);
if v20 != 0 goto label8;
interfaceinvoke v3.<java.util.List: boolean add(java.lang.Object)>(v7);
label8:
return v3;
catch java.lang.NumberFormatException from label4 to label5 with label6;
}
public java.lang.Object write(java.lang.Object, io.vertx.core.json.pointer.JsonPointerIterator, java.lang.Object, boolean)
{
io.vertx.core.json.pointer.JsonPointerIterator v2;
java.lang.Object v1, v3, v7, v8;
boolean v4, v5, v6, v9;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.json.pointer.JsonPointerIterator;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: boolean;
v5 = virtualinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean isRootPointer()>();
if v5 == 0 goto label3;
v6 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v1);
if v6 == 0 goto label1;
v7 = null;
goto label2;
label1:
v7 = v3;
label2:
return v7;
label3:
v8 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.lang.Object walkTillLastElement(java.lang.Object,io.vertx.core.json.pointer.JsonPointerIterator,boolean,java.util.function.Consumer)>(v1, v2, v4, null);
v9 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: boolean writeLastElement(java.lang.Object,io.vertx.core.json.pointer.JsonPointerIterator,java.lang.Object)>(v8, v2, v3);
if v9 == 0 goto label4;
return v1;
label4:
return null;
}
private java.lang.Object walkTillLastElement(java.lang.Object, io.vertx.core.json.pointer.JsonPointerIterator, boolean, java.util.function.Consumer)
{
int v15, v5, v7, v8;
java.lang.String v11;
boolean v12, v13, v14, v16, v3;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.lang.NumberFormatException v17;
io.vertx.core.json.pointer.JsonPointerIterator v2;
java.util.function.Consumer v4;
java.util.List v6, v9;
java.lang.Object v1, v10;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.json.pointer.JsonPointerIterator;
v3 := @parameter2: boolean;
v4 := @parameter3: java.util.function.Consumer;
v5 = 0;
label01:
v6 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v7 = interfaceinvoke v6.<java.util.List: int size()>();
v8 = v7 - 1;
if v5 >= v8 goto label10;
v9 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v10 = interfaceinvoke v9.<java.util.List: java.lang.Object get(int)>(v5);
if v5 != 0 goto label02;
v11 = "";
v12 = virtualinvoke v11.<java.lang.String: boolean equals(java.lang.Object)>(v10);
if v12 != 0 goto label09;
label02:
v13 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isObject(java.lang.Object)>(v1);
if v13 == 0 goto label04;
if v4 == null goto label03;
interfaceinvoke v4.<java.util.function.Consumer: void accept(java.lang.Object)>(v1);
label03:
v1 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getObjectParameter(java.lang.Object,java.lang.String,boolean)>(v1, v10, v3);
goto label09;
label04:
v14 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isArray(java.lang.Object)>(v1);
if v14 == 0 goto label08;
if v4 == null goto label05;
interfaceinvoke v4.<java.util.function.Consumer: void accept(java.lang.Object)>(v1);
label05:
v15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v10);
v1 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getArrayElement(java.lang.Object,int)>(v1, v15);
v16 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isNull(java.lang.Object)>(v1);
if v16 == 0 goto label09;
if v3 == 0 goto label09;
v1 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: java.lang.Object getObjectParameter(java.lang.Object,java.lang.String,boolean)>(v1, v10, 1);
label06:
goto label09;
label07:
v17 := @caughtexception;
v1 = null;
goto label09;
label08:
return null;
label09:
v5 = v5 + 1;
goto label01;
label10:
return v1;
catch java.lang.NumberFormatException from label05 to label06 with label07;
}
private boolean writeLastElement(java.lang.Object, io.vertx.core.json.pointer.JsonPointerIterator, java.lang.Object)
{
int v15, v6, v7;
java.lang.String v12;
boolean v10, v11, v13, v14, v16, v9;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
java.lang.NumberFormatException v17;
io.vertx.core.json.pointer.JsonPointerIterator v2;
java.util.List v4, v5;
java.lang.Object v1, v3, v8;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: io.vertx.core.json.pointer.JsonPointerIterator;
v3 := @parameter2: java.lang.Object;
v4 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v5 = v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.List decodedTokens>;
v6 = interfaceinvoke v5.<java.util.List: int size()>();
v7 = v6 - 1;
v8 = interfaceinvoke v4.<java.util.List: java.lang.Object get(int)>(v7);
v9 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isObject(java.lang.Object)>(v1);
if v9 == 0 goto label1;
v10 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean writeObjectParameter(java.lang.Object,java.lang.String,java.lang.Object)>(v1, v8, v3);
return v10;
label1:
v11 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean isArray(java.lang.Object)>(v1);
if v11 == 0 goto label5;
v12 = "-";
v13 = virtualinvoke v12.<java.lang.String: boolean equals(java.lang.Object)>(v8);
if v13 == 0 goto label2;
v14 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean appendArrayElement(java.lang.Object,java.lang.Object)>(v1, v3);
return v14;
label2:
v15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v8);
v16 = interfaceinvoke v2.<io.vertx.core.json.pointer.JsonPointerIterator: boolean writeArrayElement(java.lang.Object,int,java.lang.Object)>(v1, v15, v3);
label3:
return v16;
label4:
v17 := @caughtexception;
return 0;
label5:
return 0;
catch java.lang.NumberFormatException from label2 to label3 with label4;
}
private java.net.URI removeFragment(java.net.URI)
{
java.net.URI v1, v2;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.net.URI;
v2 = specialinvoke v0.<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.net.URI replaceFragment(java.net.URI,java.lang.String)>(v1, null);
return v2;
}
private java.net.URI replaceFragment(java.net.URI, java.lang.String)
{
java.net.URISyntaxException v7;
java.lang.String v2, v4, v5;
java.net.URI v1, v3, v6;
io.vertx.core.json.pointer.impl.JsonPointerImpl v0;
v0 := @this: io.vertx.core.json.pointer.impl.JsonPointerImpl;
v1 := @parameter0: java.net.URI;
v2 := @parameter1: java.lang.String;
label1:
if v1 == null goto label3;
v3 = new java.net.URI;
v4 = virtualinvoke v1.<java.net.URI: java.lang.String getScheme()>();
v5 = virtualinvoke v1.<java.net.URI: java.lang.String getSchemeSpecificPart()>();
specialinvoke v3.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>(v4, v5, v2);
label2:
return v3;
label3:
v6 = new java.net.URI;
specialinvoke v6.<java.net.URI: void <init>(java.lang.String,java.lang.String,java.lang.String)>(null, null, v2);
label4:
return v6;
label5:
v7 := @caughtexception;
virtualinvoke v7.<java.net.URISyntaxException: void printStackTrace()>();
return null;
catch java.net.URISyntaxException from label1 to label2 with label5;
catch java.net.URISyntaxException from label3 to label4 with label5;
}
static void <clinit>()
{
java.util.regex.Pattern v0;
v0 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("^(/(([^/~])|(~[01]))*)*$");
<io.vertx.core.json.pointer.impl.JsonPointerImpl: java.util.regex.Pattern VALID_POINTER_PATTERN> = v0;
return;
}
}