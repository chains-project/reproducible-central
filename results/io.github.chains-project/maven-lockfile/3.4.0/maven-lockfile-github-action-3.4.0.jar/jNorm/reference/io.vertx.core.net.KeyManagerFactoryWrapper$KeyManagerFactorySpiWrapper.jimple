class io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper extends javax.net.ssl.KeyManagerFactorySpi
{
private final javax.net.ssl.KeyManager[] keyManagers;
private void <init>(javax.net.ssl.KeyManager)
{
io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper v0;
javax.net.ssl.KeyManager v1;
javax.net.ssl.KeyManager[] v2;
v0 := @this: io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper;
v1 := @parameter0: javax.net.ssl.KeyManager;
specialinvoke v0.<javax.net.ssl.KeyManagerFactorySpi: void <init>()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = newarray (javax.net.ssl.KeyManager)[1];
v2[0] = v1;
v0.<io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper: javax.net.ssl.KeyManager[] keyManagers> = v2;
return;
}
protected void engineInit(java.security.KeyStore, char[])
{
io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper v0;
org.slf4j.Logger v3;
char[] v2;
java.security.KeyStore v1;
v0 := @this: io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper;
v1 := @parameter0: java.security.KeyStore;
v2 := @parameter1: char[];
v3 = <io.vertx.core.net.KeyManagerFactoryWrapper: org.slf4j.Logger LOGGER>;
interfaceinvoke v3.<org.slf4j.Logger: void info(java.lang.String)>("Ignoring provided KeyStore");
return;
}
protected void engineInit(javax.net.ssl.ManagerFactoryParameters)
{
javax.net.ssl.ManagerFactoryParameters v1;
io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper v0;
org.slf4j.Logger v2;
v0 := @this: io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper;
v1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;
v2 = <io.vertx.core.net.KeyManagerFactoryWrapper: org.slf4j.Logger LOGGER>;
interfaceinvoke v2.<org.slf4j.Logger: void info(java.lang.String)>("Ignoring provided ManagerFactoryParameters");
return;
}
protected javax.net.ssl.KeyManager[] engineGetKeyManagers()
{
io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper v0;
javax.net.ssl.KeyManager[] v1;
v0 := @this: io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper;
v1 = v0.<io.vertx.core.net.KeyManagerFactoryWrapper$KeyManagerFactorySpiWrapper: javax.net.ssl.KeyManager[] keyManagers>;
return v1;
}
}