public class io.vertx.core.net.NetServerOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.net.NetServerOptionsConverter v0;
v0 := @this: io.vertx.core.net.NetServerOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.net.NetServerOptions)
{
byte v6;
boolean v10, v11, v12, v13, v14, v15, v16, v18, v22, v26, v29, v3, v33, v37, v41, v43, v45, v47, v49, v51, v8, v9;
io.vertx.core.net.NetServerOptions v1;
long v35;
java.lang.Iterable v0;
int v20, v31, v7;
java.util.Iterator v2;
java.util.concurrent.TimeUnit v39;
io.vertx.core.http.ClientAuth v24;
java.lang.Object v17, v19, v21, v23, v25, v27, v28, v30, v32, v34, v36, v38, v4, v40, v42, v44, v46, v48, v5, v50;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.net.NetServerOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label21;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -1925002539: goto label02;
case -1440254802: goto label08;
case -524654721: goto label07;
case 114030: goto label09;
case 3208616: goto label04;
case 3446913: goto label05;
case 1101883411: goto label03;
case 1598504795: goto label06;
case 1990020319: goto label10;
default: goto label11;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("acceptBacklog");
if v8 == 0 goto label11;
v6 = 0;
goto label11;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("clientAuth");
if v9 == 0 goto label11;
v6 = 1;
goto label11;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("host");
if v10 == 0 goto label11;
v6 = 2;
goto label11;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("port");
if v11 == 0 goto label11;
v6 = 3;
goto label11;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("proxyProtocolTimeout");
if v12 == 0 goto label11;
v6 = 4;
goto label11;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("proxyProtocolTimeoutUnit");
if v13 == 0 goto label11;
v6 = 5;
goto label11;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("registerWriteHandler");
if v14 == 0 goto label11;
v6 = 6;
goto label11;
label09:
v15 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sni");
if v15 == 0 goto label11;
v6 = 7;
goto label11;
label10:
v16 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("useProxyProtocol");
if v16 == 0 goto label11;
v6 = 8;
label11:
tableswitch(v6)
{
case 0: goto label12;
case 1: goto label13;
case 2: goto label14;
case 3: goto label15;
case 4: goto label16;
case 5: goto label17;
case 6: goto label18;
case 7: goto label19;
case 8: goto label20;
default: goto label01;
};
label12:
v17 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v18 = v17 instanceof java.lang.Number;
if v18 == 0 goto label01;
v19 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v20 = virtualinvoke v19.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setAcceptBacklog(int)>(v20);
goto label01;
label13:
v21 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v22 = v21 instanceof java.lang.String;
if v22 == 0 goto label01;
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v24 = staticinvoke <io.vertx.core.http.ClientAuth: io.vertx.core.http.ClientAuth valueOf(java.lang.String)>(v23);
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setClientAuth(io.vertx.core.http.ClientAuth)>(v24);
goto label01;
label14:
v25 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v26 = v25 instanceof java.lang.String;
if v26 == 0 goto label01;
v27 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setHost(java.lang.String)>(v27);
goto label01;
label15:
v28 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v29 = v28 instanceof java.lang.Number;
if v29 == 0 goto label01;
v30 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v31 = virtualinvoke v30.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setPort(int)>(v31);
goto label01;
label16:
v32 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v33 = v32 instanceof java.lang.Number;
if v33 == 0 goto label01;
v34 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v35 = virtualinvoke v34.<java.lang.Number: long longValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setProxyProtocolTimeout(long)>(v35);
goto label01;
label17:
v36 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v37 = v36 instanceof java.lang.String;
if v37 == 0 goto label01;
v38 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v39 = staticinvoke <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit valueOf(java.lang.String)>(v38);
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setProxyProtocolTimeoutUnit(java.util.concurrent.TimeUnit)>(v39);
goto label01;
label18:
v40 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v41 = v40 instanceof java.lang.Boolean;
if v41 == 0 goto label01;
v42 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v43 = virtualinvoke v42.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setRegisterWriteHandler(boolean)>(v43);
goto label01;
label19:
v44 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v45 = v44 instanceof java.lang.Boolean;
if v45 == 0 goto label01;
v46 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v47 = virtualinvoke v46.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setSni(boolean)>(v47);
goto label01;
label20:
v48 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v49 = v48 instanceof java.lang.Boolean;
if v49 == 0 goto label01;
v50 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v51 = virtualinvoke v50.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.NetServerOptions: io.vertx.core.net.NetServerOptions setUseProxyProtocol(boolean)>(v51);
goto label01;
label21:
return;
}
static void toJson(io.vertx.core.net.NetServerOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.NetServerOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.net.NetServerOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.net.NetServerOptionsConverter: void toJson(io.vertx.core.net.NetServerOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.net.NetServerOptions, java.util.Map)
{
long v11;
java.lang.Integer v10, v3;
java.lang.Long v12;
java.util.Map v1;
int v2, v9;
java.lang.Boolean v17, v19, v21;
java.lang.String v15, v6, v7, v8;
boolean v16, v18, v20;
java.util.concurrent.TimeUnit v13, v14;
io.vertx.core.net.NetServerOptions v0;
io.vertx.core.http.ClientAuth v4, v5;
v0 := @parameter0: io.vertx.core.net.NetServerOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: int getAcceptBacklog()>();
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("acceptBacklog", v3);
v4 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: io.vertx.core.http.ClientAuth getClientAuth()>();
if v4 == null goto label1;
v5 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: io.vertx.core.http.ClientAuth getClientAuth()>();
v6 = virtualinvoke v5.<io.vertx.core.http.ClientAuth: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("clientAuth", v6);
label1:
v7 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: java.lang.String getHost()>();
if v7 == null goto label2;
v8 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: java.lang.String getHost()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("host", v8);
label2:
v9 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: int getPort()>();
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("port", v10);
v11 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: long getProxyProtocolTimeout()>();
v12 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v11);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("proxyProtocolTimeout", v12);
v13 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: java.util.concurrent.TimeUnit getProxyProtocolTimeoutUnit()>();
if v13 == null goto label3;
v14 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: java.util.concurrent.TimeUnit getProxyProtocolTimeoutUnit()>();
v15 = virtualinvoke v14.<java.util.concurrent.TimeUnit: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("proxyProtocolTimeoutUnit", v15);
label3:
v16 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: boolean isRegisterWriteHandler()>();
v17 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v16);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("registerWriteHandler", v17);
v18 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: boolean isSni()>();
v19 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v18);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sni", v19);
v20 = virtualinvoke v0.<io.vertx.core.net.NetServerOptions: boolean isUseProxyProtocol()>();
v21 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v20);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("useProxyProtocol", v21);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.net.NetServerOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.net.NetServerOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}