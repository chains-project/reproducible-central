public class io.vertx.core.net.NetworkOptionsConverter extends java.lang.Object
{
private static final java.util.Base64$Decoder BASE64_DECODER;
private static final java.util.Base64$Encoder BASE64_ENCODER;
public void <init>()
{
io.vertx.core.net.NetworkOptionsConverter v0;
v0 := @this: io.vertx.core.net.NetworkOptionsConverter;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static void fromJson(java.lang.Iterable, io.vertx.core.net.NetworkOptions)
{
byte v6;
io.netty.handler.logging.ByteBufFormat v18;
boolean v10, v11, v12, v13, v14, v16, v20, v22, v24, v28, v3, v30, v32, v34, v36, v40, v8, v9;
io.vertx.core.net.NetworkOptions v1;
java.lang.Iterable v0;
int v26, v38, v42, v7;
java.util.Iterator v2;
java.lang.Object v15, v17, v19, v21, v23, v25, v27, v29, v31, v33, v35, v37, v39, v4, v41, v5;
v0 := @parameter0: java.lang.Iterable;
v1 := @parameter1: io.vertx.core.net.NetworkOptions;
v2 = interfaceinvoke v0.<java.lang.Iterable: java.util.Iterator iterator()>();
label01:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label17;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getKey()>();
v6 = -1;
v7 = virtualinvoke v5.<java.lang.String: int hashCode()>();
lookupswitch(v7)
{
case -2041863456: goto label05;
case -858318940: goto label04;
case -261182967: goto label07;
case -109324011: goto label06;
case 84047475: goto label03;
case 274731990: goto label02;
case 812076411: goto label08;
default: goto label09;
};
label02:
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("activityLogDataFormat");
if v8 == 0 goto label09;
v6 = 0;
goto label09;
label03:
v9 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("logActivity");
if v9 == 0 goto label09;
v6 = 1;
goto label09;
label04:
v10 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("receiveBufferSize");
if v10 == 0 goto label09;
v6 = 2;
goto label09;
label05:
v11 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("reuseAddress");
if v11 == 0 goto label09;
v6 = 3;
goto label09;
label06:
v12 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("reusePort");
if v12 == 0 goto label09;
v6 = 4;
goto label09;
label07:
v13 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("sendBufferSize");
if v13 == 0 goto label09;
v6 = 5;
goto label09;
label08:
v14 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>("trafficClass");
if v14 == 0 goto label09;
v6 = 6;
label09:
tableswitch(v6)
{
case 0: goto label10;
case 1: goto label11;
case 2: goto label12;
case 3: goto label13;
case 4: goto label14;
case 5: goto label15;
case 6: goto label16;
default: goto label01;
};
label10:
v15 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v16 = v15 instanceof java.lang.String;
if v16 == 0 goto label01;
v17 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v18 = staticinvoke <io.netty.handler.logging.ByteBufFormat: io.netty.handler.logging.ByteBufFormat valueOf(java.lang.String)>(v17);
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setActivityLogDataFormat(io.netty.handler.logging.ByteBufFormat)>(v18);
goto label01;
label11:
v19 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v20 = v19 instanceof java.lang.Boolean;
if v20 == 0 goto label01;
v21 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v22 = virtualinvoke v21.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setLogActivity(boolean)>(v22);
goto label01;
label12:
v23 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v24 = v23 instanceof java.lang.Number;
if v24 == 0 goto label01;
v25 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v26 = virtualinvoke v25.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setReceiveBufferSize(int)>(v26);
goto label01;
label13:
v27 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v28 = v27 instanceof java.lang.Boolean;
if v28 == 0 goto label01;
v29 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v30 = virtualinvoke v29.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setReuseAddress(boolean)>(v30);
goto label01;
label14:
v31 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v32 = v31 instanceof java.lang.Boolean;
if v32 == 0 goto label01;
v33 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v34 = virtualinvoke v33.<java.lang.Boolean: boolean booleanValue()>();
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setReusePort(boolean)>(v34);
goto label01;
label15:
v35 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v36 = v35 instanceof java.lang.Number;
if v36 == 0 goto label01;
v37 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v38 = virtualinvoke v37.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setSendBufferSize(int)>(v38);
goto label01;
label16:
v39 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v40 = v39 instanceof java.lang.Number;
if v40 == 0 goto label01;
v41 = interfaceinvoke v4.<java.util.Map$Entry: java.lang.Object getValue()>();
v42 = virtualinvoke v41.<java.lang.Number: int intValue()>();
virtualinvoke v1.<io.vertx.core.net.NetworkOptions: io.vertx.core.net.NetworkOptions setTrafficClass(int)>(v42);
goto label01;
label17:
return;
}
static void toJson(io.vertx.core.net.NetworkOptions, io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.net.NetworkOptions v0;
java.util.Map v2;
v0 := @parameter0: io.vertx.core.net.NetworkOptions;
v1 := @parameter1: io.vertx.core.json.JsonObject;
v2 = virtualinvoke v1.<io.vertx.core.json.JsonObject: java.util.Map getMap()>();
staticinvoke <io.vertx.core.net.NetworkOptionsConverter: void toJson(io.vertx.core.net.NetworkOptions,java.util.Map)>(v0, v2);
return;
}
static void toJson(io.vertx.core.net.NetworkOptions, java.util.Map)
{
io.vertx.core.net.NetworkOptions v0;
java.lang.Integer v14, v16, v8;
io.netty.handler.logging.ByteBufFormat v2, v3;
java.util.Map v1;
int v13, v15, v7;
java.lang.Boolean v10, v12, v6;
java.lang.String v4;
boolean v11, v5, v9;
v0 := @parameter0: io.vertx.core.net.NetworkOptions;
v1 := @parameter1: java.util.Map;
v2 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: io.netty.handler.logging.ByteBufFormat getActivityLogDataFormat()>();
if v2 == null goto label1;
v3 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: io.netty.handler.logging.ByteBufFormat getActivityLogDataFormat()>();
v4 = virtualinvoke v3.<io.netty.handler.logging.ByteBufFormat: java.lang.String name()>();
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("activityLogDataFormat", v4);
label1:
v5 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: boolean getLogActivity()>();
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v5);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("logActivity", v6);
v7 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: int getReceiveBufferSize()>();
v8 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v7);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("receiveBufferSize", v8);
v9 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: boolean isReuseAddress()>();
v10 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v9);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("reuseAddress", v10);
v11 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: boolean isReusePort()>();
v12 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v11);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("reusePort", v12);
v13 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: int getSendBufferSize()>();
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v13);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("sendBufferSize", v14);
v15 = virtualinvoke v0.<io.vertx.core.net.NetworkOptions: int getTrafficClass()>();
v16 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v15);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>("trafficClass", v16);
return;
}
static void <clinit>()
{
java.util.Base64$Encoder v1;
java.util.Base64$Decoder v0;
v0 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
<io.vertx.core.net.NetworkOptionsConverter: java.util.Base64$Decoder BASE64_DECODER> = v0;
v1 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Encoder BASE64_ENCODER>;
<io.vertx.core.net.NetworkOptionsConverter: java.util.Base64$Encoder BASE64_ENCODER> = v1;
return;
}
}