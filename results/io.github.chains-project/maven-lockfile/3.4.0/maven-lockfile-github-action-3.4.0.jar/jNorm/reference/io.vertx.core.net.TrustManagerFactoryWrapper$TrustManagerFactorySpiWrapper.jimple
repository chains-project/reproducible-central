class io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper extends javax.net.ssl.TrustManagerFactorySpi
{
private final javax.net.ssl.TrustManager[] trustManagers;
private void <init>(javax.net.ssl.TrustManager)
{
javax.net.ssl.TrustManager v1;
io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper v0;
javax.net.ssl.TrustManager[] v2;
v0 := @this: io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper;
v1 := @parameter0: javax.net.ssl.TrustManager;
specialinvoke v0.<javax.net.ssl.TrustManagerFactorySpi: void <init>()>();
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = newarray (javax.net.ssl.TrustManager)[1];
v2[0] = v1;
v0.<io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper: javax.net.ssl.TrustManager[] trustManagers> = v2;
return;
}
protected void engineInit(java.security.KeyStore)
{
io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper v0;
java.security.KeyStore v1;
org.slf4j.Logger v2;
v0 := @this: io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper;
v1 := @parameter0: java.security.KeyStore;
v2 = <io.vertx.core.net.TrustManagerFactoryWrapper: org.slf4j.Logger LOGGER>;
interfaceinvoke v2.<org.slf4j.Logger: void info(java.lang.String)>("Ignoring provided KeyStore");
return;
}
protected void engineInit(javax.net.ssl.ManagerFactoryParameters)
{
javax.net.ssl.ManagerFactoryParameters v1;
io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper v0;
org.slf4j.Logger v2;
v0 := @this: io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper;
v1 := @parameter0: javax.net.ssl.ManagerFactoryParameters;
v2 = <io.vertx.core.net.TrustManagerFactoryWrapper: org.slf4j.Logger LOGGER>;
interfaceinvoke v2.<org.slf4j.Logger: void info(java.lang.String)>("Ignoring provided ManagerFactoryParameters");
return;
}
protected javax.net.ssl.TrustManager[] engineGetTrustManagers()
{
io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper v0;
javax.net.ssl.TrustManager[] v1;
v0 := @this: io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper;
v1 = v0.<io.vertx.core.net.TrustManagerFactoryWrapper$TrustManagerFactorySpiWrapper: javax.net.ssl.TrustManager[] trustManagers>;
return v1;
}
}