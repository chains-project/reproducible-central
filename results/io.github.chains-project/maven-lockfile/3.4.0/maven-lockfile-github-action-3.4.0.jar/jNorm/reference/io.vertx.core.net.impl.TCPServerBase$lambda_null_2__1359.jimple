public final class io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359 extends java.lang.Object implements io.netty.channel.ChannelFutureListener
{
java.util.Map cap0;
io.vertx.core.net.impl.ServerID cap1;
public static io.netty.channel.ChannelFutureListener bootstrap$(java.util.Map, io.vertx.core.net.impl.ServerID)
{
io.vertx.core.net.impl.ServerID v1;
io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359 v2;
java.util.Map v0;
v0 := @parameter0: java.util.Map;
v1 := @parameter1: io.vertx.core.net.impl.ServerID;
v2 = new io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359;
specialinvoke v2.<io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359: void <init>(java.util.Map,io.vertx.core.net.impl.ServerID)>(v0, v1);
return v2;
}
public void <init>(java.util.Map, io.vertx.core.net.impl.ServerID)
{
io.vertx.core.net.impl.ServerID v2;
io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359 v0;
java.util.Map v1;
v0 := @this: io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: io.vertx.core.net.impl.ServerID;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359: java.util.Map cap0> = v1;
v0.<io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359: io.vertx.core.net.impl.ServerID cap1> = v2;
return;
}
public void operationComplete(io.netty.util.concurrent.Future)
{
java.util.Map v2;
io.netty.util.concurrent.Future v1;
io.vertx.core.net.impl.ServerID v3;
io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359 v0;
v0 := @this: io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359;
v1 := @parameter0: io.netty.util.concurrent.Future;
v2 = v0.<io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359: java.util.Map cap0>;
v3 = v0.<io.vertx.core.net.impl.TCPServerBase$lambda_null_2__1359: io.vertx.core.net.impl.ServerID cap1>;
staticinvoke <io.vertx.core.net.impl.TCPServerBase: void lambda$null$2(java.util.Map,io.vertx.core.net.impl.ServerID,io.netty.channel.ChannelFuture)>(v2, v3, v1);
return;
}
}