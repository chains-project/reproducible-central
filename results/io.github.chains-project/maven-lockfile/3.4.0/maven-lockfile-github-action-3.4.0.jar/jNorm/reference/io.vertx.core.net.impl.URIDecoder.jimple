public final class io.vertx.core.net.impl.URIDecoder extends java.lang.Object
{
private void <init>()
{
io.vertx.core.net.impl.URIDecoder v0;
java.lang.RuntimeException v1;
v0 := @this: io.vertx.core.net.impl.URIDecoder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.lang.RuntimeException;
specialinvoke v1.<java.lang.RuntimeException: void <init>(java.lang.String)>("Static Class");
throw v1;
}
public static java.lang.String decodeURIComponent(java.lang.String)
{
java.lang.String v0, v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.vertx.core.net.impl.URIDecoder: java.lang.String decodeURIComponent(java.lang.String,boolean)>(v0, 1);
return v1;
}
private static int indexOfPercentOrPlus(java.lang.String)
{
int v1, v2, v4;
char v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = 0;
v2 = virtualinvoke v0.<java.lang.String: int length()>();
label1:
if v1 >= v2 goto label4;
v3 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v1);
if v3 == 37 goto label2;
if v3 != 43 goto label3;
label2:
return v1;
label3:
v1 = v1 + 1;
goto label1;
label4:
v4 = (int) -1;
return v4;
}
public static java.lang.String decodeURIComponent(java.lang.String, boolean)
{
int v2, v3;
java.lang.String v0, v4;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
if v0 != null goto label1;
return null;
label1:
if v1 != 0 goto label2;
v2 = virtualinvoke v0.<java.lang.String: int indexOf(int)>(37);
goto label3;
label2:
v2 = staticinvoke <io.vertx.core.net.impl.URIDecoder: int indexOfPercentOrPlus(java.lang.String)>(v0);
label3:
v3 = (int) -1;
if v2 != v3 goto label4;
return v0;
label4:
v4 = staticinvoke <io.vertx.core.net.impl.URIDecoder: java.lang.String decodeAndTransformURIComponent(java.lang.String,int,boolean)>(v0, v2, v1);
return v4;
}
private static java.lang.String decodeAndTransformURIComponent(java.lang.String, int, boolean)
{
byte[] v4;
boolean v2;
java.nio.charset.Charset v3, v32;
int v1, v11, v13, v14, v20, v21, v23, v26, v28, v29, v30, v5, v6, v8;
java.lang.String v0, v10, v16, v27, v31;
char v12, v17, v18, v19, v24, v25, v33, v7;
java.lang.IllegalArgumentException v15, v22, v9;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
v4 = virtualinvoke v0.<java.lang.String: byte[] getBytes(java.nio.charset.Charset)>(v3);
v5 = v1;
v6 = virtualinvoke v0.<java.lang.String: int length()>();
label01:
if v1 >= v6 goto label11;
v7 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v1);
if v7 != 37 goto label07;
v8 = v6 - 1;
if v1 != v8 goto label02;
v9 = new java.lang.IllegalArgumentException;
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("unterminated escape sequence at end of string: \u0001");
specialinvoke v9.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v9;
label02:
v11 = v1 + 1;
v12 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v11);
if v12 != 37 goto label03;
v13 = v5;
v5 = v5 + 1;
v4[v13] = 37;
goto label11;
label03:
v14 = v6 - 1;
if v11 < v14 goto label04;
v15 = new java.lang.IllegalArgumentException;
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("partial escape sequence at end of string: \u0001");
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v15;
label04:
v17 = staticinvoke <io.vertx.core.net.impl.URIDecoder: char decodeHexNibble(char)>(v12);
v1 = v11 + 1;
v18 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v1);
v19 = staticinvoke <io.vertx.core.net.impl.URIDecoder: char decodeHexNibble(char)>(v18);
v20 = (int) 65535;
if v17 == v20 goto label05;
v21 = (int) 65535;
if v19 != v21 goto label06;
label05:
v22 = new java.lang.IllegalArgumentException;
v23 = v1 - 1;
v24 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v23);
v25 = virtualinvoke v0.<java.lang.String: char charAt(int)>(v1);
v26 = v1 - 2;
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (char,char,int,java.lang.String)>(v24, v25, v26, v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("invalid escape sequence `%\u0001\u0001\' at index \u0001 of: \u0001");
specialinvoke v22.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v27);
throw v22;
label06:
v28 = v5;
v5 = v5 + 1;
v4[v28] = v33;
goto label10;
label07:
v29 = v5;
v5 = v5 + 1;
if v2 == 0 goto label08;
if v7 != 43 goto label08;
v30 = 32;
goto label09;
label08:
v30 = v7;
label09:
v4[v29] = v30;
label10:
v1 = v1 + 1;
goto label01;
label11:
v31 = new java.lang.String;
v32 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v31.<java.lang.String: void <init>(byte[],int,int,java.nio.charset.Charset)>(v4, 0, v5, v32);
return v31;
}
private static char decodeHexNibble(char)
{
int v1, v2, v3, v4, v5;
char v0;
v0 := @parameter0: char;
if 48 > v0 goto label1;
if v0 > 57 goto label1;
v1 = v0 - 48;
return v1;
label1:
if 97 > v0 goto label2;
if v0 > 102 goto label2;
v2 = v0 - 97;
v3 = v2 + 10;
return v3;
label2:
if 65 > v0 goto label3;
if v0 > 70 goto label3;
v4 = v0 - 65;
v5 = v4 + 10;
return v5;
label3:
return 65535;
}
}