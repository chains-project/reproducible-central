public class io.vertx.core.net.impl.pool.ConnectionManager extends java.lang.Object
{
private final java.util.Map endpointMap;
public void <init>()
{
java.util.concurrent.ConcurrentHashMap v1;
io.vertx.core.net.impl.pool.ConnectionManager v0;
v0 := @this: io.vertx.core.net.impl.pool.ConnectionManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<io.vertx.core.net.impl.pool.ConnectionManager: java.util.Map endpointMap> = v1;
return;
}
public void forEach(java.util.function.Consumer)
{
java.util.function.Consumer v1;
java.util.Collection v3;
java.util.Map v2;
io.vertx.core.net.impl.pool.ConnectionManager v0;
v0 := @this: io.vertx.core.net.impl.pool.ConnectionManager;
v1 := @parameter0: java.util.function.Consumer;
v2 = v0.<io.vertx.core.net.impl.pool.ConnectionManager: java.util.Map endpointMap>;
v3 = interfaceinvoke v2.<java.util.Map: java.util.Collection values()>();
interfaceinvoke v3.<java.util.Collection: void forEach(java.util.function.Consumer)>(v1);
return;
}
public void getConnection(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.net.impl.pool.EndpointProvider, io.vertx.core.Handler)
{
io.vertx.core.impl.ContextInternal v1;
java.lang.Object v2;
io.vertx.core.Handler v4;
io.vertx.core.net.impl.pool.ConnectionManager v0;
io.vertx.core.net.impl.pool.EndpointProvider v3;
v0 := @this: io.vertx.core.net.impl.pool.ConnectionManager;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.net.impl.pool.EndpointProvider;
v4 := @parameter3: io.vertx.core.Handler;
virtualinvoke v0.<io.vertx.core.net.impl.pool.ConnectionManager: void getConnection(io.vertx.core.impl.ContextInternal,java.lang.Object,io.vertx.core.net.impl.pool.EndpointProvider,long,io.vertx.core.Handler)>(v1, v2, v3, 0L, v4);
return;
}
public void getConnection(io.vertx.core.impl.ContextInternal, java.lang.Object, io.vertx.core.net.impl.pool.EndpointProvider, long, io.vertx.core.Handler)
{
io.vertx.core.impl.ContextInternal v1;
long v4;
java.lang.Runnable v6;
java.util.function.Function v8;
java.util.Map v7;
java.lang.Object v2, v9;
io.vertx.core.Handler v5;
io.vertx.core.net.impl.pool.ConnectionManager v0;
io.vertx.core.net.impl.pool.EndpointProvider v3;
boolean v10;
v0 := @this: io.vertx.core.net.impl.pool.ConnectionManager;
v1 := @parameter0: io.vertx.core.impl.ContextInternal;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: io.vertx.core.net.impl.pool.EndpointProvider;
v4 := @parameter3: long;
v5 := @parameter4: io.vertx.core.Handler;
v6 = staticinvoke <io.vertx.core.net.impl.pool.ConnectionManager$lambda_getConnection_0__1392: java.lang.Runnable bootstrap$(io.vertx.core.net.impl.pool.ConnectionManager,java.lang.Object)>(v0, v2);
label1:
v7 = v0.<io.vertx.core.net.impl.pool.ConnectionManager: java.util.Map endpointMap>;
v8 = staticinvoke <io.vertx.core.net.impl.pool.ConnectionManager$lambda_getConnection_1__1393: java.util.function.Function bootstrap$(io.vertx.core.net.impl.pool.EndpointProvider,io.vertx.core.impl.ContextInternal,java.lang.Runnable)>(v3, v1, v6);
v9 = interfaceinvoke v7.<java.util.Map: java.lang.Object computeIfAbsent(java.lang.Object,java.util.function.Function)>(v2, v8);
v10 = virtualinvoke v9.<io.vertx.core.net.impl.pool.Endpoint: boolean getConnection(io.vertx.core.impl.ContextInternal,long,io.vertx.core.Handler)>(v1, v4, v5);
if v10 == 0 goto label1;
return;
}
public void close()
{
java.util.Iterator v3;
java.util.Collection v2;
java.util.Map v1;
java.lang.Object v5;
io.vertx.core.net.impl.pool.ConnectionManager v0;
boolean v4;
v0 := @this: io.vertx.core.net.impl.pool.ConnectionManager;
v1 = v0.<io.vertx.core.net.impl.pool.ConnectionManager: java.util.Map endpointMap>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Collection values()>();
v3 = interfaceinvoke v2.<java.util.Collection: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v5.<io.vertx.core.net.impl.pool.Endpoint: void close()>();
goto label1;
label2:
return;
}
}