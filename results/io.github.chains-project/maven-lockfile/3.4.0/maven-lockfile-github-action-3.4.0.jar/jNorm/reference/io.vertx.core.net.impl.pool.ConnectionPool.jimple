public interface  io.vertx.core.net.impl.pool.ConnectionPool extends java.lang.Object
{
public static final java.util.function.Function EVENT_LOOP_CONTEXT_PROVIDER;
public static io.vertx.core.net.impl.pool.ConnectionPool pool(io.vertx.core.net.impl.pool.PoolConnector, int[])
{
io.vertx.core.net.impl.pool.PoolConnector v0;
int[] v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool v2;
v0 := @parameter0: io.vertx.core.net.impl.pool.PoolConnector;
v1 := @parameter1: int[];
v2 = new io.vertx.core.net.impl.pool.SimpleConnectionPool;
specialinvoke v2.<io.vertx.core.net.impl.pool.SimpleConnectionPool: void <init>(io.vertx.core.net.impl.pool.PoolConnector,int[])>(v0, v1);
return v2;
}
public static io.vertx.core.net.impl.pool.ConnectionPool pool(io.vertx.core.net.impl.pool.PoolConnector, int[], int)
{
io.vertx.core.net.impl.pool.PoolConnector v0;
int[] v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool v3;
int v2;
v0 := @parameter0: io.vertx.core.net.impl.pool.PoolConnector;
v1 := @parameter1: int[];
v2 := @parameter2: int;
v3 = new io.vertx.core.net.impl.pool.SimpleConnectionPool;
specialinvoke v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool: void <init>(io.vertx.core.net.impl.pool.PoolConnector,int[],int)>(v0, v1, v2);
return v3;
}
public abstract io.vertx.core.net.impl.pool.ConnectionPool connectionSelector(java.util.function.BiFunction);
public abstract io.vertx.core.net.impl.pool.ConnectionPool contextProvider(java.util.function.Function);
public abstract void acquire(io.vertx.core.impl.ContextInternal, int, io.vertx.core.Handler);
public abstract void acquire(io.vertx.core.impl.ContextInternal, io.vertx.core.net.impl.pool.PoolWaiter$Listener, int, io.vertx.core.Handler);
public abstract void cancel(io.vertx.core.net.impl.pool.PoolWaiter, io.vertx.core.Handler);
public abstract void evict(java.util.function.Predicate, io.vertx.core.Handler);
public abstract void close(io.vertx.core.Handler);
public abstract int size();
public abstract int waiters();
public abstract int capacity();
public abstract int requests();
static void <clinit>()
{
java.util.function.Function v0;
v0 = staticinvoke <io.vertx.core.net.impl.pool.ConnectionPool$lambda_static_0__1398: java.util.function.Function bootstrap$()>();
<io.vertx.core.net.impl.pool.ConnectionPool: java.util.function.Function EVENT_LOOP_CONTEXT_PROVIDER> = v0;
return;
}
}