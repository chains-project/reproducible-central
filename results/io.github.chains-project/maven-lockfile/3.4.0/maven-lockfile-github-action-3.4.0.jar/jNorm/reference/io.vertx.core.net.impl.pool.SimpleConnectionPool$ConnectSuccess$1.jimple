class io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1 extends io.vertx.core.net.impl.pool.Task
{
final io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess)
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1 v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0> = v1;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot v11, v14, v4;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess v1, v10, v13, v3, v7;
io.vertx.core.Promise v12;
io.vertx.core.Future v6;
io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1 v0;
io.vertx.core.impl.EventLoopContext v5;
io.vertx.core.net.impl.pool.PoolWaiter v2, v8;
java.lang.Object v15;
io.vertx.core.Handler v9;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
if v2 == null goto label1;
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v4 = v3.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v5 = v4.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: io.vertx.core.impl.EventLoopContext context>;
v6 = <io.vertx.core.net.impl.pool.SimpleConnectionPool: io.vertx.core.Future POOL_CLOSED>;
v7 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v8 = v7.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.PoolWaiter waiter>;
v9 = v8.<io.vertx.core.net.impl.pool.PoolWaiter: io.vertx.core.Handler handler>;
virtualinvoke v5.<io.vertx.core.impl.EventLoopContext: void emit(java.lang.Object,io.vertx.core.Handler)>(v6, v9);
label1:
v10 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v11 = v10.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v12 = v11.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: io.vertx.core.Promise result>;
v13 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess$1: io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess this$0>;
v14 = v13.<io.vertx.core.net.impl.pool.SimpleConnectionPool$ConnectSuccess: io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot slot>;
v15 = v14.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Slot: java.lang.Object connection>;
interfaceinvoke v12.<io.vertx.core.Promise: void complete(java.lang.Object)>(v15);
return;
}
}