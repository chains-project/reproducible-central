class io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2 extends io.vertx.core.net.impl.pool.Task
{
final java.util.List val$res;
final io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict this$0;
void <init>(io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict, java.util.List)
{
java.util.List v2;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict v1;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2 v0;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2;
v1 := @parameter0: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict;
v2 := @parameter1: java.util.List;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict this$0> = v1;
v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2: java.util.List val$res> = v2;
specialinvoke v0.<io.vertx.core.net.impl.pool.Task: void <init>()>();
return;
}
public void run()
{
java.util.List v3;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2 v0;
io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict v1;
io.vertx.core.Handler v2;
io.vertx.core.Future v4;
v0 := @this: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2;
v1 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2: io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict this$0>;
v2 = v1.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict: io.vertx.core.Handler handler>;
v3 = v0.<io.vertx.core.net.impl.pool.SimpleConnectionPool$Evict$2: java.util.List val$res>;
v4 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v3);
interfaceinvoke v2.<io.vertx.core.Handler: void handle(java.lang.Object)>(v4);
return;
}
}