public class io.vertx.core.parsetools.impl.JsonEventImpl extends java.lang.Object implements io.vertx.core.parsetools.JsonEvent
{
private final com.fasterxml.jackson.core.JsonToken token;
private final io.vertx.core.parsetools.JsonEventType type;
private final java.lang.String field;
private final java.lang.Object value;
public void <init>(com.fasterxml.jackson.core.JsonToken, io.vertx.core.parsetools.JsonEventType, java.lang.String, java.lang.Object)
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
io.vertx.core.parsetools.JsonEventType v2;
java.lang.Object v4;
com.fasterxml.jackson.core.JsonToken v1;
java.lang.String v3;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 := @parameter0: com.fasterxml.jackson.core.JsonToken;
v2 := @parameter1: io.vertx.core.parsetools.JsonEventType;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.parsetools.impl.JsonEventImpl: com.fasterxml.jackson.core.JsonToken token> = v1;
v0.<io.vertx.core.parsetools.impl.JsonEventImpl: io.vertx.core.parsetools.JsonEventType type> = v2;
v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.String field> = v3;
v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value> = v4;
return;
}
public com.fasterxml.jackson.core.JsonToken token()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
com.fasterxml.jackson.core.JsonToken v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: com.fasterxml.jackson.core.JsonToken token>;
return v1;
}
public io.vertx.core.parsetools.JsonEventType type()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
io.vertx.core.parsetools.JsonEventType v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: io.vertx.core.parsetools.JsonEventType type>;
return v1;
}
public java.lang.String fieldName()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.String v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.String field>;
return v1;
}
public java.lang.Object value()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v1;
}
public boolean isNumber()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v2 = v1 instanceof java.lang.Number;
return v2;
}
public boolean isBoolean()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v2 = v1 instanceof java.lang.Boolean;
return v2;
}
public boolean isString()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v2 = v1 instanceof java.lang.String;
return v2;
}
public boolean isNull()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
io.vertx.core.parsetools.JsonEventType v1, v2;
java.lang.Object v3;
boolean v4;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: io.vertx.core.parsetools.JsonEventType type>;
v2 = <io.vertx.core.parsetools.JsonEventType: io.vertx.core.parsetools.JsonEventType VALUE>;
if v1 != v2 goto label1;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v3 != null goto label1;
v4 = 1;
goto label2;
label1:
v4 = 0;
label2:
return v4;
}
public boolean isObject()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v2 = v1 instanceof io.vertx.core.json.JsonObject;
return v2;
}
public boolean isArray()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
boolean v2;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v2 = v1 instanceof io.vertx.core.json.JsonArray;
return v2;
}
public java.lang.Object mapTo(java.lang.Class)
{
io.vertx.core.json.DecodeException v6;
io.vertx.core.json.jackson.JacksonCodec v2;
java.lang.Exception v5;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Class v1;
java.lang.Object v3, v4;
java.lang.String v7;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 := @parameter0: java.lang.Class;
label1:
v2 = <io.vertx.core.json.jackson.JacksonFactory: io.vertx.core.json.jackson.JacksonCodec CODEC>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = virtualinvoke v2.<io.vertx.core.json.jackson.JacksonCodec: java.lang.Object fromValue(java.lang.Object,java.lang.Class)>(v3, v1);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new io.vertx.core.json.DecodeException;
v7 = virtualinvoke v5.<java.lang.Exception: java.lang.String getMessage()>();
specialinvoke v6.<io.vertx.core.json.DecodeException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.lang.Object mapTo(com.fasterxml.jackson.core.type.TypeReference)
{
io.vertx.core.json.DecodeException v6;
io.vertx.core.json.jackson.JacksonCodec v2;
java.lang.Exception v5;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v3, v4;
java.lang.String v7;
com.fasterxml.jackson.core.type.TypeReference v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 := @parameter0: com.fasterxml.jackson.core.type.TypeReference;
label1:
v2 = <io.vertx.core.json.jackson.JacksonFactory: io.vertx.core.json.jackson.JacksonCodec CODEC>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = virtualinvoke v2.<io.vertx.core.json.jackson.JacksonCodec: java.lang.Object fromValue(java.lang.Object,com.fasterxml.jackson.core.type.TypeReference)>(v3, v1);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new io.vertx.core.json.DecodeException;
v7 = virtualinvoke v5.<java.lang.Exception: java.lang.String getMessage()>();
specialinvoke v6.<io.vertx.core.json.DecodeException: void <init>(java.lang.String,java.lang.Throwable)>(v7, v5);
throw v6;
catch java.lang.Exception from label1 to label2 with label3;
}
public java.lang.Integer integerValue()
{
java.lang.Integer v7;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
int v6;
java.lang.Object v1, v2, v3, v5;
boolean v4;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v1 == null goto label2;
v2 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = v3 instanceof java.lang.Integer;
if v4 == 0 goto label1;
v5 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v5;
label1:
v6 = virtualinvoke v2.<java.lang.Number: int intValue()>();
v7 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
return v7;
label2:
return null;
}
public java.lang.Long longValue()
{
long v6;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Long v7;
java.lang.Object v1, v2, v3, v5;
boolean v4;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v1 == null goto label2;
v2 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = v3 instanceof java.lang.Integer;
if v4 == 0 goto label1;
v5 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v5;
label1:
v6 = virtualinvoke v2.<java.lang.Number: long longValue()>();
v7 = staticinvoke <java.lang.Long: java.lang.Long valueOf(long)>(v6);
return v7;
label2:
return null;
}
public java.lang.Float floatValue()
{
java.lang.Float v7;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
float v6;
java.lang.Object v1, v2, v3, v5;
boolean v4;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v1 == null goto label2;
v2 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = v3 instanceof java.lang.Float;
if v4 == 0 goto label1;
v5 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v5;
label1:
v6 = virtualinvoke v2.<java.lang.Number: float floatValue()>();
v7 = staticinvoke <java.lang.Float: java.lang.Float valueOf(float)>(v6);
return v7;
label2:
return null;
}
public java.lang.Double doubleValue()
{
java.lang.Double v7;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1, v2, v3, v5;
boolean v4;
double v6;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v1 == null goto label2;
v2 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = v3 instanceof java.lang.Double;
if v4 == 0 goto label1;
v5 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v5;
label1:
v6 = virtualinvoke v2.<java.lang.Number: double doubleValue()>();
v7 = staticinvoke <java.lang.Double: java.lang.Double valueOf(double)>(v6);
return v7;
label2:
return null;
}
public java.lang.Boolean booleanValue()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v1;
}
public java.lang.String stringValue()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v1;
}
public io.vertx.core.buffer.Buffer binaryValue()
{
byte[] v4;
io.vertx.core.parsetools.impl.JsonEventImpl v0;
io.vertx.core.buffer.Buffer v5;
java.util.Base64$Decoder v2;
java.lang.Object v1, v3;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v1 == null goto label1;
v2 = <io.vertx.core.json.impl.JsonUtil: java.util.Base64$Decoder BASE64_DECODER>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = virtualinvoke v2.<java.util.Base64$Decoder: byte[] decode(java.lang.String)>(v3);
v5 = staticinvoke <io.vertx.core.buffer.Buffer: io.vertx.core.buffer.Buffer buffer(byte[])>(v4);
goto label2;
label1:
v5 = null;
label2:
return v5;
}
public java.time.Instant instantValue()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.time.format.DateTimeFormatter v2;
java.lang.Object v1, v3;
java.time.Instant v5;
java.time.temporal.TemporalAccessor v4;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
if v1 == null goto label1;
v2 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_INSTANT>;
v3 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
v4 = virtualinvoke v2.<java.time.format.DateTimeFormatter: java.time.temporal.TemporalAccessor parse(java.lang.CharSequence)>(v3);
v5 = staticinvoke <java.time.Instant: java.time.Instant 'from'(java.time.temporal.TemporalAccessor)>(v4);
goto label2;
label1:
v5 = null;
label2:
return v5;
}
public io.vertx.core.json.JsonObject objectValue()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v1;
}
public io.vertx.core.json.JsonArray arrayValue()
{
io.vertx.core.parsetools.impl.JsonEventImpl v0;
java.lang.Object v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonEventImpl;
v1 = v0.<io.vertx.core.parsetools.impl.JsonEventImpl: java.lang.Object value>;
return v1;
}
}