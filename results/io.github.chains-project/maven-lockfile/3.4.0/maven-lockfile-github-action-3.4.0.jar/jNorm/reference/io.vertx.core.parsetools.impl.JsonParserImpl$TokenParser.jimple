class io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser extends com.fasterxml.jackson.core.base.ParserBase
{
private java.util.ArrayDeque tokens;
private java.lang.String text;
private void <init>(com.fasterxml.jackson.core.io.IOContext, int)
{
com.fasterxml.jackson.core.io.IOContext v1;
int v2;
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.util.ArrayDeque v3;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 := @parameter0: com.fasterxml.jackson.core.io.IOContext;
v2 := @parameter1: int;
specialinvoke v0.<com.fasterxml.jackson.core.base.ParserBase: void <init>(com.fasterxml.jackson.core.io.IOContext,int)>(v1, v2);
v3 = new java.util.ArrayDeque;
specialinvoke v3.<java.util.ArrayDeque: void <init>()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens> = v3;
return;
}
public com.fasterxml.jackson.core.JsonToken nextToken() throws java.io.IOException
{
long v14;
com.fasterxml.jackson.core.json.JsonReadContext v9;
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
com.fasterxml.jackson.core.JsonToken v10, v11, v15, v16, v20, v21, v24, v5, v6;
boolean v2;
double v19;
java.lang.Object v13, v18, v23, v4, v8;
java.util.ArrayDeque v1, v12, v17, v22, v3, v7;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v2 = virtualinvoke v1.<java.util.ArrayDeque: boolean isEmpty()>();
if v2 == 0 goto label1;
return null;
label1:
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.lang.String text> = null;
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: int _numTypesValid> = 0;
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: long _numberLong> = 0L;
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: double _numberDouble> = 0.0;
v3 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v4 = virtualinvoke v3.<java.util.ArrayDeque: java.lang.Object removeFirst()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.JsonToken _currToken> = v4;
v5 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v6 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken FIELD_NAME>;
if v5 != v6 goto label2;
v7 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v8 = virtualinvoke v7.<java.util.ArrayDeque: java.lang.Object removeFirst()>();
v9 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.json.JsonReadContext _parsingContext>;
virtualinvoke v9.<com.fasterxml.jackson.core.json.JsonReadContext: void setCurrentName(java.lang.String)>(v8);
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.lang.String text> = v8;
goto label5;
label2:
v10 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v11 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_INT>;
if v10 != v11 goto label3;
v12 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v13 = virtualinvoke v12.<java.util.ArrayDeque: java.lang.Object removeFirst()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: int _numTypesValid> = 2;
v14 = virtualinvoke v13.<java.lang.Long: long longValue()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: long _numberLong> = v14;
goto label5;
label3:
v15 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v16 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_NUMBER_FLOAT>;
if v15 != v16 goto label4;
v17 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v18 = virtualinvoke v17.<java.util.ArrayDeque: java.lang.Object removeFirst()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: int _numTypesValid> = 8;
v19 = virtualinvoke v18.<java.lang.Double: double doubleValue()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: double _numberDouble> = v19;
goto label5;
label4:
v20 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.JsonToken _currToken>;
v21 = <com.fasterxml.jackson.core.JsonToken: com.fasterxml.jackson.core.JsonToken VALUE_STRING>;
if v20 != v21 goto label5;
v22 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.util.ArrayDeque tokens>;
v23 = virtualinvoke v22.<java.util.ArrayDeque: java.lang.Object removeFirst()>();
v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.lang.String text> = v23;
label5:
v24 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: com.fasterxml.jackson.core.JsonToken _currToken>;
return v24;
}
public java.lang.String getText()
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.lang.String v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 = v0.<io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser: java.lang.String text>;
return v1;
}
public char[] getTextCharacters()
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public int getTextLength()
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public int getTextOffset()
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public com.fasterxml.jackson.core.ObjectCodec getCodec()
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.lang.UnsupportedOperationException v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void setCodec(com.fasterxml.jackson.core.ObjectCodec)
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
java.lang.UnsupportedOperationException v2;
com.fasterxml.jackson.core.ObjectCodec v1;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
v1 := @parameter0: com.fasterxml.jackson.core.ObjectCodec;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
protected void _closeInput()
{
io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser v0;
v0 := @this: io.vertx.core.parsetools.impl.JsonParserImpl$TokenParser;
return;
}
}