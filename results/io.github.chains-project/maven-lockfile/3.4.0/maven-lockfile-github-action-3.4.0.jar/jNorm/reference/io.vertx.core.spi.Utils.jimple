class io.vertx.core.spi.Utils extends java.lang.Object
{
void <init>()
{
io.vertx.core.spi.Utils v0;
v0 := @this: io.vertx.core.spi.Utils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static io.vertx.core.spi.JsonFactory load()
{
java.util.Iterator v5;
java.util.Collection v1;
java.util.function.ToIntFunction v2;
io.vertx.core.json.jackson.JacksonFactory v7;
java.util.ArrayList v0;
int v4;
java.lang.Object v6;
java.util.Comparator v3;
v0 = new java.util.ArrayList;
v1 = staticinvoke <io.vertx.core.ServiceHelper: java.util.Collection loadFactories(java.lang.Class)>(class "Lio/vertx/core/spi/JsonFactory;");
specialinvoke v0.<java.util.ArrayList: void <init>(java.util.Collection)>(v1);
v2 = staticinvoke <io.vertx.core.spi.Utils$order__1178: java.util.function.ToIntFunction bootstrap$()>();
v3 = staticinvoke <java.util.Comparator: java.util.Comparator comparingInt(java.util.function.ToIntFunction)>(v2);
interfaceinvoke v0.<java.util.List: void sort(java.util.Comparator)>(v3);
v4 = interfaceinvoke v0.<java.util.List: int size()>();
if v4 <= 0 goto label1;
v5 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
v6 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
return v6;
label1:
v7 = <io.vertx.core.json.jackson.JacksonFactory: io.vertx.core.json.jackson.JacksonFactory INSTANCE>;
return v7;
}
}