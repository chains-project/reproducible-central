public interface  io.vertx.core.spi.VertxTracerFactory extends java.lang.Object implements io.vertx.core.spi.VertxServiceProvider
{
public static final io.vertx.core.spi.VertxTracerFactory NOOP;
public void init(io.vertx.core.impl.VertxBuilder)
{
io.vertx.core.tracing.TracingOptions v3;
io.vertx.core.spi.VertxTracerFactory v0;
io.vertx.core.VertxOptions v2;
io.vertx.core.impl.VertxBuilder v1;
io.vertx.core.spi.tracing.VertxTracer v4, v5;
v0 := @this: io.vertx.core.spi.VertxTracerFactory;
v1 := @parameter0: io.vertx.core.impl.VertxBuilder;
v2 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.VertxOptions options()>();
v3 = virtualinvoke v2.<io.vertx.core.VertxOptions: io.vertx.core.tracing.TracingOptions getTracingOptions()>();
if v3 == null goto label1;
v4 = virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.spi.tracing.VertxTracer tracer()>();
if v4 != null goto label1;
v5 = interfaceinvoke v0.<io.vertx.core.spi.VertxTracerFactory: io.vertx.core.spi.tracing.VertxTracer tracer(io.vertx.core.tracing.TracingOptions)>(v3);
virtualinvoke v1.<io.vertx.core.impl.VertxBuilder: io.vertx.core.impl.VertxBuilder tracer(io.vertx.core.spi.tracing.VertxTracer)>(v5);
label1:
return;
}
public abstract io.vertx.core.spi.tracing.VertxTracer tracer(io.vertx.core.tracing.TracingOptions);
public io.vertx.core.tracing.TracingOptions newOptions()
{
io.vertx.core.tracing.TracingOptions v1;
io.vertx.core.spi.VertxTracerFactory v0;
v0 := @this: io.vertx.core.spi.VertxTracerFactory;
v1 = new io.vertx.core.tracing.TracingOptions;
specialinvoke v1.<io.vertx.core.tracing.TracingOptions: void <init>()>();
return v1;
}
public io.vertx.core.tracing.TracingOptions newOptions(io.vertx.core.json.JsonObject)
{
io.vertx.core.json.JsonObject v1;
io.vertx.core.tracing.TracingOptions v2;
io.vertx.core.spi.VertxTracerFactory v0;
v0 := @this: io.vertx.core.spi.VertxTracerFactory;
v1 := @parameter0: io.vertx.core.json.JsonObject;
v2 = new io.vertx.core.tracing.TracingOptions;
specialinvoke v2.<io.vertx.core.tracing.TracingOptions: void <init>(io.vertx.core.json.JsonObject)>(v1);
return v2;
}
static void <clinit>()
{
io.vertx.core.spi.VertxTracerFactory v0;
v0 = staticinvoke <io.vertx.core.spi.VertxTracerFactory$lambda_static_0__1176: io.vertx.core.spi.VertxTracerFactory bootstrap$()>();
<io.vertx.core.spi.VertxTracerFactory: io.vertx.core.spi.VertxTracerFactory NOOP> = v0;
return;
}
}