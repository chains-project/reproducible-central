class io.vertx.core.spi.tls.DefaultJDKCipherSuite extends java.lang.Object
{
private static final java.util.List DEFAULT_JDK_CIPHER_SUITE;
void <init>()
{
io.vertx.core.spi.tls.DefaultJDKCipherSuite v0;
v0 := @this: io.vertx.core.spi.tls.DefaultJDKCipherSuite;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.util.List get()
{
java.util.List v0;
v0 = <io.vertx.core.spi.tls.DefaultJDKCipherSuite: java.util.List DEFAULT_JDK_CIPHER_SUITE>;
return v0;
}
static void <clinit>()
{
java.lang.Throwable v5;
java.util.List v6;
javax.net.ssl.SSLContext v2;
java.lang.String[] v4;
java.util.ArrayList v0, v1;
javax.net.ssl.SSLEngine v3;
v0 = new java.util.ArrayList;
specialinvoke v0.<java.util.ArrayList: void <init>()>();
v1 = v0;
label1:
v2 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLS");
virtualinvoke v2.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, null, null);
v3 = virtualinvoke v2.<javax.net.ssl.SSLContext: javax.net.ssl.SSLEngine createSSLEngine()>();
v4 = virtualinvoke v3.<javax.net.ssl.SSLEngine: java.lang.String[] getEnabledCipherSuites()>();
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v0, v4);
label2:
goto label4;
label3:
v5 := @caughtexception;
v1 = null;
label4:
if v1 == null goto label5;
v6 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
goto label6;
label5:
v6 = null;
label6:
<io.vertx.core.spi.tls.DefaultJDKCipherSuite: java.util.List DEFAULT_JDK_CIPHER_SUITE> = v6;
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
}