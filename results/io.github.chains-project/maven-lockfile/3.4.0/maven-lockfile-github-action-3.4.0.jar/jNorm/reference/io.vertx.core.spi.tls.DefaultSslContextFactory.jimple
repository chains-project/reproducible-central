public class io.vertx.core.spi.tls.DefaultSslContextFactory extends java.lang.Object implements io.vertx.core.spi.tls.SslContextFactory
{
private final io.netty.handler.ssl.SslProvider sslProvider;
private final boolean sslSessionCacheEnabled;
private java.util.Set enabledCipherSuites;
private java.util.List applicationProtocols;
private boolean useAlpn;
private io.netty.handler.ssl.ClientAuth clientAuth;
private boolean forClient;
private javax.net.ssl.KeyManagerFactory kmf;
private javax.net.ssl.TrustManagerFactory tmf;
public void <init>(io.netty.handler.ssl.SslProvider, boolean)
{
io.netty.handler.ssl.SslProvider v1;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
boolean v2;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: io.netty.handler.ssl.SslProvider;
v2 := @parameter1: boolean;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: io.netty.handler.ssl.SslProvider sslProvider> = v1;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: boolean sslSessionCacheEnabled> = v2;
return;
}
public io.vertx.core.spi.tls.SslContextFactory useAlpn(boolean)
{
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
boolean v1;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: boolean;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: boolean useAlpn> = v1;
return v0;
}
public io.vertx.core.spi.tls.SslContextFactory clientAuth(io.netty.handler.ssl.ClientAuth)
{
io.netty.handler.ssl.ClientAuth v1;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: io.netty.handler.ssl.ClientAuth;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: io.netty.handler.ssl.ClientAuth clientAuth> = v1;
return v0;
}
public io.vertx.core.spi.tls.SslContextFactory forClient(boolean)
{
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
boolean v1;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: boolean;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: boolean forClient> = v1;
return v0;
}
public io.vertx.core.spi.tls.SslContextFactory keyMananagerFactory(javax.net.ssl.KeyManagerFactory)
{
javax.net.ssl.KeyManagerFactory v1;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: javax.net.ssl.KeyManagerFactory;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: javax.net.ssl.KeyManagerFactory kmf> = v1;
return v0;
}
public io.vertx.core.spi.tls.SslContextFactory trustManagerFactory(javax.net.ssl.TrustManagerFactory)
{
javax.net.ssl.TrustManagerFactory v1;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: javax.net.ssl.TrustManagerFactory;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: javax.net.ssl.TrustManagerFactory tmf> = v1;
return v0;
}
public io.netty.handler.ssl.SslContext create() throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.SslContext v5;
javax.net.ssl.TrustManagerFactory v4;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
javax.net.ssl.KeyManagerFactory v3;
boolean v1, v2;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: boolean useAlpn>;
v2 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: boolean forClient>;
v3 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: javax.net.ssl.KeyManagerFactory kmf>;
v4 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: javax.net.ssl.TrustManagerFactory tmf>;
v5 = specialinvoke v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: io.netty.handler.ssl.SslContext createContext(boolean,boolean,javax.net.ssl.KeyManagerFactory,javax.net.ssl.TrustManagerFactory)>(v1, v2, v3, v4);
return v5;
}
public io.vertx.core.spi.tls.SslContextFactory enabledCipherSuites(java.util.Set)
{
java.util.Set v1;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: java.util.Set;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: java.util.Set enabledCipherSuites> = v1;
return v0;
}
public io.vertx.core.spi.tls.SslContextFactory applicationProtocols(java.util.List)
{
java.util.List v1;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: java.util.List;
v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: java.util.List applicationProtocols> = v1;
return v0;
}
private io.netty.handler.ssl.SslContext createContext(boolean, boolean, javax.net.ssl.KeyManagerFactory, javax.net.ssl.TrustManagerFactory) throws javax.net.ssl.SSLException
{
io.netty.handler.ssl.ClientAuth v25, v26;
io.netty.handler.ssl.ApplicationProtocolConfig$Protocol v21;
int[] v7;
javax.net.ssl.SSLSessionContext v29;
io.netty.handler.ssl.ApplicationProtocolConfig v20;
boolean v1, v12, v14, v2, v28, v30, v31;
javax.net.ssl.TrustManagerFactory v4;
java.util.Collection v6;
java.util.List v17, v18, v24;
io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior v22;
io.vertx.core.spi.tls.DefaultSslContextFactory v0;
io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior v23;
int v10, v16, v19, v9;
java.lang.UnsupportedOperationException v15;
io.netty.handler.ssl.SslContext v27;
javax.net.ssl.KeyManagerFactory v3;
io.netty.handler.ssl.SslProvider v11, v13, v8;
io.netty.handler.ssl.SslContextBuilder v5;
v0 := @this: io.vertx.core.spi.tls.DefaultSslContextFactory;
v1 := @parameter0: boolean;
v2 := @parameter1: boolean;
v3 := @parameter2: javax.net.ssl.KeyManagerFactory;
v4 := @parameter3: javax.net.ssl.TrustManagerFactory;
if v2 == 0 goto label01;
v5 = staticinvoke <io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder forClient()>();
if v3 == null goto label02;
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder keyManager(javax.net.ssl.KeyManagerFactory)>(v3);
goto label02;
label01:
v5 = staticinvoke <io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder forServer(javax.net.ssl.KeyManagerFactory)>(v3);
label02:
v6 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: java.util.Set enabledCipherSuites>;
v7 = <io.vertx.core.spi.tls.DefaultSslContextFactory$1: int[] $SwitchMap$io$netty$handler$ssl$SslProvider>;
v8 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: io.netty.handler.ssl.SslProvider sslProvider>;
v9 = virtualinvoke v8.<io.netty.handler.ssl.SslProvider: int ordinal()>();
v10 = v7[v9];
lookupswitch(v10)
{
case 1: goto label03;
case 2: goto label05;
default: goto label07;
};
label03:
v11 = <io.netty.handler.ssl.SslProvider: io.netty.handler.ssl.SslProvider OPENSSL>;
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder sslProvider(io.netty.handler.ssl.SslProvider)>(v11);
if v6 == null goto label04;
v12 = interfaceinvoke v6.<java.util.Collection: boolean isEmpty()>();
if v12 == 0 goto label08;
label04:
v6 = staticinvoke <io.netty.handler.ssl.OpenSsl: java.util.Set availableOpenSslCipherSuites()>();
goto label08;
label05:
v13 = <io.netty.handler.ssl.SslProvider: io.netty.handler.ssl.SslProvider JDK>;
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder sslProvider(io.netty.handler.ssl.SslProvider)>(v13);
if v6 == null goto label06;
v14 = interfaceinvoke v6.<java.util.Collection: boolean isEmpty()>();
if v14 == 0 goto label08;
label06:
v6 = staticinvoke <io.vertx.core.spi.tls.DefaultJDKCipherSuite: java.util.List get()>();
goto label08;
label07:
v15 = new java.lang.UnsupportedOperationException;
specialinvoke v15.<java.lang.UnsupportedOperationException: void <init>()>();
throw v15;
label08:
if v4 == null goto label09;
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder trustManager(javax.net.ssl.TrustManagerFactory)>(v4);
label09:
if v6 == null goto label10;
v16 = interfaceinvoke v6.<java.util.Collection: int size()>();
if v16 <= 0 goto label10;
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder ciphers(java.lang.Iterable)>(v6);
label10:
if v1 == 0 goto label11;
v17 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: java.util.List applicationProtocols>;
if v17 == null goto label11;
v18 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: java.util.List applicationProtocols>;
v19 = interfaceinvoke v18.<java.util.List: int size()>();
if v19 <= 0 goto label11;
v20 = new io.netty.handler.ssl.ApplicationProtocolConfig;
v21 = <io.netty.handler.ssl.ApplicationProtocolConfig$Protocol: io.netty.handler.ssl.ApplicationProtocolConfig$Protocol ALPN>;
v22 = <io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior: io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior NO_ADVERTISE>;
v23 = <io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior: io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior ACCEPT>;
v24 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: java.util.List applicationProtocols>;
specialinvoke v20.<io.netty.handler.ssl.ApplicationProtocolConfig: void <init>(io.netty.handler.ssl.ApplicationProtocolConfig$Protocol,io.netty.handler.ssl.ApplicationProtocolConfig$SelectorFailureBehavior,io.netty.handler.ssl.ApplicationProtocolConfig$SelectedListenerFailureBehavior,java.lang.Iterable)>(v21, v22, v23, v24);
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder applicationProtocolConfig(io.netty.handler.ssl.ApplicationProtocolConfig)>(v20);
label11:
v25 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: io.netty.handler.ssl.ClientAuth clientAuth>;
if v25 == null goto label12;
v26 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: io.netty.handler.ssl.ClientAuth clientAuth>;
virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContextBuilder clientAuth(io.netty.handler.ssl.ClientAuth)>(v26);
label12:
v27 = virtualinvoke v5.<io.netty.handler.ssl.SslContextBuilder: io.netty.handler.ssl.SslContext build()>();
v28 = v27 instanceof io.netty.handler.ssl.OpenSslServerContext;
if v28 == 0 goto label13;
v29 = virtualinvoke v27.<io.netty.handler.ssl.SslContext: javax.net.ssl.SSLSessionContext sessionContext()>();
v30 = v29 instanceof io.netty.handler.ssl.OpenSslServerSessionContext;
if v30 == 0 goto label13;
v31 = v0.<io.vertx.core.spi.tls.DefaultSslContextFactory: boolean sslSessionCacheEnabled>;
virtualinvoke v29.<io.netty.handler.ssl.OpenSslServerSessionContext: void setSessionCacheEnabled(boolean)>(v31);
label13:
return v27;
}
}