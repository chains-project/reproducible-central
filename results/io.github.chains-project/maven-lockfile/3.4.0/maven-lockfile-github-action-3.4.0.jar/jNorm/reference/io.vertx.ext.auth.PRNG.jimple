public class io.vertx.ext.auth.PRNG extends java.lang.Object implements io.vertx.ext.auth.VertxContextPRNG
{
private static final int DEFAULT_SEED_INTERVAL_MILLIS;
private static final int DEFAULT_SEED_BITS;
private final java.security.SecureRandom random;
private final long seedID;
private final io.vertx.core.Vertx vertx;
private volatile boolean dirty;
public void <init>(io.vertx.core.Vertx)
{
byte[] v12;
io.vertx.ext.auth.PRNG v0;
java.util.concurrent.atomic.AtomicBoolean v13;
long v15;
java.lang.Integer v3, v5;
java.security.SecureRandom v10, v11, v7;
int v4, v6;
java.lang.String v2;
io.vertx.core.Vertx v1;
java.lang.RuntimeException v9;
java.security.NoSuchAlgorithmException v8;
io.vertx.core.Handler v14;
v0 := @this: io.vertx.ext.auth.PRNG;
v1 := @parameter0: io.vertx.core.Vertx;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 0;
v0.<io.vertx.ext.auth.PRNG: io.vertx.core.Vertx vertx> = v1;
v2 = staticinvoke <java.lang.System: java.lang.String getProperty(java.lang.String)>("io.vertx.ext.auth.prng.algorithm");
v3 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>("io.vertx.ext.auth.prng.seed.interval", 300000);
v4 = virtualinvoke v3.<java.lang.Integer: int intValue()>();
v5 = staticinvoke <java.lang.Integer: java.lang.Integer getInteger(java.lang.String,int)>("io.vertx.ext.auth.prng.seed.bits", 64);
v6 = virtualinvoke v5.<java.lang.Integer: int intValue()>();
if v2 == null goto label4;
label1:
v7 = staticinvoke <java.security.SecureRandom: java.security.SecureRandom getInstance(java.lang.String)>(v2);
v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random> = v7;
label2:
goto label5;
label3:
v8 := @caughtexception;
v9 = new java.lang.RuntimeException;
specialinvoke v9.<java.lang.RuntimeException: void <init>(java.lang.Throwable)>(v8);
throw v9;
label4:
v10 = new java.security.SecureRandom;
specialinvoke v10.<java.security.SecureRandom: void <init>()>();
v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random> = v10;
label5:
v11 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v12 = newarray (byte)[1];
virtualinvoke v11.<java.security.SecureRandom: void nextBytes(byte[])>(v12);
if v4 <= 0 goto label6;
if v6 <= 0 goto label6;
v13 = new java.util.concurrent.atomic.AtomicBoolean;
specialinvoke v13.<java.util.concurrent.atomic.AtomicBoolean: void <init>(boolean)>(0);
v14 = staticinvoke <io.vertx.ext.auth.PRNG$lambda_new_2__870: io.vertx.core.Handler bootstrap$(io.vertx.ext.auth.PRNG,java.util.concurrent.atomic.AtomicBoolean,io.vertx.core.Vertx,int)>(v0, v13, v1, v6);
v15 = interfaceinvoke v1.<io.vertx.core.Vertx: long setPeriodic(long,io.vertx.core.Handler)>(v4, v14);
v0.<io.vertx.ext.auth.PRNG: long seedID> = v15;
goto label7;
label6:
v0.<io.vertx.ext.auth.PRNG: long seedID> = -1L;
label7:
return;
catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
}
public void close()
{
byte v2;
io.vertx.ext.auth.PRNG v0;
io.vertx.core.Vertx v3;
long v1, v4;
v0 := @this: io.vertx.ext.auth.PRNG;
v1 = v0.<io.vertx.ext.auth.PRNG: long seedID>;
v2 = v1 cmp -1L;
if v2 == 0 goto label1;
v3 = v0.<io.vertx.ext.auth.PRNG: io.vertx.core.Vertx vertx>;
v4 = v0.<io.vertx.ext.auth.PRNG: long seedID>;
interfaceinvoke v3.<io.vertx.core.Vertx: boolean cancelTimer(long)>(v4);
label1:
return;
}
public void nextBytes(byte[])
{
java.security.SecureRandom v2;
byte[] v1;
io.vertx.ext.auth.PRNG v0;
v0 := @this: io.vertx.ext.auth.PRNG;
v1 := @parameter0: byte[];
if v1 == null goto label1;
v2 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
virtualinvoke v2.<java.security.SecureRandom: void nextBytes(byte[])>(v1);
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
label1:
return;
}
public int nextInt()
{
java.lang.Throwable v3;
java.security.SecureRandom v1;
io.vertx.ext.auth.PRNG v0;
int v2;
v0 := @this: io.vertx.ext.auth.PRNG;
label1:
v1 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v2 = virtualinvoke v1.<java.security.SecureRandom: int nextInt()>();
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v2;
label3:
v3 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public int nextInt(int)
{
java.lang.Throwable v4;
java.security.SecureRandom v2;
io.vertx.ext.auth.PRNG v0;
int v1, v3;
v0 := @this: io.vertx.ext.auth.PRNG;
v1 := @parameter0: int;
label1:
v2 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v3 = virtualinvoke v2.<java.security.SecureRandom: int nextInt(int)>(v1);
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v3;
label3:
v4 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v4;
catch java.lang.Throwable from label1 to label2 with label3;
}
public boolean nextBoolean()
{
java.lang.Throwable v3;
java.security.SecureRandom v1;
io.vertx.ext.auth.PRNG v0;
boolean v2;
v0 := @this: io.vertx.ext.auth.PRNG;
label1:
v1 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v2 = virtualinvoke v1.<java.security.SecureRandom: boolean nextBoolean()>();
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v2;
label3:
v3 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public long nextLong()
{
java.lang.Throwable v3;
java.security.SecureRandom v1;
io.vertx.ext.auth.PRNG v0;
long v2;
v0 := @this: io.vertx.ext.auth.PRNG;
label1:
v1 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v2 = virtualinvoke v1.<java.security.SecureRandom: long nextLong()>();
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v2;
label3:
v3 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public float nextFloat()
{
java.lang.Throwable v3;
java.security.SecureRandom v1;
io.vertx.ext.auth.PRNG v0;
float v2;
v0 := @this: io.vertx.ext.auth.PRNG;
label1:
v1 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v2 = virtualinvoke v1.<java.security.SecureRandom: float nextFloat()>();
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v2;
label3:
v3 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public double nextDouble()
{
java.lang.Throwable v3;
java.security.SecureRandom v1;
io.vertx.ext.auth.PRNG v0;
double v2;
v0 := @this: io.vertx.ext.auth.PRNG;
label1:
v1 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v2 = virtualinvoke v1.<java.security.SecureRandom: double nextDouble()>();
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v2;
label3:
v3 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public double nextGaussian()
{
java.lang.Throwable v3;
java.security.SecureRandom v1;
io.vertx.ext.auth.PRNG v0;
double v2;
v0 := @this: io.vertx.ext.auth.PRNG;
label1:
v1 = v0.<io.vertx.ext.auth.PRNG: java.security.SecureRandom random>;
v2 = virtualinvoke v1.<java.security.SecureRandom: double nextGaussian()>();
label2:
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
return v2;
label3:
v3 := @caughtexception;
v0.<io.vertx.ext.auth.PRNG: boolean dirty> = 1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public java.lang.String nextString(int)
{
byte[] v2;
io.vertx.ext.auth.PRNG v0;
int v1;
java.lang.String v3;
v0 := @this: io.vertx.ext.auth.PRNG;
v1 := @parameter0: int;
v2 = newarray (byte)[v1];
virtualinvoke v0.<io.vertx.ext.auth.PRNG: void nextBytes(byte[])>(v2);
v3 = staticinvoke <io.vertx.ext.auth.impl.Codec: java.lang.String base64UrlEncode(byte[])>(v2);
return v3;
}
}