class io.vertx.ext.auth.impl.cose.CWK$NV extends java.lang.Object
{
private final java.lang.String name;
private final java.util.Map values;
private transient void <init>(java.lang.String, java.lang.String[])
{
java.lang.String[] v2;
java.util.HashMap v8;
java.lang.IllegalArgumentException v7;
io.vertx.ext.auth.impl.cose.CWK$NV v0;
java.util.Map v14, v4;
int v10, v12, v3, v5, v6, v9;
java.lang.String v1, v11, v13;
v0 := @this: io.vertx.ext.auth.impl.cose.CWK$NV;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.auth.impl.cose.CWK$NV: java.lang.String name> = v1;
if v2 == null goto label1;
v3 = lengthof v2;
if v3 != 0 goto label2;
label1:
v4 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v0.<io.vertx.ext.auth.impl.cose.CWK$NV: java.util.Map values> = v4;
goto label6;
label2:
v5 = lengthof v2;
v6 = v5 % 2;
if v6 == 0 goto label3;
v7 = new java.lang.IllegalArgumentException;
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("pairs must have even length");
throw v7;
label3:
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
v9 = 0;
label4:
v10 = lengthof v2;
if v9 >= v10 goto label5;
v11 = v2[v9];
v12 = v9 + 1;
v13 = v2[v12];
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v11, v13);
v9 = v9 + 2;
goto label4;
label5:
v14 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v8);
v0.<io.vertx.ext.auth.impl.cose.CWK$NV: java.util.Map values> = v14;
label6:
return;
}
}