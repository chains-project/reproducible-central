public class io.vertx.ext.web.client.CachingWebClientOptions extends io.vertx.ext.web.client.WebClientOptions
{
public static final java.util.Set DEFAULT_CACHED_STATUS_CODES;
public static final java.util.Set DEFAULT_CACHED_METHODS;
private boolean enableVaryCaching;
private java.util.Set cachedStatusCodes;
private java.util.Set cachedMethods;
public void <init>()
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v1, v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: void <init>()>();
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = 0;
v1 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_STATUS_CODES>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes> = v1;
v2 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_METHODS>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods> = v2;
return;
}
public void <init>(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2, v3;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: void <init>()>();
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = 0;
v2 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_STATUS_CODES>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes> = v2;
v3 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_METHODS>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods> = v3;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = v1;
return;
}
public void <init>(io.vertx.ext.web.client.WebClientOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v1;
java.util.Set v2, v3;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.ext.web.client.WebClientOptions;
specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: void <init>(io.vertx.ext.web.client.WebClientOptions)>(v1);
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = 0;
v2 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_STATUS_CODES>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes> = v2;
v3 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_METHODS>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods> = v3;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2, v3;
io.vertx.core.json.JsonObject v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: void <init>(io.vertx.core.json.JsonObject)>(v1);
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = 0;
v2 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_STATUS_CODES>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes> = v2;
v3 = <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_METHODS>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods> = v3;
staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.ext.web.client.CachingWebClientOptions)>(v1, v0);
return;
}
void init(io.vertx.ext.web.client.CachingWebClientOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0, v1;
java.util.Set v3, v4;
boolean v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.ext.web.client.CachingWebClientOptions;
specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: void init(io.vertx.ext.web.client.WebClientOptions)>(v1);
v2 = v1.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = v2;
v3 = v1.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes> = v3;
v4 = v1.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods>;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods> = v4;
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.core.json.JsonObject v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.core.json.JsonObject toJson()>();
staticinvoke <io.vertx.ext.web.client.CachingWebClientOptionsConverter: void toJson(io.vertx.ext.web.client.CachingWebClientOptions,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
public io.vertx.ext.web.client.CachingWebClientOptions setEnableVaryCaching(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching> = v1;
return v0;
}
public java.util.Set getCachedStatusCodes()
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes>;
return v1;
}
public io.vertx.ext.web.client.CachingWebClientOptions setCachedStatusCodes(java.util.Set)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.util.Set;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes> = v1;
return v0;
}
public io.vertx.ext.web.client.CachingWebClientOptions addCachedStatusCode(java.lang.Integer)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2;
java.lang.Integer v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.Integer;
v2 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes>;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v1);
return v0;
}
public io.vertx.ext.web.client.CachingWebClientOptions removeCachedStatusCode(java.lang.Integer)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2;
java.lang.Integer v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.Integer;
v2 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedStatusCodes>;
interfaceinvoke v2.<java.util.Set: boolean remove(java.lang.Object)>(v1);
return v0;
}
public java.util.Set getCachedMethods()
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods>;
return v1;
}
public io.vertx.ext.web.client.CachingWebClientOptions setCachedMethods(java.util.Set)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.util.Set;
v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods> = v1;
return v0;
}
public io.vertx.ext.web.client.CachingWebClientOptions addCachedMethod(io.vertx.core.http.HttpMethod)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2;
io.vertx.core.http.HttpMethod v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods>;
interfaceinvoke v2.<java.util.Set: boolean add(java.lang.Object)>(v1);
return v0;
}
public io.vertx.ext.web.client.CachingWebClientOptions removeCachedMethod(io.vertx.core.http.HttpMethod)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
java.util.Set v2;
io.vertx.core.http.HttpMethod v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.http.HttpMethod;
v2 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set cachedMethods>;
interfaceinvoke v2.<java.util.Set: boolean remove(java.lang.Object)>(v1);
return v0;
}
public boolean isVaryCachingEnabled()
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 = v0.<io.vertx.ext.web.client.CachingWebClientOptions: boolean enableVaryCaching>;
return v1;
}
public io.vertx.ext.web.client.CachingWebClientOptions setUserAgentEnabled(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setUserAgentEnabled(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setUserAgent(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setUserAgent(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setFollowRedirects(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setFollowRedirects(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxRedirects(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxRedirects(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSendBufferSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSendBufferSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setReceiveBufferSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setReceiveBufferSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setReuseAddress(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setReuseAddress(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTrafficClass(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTrafficClass(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTcpNoDelay(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTcpNoDelay(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTcpKeepAlive(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTcpKeepAlive(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSoLinger(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSoLinger(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setIdleTimeout(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setIdleTimeout(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setIdleTimeoutUnit(java.util.concurrent.TimeUnit)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.util.concurrent.TimeUnit v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setIdleTimeoutUnit(java.util.concurrent.TimeUnit)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSsl(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSsl(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setKeyCertOptions(io.vertx.core.net.KeyCertOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.KeyCertOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.KeyCertOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setKeyCertOptions(io.vertx.core.net.KeyCertOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.JksOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.JksOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setKeyStoreOptions(io.vertx.core.net.JksOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.PfxOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.PfxOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPfxKeyCertOptions(io.vertx.core.net.PfxOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTrustOptions(io.vertx.core.net.TrustOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.TrustOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.TrustOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTrustOptions(io.vertx.core.net.TrustOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.PemKeyCertOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.PemKeyCertOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPemKeyCertOptions(io.vertx.core.net.PemKeyCertOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.JksOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.JksOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTrustStoreOptions(io.vertx.core.net.JksOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.PfxOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.PfxOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPfxTrustOptions(io.vertx.core.net.PfxOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.PemTrustOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.PemTrustOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPemTrustOptions(io.vertx.core.net.PemTrustOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions addEnabledCipherSuite(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions addEnabledCipherSuite(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions addCrlPath(java.lang.String) throws java.lang.NullPointerException
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions addCrlPath(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions addCrlValue(io.vertx.core.buffer.Buffer) throws java.lang.NullPointerException
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.buffer.Buffer v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.buffer.Buffer;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions addCrlValue(io.vertx.core.buffer.Buffer)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setConnectTimeout(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setConnectTimeout(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTrustAll(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTrustAll(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxPoolSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxPoolSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setHttp2MultiplexingLimit(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setHttp2MultiplexingLimit(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setHttp2MaxPoolSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setHttp2MaxPoolSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setHttp2ConnectionWindowSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setHttp2ConnectionWindowSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setKeepAlive(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setKeepAlive(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPipelining(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPipelining(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPipeliningLimit(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPipeliningLimit(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setVerifyHost(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setVerifyHost(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTryUseCompression(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTryUseCompression(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSendUnmaskedFrames(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSendUnmaskedFrames(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxWebSocketFrameSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxWebSocketFrameSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setDefaultHost(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setDefaultHost(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setDefaultPort(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setDefaultPort(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxChunkSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxChunkSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setProtocolVersion(io.vertx.core.http.HttpVersion)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.http.HttpVersion v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.http.HttpVersion;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setProtocolVersion(io.vertx.core.http.HttpVersion)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxHeaderSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxHeaderSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxWaitQueueSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxWaitQueueSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setUseAlpn(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setUseAlpn(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.SSLEngineOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.SSLEngineOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSslEngineOptions(io.vertx.core.net.SSLEngineOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.JdkSSLEngineOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.JdkSSLEngineOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setJdkSslEngineOptions(io.vertx.core.net.JdkSSLEngineOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.OpenSSLEngineOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.OpenSSLEngineOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setOpenSslEngineOptions(io.vertx.core.net.OpenSSLEngineOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setHttp2ClearTextUpgrade(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setHttp2ClearTextUpgrade(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setAlpnVersions(java.util.List)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.util.List v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.util.List;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setAlpnVersions(java.util.List)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMetricsName(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMetricsName(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.net.ProxyOptions v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.net.ProxyOptions;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setProxyOptions(io.vertx.core.net.ProxyOptions)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setLocalAddress(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setLocalAddress(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setLogActivity(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setLogActivity(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions addEnabledSecureTransportProtocol(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions addEnabledSecureTransportProtocol(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions removeEnabledSecureTransportProtocol(java.lang.String)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.lang.String v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions removeEnabledSecureTransportProtocol(java.lang.String)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setEnabledSecureTransportProtocols(java.util.Set)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.util.Set v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.util.Set;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setEnabledSecureTransportProtocols(java.util.Set)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setReusePort(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setReusePort(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTcpFastOpen(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTcpFastOpen(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTcpCork(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTcpCork(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTcpQuickAck(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTcpQuickAck(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setHttp2KeepAliveTimeout(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setHttp2KeepAliveTimeout(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setForceSni(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setForceSni(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setDecoderInitialBufferSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setDecoderInitialBufferSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setPoolCleanerPeriod(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setPoolCleanerPeriod(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setKeepAliveTimeout(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setKeepAliveTimeout(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxWebSocketMessageSize(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxWebSocketMessageSize(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setMaxInitialLineLength(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setMaxInitialLineLength(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setInitialSettings(io.vertx.core.http.Http2Settings)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
io.vertx.core.http.Http2Settings v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: io.vertx.core.http.Http2Settings;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setInitialSettings(io.vertx.core.http.Http2Settings)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSslHandshakeTimeout(long)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
long v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: long;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSslHandshakeTimeout(long)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setSslHandshakeTimeoutUnit(java.util.concurrent.TimeUnit)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
java.util.concurrent.TimeUnit v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: java.util.concurrent.TimeUnit;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setSslHandshakeTimeoutUnit(java.util.concurrent.TimeUnit)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTryUsePerFrameWebSocketCompression(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTryUsePerFrameWebSocketCompression(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setTryUsePerMessageWebSocketCompression(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setTryUsePerMessageWebSocketCompression(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setWebSocketCompressionLevel(int)
{
int v1;
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: int;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setWebSocketCompressionLevel(int)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setWebSocketCompressionAllowClientNoContext(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setWebSocketCompressionAllowClientNoContext(boolean)>(v1);
return v2;
}
public io.vertx.ext.web.client.CachingWebClientOptions setWebSocketCompressionRequestServerNoContext(boolean)
{
io.vertx.ext.web.client.CachingWebClientOptions v0;
io.vertx.ext.web.client.WebClientOptions v2;
boolean v1;
v0 := @this: io.vertx.ext.web.client.CachingWebClientOptions;
v1 := @parameter0: boolean;
v2 = specialinvoke v0.<io.vertx.ext.web.client.WebClientOptions: io.vertx.ext.web.client.WebClientOptions setWebSocketCompressionRequestServerNoContext(boolean)>(v1);
return v2;
}
private static java.util.Set buildDefaultStatusCodes()
{
java.util.HashSet v0;
java.lang.Integer v2, v3, v4;
java.lang.Integer[] v1;
v0 = new java.util.HashSet;
specialinvoke v0.<java.util.HashSet: void <init>(int)>(3);
v1 = newarray (java.lang.Integer)[3];
v2 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(200);
v1[0] = v2;
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(301);
v1[1] = v3;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(404);
v1[2] = v4;
staticinvoke <java.util.Collections: boolean addAll(java.util.Collection,java.lang.Object[])>(v0, v1);
return v0;
}
private static java.util.Set buildDefaultMethods()
{
java.util.HashSet v0;
io.vertx.core.http.HttpMethod v1;
v0 = new java.util.HashSet;
specialinvoke v0.<java.util.HashSet: void <init>(int)>(1);
v1 = <io.vertx.core.http.HttpMethod: io.vertx.core.http.HttpMethod GET>;
interfaceinvoke v0.<java.util.Set: boolean add(java.lang.Object)>(v1);
return v0;
}
static void <clinit>()
{
java.util.Set v0, v1;
v0 = staticinvoke <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set buildDefaultStatusCodes()>();
<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_STATUS_CODES> = v0;
v1 = staticinvoke <io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set buildDefaultMethods()>();
<io.vertx.ext.web.client.CachingWebClientOptions: java.util.Set DEFAULT_CACHED_METHODS> = v1;
return;
}
}