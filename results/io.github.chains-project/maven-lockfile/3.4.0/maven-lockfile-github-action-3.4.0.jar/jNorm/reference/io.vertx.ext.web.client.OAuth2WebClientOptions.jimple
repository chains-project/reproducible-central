public class io.vertx.ext.web.client.OAuth2WebClientOptions extends java.lang.Object
{
public static final boolean DEFAULT_RENEW_TOKEN_ON_FORBIDDEN;
public static final int DEFAULT_LEEWAY;
private boolean renewTokenOnForbidden;
private int leeway;
public void <init>()
{
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden> = 0;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway> = 0;
return;
}
public void <init>(io.vertx.ext.web.client.OAuth2WebClientOptions)
{
int v3;
io.vertx.ext.web.client.OAuth2WebClientOptions v0, v1;
boolean v2;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 := @parameter0: io.vertx.ext.web.client.OAuth2WebClientOptions;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden> = 0;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway> = 0;
v2 = v1.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden>;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden> = v2;
v3 = v1.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway>;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway> = v3;
return;
}
public void <init>(io.vertx.core.json.JsonObject)
{
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
io.vertx.core.json.JsonObject v1;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 := @parameter0: io.vertx.core.json.JsonObject;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden> = 0;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway> = 0;
staticinvoke <io.vertx.ext.web.client.OAuth2WebClientOptionsConverter: void fromJson(java.lang.Iterable,io.vertx.ext.web.client.OAuth2WebClientOptions)>(v1, v0);
return;
}
public io.vertx.core.json.JsonObject toJson()
{
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
io.vertx.core.json.JsonObject v1;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 = new io.vertx.core.json.JsonObject;
specialinvoke v1.<io.vertx.core.json.JsonObject: void <init>()>();
staticinvoke <io.vertx.ext.web.client.OAuth2WebClientOptionsConverter: void toJson(io.vertx.ext.web.client.OAuth2WebClientOptions,io.vertx.core.json.JsonObject)>(v0, v1);
return v1;
}
public boolean isRenewTokenOnForbidden()
{
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 = v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden>;
return v1;
}
public io.vertx.ext.web.client.OAuth2WebClientOptions setRenewTokenOnForbidden(boolean)
{
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
boolean v1;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 := @parameter0: boolean;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: boolean renewTokenOnForbidden> = v1;
return v0;
}
public int getLeeway()
{
int v1;
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 = v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway>;
return v1;
}
public io.vertx.ext.web.client.OAuth2WebClientOptions setLeeway(int)
{
int v1;
io.vertx.ext.web.client.OAuth2WebClientOptions v0;
v0 := @this: io.vertx.ext.web.client.OAuth2WebClientOptions;
v1 := @parameter0: int;
v0.<io.vertx.ext.web.client.OAuth2WebClientOptions: int leeway> = v1;
return v0;
}
}