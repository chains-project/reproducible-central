public interface  io.vertx.ext.web.client.impl.CachingWebClientImpl extends java.lang.Object
{
public static io.vertx.ext.web.client.WebClient wrap(io.vertx.ext.web.client.WebClient, io.vertx.ext.web.client.spi.CacheStore, io.vertx.ext.web.client.CachingWebClientOptions)
{
io.vertx.ext.web.client.CachingWebClientOptions v2;
io.vertx.ext.web.client.WebClient v0;
io.vertx.ext.web.client.impl.cache.CacheInterceptor v4;
io.vertx.ext.web.client.impl.WebClientBase v3;
io.vertx.ext.web.client.spi.CacheStore v1;
v0 := @parameter0: io.vertx.ext.web.client.WebClient;
v1 := @parameter1: io.vertx.ext.web.client.spi.CacheStore;
v2 := @parameter2: io.vertx.ext.web.client.CachingWebClientOptions;
v3 = new io.vertx.ext.web.client.impl.WebClientBase;
specialinvoke v3.<io.vertx.ext.web.client.impl.WebClientBase: void <init>(io.vertx.ext.web.client.impl.WebClientBase)>(v0);
v4 = new io.vertx.ext.web.client.impl.cache.CacheInterceptor;
specialinvoke v4.<io.vertx.ext.web.client.impl.cache.CacheInterceptor: void <init>(io.vertx.ext.web.client.spi.CacheStore,io.vertx.ext.web.client.CachingWebClientOptions)>(v1, v2);
interfaceinvoke v3.<io.vertx.ext.web.client.impl.WebClientInternal: io.vertx.ext.web.client.impl.WebClientInternal addInterceptor(io.vertx.core.Handler)>(v4);
return v3;
}
}