public final class io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831 extends java.lang.Object implements io.vertx.core.Handler
{
io.vertx.ext.web.client.impl.MultipartFormUpload cap0;
public static io.vertx.core.Handler bootstrap$(io.vertx.ext.web.client.impl.MultipartFormUpload)
{
io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831 v1;
io.vertx.ext.web.client.impl.MultipartFormUpload v0;
v0 := @parameter0: io.vertx.ext.web.client.impl.MultipartFormUpload;
v1 = new io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831;
specialinvoke v1.<io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831: void <init>(io.vertx.ext.web.client.impl.MultipartFormUpload)>(v0);
return v1;
}
public void <init>(io.vertx.ext.web.client.impl.MultipartFormUpload)
{
io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831 v0;
io.vertx.ext.web.client.impl.MultipartFormUpload v1;
v0 := @this: io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831;
v1 := @parameter0: io.vertx.ext.web.client.impl.MultipartFormUpload;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831: io.vertx.ext.web.client.impl.MultipartFormUpload cap0> = v1;
return;
}
public void handle(java.lang.Object)
{
io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831 v0;
java.lang.Object v1;
io.vertx.ext.web.client.impl.MultipartFormUpload v2;
v0 := @this: io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.ext.web.client.impl.MultipartFormUpload$handleChunk__831: io.vertx.ext.web.client.impl.MultipartFormUpload cap0>;
specialinvoke v2.<io.vertx.ext.web.client.impl.MultipartFormUpload: void handleChunk(java.lang.Object)>(v1);
return;
}
}