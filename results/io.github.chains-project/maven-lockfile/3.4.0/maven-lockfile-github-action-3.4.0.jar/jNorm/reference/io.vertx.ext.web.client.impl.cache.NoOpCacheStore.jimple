public final class io.vertx.ext.web.client.impl.cache.NoOpCacheStore extends java.lang.Object implements io.vertx.ext.web.client.spi.CacheStore
{
public void <init>()
{
io.vertx.ext.web.client.impl.cache.NoOpCacheStore v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.NoOpCacheStore;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public io.vertx.core.Future get(io.vertx.ext.web.client.impl.cache.CacheKey)
{
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.core.Future v2;
io.vertx.ext.web.client.impl.cache.NoOpCacheStore v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.NoOpCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future failedFuture(java.lang.String)>("The no-op cache store cannot return results");
return v2;
}
public io.vertx.core.Future set(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.ext.web.client.impl.cache.CachedHttpResponse)
{
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.impl.cache.CachedHttpResponse v2;
io.vertx.core.Future v3;
io.vertx.ext.web.client.impl.cache.NoOpCacheStore v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.NoOpCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 := @parameter1: io.vertx.ext.web.client.impl.cache.CachedHttpResponse;
v3 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture(java.lang.Object)>(v2);
return v3;
}
public io.vertx.core.Future delete(io.vertx.ext.web.client.impl.cache.CacheKey)
{
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.core.Future v2;
io.vertx.ext.web.client.impl.cache.NoOpCacheStore v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.NoOpCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture()>();
return v2;
}
public io.vertx.core.Future flush()
{
io.vertx.core.Future v1;
io.vertx.ext.web.client.impl.cache.NoOpCacheStore v0;
v0 := @this: io.vertx.ext.web.client.impl.cache.NoOpCacheStore;
v1 = staticinvoke <io.vertx.core.Future: io.vertx.core.Future succeededFuture()>();
return v1;
}
}