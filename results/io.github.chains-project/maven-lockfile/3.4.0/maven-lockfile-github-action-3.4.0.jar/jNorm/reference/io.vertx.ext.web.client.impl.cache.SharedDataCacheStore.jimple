public class io.vertx.ext.web.client.impl.cache.SharedDataCacheStore extends java.lang.Object implements io.vertx.ext.web.client.spi.CacheStore
{
private static final java.lang.String ASYNC_MAP_NAME;
private final io.vertx.core.shareddata.SharedData sharedData;
public void <init>(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v1;
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v0;
io.vertx.core.shareddata.SharedData v2;
v0 := @this: io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
v1 := @parameter0: io.vertx.core.Vertx;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.shareddata.SharedData sharedData()>();
v0.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: io.vertx.core.shareddata.SharedData sharedData> = v2;
return;
}
public io.vertx.core.Future get(io.vertx.ext.web.client.impl.cache.CacheKey)
{
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v0;
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.core.Future v2, v4;
java.util.function.Function v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: io.vertx.core.Future asyncMap()>();
v3 = staticinvoke <io.vertx.ext.web.client.impl.cache.SharedDataCacheStore$lambda_get_0__844: java.util.function.Function bootstrap$(io.vertx.ext.web.client.impl.cache.CacheKey)>(v1);
v4 = interfaceinvoke v2.<io.vertx.core.Future: io.vertx.core.Future compose(java.util.function.Function)>(v3);
return v4;
}
public io.vertx.core.Future set(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.ext.web.client.impl.cache.CachedHttpResponse)
{
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v0;
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.impl.cache.CachedHttpResponse v2;
io.vertx.core.Future v3, v5, v6;
java.util.function.Function v4;
v0 := @this: io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 := @parameter1: io.vertx.ext.web.client.impl.cache.CachedHttpResponse;
v3 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: io.vertx.core.Future asyncMap()>();
v4 = staticinvoke <io.vertx.ext.web.client.impl.cache.SharedDataCacheStore$lambda_set_1__845: java.util.function.Function bootstrap$(io.vertx.ext.web.client.impl.cache.CacheKey,io.vertx.ext.web.client.impl.cache.CachedHttpResponse)>(v1, v2);
v5 = interfaceinvoke v3.<io.vertx.core.Future: io.vertx.core.Future compose(java.util.function.Function)>(v4);
v6 = interfaceinvoke v5.<io.vertx.core.Future: io.vertx.core.Future map(java.lang.Object)>(v2);
return v6;
}
public io.vertx.core.Future delete(io.vertx.ext.web.client.impl.cache.CacheKey)
{
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v0;
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.core.Future v2, v4, v5;
java.util.function.Function v3;
v0 := @this: io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: io.vertx.core.Future asyncMap()>();
v3 = staticinvoke <io.vertx.ext.web.client.impl.cache.SharedDataCacheStore$lambda_delete_2__846: java.util.function.Function bootstrap$(io.vertx.ext.web.client.impl.cache.CacheKey)>(v1);
v4 = interfaceinvoke v2.<io.vertx.core.Future: io.vertx.core.Future compose(java.util.function.Function)>(v3);
v5 = interfaceinvoke v4.<io.vertx.core.Future: io.vertx.core.Future mapEmpty()>();
return v5;
}
public io.vertx.core.Future flush()
{
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v0;
io.vertx.core.Future v1, v3;
java.util.function.Function v2;
v0 := @this: io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
v1 = specialinvoke v0.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: io.vertx.core.Future asyncMap()>();
v2 = staticinvoke <io.vertx.ext.web.client.impl.cache.SharedDataCacheStore$clear__847: java.util.function.Function bootstrap$()>();
v3 = interfaceinvoke v1.<io.vertx.core.Future: io.vertx.core.Future compose(java.util.function.Function)>(v2);
return v3;
}
private io.vertx.core.Future asyncMap()
{
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v0;
io.vertx.core.Future v2;
io.vertx.core.shareddata.SharedData v1;
v0 := @this: io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
v1 = v0.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: io.vertx.core.shareddata.SharedData sharedData>;
v2 = interfaceinvoke v1.<io.vertx.core.shareddata.SharedData: io.vertx.core.Future getAsyncMap(java.lang.String)>("HttpCacheStore");
return v2;
}
}