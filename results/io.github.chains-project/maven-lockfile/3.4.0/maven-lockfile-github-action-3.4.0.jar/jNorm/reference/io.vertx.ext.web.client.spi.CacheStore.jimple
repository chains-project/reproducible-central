public interface  io.vertx.ext.web.client.spi.CacheStore extends java.lang.Object
{
public static io.vertx.ext.web.client.spi.CacheStore build()
{
io.vertx.ext.web.client.impl.cache.NoOpCacheStore v0;
v0 = new io.vertx.ext.web.client.impl.cache.NoOpCacheStore;
specialinvoke v0.<io.vertx.ext.web.client.impl.cache.NoOpCacheStore: void <init>()>();
return v0;
}
public static io.vertx.ext.web.client.spi.CacheStore sharedDataStore(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v0;
io.vertx.ext.web.client.impl.cache.SharedDataCacheStore v1;
v0 := @parameter0: io.vertx.core.Vertx;
v1 = new io.vertx.ext.web.client.impl.cache.SharedDataCacheStore;
specialinvoke v1.<io.vertx.ext.web.client.impl.cache.SharedDataCacheStore: void <init>(io.vertx.core.Vertx)>(v0);
return v1;
}
public static io.vertx.ext.web.client.spi.CacheStore localStore()
{
io.vertx.ext.web.client.impl.cache.LocalCacheStore v0;
v0 = new io.vertx.ext.web.client.impl.cache.LocalCacheStore;
specialinvoke v0.<io.vertx.ext.web.client.impl.cache.LocalCacheStore: void <init>()>();
return v0;
}
public abstract io.vertx.core.Future get(io.vertx.ext.web.client.impl.cache.CacheKey);
public abstract io.vertx.core.Future set(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.ext.web.client.impl.cache.CachedHttpResponse);
public abstract io.vertx.core.Future delete(io.vertx.ext.web.client.impl.cache.CacheKey);
public abstract io.vertx.core.Future flush();
public void get(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.core.Handler)
{
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.spi.CacheStore v0;
io.vertx.core.Handler v2;
io.vertx.core.Future v3;
v0 := @this: io.vertx.ext.web.client.spi.CacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 := @parameter1: io.vertx.core.Handler;
v3 = interfaceinvoke v0.<io.vertx.ext.web.client.spi.CacheStore: io.vertx.core.Future get(io.vertx.ext.web.client.impl.cache.CacheKey)>(v1);
interfaceinvoke v3.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v2);
return;
}
public void set(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.ext.web.client.impl.cache.CachedHttpResponse, io.vertx.core.Handler)
{
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.impl.cache.CachedHttpResponse v2;
io.vertx.ext.web.client.spi.CacheStore v0;
io.vertx.core.Handler v3;
io.vertx.core.Future v4;
v0 := @this: io.vertx.ext.web.client.spi.CacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 := @parameter1: io.vertx.ext.web.client.impl.cache.CachedHttpResponse;
v3 := @parameter2: io.vertx.core.Handler;
v4 = interfaceinvoke v0.<io.vertx.ext.web.client.spi.CacheStore: io.vertx.core.Future set(io.vertx.ext.web.client.impl.cache.CacheKey,io.vertx.ext.web.client.impl.cache.CachedHttpResponse)>(v1, v2);
interfaceinvoke v4.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v3);
return;
}
public void delete(io.vertx.ext.web.client.impl.cache.CacheKey, io.vertx.core.Handler)
{
io.vertx.ext.web.client.impl.cache.CacheKey v1;
io.vertx.ext.web.client.spi.CacheStore v0;
io.vertx.core.Handler v2;
io.vertx.core.Future v3;
v0 := @this: io.vertx.ext.web.client.spi.CacheStore;
v1 := @parameter0: io.vertx.ext.web.client.impl.cache.CacheKey;
v2 := @parameter1: io.vertx.core.Handler;
v3 = interfaceinvoke v0.<io.vertx.ext.web.client.spi.CacheStore: io.vertx.core.Future delete(io.vertx.ext.web.client.impl.cache.CacheKey)>(v1);
interfaceinvoke v3.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v2);
return;
}
public void flush(io.vertx.core.Handler)
{
io.vertx.ext.web.client.spi.CacheStore v0;
io.vertx.core.Handler v1;
io.vertx.core.Future v2;
v0 := @this: io.vertx.ext.web.client.spi.CacheStore;
v1 := @parameter0: io.vertx.core.Handler;
v2 = interfaceinvoke v0.<io.vertx.ext.web.client.spi.CacheStore: io.vertx.core.Future flush()>();
interfaceinvoke v2.<io.vertx.core.Future: io.vertx.core.Future onComplete(io.vertx.core.Handler)>(v1);
return;
}
}