public class io.vertx.mutiny.core.Vertx extends java.lang.Object implements io.vertx.mutiny.core.metrics.Measured
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.Vertx delegate;
private io.vertx.mutiny.core.file.FileSystem cached_0;
private io.vertx.mutiny.core.eventbus.EventBus cached_1;
private io.vertx.mutiny.core.shareddata.SharedData cached_2;
private java.lang.Boolean cached_3;
private java.lang.Throwable cached_4;
public void <init>(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Vertx;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
java.lang.Object v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate> = null;
return;
}
public io.vertx.core.Vertx getDelegate()
{
io.vertx.core.Vertx v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
return v1;
}
public java.lang.String toString()
{
io.vertx.core.Vertx v1;
java.lang.String v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v4, v5;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v5 = v1.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.core.Vertx v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public boolean isMetricsEnabled()
{
io.vertx.core.Vertx v1;
boolean v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: boolean isMetricsEnabled()>();
return v2;
}
public static io.vertx.mutiny.core.Vertx vertx()
{
io.vertx.core.Vertx v0;
io.vertx.mutiny.core.Vertx v1;
v0 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Vertx vertx()>();
v1 = staticinvoke <io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.Vertx newInstance(io.vertx.core.Vertx)>(v0);
return v1;
}
public static io.vertx.mutiny.core.Vertx vertx(io.vertx.core.VertxOptions)
{
io.vertx.core.Vertx v1;
io.vertx.core.VertxOptions v0;
io.vertx.mutiny.core.Vertx v2;
v0 := @parameter0: io.vertx.core.VertxOptions;
v1 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Vertx vertx(io.vertx.core.VertxOptions)>(v0);
v2 = staticinvoke <io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.Vertx newInstance(io.vertx.core.Vertx)>(v1);
return v2;
}
public static io.smallrye.mutiny.Uni clusteredVertx(io.vertx.core.VertxOptions)
{
java.util.function.Consumer v1;
io.vertx.core.VertxOptions v0;
io.smallrye.mutiny.Uni v2;
v0 := @parameter0: io.vertx.core.VertxOptions;
v1 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_clusteredVertx_3__1620: java.util.function.Consumer bootstrap$(io.vertx.core.VertxOptions)>(v0);
v2 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v1);
return v2;
}
public static io.vertx.mutiny.core.Vertx clusteredVertxAndAwait(io.vertx.core.VertxOptions)
{
io.smallrye.mutiny.groups.UniAwait v2;
io.vertx.core.VertxOptions v0;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @parameter0: io.vertx.core.VertxOptions;
v1 = staticinvoke <io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni clusteredVertx(io.vertx.core.VertxOptions)>(v0);
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public static void clusteredVertxAndForget(io.vertx.core.VertxOptions)
{
java.util.function.Consumer v3;
io.vertx.core.VertxOptions v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @parameter0: io.vertx.core.VertxOptions;
v1 = staticinvoke <io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni clusteredVertx(io.vertx.core.VertxOptions)>(v0);
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public static io.vertx.mutiny.core.Context currentContext()
{
io.vertx.core.Context v0;
io.vertx.mutiny.core.Context v1;
v0 = staticinvoke <io.vertx.core.Vertx: io.vertx.core.Context currentContext()>();
v1 = staticinvoke <io.vertx.mutiny.core.Context: io.vertx.mutiny.core.Context newInstance(io.vertx.core.Context)>(v0);
return v1;
}
public io.vertx.mutiny.core.Context getOrCreateContext()
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
io.vertx.core.Context v2;
io.vertx.mutiny.core.Context v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.Context getOrCreateContext()>();
v3 = staticinvoke <io.vertx.mutiny.core.Context: io.vertx.mutiny.core.Context newInstance(io.vertx.core.Context)>(v2);
return v3;
}
public io.vertx.mutiny.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions)
{
io.vertx.core.net.NetServerOptions v1;
io.vertx.mutiny.core.net.NetServer v4;
io.vertx.core.net.NetServer v3;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.net.NetServerOptions;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.net.NetServer createNetServer(io.vertx.core.net.NetServerOptions)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.net.NetServer: io.vertx.mutiny.core.net.NetServer newInstance(io.vertx.core.net.NetServer)>(v3);
return v4;
}
public io.vertx.mutiny.core.net.NetServer createNetServer()
{
io.vertx.mutiny.core.net.NetServer v3;
io.vertx.core.net.NetServer v2;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.net.NetServer createNetServer()>();
v3 = staticinvoke <io.vertx.mutiny.core.net.NetServer: io.vertx.mutiny.core.net.NetServer newInstance(io.vertx.core.net.NetServer)>(v2);
return v3;
}
public io.vertx.mutiny.core.net.NetClient createNetClient(io.vertx.core.net.NetClientOptions)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
io.vertx.mutiny.core.net.NetClient v4;
io.vertx.core.net.NetClient v3;
io.vertx.core.net.NetClientOptions v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.net.NetClientOptions;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.net.NetClient createNetClient(io.vertx.core.net.NetClientOptions)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.net.NetClient: io.vertx.mutiny.core.net.NetClient newInstance(io.vertx.core.net.NetClient)>(v3);
return v4;
}
public io.vertx.mutiny.core.net.NetClient createNetClient()
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
io.vertx.mutiny.core.net.NetClient v3;
io.vertx.core.net.NetClient v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.net.NetClient createNetClient()>();
v3 = staticinvoke <io.vertx.mutiny.core.net.NetClient: io.vertx.mutiny.core.net.NetClient newInstance(io.vertx.core.net.NetClient)>(v2);
return v3;
}
public io.vertx.mutiny.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions)
{
io.vertx.mutiny.core.http.HttpServer v4;
io.vertx.core.http.HttpServer v3;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
io.vertx.core.http.HttpServerOptions v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.http.HttpServerOptions;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.http.HttpServer createHttpServer(io.vertx.core.http.HttpServerOptions)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.http.HttpServer: io.vertx.mutiny.core.http.HttpServer newInstance(io.vertx.core.http.HttpServer)>(v3);
return v4;
}
public io.vertx.mutiny.core.http.HttpServer createHttpServer()
{
io.vertx.mutiny.core.http.HttpServer v3;
io.vertx.core.http.HttpServer v2;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.http.HttpServer createHttpServer()>();
v3 = staticinvoke <io.vertx.mutiny.core.http.HttpServer: io.vertx.mutiny.core.http.HttpServer newInstance(io.vertx.core.http.HttpServer)>(v2);
return v3;
}
public io.vertx.mutiny.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
io.vertx.core.http.HttpClientOptions v1;
io.vertx.core.http.HttpClient v3;
io.vertx.mutiny.core.http.HttpClient v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.http.HttpClientOptions;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.http.HttpClient createHttpClient(io.vertx.core.http.HttpClientOptions)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.http.HttpClient: io.vertx.mutiny.core.http.HttpClient newInstance(io.vertx.core.http.HttpClient)>(v3);
return v4;
}
public io.vertx.mutiny.core.http.HttpClient createHttpClient()
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
io.vertx.core.http.HttpClient v2;
io.vertx.mutiny.core.http.HttpClient v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.http.HttpClient createHttpClient()>();
v3 = staticinvoke <io.vertx.mutiny.core.http.HttpClient: io.vertx.mutiny.core.http.HttpClient newInstance(io.vertx.core.http.HttpClient)>(v2);
return v3;
}
public io.vertx.mutiny.core.datagram.DatagramSocket createDatagramSocket(io.vertx.core.datagram.DatagramSocketOptions)
{
io.vertx.core.datagram.DatagramSocket v3;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
io.vertx.core.datagram.DatagramSocketOptions v1;
io.vertx.mutiny.core.datagram.DatagramSocket v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.datagram.DatagramSocketOptions;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.datagram.DatagramSocket createDatagramSocket(io.vertx.core.datagram.DatagramSocketOptions)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.datagram.DatagramSocket: io.vertx.mutiny.core.datagram.DatagramSocket newInstance(io.vertx.core.datagram.DatagramSocket)>(v3);
return v4;
}
public io.vertx.mutiny.core.datagram.DatagramSocket createDatagramSocket()
{
io.vertx.core.datagram.DatagramSocket v2;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
io.vertx.mutiny.core.datagram.DatagramSocket v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.datagram.DatagramSocket createDatagramSocket()>();
v3 = staticinvoke <io.vertx.mutiny.core.datagram.DatagramSocket: io.vertx.mutiny.core.datagram.DatagramSocket newInstance(io.vertx.core.datagram.DatagramSocket)>(v2);
return v3;
}
public io.vertx.mutiny.core.file.FileSystem fileSystem()
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
io.vertx.core.file.FileSystem v4;
io.vertx.mutiny.core.file.FileSystem v1, v2, v5;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.file.FileSystem cached_0>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.file.FileSystem cached_0>;
return v2;
label1:
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.file.FileSystem fileSystem()>();
v5 = staticinvoke <io.vertx.mutiny.core.file.FileSystem: io.vertx.mutiny.core.file.FileSystem newInstance(io.vertx.core.file.FileSystem)>(v4);
v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.file.FileSystem cached_0> = v5;
return v5;
}
public io.vertx.mutiny.core.eventbus.EventBus eventBus()
{
io.vertx.core.eventbus.EventBus v4;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
io.vertx.mutiny.core.eventbus.EventBus v1, v2, v5;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.eventbus.EventBus cached_1>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.eventbus.EventBus cached_1>;
return v2;
label1:
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.eventbus.EventBus eventBus()>();
v5 = staticinvoke <io.vertx.mutiny.core.eventbus.EventBus: io.vertx.mutiny.core.eventbus.EventBus newInstance(io.vertx.core.eventbus.EventBus)>(v4);
v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.eventbus.EventBus cached_1> = v5;
return v5;
}
public io.vertx.mutiny.core.dns.DnsClient createDnsClient(int, java.lang.String)
{
io.vertx.core.dns.DnsClient v4;
io.vertx.mutiny.core.dns.DnsClient v5;
io.vertx.mutiny.core.Vertx v0;
int v1;
io.vertx.core.Vertx v3;
java.lang.String v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: int;
v2 := @parameter1: java.lang.String;
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.dns.DnsClient createDnsClient(int,java.lang.String)>(v1, v2);
v5 = staticinvoke <io.vertx.mutiny.core.dns.DnsClient: io.vertx.mutiny.core.dns.DnsClient newInstance(io.vertx.core.dns.DnsClient)>(v4);
return v5;
}
public io.vertx.mutiny.core.dns.DnsClient createDnsClient()
{
io.vertx.core.dns.DnsClient v2;
io.vertx.mutiny.core.dns.DnsClient v3;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.vertx.core.dns.DnsClient createDnsClient()>();
v3 = staticinvoke <io.vertx.mutiny.core.dns.DnsClient: io.vertx.mutiny.core.dns.DnsClient newInstance(io.vertx.core.dns.DnsClient)>(v2);
return v3;
}
public io.vertx.mutiny.core.dns.DnsClient createDnsClient(io.vertx.core.dns.DnsClientOptions)
{
io.vertx.core.dns.DnsClient v3;
io.vertx.mutiny.core.dns.DnsClient v4;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
io.vertx.core.dns.DnsClientOptions v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.dns.DnsClientOptions;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.dns.DnsClient createDnsClient(io.vertx.core.dns.DnsClientOptions)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.dns.DnsClient: io.vertx.mutiny.core.dns.DnsClient newInstance(io.vertx.core.dns.DnsClient)>(v3);
return v4;
}
public io.vertx.mutiny.core.shareddata.SharedData sharedData()
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
io.vertx.mutiny.core.shareddata.SharedData v1, v2, v5;
io.vertx.core.shareddata.SharedData v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.shareddata.SharedData cached_2>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.shareddata.SharedData cached_2>;
return v2;
label1:
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.shareddata.SharedData sharedData()>();
v5 = staticinvoke <io.vertx.mutiny.core.shareddata.SharedData: io.vertx.mutiny.core.shareddata.SharedData newInstance(io.vertx.core.shareddata.SharedData)>(v4);
v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.shareddata.SharedData cached_2> = v5;
return v5;
}
private long __setTimer(long, io.vertx.core.Handler)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
long v1, v4;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: long setTimer(long,io.vertx.core.Handler)>(v1, v2);
return v4;
}
public long setTimer(long, java.util.function.Consumer)
{
java.util.function.Consumer v2;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v3;
io.vertx.mutiny.core.Vertx v0;
long v1, v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: java.util.function.Consumer;
if v2 == null goto label1;
v3 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v3.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v2);
goto label2;
label1:
v3 = null;
label2:
v4 = specialinvoke v0.<io.vertx.mutiny.core.Vertx: long __setTimer(long,io.vertx.core.Handler)>(v1, v3);
return v4;
}
public io.vertx.mutiny.core.TimeoutStream timerStream(long)
{
io.vertx.core.TimeoutStream v3;
io.vertx.mutiny.core.TimeoutStream v4;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
long v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.TimeoutStream timerStream(long)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.TimeoutStream: io.vertx.mutiny.core.TimeoutStream newInstance(io.vertx.core.TimeoutStream)>(v3);
return v4;
}
private long __setPeriodic(long, io.vertx.core.Handler)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
long v1, v4;
io.vertx.core.Handler v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: io.vertx.core.Handler;
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: long setPeriodic(long,io.vertx.core.Handler)>(v1, v2);
return v4;
}
public long setPeriodic(long, java.util.function.Consumer)
{
java.util.function.Consumer v2;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v3;
io.vertx.mutiny.core.Vertx v0;
long v1, v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: java.util.function.Consumer;
if v2 == null goto label1;
v3 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v3.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v2);
goto label2;
label1:
v3 = null;
label2:
v4 = specialinvoke v0.<io.vertx.mutiny.core.Vertx: long __setPeriodic(long,io.vertx.core.Handler)>(v1, v3);
return v4;
}
private long __setPeriodic(long, long, io.vertx.core.Handler)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v4;
long v1, v2, v5;
io.vertx.core.Handler v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 := @parameter2: io.vertx.core.Handler;
v4 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v5 = interfaceinvoke v4.<io.vertx.core.Vertx: long setPeriodic(long,long,io.vertx.core.Handler)>(v1, v2, v3);
return v5;
}
public long setPeriodic(long, long, java.util.function.Consumer)
{
java.util.function.Consumer v3;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v4;
io.vertx.mutiny.core.Vertx v0;
long v1, v2, v5;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 := @parameter2: java.util.function.Consumer;
if v3 == null goto label1;
v4 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v4.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v3);
goto label2;
label1:
v4 = null;
label2:
v5 = specialinvoke v0.<io.vertx.mutiny.core.Vertx: long __setPeriodic(long,long,io.vertx.core.Handler)>(v1, v2, v4);
return v5;
}
public io.vertx.mutiny.core.TimeoutStream periodicStream(long)
{
io.vertx.core.TimeoutStream v3;
io.vertx.mutiny.core.TimeoutStream v4;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
long v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.TimeoutStream periodicStream(long)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.TimeoutStream: io.vertx.mutiny.core.TimeoutStream newInstance(io.vertx.core.TimeoutStream)>(v3);
return v4;
}
public io.vertx.mutiny.core.TimeoutStream periodicStream(long, long)
{
io.vertx.core.TimeoutStream v4;
io.vertx.mutiny.core.TimeoutStream v5;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
long v1, v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 := @parameter1: long;
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.TimeoutStream periodicStream(long,long)>(v1, v2);
v5 = staticinvoke <io.vertx.mutiny.core.TimeoutStream: io.vertx.mutiny.core.TimeoutStream newInstance(io.vertx.core.TimeoutStream)>(v4);
return v5;
}
public boolean cancelTimer(long)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
long v1;
boolean v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: long;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: boolean cancelTimer(long)>(v1);
return v3;
}
private void __runOnContext(io.vertx.core.Handler)
{
io.vertx.core.Vertx v2;
io.vertx.core.Handler v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
interfaceinvoke v2.<io.vertx.core.Vertx: void runOnContext(io.vertx.core.Handler)>(v1);
return;
}
public void runOnContext(java.lang.Runnable)
{
io.vertx.core.Handler v2;
java.lang.Runnable v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.Runnable;
v2 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_runOnContext_4__1621: io.vertx.core.Handler bootstrap$(java.lang.Runnable)>(v1);
specialinvoke v0.<io.vertx.mutiny.core.Vertx: void __runOnContext(io.vertx.core.Handler)>(v2);
return;
}
public io.smallrye.mutiny.Uni close()
{
java.util.function.Consumer v1;
io.smallrye.mutiny.Uni v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_close_5__1622: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx)>(v0);
v2 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v1);
return v2;
}
public java.lang.Void closeAndAwait()
{
io.smallrye.mutiny.groups.UniAwait v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v3;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni close()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v3 = virtualinvoke v2.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v3;
}
public void closeAndForget()
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v2;
io.smallrye.mutiny.Uni v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni close()>();
v2 = interfaceinvoke v1.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v3 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v2.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v3);
return;
}
public io.smallrye.mutiny.Uni deployVerticle(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_deployVerticle_6__1623: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.String deployVerticleAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void deployVerticleAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni deployVerticle(java.lang.String, io.vertx.core.DeploymentOptions)
{
java.util.function.Consumer v3;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_deployVerticle_7__1624: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,java.lang.String,io.vertx.core.DeploymentOptions)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public java.lang.String deployVerticleAndAwait(java.lang.String, io.vertx.core.DeploymentOptions)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v5;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void deployVerticleAndForget(java.lang.String, io.vertx.core.DeploymentOptions)
{
java.util.function.Consumer v5;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(java.lang.String,io.vertx.core.DeploymentOptions)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public io.smallrye.mutiny.Uni undeploy(java.lang.String)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.String v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_undeploy_8__1625: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,java.lang.String)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.Void undeployAndAwait(java.lang.String)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v4;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni undeploy(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void undeployAndForget(java.lang.String)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
java.lang.String v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni undeploy(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public java.util.Set deploymentIDs()
{
io.vertx.core.Vertx v1;
java.util.Set v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: java.util.Set deploymentIDs()>();
return v2;
}
public boolean isClustered()
{
io.vertx.core.Vertx v1;
boolean v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: boolean isClustered()>();
return v2;
}
public io.smallrye.mutiny.Uni executeBlocking(io.smallrye.mutiny.Uni, boolean)
{
java.util.function.Consumer v3;
io.vertx.mutiny.core.Vertx v0;
boolean v2;
io.smallrye.mutiny.Uni v1, v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: boolean;
v3 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_executeBlocking_9__1626: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,io.smallrye.mutiny.Uni,boolean)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public java.lang.Object executeBlockingAndAwait(io.smallrye.mutiny.Uni, boolean)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v5;
boolean v2;
io.smallrye.mutiny.Uni v1, v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: boolean;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni executeBlocking(io.smallrye.mutiny.Uni,boolean)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void executeBlockingAndForget(io.smallrye.mutiny.Uni, boolean)
{
java.util.function.Consumer v5;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
boolean v2;
io.smallrye.mutiny.Uni v1, v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 := @parameter1: boolean;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni executeBlocking(io.smallrye.mutiny.Uni,boolean)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public io.smallrye.mutiny.Uni executeBlocking(io.smallrye.mutiny.Uni)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.Uni v1, v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_executeBlocking_10__1627: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,io.smallrye.mutiny.Uni)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.Object executeBlockingAndAwait(io.smallrye.mutiny.Uni)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v4;
io.smallrye.mutiny.Uni v1, v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni executeBlocking(io.smallrye.mutiny.Uni)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void executeBlockingAndForget(io.smallrye.mutiny.Uni)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
io.smallrye.mutiny.Uni v1, v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.smallrye.mutiny.Uni;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni executeBlocking(io.smallrye.mutiny.Uni)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.vertx.mutiny.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String)
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v2;
io.vertx.mutiny.core.WorkerExecutor v4;
java.lang.String v1;
io.vertx.core.WorkerExecutor v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.WorkerExecutor: io.vertx.mutiny.core.WorkerExecutor newInstance(io.vertx.core.WorkerExecutor)>(v3);
return v4;
}
public io.vertx.mutiny.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String, int)
{
io.vertx.mutiny.core.Vertx v0;
int v2;
io.vertx.core.Vertx v3;
io.vertx.mutiny.core.WorkerExecutor v5;
java.lang.String v1;
io.vertx.core.WorkerExecutor v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: io.vertx.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String,int)>(v1, v2);
v5 = staticinvoke <io.vertx.mutiny.core.WorkerExecutor: io.vertx.mutiny.core.WorkerExecutor newInstance(io.vertx.core.WorkerExecutor)>(v4);
return v5;
}
public io.vertx.mutiny.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String, int, long)
{
io.vertx.mutiny.core.Vertx v0;
int v2;
io.vertx.core.Vertx v4;
io.vertx.mutiny.core.WorkerExecutor v6;
long v3;
java.lang.String v1;
io.vertx.core.WorkerExecutor v5;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v5 = interfaceinvoke v4.<io.vertx.core.Vertx: io.vertx.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String,int,long)>(v1, v2, v3);
v6 = staticinvoke <io.vertx.mutiny.core.WorkerExecutor: io.vertx.mutiny.core.WorkerExecutor newInstance(io.vertx.core.WorkerExecutor)>(v5);
return v6;
}
public io.vertx.mutiny.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String, int, long, java.util.concurrent.TimeUnit)
{
io.vertx.core.Vertx v5;
io.vertx.mutiny.core.WorkerExecutor v7;
long v3;
io.vertx.core.WorkerExecutor v6;
java.util.concurrent.TimeUnit v4;
io.vertx.mutiny.core.Vertx v0;
int v2;
java.lang.String v1;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: long;
v4 := @parameter3: java.util.concurrent.TimeUnit;
v5 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v6 = interfaceinvoke v5.<io.vertx.core.Vertx: io.vertx.core.WorkerExecutor createSharedWorkerExecutor(java.lang.String,int,long,java.util.concurrent.TimeUnit)>(v1, v2, v3, v4);
v7 = staticinvoke <io.vertx.mutiny.core.WorkerExecutor: io.vertx.mutiny.core.WorkerExecutor newInstance(io.vertx.core.WorkerExecutor)>(v6);
return v7;
}
public boolean isNativeTransportEnabled()
{
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v4;
java.lang.Boolean v1, v2, v6;
boolean v3, v5;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: java.lang.Boolean cached_3>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.Vertx: java.lang.Boolean cached_3>;
v3 = virtualinvoke v2.<java.lang.Boolean: boolean booleanValue()>();
return v3;
label1:
v4 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v5 = interfaceinvoke v4.<io.vertx.core.Vertx: boolean isNativeTransportEnabled()>();
v6 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v5);
v0.<io.vertx.mutiny.core.Vertx: java.lang.Boolean cached_3> = v6;
return v5;
}
public java.lang.Throwable unavailableNativeTransportCause()
{
java.lang.Throwable v1, v2, v4;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Vertx v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: java.lang.Throwable cached_4>;
if v1 == null goto label1;
v2 = v0.<io.vertx.mutiny.core.Vertx: java.lang.Throwable cached_4>;
return v2;
label1:
v3 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.Vertx: java.lang.Throwable unavailableNativeTransportCause()>();
v0.<io.vertx.mutiny.core.Vertx: java.lang.Throwable cached_4> = v4;
return v4;
}
private io.vertx.mutiny.core.Vertx __exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.Vertx v2;
io.vertx.core.Handler v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
interfaceinvoke v2.<io.vertx.core.Vertx: io.vertx.core.Vertx exceptionHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.mutiny.core.Vertx exceptionHandler(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v2;
io.vertx.mutiny.core.Vertx v0, v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.util.function.Consumer;
if v1 == null goto label1;
v2 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v2.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v1);
goto label2;
label1:
v2 = null;
label2:
v3 = specialinvoke v0.<io.vertx.mutiny.core.Vertx: io.vertx.mutiny.core.Vertx __exceptionHandler(io.vertx.core.Handler)>(v2);
return v3;
}
public io.smallrye.mutiny.Uni deployVerticle(io.vertx.core.Verticle)
{
java.util.function.Consumer v2;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Verticle v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Verticle;
v2 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_deployVerticle_11__1628: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,io.vertx.core.Verticle)>(v0, v1);
v3 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v2);
return v3;
}
public java.lang.String deployVerticleAndAwait(io.vertx.core.Verticle)
{
io.smallrye.mutiny.groups.UniAwait v3;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v4;
io.vertx.core.Verticle v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Verticle;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(io.vertx.core.Verticle)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v4 = virtualinvoke v3.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v4;
}
public void deployVerticleAndForget(io.vertx.core.Verticle)
{
java.util.function.Consumer v4;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v3;
io.vertx.core.Verticle v1;
io.smallrye.mutiny.Uni v2;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Verticle;
v2 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(io.vertx.core.Verticle)>(v1);
v3 = interfaceinvoke v2.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v4 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v3.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v4);
return;
}
public io.smallrye.mutiny.Uni deployVerticle(io.vertx.core.Verticle, io.vertx.core.DeploymentOptions)
{
java.util.function.Consumer v3;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
io.vertx.core.Verticle v1;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Verticle;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_deployVerticle_12__1629: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,io.vertx.core.Verticle,io.vertx.core.DeploymentOptions)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public java.lang.String deployVerticleAndAwait(io.vertx.core.Verticle, io.vertx.core.DeploymentOptions)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v5;
io.vertx.core.Verticle v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Verticle;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void deployVerticleAndForget(io.vertx.core.Verticle, io.vertx.core.DeploymentOptions)
{
java.util.function.Consumer v5;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
io.vertx.core.Verticle v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.Verticle;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(io.vertx.core.Verticle,io.vertx.core.DeploymentOptions)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public io.smallrye.mutiny.Uni deployVerticle(java.util.function.Supplier, io.vertx.core.DeploymentOptions)
{
java.util.function.Consumer v3;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v4;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_deployVerticle_13__1630: java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.Vertx,java.util.function.Supplier,io.vertx.core.DeploymentOptions)>(v0, v1, v2);
v4 = staticinvoke <io.smallrye.mutiny.vertx.AsyncResultUni: io.smallrye.mutiny.Uni toUni(java.util.function.Consumer)>(v3);
return v4;
}
public java.lang.String deployVerticleAndAwait(java.util.function.Supplier, io.vertx.core.DeploymentOptions)
{
io.smallrye.mutiny.groups.UniAwait v4;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
java.lang.Object v5;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(java.util.function.Supplier,io.vertx.core.DeploymentOptions)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniAwait await()>();
v5 = virtualinvoke v4.<io.smallrye.mutiny.groups.UniAwait: java.lang.Object indefinitely()>();
return v5;
}
public void deployVerticleAndForget(java.util.function.Supplier, io.vertx.core.DeploymentOptions)
{
java.util.function.Consumer v5;
io.vertx.core.DeploymentOptions v2;
io.vertx.mutiny.core.Vertx v0;
io.smallrye.mutiny.groups.UniSubscribe v4;
java.util.function.Supplier v1;
io.smallrye.mutiny.Uni v3;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: java.util.function.Supplier;
v2 := @parameter1: io.vertx.core.DeploymentOptions;
v3 = virtualinvoke v0.<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.Uni deployVerticle(java.util.function.Supplier,io.vertx.core.DeploymentOptions)>(v1, v2);
v4 = interfaceinvoke v3.<io.smallrye.mutiny.Uni: io.smallrye.mutiny.groups.UniSubscribe subscribe()>();
v5 = <io.smallrye.mutiny.vertx.UniHelper: java.util.function.Consumer NOOP>;
virtualinvoke v4.<io.smallrye.mutiny.groups.UniSubscribe: io.smallrye.mutiny.subscription.Cancellable 'with'(java.util.function.Consumer)>(v5);
return;
}
public void registerVerticleFactory(io.vertx.core.spi.VerticleFactory)
{
io.vertx.core.Vertx v2;
io.vertx.core.spi.VerticleFactory v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.spi.VerticleFactory;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
interfaceinvoke v2.<io.vertx.core.Vertx: void registerVerticleFactory(io.vertx.core.spi.VerticleFactory)>(v1);
return;
}
public void unregisterVerticleFactory(io.vertx.core.spi.VerticleFactory)
{
io.vertx.core.Vertx v2;
io.vertx.core.spi.VerticleFactory v1;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 := @parameter0: io.vertx.core.spi.VerticleFactory;
v2 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
interfaceinvoke v2.<io.vertx.core.Vertx: void unregisterVerticleFactory(io.vertx.core.spi.VerticleFactory)>(v1);
return;
}
public java.util.Set verticleFactories()
{
io.vertx.core.Vertx v1;
java.util.Set v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: java.util.Set verticleFactories()>();
return v2;
}
public io.netty.channel.EventLoopGroup nettyEventLoopGroup()
{
io.vertx.core.Vertx v1;
io.netty.channel.EventLoopGroup v2;
io.vertx.mutiny.core.Vertx v0;
v0 := @this: io.vertx.mutiny.core.Vertx;
v1 = v0.<io.vertx.mutiny.core.Vertx: io.vertx.core.Vertx delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.Vertx: io.netty.channel.EventLoopGroup nettyEventLoopGroup()>();
return v2;
}
public static io.vertx.mutiny.core.Vertx newInstance(io.vertx.core.Vertx)
{
io.vertx.core.Vertx v0;
io.vertx.mutiny.core.Vertx v1;
v0 := @parameter0: io.vertx.core.Vertx;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.Vertx;
specialinvoke v1.<io.vertx.mutiny.core.Vertx: void <init>(io.vertx.core.Vertx)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.Vertx$lambda_static_0__1633: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.Vertx$getDelegate__1634: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.Vertx: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}