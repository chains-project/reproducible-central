public class io.vertx.mutiny.core.cli.CLI extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.cli.CLI delegate;
public void <init>(io.vertx.core.cli.CLI)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: io.vertx.core.cli.CLI;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.Object v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.cli.CLI v0;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate> = null;
return;
}
public io.vertx.core.cli.CLI getDelegate()
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
return v1;
}
public java.lang.String toString()
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v2;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v4, v5;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v5 = v1.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public static io.vertx.mutiny.core.cli.CLI create(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v2;
java.lang.String v0;
io.vertx.core.cli.CLI v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <io.vertx.core.cli.CLI: io.vertx.core.cli.CLI create(java.lang.String)>(v0);
v2 = staticinvoke <io.vertx.mutiny.core.cli.CLI: io.vertx.mutiny.core.cli.CLI newInstance(io.vertx.core.cli.CLI)>(v1);
return v2;
}
public io.vertx.mutiny.core.cli.CommandLine parse(java.util.List)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.mutiny.core.cli.CommandLine v4;
java.util.List v1;
io.vertx.core.cli.CommandLine v3;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.util.List;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CommandLine parse(java.util.List)>(v1);
v4 = staticinvoke <io.vertx.mutiny.core.cli.CommandLine: io.vertx.mutiny.core.cli.CommandLine newInstance(io.vertx.core.cli.CommandLine)>(v3);
return v4;
}
public io.vertx.mutiny.core.cli.CommandLine parse(java.util.List, boolean)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.mutiny.core.cli.CommandLine v5;
java.util.List v1;
io.vertx.core.cli.CommandLine v4;
io.vertx.core.cli.CLI v3;
boolean v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.util.List;
v2 := @parameter1: boolean;
v3 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v4 = interfaceinvoke v3.<io.vertx.core.cli.CLI: io.vertx.core.cli.CommandLine parse(java.util.List,boolean)>(v1, v2);
v5 = staticinvoke <io.vertx.mutiny.core.cli.CommandLine: io.vertx.mutiny.core.cli.CommandLine newInstance(io.vertx.core.cli.CommandLine)>(v4);
return v5;
}
public java.lang.String getName()
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v2;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: java.lang.String getName()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI setName(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setName(java.lang.String)>(v1);
return v0;
}
public java.lang.String getDescription()
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v2;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: java.lang.String getDescription()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI setDescription(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setDescription(java.lang.String)>(v1);
return v0;
}
public java.lang.String getSummary()
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v2;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: java.lang.String getSummary()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI setSummary(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setSummary(java.lang.String)>(v1);
return v0;
}
public boolean isHidden()
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v1;
boolean v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: boolean isHidden()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI setHidden(boolean)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v2;
boolean v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: boolean;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setHidden(boolean)>(v1);
return v0;
}
public java.util.List getOptions()
{
io.vertx.mutiny.core.cli.CLI v0;
java.util.List v2;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: java.util.List getOptions()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI addOption(io.vertx.core.cli.Option)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.Option v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: io.vertx.core.cli.Option;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI addOption(io.vertx.core.cli.Option)>(v1);
return v0;
}
public io.vertx.mutiny.core.cli.CLI addOptions(java.util.List)
{
io.vertx.mutiny.core.cli.CLI v0;
java.util.List v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.util.List;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI addOptions(java.util.List)>(v1);
return v0;
}
public io.vertx.mutiny.core.cli.CLI setOptions(java.util.List)
{
io.vertx.mutiny.core.cli.CLI v0;
java.util.List v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.util.List;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setOptions(java.util.List)>(v1);
return v0;
}
public java.util.List getArguments()
{
io.vertx.mutiny.core.cli.CLI v0;
java.util.List v2;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: java.util.List getArguments()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI addArgument(io.vertx.core.cli.Argument)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.Argument v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: io.vertx.core.cli.Argument;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI addArgument(io.vertx.core.cli.Argument)>(v1);
return v0;
}
public io.vertx.mutiny.core.cli.CLI addArguments(java.util.List)
{
io.vertx.mutiny.core.cli.CLI v0;
java.util.List v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.util.List;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI addArguments(java.util.List)>(v1);
return v0;
}
public io.vertx.mutiny.core.cli.CLI setArguments(java.util.List)
{
io.vertx.mutiny.core.cli.CLI v0;
java.util.List v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.util.List;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setArguments(java.util.List)>(v1);
return v0;
}
public io.vertx.core.cli.Option getOption(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.Option v3;
io.vertx.core.cli.CLI v2;
java.lang.String v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.Option getOption(java.lang.String)>(v1);
return v3;
}
public io.vertx.core.cli.Argument getArgument(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v2;
java.lang.String v1;
io.vertx.core.cli.Argument v3;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.Argument getArgument(java.lang.String)>(v1);
return v3;
}
public io.vertx.core.cli.Argument getArgument(int)
{
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v2;
int v1;
io.vertx.core.cli.Argument v3;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: int;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v3 = interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.Argument getArgument(int)>(v1);
return v3;
}
public io.vertx.mutiny.core.cli.CLI removeOption(java.lang.String)
{
io.vertx.mutiny.core.cli.CLI v0;
java.lang.String v1;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: java.lang.String;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI removeOption(java.lang.String)>(v1);
return v0;
}
public io.vertx.mutiny.core.cli.CLI removeArgument(int)
{
int v1;
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: int;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI removeArgument(int)>(v1);
return v0;
}
public int getPriority()
{
int v2;
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v1;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.cli.CLI: int getPriority()>();
return v2;
}
public io.vertx.mutiny.core.cli.CLI setPriority(int)
{
int v1;
io.vertx.mutiny.core.cli.CLI v0;
io.vertx.core.cli.CLI v2;
v0 := @this: io.vertx.mutiny.core.cli.CLI;
v1 := @parameter0: int;
v2 = v0.<io.vertx.mutiny.core.cli.CLI: io.vertx.core.cli.CLI delegate>;
interfaceinvoke v2.<io.vertx.core.cli.CLI: io.vertx.core.cli.CLI setPriority(int)>(v1);
return v0;
}
public static io.vertx.mutiny.core.cli.CLI newInstance(io.vertx.core.cli.CLI)
{
io.vertx.mutiny.core.cli.CLI v1;
io.vertx.core.cli.CLI v0;
v0 := @parameter0: io.vertx.core.cli.CLI;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.cli.CLI;
specialinvoke v1.<io.vertx.mutiny.core.cli.CLI: void <init>(io.vertx.core.cli.CLI)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.cli.CLI$lambda_static_0__1691: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.cli.CLI$getDelegate__1692: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.cli.CLI: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}