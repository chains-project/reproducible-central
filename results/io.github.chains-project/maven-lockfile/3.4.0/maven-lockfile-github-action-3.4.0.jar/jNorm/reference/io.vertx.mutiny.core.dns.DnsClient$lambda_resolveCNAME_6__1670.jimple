public final class io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670 extends java.lang.Object implements java.util.function.Consumer
{
io.vertx.mutiny.core.dns.DnsClient cap0;
java.lang.String cap1;
public static java.util.function.Consumer bootstrap$(io.vertx.mutiny.core.dns.DnsClient, java.lang.String)
{
io.vertx.mutiny.core.dns.DnsClient v0;
java.lang.String v1;
io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670 v2;
v0 := @parameter0: io.vertx.mutiny.core.dns.DnsClient;
v1 := @parameter1: java.lang.String;
v2 = new io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670;
specialinvoke v2.<io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670: void <init>(io.vertx.mutiny.core.dns.DnsClient,java.lang.String)>(v0, v1);
return v2;
}
public void <init>(io.vertx.mutiny.core.dns.DnsClient, java.lang.String)
{
io.vertx.mutiny.core.dns.DnsClient v1;
java.lang.String v2;
io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670 v0;
v0 := @this: io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670;
v1 := @parameter0: io.vertx.mutiny.core.dns.DnsClient;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670: io.vertx.mutiny.core.dns.DnsClient cap0> = v1;
v0.<io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670: java.lang.String cap1> = v2;
return;
}
public void accept(java.lang.Object)
{
io.vertx.mutiny.core.dns.DnsClient v2;
java.lang.Object v1;
java.lang.String v3;
io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670 v0;
v0 := @this: io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670;
v1 := @parameter0: java.lang.Object;
v2 = v0.<io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670: io.vertx.mutiny.core.dns.DnsClient cap0>;
v3 = v0.<io.vertx.mutiny.core.dns.DnsClient$lambda_resolveCNAME_6__1670: java.lang.String cap1>;
specialinvoke v2.<io.vertx.mutiny.core.dns.DnsClient: void lambda$resolveCNAME$6(java.lang.String,io.vertx.core.Handler)>(v3, v1);
return;
}
}