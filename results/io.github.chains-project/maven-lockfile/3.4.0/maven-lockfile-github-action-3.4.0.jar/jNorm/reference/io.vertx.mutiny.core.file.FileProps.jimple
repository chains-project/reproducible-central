public class io.vertx.mutiny.core.file.FileProps extends java.lang.Object
{
public static final io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG;
private final io.vertx.core.file.FileProps delegate;
public void <init>(io.vertx.core.file.FileProps)
{
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 := @parameter0: io.vertx.core.file.FileProps;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate> = v1;
return;
}
public void <init>(java.lang.Object)
{
java.lang.Object v1;
io.vertx.mutiny.core.file.FileProps v0;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 := @parameter0: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate> = v1;
return;
}
void <init>()
{
io.vertx.mutiny.core.file.FileProps v0;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate> = null;
return;
}
public io.vertx.core.file.FileProps getDelegate()
{
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
return v1;
}
public java.lang.String toString()
{
java.lang.String v2;
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
return v2;
}
public boolean equals(java.lang.Object)
{
io.vertx.mutiny.core.file.FileProps v0;
java.lang.Class v2, v3;
java.lang.Object v1;
boolean v6;
io.vertx.core.file.FileProps v4, v5;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v5 = v1.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v6 = virtualinvoke v4.<java.lang.Object: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = virtualinvoke v1.<java.lang.Object: int hashCode()>();
return v2;
}
public long creationTime()
{
long v2;
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: long creationTime()>();
return v2;
}
public long lastAccessTime()
{
long v2;
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: long lastAccessTime()>();
return v2;
}
public long lastModifiedTime()
{
long v2;
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: long lastModifiedTime()>();
return v2;
}
public boolean isDirectory()
{
io.vertx.mutiny.core.file.FileProps v0;
boolean v2;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: boolean isDirectory()>();
return v2;
}
public boolean isOther()
{
io.vertx.mutiny.core.file.FileProps v0;
boolean v2;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: boolean isOther()>();
return v2;
}
public boolean isRegularFile()
{
io.vertx.mutiny.core.file.FileProps v0;
boolean v2;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: boolean isRegularFile()>();
return v2;
}
public boolean isSymbolicLink()
{
io.vertx.mutiny.core.file.FileProps v0;
boolean v2;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: boolean isSymbolicLink()>();
return v2;
}
public long size()
{
long v2;
io.vertx.mutiny.core.file.FileProps v0;
io.vertx.core.file.FileProps v1;
v0 := @this: io.vertx.mutiny.core.file.FileProps;
v1 = v0.<io.vertx.mutiny.core.file.FileProps: io.vertx.core.file.FileProps delegate>;
v2 = interfaceinvoke v1.<io.vertx.core.file.FileProps: long size()>();
return v2;
}
public static io.vertx.mutiny.core.file.FileProps newInstance(io.vertx.core.file.FileProps)
{
io.vertx.mutiny.core.file.FileProps v1;
io.vertx.core.file.FileProps v0;
v0 := @parameter0: io.vertx.core.file.FileProps;
if v0 == null goto label1;
v1 = new io.vertx.mutiny.core.file.FileProps;
specialinvoke v1.<io.vertx.mutiny.core.file.FileProps: void <init>(io.vertx.core.file.FileProps)>(v0);
goto label2;
label1:
v1 = null;
label2:
return v1;
}
static void <clinit>()
{
java.util.function.Function v1, v2;
io.smallrye.mutiny.vertx.TypeArg v0;
v0 = new io.smallrye.mutiny.vertx.TypeArg;
v1 = staticinvoke <io.vertx.mutiny.core.file.FileProps$lambda_static_0__2100: java.util.function.Function bootstrap$()>();
v2 = staticinvoke <io.vertx.mutiny.core.file.FileProps$getDelegate__2101: java.util.function.Function bootstrap$()>();
specialinvoke v0.<io.smallrye.mutiny.vertx.TypeArg: void <init>(java.util.function.Function,java.util.function.Function)>(v1, v2);
<io.vertx.mutiny.core.file.FileProps: io.smallrye.mutiny.vertx.TypeArg __TYPE_ARG> = v0;
return;
}
}