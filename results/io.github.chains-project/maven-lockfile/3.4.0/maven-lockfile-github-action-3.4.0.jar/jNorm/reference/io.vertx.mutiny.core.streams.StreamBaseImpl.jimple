class io.vertx.mutiny.core.streams.StreamBaseImpl extends java.lang.Object implements io.vertx.mutiny.core.streams.StreamBase
{
private final io.vertx.core.streams.StreamBase delegate;
public io.vertx.core.streams.StreamBase getDelegate()
{
io.vertx.mutiny.core.streams.StreamBaseImpl v0;
io.vertx.core.streams.StreamBase v1;
v0 := @this: io.vertx.mutiny.core.streams.StreamBaseImpl;
v1 = v0.<io.vertx.mutiny.core.streams.StreamBaseImpl: io.vertx.core.streams.StreamBase delegate>;
return v1;
}
void <init>()
{
io.vertx.mutiny.core.streams.StreamBaseImpl v0;
v0 := @this: io.vertx.mutiny.core.streams.StreamBaseImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.streams.StreamBaseImpl: io.vertx.core.streams.StreamBase delegate> = null;
return;
}
public void <init>(io.vertx.core.streams.StreamBase)
{
io.vertx.mutiny.core.streams.StreamBaseImpl v0;
io.vertx.core.streams.StreamBase v1;
v0 := @this: io.vertx.mutiny.core.streams.StreamBaseImpl;
v1 := @parameter0: io.vertx.core.streams.StreamBase;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.mutiny.core.streams.StreamBaseImpl: io.vertx.core.streams.StreamBase delegate> = v1;
return;
}
private io.vertx.mutiny.core.streams.StreamBase __exceptionHandler(io.vertx.core.Handler)
{
io.vertx.core.Handler v1;
io.vertx.mutiny.core.streams.StreamBaseImpl v0;
io.vertx.core.streams.StreamBase v2;
v0 := @this: io.vertx.mutiny.core.streams.StreamBaseImpl;
v1 := @parameter0: io.vertx.core.Handler;
v2 = v0.<io.vertx.mutiny.core.streams.StreamBaseImpl: io.vertx.core.streams.StreamBase delegate>;
interfaceinvoke v2.<io.vertx.core.streams.StreamBase: io.vertx.core.streams.StreamBase exceptionHandler(io.vertx.core.Handler)>(v1);
return v0;
}
public io.vertx.mutiny.core.streams.StreamBase exceptionHandler(java.util.function.Consumer)
{
java.util.function.Consumer v1;
io.smallrye.mutiny.vertx.DelegatingConsumerHandler v2;
io.vertx.mutiny.core.streams.StreamBase v3;
io.vertx.mutiny.core.streams.StreamBaseImpl v0;
v0 := @this: io.vertx.mutiny.core.streams.StreamBaseImpl;
v1 := @parameter0: java.util.function.Consumer;
if v1 == null goto label1;
v2 = new io.smallrye.mutiny.vertx.DelegatingConsumerHandler;
specialinvoke v2.<io.smallrye.mutiny.vertx.DelegatingConsumerHandler: void <init>(java.util.function.Consumer)>(v1);
goto label2;
label1:
v2 = null;
label2:
v3 = specialinvoke v0.<io.vertx.mutiny.core.streams.StreamBaseImpl: io.vertx.mutiny.core.streams.StreamBase __exceptionHandler(io.vertx.core.Handler)>(v2);
return v3;
}
}