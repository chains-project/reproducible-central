public abstract class io.vertx.uritemplate.impl.UriTemplateImpl$SOperator extends java.lang.Object
{
private final io.vertx.uritemplate.impl.UriTemplateImpl$CharSet allowedSet;
private final java.lang.String prefix;
private final java.lang.String delimiter;
final char[] chars;
transient void <init>(io.vertx.uritemplate.impl.UriTemplateImpl$CharSet, java.lang.String, java.lang.String, char[])
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v0;
io.vertx.uritemplate.impl.UriTemplateImpl$CharSet v1;
char[] v4;
java.lang.String v2, v3;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator;
v1 := @parameter0: io.vertx.uritemplate.impl.UriTemplateImpl$CharSet;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: char[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: io.vertx.uritemplate.impl.UriTemplateImpl$CharSet allowedSet> = v1;
v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String prefix> = v2;
v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String delimiter> = v3;
v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: char[] chars> = v4;
return;
}
java.lang.String join(boolean, java.lang.String, java.lang.String)
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v0;
java.lang.UnsupportedOperationException v4;
java.lang.String v2, v3;
boolean v1;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator;
v1 := @parameter0: boolean;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = new java.lang.UnsupportedOperationException;
specialinvoke v4.<java.lang.UnsupportedOperationException: void <init>()>();
throw v4;
}
java.lang.String encodeName(java.lang.String)
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v0;
java.lang.String v1, v2;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String encode(java.lang.String,boolean)>(v1, 0);
return v2;
}
java.lang.String encodeValue(java.lang.String)
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v0;
java.lang.String v1, v2;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: java.lang.String encode(java.lang.String,boolean)>(v1, 0);
return v2;
}
java.lang.String encode(java.lang.String, boolean)
{
io.vertx.uritemplate.impl.UriTemplateImpl$SOperator v0;
io.vertx.uritemplate.impl.UriTemplateImpl$CharSet v4;
java.lang.StringBuilder v3;
java.lang.String v1, v5;
boolean v2;
v0 := @this: io.vertx.uritemplate.impl.UriTemplateImpl$SOperator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = v0.<io.vertx.uritemplate.impl.UriTemplateImpl$SOperator: io.vertx.uritemplate.impl.UriTemplateImpl$CharSet allowedSet>;
staticinvoke <io.vertx.uritemplate.impl.UriTemplateImpl: void encodeString(java.lang.String,io.vertx.uritemplate.impl.UriTemplateImpl$CharSet,boolean,java.lang.StringBuilder)>(v1, v4, v2, v3);
v5 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
return v5;
}
}