public class jakarta.el.ELManager extends java.lang.Object
{
private static jakarta.el.ExpressionFactory exprFactory;
private jakarta.el.StandardELContext elContext;
public void <init>()
{
jakarta.el.ELManager v0;
v0 := @this: jakarta.el.ELManager;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static jakarta.el.ExpressionFactory getExpressionFactory()
{
jakarta.el.ExpressionFactory v0;
v0 = <jakarta.el.ELManager: jakarta.el.ExpressionFactory exprFactory>;
return v0;
}
public jakarta.el.StandardELContext getELContext()
{
jakarta.el.ELManager v0;
jakarta.el.ExpressionFactory v3;
jakarta.el.StandardELContext v1, v2, v4;
v0 := @this: jakarta.el.ELManager;
v1 = v0.<jakarta.el.ELManager: jakarta.el.StandardELContext elContext>;
if v1 != null goto label1;
v2 = new jakarta.el.StandardELContext;
v3 = staticinvoke <jakarta.el.ELManager: jakarta.el.ExpressionFactory getExpressionFactory()>();
specialinvoke v2.<jakarta.el.StandardELContext: void <init>(jakarta.el.ExpressionFactory)>(v3);
v0.<jakarta.el.ELManager: jakarta.el.StandardELContext elContext> = v2;
label1:
v4 = v0.<jakarta.el.ELManager: jakarta.el.StandardELContext elContext>;
return v4;
}
public jakarta.el.ELContext setELContext(jakarta.el.ELContext)
{
jakarta.el.ELContext v1;
jakarta.el.ELManager v0;
jakarta.el.StandardELContext v2, v3;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: jakarta.el.ELContext;
v2 = v0.<jakarta.el.ELManager: jakarta.el.StandardELContext elContext>;
v3 = new jakarta.el.StandardELContext;
specialinvoke v3.<jakarta.el.StandardELContext: void <init>(jakarta.el.ELContext)>(v1);
v0.<jakarta.el.ELManager: jakarta.el.StandardELContext elContext> = v3;
return v2;
}
public void addBeanNameResolver(jakarta.el.BeanNameResolver)
{
jakarta.el.ELManager v0;
jakarta.el.BeanNameResolver v1;
jakarta.el.StandardELContext v2;
jakarta.el.BeanNameELResolver v3;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: jakarta.el.BeanNameResolver;
v2 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v3 = new jakarta.el.BeanNameELResolver;
specialinvoke v3.<jakarta.el.BeanNameELResolver: void <init>(jakarta.el.BeanNameResolver)>(v1);
virtualinvoke v2.<jakarta.el.StandardELContext: void addELResolver(jakarta.el.ELResolver)>(v3);
return;
}
public void addELResolver(jakarta.el.ELResolver)
{
jakarta.el.StandardELContext v2;
jakarta.el.ELResolver v1;
jakarta.el.ELManager v0;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: jakarta.el.ELResolver;
v2 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
virtualinvoke v2.<jakarta.el.StandardELContext: void addELResolver(jakarta.el.ELResolver)>(v1);
return;
}
public void mapFunction(java.lang.String, java.lang.String, java.lang.reflect.Method)
{
jakarta.el.FunctionMapper v5;
jakarta.el.ELManager v0;
jakarta.el.StandardELContext v4;
java.lang.String v1, v2;
java.lang.reflect.Method v3;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.reflect.Method;
v4 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v5 = virtualinvoke v4.<jakarta.el.StandardELContext: jakarta.el.FunctionMapper getFunctionMapper()>();
virtualinvoke v5.<jakarta.el.FunctionMapper: void mapFunction(java.lang.String,java.lang.String,java.lang.reflect.Method)>(v1, v2, v3);
return;
}
public void setVariable(java.lang.String, jakarta.el.ValueExpression)
{
jakarta.el.VariableMapper v4;
jakarta.el.ELManager v0;
jakarta.el.StandardELContext v3;
java.lang.String v1;
jakarta.el.ValueExpression v2;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.el.ValueExpression;
v3 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v4 = virtualinvoke v3.<jakarta.el.StandardELContext: jakarta.el.VariableMapper getVariableMapper()>();
virtualinvoke v4.<jakarta.el.VariableMapper: jakarta.el.ValueExpression setVariable(java.lang.String,jakarta.el.ValueExpression)>(v1, v2);
return;
}
public void importStatic(java.lang.String) throws jakarta.el.ELException
{
jakarta.el.ELManager v0;
jakarta.el.StandardELContext v2;
jakarta.el.ImportHandler v3;
java.lang.String v1;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v3 = virtualinvoke v2.<jakarta.el.StandardELContext: jakarta.el.ImportHandler getImportHandler()>();
virtualinvoke v3.<jakarta.el.ImportHandler: void importStatic(java.lang.String)>(v1);
return;
}
public void importClass(java.lang.String) throws jakarta.el.ELException
{
jakarta.el.ELManager v0;
jakarta.el.StandardELContext v2;
jakarta.el.ImportHandler v3;
java.lang.String v1;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v3 = virtualinvoke v2.<jakarta.el.StandardELContext: jakarta.el.ImportHandler getImportHandler()>();
virtualinvoke v3.<jakarta.el.ImportHandler: void importClass(java.lang.String)>(v1);
return;
}
public void importPackage(java.lang.String)
{
jakarta.el.ELManager v0;
jakarta.el.StandardELContext v2;
jakarta.el.ImportHandler v3;
java.lang.String v1;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v3 = virtualinvoke v2.<jakarta.el.StandardELContext: jakarta.el.ImportHandler getImportHandler()>();
virtualinvoke v3.<jakarta.el.ImportHandler: void importPackage(java.lang.String)>(v1);
return;
}
public java.lang.Object defineBean(java.lang.String, java.lang.Object)
{
jakarta.el.StandardELContext v3, v6;
jakarta.el.ELManager v0;
java.util.Map v4, v7;
java.lang.Object v2, v5;
java.lang.String v1;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v4 = virtualinvoke v3.<jakarta.el.StandardELContext: java.util.Map getBeans()>();
v5 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v6 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
v7 = virtualinvoke v6.<jakarta.el.StandardELContext: java.util.Map getBeans()>();
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v5;
}
public void addEvaluationListener(jakarta.el.EvaluationListener)
{
jakarta.el.EvaluationListener v1;
jakarta.el.StandardELContext v2;
jakarta.el.ELManager v0;
v0 := @this: jakarta.el.ELManager;
v1 := @parameter0: jakarta.el.EvaluationListener;
v2 = virtualinvoke v0.<jakarta.el.ELManager: jakarta.el.StandardELContext getELContext()>();
virtualinvoke v2.<jakarta.el.StandardELContext: void addEvaluationListener(jakarta.el.EvaluationListener)>(v1);
return;
}
static void <clinit>()
{
jakarta.el.ExpressionFactory v0;
v0 = staticinvoke <jakarta.el.ExpressionFactory: jakarta.el.ExpressionFactory newInstance()>();
<jakarta.el.ELManager: jakarta.el.ExpressionFactory exprFactory> = v0;
return;
}
}