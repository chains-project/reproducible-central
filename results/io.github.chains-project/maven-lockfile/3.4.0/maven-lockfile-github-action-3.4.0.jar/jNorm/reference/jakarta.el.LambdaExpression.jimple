public class jakarta.el.LambdaExpression extends java.lang.Object
{
private java.util.List formalParameters;
private jakarta.el.ValueExpression expression;
private jakarta.el.ELContext context;
private java.util.Map envirArgs;
public void <init>(java.util.List, jakarta.el.ValueExpression)
{
java.util.List v1;
java.util.HashMap v4;
jakarta.el.ValueExpression v2;
jakarta.el.LambdaExpression v0;
java.util.ArrayList v3;
v0 := @this: jakarta.el.LambdaExpression;
v1 := @parameter0: java.util.List;
v2 := @parameter1: jakarta.el.ValueExpression;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<jakarta.el.LambdaExpression: java.util.List formalParameters> = v3;
v0.<jakarta.el.LambdaExpression: java.util.List formalParameters> = v1;
v0.<jakarta.el.LambdaExpression: jakarta.el.ValueExpression expression> = v2;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v0.<jakarta.el.LambdaExpression: java.util.Map envirArgs> = v4;
return;
}
public void setELContext(jakarta.el.ELContext)
{
jakarta.el.ELContext v1;
jakarta.el.LambdaExpression v0;
v0 := @this: jakarta.el.LambdaExpression;
v1 := @parameter0: jakarta.el.ELContext;
v0.<jakarta.el.LambdaExpression: jakarta.el.ELContext context> = v1;
return;
}
public transient java.lang.Object invoke(jakarta.el.ELContext, java.lang.Object[]) throws jakarta.el.ELException
{
java.lang.Throwable v19;
java.lang.Object[] v2;
java.util.HashMap v4;
jakarta.el.ELException v11;
jakarta.el.ValueExpression v15;
java.util.Map v18, v5;
int v10, v13, v3;
java.lang.String v12;
boolean v17, v8;
jakarta.el.LambdaExpression v0;
jakarta.el.ELContext v1;
java.util.Iterator v7;
java.util.List v6;
java.lang.Object v14, v16, v9;
v0 := @this: jakarta.el.LambdaExpression;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object[];
v3 = 0;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v5 = v0.<jakarta.el.LambdaExpression: java.util.Map envirArgs>;
interfaceinvoke v4.<java.util.Map: void putAll(java.util.Map)>(v5);
v6 = v0.<jakarta.el.LambdaExpression: java.util.List formalParameters>;
v7 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label3;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
v10 = lengthof v2;
if v3 < v10 goto label2;
v11 = new jakarta.el.ELException;
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Expected Argument \u0001 missing in Lambda Expression");
specialinvoke v11.<jakarta.el.ELException: void <init>(java.lang.String)>(v12);
throw v11;
label2:
v13 = v3;
v3 = v3 + 1;
v14 = v2[v13];
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v14);
goto label1;
label3:
virtualinvoke v1.<jakarta.el.ELContext: void enterLambdaScope(java.util.Map)>(v4);
label4:
v15 = v0.<jakarta.el.LambdaExpression: jakarta.el.ValueExpression expression>;
v16 = virtualinvoke v15.<jakarta.el.ValueExpression: java.lang.Object getValue(jakarta.el.ELContext)>(v1);
v17 = v16 instanceof jakarta.el.LambdaExpression;
if v17 == 0 goto label5;
v18 = v16.<jakarta.el.LambdaExpression: java.util.Map envirArgs>;
interfaceinvoke v18.<java.util.Map: void putAll(java.util.Map)>(v4);
label5:
virtualinvoke v1.<jakarta.el.ELContext: void exitLambdaScope()>();
return v16;
label6:
v19 := @caughtexception;
virtualinvoke v1.<jakarta.el.ELContext: void exitLambdaScope()>();
throw v19;
catch java.lang.Throwable from label4 to label5 with label6;
}
public transient java.lang.Object invoke(java.lang.Object[])
{
jakarta.el.ELContext v2;
java.lang.Object[] v1;
java.lang.Object v3;
jakarta.el.LambdaExpression v0;
v0 := @this: jakarta.el.LambdaExpression;
v1 := @parameter0: java.lang.Object[];
v2 = v0.<jakarta.el.LambdaExpression: jakarta.el.ELContext context>;
v3 = virtualinvoke v0.<jakarta.el.LambdaExpression: java.lang.Object invoke(jakarta.el.ELContext,java.lang.Object[])>(v2, v1);
return v3;
}
}