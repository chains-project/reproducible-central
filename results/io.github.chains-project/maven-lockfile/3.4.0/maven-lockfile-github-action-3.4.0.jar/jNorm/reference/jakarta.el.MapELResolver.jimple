public class jakarta.el.MapELResolver extends jakarta.el.ELResolver
{
private static java.lang.Class theUnmodifiableMapClass;
private boolean isReadOnly;
public void <init>()
{
jakarta.el.MapELResolver v0;
v0 := @this: jakarta.el.MapELResolver;
specialinvoke v0.<jakarta.el.ELResolver: void <init>()>();
v0.<jakarta.el.MapELResolver: boolean isReadOnly> = 0;
return;
}
public void <init>(boolean)
{
boolean v1;
jakarta.el.MapELResolver v0;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: boolean;
specialinvoke v0.<jakarta.el.ELResolver: void <init>()>();
v0.<jakarta.el.MapELResolver: boolean isReadOnly> = v1;
return;
}
public java.lang.Class getType(jakarta.el.ELContext, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.MapELResolver v0;
java.lang.NullPointerException v4;
java.lang.Class v7, v8;
java.lang.Object v2, v3;
boolean v5, v6;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
if v1 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>()>();
throw v4;
label1:
if v2 == null goto label4;
v5 = v2 instanceof java.util.Map;
if v5 == 0 goto label4;
virtualinvoke v1.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(1);
v6 = v0.<jakarta.el.MapELResolver: boolean isReadOnly>;
if v6 != 0 goto label2;
v7 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v8 = <jakarta.el.MapELResolver: java.lang.Class theUnmodifiableMapClass>;
if v7 != v8 goto label3;
label2:
return null;
label3:
return class "Ljava/lang/Object;";
label4:
return null;
}
public java.lang.Object getValue(jakarta.el.ELContext, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.MapELResolver v0;
java.lang.Object v2, v3, v6;
java.lang.NullPointerException v4;
boolean v5;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
if v1 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>()>();
throw v4;
label1:
if v2 == null goto label2;
v5 = v2 instanceof java.util.Map;
if v5 == 0 goto label2;
virtualinvoke v1.<jakarta.el.ELContext: void setPropertyResolved(java.lang.Object,java.lang.Object)>(v2, v3);
v6 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v3);
return v6;
label2:
return null;
}
public void setValue(jakarta.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
java.lang.UnsupportedOperationException v11;
jakarta.el.MapELResolver v0;
java.lang.NullPointerException v5;
java.lang.Class v8, v9;
java.lang.Object v2, v3, v4;
jakarta.el.PropertyNotWritableException v10, v12;
boolean v6, v7;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
if v1 != null goto label1;
v5 = new java.lang.NullPointerException;
specialinvoke v5.<java.lang.NullPointerException: void <init>()>();
throw v5;
label1:
if v2 == null goto label6;
v6 = v2 instanceof java.util.Map;
if v6 == 0 goto label6;
virtualinvoke v1.<jakarta.el.ELContext: void setPropertyResolved(java.lang.Object,java.lang.Object)>(v2, v3);
v7 = v0.<jakarta.el.MapELResolver: boolean isReadOnly>;
if v7 != 0 goto label2;
v8 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v9 = <jakarta.el.MapELResolver: java.lang.Class theUnmodifiableMapClass>;
if v8 != v9 goto label3;
label2:
v10 = new jakarta.el.PropertyNotWritableException;
specialinvoke v10.<jakarta.el.PropertyNotWritableException: void <init>()>();
throw v10;
label3:
interfaceinvoke v2.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v3, v4);
label4:
goto label6;
label5:
v11 := @caughtexception;
v12 = new jakarta.el.PropertyNotWritableException;
specialinvoke v12.<jakarta.el.PropertyNotWritableException: void <init>()>();
throw v12;
label6:
return;
catch java.lang.UnsupportedOperationException from label3 to label4 with label5;
}
public boolean isReadOnly(jakarta.el.ELContext, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.MapELResolver v0;
java.lang.NullPointerException v4;
java.lang.Class v7, v8;
java.lang.Object v2, v3;
boolean v5, v6, v9;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
if v1 != null goto label1;
v4 = new java.lang.NullPointerException;
specialinvoke v4.<java.lang.NullPointerException: void <init>()>();
throw v4;
label1:
if v2 == null goto label5;
v5 = v2 instanceof java.util.Map;
if v5 == 0 goto label5;
virtualinvoke v1.<jakarta.el.ELContext: void setPropertyResolved(boolean)>(1);
v6 = v0.<jakarta.el.MapELResolver: boolean isReadOnly>;
if v6 != 0 goto label2;
v7 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v8 = <jakarta.el.MapELResolver: java.lang.Class theUnmodifiableMapClass>;
if v7 != v8 goto label3;
label2:
v9 = 1;
goto label4;
label3:
v9 = 0;
label4:
return v9;
label5:
return 0;
}
public java.util.Iterator getFeatureDescriptors(jakarta.el.ELContext, java.lang.Object)
{
jakarta.el.ELContext v1;
java.util.Iterator v13, v5;
jakarta.el.MapELResolver v0;
java.util.Set v4;
java.util.ArrayList v6;
java.lang.Boolean v12;
java.lang.Class v11;
java.lang.Object v2, v8;
java.beans.FeatureDescriptor v9;
java.lang.String v10;
boolean v3, v7;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
if v2 == null goto label6;
v3 = v2 instanceof java.util.Map;
if v3 == 0 goto label6;
v4 = interfaceinvoke v2.<java.util.Map: java.util.Set keySet()>();
v5 = interfaceinvoke v4.<java.util.Set: java.util.Iterator iterator()>();
v6 = new java.util.ArrayList;
specialinvoke v6.<java.util.ArrayList: void <init>()>();
label1:
v7 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v7 == 0 goto label5;
v8 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v9 = new java.beans.FeatureDescriptor;
specialinvoke v9.<java.beans.FeatureDescriptor: void <init>()>();
if v8 != null goto label2;
v10 = null;
goto label3;
label2:
v10 = virtualinvoke v8.<java.lang.Object: java.lang.String toString()>();
label3:
virtualinvoke v9.<java.beans.FeatureDescriptor: void setName(java.lang.String)>(v10);
virtualinvoke v9.<java.beans.FeatureDescriptor: void setDisplayName(java.lang.String)>(v10);
virtualinvoke v9.<java.beans.FeatureDescriptor: void setShortDescription(java.lang.String)>("");
virtualinvoke v9.<java.beans.FeatureDescriptor: void setExpert(boolean)>(0);
virtualinvoke v9.<java.beans.FeatureDescriptor: void setHidden(boolean)>(0);
virtualinvoke v9.<java.beans.FeatureDescriptor: void setPreferred(boolean)>(1);
if v8 == null goto label4;
v11 = virtualinvoke v8.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v9.<java.beans.FeatureDescriptor: void setValue(java.lang.String,java.lang.Object)>("type", v11);
label4:
v12 = <java.lang.Boolean: java.lang.Boolean TRUE>;
virtualinvoke v9.<java.beans.FeatureDescriptor: void setValue(java.lang.String,java.lang.Object)>("resolvableAtDesignTime", v12);
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v9);
goto label1;
label5:
v13 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
return v13;
label6:
return null;
}
public java.lang.Class getCommonPropertyType(jakarta.el.ELContext, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.MapELResolver v0;
java.lang.Object v2;
boolean v3;
v0 := @this: jakarta.el.MapELResolver;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
if v2 == null goto label1;
v3 = v2 instanceof java.util.Map;
if v3 == 0 goto label1;
return class "Ljava/lang/Object;";
label1:
return null;
}
static void <clinit>()
{
java.lang.Class v2;
java.util.HashMap v0;
java.util.Map v1;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
v1 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v0);
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
<jakarta.el.MapELResolver: java.lang.Class theUnmodifiableMapClass> = v2;
return;
}
}