public class jakarta.el.MethodReference extends java.lang.Object
{
private final java.lang.Object base;
private final jakarta.el.MethodInfo methodInfo;
private final java.lang.'annotation'.Annotation[] annotations;
private final java.lang.Object[] evaluatedParameters;
public void <init>(java.lang.Object, jakarta.el.MethodInfo, java.lang.'annotation'.Annotation[], java.lang.Object[])
{
java.lang.Object[] v4;
jakarta.el.MethodInfo v2;
jakarta.el.MethodReference v0;
java.lang.Object v1;
java.lang.'annotation'.Annotation[] v3;
v0 := @this: jakarta.el.MethodReference;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: jakarta.el.MethodInfo;
v3 := @parameter2: java.lang.'annotation'.Annotation[];
v4 := @parameter3: java.lang.Object[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<jakarta.el.MethodReference: java.lang.Object base> = v1;
v0.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo> = v2;
v0.<jakarta.el.MethodReference: java.lang.'annotation'.Annotation[] annotations> = v3;
v0.<jakarta.el.MethodReference: java.lang.Object[] evaluatedParameters> = v4;
return;
}
public java.lang.Object getBase()
{
jakarta.el.MethodReference v0;
java.lang.Object v1;
v0 := @this: jakarta.el.MethodReference;
v1 = v0.<jakarta.el.MethodReference: java.lang.Object base>;
return v1;
}
public jakarta.el.MethodInfo getMethodInfo()
{
jakarta.el.MethodInfo v1;
jakarta.el.MethodReference v0;
v0 := @this: jakarta.el.MethodReference;
v1 = v0.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
return v1;
}
public java.lang.'annotation'.Annotation[] getAnnotations()
{
jakarta.el.MethodReference v0;
java.lang.'annotation'.Annotation[] v1;
v0 := @this: jakarta.el.MethodReference;
v1 = v0.<jakarta.el.MethodReference: java.lang.'annotation'.Annotation[] annotations>;
return v1;
}
public java.lang.Object[] getEvaluatedParameters()
{
jakarta.el.MethodReference v0;
java.lang.Object[] v1;
v0 := @this: jakarta.el.MethodReference;
v1 = v0.<jakarta.el.MethodReference: java.lang.Object[] evaluatedParameters>;
return v1;
}
public int hashCode()
{
java.lang.Object[] v10;
java.lang.'annotation'.Annotation[] v1;
int v11, v12, v13, v15, v17, v2, v3, v4, v6, v8, v9;
jakarta.el.MethodReference v0;
jakarta.el.MethodInfo v14, v16;
java.lang.Object v5, v7;
v0 := @this: jakarta.el.MethodReference;
v1 = v0.<jakarta.el.MethodReference: java.lang.'annotation'.Annotation[] annotations>;
v2 = staticinvoke <java.util.Arrays: int hashCode(java.lang.Object[])>(v1);
v3 = 31 + v2;
v4 = 31 * v3;
v5 = v0.<jakarta.el.MethodReference: java.lang.Object base>;
if v5 != null goto label1;
v6 = 0;
goto label2;
label1:
v7 = v0.<jakarta.el.MethodReference: java.lang.Object base>;
v6 = virtualinvoke v7.<java.lang.Object: int hashCode()>();
label2:
v8 = v4 + v6;
v9 = 31 * v8;
v10 = v0.<jakarta.el.MethodReference: java.lang.Object[] evaluatedParameters>;
v11 = staticinvoke <java.util.Arrays: int deepHashCode(java.lang.Object[])>(v10);
v12 = v9 + v11;
v13 = 31 * v12;
v14 = v0.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
if v14 != null goto label3;
v15 = 0;
goto label4;
label3:
v16 = v0.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
v15 = virtualinvoke v16.<jakarta.el.MethodInfo: int hashCode()>();
label4:
v17 = v13 + v15;
return v17;
}
public boolean equals(java.lang.Object)
{
java.lang.Object[] v12, v13;
java.lang.'annotation'.Annotation[] v4, v5;
jakarta.el.MethodReference v0;
boolean v11, v14, v19, v6;
jakarta.el.MethodInfo v15, v16, v17, v18;
java.lang.Class v2, v3;
java.lang.Object v1, v10, v7, v8, v9;
v0 := @this: jakarta.el.MethodReference;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 != null goto label2;
return 0;
label2:
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
return 0;
label3:
v4 = v0.<jakarta.el.MethodReference: java.lang.'annotation'.Annotation[] annotations>;
v5 = v1.<jakarta.el.MethodReference: java.lang.'annotation'.Annotation[] annotations>;
v6 = staticinvoke <java.util.Arrays: boolean equals(java.lang.Object[],java.lang.Object[])>(v4, v5);
if v6 != 0 goto label4;
return 0;
label4:
v7 = v0.<jakarta.el.MethodReference: java.lang.Object base>;
if v7 != null goto label5;
v8 = v1.<jakarta.el.MethodReference: java.lang.Object base>;
if v8 == null goto label6;
return 0;
label5:
v9 = v0.<jakarta.el.MethodReference: java.lang.Object base>;
v10 = v1.<jakarta.el.MethodReference: java.lang.Object base>;
v11 = virtualinvoke v9.<java.lang.Object: boolean equals(java.lang.Object)>(v10);
if v11 != 0 goto label6;
return 0;
label6:
v12 = v0.<jakarta.el.MethodReference: java.lang.Object[] evaluatedParameters>;
v13 = v1.<jakarta.el.MethodReference: java.lang.Object[] evaluatedParameters>;
v14 = staticinvoke <java.util.Arrays: boolean deepEquals(java.lang.Object[],java.lang.Object[])>(v12, v13);
if v14 != 0 goto label7;
return 0;
label7:
v15 = v0.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
if v15 != null goto label8;
v16 = v1.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
if v16 == null goto label9;
return 0;
label8:
v17 = v0.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
v18 = v1.<jakarta.el.MethodReference: jakarta.el.MethodInfo methodInfo>;
v19 = virtualinvoke v17.<jakarta.el.MethodInfo: boolean equals(java.lang.Object)>(v18);
if v19 != 0 goto label9;
return 0;
label9:
return 1;
}
}