class jakarta.el.StandardELContext$DefaultFunctionMapper extends jakarta.el.FunctionMapper
{
private java.util.Map functions;
void <init>(java.util.Map)
{
jakarta.el.StandardELContext$DefaultFunctionMapper v0;
java.util.HashMap v2;
java.util.Map v1;
v0 := @this: jakarta.el.StandardELContext$DefaultFunctionMapper;
v1 := @parameter0: java.util.Map;
specialinvoke v0.<jakarta.el.FunctionMapper: void <init>()>();
if v1 != null goto label1;
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>()>();
goto label2;
label1:
v2 = new java.util.HashMap;
specialinvoke v2.<java.util.HashMap: void <init>(java.util.Map)>(v1);
label2:
v0.<jakarta.el.StandardELContext$DefaultFunctionMapper: java.util.Map functions> = v2;
return;
}
public java.lang.reflect.Method resolveFunction(java.lang.String, java.lang.String)
{
jakarta.el.StandardELContext$DefaultFunctionMapper v0;
java.util.Map v3;
java.lang.Object v5;
java.lang.String v1, v2, v4;
v0 := @this: jakarta.el.StandardELContext$DefaultFunctionMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<jakarta.el.StandardELContext$DefaultFunctionMapper: java.util.Map functions>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
v5 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>(v4);
return v5;
}
public void mapFunction(java.lang.String, java.lang.String, java.lang.reflect.Method)
{
jakarta.el.StandardELContext$DefaultFunctionMapper v0;
java.util.Map v4;
java.lang.String v1, v2, v5;
java.lang.reflect.Method v3;
v0 := @this: jakarta.el.StandardELContext$DefaultFunctionMapper;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.reflect.Method;
v4 = v0.<jakarta.el.StandardELContext$DefaultFunctionMapper: java.util.Map functions>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001:\u0001");
interfaceinvoke v4.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v3);
return;
}
}