public abstract class jakarta.el.TypeConverter extends jakarta.el.ELResolver
{
public void <init>()
{
jakarta.el.TypeConverter v0;
v0 := @this: jakarta.el.TypeConverter;
specialinvoke v0.<jakarta.el.ELResolver: void <init>()>();
return;
}
public java.lang.Object getValue(jakarta.el.ELContext, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.TypeConverter v0;
java.lang.Object v2, v3;
v0 := @this: jakarta.el.TypeConverter;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
return null;
}
public java.lang.Class getType(jakarta.el.ELContext, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.TypeConverter v0;
java.lang.Object v2, v3;
v0 := @this: jakarta.el.TypeConverter;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
return null;
}
public void setValue(jakarta.el.ELContext, java.lang.Object, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.TypeConverter v0;
java.lang.Object v2, v3, v4;
v0 := @this: jakarta.el.TypeConverter;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object;
return;
}
public boolean isReadOnly(jakarta.el.ELContext, java.lang.Object, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.TypeConverter v0;
java.lang.Object v2, v3;
v0 := @this: jakarta.el.TypeConverter;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
return 0;
}
public java.util.Iterator getFeatureDescriptors(jakarta.el.ELContext, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.TypeConverter v0;
java.lang.Object v2;
v0 := @this: jakarta.el.TypeConverter;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
return null;
}
public java.lang.Class getCommonPropertyType(jakarta.el.ELContext, java.lang.Object)
{
jakarta.el.ELContext v1;
jakarta.el.TypeConverter v0;
java.lang.Object v2;
v0 := @this: jakarta.el.TypeConverter;
v1 := @parameter0: jakarta.el.ELContext;
v2 := @parameter1: java.lang.Object;
return null;
}
public abstract java.lang.Object convertToType(jakarta.el.ELContext, java.lang.Object, java.lang.Class);
}