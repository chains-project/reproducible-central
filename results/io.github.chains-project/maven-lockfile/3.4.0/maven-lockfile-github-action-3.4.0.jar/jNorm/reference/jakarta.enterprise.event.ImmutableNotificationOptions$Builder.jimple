class jakarta.enterprise.event.ImmutableNotificationOptions$Builder extends java.lang.Object implements jakarta.enterprise.event.NotificationOptions$Builder
{
private java.util.concurrent.Executor executor;
private java.util.Map options;
void <init>()
{
java.util.HashMap v1;
jakarta.enterprise.event.ImmutableNotificationOptions$Builder v0;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions$Builder;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v0.<jakarta.enterprise.event.ImmutableNotificationOptions$Builder: java.util.Map options> = v1;
return;
}
public jakarta.enterprise.event.ImmutableNotificationOptions$Builder setExecutor(java.util.concurrent.Executor)
{
java.util.concurrent.Executor v1;
jakarta.enterprise.event.ImmutableNotificationOptions$Builder v0;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions$Builder;
v1 := @parameter0: java.util.concurrent.Executor;
v0.<jakarta.enterprise.event.ImmutableNotificationOptions$Builder: java.util.concurrent.Executor executor> = v1;
return v0;
}
public jakarta.enterprise.event.ImmutableNotificationOptions$Builder set(java.lang.String, java.lang.Object)
{
jakarta.enterprise.event.ImmutableNotificationOptions$Builder v0;
java.util.Map v3;
java.lang.Object v2;
java.lang.String v1;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
v3 = v0.<jakarta.enterprise.event.ImmutableNotificationOptions$Builder: java.util.Map options>;
interfaceinvoke v3.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public jakarta.enterprise.event.ImmutableNotificationOptions build()
{
jakarta.enterprise.event.ImmutableNotificationOptions v1;
java.util.concurrent.Executor v2;
jakarta.enterprise.event.ImmutableNotificationOptions$Builder v0;
java.util.Map v3;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions$Builder;
v1 = new jakarta.enterprise.event.ImmutableNotificationOptions;
v2 = v0.<jakarta.enterprise.event.ImmutableNotificationOptions$Builder: java.util.concurrent.Executor executor>;
v3 = v0.<jakarta.enterprise.event.ImmutableNotificationOptions$Builder: java.util.Map options>;
specialinvoke v1.<jakarta.enterprise.event.ImmutableNotificationOptions: void <init>(java.util.concurrent.Executor,java.util.Map)>(v2, v3);
return v1;
}
}