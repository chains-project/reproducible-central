class jakarta.enterprise.event.ImmutableNotificationOptions extends java.lang.Object implements jakarta.enterprise.event.NotificationOptions
{
private final java.util.concurrent.Executor executor;
private final java.util.Map options;
private void <init>(java.util.concurrent.Executor, java.util.Map)
{
jakarta.enterprise.event.ImmutableNotificationOptions v0;
java.util.concurrent.Executor v1;
java.util.Map v2;
java.util.HashMap v3;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions;
v1 := @parameter0: java.util.concurrent.Executor;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<jakarta.enterprise.event.ImmutableNotificationOptions: java.util.concurrent.Executor executor> = v1;
v3 = new java.util.HashMap;
specialinvoke v3.<java.util.HashMap: void <init>(java.util.Map)>(v2);
v0.<jakarta.enterprise.event.ImmutableNotificationOptions: java.util.Map options> = v3;
return;
}
public java.util.concurrent.Executor getExecutor()
{
jakarta.enterprise.event.ImmutableNotificationOptions v0;
java.util.concurrent.Executor v1;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions;
v1 = v0.<jakarta.enterprise.event.ImmutableNotificationOptions: java.util.concurrent.Executor executor>;
return v1;
}
public java.lang.Object get(java.lang.String)
{
jakarta.enterprise.event.ImmutableNotificationOptions v0;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: jakarta.enterprise.event.ImmutableNotificationOptions;
v1 := @parameter0: java.lang.String;
v2 = v0.<jakarta.enterprise.event.ImmutableNotificationOptions: java.util.Map options>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
}