public final enum class jakarta.enterprise.event.Reception extends java.lang.Enum
{
public static final enum jakarta.enterprise.event.Reception IF_EXISTS;
public static final enum jakarta.enterprise.event.Reception ALWAYS;
private static final jakarta.enterprise.event.Reception[] $VALUES;
public static jakarta.enterprise.event.Reception[] values()
{
java.lang.Object v1;
jakarta.enterprise.event.Reception[] v0;
v0 = <jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static jakarta.enterprise.event.Reception valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljakarta/enterprise/event/Reception;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
jakarta.enterprise.event.Reception v0;
java.lang.String v1;
v0 := @this: jakarta.enterprise.event.Reception;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static jakarta.enterprise.event.Reception[] $values()
{
jakarta.enterprise.event.Reception v1, v2;
jakarta.enterprise.event.Reception[] v0;
v0 = newarray (jakarta.enterprise.event.Reception)[2];
v1 = <jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception IF_EXISTS>;
v0[0] = v1;
v2 = <jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception ALWAYS>;
v0[1] = v2;
return v0;
}
static void <clinit>()
{
jakarta.enterprise.event.Reception v0, v1;
jakarta.enterprise.event.Reception[] v2;
v0 = new jakarta.enterprise.event.Reception;
specialinvoke v0.<jakarta.enterprise.event.Reception: void <init>(java.lang.String,int)>("IF_EXISTS", 0);
<jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception IF_EXISTS> = v0;
v1 = new jakarta.enterprise.event.Reception;
specialinvoke v1.<jakarta.enterprise.event.Reception: void <init>(java.lang.String,int)>("ALWAYS", 1);
<jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception ALWAYS> = v1;
v2 = staticinvoke <jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception[] $values()>();
<jakarta.enterprise.event.Reception: jakarta.enterprise.event.Reception[] $VALUES> = v2;
return;
}
}