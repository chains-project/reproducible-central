public interface  jakarta.enterprise.inject.spi.AnnotatedParameter extends java.lang.Object implements jakarta.enterprise.inject.spi.Annotated
{
public abstract int getPosition();
public abstract jakarta.enterprise.inject.spi.AnnotatedCallable getDeclaringCallable();
public java.lang.reflect.Parameter getJavaParameter()
{
java.lang.IllegalStateException v4;
java.lang.reflect.Parameter[] v6;
java.lang.reflect.Member v2;
jakarta.enterprise.inject.spi.AnnotatedCallable v1;
jakarta.enterprise.inject.spi.AnnotatedParameter v0;
java.lang.reflect.Parameter v8;
int v7;
java.lang.String v5;
boolean v3;
v0 := @this: jakarta.enterprise.inject.spi.AnnotatedParameter;
v1 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.AnnotatedParameter: jakarta.enterprise.inject.spi.AnnotatedCallable getDeclaringCallable()>();
v2 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.AnnotatedCallable: java.lang.reflect.Member getJavaMember()>();
v3 = v2 instanceof java.lang.reflect.Executable;
if v3 != 0 goto label1;
v4 = new java.lang.IllegalStateException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.reflect.Member)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Parameter does not belong to an executable: \u0001");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = virtualinvoke v2.<java.lang.reflect.Executable: java.lang.reflect.Parameter[] getParameters()>();
v7 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.AnnotatedParameter: int getPosition()>();
v8 = v6[v7];
return v8;
}
public java.util.Set getAnnotations(java.lang.Class)
{
java.util.List v5;
jakarta.enterprise.inject.spi.AnnotatedParameter v0;
java.lang.reflect.Parameter v2;
java.lang.Class v1;
java.lang.'annotation'.Annotation[] v3;
java.util.LinkedHashSet v4;
v0 := @this: jakarta.enterprise.inject.spi.AnnotatedParameter;
v1 := @parameter0: java.lang.Class;
v2 = interfaceinvoke v0.<jakarta.enterprise.inject.spi.AnnotatedParameter: java.lang.reflect.Parameter getJavaParameter()>();
v3 = virtualinvoke v2.<java.lang.reflect.Parameter: java.lang.'annotation'.Annotation[] getAnnotationsByType(java.lang.Class)>(v1);
v4 = new java.util.LinkedHashSet;
v5 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v3);
specialinvoke v4.<java.util.LinkedHashSet: void <init>(java.util.Collection)>(v5);
return v4;
}
}