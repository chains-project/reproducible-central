public final enum class jakarta.enterprise.inject.spi.SessionBeanType extends java.lang.Enum
{
public static final enum jakarta.enterprise.inject.spi.SessionBeanType STATELESS;
public static final enum jakarta.enterprise.inject.spi.SessionBeanType STATEFUL;
public static final enum jakarta.enterprise.inject.spi.SessionBeanType SINGLETON;
private static final jakarta.enterprise.inject.spi.SessionBeanType[] $VALUES;
public static jakarta.enterprise.inject.spi.SessionBeanType[] values()
{
jakarta.enterprise.inject.spi.SessionBeanType[] v0;
java.lang.Object v1;
v0 = <jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static jakarta.enterprise.inject.spi.SessionBeanType valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljakarta/enterprise/inject/spi/SessionBeanType;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
jakarta.enterprise.inject.spi.SessionBeanType v0;
v0 := @this: jakarta.enterprise.inject.spi.SessionBeanType;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static jakarta.enterprise.inject.spi.SessionBeanType[] $values()
{
jakarta.enterprise.inject.spi.SessionBeanType[] v0;
jakarta.enterprise.inject.spi.SessionBeanType v1, v2, v3;
v0 = newarray (jakarta.enterprise.inject.spi.SessionBeanType)[3];
v1 = <jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType STATELESS>;
v0[0] = v1;
v2 = <jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType STATEFUL>;
v0[1] = v2;
v3 = <jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType SINGLETON>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
jakarta.enterprise.inject.spi.SessionBeanType[] v3;
jakarta.enterprise.inject.spi.SessionBeanType v0, v1, v2;
v0 = new jakarta.enterprise.inject.spi.SessionBeanType;
specialinvoke v0.<jakarta.enterprise.inject.spi.SessionBeanType: void <init>(java.lang.String,int)>("STATELESS", 0);
<jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType STATELESS> = v0;
v1 = new jakarta.enterprise.inject.spi.SessionBeanType;
specialinvoke v1.<jakarta.enterprise.inject.spi.SessionBeanType: void <init>(java.lang.String,int)>("STATEFUL", 1);
<jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType STATEFUL> = v1;
v2 = new jakarta.enterprise.inject.spi.SessionBeanType;
specialinvoke v2.<jakarta.enterprise.inject.spi.SessionBeanType: void <init>(java.lang.String,int)>("SINGLETON", 2);
<jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType SINGLETON> = v2;
v3 = staticinvoke <jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType[] $values()>();
<jakarta.enterprise.inject.spi.SessionBeanType: jakarta.enterprise.inject.spi.SessionBeanType[] $VALUES> = v3;
return;
}
}