public class jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance extends java.lang.Object
{
private final jakarta.enterprise.context.spi.CreationalContext ctx;
private final jakarta.enterprise.inject.spi.InjectionTarget injectionTarget;
private java.lang.Object instance;
private boolean disposed;
private void <init>(jakarta.enterprise.inject.spi.BeanManager, jakarta.enterprise.inject.spi.InjectionTarget)
{
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
jakarta.enterprise.inject.spi.InjectionTarget v2;
jakarta.enterprise.context.spi.CreationalContext v3;
jakarta.enterprise.inject.spi.BeanManager v1;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 := @parameter0: jakarta.enterprise.inject.spi.BeanManager;
v2 := @parameter1: jakarta.enterprise.inject.spi.InjectionTarget;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed> = 0;
v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget> = v2;
v3 = interfaceinvoke v1.<jakarta.enterprise.inject.spi.BeanManager: jakarta.enterprise.context.spi.CreationalContext createCreationalContext(jakarta.enterprise.context.spi.Contextual)>(null);
v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.context.spi.CreationalContext ctx> = v3;
return;
}
public java.lang.Object get()
{
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
java.lang.Object v1;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
return v1;
}
public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance produce()
{
java.lang.IllegalStateException v2, v4;
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
jakarta.enterprise.context.spi.CreationalContext v6;
jakarta.enterprise.inject.spi.InjectionTarget v5;
java.lang.Object v1, v7;
boolean v3;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
if v1 == null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call produce() on already constructed instance");
throw v2;
label1:
v3 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed>;
if v3 == 0 goto label2;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call produce() on an already disposed instance");
throw v4;
label2:
v5 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget>;
v6 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.context.spi.CreationalContext ctx>;
v7 = interfaceinvoke v5.<jakarta.enterprise.inject.spi.InjectionTarget: java.lang.Object produce(jakarta.enterprise.context.spi.CreationalContext)>(v6);
v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance> = v7;
return v0;
}
public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance inject()
{
java.lang.IllegalStateException v2, v4;
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
jakarta.enterprise.context.spi.CreationalContext v7;
jakarta.enterprise.inject.spi.InjectionTarget v5;
java.lang.Object v1, v6;
boolean v3;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call inject() before produce() was called");
throw v2;
label1:
v3 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed>;
if v3 == 0 goto label2;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call inject() on already disposed instance");
throw v4;
label2:
v5 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget>;
v6 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
v7 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.context.spi.CreationalContext ctx>;
interfaceinvoke v5.<jakarta.enterprise.inject.spi.InjectionTarget: void inject(java.lang.Object,jakarta.enterprise.context.spi.CreationalContext)>(v6, v7);
return v0;
}
public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance postConstruct()
{
java.lang.IllegalStateException v2, v4;
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
jakarta.enterprise.inject.spi.InjectionTarget v5;
java.lang.Object v1, v6;
boolean v3;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call postConstruct() before produce() was called");
throw v2;
label1:
v3 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed>;
if v3 == 0 goto label2;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call postConstruct() on already disposed instance");
throw v4;
label2:
v5 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget>;
v6 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
interfaceinvoke v5.<jakarta.enterprise.inject.spi.InjectionTarget: void postConstruct(java.lang.Object)>(v6);
return v0;
}
public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance preDestroy()
{
java.lang.IllegalStateException v2, v4;
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
jakarta.enterprise.inject.spi.InjectionTarget v5;
java.lang.Object v1, v6;
boolean v3;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call preDestroy() before produce() was called");
throw v2;
label1:
v3 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed>;
if v3 == 0 goto label2;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call preDestroy() on already disposed instance");
throw v4;
label2:
v5 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget>;
v6 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
interfaceinvoke v5.<jakarta.enterprise.inject.spi.InjectionTarget: void preDestroy(java.lang.Object)>(v6);
return v0;
}
public jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance dispose()
{
java.lang.IllegalStateException v2, v4;
jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance v0;
jakarta.enterprise.context.spi.CreationalContext v7;
jakarta.enterprise.inject.spi.InjectionTarget v5;
java.lang.Object v1, v6;
boolean v3;
v0 := @this: jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance;
v1 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call dispose() before produce() was called");
throw v2;
label1:
v3 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed>;
if v3 == 0 goto label2;
v4 = new java.lang.IllegalStateException;
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Trying to call dispose() on already disposed instance");
throw v4;
label2:
v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: boolean disposed> = 1;
v5 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.inject.spi.InjectionTarget injectionTarget>;
v6 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: java.lang.Object instance>;
interfaceinvoke v5.<jakarta.enterprise.inject.spi.InjectionTarget: void dispose(java.lang.Object)>(v6);
v7 = v0.<jakarta.enterprise.inject.spi.Unmanaged$UnmanagedInstance: jakarta.enterprise.context.spi.CreationalContext ctx>;
interfaceinvoke v7.<jakarta.enterprise.context.spi.CreationalContext: void release()>();
return v0;
}
}