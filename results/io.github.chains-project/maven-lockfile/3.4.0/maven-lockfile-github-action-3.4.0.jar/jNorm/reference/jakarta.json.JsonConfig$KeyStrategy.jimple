public final enum class jakarta.json.JsonConfig$KeyStrategy extends java.lang.Enum
{
public static final enum jakarta.json.JsonConfig$KeyStrategy FIRST;
public static final enum jakarta.json.JsonConfig$KeyStrategy LAST;
public static final enum jakarta.json.JsonConfig$KeyStrategy NONE;
private static final jakarta.json.JsonConfig$KeyStrategy[] $VALUES;
public static jakarta.json.JsonConfig$KeyStrategy[] values()
{
java.lang.Object v1;
jakarta.json.JsonConfig$KeyStrategy[] v0;
v0 = <jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static jakarta.json.JsonConfig$KeyStrategy valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Ljakarta/json/JsonConfig$KeyStrategy;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
jakarta.json.JsonConfig$KeyStrategy v0;
v0 := @this: jakarta.json.JsonConfig$KeyStrategy;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static jakarta.json.JsonConfig$KeyStrategy[] $values()
{
jakarta.json.JsonConfig$KeyStrategy v1, v2, v3;
jakarta.json.JsonConfig$KeyStrategy[] v0;
v0 = newarray (jakarta.json.JsonConfig$KeyStrategy)[3];
v1 = <jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy FIRST>;
v0[0] = v1;
v2 = <jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy LAST>;
v0[1] = v2;
v3 = <jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy NONE>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
jakarta.json.JsonConfig$KeyStrategy v0, v1, v2;
jakarta.json.JsonConfig$KeyStrategy[] v3;
v0 = new jakarta.json.JsonConfig$KeyStrategy;
specialinvoke v0.<jakarta.json.JsonConfig$KeyStrategy: void <init>(java.lang.String,int)>("FIRST", 0);
<jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy FIRST> = v0;
v1 = new jakarta.json.JsonConfig$KeyStrategy;
specialinvoke v1.<jakarta.json.JsonConfig$KeyStrategy: void <init>(java.lang.String,int)>("LAST", 1);
<jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy LAST> = v1;
v2 = new jakarta.json.JsonConfig$KeyStrategy;
specialinvoke v2.<jakarta.json.JsonConfig$KeyStrategy: void <init>(java.lang.String,int)>("NONE", 2);
<jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy NONE> = v2;
v3 = staticinvoke <jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy[] $values()>();
<jakarta.json.JsonConfig$KeyStrategy: jakarta.json.JsonConfig$KeyStrategy[] $VALUES> = v3;
return;
}
}