public final class jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571 extends java.lang.Object implements java.util.function.BiConsumer
{
public static java.util.function.BiConsumer bootstrap$()
{
jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571 v0;
v0 = new jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571;
specialinvoke v0.<jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571: void <init>()>();
return v0;
}
public void <init>()
{
jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571 v0;
v0 := @this: jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void accept(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571 v0;
v0 := @this: jakarta.json.stream.JsonCollectors$lambda_toJsonObject_0__571;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
staticinvoke <jakarta.json.stream.JsonCollectors: void lambda$toJsonObject$0(jakarta.json.JsonObjectBuilder,java.util.Map$Entry)>(v1, v2);
return;
}
}