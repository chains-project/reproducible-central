public interface  jakarta.json.stream.JsonParser extends java.lang.Object implements java.io.Closeable
{
public abstract boolean hasNext();
public abstract jakarta.json.stream.JsonParser$Event next();
public jakarta.json.stream.JsonParser$Event currentEvent()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public abstract java.lang.String getString();
public abstract boolean isIntegralNumber();
public abstract int getInt();
public abstract long getLong();
public abstract java.math.BigDecimal getBigDecimal();
public abstract jakarta.json.stream.JsonLocation getLocation();
public jakarta.json.JsonObject getObject()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public jakarta.json.JsonValue getValue()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public jakarta.json.JsonArray getArray()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.stream.Stream getArrayStream()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.stream.Stream getObjectStream()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public java.util.stream.Stream getValueStream()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void skipArray()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public void skipObject()
{
java.lang.UnsupportedOperationException v1;
jakarta.json.stream.JsonParser v0;
v0 := @this: jakarta.json.stream.JsonParser;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
public abstract void close();
}