public class org.apache.commons.io.EndianUtils extends java.lang.Object
{
public void <init>()
{
org.apache.commons.io.EndianUtils v0;
v0 := @this: org.apache.commons.io.EndianUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static short swapShort(short)
{
short v0;
int v1, v2, v3, v4, v5, v6, v7;
v0 := @parameter0: short;
v1 = v0 >> 0;
v2 = v1 & 255;
v3 = v2 << 8;
v4 = v0 >> 8;
v5 = v4 & 255;
v6 = v5 << 0;
v7 = v3 + v6;
return v7;
}
public static int swapInteger(int)
{
int v0, v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: int;
v1 = v0 >> 0;
v2 = v1 & 255;
v3 = v2 << 24;
v4 = v0 >> 8;
v5 = v4 & 255;
v6 = v5 << 16;
v7 = v3 + v6;
v8 = v0 >> 16;
v9 = v8 & 255;
v10 = v9 << 8;
v11 = v7 + v10;
v12 = v0 >> 24;
v13 = v12 & 255;
v14 = v13 << 0;
v15 = v11 + v14;
return v15;
}
public static long swapLong(long)
{
long v0, v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v2, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: long;
v1 = v0 >> 0;
v2 = v1 & 255L;
v3 = v2 << 56;
v4 = v0 >> 8;
v5 = v4 & 255L;
v6 = v5 << 48;
v7 = v3 + v6;
v8 = v0 >> 16;
v9 = v8 & 255L;
v10 = v9 << 40;
v11 = v7 + v10;
v12 = v0 >> 24;
v13 = v12 & 255L;
v14 = v13 << 32;
v15 = v11 + v14;
v16 = v0 >> 32;
v17 = v16 & 255L;
v18 = v17 << 24;
v19 = v15 + v18;
v20 = v0 >> 40;
v21 = v20 & 255L;
v22 = v21 << 16;
v23 = v19 + v22;
v24 = v0 >> 48;
v25 = v24 & 255L;
v26 = v25 << 8;
v27 = v23 + v26;
v28 = v0 >> 56;
v29 = v28 & 255L;
v30 = v29 << 0;
v31 = v27 + v30;
return v31;
}
public static float swapFloat(float)
{
int v1, v2;
float v0, v3;
v0 := @parameter0: float;
v1 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(v0);
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int swapInteger(int)>(v1);
v3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(v2);
return v3;
}
public static double swapDouble(double)
{
long v1, v2;
double v0, v3;
v0 := @parameter0: double;
v1 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(v0);
v2 = staticinvoke <org.apache.commons.io.EndianUtils: long swapLong(long)>(v1);
v3 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(v2);
return v3;
}
public static void writeSwappedShort(byte[], int, short)
{
byte[] v0;
short v2;
int v1, v3, v4, v5, v6, v7, v8;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: short;
v3 = v1 + 0;
v4 = v2 >> 0;
v5 = v4 & 255;
v0[v3] = v5;
v6 = v1 + 1;
v7 = v2 >> 8;
v8 = v7 & 255;
v0[v6] = v8;
return;
}
public static short readSwappedShort(byte[], int)
{
byte[] v0;
short v4, v8;
byte v3, v7;
int v1, v10, v2, v5, v6, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = v1 + 0;
v3 = v0[v2];
v4 = v3 & 255;
v5 = v4 << 0;
v6 = v1 + 1;
v7 = v0[v6];
v8 = v7 & 255;
v9 = v8 << 8;
v10 = v5 + v9;
return v10;
}
public static int readSwappedUnsignedShort(byte[], int)
{
byte[] v0;
short v4, v8;
byte v3, v7;
int v1, v10, v2, v5, v6, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = v1 + 0;
v3 = v0[v2];
v4 = v3 & 255;
v5 = v4 << 0;
v6 = v1 + 1;
v7 = v0[v6];
v8 = v7 & 255;
v9 = v8 << 8;
v10 = v5 + v9;
return v10;
}
public static void writeSwappedInteger(byte[], int, int)
{
byte[] v0;
int v1, v10, v11, v12, v13, v14, v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = v1 + 0;
v4 = v2 >> 0;
v5 = v4 & 255;
v0[v3] = v5;
v6 = v1 + 1;
v7 = v2 >> 8;
v8 = v7 & 255;
v0[v6] = v8;
v9 = v1 + 2;
v10 = v2 >> 16;
v11 = v10 & 255;
v0[v9] = v11;
v12 = v1 + 3;
v13 = v2 >> 24;
v14 = v13 & 255;
v0[v12] = v14;
return;
}
public static int readSwappedInteger(byte[], int)
{
byte[] v0;
short v13, v18, v4, v8;
byte v12, v17, v3, v7;
int v1, v10, v11, v14, v15, v16, v19, v2, v20, v5, v6, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = v1 + 0;
v3 = v0[v2];
v4 = v3 & 255;
v5 = v4 << 0;
v6 = v1 + 1;
v7 = v0[v6];
v8 = v7 & 255;
v9 = v8 << 8;
v10 = v5 + v9;
v11 = v1 + 2;
v12 = v0[v11];
v13 = v12 & 255;
v14 = v13 << 16;
v15 = v10 + v14;
v16 = v1 + 3;
v17 = v0[v16];
v18 = v17 & 255;
v19 = v18 << 24;
v20 = v15 + v19;
return v20;
}
public static long readSwappedUnsignedInteger(byte[], int)
{
byte[] v0;
long v19, v20, v21;
short v13, v18, v4, v8;
byte v12, v17, v3, v7;
int v1, v10, v11, v14, v15, v16, v2, v5, v6, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = v1 + 0;
v3 = v0[v2];
v4 = v3 & 255;
v5 = v4 << 0;
v6 = v1 + 1;
v7 = v0[v6];
v8 = v7 & 255;
v9 = v8 << 8;
v10 = v5 + v9;
v11 = v1 + 2;
v12 = v0[v11];
v13 = v12 & 255;
v14 = v13 << 16;
v15 = v10 + v14;
v16 = v1 + 3;
v17 = v0[v16];
v18 = v17 & 255;
v19 = v18 << 24;
v20 = 4294967295L & v15;
v21 = v19 + v20;
return v21;
}
public static void writeSwappedLong(byte[], int, long)
{
byte[] v0;
long v2;
int v1, v10, v11, v12, v13, v14, v15, v16, v17, v18, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: long;
v3 = v1 + 0;
v0[v3] = v11;
v4 = v1 + 1;
v0[v4] = v12;
v5 = v1 + 2;
v0[v5] = v13;
v6 = v1 + 3;
v0[v6] = v14;
v7 = v1 + 4;
v0[v7] = v15;
v8 = v1 + 5;
v0[v8] = v16;
v9 = v1 + 6;
v0[v9] = v17;
v10 = v1 + 7;
v0[v10] = v18;
return;
}
public static long readSwappedLong(byte[], int)
{
byte[] v0;
long v5, v6, v7;
int v1, v2, v3, v4;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(byte[],int)>(v0, v1);
v3 = v1 + 4;
v4 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(byte[],int)>(v0, v3);
v5 = v4 << 32;
v6 = 4294967295L & v2;
v7 = v5 + v6;
return v7;
}
public static void writeSwappedFloat(byte[], int, float)
{
byte[] v0;
int v1, v3;
float v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: float;
v3 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(v2);
staticinvoke <org.apache.commons.io.EndianUtils: void writeSwappedInteger(byte[],int,int)>(v0, v1, v3);
return;
}
public static float readSwappedFloat(byte[], int)
{
byte[] v0;
int v1, v2;
float v3;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(byte[],int)>(v0, v1);
v3 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(v2);
return v3;
}
public static void writeSwappedDouble(byte[], int, double)
{
byte[] v0;
int v1;
long v3;
double v2;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 := @parameter2: double;
v3 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(v2);
staticinvoke <org.apache.commons.io.EndianUtils: void writeSwappedLong(byte[],int,long)>(v0, v1, v3);
return;
}
public static double readSwappedDouble(byte[], int)
{
byte[] v0;
int v1;
long v2;
double v3;
v0 := @parameter0: byte[];
v1 := @parameter1: int;
v2 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(byte[],int)>(v0, v1);
v3 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(v2);
return v3;
}
public static void writeSwappedShort(java.io.OutputStream, short) throws java.io.IOException
{
java.io.OutputStream v0;
short v1;
byte v2, v3;
v0 := @parameter0: java.io.OutputStream;
v1 := @parameter1: short;
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v2);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v3);
return;
}
public static short readSwappedShort(java.io.InputStream) throws java.io.IOException
{
int v1, v2, v3, v4, v5, v6, v7;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v2 = v1 & 255;
v3 = v2 << 0;
v4 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v5 = v4 & 255;
v6 = v5 << 8;
v7 = v3 + v6;
return v7;
}
public static int readSwappedUnsignedShort(java.io.InputStream) throws java.io.IOException
{
int v1, v2, v3, v4, v5, v6, v7;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v3 = v1 & 255;
v4 = v3 << 0;
v5 = v2 & 255;
v6 = v5 << 8;
v7 = v4 + v6;
return v7;
}
public static void writeSwappedInteger(java.io.OutputStream, int) throws java.io.IOException
{
java.io.OutputStream v0;
byte v2, v3, v4, v5;
int v1;
v0 := @parameter0: java.io.OutputStream;
v1 := @parameter1: int;
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v2);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v3);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v4);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v5);
return;
}
public static int readSwappedInteger(java.io.InputStream) throws java.io.IOException
{
int v1, v10, v11, v12, v13, v14, v15, v2, v3, v4, v5, v6, v7, v8, v9;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v4 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v5 = v1 & 255;
v6 = v5 << 0;
v7 = v2 & 255;
v8 = v7 << 8;
v9 = v6 + v8;
v10 = v3 & 255;
v11 = v10 << 16;
v12 = v9 + v11;
v13 = v4 & 255;
v14 = v13 << 24;
v15 = v12 + v14;
return v15;
}
public static long readSwappedUnsignedInteger(java.io.InputStream) throws java.io.IOException
{
long v14, v15, v16;
int v1, v10, v11, v12, v13, v2, v3, v4, v5, v6, v7, v8, v9;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v2 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v4 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v5 = v1 & 255;
v6 = v5 << 0;
v7 = v2 & 255;
v8 = v7 << 8;
v9 = v6 + v8;
v10 = v3 & 255;
v11 = v10 << 16;
v12 = v9 + v11;
v13 = v4 & 255;
v14 = v13 << 24;
v15 = 4294967295L & v12;
v16 = v14 + v15;
return v16;
}
public static void writeSwappedLong(java.io.OutputStream, long) throws java.io.IOException
{
java.io.OutputStream v0;
long v1;
byte v2, v3, v4, v5, v6, v7, v8, v9;
v0 := @parameter0: java.io.OutputStream;
v1 := @parameter1: long;
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v2);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v3);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v4);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v5);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v6);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v7);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v8);
virtualinvoke v0.<java.io.OutputStream: void write(int)>(v9);
return;
}
public static long readSwappedLong(java.io.InputStream) throws java.io.IOException
{
byte[] v1;
int v2, v3;
long v4;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = newarray (byte)[8];
v2 = 0;
label1:
if v2 >= 8 goto label2;
v3 = staticinvoke <org.apache.commons.io.EndianUtils: int read(java.io.InputStream)>(v0);
v1[v2] = v3;
v2 = v2 + 1;
goto label1;
label2:
v4 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(byte[],int)>(v1, 0);
return v4;
}
public static void writeSwappedFloat(java.io.OutputStream, float) throws java.io.IOException
{
int v2;
java.io.OutputStream v0;
float v1;
v0 := @parameter0: java.io.OutputStream;
v1 := @parameter1: float;
v2 = staticinvoke <java.lang.Float: int floatToIntBits(float)>(v1);
staticinvoke <org.apache.commons.io.EndianUtils: void writeSwappedInteger(java.io.OutputStream,int)>(v0, v2);
return;
}
public static float readSwappedFloat(java.io.InputStream) throws java.io.IOException
{
int v1;
float v2;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.EndianUtils: int readSwappedInteger(java.io.InputStream)>(v0);
v2 = staticinvoke <java.lang.Float: float intBitsToFloat(int)>(v1);
return v2;
}
public static void writeSwappedDouble(java.io.OutputStream, double) throws java.io.IOException
{
java.io.OutputStream v0;
long v2;
double v1;
v0 := @parameter0: java.io.OutputStream;
v1 := @parameter1: double;
v2 = staticinvoke <java.lang.Double: long doubleToLongBits(double)>(v1);
staticinvoke <org.apache.commons.io.EndianUtils: void writeSwappedLong(java.io.OutputStream,long)>(v0, v2);
return;
}
public static double readSwappedDouble(java.io.InputStream) throws java.io.IOException
{
long v1;
double v2;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = staticinvoke <org.apache.commons.io.EndianUtils: long readSwappedLong(java.io.InputStream)>(v0);
v2 = staticinvoke <java.lang.Double: double longBitsToDouble(long)>(v1);
return v2;
}
private static int read(java.io.InputStream) throws java.io.IOException
{
int v1, v2;
java.io.EOFException v3;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
v1 = virtualinvoke v0.<java.io.InputStream: int read()>();
v2 = (int) -1;
if v2 != v1 goto label1;
v3 = new java.io.EOFException;
specialinvoke v3.<java.io.EOFException: void <init>(java.lang.String)>("Unexpected EOF reached");
throw v3;
label1:
return v1;
}
}