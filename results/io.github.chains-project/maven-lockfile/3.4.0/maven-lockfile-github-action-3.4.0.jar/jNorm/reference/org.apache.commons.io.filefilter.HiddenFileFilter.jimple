public class org.apache.commons.io.filefilter.HiddenFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
public static final org.apache.commons.io.filefilter.IOFileFilter HIDDEN;
private static final long serialVersionUID;
public static final org.apache.commons.io.filefilter.IOFileFilter VISIBLE;
protected void <init>()
{
org.apache.commons.io.filefilter.HiddenFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.HiddenFileFilter;
specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();
return;
}
public boolean accept(java.io.File)
{
org.apache.commons.io.filefilter.HiddenFileFilter v0;
java.io.File v1;
boolean v2;
v0 := @this: org.apache.commons.io.filefilter.HiddenFileFilter;
v1 := @parameter0: java.io.File;
v2 = virtualinvoke v1.<java.io.File: boolean isHidden()>();
return v2;
}
public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)
{
org.apache.commons.io.filefilter.HiddenFileFilter v0;
java.nio.file.FileVisitResult v4, v6;
java.io.IOException v5;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.Path v1;
boolean v3;
v0 := @this: org.apache.commons.io.filefilter.HiddenFileFilter;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
label1:
v3 = staticinvoke <java.nio.file.Files: boolean isHidden(java.nio.file.Path)>(v1);
v4 = staticinvoke <org.apache.commons.io.filefilter.HiddenFileFilter: java.nio.file.FileVisitResult toFileVisitResult(boolean,java.nio.file.Path)>(v3, v1);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = virtualinvoke v0.<org.apache.commons.io.filefilter.HiddenFileFilter: java.nio.file.FileVisitResult handle(java.lang.Throwable)>(v5);
return v6;
catch java.io.IOException from label1 to label2 with label3;
}
static void <clinit>()
{
org.apache.commons.io.filefilter.HiddenFileFilter v0;
org.apache.commons.io.filefilter.IOFileFilter v1, v2;
v0 = new org.apache.commons.io.filefilter.HiddenFileFilter;
specialinvoke v0.<org.apache.commons.io.filefilter.HiddenFileFilter: void <init>()>();
<org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter HIDDEN> = v0;
v1 = <org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter HIDDEN>;
v2 = interfaceinvoke v1.<org.apache.commons.io.filefilter.IOFileFilter: org.apache.commons.io.filefilter.IOFileFilter negate()>();
<org.apache.commons.io.filefilter.HiddenFileFilter: org.apache.commons.io.filefilter.IOFileFilter VISIBLE> = v2;
return;
}
}