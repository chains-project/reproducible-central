public class org.apache.commons.io.filefilter.PrefixFileFilter extends org.apache.commons.io.filefilter.AbstractFileFilter implements java.io.Serializable
{
private static final long serialVersionUID;
private final java.lang.String[] prefixes;
private final org.apache.commons.io.IOCase caseSensitivity;
public void <init>(java.util.List)
{
java.util.List v1;
org.apache.commons.io.IOCase v2;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.util.List;
v2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
specialinvoke v0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.util.List,org.apache.commons.io.IOCase)>(v1, v2);
return;
}
public void <init>(java.util.List, org.apache.commons.io.IOCase)
{
java.util.List v1;
java.lang.Object[] v5;
org.apache.commons.io.IOCase v2, v6;
java.lang.String[] v4;
java.lang.IllegalArgumentException v3;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.util.List;
v2 := @parameter1: org.apache.commons.io.IOCase;
specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The list of prefixes must not be null");
throw v3;
label1:
v4 = <org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] EMPTY_STRING_ARRAY>;
v5 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v4);
v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes> = v5;
if v2 != null goto label2;
v6 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
goto label3;
label2:
v6 = v2;
label3:
v0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = v6;
return;
}
public void <init>(java.lang.String)
{
java.lang.String v1;
org.apache.commons.io.IOCase v2;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.lang.String;
v2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
specialinvoke v0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String,org.apache.commons.io.IOCase)>(v1, v2);
return;
}
public transient void <init>(java.lang.String[])
{
java.lang.String[] v1;
org.apache.commons.io.IOCase v2;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.lang.String[];
v2 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
specialinvoke v0.<org.apache.commons.io.filefilter.PrefixFileFilter: void <init>(java.lang.String[],org.apache.commons.io.IOCase)>(v1, v2);
return;
}
public void <init>(java.lang.String, org.apache.commons.io.IOCase)
{
org.apache.commons.io.IOCase v2, v5;
java.lang.String[] v4;
java.lang.String v1;
java.lang.IllegalArgumentException v3;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.apache.commons.io.IOCase;
specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The prefix must not be null");
throw v3;
label1:
v4 = newarray (java.lang.String)[1];
v4[0] = v1;
v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes> = v4;
if v2 != null goto label2;
v5 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
goto label3;
label2:
v5 = v2;
label3:
v0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = v5;
return;
}
public void <init>(java.lang.String[], org.apache.commons.io.IOCase)
{
org.apache.commons.io.IOCase v2, v8;
java.lang.String[] v1, v5, v6;
java.lang.IllegalArgumentException v3;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
int v4, v7;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.lang.String[];
v2 := @parameter1: org.apache.commons.io.IOCase;
specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: void <init>()>();
if v1 != null goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The array of prefixes must not be null");
throw v3;
label1:
v4 = lengthof v1;
v5 = newarray (java.lang.String)[v4];
v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes> = v5;
v6 = v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;
v7 = lengthof v1;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v1, 0, v6, 0, v7);
if v2 != null goto label2;
v8 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SENSITIVE>;
goto label3;
label2:
v8 = v2;
label3:
v0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity> = v8;
return;
}
public boolean accept(java.io.File)
{
java.lang.String v2;
java.io.File v1;
boolean v3;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.io.File;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = virtualinvoke v1.<java.io.File: java.lang.String getName()>();
label2:
v3 = specialinvoke v0.<org.apache.commons.io.filefilter.PrefixFileFilter: boolean accept(java.lang.String)>(v2);
return v3;
}
public boolean accept(java.io.File, java.lang.String)
{
java.lang.String v2;
java.io.File v1;
boolean v3;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.lang.String;
v3 = specialinvoke v0.<org.apache.commons.io.filefilter.PrefixFileFilter: boolean accept(java.lang.String)>(v2);
return v3;
}
public java.nio.file.FileVisitResult accept(java.nio.file.Path, java.nio.file.attribute.BasicFileAttributes)
{
java.nio.file.FileVisitResult v6;
java.nio.file.attribute.BasicFileAttributes v2;
java.nio.file.Path v1, v3;
java.io.File v4;
boolean v5;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.nio.file.Path;
v2 := @parameter1: java.nio.file.attribute.BasicFileAttributes;
v3 = interfaceinvoke v1.<java.nio.file.Path: java.nio.file.Path getFileName()>();
if v3 != null goto label1;
v4 = null;
goto label2;
label1:
v4 = interfaceinvoke v3.<java.nio.file.Path: java.io.File toFile()>();
label2:
v5 = virtualinvoke v0.<org.apache.commons.io.filefilter.PrefixFileFilter: boolean accept(java.io.File)>(v4);
v6 = staticinvoke <org.apache.commons.io.filefilter.PrefixFileFilter: java.nio.file.FileVisitResult toFileVisitResult(boolean,java.nio.file.Path)>(v5, v1);
return v6;
}
private boolean accept(java.lang.String)
{
org.apache.commons.io.IOCase v6;
java.lang.String[] v2;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
int v3, v4;
java.lang.String v1, v5;
boolean v7;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v2[v4];
v6 = v0.<org.apache.commons.io.filefilter.PrefixFileFilter: org.apache.commons.io.IOCase caseSensitivity>;
v7 = virtualinvoke v6.<org.apache.commons.io.IOCase: boolean checkStartsWith(java.lang.String,java.lang.String)>(v1, v5);
if v7 == 0 goto label2;
return 1;
label2:
v4 = v4 + 1;
goto label1;
label3:
return 0;
}
public java.lang.String toString()
{
java.lang.String[] v3, v5, v7;
org.apache.commons.io.filefilter.PrefixFileFilter v0;
int v4, v6;
java.lang.StringBuilder v1;
java.lang.String v2, v8, v9;
v0 := @this: org.apache.commons.io.filefilter.PrefixFileFilter;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = specialinvoke v0.<org.apache.commons.io.filefilter.AbstractFileFilter: java.lang.String toString()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v2);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("(");
v3 = v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;
if v3 == null goto label3;
v4 = 0;
label1:
v5 = v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;
v6 = lengthof v5;
if v4 >= v6 goto label3;
if v4 <= 0 goto label2;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(",");
label2:
v7 = v0.<org.apache.commons.io.filefilter.PrefixFileFilter: java.lang.String[] prefixes>;
v8 = v7[v4];
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
v4 = v4 + 1;
goto label1;
label3:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(")");
v9 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v9;
}
}