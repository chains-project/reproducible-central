public class org.apache.commons.io.input.SequenceReader extends java.io.Reader
{
private java.io.Reader reader;
private java.util.Iterator readers;
public void <init>(java.lang.Iterable)
{
java.util.Iterator v3;
java.lang.Object v2;
java.io.Reader v4;
org.apache.commons.io.input.SequenceReader v0;
java.lang.Iterable v1;
v0 := @this: org.apache.commons.io.input.SequenceReader;
v1 := @parameter0: java.lang.Iterable;
specialinvoke v0.<java.io.Reader: void <init>()>();
v2 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "readers");
v3 = interfaceinvoke v2.<java.lang.Iterable: java.util.Iterator iterator()>();
v0.<org.apache.commons.io.input.SequenceReader: java.util.Iterator readers> = v3;
v4 = specialinvoke v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader nextReader()>();
v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader> = v4;
return;
}
public transient void <init>(java.io.Reader[])
{
java.io.Reader[] v1;
java.util.List v2;
org.apache.commons.io.input.SequenceReader v0;
v0 := @this: org.apache.commons.io.input.SequenceReader;
v1 := @parameter0: java.io.Reader[];
v2 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
specialinvoke v0.<org.apache.commons.io.input.SequenceReader: void <init>(java.lang.Iterable)>(v2);
return;
}
public void close() throws java.io.IOException
{
org.apache.commons.io.input.SequenceReader v0;
v0 := @this: org.apache.commons.io.input.SequenceReader;
v0.<org.apache.commons.io.input.SequenceReader: java.util.Iterator readers> = null;
v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader> = null;
return;
}
private java.io.Reader nextReader()
{
java.util.Iterator v1, v3;
java.lang.Object v4;
org.apache.commons.io.input.SequenceReader v0;
boolean v2;
v0 := @this: org.apache.commons.io.input.SequenceReader;
v1 = v0.<org.apache.commons.io.input.SequenceReader: java.util.Iterator readers>;
v2 = interfaceinvoke v1.<java.util.Iterator: boolean hasNext()>();
if v2 == 0 goto label1;
v3 = v0.<org.apache.commons.io.input.SequenceReader: java.util.Iterator readers>;
v4 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
goto label2;
label1:
v4 = null;
label2:
return v4;
}
public int read() throws java.io.IOException
{
int v1, v2, v5;
java.io.Reader v3, v4, v6;
org.apache.commons.io.input.SequenceReader v0;
v0 := @this: org.apache.commons.io.input.SequenceReader;
v1 = (int) -1;
v2 = v1;
label1:
v3 = v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader>;
if v3 == null goto label2;
v4 = v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader>;
v2 = virtualinvoke v4.<java.io.Reader: int read()>();
v5 = (int) -1;
if v2 != v5 goto label2;
v6 = specialinvoke v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader nextReader()>();
v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader> = v6;
goto label1;
label2:
return v2;
}
public int read(char[], int, int) throws java.io.IOException
{
java.lang.IndexOutOfBoundsException v6;
int v12, v13, v15, v2, v3, v4, v5, v7, v9;
java.lang.String v8;
java.io.Reader v10, v11, v14;
char[] v1;
org.apache.commons.io.input.SequenceReader v0;
v0 := @this: org.apache.commons.io.input.SequenceReader;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "cbuf");
if v3 < 0 goto label1;
if v2 < 0 goto label1;
v4 = v2 + v3;
v5 = lengthof v1;
if v4 <= v5 goto label2;
label1:
v6 = new java.lang.IndexOutOfBoundsException;
v7 = lengthof v1;
v8 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (int,int,int)>(v7, v2, v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Array Size=\u0001, offset=\u0001, length=\u0001");
specialinvoke v6.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v8);
throw v6;
label2:
v9 = 0;
label3:
v10 = v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader>;
if v10 == null goto label5;
v11 = v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader>;
v12 = virtualinvoke v11.<java.io.Reader: int read(char[],int,int)>(v1, v2, v3);
v13 = (int) -1;
if v12 != v13 goto label4;
v14 = specialinvoke v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader nextReader()>();
v0.<org.apache.commons.io.input.SequenceReader: java.io.Reader reader> = v14;
goto label3;
label4:
v9 = v9 + v12;
v2 = v2 + v12;
v3 = v3 - v12;
if v3 > 0 goto label3;
label5:
if v9 <= 0 goto label6;
return v9;
label6:
v15 = (int) -1;
return v15;
}
}