public class org.apache.commons.io.input.Tailer extends java.lang.Object implements java.lang.Runnable
{
private static final int DEFAULT_DELAY_MILLIS;
private static final java.lang.String RAF_MODE;
private static final java.nio.charset.Charset DEFAULT_CHARSET;
private final byte[] inbuf;
private final java.io.File file;
private final java.nio.charset.Charset charset;
private final long delayMillis;
private final boolean end;
private final org.apache.commons.io.input.TailerListener listener;
private final boolean reOpen;
private volatile boolean run;
public void <init>(java.io.File, org.apache.commons.io.input.TailerListener)
{
org.apache.commons.io.input.TailerListener v2;
org.apache.commons.io.input.Tailer v0;
java.io.File v1;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.input.TailerListener;
specialinvoke v0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long)>(v1, v2, 1000L);
return;
}
public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long)
{
org.apache.commons.io.input.Tailer v0;
org.apache.commons.io.input.TailerListener v2;
long v3;
java.io.File v1;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.input.TailerListener;
v3 := @parameter2: long;
specialinvoke v0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(v1, v2, v3, 0);
return;
}
public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean)
{
org.apache.commons.io.input.Tailer v0;
org.apache.commons.io.input.TailerListener v2;
long v3;
java.io.File v1;
boolean v4;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.input.TailerListener;
v3 := @parameter2: long;
v4 := @parameter3: boolean;
specialinvoke v0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)>(v1, v2, v3, v4, 8192);
return;
}
public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean)
{
org.apache.commons.io.input.Tailer v0;
org.apache.commons.io.input.TailerListener v2;
long v3;
java.io.File v1;
boolean v4, v5;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.input.TailerListener;
v3 := @parameter2: long;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
specialinvoke v0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v1, v2, v3, v4, v5, 8192);
return;
}
public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, int)
{
org.apache.commons.io.input.Tailer v0;
int v5;
org.apache.commons.io.input.TailerListener v2;
long v3;
java.io.File v1;
boolean v4;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.input.TailerListener;
v3 := @parameter2: long;
v4 := @parameter3: boolean;
v5 := @parameter4: int;
specialinvoke v0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v1, v2, v3, v4, 0, v5);
return;
}
public void <init>(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean, int)
{
org.apache.commons.io.input.Tailer v0;
long v3;
java.io.File v1;
java.nio.charset.Charset v7;
int v6;
org.apache.commons.io.input.TailerListener v2;
boolean v4, v5;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.input.TailerListener;
v3 := @parameter2: long;
v4 := @parameter3: boolean;
v5 := @parameter4: boolean;
v6 := @parameter5: int;
v7 = <org.apache.commons.io.input.Tailer: java.nio.charset.Charset DEFAULT_CHARSET>;
specialinvoke v0.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v1, v7, v2, v3, v4, v5, v6);
return;
}
public void <init>(java.io.File, java.nio.charset.Charset, org.apache.commons.io.input.TailerListener, long, boolean, boolean, int)
{
byte[] v8;
org.apache.commons.io.input.Tailer v0;
long v4;
java.io.File v1;
java.nio.charset.Charset v2;
int v7;
org.apache.commons.io.input.TailerListener v3;
boolean v5, v6;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.nio.charset.Charset;
v3 := @parameter2: org.apache.commons.io.input.TailerListener;
v4 := @parameter3: long;
v5 := @parameter4: boolean;
v6 := @parameter5: boolean;
v7 := @parameter6: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.io.input.Tailer: boolean run> = 1;
v0.<org.apache.commons.io.input.Tailer: java.io.File file> = v1;
v0.<org.apache.commons.io.input.Tailer: long delayMillis> = v4;
v0.<org.apache.commons.io.input.Tailer: boolean end> = v5;
v8 = staticinvoke <org.apache.commons.io.IOUtils: byte[] byteArray(int)>(v7);
v0.<org.apache.commons.io.input.Tailer: byte[] inbuf> = v8;
v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener> = v3;
interfaceinvoke v3.<org.apache.commons.io.input.TailerListener: void init(org.apache.commons.io.input.Tailer)>(v0);
v0.<org.apache.commons.io.input.Tailer: boolean reOpen> = v6;
v0.<org.apache.commons.io.input.Tailer: java.nio.charset.Charset charset> = v2;
return;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, int)
{
org.apache.commons.io.input.Tailer v5;
int v4;
org.apache.commons.io.input.TailerListener v1;
long v2;
java.io.File v0;
boolean v3;
v0 := @parameter0: java.io.File;
v1 := @parameter1: org.apache.commons.io.input.TailerListener;
v2 := @parameter2: long;
v3 := @parameter3: boolean;
v4 := @parameter4: int;
v5 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v0, v1, v2, v3, 0, v4);
return v5;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean, int)
{
org.apache.commons.io.input.Tailer v7;
long v2;
java.io.File v0;
java.nio.charset.Charset v6;
int v5;
org.apache.commons.io.input.TailerListener v1;
boolean v3, v4;
v0 := @parameter0: java.io.File;
v1 := @parameter1: org.apache.commons.io.input.TailerListener;
v2 := @parameter2: long;
v3 := @parameter3: boolean;
v4 := @parameter4: boolean;
v5 := @parameter5: int;
v6 = <org.apache.commons.io.input.Tailer: java.nio.charset.Charset DEFAULT_CHARSET>;
v7 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v0, v6, v1, v2, v3, v4, v5);
return v7;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, java.nio.charset.Charset, org.apache.commons.io.input.TailerListener, long, boolean, boolean, int)
{
org.apache.commons.io.input.Tailer v7;
long v3;
java.io.File v0;
java.nio.charset.Charset v1;
java.lang.Thread v8;
int v6;
org.apache.commons.io.input.TailerListener v2;
boolean v4, v5;
v0 := @parameter0: java.io.File;
v1 := @parameter1: java.nio.charset.Charset;
v2 := @parameter2: org.apache.commons.io.input.TailerListener;
v3 := @parameter3: long;
v4 := @parameter4: boolean;
v5 := @parameter5: boolean;
v6 := @parameter6: int;
v7 = new org.apache.commons.io.input.Tailer;
specialinvoke v7.<org.apache.commons.io.input.Tailer: void <init>(java.io.File,java.nio.charset.Charset,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v0, v1, v2, v3, v4, v5, v6);
v8 = new java.lang.Thread;
specialinvoke v8.<java.lang.Thread: void <init>(java.lang.Runnable)>(v7);
virtualinvoke v8.<java.lang.Thread: void setDaemon(boolean)>(1);
virtualinvoke v8.<java.lang.Thread: void start()>();
return v7;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean)
{
org.apache.commons.io.input.Tailer v4;
org.apache.commons.io.input.TailerListener v1;
long v2;
java.io.File v0;
boolean v3;
v0 := @parameter0: java.io.File;
v1 := @parameter1: org.apache.commons.io.input.TailerListener;
v2 := @parameter2: long;
v3 := @parameter3: boolean;
v4 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,int)>(v0, v1, v2, v3, 8192);
return v4;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long, boolean, boolean)
{
org.apache.commons.io.input.Tailer v5;
org.apache.commons.io.input.TailerListener v1;
long v2;
java.io.File v0;
boolean v3, v4;
v0 := @parameter0: java.io.File;
v1 := @parameter1: org.apache.commons.io.input.TailerListener;
v2 := @parameter2: long;
v3 := @parameter3: boolean;
v4 := @parameter4: boolean;
v5 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean,boolean,int)>(v0, v1, v2, v3, v4, 8192);
return v5;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener, long)
{
org.apache.commons.io.input.Tailer v3;
org.apache.commons.io.input.TailerListener v1;
long v2;
java.io.File v0;
v0 := @parameter0: java.io.File;
v1 := @parameter1: org.apache.commons.io.input.TailerListener;
v2 := @parameter2: long;
v3 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(v0, v1, v2, 0);
return v3;
}
public static org.apache.commons.io.input.Tailer create(java.io.File, org.apache.commons.io.input.TailerListener)
{
org.apache.commons.io.input.TailerListener v1;
org.apache.commons.io.input.Tailer v2;
java.io.File v0;
v0 := @parameter0: java.io.File;
v1 := @parameter1: org.apache.commons.io.input.TailerListener;
v2 = staticinvoke <org.apache.commons.io.input.Tailer: org.apache.commons.io.input.Tailer create(java.io.File,org.apache.commons.io.input.TailerListener,long,boolean)>(v0, v1, 1000L, 0);
return v2;
}
public java.io.File getFile()
{
org.apache.commons.io.input.Tailer v0;
java.io.File v1;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
return v1;
}
protected boolean getRun()
{
org.apache.commons.io.input.Tailer v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 = v0.<org.apache.commons.io.input.Tailer: boolean run>;
return v1;
}
public long getDelay()
{
long v1;
org.apache.commons.io.input.Tailer v0;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 = v0.<org.apache.commons.io.input.Tailer: long delayMillis>;
return v1;
}
public void run()
{
java.io.RandomAccessFile v1, v20, v21, v36, v5;
byte v18, v29;
java.lang.Thread v41;
boolean v13, v15, v32, v34, v35, v4, v9;
java.io.FileNotFoundException v26, v7;
java.lang.Exception v45;
org.apache.commons.io.input.TailerListener v19, v24, v27, v39, v42, v44, v46, v48, v51, v8;
java.lang.Throwable v25, v49;
org.apache.commons.io.input.Tailer v0;
long v11, v17, v2, v28, v3, v33;
java.io.IOException v23, v38, v43, v47, v50;
java.io.File v10, v12, v14, v16, v22, v30, v31, v37, v6;
java.lang.InterruptedException v40;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 = null;
label01:
v2 = 0L;
v3 = 0L;
label02:
v4 = virtualinvoke v0.<org.apache.commons.io.input.Tailer: boolean getRun()>();
if v4 == 0 goto label09;
if v1 != null goto label09;
label03:
v5 = new java.io.RandomAccessFile;
v6 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
specialinvoke v5.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(v6, "r");
v1 = v5;
label04:
goto label06;
label05:
v7 := @caughtexception;
v8 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v8.<org.apache.commons.io.input.TailerListener: void fileNotFound()>();
label06:
v9 = v0.<org.apache.commons.io.input.Tailer: boolean end>;
if v9 == 0 goto label07;
v10 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
v11 = virtualinvoke v10.<java.io.File: long length()>();
goto label08;
label07:
v11 = 0L;
label08:
v3 = v11;
v12 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
v2 = staticinvoke <org.apache.commons.io.FileUtils: long lastModified(java.io.File)>(v12);
virtualinvoke v1.<java.io.RandomAccessFile: void seek(long)>(v11);
goto label02;
label09:
v13 = virtualinvoke v0.<org.apache.commons.io.input.Tailer: boolean getRun()>();
if v13 == 0 goto label23;
v14 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
v15 = staticinvoke <org.apache.commons.io.FileUtils: boolean isFileNewer(java.io.File,long)>(v14, v2);
v16 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
v17 = virtualinvoke v16.<java.io.File: long length()>();
v18 = v17 cmp v3;
if v18 >= 0 goto label19;
v19 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v19.<org.apache.commons.io.input.TailerListener: void fileRotated()>();
label10:
v20 = v1;
label11:
v21 = new java.io.RandomAccessFile;
v22 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
specialinvoke v21.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(v22, "r");
v1 = v21;
label12:
specialinvoke v0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(v20);
label13:
goto label15;
label14:
v23 := @caughtexception;
v24 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v24.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v23);
label15:
v3 = 0L;
label16:
if v20 == null goto label09;
virtualinvoke v20.<java.io.RandomAccessFile: void close()>();
goto label09;
label17:
v25 := @caughtexception;
throw v25;
label18:
v26 := @caughtexception;
v27 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v27.<org.apache.commons.io.input.TailerListener: void fileNotFound()>();
v28 = v0.<org.apache.commons.io.input.Tailer: long delayMillis>;
staticinvoke <java.lang.Thread: void sleep(long)>(v28);
goto label09;
label19:
v29 = v17 cmp v3;
if v29 <= 0 goto label20;
v3 = specialinvoke v0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(v1);
v30 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
v2 = staticinvoke <org.apache.commons.io.FileUtils: long lastModified(java.io.File)>(v30);
goto label21;
label20:
if v15 == 0 goto label21;
virtualinvoke v1.<java.io.RandomAccessFile: void seek(long)>(0L);
v3 = specialinvoke v0.<org.apache.commons.io.input.Tailer: long readLines(java.io.RandomAccessFile)>(v1);
v31 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
v2 = staticinvoke <org.apache.commons.io.FileUtils: long lastModified(java.io.File)>(v31);
label21:
v32 = v0.<org.apache.commons.io.input.Tailer: boolean reOpen>;
if v32 == 0 goto label22;
if v1 == null goto label22;
virtualinvoke v1.<java.io.RandomAccessFile: void close()>();
label22:
v33 = v0.<org.apache.commons.io.input.Tailer: long delayMillis>;
staticinvoke <java.lang.Thread: void sleep(long)>(v33);
v34 = virtualinvoke v0.<org.apache.commons.io.input.Tailer: boolean getRun()>();
if v34 == 0 goto label09;
v35 = v0.<org.apache.commons.io.input.Tailer: boolean reOpen>;
if v35 == 0 goto label09;
v36 = new java.io.RandomAccessFile;
v37 = v0.<org.apache.commons.io.input.Tailer: java.io.File file>;
specialinvoke v36.<java.io.RandomAccessFile: void <init>(java.io.File,java.lang.String)>(v37, "r");
v1 = v36;
virtualinvoke v36.<java.io.RandomAccessFile: void seek(long)>(v3);
goto label09;
label23:
if v1 == null goto label26;
virtualinvoke v1.<java.io.RandomAccessFile: void close()>();
label24:
goto label26;
label25:
v38 := @caughtexception;
v39 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v39.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v38);
label26:
virtualinvoke v0.<org.apache.commons.io.input.Tailer: void stop()>();
goto label42;
label27:
v40 := @caughtexception;
v41 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v41.<java.lang.Thread: void interrupt()>();
v42 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v42.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v40);
label28:
if v1 == null goto label31;
virtualinvoke v1.<java.io.RandomAccessFile: void close()>();
label29:
goto label31;
label30:
v43 := @caughtexception;
v44 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v44.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v43);
label31:
virtualinvoke v0.<org.apache.commons.io.input.Tailer: void stop()>();
goto label42;
label32:
v45 := @caughtexception;
v46 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v46.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v45);
label33:
if v1 == null goto label36;
virtualinvoke v1.<java.io.RandomAccessFile: void close()>();
label34:
goto label36;
label35:
v47 := @caughtexception;
v48 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v48.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v47);
label36:
virtualinvoke v0.<org.apache.commons.io.input.Tailer: void stop()>();
goto label42;
label37:
v49 := @caughtexception;
label38:
if v1 == null goto label41;
virtualinvoke v1.<java.io.RandomAccessFile: void close()>();
label39:
goto label41;
label40:
v50 := @caughtexception;
v51 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
interfaceinvoke v51.<org.apache.commons.io.input.TailerListener: void handle(java.lang.Exception)>(v50);
label41:
virtualinvoke v0.<org.apache.commons.io.input.Tailer: void stop()>();
throw v49;
label42:
return;
catch java.io.FileNotFoundException from label03 to label04 with label05;
catch java.io.IOException from label12 to label13 with label14;
catch java.lang.Throwable from label11 to label16 with label17;
catch java.io.FileNotFoundException from label10 to label18 with label18;
catch java.io.IOException from label23 to label24 with label25;
catch java.lang.InterruptedException from label01 to label23 with label27;
catch java.io.IOException from label28 to label29 with label30;
catch java.lang.Exception from label01 to label23 with label32;
catch java.io.IOException from label33 to label34 with label35;
catch java.lang.Throwable from label01 to label23 with label37;
catch java.lang.Throwable from label27 to label28 with label37;
catch java.lang.Throwable from label32 to label33 with label37;
catch java.io.IOException from label38 to label39 with label40;
}
public void stop()
{
org.apache.commons.io.input.Tailer v0;
v0 := @this: org.apache.commons.io.input.Tailer;
v0.<org.apache.commons.io.input.Tailer: boolean run> = 0;
return;
}
private long readLines(java.io.RandomAccessFile) throws java.io.IOException
{
java.lang.Throwable v27;
byte[] v11, v15, v20, v7;
java.io.RandomAccessFile v1;
org.apache.commons.io.input.Tailer v0;
java.io.ByteArrayOutputStream v2;
long v17, v22, v26, v3, v4;
byte v12;
java.nio.charset.Charset v16, v21;
int v10, v8, v9;
java.lang.String v14, v19;
boolean v24, v5, v6;
org.apache.commons.io.input.TailerListener v13, v18, v23, v25;
v0 := @this: org.apache.commons.io.input.Tailer;
v1 := @parameter0: java.io.RandomAccessFile;
v2 = new java.io.ByteArrayOutputStream;
specialinvoke v2.<java.io.ByteArrayOutputStream: void <init>(int)>(64);
label01:
v3 = virtualinvoke v1.<java.io.RandomAccessFile: long getFilePointer()>();
v4 = v3;
v5 = 0;
label02:
v6 = virtualinvoke v0.<org.apache.commons.io.input.Tailer: boolean getRun()>();
if v6 == 0 goto label11;
v7 = v0.<org.apache.commons.io.input.Tailer: byte[] inbuf>;
v8 = virtualinvoke v1.<java.io.RandomAccessFile: int read(byte[])>(v7);
v9 = (int) -1;
if v8 == v9 goto label11;
v10 = 0;
label03:
if v10 >= v8 goto label10;
v11 = v0.<org.apache.commons.io.input.Tailer: byte[] inbuf>;
v12 = v11[v10];
lookupswitch(v12)
{
case 10: goto label04;
case 13: goto label05;
default: goto label07;
};
label04:
v5 = 0;
v13 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
v14 = new java.lang.String;
v15 = virtualinvoke v2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
v16 = v0.<org.apache.commons.io.input.Tailer: java.nio.charset.Charset charset>;
specialinvoke v14.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v15, v16);
interfaceinvoke v13.<org.apache.commons.io.input.TailerListener: void handle(java.lang.String)>(v14);
virtualinvoke v2.<java.io.ByteArrayOutputStream: void reset()>();
v17 = v3 + v10;
v4 = v17 + 1L;
goto label09;
label05:
if v5 == 0 goto label06;
virtualinvoke v2.<java.io.ByteArrayOutputStream: void write(int)>(13);
label06:
v5 = 1;
goto label09;
label07:
if v5 == 0 goto label08;
v5 = 0;
v18 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
v19 = new java.lang.String;
v20 = virtualinvoke v2.<java.io.ByteArrayOutputStream: byte[] toByteArray()>();
v21 = v0.<org.apache.commons.io.input.Tailer: java.nio.charset.Charset charset>;
specialinvoke v19.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v20, v21);
interfaceinvoke v18.<org.apache.commons.io.input.TailerListener: void handle(java.lang.String)>(v19);
virtualinvoke v2.<java.io.ByteArrayOutputStream: void reset()>();
v22 = v3 + v10;
v4 = v22 + 1L;
label08:
virtualinvoke v2.<java.io.ByteArrayOutputStream: void write(int)>(v12);
label09:
v10 = v10 + 1;
goto label03;
label10:
v3 = virtualinvoke v1.<java.io.RandomAccessFile: long getFilePointer()>();
goto label02;
label11:
virtualinvoke v1.<java.io.RandomAccessFile: void seek(long)>(v4);
v23 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
v24 = v23 instanceof org.apache.commons.io.input.TailerListenerAdapter;
if v24 == 0 goto label12;
v25 = v0.<org.apache.commons.io.input.Tailer: org.apache.commons.io.input.TailerListener listener>;
virtualinvoke v25.<org.apache.commons.io.input.TailerListenerAdapter: void endOfFileReached()>();
label12:
v26 = v4;
label13:
virtualinvoke v2.<java.io.ByteArrayOutputStream: void close()>();
return v26;
label14:
v27 := @caughtexception;
throw v27;
catch java.lang.Throwable from label01 to label13 with label14;
}
static void <clinit>()
{
java.nio.charset.Charset v0;
v0 = staticinvoke <java.nio.charset.Charset: java.nio.charset.Charset defaultCharset()>();
<org.apache.commons.io.input.Tailer: java.nio.charset.Charset DEFAULT_CHARSET> = v0;
return;
}
}