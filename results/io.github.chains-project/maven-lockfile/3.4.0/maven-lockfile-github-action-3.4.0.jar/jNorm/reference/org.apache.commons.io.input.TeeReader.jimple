public class org.apache.commons.io.input.TeeReader extends org.apache.commons.io.input.ProxyReader
{
private final java.io.Writer branch;
private final boolean closeBranch;
public void <init>(java.io.Reader, java.io.Writer)
{
java.io.Writer v2;
java.io.Reader v1;
org.apache.commons.io.input.TeeReader v0;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: java.io.Writer;
specialinvoke v0.<org.apache.commons.io.input.TeeReader: void <init>(java.io.Reader,java.io.Writer,boolean)>(v1, v2, 0);
return;
}
public void <init>(java.io.Reader, java.io.Writer, boolean)
{
org.apache.commons.io.input.TeeReader v0;
java.io.Writer v2;
java.io.Reader v1;
boolean v3;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: java.io.Writer;
v3 := @parameter2: boolean;
specialinvoke v0.<org.apache.commons.io.input.ProxyReader: void <init>(java.io.Reader)>(v1);
v0.<org.apache.commons.io.input.TeeReader: java.io.Writer branch> = v2;
v0.<org.apache.commons.io.input.TeeReader: boolean closeBranch> = v3;
return;
}
public void close() throws java.io.IOException
{
java.io.Writer v2;
org.apache.commons.io.input.TeeReader v0;
boolean v1;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 = v0.<org.apache.commons.io.input.TeeReader: boolean closeBranch>;
if v1 == 0 goto label1;
v2 = v0.<org.apache.commons.io.input.TeeReader: java.io.Writer branch>;
virtualinvoke v2.<java.io.Writer: void close()>();
label1:
return;
}
public int read() throws java.io.IOException
{
org.apache.commons.io.input.TeeReader v0;
int v1, v2;
java.io.Writer v3;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 = specialinvoke v0.<org.apache.commons.io.input.ProxyReader: int read()>();
v2 = (int) -1;
if v1 == v2 goto label1;
v3 = v0.<org.apache.commons.io.input.TeeReader: java.io.Writer branch>;
virtualinvoke v3.<java.io.Writer: void write(int)>(v1);
label1:
return v1;
}
public int read(char[]) throws java.io.IOException
{
org.apache.commons.io.input.TeeReader v0;
int v2, v3;
java.io.Writer v4;
char[] v1;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 := @parameter0: char[];
v2 = specialinvoke v0.<org.apache.commons.io.input.ProxyReader: int read(char[])>(v1);
v3 = (int) -1;
if v2 == v3 goto label1;
v4 = v0.<org.apache.commons.io.input.TeeReader: java.io.Writer branch>;
virtualinvoke v4.<java.io.Writer: void write(char[],int,int)>(v1, 0, v2);
label1:
return v2;
}
public int read(char[], int, int) throws java.io.IOException
{
org.apache.commons.io.input.TeeReader v0;
int v2, v3, v4, v5;
java.io.Writer v6;
char[] v1;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = specialinvoke v0.<org.apache.commons.io.input.ProxyReader: int read(char[],int,int)>(v1, v2, v3);
v5 = (int) -1;
if v4 == v5 goto label1;
v6 = v0.<org.apache.commons.io.input.TeeReader: java.io.Writer branch>;
virtualinvoke v6.<java.io.Writer: void write(char[],int,int)>(v1, v2, v4);
label1:
return v4;
}
public int read(java.nio.CharBuffer) throws java.io.IOException
{
java.lang.Throwable v10;
java.nio.CharBuffer v1, v11, v7, v9;
org.apache.commons.io.input.TeeReader v0;
int v2, v3, v4, v5, v6;
java.io.Writer v8;
v0 := @this: org.apache.commons.io.input.TeeReader;
v1 := @parameter0: java.nio.CharBuffer;
v2 = virtualinvoke v1.<java.nio.CharBuffer: int position()>();
v3 = specialinvoke v0.<org.apache.commons.io.input.ProxyReader: int read(java.nio.CharBuffer)>(v1);
v4 = (int) -1;
if v3 == v4 goto label4;
v5 = virtualinvoke v1.<java.nio.CharBuffer: int position()>();
v6 = virtualinvoke v1.<java.nio.CharBuffer: int limit()>();
label1:
v7 = virtualinvoke v1.<java.nio.CharBuffer: java.nio.CharBuffer position(int)>(v2);
virtualinvoke v7.<java.nio.CharBuffer: java.nio.CharBuffer limit(int)>(v5);
v8 = v0.<org.apache.commons.io.input.TeeReader: java.io.Writer branch>;
virtualinvoke v8.<java.io.Writer: java.io.Writer append(java.lang.CharSequence)>(v1);
label2:
v9 = virtualinvoke v1.<java.nio.CharBuffer: java.nio.CharBuffer position(int)>(v5);
virtualinvoke v9.<java.nio.CharBuffer: java.nio.CharBuffer limit(int)>(v6);
goto label4;
label3:
v10 := @caughtexception;
v11 = virtualinvoke v1.<java.nio.CharBuffer: java.nio.CharBuffer position(int)>(v5);
virtualinvoke v11.<java.nio.CharBuffer: java.nio.CharBuffer limit(int)>(v6);
throw v10;
label4:
return v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
}