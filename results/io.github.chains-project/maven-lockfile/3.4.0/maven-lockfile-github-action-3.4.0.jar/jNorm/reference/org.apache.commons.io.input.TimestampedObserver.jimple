public class org.apache.commons.io.input.TimestampedObserver extends org.apache.commons.io.input.ObservableInputStream$Observer
{
private volatile java.time.Instant closeInstant;
private final java.time.Instant openInstant;
public void <init>()
{
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
specialinvoke v0.<org.apache.commons.io.input.ObservableInputStream$Observer: void <init>()>();
v1 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant openInstant> = v1;
return;
}
public void closed() throws java.io.IOException
{
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
v1 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant closeInstant> = v1;
return;
}
public java.time.Instant getCloseInstant()
{
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
v1 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant closeInstant>;
return v1;
}
public java.time.Duration getOpenToCloseDuration()
{
java.time.Duration v3;
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1, v2;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
v1 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant openInstant>;
v2 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant closeInstant>;
v3 = staticinvoke <java.time.Duration: java.time.Duration between(java.time.temporal.Temporal,java.time.temporal.Temporal)>(v1, v2);
return v3;
}
public java.time.Duration getOpenToNowDuration()
{
java.time.Duration v3;
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1, v2;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
v1 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant openInstant>;
v2 = staticinvoke <java.time.Instant: java.time.Instant now()>();
v3 = staticinvoke <java.time.Duration: java.time.Duration between(java.time.temporal.Temporal,java.time.temporal.Temporal)>(v1, v2);
return v3;
}
public java.time.Instant getOpenInstant()
{
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
v1 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant openInstant>;
return v1;
}
public java.lang.String toString()
{
java.lang.String v3;
org.apache.commons.io.input.TimestampedObserver v0;
java.time.Instant v1, v2;
v0 := @this: org.apache.commons.io.input.TimestampedObserver;
v1 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant openInstant>;
v2 = v0.<org.apache.commons.io.input.TimestampedObserver: java.time.Instant closeInstant>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.time.Instant,java.time.Instant)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("TimestampedObserver [openInstant=\u0001, closeInstant=\u0001]");
return v3;
}
}