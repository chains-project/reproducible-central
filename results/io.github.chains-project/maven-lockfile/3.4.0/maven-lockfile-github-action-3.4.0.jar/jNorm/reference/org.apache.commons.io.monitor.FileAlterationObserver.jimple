public class org.apache.commons.io.monitor.FileAlterationObserver extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private final java.util.List listeners;
private final org.apache.commons.io.monitor.FileEntry rootEntry;
private final java.io.FileFilter fileFilter;
private final java.util.Comparator comparator;
public void <init>(java.lang.String)
{
java.lang.String v1;
java.io.File v2;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.lang.String;
v2 = new java.io.File;
specialinvoke v2.<java.io.File: void <init>(java.lang.String)>(v1);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File)>(v2);
return;
}
public void <init>(java.lang.String, java.io.FileFilter)
{
java.io.FileFilter v2;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.lang.String v1;
java.io.File v3;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.io.FileFilter;
v3 = new java.io.File;
specialinvoke v3.<java.io.File: void <init>(java.lang.String)>(v1);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(v3, v2);
return;
}
public void <init>(java.lang.String, java.io.FileFilter, org.apache.commons.io.IOCase)
{
java.io.FileFilter v2;
org.apache.commons.io.IOCase v3;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.lang.String v1;
java.io.File v4;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.io.FileFilter;
v3 := @parameter2: org.apache.commons.io.IOCase;
v4 = new java.io.File;
specialinvoke v4.<java.io.File: void <init>(java.lang.String)>(v1);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(v4, v2, v3);
return;
}
public void <init>(java.io.File)
{
java.io.File v1;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.io.File;
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter)>(v1, null);
return;
}
public void <init>(java.io.File, java.io.FileFilter)
{
java.io.FileFilter v2;
java.io.File v1;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.FileFilter;
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(java.io.File,java.io.FileFilter,org.apache.commons.io.IOCase)>(v1, v2, null);
return;
}
public void <init>(java.io.File, java.io.FileFilter, org.apache.commons.io.IOCase)
{
org.apache.commons.io.monitor.FileEntry v4;
java.io.FileFilter v2;
org.apache.commons.io.IOCase v3;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v1;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.io.File;
v2 := @parameter1: java.io.FileFilter;
v3 := @parameter2: org.apache.commons.io.IOCase;
v4 = new org.apache.commons.io.monitor.FileEntry;
specialinvoke v4.<org.apache.commons.io.monitor.FileEntry: void <init>(java.io.File)>(v1);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void <init>(org.apache.commons.io.monitor.FileEntry,java.io.FileFilter,org.apache.commons.io.IOCase)>(v4, v2, v3);
return;
}
protected void <init>(org.apache.commons.io.monitor.FileEntry, java.io.FileFilter, org.apache.commons.io.IOCase)
{
org.apache.commons.io.monitor.FileEntry v1;
org.apache.commons.io.IOCase v11, v3, v8;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.lang.IllegalArgumentException v5, v7;
java.io.File v6;
java.io.FileFilter v2;
java.util.Comparator v10, v13, v14;
boolean v12, v9;
java.util.concurrent.CopyOnWriteArrayList v4;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileEntry;
v2 := @parameter1: java.io.FileFilter;
v3 := @parameter2: org.apache.commons.io.IOCase;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke v4.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners> = v4;
if v1 != null goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root entry is missing");
throw v5;
label1:
v6 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
if v6 != null goto label2;
v7 = new java.lang.IllegalArgumentException;
specialinvoke v7.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Root directory is missing");
throw v7;
label2:
v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry> = v1;
v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter> = v2;
if v3 == null goto label3;
v8 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase SYSTEM>;
v9 = virtualinvoke v3.<org.apache.commons.io.IOCase: boolean equals(java.lang.Object)>(v8);
if v9 == 0 goto label4;
label3:
v10 = <org.apache.commons.io.comparator.NameFileComparator: java.util.Comparator NAME_SYSTEM_COMPARATOR>;
v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator> = v10;
goto label6;
label4:
v11 = <org.apache.commons.io.IOCase: org.apache.commons.io.IOCase INSENSITIVE>;
v12 = virtualinvoke v3.<org.apache.commons.io.IOCase: boolean equals(java.lang.Object)>(v11);
if v12 == 0 goto label5;
v13 = <org.apache.commons.io.comparator.NameFileComparator: java.util.Comparator NAME_INSENSITIVE_COMPARATOR>;
v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator> = v13;
goto label6;
label5:
v14 = <org.apache.commons.io.comparator.NameFileComparator: java.util.Comparator NAME_COMPARATOR>;
v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator> = v14;
label6:
return;
}
public java.io.File getDirectory()
{
org.apache.commons.io.monitor.FileEntry v1;
java.io.File v2;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v2 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
return v2;
}
public java.io.FileFilter getFileFilter()
{
java.io.FileFilter v1;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;
return v1;
}
public void addListener(org.apache.commons.io.monitor.FileAlterationListener)
{
java.util.List v2;
org.apache.commons.io.monitor.FileAlterationListener v1;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileAlterationListener;
if v1 == null goto label1;
v2 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
interfaceinvoke v2.<java.util.List: boolean add(java.lang.Object)>(v1);
label1:
return;
}
public void removeListener(org.apache.commons.io.monitor.FileAlterationListener)
{
java.util.List v2;
org.apache.commons.io.monitor.FileAlterationListener v1;
org.apache.commons.io.monitor.FileAlterationObserver v0;
boolean v3;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileAlterationListener;
if v1 == null goto label2;
label1:
v2 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v3 = interfaceinvoke v2.<java.util.List: boolean remove(java.lang.Object)>(v1);
if v3 != 0 goto label1;
label2:
return;
}
public java.lang.Iterable getListeners()
{
java.util.List v1;
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
return v1;
}
public void initialize() throws java.lang.Exception
{
org.apache.commons.io.monitor.FileEntry v1, v2, v4, v6, v8;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v3, v5;
org.apache.commons.io.monitor.FileEntry[] v7;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v2 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v3 = virtualinvoke v2.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: boolean refresh(java.io.File)>(v3);
v4 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v5 = virtualinvoke v4.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
v6 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v7 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry)>(v5, v6);
v8 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
virtualinvoke v8.<org.apache.commons.io.monitor.FileEntry: void setChildren(org.apache.commons.io.monitor.FileEntry[])>(v7);
return;
}
public void destroy() throws java.lang.Exception
{
org.apache.commons.io.monitor.FileAlterationObserver v0;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
return;
}
public void checkAndNotify()
{
org.apache.commons.io.monitor.FileEntry v12, v14, v15, v5, v8, v9;
org.apache.commons.io.monitor.FileAlterationObserver v0;
org.apache.commons.io.monitor.FileEntry[] v10, v16;
boolean v13, v20, v3, v7;
java.util.Iterator v19, v2;
java.io.File v6;
java.util.List v1, v18;
java.lang.Object v21, v4;
java.io.File[] v11, v17;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v2 = interfaceinvoke v1.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v4.<org.apache.commons.io.monitor.FileAlterationListener: void onStart(org.apache.commons.io.monitor.FileAlterationObserver)>(v0);
goto label1;
label2:
v5 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v6 = virtualinvoke v5.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
v7 = virtualinvoke v6.<java.io.File: boolean exists()>();
if v7 == 0 goto label3;
v8 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v9 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v10 = virtualinvoke v9.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();
v11 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File[] listFiles(java.io.File)>(v6);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>(v8, v10, v11);
goto label4;
label3:
v12 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v13 = virtualinvoke v12.<org.apache.commons.io.monitor.FileEntry: boolean isExists()>();
if v13 == 0 goto label4;
v14 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v15 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry rootEntry>;
v16 = virtualinvoke v15.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();
v17 = <org.apache.commons.io.FileUtils: java.io.File[] EMPTY_FILE_ARRAY>;
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>(v14, v16, v17);
label4:
v18 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v19 = interfaceinvoke v18.<java.util.List: java.util.Iterator iterator()>();
label5:
v20 = interfaceinvoke v19.<java.util.Iterator: boolean hasNext()>();
if v20 == 0 goto label6;
v21 = interfaceinvoke v19.<java.util.Iterator: java.lang.Object next()>();
interfaceinvoke v21.<org.apache.commons.io.monitor.FileAlterationListener: void onStop(org.apache.commons.io.monitor.FileAlterationObserver)>(v0);
goto label5;
label6:
return;
}
private void checkAndNotify(org.apache.commons.io.monitor.FileEntry, org.apache.commons.io.monitor.FileEntry[], java.io.File[])
{
org.apache.commons.io.monitor.FileAlterationObserver v0;
org.apache.commons.io.monitor.FileEntry v1, v11, v18, v19, v33, v34;
org.apache.commons.io.monitor.FileEntry[] v2, v26, v29, v7, v8;
int v10, v12, v16, v20, v24, v31, v4, v5, v6, v9;
java.io.File v14, v15, v17, v22, v23, v25, v27, v32;
java.util.Comparator v13, v21;
java.io.File[] v28, v3, v30;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileEntry;
v2 := @parameter1: org.apache.commons.io.monitor.FileEntry[];
v3 := @parameter2: java.io.File[];
v4 = 0;
v5 = lengthof v3;
if v5 <= 0 goto label1;
v6 = lengthof v3;
v7 = newarray (org.apache.commons.io.monitor.FileEntry)[v6];
goto label2;
label1:
v7 = <org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] EMPTY_FILE_ENTRY_ARRAY>;
label2:
v8 = v7;
v9 = lengthof v2;
v10 = 0;
label3:
if v10 >= v9 goto label8;
v11 = v2[v10];
label4:
v12 = lengthof v3;
if v4 >= v12 goto label5;
v13 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;
v14 = virtualinvoke v11.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
v15 = v3[v4];
v16 = interfaceinvoke v13.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v14, v15);
if v16 <= 0 goto label5;
v17 = v3[v4];
v18 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(v1, v17);
v8[v4] = v18;
v19 = v8[v4];
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void doCreate(org.apache.commons.io.monitor.FileEntry)>(v19);
v4 = v4 + 1;
goto label4;
label5:
v20 = lengthof v3;
if v4 >= v20 goto label6;
v21 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;
v22 = virtualinvoke v11.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
v23 = v3[v4];
v24 = interfaceinvoke v21.<java.util.Comparator: int compare(java.lang.Object,java.lang.Object)>(v22, v23);
if v24 != 0 goto label6;
v25 = v3[v4];
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void doMatch(org.apache.commons.io.monitor.FileEntry,java.io.File)>(v11, v25);
v26 = virtualinvoke v11.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();
v27 = v3[v4];
v28 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File[] listFiles(java.io.File)>(v27);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>(v11, v26, v28);
v8[v4] = v11;
v4 = v4 + 1;
goto label7;
label6:
v29 = virtualinvoke v11.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();
v30 = <org.apache.commons.io.FileUtils: java.io.File[] EMPTY_FILE_ARRAY>;
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void checkAndNotify(org.apache.commons.io.monitor.FileEntry,org.apache.commons.io.monitor.FileEntry[],java.io.File[])>(v11, v29, v30);
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void doDelete(org.apache.commons.io.monitor.FileEntry)>(v11);
label7:
v10 = v10 + 1;
goto label3;
label8:
v31 = lengthof v3;
if v4 >= v31 goto label9;
v32 = v3[v4];
v33 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(v1, v32);
v8[v4] = v33;
v34 = v8[v4];
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void doCreate(org.apache.commons.io.monitor.FileEntry)>(v34);
v4 = v4 + 1;
goto label8;
label9:
virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: void setChildren(org.apache.commons.io.monitor.FileEntry[])>(v8);
return;
}
private org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry, java.io.File)
{
org.apache.commons.io.monitor.FileEntry v1, v3;
org.apache.commons.io.monitor.FileEntry[] v4;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v2;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileEntry;
v2 := @parameter1: java.io.File;
v3 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry newChildInstance(java.io.File)>(v2);
virtualinvoke v3.<org.apache.commons.io.monitor.FileEntry: boolean refresh(java.io.File)>(v2);
v4 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File,org.apache.commons.io.monitor.FileEntry)>(v2, v3);
virtualinvoke v3.<org.apache.commons.io.monitor.FileEntry: void setChildren(org.apache.commons.io.monitor.FileEntry[])>(v4);
return v3;
}
private org.apache.commons.io.monitor.FileEntry[] doListFiles(java.io.File, org.apache.commons.io.monitor.FileEntry)
{
org.apache.commons.io.monitor.FileEntry v11, v2;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v1, v10;
org.apache.commons.io.monitor.FileEntry[] v6, v7;
int v4, v5, v8, v9;
java.io.File[] v3;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.io.File;
v2 := @parameter1: org.apache.commons.io.monitor.FileEntry;
v3 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File[] listFiles(java.io.File)>(v1);
v4 = lengthof v3;
if v4 <= 0 goto label1;
v5 = lengthof v3;
v6 = newarray (org.apache.commons.io.monitor.FileEntry)[v5];
goto label2;
label1:
v6 = <org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] EMPTY_FILE_ENTRY_ARRAY>;
label2:
v7 = v6;
v8 = 0;
label3:
v9 = lengthof v3;
if v8 >= v9 goto label4;
v10 = v3[v8];
v11 = specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: org.apache.commons.io.monitor.FileEntry createFileEntry(org.apache.commons.io.monitor.FileEntry,java.io.File)>(v2, v10);
v7[v8] = v11;
v8 = v8 + 1;
goto label3;
label4:
return v7;
}
private void doCreate(org.apache.commons.io.monitor.FileEntry)
{
org.apache.commons.io.monitor.FileEntry v1, v12;
java.util.Iterator v3;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v7, v8;
java.util.List v2;
org.apache.commons.io.monitor.FileEntry[] v9;
int v10, v11;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileEntry;
v2 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: boolean isDirectory()>();
if v6 == 0 goto label2;
v7 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
interfaceinvoke v5.<org.apache.commons.io.monitor.FileAlterationListener: void onDirectoryCreate(java.io.File)>(v7);
goto label1;
label2:
v8 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
interfaceinvoke v5.<org.apache.commons.io.monitor.FileAlterationListener: void onFileCreate(java.io.File)>(v8);
goto label1;
label3:
v9 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: org.apache.commons.io.monitor.FileEntry[] getChildren()>();
v10 = lengthof v9;
v11 = 0;
label4:
if v11 >= v10 goto label5;
v12 = v9[v11];
specialinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: void doCreate(org.apache.commons.io.monitor.FileEntry)>(v12);
v11 = v11 + 1;
goto label4;
label5:
return;
}
private void doMatch(org.apache.commons.io.monitor.FileEntry, java.io.File)
{
org.apache.commons.io.monitor.FileEntry v1;
java.util.Iterator v5;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v2;
java.util.List v4;
java.lang.Object v7;
boolean v3, v6, v8;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileEntry;
v2 := @parameter1: java.io.File;
v3 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: boolean refresh(java.io.File)>(v2);
if v3 == 0 goto label3;
v4 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v5 = interfaceinvoke v4.<java.util.List: java.util.Iterator iterator()>();
label1:
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label3;
v7 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v8 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: boolean isDirectory()>();
if v8 == 0 goto label2;
interfaceinvoke v7.<org.apache.commons.io.monitor.FileAlterationListener: void onDirectoryChange(java.io.File)>(v2);
goto label1;
label2:
interfaceinvoke v7.<org.apache.commons.io.monitor.FileAlterationListener: void onFileChange(java.io.File)>(v2);
goto label1;
label3:
return;
}
private void doDelete(org.apache.commons.io.monitor.FileEntry)
{
org.apache.commons.io.monitor.FileEntry v1;
java.util.Iterator v3;
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v7, v8;
java.util.List v2;
java.lang.Object v5;
boolean v4, v6;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: org.apache.commons.io.monitor.FileEntry;
v2 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v3 = interfaceinvoke v2.<java.util.List: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: boolean isDirectory()>();
if v6 == 0 goto label2;
v7 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
interfaceinvoke v5.<org.apache.commons.io.monitor.FileAlterationListener: void onDirectoryDelete(java.io.File)>(v7);
goto label1;
label2:
v8 = virtualinvoke v1.<org.apache.commons.io.monitor.FileEntry: java.io.File getFile()>();
interfaceinvoke v5.<org.apache.commons.io.monitor.FileAlterationListener: void onFileDelete(java.io.File)>(v8);
goto label1;
label3:
return;
}
private java.io.File[] listFiles(java.io.File)
{
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v1;
java.io.FileFilter v4, v6;
int v8;
java.util.Comparator v7, v9;
java.io.File[] v2, v5;
boolean v3;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 := @parameter0: java.io.File;
v2 = null;
v3 = virtualinvoke v1.<java.io.File: boolean isDirectory()>();
if v3 == 0 goto label3;
v4 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;
if v4 != null goto label1;
v5 = virtualinvoke v1.<java.io.File: java.io.File[] listFiles()>();
goto label2;
label1:
v6 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;
v5 = virtualinvoke v1.<java.io.File: java.io.File[] listFiles(java.io.FileFilter)>(v6);
label2:
v2 = v5;
label3:
if v2 != null goto label4;
v2 = <org.apache.commons.io.FileUtils: java.io.File[] EMPTY_FILE_ARRAY>;
label4:
v7 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;
if v7 == null goto label5;
v8 = lengthof v2;
if v8 <= 1 goto label5;
v9 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.Comparator comparator>;
staticinvoke <java.util.Arrays: void sort(java.lang.Object[],java.util.Comparator)>(v2, v9);
label5:
return v2;
}
public java.lang.String toString()
{
org.apache.commons.io.monitor.FileAlterationObserver v0;
java.io.File v4;
java.util.List v9;
java.io.FileFilter v6, v7;
int v10;
java.lang.Class v2;
java.lang.StringBuilder v1;
java.lang.String v11, v3, v5, v8;
v0 := @this: org.apache.commons.io.monitor.FileAlterationObserver;
v1 = new java.lang.StringBuilder;
specialinvoke v1.<java.lang.StringBuilder: void <init>()>();
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v2.<java.lang.Class: java.lang.String getSimpleName()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v3);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[file=\'");
v4 = virtualinvoke v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.File getDirectory()>();
v5 = virtualinvoke v4.<java.io.File: java.lang.String getPath()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v5);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(39);
v6 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;
if v6 == null goto label1;
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
v7 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.io.FileFilter fileFilter>;
v8 = virtualinvoke v7.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v8);
label1:
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", listeners=");
v9 = v0.<org.apache.commons.io.monitor.FileAlterationObserver: java.util.List listeners>;
v10 = interfaceinvoke v9.<java.util.List: int size()>();
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v10);
virtualinvoke v1.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("]");
v11 = virtualinvoke v1.<java.lang.StringBuilder: java.lang.String toString()>();
return v11;
}
}