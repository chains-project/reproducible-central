public class org.apache.commons.io.output.ProxyCollectionWriter extends org.apache.commons.io.output.FilterCollectionWriter
{
public void <init>(java.util.Collection)
{
org.apache.commons.io.output.ProxyCollectionWriter v0;
java.util.Collection v1;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.util.Collection;
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void <init>(java.util.Collection)>(v1);
return;
}
public transient void <init>(java.io.Writer[])
{
java.io.Writer[] v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.io.Writer[];
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void <init>(java.io.Writer[])>(v1);
return;
}
protected void afterWrite(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: int;
return;
}
public java.io.Writer append(char) throws java.io.IOException
{
char v1;
java.io.IOException v2;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: char;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(1);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: java.io.Writer append(char)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(1);
label2:
goto label4;
label3:
v2 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v2);
label4:
return v0;
catch java.io.IOException from label1 to label2 with label3;
}
public java.io.Writer append(java.lang.CharSequence) throws java.io.IOException
{
java.lang.CharSequence v1;
int v2;
java.io.IOException v3;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.lang.CharSequence;
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(java.lang.CharSequence)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(v2);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: java.io.Writer append(java.lang.CharSequence)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v3);
label4:
return v0;
catch java.io.IOException from label1 to label2 with label3;
}
public java.io.Writer append(java.lang.CharSequence, int, int) throws java.io.IOException
{
java.lang.CharSequence v1;
int v2, v3, v4, v5;
java.io.IOException v6;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.lang.CharSequence;
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
v4 = v3 - v2;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(v4);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: java.io.Writer append(java.lang.CharSequence,int,int)>(v1, v2, v3);
v5 = v3 - v2;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(v5);
label2:
goto label4;
label3:
v6 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v6);
label4:
return v0;
catch java.io.IOException from label1 to label2 with label3;
}
protected void beforeWrite(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: int;
return;
}
public void close() throws java.io.IOException
{
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
return;
}
public void flush() throws java.io.IOException
{
java.io.IOException v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
label1:
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void flush()>();
label2:
goto label4;
label3:
v1 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v1);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
protected void handleIOException(java.io.IOException) throws java.io.IOException
{
java.io.IOException v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.io.IOException;
throw v1;
}
public void write(char[]) throws java.io.IOException
{
int v2;
char[] v1;
java.io.IOException v3;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: char[];
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(char[])>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(v2);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void write(char[])>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v3);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(char[], int, int) throws java.io.IOException
{
int v2, v3;
char[] v1;
java.io.IOException v4;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(v3);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void write(char[],int,int)>(v1, v2, v3);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(v3);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v4);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(int) throws java.io.IOException
{
int v1;
java.io.IOException v2;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(1);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void write(int)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(1);
label2:
goto label4;
label3:
v2 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v2);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(java.lang.String) throws java.io.IOException
{
int v2;
java.io.IOException v3;
java.lang.String v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.lang.String;
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(java.lang.CharSequence)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(v2);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void write(java.lang.String)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v3);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(java.lang.String, int, int) throws java.io.IOException
{
int v2, v3;
java.io.IOException v4;
java.lang.String v1;
org.apache.commons.io.output.ProxyCollectionWriter v0;
v0 := @this: org.apache.commons.io.output.ProxyCollectionWriter;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void beforeWrite(int)>(v3);
specialinvoke v0.<org.apache.commons.io.output.FilterCollectionWriter: void write(java.lang.String,int,int)>(v1, v2, v3);
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void afterWrite(int)>(v3);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyCollectionWriter: void handleIOException(java.io.IOException)>(v4);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
}