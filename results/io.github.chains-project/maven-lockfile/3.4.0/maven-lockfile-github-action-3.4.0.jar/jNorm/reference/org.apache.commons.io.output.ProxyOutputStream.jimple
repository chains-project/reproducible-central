public class org.apache.commons.io.output.ProxyOutputStream extends java.io.FilterOutputStream
{
public void <init>(java.io.OutputStream)
{
java.io.OutputStream v1;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: java.io.OutputStream;
specialinvoke v0.<java.io.FilterOutputStream: void <init>(java.io.OutputStream)>(v1);
return;
}
public void write(int) throws java.io.IOException
{
java.io.OutputStream v2;
int v1;
java.io.IOException v3;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void beforeWrite(int)>(1);
v2 = v0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;
virtualinvoke v2.<java.io.OutputStream: void write(int)>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void afterWrite(int)>(1);
label2:
goto label4;
label3:
v3 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(v3);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(byte[]) throws java.io.IOException
{
java.io.OutputStream v3;
byte[] v1;
int v2;
java.io.IOException v4;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: byte[];
label1:
v2 = staticinvoke <org.apache.commons.io.IOUtils: int length(byte[])>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void beforeWrite(int)>(v2);
v3 = v0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;
virtualinvoke v3.<java.io.OutputStream: void write(byte[])>(v1);
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void afterWrite(int)>(v2);
label2:
goto label4;
label3:
v4 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(v4);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void write(byte[], int, int) throws java.io.IOException
{
java.io.OutputStream v4;
byte[] v1;
int v2, v3;
java.io.IOException v5;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
label1:
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void beforeWrite(int)>(v3);
v4 = v0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;
virtualinvoke v4.<java.io.OutputStream: void write(byte[],int,int)>(v1, v2, v3);
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void afterWrite(int)>(v3);
label2:
goto label4;
label3:
v5 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(v5);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void flush() throws java.io.IOException
{
java.io.OutputStream v1;
java.io.IOException v2;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
label1:
v1 = v0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;
virtualinvoke v1.<java.io.OutputStream: void flush()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
virtualinvoke v0.<org.apache.commons.io.output.ProxyOutputStream: void handleIOException(java.io.IOException)>(v2);
label4:
return;
catch java.io.IOException from label1 to label2 with label3;
}
public void close() throws java.io.IOException
{
java.io.OutputStream v1;
org.apache.commons.io.function.IOConsumer v2;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 = v0.<org.apache.commons.io.output.ProxyOutputStream: java.io.OutputStream out>;
v2 = staticinvoke <org.apache.commons.io.output.ProxyOutputStream$handleIOException__265: org.apache.commons.io.function.IOConsumer bootstrap$(org.apache.commons.io.output.ProxyOutputStream)>(v0);
staticinvoke <org.apache.commons.io.IOUtils: void close(java.io.Closeable,org.apache.commons.io.function.IOConsumer)>(v1, v2);
return;
}
protected void beforeWrite(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: int;
return;
}
protected void afterWrite(int) throws java.io.IOException
{
int v1;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: int;
return;
}
protected void handleIOException(java.io.IOException) throws java.io.IOException
{
java.io.IOException v1;
org.apache.commons.io.output.ProxyOutputStream v0;
v0 := @this: org.apache.commons.io.output.ProxyOutputStream;
v1 := @parameter0: java.io.IOException;
throw v1;
}
}