public class org.apache.commons.lang3.ArchUtils extends java.lang.Object
{
private static final java.util.Map ARCH_TO_PROCESSOR;
public void <init>()
{
org.apache.commons.lang3.ArchUtils v0;
v0 := @this: org.apache.commons.lang3.ArchUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
private static void init()
{
staticinvoke <org.apache.commons.lang3.ArchUtils: void init_X86_32Bit()>();
staticinvoke <org.apache.commons.lang3.ArchUtils: void init_X86_64Bit()>();
staticinvoke <org.apache.commons.lang3.ArchUtils: void init_IA64_32Bit()>();
staticinvoke <org.apache.commons.lang3.ArchUtils: void init_IA64_64Bit()>();
staticinvoke <org.apache.commons.lang3.ArchUtils: void init_PPC_32Bit()>();
staticinvoke <org.apache.commons.lang3.ArchUtils: void init_PPC_64Bit()>();
return;
}
private static void init_X86_32Bit()
{
org.apache.commons.lang3.arch.Processor$Arch v1;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v3;
org.apache.commons.lang3.arch.Processor$Type v2;
v0 = new org.apache.commons.lang3.arch.Processor;
v1 = <org.apache.commons.lang3.arch.Processor$Arch: org.apache.commons.lang3.arch.Processor$Arch BIT_32>;
v2 = <org.apache.commons.lang3.arch.Processor$Type: org.apache.commons.lang3.arch.Processor$Type X86>;
specialinvoke v0.<org.apache.commons.lang3.arch.Processor: void <init>(org.apache.commons.lang3.arch.Processor$Arch,org.apache.commons.lang3.arch.Processor$Type)>(v1, v2);
v3 = newarray (java.lang.String)[6];
v3[0] = "x86";
v3[1] = "i386";
v3[2] = "i486";
v3[3] = "i586";
v3[4] = "i686";
v3[5] = "pentium";
staticinvoke <org.apache.commons.lang3.ArchUtils: void addProcessors(org.apache.commons.lang3.arch.Processor,java.lang.String[])>(v0, v3);
return;
}
private static void init_X86_64Bit()
{
org.apache.commons.lang3.arch.Processor$Arch v1;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v3;
org.apache.commons.lang3.arch.Processor$Type v2;
v0 = new org.apache.commons.lang3.arch.Processor;
v1 = <org.apache.commons.lang3.arch.Processor$Arch: org.apache.commons.lang3.arch.Processor$Arch BIT_64>;
v2 = <org.apache.commons.lang3.arch.Processor$Type: org.apache.commons.lang3.arch.Processor$Type X86>;
specialinvoke v0.<org.apache.commons.lang3.arch.Processor: void <init>(org.apache.commons.lang3.arch.Processor$Arch,org.apache.commons.lang3.arch.Processor$Type)>(v1, v2);
v3 = newarray (java.lang.String)[4];
v3[0] = "x86_64";
v3[1] = "amd64";
v3[2] = "em64t";
v3[3] = "universal";
staticinvoke <org.apache.commons.lang3.ArchUtils: void addProcessors(org.apache.commons.lang3.arch.Processor,java.lang.String[])>(v0, v3);
return;
}
private static void init_IA64_32Bit()
{
org.apache.commons.lang3.arch.Processor$Arch v1;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v3;
org.apache.commons.lang3.arch.Processor$Type v2;
v0 = new org.apache.commons.lang3.arch.Processor;
v1 = <org.apache.commons.lang3.arch.Processor$Arch: org.apache.commons.lang3.arch.Processor$Arch BIT_32>;
v2 = <org.apache.commons.lang3.arch.Processor$Type: org.apache.commons.lang3.arch.Processor$Type IA_64>;
specialinvoke v0.<org.apache.commons.lang3.arch.Processor: void <init>(org.apache.commons.lang3.arch.Processor$Arch,org.apache.commons.lang3.arch.Processor$Type)>(v1, v2);
v3 = newarray (java.lang.String)[2];
v3[0] = "ia64_32";
v3[1] = "ia64n";
staticinvoke <org.apache.commons.lang3.ArchUtils: void addProcessors(org.apache.commons.lang3.arch.Processor,java.lang.String[])>(v0, v3);
return;
}
private static void init_IA64_64Bit()
{
org.apache.commons.lang3.arch.Processor$Arch v1;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v3;
org.apache.commons.lang3.arch.Processor$Type v2;
v0 = new org.apache.commons.lang3.arch.Processor;
v1 = <org.apache.commons.lang3.arch.Processor$Arch: org.apache.commons.lang3.arch.Processor$Arch BIT_64>;
v2 = <org.apache.commons.lang3.arch.Processor$Type: org.apache.commons.lang3.arch.Processor$Type IA_64>;
specialinvoke v0.<org.apache.commons.lang3.arch.Processor: void <init>(org.apache.commons.lang3.arch.Processor$Arch,org.apache.commons.lang3.arch.Processor$Type)>(v1, v2);
v3 = newarray (java.lang.String)[2];
v3[0] = "ia64";
v3[1] = "ia64w";
staticinvoke <org.apache.commons.lang3.ArchUtils: void addProcessors(org.apache.commons.lang3.arch.Processor,java.lang.String[])>(v0, v3);
return;
}
private static void init_PPC_32Bit()
{
org.apache.commons.lang3.arch.Processor$Arch v1;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v3;
org.apache.commons.lang3.arch.Processor$Type v2;
v0 = new org.apache.commons.lang3.arch.Processor;
v1 = <org.apache.commons.lang3.arch.Processor$Arch: org.apache.commons.lang3.arch.Processor$Arch BIT_32>;
v2 = <org.apache.commons.lang3.arch.Processor$Type: org.apache.commons.lang3.arch.Processor$Type PPC>;
specialinvoke v0.<org.apache.commons.lang3.arch.Processor: void <init>(org.apache.commons.lang3.arch.Processor$Arch,org.apache.commons.lang3.arch.Processor$Type)>(v1, v2);
v3 = newarray (java.lang.String)[5];
v3[0] = "ppc";
v3[1] = "power";
v3[2] = "powerpc";
v3[3] = "power_pc";
v3[4] = "power_rs";
staticinvoke <org.apache.commons.lang3.ArchUtils: void addProcessors(org.apache.commons.lang3.arch.Processor,java.lang.String[])>(v0, v3);
return;
}
private static void init_PPC_64Bit()
{
org.apache.commons.lang3.arch.Processor$Arch v1;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v3;
org.apache.commons.lang3.arch.Processor$Type v2;
v0 = new org.apache.commons.lang3.arch.Processor;
v1 = <org.apache.commons.lang3.arch.Processor$Arch: org.apache.commons.lang3.arch.Processor$Arch BIT_64>;
v2 = <org.apache.commons.lang3.arch.Processor$Type: org.apache.commons.lang3.arch.Processor$Type PPC>;
specialinvoke v0.<org.apache.commons.lang3.arch.Processor: void <init>(org.apache.commons.lang3.arch.Processor$Arch,org.apache.commons.lang3.arch.Processor$Type)>(v1, v2);
v3 = newarray (java.lang.String)[5];
v3[0] = "ppc64";
v3[1] = "power64";
v3[2] = "powerpc64";
v3[3] = "power_pc64";
v3[4] = "power_rs64";
staticinvoke <org.apache.commons.lang3.ArchUtils: void addProcessors(org.apache.commons.lang3.arch.Processor,java.lang.String[])>(v0, v3);
return;
}
private static void addProcessor(java.lang.String, org.apache.commons.lang3.arch.Processor)
{
java.lang.IllegalStateException v4;
org.apache.commons.lang3.arch.Processor v1;
java.util.Map v2, v6;
java.lang.String v0, v5;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: org.apache.commons.lang3.arch.Processor;
v2 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>;
v3 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v0);
if v3 == 0 goto label1;
v4 = new java.lang.IllegalStateException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Key \u0001 already exists in processor map");
specialinvoke v4.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>;
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v0, v1);
return;
}
private static transient void addProcessors(org.apache.commons.lang3.arch.Processor, java.lang.String[])
{
java.util.function.Consumer v3;
java.util.stream.Stream v2;
org.apache.commons.lang3.arch.Processor v0;
java.lang.String[] v1;
v0 := @parameter0: org.apache.commons.lang3.arch.Processor;
v1 := @parameter1: java.lang.String[];
v2 = staticinvoke <java.util.stream.Stream: java.util.stream.Stream of(java.lang.Object[])>(v1);
v3 = staticinvoke <org.apache.commons.lang3.ArchUtils$lambda_addProcessors_0__128: java.util.function.Consumer bootstrap$(org.apache.commons.lang3.arch.Processor)>(v0);
interfaceinvoke v2.<java.util.stream.Stream: void forEach(java.util.function.Consumer)>(v3);
return;
}
public static org.apache.commons.lang3.arch.Processor getProcessor()
{
java.lang.String v0;
org.apache.commons.lang3.arch.Processor v1;
v0 = <org.apache.commons.lang3.SystemUtils: java.lang.String OS_ARCH>;
v1 = staticinvoke <org.apache.commons.lang3.ArchUtils: org.apache.commons.lang3.arch.Processor getProcessor(java.lang.String)>(v0);
return v1;
}
public static org.apache.commons.lang3.arch.Processor getProcessor(java.lang.String)
{
java.lang.Object v2;
java.lang.String v0;
java.util.Map v1;
v0 := @parameter0: java.lang.String;
v1 = <org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR>;
v2 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v0);
return v2;
}
static void <clinit>()
{
java.util.HashMap v0;
v0 = new java.util.HashMap;
specialinvoke v0.<java.util.HashMap: void <init>()>();
<org.apache.commons.lang3.ArchUtils: java.util.Map ARCH_TO_PROCESSOR> = v0;
staticinvoke <org.apache.commons.lang3.ArchUtils: void init()>();
return;
}
}