public class org.apache.commons.lang3.compare.ComparableUtils extends java.lang.Object
{
public static java.util.function.Predicate between(java.lang.Comparable, java.lang.Comparable)
{
java.lang.Comparable v0, v1;
java.util.function.Predicate v2;
v0 := @parameter0: java.lang.Comparable;
v1 := @parameter1: java.lang.Comparable;
v2 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils$lambda_between_0__245: java.util.function.Predicate bootstrap$(java.lang.Comparable,java.lang.Comparable)>(v0, v1);
return v2;
}
public static java.util.function.Predicate betweenExclusive(java.lang.Comparable, java.lang.Comparable)
{
java.lang.Comparable v0, v1;
java.util.function.Predicate v2;
v0 := @parameter0: java.lang.Comparable;
v1 := @parameter1: java.lang.Comparable;
v2 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils$lambda_betweenExclusive_1__246: java.util.function.Predicate bootstrap$(java.lang.Comparable,java.lang.Comparable)>(v0, v1);
return v2;
}
public static java.util.function.Predicate ge(java.lang.Comparable)
{
java.lang.Comparable v0;
java.util.function.Predicate v1;
v0 := @parameter0: java.lang.Comparable;
v1 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils$lambda_ge_2__247: java.util.function.Predicate bootstrap$(java.lang.Comparable)>(v0);
return v1;
}
public static java.util.function.Predicate gt(java.lang.Comparable)
{
java.lang.Comparable v0;
java.util.function.Predicate v1;
v0 := @parameter0: java.lang.Comparable;
v1 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils$lambda_gt_3__248: java.util.function.Predicate bootstrap$(java.lang.Comparable)>(v0);
return v1;
}
public static org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder is(java.lang.Comparable)
{
org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder v1;
java.lang.Comparable v0;
v0 := @parameter0: java.lang.Comparable;
v1 = new org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder;
specialinvoke v1.<org.apache.commons.lang3.compare.ComparableUtils$ComparableCheckBuilder: void <init>(java.lang.Comparable)>(v0);
return v1;
}
public static java.util.function.Predicate le(java.lang.Comparable)
{
java.lang.Comparable v0;
java.util.function.Predicate v1;
v0 := @parameter0: java.lang.Comparable;
v1 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils$lambda_le_4__249: java.util.function.Predicate bootstrap$(java.lang.Comparable)>(v0);
return v1;
}
public static java.util.function.Predicate lt(java.lang.Comparable)
{
java.lang.Comparable v0;
java.util.function.Predicate v1;
v0 := @parameter0: java.lang.Comparable;
v1 = staticinvoke <org.apache.commons.lang3.compare.ComparableUtils$lambda_lt_5__250: java.util.function.Predicate bootstrap$(java.lang.Comparable)>(v0);
return v1;
}
private void <init>()
{
org.apache.commons.lang3.compare.ComparableUtils v0;
v0 := @this: org.apache.commons.lang3.compare.ComparableUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}