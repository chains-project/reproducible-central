public class org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults extends java.lang.Object
{
private final java.util.Map initializers;
private final java.util.Map resultObjects;
private final java.util.Map exceptions;
private void <init>(java.util.Map, java.util.Map, java.util.Map)
{
java.util.Map v1, v2, v3;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: java.util.Map;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map initializers> = v1;
v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map resultObjects> = v2;
v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map exceptions> = v3;
return;
}
public org.apache.commons.lang3.concurrent.BackgroundInitializer getInitializer(java.lang.String)
{
java.lang.String v1;
org.apache.commons.lang3.concurrent.BackgroundInitializer v2;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 := @parameter0: java.lang.String;
v2 = specialinvoke v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String)>(v1);
return v2;
}
public java.lang.Object getResultObject(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String)>(v1);
v2 = v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map resultObjects>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public boolean isException(java.lang.String)
{
java.util.Map v2;
java.lang.String v1;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
boolean v3;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String)>(v1);
v2 = v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map exceptions>;
v3 = interfaceinvoke v2.<java.util.Map: boolean containsKey(java.lang.Object)>(v1);
return v3;
}
public org.apache.commons.lang3.concurrent.ConcurrentException getException(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String)>(v1);
v2 = v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map exceptions>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.util.Set initializerNames()
{
java.util.Map v1;
java.util.Set v2, v3;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 = v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map initializers>;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = staticinvoke <java.util.Collections: java.util.Set unmodifiableSet(java.util.Set)>(v2);
return v3;
}
public boolean isSuccessful()
{
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
boolean v2;
java.util.Map v1;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 = v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map exceptions>;
v2 = interfaceinvoke v1.<java.util.Map: boolean isEmpty()>();
return v2;
}
private org.apache.commons.lang3.concurrent.BackgroundInitializer checkName(java.lang.String)
{
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1, v5;
java.util.NoSuchElementException v4;
org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults v0;
v0 := @this: org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.apache.commons.lang3.concurrent.MultiBackgroundInitializer$MultiBackgroundInitializerResults: java.util.Map initializers>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = new java.util.NoSuchElementException;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No child initializer with name \u0001");
specialinvoke v4.<java.util.NoSuchElementException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
return v3;
}
}