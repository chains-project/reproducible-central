public class org.apache.commons.lang3.event.EventListenerSupport extends java.lang.Object implements java.io.Serializable
{
private static final long serialVersionUID;
private java.util.List listeners;
private transient java.lang.Object proxy;
private transient java.lang.Object[] prototypeArray;
public static org.apache.commons.lang3.event.EventListenerSupport create(java.lang.Class)
{
org.apache.commons.lang3.event.EventListenerSupport v1;
java.lang.Class v0;
v0 := @parameter0: java.lang.Class;
v1 = new org.apache.commons.lang3.event.EventListenerSupport;
specialinvoke v1.<org.apache.commons.lang3.event.EventListenerSupport: void <init>(java.lang.Class)>(v0);
return v1;
}
public void <init>(java.lang.Class)
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Thread v2;
java.lang.Class v1;
java.lang.ClassLoader v3;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Class;
v2 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v3 = virtualinvoke v2.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
specialinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: void <init>(java.lang.Class,java.lang.ClassLoader)>(v1, v3);
return;
}
public void <init>(java.lang.Class, java.lang.ClassLoader)
{
java.lang.Object[] v3, v4, v6;
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Class v1;
java.lang.ClassLoader v2;
java.lang.String v7;
boolean v5;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.ClassLoader;
specialinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: void <init>()>();
v3 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v1, "listenerInterface", v3);
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v2, "classLoader", v4);
v5 = virtualinvoke v1.<java.lang.Class: boolean isInterface()>();
v6 = newarray (java.lang.Object)[1];
v7 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
v6[0] = v7;
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v5, "Class %s is not an interface", v6);
specialinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: void initializeTransientFields(java.lang.Class,java.lang.ClassLoader)>(v1, v2);
return;
}
private void <init>()
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.util.concurrent.CopyOnWriteArrayList v1;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke v1.<java.util.concurrent.CopyOnWriteArrayList: void <init>()>();
v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners> = v1;
return;
}
public java.lang.Object fire()
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Object v1;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.Object proxy>;
return v1;
}
public void addListener(java.lang.Object)
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Object v1;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Object;
virtualinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: void addListener(java.lang.Object,boolean)>(v1, 1);
return;
}
public void addListener(java.lang.Object, boolean)
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.util.List v4, v6;
java.lang.Object[] v3;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: boolean;
v3 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v1, "listener", v3);
if v2 != 0 goto label1;
v4 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
v5 = interfaceinvoke v4.<java.util.List: boolean contains(java.lang.Object)>(v1);
if v5 != 0 goto label2;
label1:
v6 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v1);
label2:
return;
}
int getListenerCount()
{
int v2;
org.apache.commons.lang3.event.EventListenerSupport v0;
java.util.List v1;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
v2 = interfaceinvoke v1.<java.util.List: int size()>();
return v2;
}
public void removeListener(java.lang.Object)
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.util.List v3;
java.lang.Object[] v2;
java.lang.Object v1;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Object;
v2 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v1, "listener", v2);
v3 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
interfaceinvoke v3.<java.util.List: boolean remove(java.lang.Object)>(v1);
return;
}
public java.lang.Object[] getListeners()
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.util.List v1;
java.lang.Object[] v2, v3;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
v2 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.Object[] prototypeArray>;
v3 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v2);
return v3;
}
private void writeObject(java.io.ObjectOutputStream) throws java.io.IOException
{
java.lang.Object[] v13, v14;
java.io.ByteArrayOutputStream v12, v4;
java.util.Iterator v7;
java.io.IOException v10;
java.util.ArrayList v2;
org.apache.commons.lang3.event.EventListenerSupport v0;
java.util.List v6;
java.io.ObjectOutputStream v1, v11, v3, v5;
java.lang.Object v9;
boolean v8;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.io.ObjectOutputStream;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v3 = new java.io.ObjectOutputStream;
v4 = new java.io.ByteArrayOutputStream;
specialinvoke v4.<java.io.ByteArrayOutputStream: void <init>()>();
specialinvoke v3.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(v4);
v5 = v3;
v6 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners>;
v7 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
label1:
v8 = interfaceinvoke v7.<java.util.Iterator: boolean hasNext()>();
if v8 == 0 goto label5;
v9 = interfaceinvoke v7.<java.util.Iterator: java.lang.Object next()>();
label2:
virtualinvoke v5.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(v9);
virtualinvoke v2.<java.util.ArrayList: boolean add(java.lang.Object)>(v9);
label3:
goto label1;
label4:
v10 := @caughtexception;
v11 = new java.io.ObjectOutputStream;
v12 = new java.io.ByteArrayOutputStream;
specialinvoke v12.<java.io.ByteArrayOutputStream: void <init>()>();
specialinvoke v11.<java.io.ObjectOutputStream: void <init>(java.io.OutputStream)>(v12);
v5 = v11;
goto label1;
label5:
v13 = v0.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.Object[] prototypeArray>;
v14 = virtualinvoke v2.<java.util.ArrayList: java.lang.Object[] toArray(java.lang.Object[])>(v13);
virtualinvoke v1.<java.io.ObjectOutputStream: void writeObject(java.lang.Object)>(v14);
return;
catch java.io.IOException from label2 to label3 with label4;
}
private void readObject(java.io.ObjectInputStream) throws java.io.IOException, java.lang.ClassNotFoundException
{
java.io.ObjectInputStream v1;
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Thread v6;
java.lang.Class v4, v5;
java.lang.Object v2;
java.lang.ClassLoader v7;
java.util.concurrent.CopyOnWriteArrayList v3;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.io.ObjectInputStream;
v2 = virtualinvoke v1.<java.io.ObjectInputStream: java.lang.Object readObject()>();
v3 = new java.util.concurrent.CopyOnWriteArrayList;
specialinvoke v3.<java.util.concurrent.CopyOnWriteArrayList: void <init>(java.lang.Object[])>(v2);
v0.<org.apache.commons.lang3.event.EventListenerSupport: java.util.List listeners> = v3;
v4 = virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v5 = virtualinvoke v4.<java.lang.Class: java.lang.Class getComponentType()>();
v6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v7 = virtualinvoke v6.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
specialinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: void initializeTransientFields(java.lang.Class,java.lang.ClassLoader)>(v5, v7);
return;
}
private void initializeTransientFields(java.lang.Class, java.lang.ClassLoader)
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Class v1;
java.lang.Object v3;
java.lang.ClassLoader v2;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.ClassLoader;
v3 = staticinvoke <java.lang.reflect.Array: java.lang.Object newInstance(java.lang.Class,int)>(v1, 0);
v0.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.Object[] prototypeArray> = v3;
specialinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: void createProxy(java.lang.Class,java.lang.ClassLoader)>(v1, v2);
return;
}
private void createProxy(java.lang.Class, java.lang.ClassLoader)
{
org.apache.commons.lang3.event.EventListenerSupport v0;
java.lang.Class[] v3;
java.lang.Class v1;
java.lang.Object v5, v6;
java.lang.ClassLoader v2;
java.lang.reflect.InvocationHandler v4;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.ClassLoader;
v3 = newarray (java.lang.Class)[1];
v3[0] = v1;
v4 = virtualinvoke v0.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.reflect.InvocationHandler createInvocationHandler()>();
v5 = staticinvoke <java.lang.reflect.Proxy: java.lang.Object newProxyInstance(java.lang.ClassLoader,java.lang.Class[],java.lang.reflect.InvocationHandler)>(v2, v3, v4);
v6 = virtualinvoke v1.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v5);
v0.<org.apache.commons.lang3.event.EventListenerSupport: java.lang.Object proxy> = v6;
return;
}
protected java.lang.reflect.InvocationHandler createInvocationHandler()
{
org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler v1;
org.apache.commons.lang3.event.EventListenerSupport v0;
v0 := @this: org.apache.commons.lang3.event.EventListenerSupport;
v1 = new org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler;
specialinvoke v1.<org.apache.commons.lang3.event.EventListenerSupport$ProxyInvocationHandler: void <init>(org.apache.commons.lang3.event.EventListenerSupport)>(v0);
return v1;
}
}