public final class org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209 extends java.lang.Object implements org.apache.commons.lang3.function.FailableBiPredicate
{
org.apache.commons.lang3.function.FailableBiPredicate cap0;
public static org.apache.commons.lang3.function.FailableBiPredicate bootstrap$(org.apache.commons.lang3.function.FailableBiPredicate)
{
org.apache.commons.lang3.function.FailableBiPredicate v0;
org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209 v1;
v0 := @parameter0: org.apache.commons.lang3.function.FailableBiPredicate;
v1 = new org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209;
specialinvoke v1.<org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209: void <init>(org.apache.commons.lang3.function.FailableBiPredicate)>(v0);
return v1;
}
public void <init>(org.apache.commons.lang3.function.FailableBiPredicate)
{
org.apache.commons.lang3.function.FailableBiPredicate v1;
org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209 v0;
v0 := @this: org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209;
v1 := @parameter0: org.apache.commons.lang3.function.FailableBiPredicate;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209: org.apache.commons.lang3.function.FailableBiPredicate cap0> = v1;
return;
}
public boolean test(java.lang.Object, java.lang.Object)
{
org.apache.commons.lang3.function.FailableBiPredicate v3;
java.lang.Object v1, v2;
org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209 v0;
boolean v4;
v0 := @this: org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = v0.<org.apache.commons.lang3.function.FailableBiPredicate$lambda_negate_3__209: org.apache.commons.lang3.function.FailableBiPredicate cap0>;
v4 = interfaceinvoke v3.<org.apache.commons.lang3.function.FailableBiPredicate: boolean lambda$negate$3(java.lang.Object,java.lang.Object)>(v1, v2);
return v4;
}
}