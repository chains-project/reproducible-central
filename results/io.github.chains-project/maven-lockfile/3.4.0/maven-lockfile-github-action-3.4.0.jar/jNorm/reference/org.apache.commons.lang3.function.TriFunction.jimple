public interface  org.apache.commons.lang3.function.TriFunction extends java.lang.Object
{
public abstract java.lang.Object apply(java.lang.Object, java.lang.Object, java.lang.Object);
public org.apache.commons.lang3.function.TriFunction andThen(java.util.function.Function)
{
org.apache.commons.lang3.function.TriFunction v0, v2;
java.util.function.Function v1;
v0 := @this: org.apache.commons.lang3.function.TriFunction;
v1 := @parameter0: java.util.function.Function;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = staticinvoke <org.apache.commons.lang3.function.TriFunction$lambda_andThen_0__145: org.apache.commons.lang3.function.TriFunction bootstrap$(org.apache.commons.lang3.function.TriFunction,java.util.function.Function)>(v0, v1);
return v2;
}
}