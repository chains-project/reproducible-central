public class org.apache.commons.lang3.text.FormattableUtils extends java.lang.Object
{
private static final java.lang.String SIMPLEST_FORMAT;
public void <init>()
{
org.apache.commons.lang3.text.FormattableUtils v0;
v0 := @this: org.apache.commons.lang3.text.FormattableUtils;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.lang.String toString(java.util.Formattable)
{
java.util.Formattable v0;
java.lang.Object[] v1;
java.lang.String v2;
v0 := @parameter0: java.util.Formattable;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%s", v1);
return v2;
}
public static java.util.Formatter append(java.lang.CharSequence, java.util.Formatter, int, int, int)
{
java.lang.CharSequence v0;
int v2, v3, v4;
java.util.Formatter v1, v5;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.util.Formatter;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = staticinvoke <org.apache.commons.lang3.text.FormattableUtils: java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)>(v0, v1, v2, v3, v4, 32, null);
return v5;
}
public static java.util.Formatter append(java.lang.CharSequence, java.util.Formatter, int, int, int, char)
{
java.lang.CharSequence v0;
int v2, v3, v4;
char v5;
java.util.Formatter v1, v6;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.util.Formatter;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 := @parameter5: char;
v6 = staticinvoke <org.apache.commons.lang3.text.FormattableUtils: java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)>(v0, v1, v2, v3, v4, v5, null);
return v6;
}
public static java.util.Formatter append(java.lang.CharSequence, java.util.Formatter, int, int, int, java.lang.CharSequence)
{
java.lang.CharSequence v0, v5;
int v2, v3, v4;
java.util.Formatter v1, v6;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.util.Formatter;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 := @parameter5: java.lang.CharSequence;
v6 = staticinvoke <org.apache.commons.lang3.text.FormattableUtils: java.util.Formatter append(java.lang.CharSequence,java.util.Formatter,int,int,int,char,java.lang.CharSequence)>(v0, v1, v2, v3, v4, 32, v5);
return v6;
}
public static java.util.Formatter append(java.lang.CharSequence, java.util.Formatter, int, int, int, char, java.lang.CharSequence)
{
java.lang.Object[] v24, v9;
java.lang.Integer v10;
java.util.Formatter v1;
int v12, v14, v15, v16, v18, v2, v21, v22, v3, v4, v7;
java.lang.String v17, v23;
boolean v19, v20, v8;
java.lang.CharSequence v0, v6;
char v5;
java.lang.Object v13;
java.lang.StringBuilder v11;
v0 := @parameter0: java.lang.CharSequence;
v1 := @parameter1: java.util.Formatter;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 := @parameter5: char;
v6 := @parameter6: java.lang.CharSequence;
if v6 == null goto label01;
if v4 < 0 goto label01;
v7 = interfaceinvoke v6.<java.lang.CharSequence: int length()>();
if v7 > v4 goto label02;
label01:
v8 = 1;
goto label03;
label02:
v8 = 0;
label03:
v9 = newarray (java.lang.Object)[2];
v9[0] = v6;
v10 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v4);
v9[1] = v10;
staticinvoke <org.apache.commons.lang3.Validate: void isTrue(boolean,java.lang.String,java.lang.Object[])>(v8, "Specified ellipsis \'%1$s\' exceeds precision of %2$s", v9);
v11 = new java.lang.StringBuilder;
specialinvoke v11.<java.lang.StringBuilder: void <init>(java.lang.CharSequence)>(v0);
if v4 < 0 goto label04;
v12 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
if v4 >= v12 goto label04;
v13 = staticinvoke <org.apache.commons.lang3.ObjectUtils: java.lang.Object defaultIfNull(java.lang.Object,java.lang.Object)>(v6, "");
v14 = interfaceinvoke v13.<java.lang.CharSequence: int length()>();
v15 = v4 - v14;
v16 = interfaceinvoke v0.<java.lang.CharSequence: int length()>();
v17 = virtualinvoke v13.<java.lang.Object: java.lang.String toString()>();
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder replace(int,int,java.lang.String)>(v15, v16, v17);
label04:
v18 = v2 & 1;
if v18 != 1 goto label05;
v19 = 1;
goto label06;
label05:
v19 = 0;
label06:
v20 = v19;
v21 = virtualinvoke v11.<java.lang.StringBuilder: int length()>();
label07:
if v21 >= v3 goto label10;
if v20 == 0 goto label08;
v22 = v21;
goto label09;
label08:
v22 = 0;
label09:
virtualinvoke v11.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,char)>(v22, v5);
v21 = v21 + 1;
goto label07;
label10:
v23 = virtualinvoke v11.<java.lang.StringBuilder: java.lang.String toString()>();
v24 = newarray (java.lang.Object)[0];
virtualinvoke v1.<java.util.Formatter: java.util.Formatter format(java.lang.String,java.lang.Object[])>(v23, v24);
return v1;
}
}