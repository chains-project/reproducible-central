class org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField extends java.lang.Object implements org.apache.commons.lang3.time.FastDatePrinter$NumberRule
{
private final int mField;
void <init>(int)
{
int v1;
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField: int mField> = v1;
return;
}
public int estimateLength()
{
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField;
return 2;
}
public void appendTo(java.lang.Appendable, java.util.Calendar) throws java.io.IOException
{
java.util.Calendar v2;
java.lang.Appendable v1;
int v3, v4;
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField v0;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField;
v1 := @parameter0: java.lang.Appendable;
v2 := @parameter1: java.util.Calendar;
v3 = v0.<org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField: int mField>;
v4 = virtualinvoke v2.<java.util.Calendar: int get(int)>(v3);
virtualinvoke v0.<org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField: void appendTo(java.lang.Appendable,int)>(v1, v4);
return;
}
public final void appendTo(java.lang.Appendable, int) throws java.io.IOException
{
int v2;
org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField v0;
java.lang.Appendable v1;
v0 := @this: org.apache.commons.lang3.time.FastDatePrinter$TwoDigitNumberField;
v1 := @parameter0: java.lang.Appendable;
v2 := @parameter1: int;
if v2 >= 100 goto label1;
staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: void appendDigits(java.lang.Appendable,int)>(v1, v2);
goto label2;
label1:
staticinvoke <org.apache.commons.lang3.time.FastDatePrinter: void appendFullDigits(java.lang.Appendable,int,int)>(v1, v2, 2);
label2:
return;
}
}