abstract class org.apache.commons.lang3.time.FormatCache extends java.lang.Object
{
static final int NONE;
private final java.util.concurrent.ConcurrentMap cInstanceCache;
private static final java.util.concurrent.ConcurrentMap cDateTimeInstanceCache;
void <init>()
{
java.util.concurrent.ConcurrentHashMap v1;
org.apache.commons.lang3.time.FormatCache v0;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v1.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(7);
v0.<org.apache.commons.lang3.time.FormatCache: java.util.concurrent.ConcurrentMap cInstanceCache> = v1;
return;
}
public java.text.Format getInstance()
{
org.apache.commons.lang3.time.FormatCache v0;
java.text.Format v3;
java.util.Locale v2;
java.util.TimeZone v1;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
v1 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
v2 = staticinvoke <java.util.Locale: java.util.Locale getDefault()>();
v3 = virtualinvoke v0.<org.apache.commons.lang3.time.FormatCache: java.text.Format getDateTimeInstance(int,int,java.util.TimeZone,java.util.Locale)>(3, 3, v1, v2);
return v3;
}
public java.text.Format getInstance(java.lang.String, java.util.TimeZone, java.util.Locale)
{
org.apache.commons.lang3.time.FormatCache v0;
java.lang.Object[] v4, v7;
org.apache.commons.lang3.time.FormatCache$ArrayKey v6;
java.util.TimeZone v2;
java.util.concurrent.ConcurrentMap v10, v8;
java.util.Locale v3, v5;
java.lang.Object v11, v9;
java.lang.String v1;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.TimeZone;
v3 := @parameter2: java.util.Locale;
v4 = newarray (java.lang.Object)[0];
staticinvoke <org.apache.commons.lang3.Validate: java.lang.Object notNull(java.lang.Object,java.lang.String,java.lang.Object[])>(v1, "pattern", v4);
if v2 != null goto label1;
v2 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
label1:
v5 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(v3);
v6 = new org.apache.commons.lang3.time.FormatCache$ArrayKey;
v7 = newarray (java.lang.Object)[3];
v7[0] = v1;
v7[1] = v2;
v7[2] = v5;
specialinvoke v6.<org.apache.commons.lang3.time.FormatCache$ArrayKey: void <init>(java.lang.Object[])>(v7);
v8 = v0.<org.apache.commons.lang3.time.FormatCache: java.util.concurrent.ConcurrentMap cInstanceCache>;
v9 = interfaceinvoke v8.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v6);
if v9 != null goto label2;
v9 = virtualinvoke v0.<org.apache.commons.lang3.time.FormatCache: java.text.Format createInstance(java.lang.String,java.util.TimeZone,java.util.Locale)>(v1, v2, v5);
v10 = v0.<org.apache.commons.lang3.time.FormatCache: java.util.concurrent.ConcurrentMap cInstanceCache>;
v11 = interfaceinvoke v10.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v6, v9);
if v11 == null goto label2;
v9 = v11;
label2:
return v9;
}
protected abstract java.text.Format createInstance(java.lang.String, java.util.TimeZone, java.util.Locale);
private java.text.Format getDateTimeInstance(java.lang.Integer, java.lang.Integer, java.util.TimeZone, java.util.Locale)
{
org.apache.commons.lang3.time.FormatCache v0;
java.text.Format v7;
java.util.TimeZone v3;
java.lang.Integer v1, v2;
java.util.Locale v4, v5;
java.lang.String v6;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
v1 := @parameter0: java.lang.Integer;
v2 := @parameter1: java.lang.Integer;
v3 := @parameter2: java.util.TimeZone;
v4 := @parameter3: java.util.Locale;
v5 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(v4);
v6 = staticinvoke <org.apache.commons.lang3.time.FormatCache: java.lang.String getPatternForStyle(java.lang.Integer,java.lang.Integer,java.util.Locale)>(v1, v2, v5);
v7 = virtualinvoke v0.<org.apache.commons.lang3.time.FormatCache: java.text.Format getInstance(java.lang.String,java.util.TimeZone,java.util.Locale)>(v6, v3, v5);
return v7;
}
java.text.Format getDateTimeInstance(int, int, java.util.TimeZone, java.util.Locale)
{
org.apache.commons.lang3.time.FormatCache v0;
java.text.Format v7;
java.util.TimeZone v3;
java.lang.Integer v5, v6;
java.util.Locale v4;
int v1, v2;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 := @parameter2: java.util.TimeZone;
v4 := @parameter3: java.util.Locale;
v5 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v6 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v2);
v7 = specialinvoke v0.<org.apache.commons.lang3.time.FormatCache: java.text.Format getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)>(v5, v6, v3, v4);
return v7;
}
java.text.Format getDateInstance(int, java.util.TimeZone, java.util.Locale)
{
org.apache.commons.lang3.time.FormatCache v0;
java.text.Format v5;
java.util.Locale v3;
java.util.TimeZone v2;
int v1;
java.lang.Integer v4;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
v1 := @parameter0: int;
v2 := @parameter1: java.util.TimeZone;
v3 := @parameter2: java.util.Locale;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5 = specialinvoke v0.<org.apache.commons.lang3.time.FormatCache: java.text.Format getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)>(v4, null, v2, v3);
return v5;
}
java.text.Format getTimeInstance(int, java.util.TimeZone, java.util.Locale)
{
org.apache.commons.lang3.time.FormatCache v0;
java.text.Format v5;
java.util.Locale v3;
java.util.TimeZone v2;
int v1;
java.lang.Integer v4;
v0 := @this: org.apache.commons.lang3.time.FormatCache;
v1 := @parameter0: int;
v2 := @parameter1: java.util.TimeZone;
v3 := @parameter2: java.util.Locale;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v5 = specialinvoke v0.<org.apache.commons.lang3.time.FormatCache: java.text.Format getDateTimeInstance(java.lang.Integer,java.lang.Integer,java.util.TimeZone,java.util.Locale)>(null, v4, v2, v3);
return v5;
}
static java.lang.String getPatternForStyle(java.lang.Integer, java.lang.Integer, java.util.Locale)
{
java.lang.Object[] v5;
org.apache.commons.lang3.time.FormatCache$ArrayKey v4;
java.lang.ClassCastException v15;
java.lang.Integer v0, v1;
java.util.concurrent.ConcurrentMap v13, v6;
java.util.Locale v2, v3;
int v10, v11, v12, v8;
java.lang.String v17;
java.text.DateFormat v9;
java.lang.IllegalArgumentException v16;
java.lang.Object v14, v7;
v0 := @parameter0: java.lang.Integer;
v1 := @parameter1: java.lang.Integer;
v2 := @parameter2: java.util.Locale;
v3 = staticinvoke <org.apache.commons.lang3.LocaleUtils: java.util.Locale toLocale(java.util.Locale)>(v2);
v4 = new org.apache.commons.lang3.time.FormatCache$ArrayKey;
v5 = newarray (java.lang.Object)[3];
v5[0] = v0;
v5[1] = v1;
v5[2] = v3;
specialinvoke v4.<org.apache.commons.lang3.time.FormatCache$ArrayKey: void <init>(java.lang.Object[])>(v5);
v6 = <org.apache.commons.lang3.time.FormatCache: java.util.concurrent.ConcurrentMap cDateTimeInstanceCache>;
v7 = interfaceinvoke v6.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v4);
if v7 != null goto label7;
label1:
if v0 != null goto label2;
v8 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getTimeInstance(int,java.util.Locale)>(v8, v3);
goto label4;
label2:
if v1 != null goto label3;
v10 = virtualinvoke v0.<java.lang.Integer: int intValue()>();
v9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateInstance(int,java.util.Locale)>(v10, v3);
goto label4;
label3:
v11 = virtualinvoke v0.<java.lang.Integer: int intValue()>();
v12 = virtualinvoke v1.<java.lang.Integer: int intValue()>();
v9 = staticinvoke <java.text.DateFormat: java.text.DateFormat getDateTimeInstance(int,int,java.util.Locale)>(v11, v12, v3);
label4:
v7 = virtualinvoke v9.<java.text.SimpleDateFormat: java.lang.String toPattern()>();
v13 = <org.apache.commons.lang3.time.FormatCache: java.util.concurrent.ConcurrentMap cDateTimeInstanceCache>;
v14 = interfaceinvoke v13.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v4, v7);
if v14 == null goto label7;
v7 = v14;
label5:
goto label7;
label6:
v15 := @caughtexception;
v16 = new java.lang.IllegalArgumentException;
v17 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.util.Locale)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("No date time pattern for locale: \u0001");
specialinvoke v16.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v17);
throw v16;
label7:
return v7;
catch java.lang.ClassCastException from label1 to label5 with label6;
}
static void <clinit>()
{
java.util.concurrent.ConcurrentHashMap v0;
v0 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v0.<java.util.concurrent.ConcurrentHashMap: void <init>(int)>(7);
<org.apache.commons.lang3.time.FormatCache: java.util.concurrent.ConcurrentMap cDateTimeInstanceCache> = v0;
return;
}
}