public final class org.apache.commons.lang3.tuple.ImmutablePair extends org.apache.commons.lang3.tuple.Pair
{
public static final org.apache.commons.lang3.tuple.ImmutablePair[] EMPTY_ARRAY;
private static final org.apache.commons.lang3.tuple.ImmutablePair NULL;
private static final long serialVersionUID;
public final java.lang.Object left;
public final java.lang.Object right;
public static org.apache.commons.lang3.tuple.ImmutablePair[] emptyArray()
{
org.apache.commons.lang3.tuple.ImmutablePair[] v0;
v0 = <org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair[] EMPTY_ARRAY>;
return v0;
}
public static org.apache.commons.lang3.tuple.Pair left(java.lang.Object)
{
java.lang.Object v0;
org.apache.commons.lang3.tuple.ImmutablePair v1;
v0 := @parameter0: java.lang.Object;
v1 = staticinvoke <org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object,java.lang.Object)>(v0, null);
return v1;
}
public static org.apache.commons.lang3.tuple.ImmutablePair nullPair()
{
org.apache.commons.lang3.tuple.ImmutablePair v0;
v0 = <org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair NULL>;
return v0;
}
public static org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object, java.lang.Object)
{
java.lang.Object v0, v1;
org.apache.commons.lang3.tuple.ImmutablePair v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 = new org.apache.commons.lang3.tuple.ImmutablePair;
specialinvoke v2.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(v0, v1);
return v2;
}
public static org.apache.commons.lang3.tuple.ImmutablePair of(java.util.Map$Entry)
{
java.util.Map$Entry v0;
java.lang.Object v1, v2;
org.apache.commons.lang3.tuple.ImmutablePair v3;
v0 := @parameter0: java.util.Map$Entry;
if v0 == null goto label1;
v1 = interfaceinvoke v0.<java.util.Map$Entry: java.lang.Object getKey()>();
v2 = interfaceinvoke v0.<java.util.Map$Entry: java.lang.Object getValue()>();
goto label2;
label1:
v1 = null;
v2 = null;
label2:
v3 = new org.apache.commons.lang3.tuple.ImmutablePair;
specialinvoke v3.<org.apache.commons.lang3.tuple.ImmutablePair: void <init>(java.lang.Object,java.lang.Object)>(v1, v2);
return v3;
}
public static org.apache.commons.lang3.tuple.Pair right(java.lang.Object)
{
java.lang.Object v0;
org.apache.commons.lang3.tuple.ImmutablePair v1;
v0 := @parameter0: java.lang.Object;
v1 = staticinvoke <org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object,java.lang.Object)>(null, v0);
return v1;
}
public void <init>(java.lang.Object, java.lang.Object)
{
java.lang.Object v1, v2;
org.apache.commons.lang3.tuple.ImmutablePair v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutablePair;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
specialinvoke v0.<org.apache.commons.lang3.tuple.Pair: void <init>()>();
v0.<org.apache.commons.lang3.tuple.ImmutablePair: java.lang.Object left> = v1;
v0.<org.apache.commons.lang3.tuple.ImmutablePair: java.lang.Object right> = v2;
return;
}
public java.lang.Object getLeft()
{
java.lang.Object v1;
org.apache.commons.lang3.tuple.ImmutablePair v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutablePair;
v1 = v0.<org.apache.commons.lang3.tuple.ImmutablePair: java.lang.Object left>;
return v1;
}
public java.lang.Object getRight()
{
java.lang.Object v1;
org.apache.commons.lang3.tuple.ImmutablePair v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutablePair;
v1 = v0.<org.apache.commons.lang3.tuple.ImmutablePair: java.lang.Object right>;
return v1;
}
public java.lang.Object setValue(java.lang.Object)
{
java.lang.UnsupportedOperationException v2;
java.lang.Object v1;
org.apache.commons.lang3.tuple.ImmutablePair v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutablePair;
v1 := @parameter0: java.lang.Object;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>()>();
throw v2;
}
static void <clinit>()
{
org.apache.commons.lang3.tuple.ImmutablePair[] v0;
org.apache.commons.lang3.tuple.ImmutablePair v1;
v0 = newarray (org.apache.commons.lang3.tuple.ImmutablePair)[0];
<org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair[] EMPTY_ARRAY> = v0;
v1 = staticinvoke <org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair of(java.lang.Object,java.lang.Object)>(null, null);
<org.apache.commons.lang3.tuple.ImmutablePair: org.apache.commons.lang3.tuple.ImmutablePair NULL> = v1;
return;
}
}