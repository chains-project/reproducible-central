public final class org.apache.commons.lang3.tuple.ImmutableTriple extends org.apache.commons.lang3.tuple.Triple
{
public static final org.apache.commons.lang3.tuple.ImmutableTriple[] EMPTY_ARRAY;
private static final org.apache.commons.lang3.tuple.ImmutableTriple NULL;
private static final long serialVersionUID;
public final java.lang.Object left;
public final java.lang.Object middle;
public final java.lang.Object right;
public static org.apache.commons.lang3.tuple.ImmutableTriple[] emptyArray()
{
org.apache.commons.lang3.tuple.ImmutableTriple[] v0;
v0 = <org.apache.commons.lang3.tuple.ImmutableTriple: org.apache.commons.lang3.tuple.ImmutableTriple[] EMPTY_ARRAY>;
return v0;
}
public static org.apache.commons.lang3.tuple.ImmutableTriple nullTriple()
{
org.apache.commons.lang3.tuple.ImmutableTriple v0;
v0 = <org.apache.commons.lang3.tuple.ImmutableTriple: org.apache.commons.lang3.tuple.ImmutableTriple NULL>;
return v0;
}
public static org.apache.commons.lang3.tuple.ImmutableTriple of(java.lang.Object, java.lang.Object, java.lang.Object)
{
org.apache.commons.lang3.tuple.ImmutableTriple v3;
java.lang.Object v0, v1, v2;
v0 := @parameter0: java.lang.Object;
v1 := @parameter1: java.lang.Object;
v2 := @parameter2: java.lang.Object;
v3 = new org.apache.commons.lang3.tuple.ImmutableTriple;
specialinvoke v3.<org.apache.commons.lang3.tuple.ImmutableTriple: void <init>(java.lang.Object,java.lang.Object,java.lang.Object)>(v0, v1, v2);
return v3;
}
public void <init>(java.lang.Object, java.lang.Object, java.lang.Object)
{
org.apache.commons.lang3.tuple.ImmutableTriple v0;
java.lang.Object v1, v2, v3;
v0 := @this: org.apache.commons.lang3.tuple.ImmutableTriple;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 := @parameter2: java.lang.Object;
specialinvoke v0.<org.apache.commons.lang3.tuple.Triple: void <init>()>();
v0.<org.apache.commons.lang3.tuple.ImmutableTriple: java.lang.Object left> = v1;
v0.<org.apache.commons.lang3.tuple.ImmutableTriple: java.lang.Object middle> = v2;
v0.<org.apache.commons.lang3.tuple.ImmutableTriple: java.lang.Object right> = v3;
return;
}
public java.lang.Object getLeft()
{
java.lang.Object v1;
org.apache.commons.lang3.tuple.ImmutableTriple v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutableTriple;
v1 = v0.<org.apache.commons.lang3.tuple.ImmutableTriple: java.lang.Object left>;
return v1;
}
public java.lang.Object getMiddle()
{
java.lang.Object v1;
org.apache.commons.lang3.tuple.ImmutableTriple v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutableTriple;
v1 = v0.<org.apache.commons.lang3.tuple.ImmutableTriple: java.lang.Object middle>;
return v1;
}
public java.lang.Object getRight()
{
java.lang.Object v1;
org.apache.commons.lang3.tuple.ImmutableTriple v0;
v0 := @this: org.apache.commons.lang3.tuple.ImmutableTriple;
v1 = v0.<org.apache.commons.lang3.tuple.ImmutableTriple: java.lang.Object right>;
return v1;
}
static void <clinit>()
{
org.apache.commons.lang3.tuple.ImmutableTriple v1;
org.apache.commons.lang3.tuple.ImmutableTriple[] v0;
v0 = newarray (org.apache.commons.lang3.tuple.ImmutableTriple)[0];
<org.apache.commons.lang3.tuple.ImmutableTriple: org.apache.commons.lang3.tuple.ImmutableTriple[] EMPTY_ARRAY> = v0;
v1 = staticinvoke <org.apache.commons.lang3.tuple.ImmutableTriple: org.apache.commons.lang3.tuple.ImmutableTriple of(java.lang.Object,java.lang.Object,java.lang.Object)>(null, null, null);
<org.apache.commons.lang3.tuple.ImmutableTriple: org.apache.commons.lang3.tuple.ImmutableTriple NULL> = v1;
return;
}
}