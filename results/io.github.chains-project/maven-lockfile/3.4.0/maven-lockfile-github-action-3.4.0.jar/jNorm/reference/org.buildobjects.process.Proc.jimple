class org.buildobjects.process.Proc extends java.lang.Object implements org.buildobjects.process.EventSink
{
private final java.lang.Process process;
private int exitValue;
private long executionTime;
private final org.buildobjects.process.OutputConsumptionThread err;
private final java.lang.String command;
private final java.util.List args;
private final java.lang.Long timeout;
private final java.util.concurrent.BlockingQueue eventQueue;
private final org.buildobjects.process.IoHandler ioHandler;
public void <init>(java.lang.String, java.util.List, java.util.Map, boolean, java.io.InputStream, java.lang.Object, java.io.File, java.lang.Long, java.lang.Object) throws org.buildobjects.process.StartupException, org.buildobjects.process.TimeoutException, org.buildobjects.process.ExternalProcessFailureException
{
java.lang.IllegalStateException v40;
org.buildobjects.process.StartupException v25;
java.lang.Long v8;
java.util.Map v15, v16, v3;
boolean v39, v4;
java.lang.Process v17, v23;
java.util.concurrent.BlockingQueue v28, v31;
java.util.concurrent.LinkedBlockingQueue v10;
java.util.List v2, v38;
org.buildobjects.process.OutputConsumptionThread v18, v20, v22;
java.lang.String[] v11;
long v12, v32, v42, v43;
org.buildobjects.process.ExecutionEvent v34, v35;
java.lang.ProcessBuilder v13, v14;
java.lang.String v1, v26, v27;
org.buildobjects.process.Proc v0;
java.io.IOException v24;
java.lang.RuntimeException v36, v45;
java.io.File v7;
java.util.concurrent.TimeUnit v29, v33;
org.buildobjects.process.ByteArrayConsumptionThread v19;
java.lang.InterruptedException v44;
org.buildobjects.process.IoHandler v21, v37;
java.lang.Object v30, v41, v6, v9;
java.io.InputStream v5;
v0 := @this: org.buildobjects.process.Proc;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.List;
v3 := @parameter2: java.util.Map;
v4 := @parameter3: boolean;
v5 := @parameter4: java.io.InputStream;
v6 := @parameter5: java.lang.Object;
v7 := @parameter6: java.io.File;
v8 := @parameter7: java.lang.Long;
v9 := @parameter8: java.lang.Object;
specialinvoke v0.<java.lang.Object: void <init>()>();
v10 = new java.util.concurrent.LinkedBlockingQueue;
specialinvoke v10.<java.util.concurrent.LinkedBlockingQueue: void <init>()>();
v0.<org.buildobjects.process.Proc: java.util.concurrent.BlockingQueue eventQueue> = v10;
v0.<org.buildobjects.process.Proc: java.lang.String command> = v1;
v0.<org.buildobjects.process.Proc: java.util.List args> = v2;
v0.<org.buildobjects.process.Proc: java.lang.Long timeout> = v8;
v11 = specialinvoke v0.<org.buildobjects.process.Proc: java.lang.String[] concatenateCmdArgs()>();
v12 = staticinvoke <java.lang.System: long currentTimeMillis()>();
label01:
v13 = new java.lang.ProcessBuilder;
specialinvoke v13.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(v11);
v14 = virtualinvoke v13.<java.lang.ProcessBuilder: java.lang.ProcessBuilder directory(java.io.File)>(v7);
if v4 == 0 goto label02;
v15 = virtualinvoke v14.<java.lang.ProcessBuilder: java.util.Map environment()>();
interfaceinvoke v15.<java.util.Map: void clear()>();
label02:
v16 = virtualinvoke v14.<java.lang.ProcessBuilder: java.util.Map environment()>();
interfaceinvoke v16.<java.util.Map: void putAll(java.util.Map)>(v3);
v17 = virtualinvoke v14.<java.lang.ProcessBuilder: java.lang.Process start()>();
v0.<org.buildobjects.process.Proc: java.lang.Process process> = v17;
v18 = specialinvoke v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread createStreamConsumer(java.lang.Object)>(v6);
if v9 != null goto label03;
v19 = new org.buildobjects.process.ByteArrayConsumptionThread;
specialinvoke v19.<org.buildobjects.process.ByteArrayConsumptionThread: void <init>(org.buildobjects.process.EventSink)>(v0);
v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread err> = v19;
goto label04;
label03:
v20 = specialinvoke v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread createStreamConsumer(java.lang.Object)>(v9);
v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread err> = v20;
label04:
v21 = new org.buildobjects.process.IoHandler;
v22 = v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread err>;
v23 = v0.<org.buildobjects.process.Proc: java.lang.Process process>;
specialinvoke v21.<org.buildobjects.process.IoHandler: void <init>(java.io.InputStream,org.buildobjects.process.OutputConsumptionThread,org.buildobjects.process.OutputConsumptionThread,java.lang.Process)>(v5, v18, v22, v23);
v0.<org.buildobjects.process.Proc: org.buildobjects.process.IoHandler ioHandler> = v21;
label05:
goto label07;
label06:
v24 := @caughtexception;
v25 = new org.buildobjects.process.StartupException;
v26 = virtualinvoke v0.<org.buildobjects.process.Proc: java.lang.String toString()>();
v27 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v26) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Could not startup process \'\u0001\'.");
specialinvoke v25.<org.buildobjects.process.StartupException: void <init>(java.lang.String,java.lang.Throwable)>(v27, v24);
throw v25;
label07:
specialinvoke v0.<org.buildobjects.process.Proc: void startControlThread()>();
if v8 != null goto label08;
v28 = v0.<org.buildobjects.process.Proc: java.util.concurrent.BlockingQueue eventQueue>;
v29 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit HOURS>;
v30 = interfaceinvoke v28.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(2147483647L, v29);
goto label09;
label08:
v31 = v0.<org.buildobjects.process.Proc: java.util.concurrent.BlockingQueue eventQueue>;
v32 = virtualinvoke v8.<java.lang.Long: long longValue()>();
v33 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit MILLISECONDS>;
interfaceinvoke v31.<java.util.concurrent.BlockingQueue: java.lang.Object poll(long,java.util.concurrent.TimeUnit)>(v32, v33);
label09:
if v30 != null goto label10;
specialinvoke v0.<org.buildobjects.process.Proc: void killCleanUpAndThrowTimeoutException()>();
label10:
v34 = <org.buildobjects.process.ExecutionEvent: org.buildobjects.process.ExecutionEvent PROCESS_EXITED>;
if v30 == v34 goto label12;
v35 = <org.buildobjects.process.ExecutionEvent: org.buildobjects.process.ExecutionEvent EXCEPTION_IN_STREAM_HANDLING>;
if v30 != v35 goto label11;
specialinvoke v0.<org.buildobjects.process.Proc: void killProcessCleanup()>();
goto label12;
label11:
v36 = new java.lang.RuntimeException;
specialinvoke v36.<java.lang.RuntimeException: void <init>(java.lang.String)>("Felix reckons we should never reach this point");
throw v36;
label12:
v37 = v0.<org.buildobjects.process.Proc: org.buildobjects.process.IoHandler ioHandler>;
v38 = virtualinvoke v37.<org.buildobjects.process.IoHandler: java.util.List joinConsumption()>();
v39 = interfaceinvoke v38.<java.util.List: boolean isEmpty()>();
if v39 != 0 goto label13;
v40 = new java.lang.IllegalStateException;
v41 = interfaceinvoke v38.<java.util.List: java.lang.Object get(int)>(0);
specialinvoke v40.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("Exception in stream consumption", v41);
throw v40;
label13:
v42 = staticinvoke <java.lang.System: long currentTimeMillis()>();
v43 = v42 - v12;
v0.<org.buildobjects.process.Proc: long executionTime> = v43;
label14:
goto label16;
label15:
v44 := @caughtexception;
specialinvoke v0.<org.buildobjects.process.Proc: void killProcessCleanup()>();
v45 = new java.lang.RuntimeException;
specialinvoke v45.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("Control Thread was interrupted killed process.", v44);
throw v45;
label16:
return;
catch java.io.IOException from label01 to label05 with label06;
catch java.lang.InterruptedException from label07 to label14 with label15;
}
private org.buildobjects.process.OutputConsumptionThread createStreamConsumer(java.lang.Object)
{
org.buildobjects.process.StreamConsumerConsumptionThread v5;
org.buildobjects.process.Proc v0;
java.lang.Object v1;
java.lang.RuntimeException v6;
org.buildobjects.process.StreamCopyConsumptionThread v3;
boolean v2, v4;
v0 := @this: org.buildobjects.process.Proc;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.io.OutputStream;
if v2 == 0 goto label1;
v3 = new org.buildobjects.process.StreamCopyConsumptionThread;
specialinvoke v3.<org.buildobjects.process.StreamCopyConsumptionThread: void <init>(java.io.OutputStream,org.buildobjects.process.EventSink)>(v1, v0);
return v3;
label1:
v4 = v1 instanceof org.buildobjects.process.StreamConsumer;
if v4 == 0 goto label2;
v5 = new org.buildobjects.process.StreamConsumerConsumptionThread;
specialinvoke v5.<org.buildobjects.process.StreamConsumerConsumptionThread: void <init>(org.buildobjects.process.EventSink,org.buildobjects.process.StreamConsumer)>(v0, v1);
return v5;
label2:
v6 = new java.lang.RuntimeException;
specialinvoke v6.<java.lang.RuntimeException: void <init>(java.lang.String)>("Badness, badness");
throw v6;
}
byte[] getErrorBytes()
{
byte[] v4;
org.buildobjects.process.OutputConsumptionThread v1, v3;
org.buildobjects.process.Proc v0;
boolean v2;
v0 := @this: org.buildobjects.process.Proc;
v1 = v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread err>;
v2 = v1 instanceof org.buildobjects.process.ByteArrayConsumptionThread;
if v2 == 0 goto label1;
v3 = v0.<org.buildobjects.process.Proc: org.buildobjects.process.OutputConsumptionThread err>;
v4 = virtualinvoke v3.<org.buildobjects.process.ByteArrayConsumptionThread: byte[] getBytes()>();
return v4;
label1:
return null;
}
public java.lang.String getErrorString()
{
byte[] v1;
java.nio.charset.Charset v3;
org.buildobjects.process.Proc v0;
java.lang.String v2;
v0 := @this: org.buildobjects.process.Proc;
v1 = virtualinvoke v0.<org.buildobjects.process.Proc: byte[] getErrorBytes()>();
if v1 == null goto label1;
v2 = new java.lang.String;
v3 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v2.<java.lang.String: void <init>(byte[],java.nio.charset.Charset)>(v1, v3);
goto label2;
label1:
v2 = null;
label2:
return v2;
}
private void startControlThread()
{
org.buildobjects.process.Proc v0;
org.buildobjects.process.Proc$1 v2;
java.lang.Thread v1;
v0 := @this: org.buildobjects.process.Proc;
v1 = new java.lang.Thread;
v2 = new org.buildobjects.process.Proc$1;
specialinvoke v2.<org.buildobjects.process.Proc$1: void <init>(org.buildobjects.process.Proc)>(v0);
specialinvoke v1.<java.lang.Thread: void <init>(java.lang.Runnable)>(v2);
virtualinvoke v1.<java.lang.Thread: void start()>();
return;
}
private void killCleanUpAndThrowTimeoutException()
{
java.lang.Process v1;
java.lang.Long v5;
org.buildobjects.process.Proc v0;
org.buildobjects.process.IoHandler v2;
long v6;
org.buildobjects.process.TimeoutException v3;
java.lang.String v4;
v0 := @this: org.buildobjects.process.Proc;
v1 = v0.<org.buildobjects.process.Proc: java.lang.Process process>;
virtualinvoke v1.<java.lang.Process: void destroy()>();
v2 = v0.<org.buildobjects.process.Proc: org.buildobjects.process.IoHandler ioHandler>;
virtualinvoke v2.<org.buildobjects.process.IoHandler: void cancelConsumption()>();
v3 = new org.buildobjects.process.TimeoutException;
v4 = virtualinvoke v0.<org.buildobjects.process.Proc: java.lang.String toString()>();
v5 = v0.<org.buildobjects.process.Proc: java.lang.Long timeout>;
v6 = virtualinvoke v5.<java.lang.Long: long longValue()>();
specialinvoke v3.<org.buildobjects.process.TimeoutException: void <init>(java.lang.String,long)>(v4, v6);
throw v3;
}
private void killProcessCleanup()
{
org.buildobjects.process.Proc v0;
org.buildobjects.process.IoHandler v2;
java.lang.Process v1;
v0 := @this: org.buildobjects.process.Proc;
v1 = v0.<org.buildobjects.process.Proc: java.lang.Process process>;
virtualinvoke v1.<java.lang.Process: void destroy()>();
v2 = v0.<org.buildobjects.process.Proc: org.buildobjects.process.IoHandler ioHandler>;
virtualinvoke v2.<org.buildobjects.process.IoHandler: void cancelConsumption()>();
return;
}
public void dispatch(org.buildobjects.process.ExecutionEvent)
{
java.lang.InterruptedException v3;
org.buildobjects.process.Proc v0;
java.util.concurrent.BlockingQueue v2;
org.buildobjects.process.ExecutionEvent v1;
java.lang.RuntimeException v4;
v0 := @this: org.buildobjects.process.Proc;
v1 := @parameter0: org.buildobjects.process.ExecutionEvent;
label1:
v2 = v0.<org.buildobjects.process.Proc: java.util.concurrent.BlockingQueue eventQueue>;
interfaceinvoke v2.<java.util.concurrent.BlockingQueue: void put(java.lang.Object)>(v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new java.lang.RuntimeException;
specialinvoke v4.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>("${END}", v3);
throw v4;
label4:
return;
catch java.lang.InterruptedException from label1 to label2 with label3;
}
private java.lang.String[] concatenateCmdArgs()
{
java.util.List v3;
java.lang.Object[] v6;
int v4;
org.buildobjects.process.Proc v0;
java.lang.String[] v5;
java.lang.String v2;
java.util.ArrayList v1;
v0 := @this: org.buildobjects.process.Proc;
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v2 = v0.<org.buildobjects.process.Proc: java.lang.String command>;
interfaceinvoke v1.<java.util.List: boolean add(java.lang.Object)>(v2);
v3 = v0.<org.buildobjects.process.Proc: java.util.List args>;
interfaceinvoke v1.<java.util.List: boolean addAll(java.util.Collection)>(v3);
v4 = interfaceinvoke v1.<java.util.List: int size()>();
v5 = newarray (java.lang.String)[v4];
v6 = interfaceinvoke v1.<java.util.List: java.lang.Object[] toArray(java.lang.Object[])>(v5);
return v6;
}
public java.lang.String toString()
{
java.util.List v2;
org.buildobjects.process.Proc v0;
java.lang.String v1, v3;
v0 := @this: org.buildobjects.process.Proc;
v1 = v0.<org.buildobjects.process.Proc: java.lang.String command>;
v2 = v0.<org.buildobjects.process.Proc: java.util.List args>;
v3 = staticinvoke <org.buildobjects.process.Proc: java.lang.String formatCommandLine(java.lang.String,java.util.List)>(v1, v2);
return v3;
}
static java.lang.String formatCommandLine(java.lang.String, java.util.List)
{
java.util.List v1;
java.lang.String v0, v2, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.util.List;
v2 = staticinvoke <org.buildobjects.process.Proc: java.lang.String argsString(java.util.List)>(v1);
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v0, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 \u0001");
return v3;
}
private static java.lang.String argsString(java.util.List)
{
java.util.Iterator v2;
java.util.List v0;
java.lang.StringBuffer v1;
java.lang.Object v4;
java.lang.String v5, v7;
boolean v3, v6;
v0 := @parameter0: java.util.List;
v1 = new java.lang.StringBuffer;
specialinvoke v1.<java.lang.StringBuffer: void <init>()>();
v2 = interfaceinvoke v0.<java.util.List: java.util.Iterator iterator()>();
label1:
v3 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<java.util.Iterator: java.lang.Object next()>();
v5 = staticinvoke <org.buildobjects.process.Proc: java.lang.String naiveShellEscape(java.lang.String)>(v4);
virtualinvoke v1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(v5);
v6 = interfaceinvoke v2.<java.util.Iterator: boolean hasNext()>();
if v6 == 0 goto label1;
virtualinvoke v1.<java.lang.StringBuffer: java.lang.StringBuffer append(java.lang.String)>(" ");
goto label1;
label2:
v7 = virtualinvoke v1.<java.lang.StringBuffer: java.lang.String toString()>();
return v7;
}
private static java.lang.String naiveShellEscape(java.lang.String)
{
java.util.regex.Matcher v2;
java.lang.String v0, v4, v5;
java.util.regex.Pattern v1;
boolean v3;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\s");
v2 = virtualinvoke v1.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v3 = virtualinvoke v2.<java.util.regex.Matcher: boolean find()>();
if v3 == 0 goto label1;
v4 = virtualinvoke v0.<java.lang.String: java.lang.String replaceAll(java.lang.String,java.lang.String)>("\'", "\'\"\'\"\'");
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\'\u0001\'");
goto label2;
label1:
v5 = v0;
label2:
return v5;
}
public int getExitValue()
{
int v1;
org.buildobjects.process.Proc v0;
v0 := @this: org.buildobjects.process.Proc;
v1 = v0.<org.buildobjects.process.Proc: int exitValue>;
return v1;
}
public long getExecutionTime()
{
org.buildobjects.process.Proc v0;
long v1;
v0 := @this: org.buildobjects.process.Proc;
v1 = v0.<org.buildobjects.process.Proc: long executionTime>;
return v1;
}
}