public interface  org.eclipse.microprofile.context.ManagedExecutor extends java.lang.Object implements java.util.concurrent.ExecutorService
{
public static org.eclipse.microprofile.context.ManagedExecutor$Builder builder()
{
org.eclipse.microprofile.context.ManagedExecutor$Builder v2;
org.eclipse.microprofile.context.spi.ContextManager v1;
org.eclipse.microprofile.context.spi.ContextManagerProvider v0;
v0 = staticinvoke <org.eclipse.microprofile.context.spi.ContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManagerProvider instance()>();
v1 = interfaceinvoke v0.<org.eclipse.microprofile.context.spi.ContextManagerProvider: org.eclipse.microprofile.context.spi.ContextManager getContextManager()>();
v2 = interfaceinvoke v1.<org.eclipse.microprofile.context.spi.ContextManager: org.eclipse.microprofile.context.ManagedExecutor$Builder newManagedExecutorBuilder()>();
return v2;
}
public abstract java.util.concurrent.CompletableFuture completedFuture(java.lang.Object);
public abstract java.util.concurrent.CompletionStage completedStage(java.lang.Object);
public abstract java.util.concurrent.CompletableFuture failedFuture(java.lang.Throwable);
public abstract java.util.concurrent.CompletionStage failedStage(java.lang.Throwable);
public abstract java.util.concurrent.CompletableFuture newIncompleteFuture();
public abstract java.util.concurrent.CompletableFuture runAsync(java.lang.Runnable);
public abstract java.util.concurrent.CompletableFuture supplyAsync(java.util.function.Supplier);
public abstract java.util.concurrent.CompletableFuture copy(java.util.concurrent.CompletableFuture);
public abstract java.util.concurrent.CompletionStage copy(java.util.concurrent.CompletionStage);
public abstract org.eclipse.microprofile.context.ThreadContext getThreadContext();
}