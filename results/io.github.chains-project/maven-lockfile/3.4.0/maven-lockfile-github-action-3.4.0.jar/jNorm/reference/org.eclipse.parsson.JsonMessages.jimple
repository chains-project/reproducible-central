final class org.eclipse.parsson.JsonMessages extends java.lang.Object
{
private static final java.util.ResourceBundle BUNDLE;
void <init>()
{
org.eclipse.parsson.JsonMessages v0;
v0 := @this: org.eclipse.parsson.JsonMessages;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static java.lang.String INTERNAL_ERROR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("internal.error", v0);
return v1;
}
static java.lang.String TOKENIZER_UNEXPECTED_CHAR(int, jakarta.json.stream.JsonLocation)
{
jakarta.json.stream.JsonLocation v1;
java.lang.Object[] v2;
int v0;
java.lang.String v4;
java.lang.Integer v3;
v0 := @parameter0: int;
v1 := @parameter1: jakarta.json.stream.JsonLocation;
v2 = newarray (java.lang.Object)[2];
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v2[0] = v3;
v2[1] = v1;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("tokenizer.unexpected.char", v2);
return v4;
}
static java.lang.String TOKENIZER_EXPECTED_CHAR(int, jakarta.json.stream.JsonLocation, char)
{
jakarta.json.stream.JsonLocation v1;
java.lang.Object[] v3;
java.lang.Character v5;
int v0;
char v2;
java.lang.String v6;
java.lang.Integer v4;
v0 := @parameter0: int;
v1 := @parameter1: jakarta.json.stream.JsonLocation;
v2 := @parameter2: char;
v3 = newarray (java.lang.Object)[3];
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v3[0] = v4;
v3[1] = v1;
v5 = staticinvoke <java.lang.Character: java.lang.Character valueOf(char)>(v2);
v3[2] = v5;
v6 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("tokenizer.expected.char", v3);
return v6;
}
static java.lang.String TOKENIZER_IO_ERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("tokenizer.io.err", v0);
return v1;
}
static java.lang.String PARSER_GETSTRING_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getString.err", v1);
return v2;
}
static java.lang.String PARSER_ISINTEGRALNUMBER_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.isIntegralNumber.err", v1);
return v2;
}
static java.lang.String PARSER_GETINT_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getInt.err", v1);
return v2;
}
static java.lang.String PARSER_GETLONG_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getLong.err", v1);
return v2;
}
static java.lang.String PARSER_GETBIGDECIMAL_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getBigDecimal.err", v1);
return v2;
}
static java.lang.String PARSER_GETARRAY_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getArray.err", v1);
return v2;
}
static java.lang.String PARSER_GETOBJECT_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getObject.err", v1);
return v2;
}
static java.lang.String PARSER_GETVALUE_ERR(jakarta.json.stream.JsonParser$Event)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.stream.JsonParser$Event v0;
v0 := @parameter0: jakarta.json.stream.JsonParser$Event;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getValue.err", v1);
return v2;
}
static java.lang.String PARSER_GETVALUESTREAM_ERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.getValueStream.err", v0);
return v1;
}
static java.lang.String PARSER_EXPECTED_EOF(org.eclipse.parsson.JsonTokenizer$JsonToken)
{
java.lang.Object[] v1;
java.lang.String v2;
org.eclipse.parsson.JsonTokenizer$JsonToken v0;
v0 := @parameter0: org.eclipse.parsson.JsonTokenizer$JsonToken;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.expected.eof", v1);
return v2;
}
static java.lang.String PARSER_TOKENIZER_CLOSE_IO()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.tokenizer.close.io", v0);
return v1;
}
static java.lang.String PARSER_INVALID_TOKEN(org.eclipse.parsson.JsonTokenizer$JsonToken, jakarta.json.stream.JsonLocation, java.lang.String)
{
jakarta.json.stream.JsonLocation v1;
java.lang.Object[] v3;
org.eclipse.parsson.JsonTokenizer$JsonToken v0;
java.lang.String v2, v4;
v0 := @parameter0: org.eclipse.parsson.JsonTokenizer$JsonToken;
v1 := @parameter1: jakarta.json.stream.JsonLocation;
v2 := @parameter2: java.lang.String;
v3 = newarray (java.lang.Object)[3];
v3[0] = v0;
v3[1] = v1;
v3[2] = v2;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.invalid.token", v3);
return v4;
}
static java.lang.String PARSER_STATE_ERR(jakarta.json.JsonValue$ValueType)
{
jakarta.json.JsonValue$ValueType v0;
java.lang.Object[] v1;
java.lang.String v2;
v0 := @parameter0: jakarta.json.JsonValue$ValueType;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.state.err", v1);
return v2;
}
static java.lang.String PARSER_SCOPE_ERR(jakarta.json.JsonValue)
{
java.lang.Object[] v1;
java.lang.String v2;
jakarta.json.JsonValue v0;
v0 := @parameter0: jakarta.json.JsonValue;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.scope.err", v1);
return v2;
}
static java.lang.String PARSER_INPUT_ENC_DETECT_FAILED()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.input.enc.detect.failed", v0);
return v1;
}
static java.lang.String PARSER_INPUT_ENC_DETECT_IOERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.input.enc.detect.ioerr", v0);
return v1;
}
static java.lang.String DUPLICATE_KEY(java.lang.String)
{
java.lang.Object[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("parser.duplicate.key", v1);
return v2;
}
static java.lang.String GENERATOR_FLUSH_IO_ERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.flush.io.err", v0);
return v1;
}
static java.lang.String GENERATOR_CLOSE_IO_ERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.close.io.err", v0);
return v1;
}
static java.lang.String GENERATOR_WRITE_IO_ERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.write.io.err", v0);
return v1;
}
static java.lang.String GENERATOR_ILLEGAL_METHOD(java.lang.Object)
{
java.lang.Object v0;
java.lang.Object[] v1;
java.lang.String v2;
v0 := @parameter0: java.lang.Object;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.illegal.method", v1);
return v2;
}
static java.lang.String GENERATOR_DOUBLE_INFINITE_NAN()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.double.infinite.nan", v0);
return v1;
}
static java.lang.String GENERATOR_INCOMPLETE_JSON()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.incomplete.json", v0);
return v1;
}
static java.lang.String GENERATOR_ILLEGAL_MULTIPLE_TEXT()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("generator.illegal.multiple.text", v0);
return v1;
}
static java.lang.String WRITER_WRITE_ALREADY_CALLED()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("writer.write.already.called", v0);
return v1;
}
static java.lang.String READER_READ_ALREADY_CALLED()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("reader.read.already.called", v0);
return v1;
}
static java.lang.String OBJBUILDER_NAME_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("objbuilder.name.null", v0);
return v1;
}
static java.lang.String OBJBUILDER_VALUE_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("objbuilder.value.null", v0);
return v1;
}
static java.lang.String OBJBUILDER_OBJECT_BUILDER_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("objbuilder.object.builder.null", v0);
return v1;
}
static java.lang.String OBJBUILDER_ARRAY_BUILDER_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("objbuilder.array.builder.null", v0);
return v1;
}
static java.lang.String ARRBUILDER_VALUE_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("arrbuilder.value.null", v0);
return v1;
}
static java.lang.String ARRBUILDER_OBJECT_BUILDER_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("arrbuilder.object.builder.null", v0);
return v1;
}
static java.lang.String ARRBUILDER_ARRAY_BUILDER_NULL()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("arrbuilder.array.builder.null", v0);
return v1;
}
static java.lang.String ARRBUILDER_VALUELIST_NULL(int, int)
{
java.lang.Object[] v2;
int v0, v1;
java.lang.String v5;
java.lang.Integer v3, v4;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = newarray (java.lang.Object)[2];
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v2[0] = v3;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v2[1] = v4;
v5 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("arrbuilder.valuelist.null", v2);
return v5;
}
static java.lang.String POINTER_FORMAT_INVALID()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("pointer.format.invalid", v0);
return v1;
}
static java.lang.String POINTER_MAPPING_MISSING(jakarta.json.JsonObject, java.lang.String)
{
java.lang.Object[] v2;
jakarta.json.JsonObject v0;
java.lang.String v1, v3;
v0 := @parameter0: jakarta.json.JsonObject;
v1 := @parameter1: java.lang.String;
v2 = newarray (java.lang.Object)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("pointer.mapping.missing", v2);
return v3;
}
static java.lang.String POINTER_REFERENCE_INVALID(jakarta.json.JsonValue$ValueType)
{
java.lang.Object[] v1;
jakarta.json.JsonValue$ValueType v0;
java.lang.String v2, v3;
v0 := @parameter0: jakarta.json.JsonValue$ValueType;
v1 = newarray (java.lang.Object)[1];
v2 = virtualinvoke v0.<jakarta.json.JsonValue$ValueType: java.lang.String name()>();
v1[0] = v2;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("pointer.reference.invalid", v1);
return v3;
}
static java.lang.String POINTER_ARRAY_INDEX_ERR(java.lang.String)
{
java.lang.Object[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("pointer.array.index.err", v1);
return v2;
}
static java.lang.String POINTER_ARRAY_INDEX_ILLEGAL(java.lang.String)
{
java.lang.Object[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("pointer.array.index.illegal", v1);
return v2;
}
static java.lang.String NODEREF_VALUE_ADD_ERR()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("noderef.value.add.err", v0);
return v1;
}
static java.lang.String NODEREF_VALUE_CANNOT_REMOVE()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("noderef.value.cannot.remove", v0);
return v1;
}
static java.lang.String NODEREF_OBJECT_MISSING(java.lang.String)
{
java.lang.Object[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("noderef.object.missing", v1);
return v2;
}
static java.lang.String NODEREF_ARRAY_INDEX_ERR(int, int)
{
java.lang.Object[] v2;
int v0, v1;
java.lang.String v5;
java.lang.Integer v3, v4;
v0 := @parameter0: int;
v1 := @parameter1: int;
v2 = newarray (java.lang.Object)[2];
v3 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v0);
v2[0] = v3;
v4 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v1);
v2[1] = v4;
v5 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("noderef.array.index.err", v2);
return v5;
}
static java.lang.String PATCH_MUST_BE_ARRAY()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.must.be.array", v0);
return v1;
}
static java.lang.String PATCH_MOVE_PROPER_PREFIX(java.lang.String, java.lang.String)
{
java.lang.Object[] v2;
java.lang.String v0, v1, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = newarray (java.lang.Object)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.move.proper.prefix", v2);
return v3;
}
static java.lang.String PATCH_MOVE_TARGET_NULL(java.lang.String)
{
java.lang.Object[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.move.target.null", v1);
return v2;
}
static java.lang.String PATCH_TEST_FAILED(java.lang.String, java.lang.String)
{
java.lang.Object[] v2;
java.lang.String v0, v1, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = newarray (java.lang.Object)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.test.failed", v2);
return v3;
}
static java.lang.String PATCH_ILLEGAL_OPERATION(java.lang.String)
{
java.lang.Object[] v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = newarray (java.lang.Object)[1];
v1[0] = v0;
v2 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.illegal.operation", v1);
return v2;
}
static java.lang.String PATCH_MEMBER_MISSING(java.lang.String, java.lang.String)
{
java.lang.Object[] v2;
java.lang.String v0, v1, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = newarray (java.lang.Object)[2];
v2[0] = v0;
v2[1] = v1;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.member.missing", v2);
return v3;
}
static java.lang.String PATCH_OPERATION_MISSING()
{
java.lang.Object[] v0;
java.lang.String v1;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String localize(java.lang.String,java.lang.Object[])>("patch.operation.missing", v0);
return v1;
}
private static transient java.lang.String localize(java.lang.String, java.lang.Object[])
{
java.lang.Object[] v1;
java.util.ResourceBundle v2;
java.lang.String v0, v3, v4, v6;
java.lang.Exception v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
label1:
v2 = <org.eclipse.parsson.JsonMessages: java.util.ResourceBundle BUNDLE>;
v3 = virtualinvoke v2.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(v0);
v4 = staticinvoke <java.text.MessageFormat: java.lang.String format(java.lang.String,java.lang.Object[])>(v3, v1);
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String getDefaultMessage(java.lang.String,java.lang.Object[])>(v0, v1);
return v6;
catch java.lang.Exception from label1 to label2 with label3;
}
private static transient java.lang.String getDefaultMessage(java.lang.String, java.lang.Object[])
{
java.lang.Object[] v1;
int v3, v4;
java.lang.Object v5;
java.lang.StringBuilder v2;
java.lang.String v0, v6, v7;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object[];
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("[failed to localize] ");
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v0);
if v1 == null goto label4;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(40);
v3 = 0;
label1:
v4 = lengthof v1;
if v3 >= v4 goto label3;
if v3 == 0 goto label2;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(", ");
label2:
v5 = v1[v3];
v6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v5);
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v6);
v3 = v3 + 1;
goto label1;
label3:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(41);
label4:
v7 = virtualinvoke v2.<java.lang.StringBuilder: java.lang.String toString()>();
return v7;
}
static void <clinit>()
{
java.util.ResourceBundle v0;
v0 = staticinvoke <java.util.ResourceBundle: java.util.ResourceBundle getBundle(java.lang.String)>("org.eclipse.parsson.messages");
<org.eclipse.parsson.JsonMessages: java.util.ResourceBundle BUNDLE> = v0;
return;
}
}