class org.eclipse.parsson.JsonObjectBuilderImpl extends java.lang.Object implements jakarta.json.JsonObjectBuilder
{
protected java.util.Map valueMap;
private final org.eclipse.parsson.api.BufferPool bufferPool;
private final org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy duplicateStrategy;
void <init>(org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v1;
java.util.Map v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: org.eclipse.parsson.api.BufferPool;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, 0, v2);
return;
}
void <init>(org.eclipse.parsson.api.BufferPool, boolean, java.util.Map)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy v5;
java.util.Map v3;
java.lang.Object v4;
org.eclipse.parsson.api.BufferPool v1;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: org.eclipse.parsson.api.BufferPool;
v2 := @parameter1: boolean;
v3 := @parameter2: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v1;
v4 = interfaceinvoke v3.<java.util.Map: java.lang.Object get(java.lang.Object)>("jakarta.json.JsonConfig.keyStrategy");
v5 = staticinvoke <org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy strategyFromProperty(java.lang.Object,boolean)>(v4, v2);
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy duplicateStrategy> = v5;
return;
}
void <init>(jakarta.json.JsonObject, org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.util.Map v3;
jakarta.json.JsonObject v1;
org.eclipse.parsson.api.BufferPool v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
v3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(jakarta.json.JsonObject,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v2, 0, v3);
return;
}
void <init>(jakarta.json.JsonObject, org.eclipse.parsson.api.BufferPool, boolean, java.util.Map)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.util.LinkedHashMap v5;
org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy v8;
java.util.Map v4, v6;
jakarta.json.JsonObject v1;
java.lang.Object v7;
org.eclipse.parsson.api.BufferPool v2;
boolean v3;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
v3 := @parameter2: boolean;
v4 := @parameter3: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v2;
v5 = new java.util.LinkedHashMap;
specialinvoke v5.<java.util.LinkedHashMap: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap> = v5;
v6 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
interfaceinvoke v6.<java.util.Map: void putAll(java.util.Map)>(v1);
v7 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>("jakarta.json.JsonConfig.keyStrategy");
v8 = staticinvoke <org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy strategyFromProperty(java.lang.Object,boolean)>(v7, v3);
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy duplicateStrategy> = v8;
return;
}
void <init>(java.util.Map, org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.util.Map v1, v3;
org.eclipse.parsson.api.BufferPool v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
v3 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(java.util.Map,org.eclipse.parsson.api.BufferPool,boolean,java.util.Map)>(v1, v2, 0, v3);
return;
}
void <init>(java.util.Map, org.eclipse.parsson.api.BufferPool, boolean, java.util.Map)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.util.LinkedHashMap v5;
org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy v7;
java.util.Map v1, v4;
java.lang.Object v6;
org.eclipse.parsson.api.BufferPool v2;
boolean v3;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.util.Map;
v2 := @parameter1: org.eclipse.parsson.api.BufferPool;
v3 := @parameter2: boolean;
v4 := @parameter3: java.util.Map;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v2;
v5 = new java.util.LinkedHashMap;
specialinvoke v5.<java.util.LinkedHashMap: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap> = v5;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void populate(java.util.Map)>(v1);
v6 = interfaceinvoke v4.<java.util.Map: java.lang.Object get(java.lang.Object)>("jakarta.json.JsonConfig.keyStrategy");
v7 = staticinvoke <org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy strategyFromProperty(java.lang.Object,boolean)>(v6, v3);
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy duplicateStrategy> = v7;
return;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.lang.String v1;
jakarta.json.JsonValue v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonValue;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateValue(java.lang.Object)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v2);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
org.eclipse.parsson.JsonStringImpl v3;
java.lang.String v1, v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = new org.eclipse.parsson.JsonStringImpl;
specialinvoke v3.<org.eclipse.parsson.JsonStringImpl: void <init>(java.lang.CharSequence)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, java.math.BigInteger)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonNumber v3;
java.math.BigInteger v2;
java.lang.String v1;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.math.BigInteger;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigInteger)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, java.math.BigDecimal)
{
java.math.BigDecimal v2;
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonNumber v3;
java.lang.String v1;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.math.BigDecimal;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateValue(java.lang.Object)>(v2);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(java.math.BigDecimal)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, int)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
int v2;
jakarta.json.JsonNumber v3;
java.lang.String v1;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(int)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, long)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonNumber v3;
long v2;
java.lang.String v1;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: long;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(long)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, double)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonNumber v3;
java.lang.String v1;
double v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: double;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
v3 = staticinvoke <org.eclipse.parsson.JsonNumberImpl: jakarta.json.JsonNumber getJsonNumber(double)>(v2);
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, boolean)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonValue v3;
java.lang.String v1;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
if v2 == 0 goto label1;
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue TRUE>;
goto label2;
label1:
v3 = <jakarta.json.JsonValue: jakarta.json.JsonValue FALSE>;
label2:
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v3);
return v0;
}
public jakarta.json.JsonObjectBuilder addNull(java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.lang.String v1;
jakarta.json.JsonValue v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
v2 = <jakarta.json.JsonValue: jakarta.json.JsonValue NULL>;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v2);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, jakarta.json.JsonObjectBuilder)
{
jakarta.json.JsonObjectBuilder v2;
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonObject v5;
java.lang.String v1, v4;
java.lang.NullPointerException v3;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonObjectBuilder;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
if v2 != null goto label1;
v3 = new java.lang.NullPointerException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String OBJBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = interfaceinvoke v2.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v5);
return v0;
}
public jakarta.json.JsonObjectBuilder add(java.lang.String, jakarta.json.JsonArrayBuilder)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonArrayBuilder v2;
java.lang.String v1, v4;
jakarta.json.JsonArray v5;
java.lang.NullPointerException v3;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonArrayBuilder;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
if v2 != null goto label1;
v3 = new java.lang.NullPointerException;
v4 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String OBJBUILDER_ARRAY_BUILDER_NULL()>();
specialinvoke v3.<java.lang.NullPointerException: void <init>(java.lang.String)>(v4);
throw v3;
label1:
v5 = interfaceinvoke v2.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void putValueMap(java.lang.String,jakarta.json.JsonValue)>(v1, v5);
return v0;
}
public jakarta.json.JsonObjectBuilder addAll(jakarta.json.JsonObjectBuilder)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.lang.NullPointerException v2;
java.util.LinkedHashMap v5;
jakarta.json.JsonObjectBuilder v1;
java.util.Map v4, v6;
jakarta.json.JsonObject v7;
java.lang.String v3;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: jakarta.json.JsonObjectBuilder;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String OBJBUILDER_OBJECT_BUILDER_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
v4 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
if v4 != null goto label2;
v5 = new java.util.LinkedHashMap;
specialinvoke v5.<java.util.LinkedHashMap: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap> = v5;
label2:
v6 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
v7 = interfaceinvoke v1.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObject build()>();
interfaceinvoke v6.<java.util.Map: void putAll(java.util.Map)>(v7);
return v0;
}
public jakarta.json.JsonObjectBuilder remove(java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.lang.String v1;
java.util.Map v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.eclipse.parsson.JsonObjectBuilderImpl: void validateName(java.lang.String)>(v1);
v2 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
interfaceinvoke v2.<java.util.Map: java.lang.Object remove(java.lang.Object)>(v1);
return v0;
}
public jakarta.json.JsonObject build()
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.util.Map v1, v2, v3;
org.eclipse.parsson.api.BufferPool v5;
org.eclipse.parsson.JsonObjectBuilderImpl$JsonObjectImpl v4;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label2;
label1:
v3 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v3);
label2:
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap> = null;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl$JsonObjectImpl;
v5 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl$JsonObjectImpl: void <init>(java.util.Map,org.eclipse.parsson.api.BufferPool)>(v2, v5);
return v4;
}
private void populate(java.util.Map)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.util.Iterator v3;
jakarta.json.JsonValue v11;
java.util.Set v2;
java.util.function.Consumer v8;
java.util.Map v1, v9;
java.lang.Object v5, v6;
org.eclipse.parsson.api.BufferPool v10;
boolean v4, v7;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v5);
if v6 == null goto label2;
v7 = v6 instanceof java.util.Optional;
if v7 == 0 goto label2;
v8 = staticinvoke <org.eclipse.parsson.JsonObjectBuilderImpl$lambda_populate_0__592: java.util.function.Consumer bootstrap$(org.eclipse.parsson.JsonObjectBuilderImpl,java.lang.String)>(v0, v5);
virtualinvoke v6.<java.util.Optional: void ifPresent(java.util.function.Consumer)>(v8);
goto label1;
label2:
v9 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
v10 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
v11 = staticinvoke <org.eclipse.parsson.MapUtil: jakarta.json.JsonValue handle(java.lang.Object,org.eclipse.parsson.api.BufferPool)>(v6, v10);
interfaceinvoke v9.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v5, v11);
goto label1;
label3:
return;
}
private void putValueMap(java.lang.String, jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
jakarta.json.JsonValue v2, v9;
java.util.LinkedHashMap v4;
org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy v8;
java.util.Map v3, v5, v7;
java.lang.Object v6;
java.lang.String v1;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
if v3 != null goto label1;
v4 = new java.util.LinkedHashMap;
specialinvoke v4.<java.util.LinkedHashMap: void <init>()>();
v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap> = v4;
label1:
v5 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
v6 = interfaceinvoke v5.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
v7 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: java.util.Map valueMap>;
v8 = v0.<org.eclipse.parsson.JsonObjectBuilderImpl: org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy duplicateStrategy>;
v9 = virtualinvoke v8.<org.eclipse.parsson.JsonObjectBuilderImpl$DuplicateStrategy: jakarta.json.JsonValue getValue(java.lang.String,jakarta.json.JsonValue,jakarta.json.JsonValue)>(v1, v2, v6);
interfaceinvoke v7.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v9);
return;
}
private void validateName(java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.lang.String v1, v3;
java.lang.NullPointerException v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String OBJBUILDER_NAME_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
return;
}
private void validateValue(java.lang.Object)
{
org.eclipse.parsson.JsonObjectBuilderImpl v0;
java.lang.Object v1;
java.lang.String v3;
java.lang.NullPointerException v2;
v0 := @this: org.eclipse.parsson.JsonObjectBuilderImpl;
v1 := @parameter0: java.lang.Object;
if v1 != null goto label1;
v2 = new java.lang.NullPointerException;
v3 = staticinvoke <org.eclipse.parsson.JsonMessages: java.lang.String OBJBUILDER_VALUE_NULL()>();
specialinvoke v2.<java.lang.NullPointerException: void <init>(java.lang.String)>(v3);
throw v2;
label1:
return;
}
}