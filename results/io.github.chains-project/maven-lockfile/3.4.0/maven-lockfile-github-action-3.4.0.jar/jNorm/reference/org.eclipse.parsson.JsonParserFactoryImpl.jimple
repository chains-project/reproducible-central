class org.eclipse.parsson.JsonParserFactoryImpl extends java.lang.Object implements jakarta.json.stream.JsonParserFactory
{
private final java.util.Map config;
private final org.eclipse.parsson.api.BufferPool bufferPool;
void <init>(org.eclipse.parsson.api.BufferPool)
{
org.eclipse.parsson.JsonParserFactoryImpl v0;
org.eclipse.parsson.api.BufferPool v1;
java.util.Map v2;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 := @parameter0: org.eclipse.parsson.api.BufferPool;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v0.<org.eclipse.parsson.JsonParserFactoryImpl: java.util.Map config> = v2;
v0.<org.eclipse.parsson.JsonParserFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool> = v1;
return;
}
public jakarta.json.stream.JsonParser createParser(java.io.Reader)
{
org.eclipse.parsson.JsonParserFactoryImpl v0;
org.eclipse.parsson.JsonParserImpl v2;
java.io.Reader v1;
org.eclipse.parsson.api.BufferPool v3;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 := @parameter0: java.io.Reader;
v2 = new org.eclipse.parsson.JsonParserImpl;
v3 = v0.<org.eclipse.parsson.JsonParserFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v2.<org.eclipse.parsson.JsonParserImpl: void <init>(java.io.Reader,org.eclipse.parsson.api.BufferPool)>(v1, v3);
return v2;
}
public jakarta.json.stream.JsonParser createParser(java.io.InputStream)
{
org.eclipse.parsson.JsonParserFactoryImpl v0;
org.eclipse.parsson.JsonParserImpl v2;
org.eclipse.parsson.api.BufferPool v3;
java.io.InputStream v1;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 := @parameter0: java.io.InputStream;
v2 = new org.eclipse.parsson.JsonParserImpl;
v3 = v0.<org.eclipse.parsson.JsonParserFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v2.<org.eclipse.parsson.JsonParserImpl: void <init>(java.io.InputStream,org.eclipse.parsson.api.BufferPool)>(v1, v3);
return v2;
}
public jakarta.json.stream.JsonParser createParser(java.io.InputStream, java.nio.charset.Charset)
{
org.eclipse.parsson.JsonParserFactoryImpl v0;
java.nio.charset.Charset v2;
org.eclipse.parsson.JsonParserImpl v3;
org.eclipse.parsson.api.BufferPool v4;
java.io.InputStream v1;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 := @parameter0: java.io.InputStream;
v2 := @parameter1: java.nio.charset.Charset;
v3 = new org.eclipse.parsson.JsonParserImpl;
v4 = v0.<org.eclipse.parsson.JsonParserFactoryImpl: org.eclipse.parsson.api.BufferPool bufferPool>;
specialinvoke v3.<org.eclipse.parsson.JsonParserImpl: void <init>(java.io.InputStream,java.nio.charset.Charset,org.eclipse.parsson.api.BufferPool)>(v1, v2, v4);
return v3;
}
public jakarta.json.stream.JsonParser createParser(jakarta.json.JsonArray)
{
org.eclipse.parsson.JsonParserFactoryImpl v0;
org.eclipse.parsson.JsonStructureParser v2;
jakarta.json.JsonArray v1;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 := @parameter0: jakarta.json.JsonArray;
v2 = new org.eclipse.parsson.JsonStructureParser;
specialinvoke v2.<org.eclipse.parsson.JsonStructureParser: void <init>(jakarta.json.JsonArray)>(v1);
return v2;
}
public java.util.Map getConfigInUse()
{
org.eclipse.parsson.JsonParserFactoryImpl v0;
java.util.Map v1;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 = v0.<org.eclipse.parsson.JsonParserFactoryImpl: java.util.Map config>;
return v1;
}
public jakarta.json.stream.JsonParser createParser(jakarta.json.JsonObject)
{
jakarta.json.JsonObject v1;
org.eclipse.parsson.JsonParserFactoryImpl v0;
org.eclipse.parsson.JsonStructureParser v2;
v0 := @this: org.eclipse.parsson.JsonParserFactoryImpl;
v1 := @parameter0: jakarta.json.JsonObject;
v2 = new org.eclipse.parsson.JsonStructureParser;
specialinvoke v2.<org.eclipse.parsson.JsonStructureParser: void <init>(jakarta.json.JsonObject)>(v1);
return v2;
}
}