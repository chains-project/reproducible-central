final class org.eclipse.parsson.JsonParserImpl$ArrayContext extends org.eclipse.parsson.JsonParserImpl$Context
{
private boolean firstValue;
final org.eclipse.parsson.JsonParserImpl this$0;
private void <init>(org.eclipse.parsson.JsonParserImpl)
{
org.eclipse.parsson.JsonParserImpl v1;
org.eclipse.parsson.JsonParserImpl$ArrayContext v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$ArrayContext;
v1 := @parameter0: org.eclipse.parsson.JsonParserImpl;
v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0> = v1;
specialinvoke v0.<org.eclipse.parsson.JsonParserImpl$Context: void <init>(org.eclipse.parsson.JsonParserImpl)>(v1);
v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: boolean firstValue> = 1;
return;
}
public jakarta.json.stream.JsonParser$Event getNextEvent()
{
org.eclipse.parsson.JsonTokenizer v2, v25;
int[] v5;
boolean v20, v26;
jakarta.json.stream.JsonParsingException v11, v13, v23, v47;
org.eclipse.parsson.JsonParserImpl$Stack v17, v30, v39;
org.eclipse.parsson.JsonParserImpl$Context v18, v32, v41;
org.eclipse.parsson.JsonTokenizer$JsonToken v14, v21, v28, v3, v37, v4;
org.eclipse.parsson.JsonParserImpl$ObjectContext v34;
int v8, v9;
org.eclipse.parsson.JsonParserImpl v1, v10, v12, v15, v16, v22, v24, v29, v31, v33, v35, v38, v40, v42, v44, v46, v6;
jakarta.json.stream.JsonParser$Event v19, v27, v36, v45, v7;
org.eclipse.parsson.JsonParserImpl$ArrayContext v0, v43;
v0 := @this: org.eclipse.parsson.JsonParserImpl$ArrayContext;
v1 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v2 = v1.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonTokenizer tokenizer>;
v3 = virtualinvoke v2.<org.eclipse.parsson.JsonTokenizer: org.eclipse.parsson.JsonTokenizer$JsonToken nextToken()>();
v4 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken EOF>;
if v3 != v4 goto label03;
v5 = <org.eclipse.parsson.JsonParserImpl$4: int[] $SwitchMap$jakarta$json$stream$JsonParser$Event>;
v6 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v7 = v6.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParser$Event currentEvent>;
v8 = virtualinvoke v7.<jakarta.json.stream.JsonParser$Event: int ordinal()>();
v9 = v5[v8];
lookupswitch(v9)
{
case 1: goto label01;
default: goto label02;
};
label01:
v10 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v11 = specialinvoke v10.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParsingException parsingException(org.eclipse.parsson.JsonTokenizer$JsonToken,java.lang.String)>(v3, "[CURLYOPEN, SQUAREOPEN, STRING, NUMBER, TRUE, FALSE, NULL]");
throw v11;
label02:
v12 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v13 = specialinvoke v12.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParsingException parsingException(org.eclipse.parsson.JsonTokenizer$JsonToken,java.lang.String)>(v3, "[COMMA, CURLYCLOSE]");
throw v13;
label03:
v14 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken SQUARECLOSE>;
if v3 != v14 goto label04;
v15 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v16 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v17 = v16.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Stack stack>;
v18 = specialinvoke v17.<org.eclipse.parsson.JsonParserImpl$Stack: org.eclipse.parsson.JsonParserImpl$Context pop()>();
v15.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext> = v18;
v19 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event END_ARRAY>;
return v19;
label04:
v20 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: boolean firstValue>;
if v20 == 0 goto label05;
v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: boolean firstValue> = 0;
goto label07;
label05:
v21 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken COMMA>;
if v3 == v21 goto label06;
v22 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v23 = specialinvoke v22.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParsingException parsingException(org.eclipse.parsson.JsonTokenizer$JsonToken,java.lang.String)>(v3, "[COMMA]");
throw v23;
label06:
v24 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v25 = v24.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonTokenizer tokenizer>;
v3 = virtualinvoke v25.<org.eclipse.parsson.JsonTokenizer: org.eclipse.parsson.JsonTokenizer$JsonToken nextToken()>();
label07:
v26 = virtualinvoke v3.<org.eclipse.parsson.JsonTokenizer$JsonToken: boolean isValue()>();
if v26 == 0 goto label08;
v27 = virtualinvoke v3.<org.eclipse.parsson.JsonTokenizer$JsonToken: jakarta.json.stream.JsonParser$Event getEvent()>();
return v27;
label08:
v28 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken CURLYOPEN>;
if v3 != v28 goto label09;
v29 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v30 = v29.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Stack stack>;
v31 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v32 = v31.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext>;
specialinvoke v30.<org.eclipse.parsson.JsonParserImpl$Stack: void push(org.eclipse.parsson.JsonParserImpl$Context)>(v32);
v33 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v34 = new org.eclipse.parsson.JsonParserImpl$ObjectContext;
v35 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
specialinvoke v34.<org.eclipse.parsson.JsonParserImpl$ObjectContext: void <init>(org.eclipse.parsson.JsonParserImpl)>(v35);
v33.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext> = v34;
v36 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_OBJECT>;
return v36;
label09:
v37 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken SQUAREOPEN>;
if v3 != v37 goto label10;
v38 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v39 = v38.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Stack stack>;
v40 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v41 = v40.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext>;
specialinvoke v39.<org.eclipse.parsson.JsonParserImpl$Stack: void push(org.eclipse.parsson.JsonParserImpl$Context)>(v41);
v42 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v43 = new org.eclipse.parsson.JsonParserImpl$ArrayContext;
v44 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
specialinvoke v43.<org.eclipse.parsson.JsonParserImpl$ArrayContext: void <init>(org.eclipse.parsson.JsonParserImpl)>(v44);
v42.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonParserImpl$Context currentContext> = v43;
v45 = <jakarta.json.stream.JsonParser$Event: jakarta.json.stream.JsonParser$Event START_ARRAY>;
return v45;
label10:
v46 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v47 = specialinvoke v46.<org.eclipse.parsson.JsonParserImpl: jakarta.json.stream.JsonParsingException parsingException(org.eclipse.parsson.JsonTokenizer$JsonToken,java.lang.String)>(v3, "[CURLYOPEN, SQUAREOPEN, STRING, NUMBER, TRUE, FALSE, NULL]");
throw v47;
}
void skip()
{
org.eclipse.parsson.JsonTokenizer$JsonToken v4, v8;
org.eclipse.parsson.JsonParserImpl v2;
org.eclipse.parsson.JsonTokenizer v3;
int[] v5;
int v1, v6, v7;
org.eclipse.parsson.JsonParserImpl$ArrayContext v0;
v0 := @this: org.eclipse.parsson.JsonParserImpl$ArrayContext;
v1 = 1;
label1:
v2 = v0.<org.eclipse.parsson.JsonParserImpl$ArrayContext: org.eclipse.parsson.JsonParserImpl this$0>;
v3 = v2.<org.eclipse.parsson.JsonParserImpl: org.eclipse.parsson.JsonTokenizer tokenizer>;
v4 = virtualinvoke v3.<org.eclipse.parsson.JsonTokenizer: org.eclipse.parsson.JsonTokenizer$JsonToken nextToken()>();
v5 = <org.eclipse.parsson.JsonParserImpl$4: int[] $SwitchMap$org$eclipse$parsson$JsonTokenizer$JsonToken>;
v6 = virtualinvoke v4.<org.eclipse.parsson.JsonTokenizer$JsonToken: int ordinal()>();
v7 = v5[v6];
lookupswitch(v7)
{
case 3: goto label2;
case 4: goto label3;
default: goto label4;
};
label2:
v1 = v1 - 1;
goto label4;
label3:
v1 = v1 + 1;
label4:
v8 = <org.eclipse.parsson.JsonTokenizer$JsonToken: org.eclipse.parsson.JsonTokenizer$JsonToken SQUARECLOSE>;
if v4 != v8 goto label1;
if v1 != 0 goto label1;
return;
}
}