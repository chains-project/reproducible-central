public final class org.eclipse.parsson.JsonPatchBuilderImpl extends java.lang.Object implements jakarta.json.JsonPatchBuilder
{
private final jakarta.json.JsonArrayBuilder builder;
public void <init>(jakarta.json.JsonArray)
{
org.eclipse.parsson.JsonArrayBuilderImpl v2;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v3;
jakarta.json.JsonArray v1;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: jakarta.json.JsonArray;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new org.eclipse.parsson.JsonArrayBuilderImpl;
v3 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v2.<org.eclipse.parsson.JsonArrayBuilderImpl: void <init>(jakarta.json.JsonArray,org.eclipse.parsson.api.BufferPool)>(v1, v3);
v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder> = v2;
return;
}
public void <init>()
{
org.eclipse.parsson.JsonArrayBuilderImpl v1;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
org.eclipse.parsson.api.BufferPool v2;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
specialinvoke v0.<java.lang.Object: void <init>()>();
v1 = new org.eclipse.parsson.JsonArrayBuilderImpl;
v2 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v1.<org.eclipse.parsson.JsonArrayBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v2);
v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder> = v1;
return;
}
public jakarta.json.JsonStructure apply(jakarta.json.JsonStructure)
{
jakarta.json.JsonStructure v1, v3;
jakarta.json.JsonPatch v2;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: jakarta.json.JsonStructure;
v2 = virtualinvoke v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonPatch build()>();
v3 = interfaceinvoke v2.<jakarta.json.JsonPatch: jakarta.json.JsonStructure apply(jakarta.json.JsonStructure)>(v1);
return v3;
}
public jakarta.json.JsonPatchBuilder add(java.lang.String, jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonValue v2;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation ADD>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonValue)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder add(java.lang.String, java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v2, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation ADD>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder add(java.lang.String, int)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
int v2;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation ADD>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,int)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder add(java.lang.String, boolean)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation ADD>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,boolean)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder remove(java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v3;
jakarta.json.JsonArrayBuilder v2;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v7, v8;
jakarta.json.JsonPatch$Operation v5;
java.lang.String v1, v6;
org.eclipse.parsson.api.BufferPool v4;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v3 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v4 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v3.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v4);
v5 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation REMOVE>;
v6 = virtualinvoke v5.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v7 = virtualinvoke v3.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v6);
v8 = interfaceinvoke v7.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
interfaceinvoke v2.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v8);
return v0;
}
public jakarta.json.JsonPatchBuilder replace(java.lang.String, jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonValue v2;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation REPLACE>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonValue)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder replace(java.lang.String, java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v2, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation REPLACE>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder replace(java.lang.String, int)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
int v2;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation REPLACE>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,int)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder replace(java.lang.String, boolean)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation REPLACE>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,boolean)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder move(java.lang.String, java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v2, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation MOVE>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("from", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder copy(java.lang.String, java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v2, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation COPY>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("from", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder test(java.lang.String, jakarta.json.JsonValue)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonValue v2;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: jakarta.json.JsonValue;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation TEST>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,jakarta.json.JsonValue)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder test(java.lang.String, java.lang.String)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v2, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation TEST>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder test(java.lang.String, int)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
int v2;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation TEST>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,int)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonPatchBuilder test(java.lang.String, boolean)
{
org.eclipse.parsson.JsonObjectBuilderImpl v4;
jakarta.json.JsonArrayBuilder v3;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonObjectBuilder v10, v8, v9;
jakarta.json.JsonPatch$Operation v6;
java.lang.String v1, v7;
org.eclipse.parsson.api.BufferPool v5;
boolean v2;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
v3 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v4 = new org.eclipse.parsson.JsonObjectBuilderImpl;
v5 = staticinvoke <org.eclipse.parsson.JsonUtil: org.eclipse.parsson.api.BufferPool getInternalBufferPool()>();
specialinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: void <init>(org.eclipse.parsson.api.BufferPool)>(v5);
v6 = <jakarta.json.JsonPatch$Operation: jakarta.json.JsonPatch$Operation TEST>;
v7 = virtualinvoke v6.<jakarta.json.JsonPatch$Operation: java.lang.String operationName()>();
v8 = virtualinvoke v4.<org.eclipse.parsson.JsonObjectBuilderImpl: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("op", v7);
v9 = interfaceinvoke v8.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,java.lang.String)>("path", v1);
v10 = interfaceinvoke v9.<jakarta.json.JsonObjectBuilder: jakarta.json.JsonObjectBuilder add(java.lang.String,boolean)>("value", v2);
interfaceinvoke v3.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArrayBuilder add(jakarta.json.JsonObjectBuilder)>(v10);
return v0;
}
public jakarta.json.JsonArray buildAsJsonArray()
{
jakarta.json.JsonArrayBuilder v1;
org.eclipse.parsson.JsonPatchBuilderImpl v0;
jakarta.json.JsonArray v2;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 = v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArrayBuilder builder>;
v2 = interfaceinvoke v1.<jakarta.json.JsonArrayBuilder: jakarta.json.JsonArray build()>();
return v2;
}
public jakarta.json.JsonPatch build()
{
org.eclipse.parsson.JsonPatchBuilderImpl v0;
org.eclipse.parsson.JsonPatchImpl v1;
jakarta.json.JsonArray v2;
v0 := @this: org.eclipse.parsson.JsonPatchBuilderImpl;
v1 = new org.eclipse.parsson.JsonPatchImpl;
v2 = virtualinvoke v0.<org.eclipse.parsson.JsonPatchBuilderImpl: jakarta.json.JsonArray buildAsJsonArray()>();
specialinvoke v1.<org.eclipse.parsson.JsonPatchImpl: void <init>(jakarta.json.JsonArray)>(v2);
return v1;
}
}