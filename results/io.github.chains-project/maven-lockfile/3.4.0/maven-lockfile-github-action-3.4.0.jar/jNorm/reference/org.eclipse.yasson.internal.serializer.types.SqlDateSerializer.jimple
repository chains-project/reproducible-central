class org.eclipse.yasson.internal.serializer.types.SqlDateSerializer extends org.eclipse.yasson.internal.serializer.types.DateSerializer
{
void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)
{
org.eclipse.yasson.internal.serializer.types.SqlDateSerializer v0;
org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder v1;
v0 := @this: org.eclipse.yasson.internal.serializer.types.SqlDateSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.DateSerializer: void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)>(v1);
return;
}
protected java.time.Instant toInstant(java.util.Date)
{
java.util.Date v1;
long v3;
org.eclipse.yasson.internal.serializer.types.SqlDateSerializer v0;
java.time.Instant v4, v5;
boolean v2;
v0 := @this: org.eclipse.yasson.internal.serializer.types.SqlDateSerializer;
v1 := @parameter0: java.util.Date;
v2 = v1 instanceof java.sql.Date;
if v2 == 0 goto label1;
v3 = virtualinvoke v1.<java.util.Date: long getTime()>();
v4 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(v3);
return v4;
label1:
v5 = specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.DateSerializer: java.time.Instant toInstant(java.util.Date)>(v1);
return v5;
}
protected java.lang.String formatDefault(java.util.Date, java.util.Locale)
{
java.util.Date v1;
java.util.Locale v2;
org.eclipse.yasson.internal.serializer.types.SqlDateSerializer v0;
java.lang.String v4, v5, v6;
boolean v3;
v0 := @this: org.eclipse.yasson.internal.serializer.types.SqlDateSerializer;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: java.util.Locale;
v3 = v1 instanceof java.sql.Date;
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<java.util.Date: java.lang.String toString()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001Z");
return v5;
label1:
v6 = specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.DateSerializer: java.lang.String formatDefault(java.util.Date,java.util.Locale)>(v1, v2);
return v6;
}
protected java.lang.String formatWithFormatter(java.util.Date, java.time.format.DateTimeFormatter)
{
java.util.Date v1;
java.time.LocalDate v4;
java.time.format.DateTimeFormatter v2;
org.eclipse.yasson.internal.serializer.types.SqlDateSerializer v0;
java.lang.String v5, v6;
boolean v3;
v0 := @this: org.eclipse.yasson.internal.serializer.types.SqlDateSerializer;
v1 := @parameter0: java.util.Date;
v2 := @parameter1: java.time.format.DateTimeFormatter;
v3 = v1 instanceof java.sql.Date;
if v3 == 0 goto label1;
v4 = virtualinvoke v1.<java.sql.Date: java.time.LocalDate toLocalDate()>();
v5 = virtualinvoke v4.<java.time.LocalDate: java.lang.String format(java.time.format.DateTimeFormatter)>(v2);
return v5;
label1:
v6 = specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.DateSerializer: java.lang.String formatWithFormatter(java.util.Date,java.time.format.DateTimeFormatter)>(v1, v2);
return v6;
}
}