class org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer extends org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer
{
void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)
{
org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer v0;
org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder v1;
v0 := @this: org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer;
v1 := @parameter0: org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder;
specialinvoke v0.<org.eclipse.yasson.internal.serializer.types.AbstractDateSerializer: void <init>(org.eclipse.yasson.internal.serializer.types.TypeSerializerBuilder)>(v1);
return;
}
protected java.time.Instant toInstant(javax.xml.datatype.XMLGregorianCalendar)
{
java.util.GregorianCalendar v2;
org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer v0;
long v3;
java.time.Instant v4;
javax.xml.datatype.XMLGregorianCalendar v1;
v0 := @this: org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer;
v1 := @parameter0: javax.xml.datatype.XMLGregorianCalendar;
v2 = virtualinvoke v1.<javax.xml.datatype.XMLGregorianCalendar: java.util.GregorianCalendar toGregorianCalendar()>();
v3 = virtualinvoke v2.<java.util.GregorianCalendar: long getTimeInMillis()>();
v4 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(v3);
return v4;
}
protected java.lang.String formatDefault(javax.xml.datatype.XMLGregorianCalendar, java.util.Locale)
{
java.util.GregorianCalendar v5;
java.util.TimeZone v6;
javax.xml.datatype.XMLGregorianCalendar v1;
java.time.ZoneId v7;
java.time.temporal.TemporalAccessor v9;
org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer v0;
java.util.Locale v2;
java.time.format.DateTimeFormatter v3, v4, v8;
java.lang.String v10;
v0 := @this: org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer;
v1 := @parameter0: javax.xml.datatype.XMLGregorianCalendar;
v2 := @parameter1: java.util.Locale;
v3 = <java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter ISO_DATE_TIME>;
v4 = virtualinvoke v3.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withLocale(java.util.Locale)>(v2);
v5 = virtualinvoke v1.<javax.xml.datatype.XMLGregorianCalendar: java.util.GregorianCalendar toGregorianCalendar()>();
v6 = virtualinvoke v5.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();
v7 = virtualinvoke v6.<java.util.TimeZone: java.time.ZoneId toZoneId()>();
v8 = virtualinvoke v4.<java.time.format.DateTimeFormatter: java.time.format.DateTimeFormatter withZone(java.time.ZoneId)>(v7);
v9 = virtualinvoke v0.<org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer: java.time.temporal.TemporalAccessor toTemporalAccessor(javax.xml.datatype.XMLGregorianCalendar)>(v1);
v10 = virtualinvoke v8.<java.time.format.DateTimeFormatter: java.lang.String format(java.time.temporal.TemporalAccessor)>(v9);
return v10;
}
protected java.time.temporal.TemporalAccessor toTemporalAccessor(javax.xml.datatype.XMLGregorianCalendar)
{
java.util.GregorianCalendar v2, v5;
java.util.TimeZone v6;
java.time.ZonedDateTime v8;
long v3;
java.time.Instant v4;
javax.xml.datatype.XMLGregorianCalendar v1;
java.time.ZoneId v7;
org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer v0;
v0 := @this: org.eclipse.yasson.internal.serializer.types.XmlGregorianCalendarSerializer;
v1 := @parameter0: javax.xml.datatype.XMLGregorianCalendar;
v2 = virtualinvoke v1.<javax.xml.datatype.XMLGregorianCalendar: java.util.GregorianCalendar toGregorianCalendar()>();
v3 = virtualinvoke v2.<java.util.GregorianCalendar: long getTimeInMillis()>();
v4 = staticinvoke <java.time.Instant: java.time.Instant ofEpochMilli(long)>(v3);
v5 = virtualinvoke v1.<javax.xml.datatype.XMLGregorianCalendar: java.util.GregorianCalendar toGregorianCalendar()>();
v6 = virtualinvoke v5.<java.util.GregorianCalendar: java.util.TimeZone getTimeZone()>();
v7 = virtualinvoke v6.<java.util.TimeZone: java.time.ZoneId toZoneId()>();
v8 = staticinvoke <java.time.ZonedDateTime: java.time.ZonedDateTime ofInstant(java.time.Instant,java.time.ZoneId)>(v4, v7);
return v8;
}
}