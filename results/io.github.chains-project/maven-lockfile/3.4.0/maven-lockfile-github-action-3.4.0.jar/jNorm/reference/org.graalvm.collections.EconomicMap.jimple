public interface  org.graalvm.collections.EconomicMap extends java.lang.Object implements org.graalvm.collections.UnmodifiableEconomicMap
{
public abstract java.lang.Object put(java.lang.Object, java.lang.Object);
public java.lang.Object putIfAbsent(java.lang.Object, java.lang.Object)
{
org.graalvm.collections.EconomicMap v0;
java.lang.Object v1, v2, v3;
v0 := @this: org.graalvm.collections.EconomicMap;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: java.lang.Object;
v3 = interfaceinvoke v0.<org.graalvm.collections.EconomicMap: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v3 = interfaceinvoke v0.<org.graalvm.collections.EconomicMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
label1:
return v3;
}
public void putAll(org.graalvm.collections.EconomicMap)
{
org.graalvm.collections.EconomicMap v0, v1;
org.graalvm.collections.MapCursor v2;
java.lang.Object v4, v5;
boolean v3;
v0 := @this: org.graalvm.collections.EconomicMap;
v1 := @parameter0: org.graalvm.collections.EconomicMap;
v2 = interfaceinvoke v1.<org.graalvm.collections.EconomicMap: org.graalvm.collections.MapCursor getEntries()>();
label1:
v3 = interfaceinvoke v2.<org.graalvm.collections.MapCursor: boolean advance()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<org.graalvm.collections.MapCursor: java.lang.Object getKey()>();
v5 = interfaceinvoke v2.<org.graalvm.collections.MapCursor: java.lang.Object getValue()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v5);
goto label1;
label2:
return;
}
public void putAll(org.graalvm.collections.UnmodifiableEconomicMap)
{
org.graalvm.collections.EconomicMap v0;
org.graalvm.collections.UnmodifiableEconomicMap v1;
java.lang.Object v4, v5;
org.graalvm.collections.UnmodifiableMapCursor v2;
boolean v3;
v0 := @this: org.graalvm.collections.EconomicMap;
v1 := @parameter0: org.graalvm.collections.UnmodifiableEconomicMap;
v2 = interfaceinvoke v1.<org.graalvm.collections.UnmodifiableEconomicMap: org.graalvm.collections.UnmodifiableMapCursor getEntries()>();
label1:
v3 = interfaceinvoke v2.<org.graalvm.collections.UnmodifiableMapCursor: boolean advance()>();
if v3 == 0 goto label2;
v4 = interfaceinvoke v2.<org.graalvm.collections.UnmodifiableMapCursor: java.lang.Object getKey()>();
v5 = interfaceinvoke v2.<org.graalvm.collections.UnmodifiableMapCursor: java.lang.Object getValue()>();
interfaceinvoke v0.<org.graalvm.collections.EconomicMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v4, v5);
goto label1;
label2:
return;
}
public abstract void clear();
public abstract java.lang.Object removeKey(java.lang.Object);
public abstract org.graalvm.collections.MapCursor getEntries();
public abstract void replaceAll(java.util.function.BiFunction);
public static org.graalvm.collections.EconomicMap create()
{
org.graalvm.collections.Equivalence v0;
org.graalvm.collections.EconomicMap v1;
v0 = <org.graalvm.collections.Equivalence: org.graalvm.collections.Equivalence DEFAULT>;
v1 = staticinvoke <org.graalvm.collections.EconomicMap: org.graalvm.collections.EconomicMap create(org.graalvm.collections.Equivalence)>(v0);
return v1;
}
public static org.graalvm.collections.EconomicMap create(int)
{
int v0;
org.graalvm.collections.Equivalence v1;
org.graalvm.collections.EconomicMap v2;
v0 := @parameter0: int;
v1 = <org.graalvm.collections.Equivalence: org.graalvm.collections.Equivalence DEFAULT>;
v2 = staticinvoke <org.graalvm.collections.EconomicMap: org.graalvm.collections.EconomicMap create(org.graalvm.collections.Equivalence,int)>(v1, v0);
return v2;
}
public static org.graalvm.collections.EconomicMap create(org.graalvm.collections.Equivalence)
{
org.graalvm.collections.EconomicMapImpl v1;
org.graalvm.collections.Equivalence v0;
v0 := @parameter0: org.graalvm.collections.Equivalence;
v1 = staticinvoke <org.graalvm.collections.EconomicMapImpl: org.graalvm.collections.EconomicMapImpl create(org.graalvm.collections.Equivalence,boolean)>(v0, 0);
return v1;
}
public static org.graalvm.collections.EconomicMap create(org.graalvm.collections.UnmodifiableEconomicMap)
{
org.graalvm.collections.UnmodifiableEconomicMap v0;
org.graalvm.collections.Equivalence v1;
org.graalvm.collections.EconomicMap v2;
v0 := @parameter0: org.graalvm.collections.UnmodifiableEconomicMap;
v1 = <org.graalvm.collections.Equivalence: org.graalvm.collections.Equivalence DEFAULT>;
v2 = staticinvoke <org.graalvm.collections.EconomicMap: org.graalvm.collections.EconomicMap create(org.graalvm.collections.Equivalence,org.graalvm.collections.UnmodifiableEconomicMap)>(v1, v0);
return v2;
}
public static org.graalvm.collections.EconomicMap create(org.graalvm.collections.Equivalence, org.graalvm.collections.UnmodifiableEconomicMap)
{
org.graalvm.collections.EconomicMapImpl v2;
org.graalvm.collections.UnmodifiableEconomicMap v1;
org.graalvm.collections.Equivalence v0;
v0 := @parameter0: org.graalvm.collections.Equivalence;
v1 := @parameter1: org.graalvm.collections.UnmodifiableEconomicMap;
v2 = staticinvoke <org.graalvm.collections.EconomicMapImpl: org.graalvm.collections.EconomicMapImpl create(org.graalvm.collections.Equivalence,org.graalvm.collections.UnmodifiableEconomicMap,boolean)>(v0, v1, 0);
return v2;
}
public static org.graalvm.collections.EconomicMap create(org.graalvm.collections.Equivalence, int)
{
int v1;
org.graalvm.collections.EconomicMapImpl v2;
org.graalvm.collections.Equivalence v0;
v0 := @parameter0: org.graalvm.collections.Equivalence;
v1 := @parameter1: int;
v2 = staticinvoke <org.graalvm.collections.EconomicMapImpl: org.graalvm.collections.EconomicMapImpl create(org.graalvm.collections.Equivalence,int,boolean)>(v0, v1, 0);
return v2;
}
public static org.graalvm.collections.EconomicMap wrapMap(java.util.Map)
{
org.graalvm.collections.EconomicMapWrap v1;
java.util.Map v0;
v0 := @parameter0: java.util.Map;
v1 = new org.graalvm.collections.EconomicMapWrap;
specialinvoke v1.<org.graalvm.collections.EconomicMapWrap: void <init>(java.util.Map)>(v0);
return v1;
}
public static org.graalvm.collections.MapCursor emptyCursor()
{
org.graalvm.collections.MapCursor v0;
v0 = <org.graalvm.collections.EmptyMap: org.graalvm.collections.MapCursor EMPTY_CURSOR>;
return v0;
}
public static org.graalvm.collections.EconomicMap emptyMap()
{
org.graalvm.collections.EconomicMap v0;
v0 = <org.graalvm.collections.EmptyMap: org.graalvm.collections.EconomicMap EMPTY_MAP>;
return v0;
}
}