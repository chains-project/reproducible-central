public final class org.graalvm.nativeimage.Isolates extends java.lang.Object
{
private void <init>()
{
org.graalvm.nativeimage.Isolates v0;
v0 := @this: org.graalvm.nativeimage.Isolates;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static org.graalvm.nativeimage.IsolateThread createIsolate(org.graalvm.nativeimage.Isolates$CreateIsolateParameters) throws org.graalvm.nativeimage.Isolates$IsolateException
{
java.lang.Object v1;
org.graalvm.nativeimage.IsolateThread v2;
org.graalvm.nativeimage.Isolates$CreateIsolateParameters v0;
v0 := @parameter0: org.graalvm.nativeimage.Isolates$CreateIsolateParameters;
virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/IsolateSupport;");
v2 = interfaceinvoke v1.<org.graalvm.nativeimage.impl.IsolateSupport: org.graalvm.nativeimage.IsolateThread createIsolate(org.graalvm.nativeimage.Isolates$CreateIsolateParameters)>(v0);
return v2;
}
public static org.graalvm.nativeimage.IsolateThread attachCurrentThread(org.graalvm.nativeimage.Isolate) throws org.graalvm.nativeimage.Isolates$IsolateException
{
org.graalvm.nativeimage.Isolate v0;
java.lang.Object v1;
org.graalvm.nativeimage.IsolateThread v2;
v0 := @parameter0: org.graalvm.nativeimage.Isolate;
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/IsolateSupport;");
v2 = interfaceinvoke v1.<org.graalvm.nativeimage.impl.IsolateSupport: org.graalvm.nativeimage.IsolateThread attachCurrentThread(org.graalvm.nativeimage.Isolate)>(v0);
return v2;
}
public static org.graalvm.nativeimage.IsolateThread getCurrentThread(org.graalvm.nativeimage.Isolate) throws org.graalvm.nativeimage.Isolates$IsolateException
{
org.graalvm.nativeimage.Isolate v0;
java.lang.Object v1;
org.graalvm.nativeimage.IsolateThread v2;
v0 := @parameter0: org.graalvm.nativeimage.Isolate;
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/IsolateSupport;");
v2 = interfaceinvoke v1.<org.graalvm.nativeimage.impl.IsolateSupport: org.graalvm.nativeimage.IsolateThread getCurrentThread(org.graalvm.nativeimage.Isolate)>(v0);
return v2;
}
public static org.graalvm.nativeimage.Isolate getIsolate(org.graalvm.nativeimage.IsolateThread) throws org.graalvm.nativeimage.Isolates$IsolateException
{
org.graalvm.nativeimage.Isolate v2;
java.lang.Object v1;
org.graalvm.nativeimage.IsolateThread v0;
v0 := @parameter0: org.graalvm.nativeimage.IsolateThread;
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/IsolateSupport;");
v2 = interfaceinvoke v1.<org.graalvm.nativeimage.impl.IsolateSupport: org.graalvm.nativeimage.Isolate getIsolate(org.graalvm.nativeimage.IsolateThread)>(v0);
return v2;
}
public static void detachThread(org.graalvm.nativeimage.IsolateThread) throws org.graalvm.nativeimage.Isolates$IsolateException
{
java.lang.Object v1;
org.graalvm.nativeimage.IsolateThread v0;
v0 := @parameter0: org.graalvm.nativeimage.IsolateThread;
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/IsolateSupport;");
interfaceinvoke v1.<org.graalvm.nativeimage.impl.IsolateSupport: void detachThread(org.graalvm.nativeimage.IsolateThread)>(v0);
return;
}
public static void tearDownIsolate(org.graalvm.nativeimage.IsolateThread) throws org.graalvm.nativeimage.Isolates$IsolateException
{
java.lang.Object v1;
org.graalvm.nativeimage.IsolateThread v0;
v0 := @parameter0: org.graalvm.nativeimage.IsolateThread;
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/IsolateSupport;");
interfaceinvoke v1.<org.graalvm.nativeimage.impl.IsolateSupport: void tearDownIsolate(org.graalvm.nativeimage.IsolateThread)>(v0);
return;
}
}