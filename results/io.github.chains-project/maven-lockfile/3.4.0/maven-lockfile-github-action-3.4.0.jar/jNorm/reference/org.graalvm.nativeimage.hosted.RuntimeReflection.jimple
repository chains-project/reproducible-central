public final class org.graalvm.nativeimage.hosted.RuntimeReflection extends java.lang.Object
{
public static transient void register(java.lang.Class[])
{
java.lang.Class[] v0;
java.lang.Object v1;
org.graalvm.nativeimage.impl.ConfigurationCondition v2;
v0 := @parameter0: java.lang.Class[];
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/RuntimeReflectionSupport;");
v2 = staticinvoke <org.graalvm.nativeimage.impl.ConfigurationCondition: org.graalvm.nativeimage.impl.ConfigurationCondition alwaysTrue()>();
interfaceinvoke v1.<org.graalvm.nativeimage.impl.RuntimeReflectionSupport: void register(org.graalvm.nativeimage.impl.ConfigurationCondition,java.lang.Class[])>(v2, v0);
return;
}
public static transient void register(java.lang.reflect.Executable[])
{
java.lang.Object v1;
java.lang.reflect.Executable[] v0;
org.graalvm.nativeimage.impl.ConfigurationCondition v2;
v0 := @parameter0: java.lang.reflect.Executable[];
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/RuntimeReflectionSupport;");
v2 = staticinvoke <org.graalvm.nativeimage.impl.ConfigurationCondition: org.graalvm.nativeimage.impl.ConfigurationCondition alwaysTrue()>();
interfaceinvoke v1.<org.graalvm.nativeimage.impl.RuntimeReflectionSupport: void register(org.graalvm.nativeimage.impl.ConfigurationCondition,boolean,java.lang.reflect.Executable[])>(v2, 0, v0);
return;
}
public static transient void registerAsQueried(java.lang.reflect.Executable[])
{
java.lang.Object v1;
java.lang.reflect.Executable[] v0;
org.graalvm.nativeimage.impl.ConfigurationCondition v2;
v0 := @parameter0: java.lang.reflect.Executable[];
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/RuntimeReflectionSupport;");
v2 = staticinvoke <org.graalvm.nativeimage.impl.ConfigurationCondition: org.graalvm.nativeimage.impl.ConfigurationCondition alwaysTrue()>();
interfaceinvoke v1.<org.graalvm.nativeimage.impl.RuntimeReflectionSupport: void register(org.graalvm.nativeimage.impl.ConfigurationCondition,boolean,java.lang.reflect.Executable[])>(v2, 1, v0);
return;
}
public static transient void register(java.lang.reflect.Field[])
{
java.lang.reflect.Field[] v0;
java.lang.Object v1;
org.graalvm.nativeimage.impl.ConfigurationCondition v2;
v0 := @parameter0: java.lang.reflect.Field[];
v1 = staticinvoke <org.graalvm.nativeimage.ImageSingletons: java.lang.Object lookup(java.lang.Class)>(class "Lorg/graalvm/nativeimage/impl/RuntimeReflectionSupport;");
v2 = staticinvoke <org.graalvm.nativeimage.impl.ConfigurationCondition: org.graalvm.nativeimage.impl.ConfigurationCondition alwaysTrue()>();
interfaceinvoke v1.<org.graalvm.nativeimage.impl.RuntimeReflectionSupport: void register(org.graalvm.nativeimage.impl.ConfigurationCondition,boolean,java.lang.reflect.Field[])>(v2, 0, v0);
return;
}
public static transient void register(boolean, java.lang.reflect.Field[])
{
java.lang.reflect.Field[] v1;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: java.lang.reflect.Field[];
staticinvoke <org.graalvm.nativeimage.hosted.RuntimeReflection: void register(java.lang.reflect.Field[])>(v1);
return;
}
public static transient void register(boolean, boolean, java.lang.reflect.Field[])
{
java.lang.reflect.Field[] v2;
boolean v0, v1;
v0 := @parameter0: boolean;
v1 := @parameter1: boolean;
v2 := @parameter2: java.lang.reflect.Field[];
staticinvoke <org.graalvm.nativeimage.hosted.RuntimeReflection: void register(java.lang.reflect.Field[])>(v2);
return;
}
public static transient void registerForReflectiveInstantiation(java.lang.Class[])
{
java.lang.NoSuchMethodException v13;
java.lang.reflect.Constructor v12;
java.lang.reflect.Executable[] v17;
int v1, v2, v6;
java.lang.String v10, v15, v16, v9;
boolean v4, v5, v7;
java.lang.Class[] v0, v11;
java.lang.IllegalArgumentException v14, v8;
java.lang.Class v3;
v0 := @parameter0: java.lang.Class[];
v1 = lengthof v0;
v2 = 0;
label1:
if v2 >= v1 goto label7;
v3 = v0[v2];
v4 = virtualinvoke v3.<java.lang.Class: boolean isArray()>();
if v4 != 0 goto label2;
v5 = virtualinvoke v3.<java.lang.Class: boolean isInterface()>();
if v5 != 0 goto label2;
v6 = virtualinvoke v3.<java.lang.Class: int getModifiers()>();
v7 = staticinvoke <java.lang.reflect.Modifier: boolean isAbstract(int)>(v6);
if v7 == 0 goto label3;
label2:
v8 = new java.lang.IllegalArgumentException;
v9 = virtualinvoke v3.<java.lang.Class: java.lang.String getTypeName()>();
v10 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v9) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class \u0001 cannot be instantiated reflectively. It must be a non-abstract instance type.");
specialinvoke v8.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v10);
throw v8;
label3:
v11 = newarray (java.lang.Class)[0];
v12 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Constructor getDeclaredConstructor(java.lang.Class[])>(v11);
label4:
goto label6;
label5:
v13 := @caughtexception;
v14 = new java.lang.IllegalArgumentException;
v15 = virtualinvoke v3.<java.lang.Class: java.lang.String getTypeName()>();
v16 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v15) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Class \u0001 cannot be instantiated reflectively . It does not have a nullary constructor.");
specialinvoke v14.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>(v16);
throw v14;
label6:
v17 = newarray (java.lang.reflect.Executable)[1];
v17[0] = v12;
staticinvoke <org.graalvm.nativeimage.hosted.RuntimeReflection: void register(java.lang.reflect.Executable[])>(v17);
v2 = v2 + 1;
goto label1;
label7:
return;
catch java.lang.NoSuchMethodException from label3 to label4 with label5;
}
private void <init>()
{
org.graalvm.nativeimage.hosted.RuntimeReflection v0;
v0 := @this: org.graalvm.nativeimage.hosted.RuntimeReflection;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
}