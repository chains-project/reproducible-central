public final class org.graalvm.polyglot.Context$Builder extends java.lang.Object
{
private org.graalvm.polyglot.Engine sharedEngine;
private java.lang.String[] permittedLanguages;
private java.io.OutputStream out;
private java.io.OutputStream err;
private java.io.InputStream in;
private java.util.Map options;
private java.util.Map arguments;
private java.util.function.Predicate hostClassFilter;
private java.lang.Boolean allowNativeAccess;
private java.lang.Boolean allowCreateThread;
private boolean allowAllAccess;
private java.lang.Boolean allowIO;
private java.lang.Boolean allowHostClassLoading;
private java.lang.Boolean allowExperimentalOptions;
private java.lang.Boolean allowHostAccess;
private boolean allowValueSharing;
private java.lang.Boolean allowInnerContextOptions;
private org.graalvm.polyglot.PolyglotAccess polyglotAccess;
private org.graalvm.polyglot.HostAccess hostAccess;
private org.graalvm.polyglot.io.FileSystem customFileSystem;
private org.graalvm.polyglot.io.MessageTransport messageTransport;
private java.lang.Object customLogHandler;
private java.lang.Boolean allowCreateProcess;
private org.graalvm.polyglot.io.ProcessHandler processHandler;
private org.graalvm.polyglot.EnvironmentAccess environmentAccess;
private org.graalvm.polyglot.ResourceLimits resourceLimits;
private java.util.Map environment;
private java.time.ZoneId zone;
private java.nio.file.Path currentWorkingDirectory;
private java.lang.ClassLoader hostClassLoader;
private boolean useSystemExit;
final org.graalvm.polyglot.Context this$0;
transient void <init>(org.graalvm.polyglot.Context, java.lang.String[])
{
org.graalvm.polyglot.Context$Builder v0;
java.util.function.Predicate v3;
int v4, v5;
java.lang.String[] v2;
java.lang.String v6;
org.graalvm.polyglot.Context v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.Context;
v2 := @parameter1: java.lang.String[];
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.Context this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = <org.graalvm.polyglot.Context: java.util.function.Predicate UNSET_HOST_LOOKUP>;
v0.<org.graalvm.polyglot.Context$Builder: java.util.function.Predicate hostClassFilter> = v3;
v0.<org.graalvm.polyglot.Context$Builder: boolean allowValueSharing> = 1;
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v4 = lengthof v2;
v5 = 0;
label1:
if v5 >= v4 goto label2;
v6 = v2[v5];
virtualinvoke v6.<java.lang.Object: java.lang.Class getClass()>();
v5 = v5 + 1;
goto label1;
label2:
v0.<org.graalvm.polyglot.Context$Builder: java.lang.String[] permittedLanguages> = v2;
return;
}
public org.graalvm.polyglot.Context$Builder engine(org.graalvm.polyglot.Engine)
{
org.graalvm.polyglot.Context$Builder v0;
org.graalvm.polyglot.Engine v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.Engine;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.Engine sharedEngine> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder out(java.io.OutputStream)
{
java.io.OutputStream v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.io.OutputStream;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream out> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder err(java.io.OutputStream)
{
java.io.OutputStream v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.io.OutputStream;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream err> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder in(java.io.InputStream)
{
org.graalvm.polyglot.Context$Builder v0;
java.io.InputStream v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.io.InputStream;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.graalvm.polyglot.Context$Builder: java.io.InputStream in> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowHostAccess(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowHostAccess> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowHostAccess(org.graalvm.polyglot.HostAccess)
{
org.graalvm.polyglot.HostAccess v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.HostAccess;
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.HostAccess hostAccess> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowNativeAccess(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowNativeAccess> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowCreateThread(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowCreateThread> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowAllAccess(boolean)
{
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v0.<org.graalvm.polyglot.Context$Builder: boolean allowAllAccess> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowHostClassLoading(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowHostClassLoading> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowHostClassLookup(java.util.function.Predicate)
{
org.graalvm.polyglot.Context$Builder v0;
java.util.function.Predicate v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.util.function.Predicate;
v0.<org.graalvm.polyglot.Context$Builder: java.util.function.Predicate hostClassFilter> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowExperimentalOptions(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowExperimentalOptions> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowPolyglotAccess(org.graalvm.polyglot.PolyglotAccess)
{
org.graalvm.polyglot.Context$Builder v0;
org.graalvm.polyglot.PolyglotAccess v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.PolyglotAccess;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.PolyglotAccess polyglotAccess> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowValueSharing(boolean)
{
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v0.<org.graalvm.polyglot.Context$Builder: boolean allowValueSharing> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowInnerContextOptions(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowInnerContextOptions> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder hostClassFilter(java.util.function.Predicate)
{
org.graalvm.polyglot.Context$Builder v0;
java.util.function.Predicate v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.util.function.Predicate;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v0.<org.graalvm.polyglot.Context$Builder: java.util.function.Predicate hostClassFilter> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder option(java.lang.String, java.lang.String)
{
org.graalvm.polyglot.Context$Builder v0;
java.util.Map v3, v5;
java.util.HashMap v4;
java.lang.String v1, v2;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options>;
if v3 != null goto label1;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options> = v4;
label1:
v5 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options>;
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public org.graalvm.polyglot.Context$Builder options(java.util.Map)
{
java.util.Iterator v3;
org.graalvm.polyglot.Context$Builder v0;
java.util.Set v2;
java.util.Map v1;
java.lang.Object v5, v6, v7;
boolean v4;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.Context$Builder option(java.lang.String,java.lang.String)>(v6, v7);
goto label1;
label2:
return v0;
}
public org.graalvm.polyglot.Context$Builder arguments(java.lang.String, java.lang.String[])
{
org.graalvm.polyglot.Context$Builder v0;
java.lang.String[] v2, v3;
java.util.HashMap v11;
java.util.Map v10, v12;
int v4, v5, v6, v7;
java.lang.Object v9;
java.lang.String v1, v8;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String[];
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = v2;
v4 = lengthof v2;
if v4 <= 0 goto label2;
v5 = lengthof v2;
v3 = newarray (java.lang.String)[v5];
v6 = 0;
label1:
v7 = lengthof v2;
if v6 >= v7 goto label2;
v8 = v2[v6];
v9 = staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object)>(v8);
v3[v6] = v9;
v6 = v6 + 1;
goto label1;
label2:
v10 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map arguments>;
if v10 != null goto label3;
v11 = new java.util.HashMap;
specialinvoke v11.<java.util.HashMap: void <init>()>();
v0.<org.graalvm.polyglot.Context$Builder: java.util.Map arguments> = v11;
label3:
v12 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map arguments>;
interfaceinvoke v12.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v3);
return v0;
}
public org.graalvm.polyglot.Context$Builder allowIO(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowIO> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder fileSystem(org.graalvm.polyglot.io.FileSystem)
{
org.graalvm.polyglot.io.FileSystem v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.io.FileSystem;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "FileSystem must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.FileSystem customFileSystem> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder serverTransport(org.graalvm.polyglot.io.MessageTransport)
{
org.graalvm.polyglot.Context$Builder v0;
org.graalvm.polyglot.io.MessageTransport v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.io.MessageTransport;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "MessageTransport must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.MessageTransport messageTransport> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder logHandler(java.util.logging.Handler)
{
java.util.logging.Handler v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.util.logging.Handler;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Handler must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder timeZone(java.time.ZoneId)
{
org.graalvm.polyglot.Context$Builder v0;
java.time.ZoneId v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.time.ZoneId;
v0.<org.graalvm.polyglot.Context$Builder: java.time.ZoneId zone> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder logHandler(java.io.OutputStream)
{
java.io.OutputStream v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.io.OutputStream;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "LogOut must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowCreateProcess(boolean)
{
java.lang.Boolean v2;
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(v1);
v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowCreateProcess> = v2;
return v0;
}
public org.graalvm.polyglot.Context$Builder processHandler(org.graalvm.polyglot.io.ProcessHandler)
{
org.graalvm.polyglot.io.ProcessHandler v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.io.ProcessHandler;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Handler must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.ProcessHandler processHandler> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder resourceLimits(org.graalvm.polyglot.ResourceLimits)
{
org.graalvm.polyglot.Context$Builder v0;
org.graalvm.polyglot.ResourceLimits v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.ResourceLimits;
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.ResourceLimits resourceLimits> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder allowEnvironmentAccess(org.graalvm.polyglot.EnvironmentAccess)
{
org.graalvm.polyglot.Context$Builder v0;
org.graalvm.polyglot.EnvironmentAccess v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: org.graalvm.polyglot.EnvironmentAccess;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "AccessPolicy must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.EnvironmentAccess environmentAccess> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder environment(java.lang.String, java.lang.String)
{
org.graalvm.polyglot.Context$Builder v0;
java.util.Map v3, v5;
java.util.HashMap v4;
java.lang.String v1, v2;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Name must be non null.");
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v2, "Value must be non null.");
v3 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map environment>;
if v3 != null goto label1;
v4 = new java.util.HashMap;
specialinvoke v4.<java.util.HashMap: void <init>()>();
v0.<org.graalvm.polyglot.Context$Builder: java.util.Map environment> = v4;
label1:
v5 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map environment>;
interfaceinvoke v5.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
return v0;
}
public org.graalvm.polyglot.Context$Builder environment(java.util.Map)
{
java.util.Iterator v3;
org.graalvm.polyglot.Context$Builder v0;
java.util.Set v2;
java.util.Map v1;
java.lang.Object v5, v6, v7;
boolean v4;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.util.Map;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "Env must be non null.");
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set entrySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label2;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
v6 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getKey()>();
v7 = interfaceinvoke v5.<java.util.Map$Entry: java.lang.Object getValue()>();
virtualinvoke v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.Context$Builder environment(java.lang.String,java.lang.String)>(v6, v7);
goto label1;
label2:
return v0;
}
public org.graalvm.polyglot.Context$Builder currentWorkingDirectory(java.nio.file.Path)
{
org.graalvm.polyglot.Context$Builder v0;
java.lang.IllegalArgumentException v3;
java.nio.file.Path v1;
boolean v2;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.nio.file.Path;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "WorkingDirectory must be non null.");
v2 = interfaceinvoke v1.<java.nio.file.Path: boolean isAbsolute()>();
if v2 != 0 goto label1;
v3 = new java.lang.IllegalArgumentException;
specialinvoke v3.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("WorkingDirectory must be an absolute path.");
throw v3;
label1:
v0.<org.graalvm.polyglot.Context$Builder: java.nio.file.Path currentWorkingDirectory> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder hostClassLoader(java.lang.ClassLoader)
{
java.lang.ClassLoader v1;
org.graalvm.polyglot.Context$Builder v0;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.lang.ClassLoader;
staticinvoke <java.util.Objects: java.lang.Object requireNonNull(java.lang.Object,java.lang.String)>(v1, "ClassLoader must be non null.");
v0.<org.graalvm.polyglot.Context$Builder: java.lang.ClassLoader hostClassLoader> = v1;
return v0;
}
public org.graalvm.polyglot.Context$Builder useSystemExit(boolean)
{
org.graalvm.polyglot.Context$Builder v0;
boolean v1;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: boolean;
v0.<org.graalvm.polyglot.Context$Builder: boolean useSystemExit> = v1;
return v0;
}
public org.graalvm.polyglot.Context build()
{
org.graalvm.polyglot.io.MessageTransport v61, v62, v69;
java.util.Map v48, v49, v51, v71, v72, v81, v82, v83, v89;
java.nio.file.Path v41, v43;
java.time.ZoneId v90;
org.graalvm.polyglot.EnvironmentAccess v33, v35, v88;
java.lang.ClassLoader v91;
org.graalvm.polyglot.io.ProcessHandler v87;
org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractEngineDispatch v73;
java.lang.String v42, v44;
org.graalvm.polyglot.ResourceLimits v36, v37;
org.graalvm.polyglot.HostAccess v14, v17, v23, v78;
org.graalvm.polyglot.io.FileSystem v39, v85;
org.graalvm.polyglot.Engine v45;
java.lang.IllegalStateException v40, v70;
boolean v10, v12, v2, v20, v22, v25, v28, v29, v30, v32, v34, v4, v6, v64, v67, v8, v92, v93;
java.util.function.Predicate v16, v21, v27, v80;
org.graalvm.polyglot.Engine$Builder v47, v50;
org.graalvm.polyglot.Context v94;
org.graalvm.polyglot.Context$Builder v0;
java.lang.String[] v46, v84;
java.lang.Boolean v1, v11, v13, v18, v19, v3, v31, v5, v7, v9;
java.io.OutputStream v52, v53, v55, v56, v57, v58, v75, v76;
java.lang.IllegalArgumentException v15;
org.graalvm.polyglot.PolyglotAccess v24, v26, v79;
java.lang.Object v38, v63, v65, v66, v68, v74, v86;
java.io.InputStream v54, v59, v60, v77;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowNativeAccess>;
v2 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v1);
v3 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowCreateThread>;
v4 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v3);
v5 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowIO>;
v6 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v5);
v7 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowHostClassLoading>;
v8 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v7);
v9 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowExperimentalOptions>;
v10 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v9);
v11 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowInnerContextOptions>;
v12 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v11);
v13 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowHostAccess>;
if v13 == null goto label01;
v14 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.HostAccess hostAccess>;
if v14 == null goto label01;
v15 = new java.lang.IllegalArgumentException;
specialinvoke v15.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("The method allowHostAccess with boolean and with HostAccess are mutually exclusive.");
throw v15;
label01:
v16 = v0.<org.graalvm.polyglot.Context$Builder: java.util.function.Predicate hostClassFilter>;
v17 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.HostAccess hostAccess>;
v18 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowHostAccess>;
if v18 == null goto label03;
v19 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowHostAccess>;
v20 = virtualinvoke v19.<java.lang.Boolean: boolean booleanValue()>();
if v20 == 0 goto label03;
v21 = <org.graalvm.polyglot.Context: java.util.function.Predicate UNSET_HOST_LOOKUP>;
if v16 != v21 goto label02;
v16 = <org.graalvm.polyglot.Context: java.util.function.Predicate ALL_HOST_CLASSES>;
label02:
v17 = <org.graalvm.polyglot.HostAccess: org.graalvm.polyglot.HostAccess ALL>;
label03:
if v17 != null goto label06;
v22 = v0.<org.graalvm.polyglot.Context$Builder: boolean allowAllAccess>;
if v22 == 0 goto label04;
v23 = <org.graalvm.polyglot.HostAccess: org.graalvm.polyglot.HostAccess ALL>;
goto label05;
label04:
v23 = <org.graalvm.polyglot.HostAccess: org.graalvm.polyglot.HostAccess EXPLICIT>;
label05:
v17 = v23;
label06:
v24 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.PolyglotAccess polyglotAccess>;
if v24 != null goto label09;
v25 = v0.<org.graalvm.polyglot.Context$Builder: boolean allowAllAccess>;
if v25 == 0 goto label07;
v26 = <org.graalvm.polyglot.PolyglotAccess: org.graalvm.polyglot.PolyglotAccess ALL>;
goto label08;
label07:
v26 = <org.graalvm.polyglot.PolyglotAccess: org.graalvm.polyglot.PolyglotAccess NONE>;
label08:
v24 = v26;
label09:
v27 = <org.graalvm.polyglot.Context: java.util.function.Predicate UNSET_HOST_LOOKUP>;
if v16 != v27 goto label11;
v28 = v0.<org.graalvm.polyglot.Context$Builder: boolean allowAllAccess>;
if v28 == 0 goto label10;
v16 = <org.graalvm.polyglot.Context: java.util.function.Predicate ALL_HOST_CLASSES>;
goto label11;
label10:
v16 = null;
label11:
if v16 == null goto label12;
v29 = 1;
goto label13;
label12:
v29 = 0;
label13:
v30 = v29;
if v16 != null goto label14;
v16 = <org.graalvm.polyglot.Context: java.util.function.Predicate NO_HOST_CLASSES>;
label14:
v31 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Boolean allowCreateProcess>;
v32 = specialinvoke v0.<org.graalvm.polyglot.Context$Builder: boolean orAllAccess(java.lang.Boolean)>(v31);
v33 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.EnvironmentAccess environmentAccess>;
if v33 != null goto label17;
v34 = v0.<org.graalvm.polyglot.Context$Builder: boolean allowAllAccess>;
if v34 == 0 goto label15;
v35 = <org.graalvm.polyglot.EnvironmentAccess: org.graalvm.polyglot.EnvironmentAccess INHERIT>;
goto label16;
label15:
v35 = <org.graalvm.polyglot.EnvironmentAccess: org.graalvm.polyglot.EnvironmentAccess NONE>;
label16:
v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.EnvironmentAccess environmentAccess> = v35;
label17:
v36 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.ResourceLimits resourceLimits>;
if v36 == null goto label18;
v37 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.ResourceLimits resourceLimits>;
v38 = v37.<org.graalvm.polyglot.ResourceLimits: java.lang.Object receiver>;
goto label19;
label18:
v38 = null;
label19:
if v6 != 0 goto label20;
v39 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.FileSystem customFileSystem>;
if v39 == null goto label20;
v40 = new java.lang.IllegalStateException;
specialinvoke v40.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot install custom FileSystem when IO is disabled.");
throw v40;
label20:
v41 = v0.<org.graalvm.polyglot.Context$Builder: java.nio.file.Path currentWorkingDirectory>;
if v41 != null goto label21;
v42 = null;
goto label22;
label21:
v43 = v0.<org.graalvm.polyglot.Context$Builder: java.nio.file.Path currentWorkingDirectory>;
v42 = interfaceinvoke v43.<java.nio.file.Path: java.lang.String toString()>();
label22:
v44 = v42;
v45 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.Engine sharedEngine>;
if v45 != null goto label31;
v46 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.String[] permittedLanguages>;
v47 = staticinvoke <org.graalvm.polyglot.Engine: org.graalvm.polyglot.Engine$Builder newBuilder(java.lang.String[])>(v46);
v48 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options>;
if v48 != null goto label23;
v49 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label24;
label23:
v49 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options>;
label24:
v50 = virtualinvoke v47.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder options(java.util.Map)>(v49);
v51 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
v52 = null;
v53 = null;
v54 = null;
v55 = v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream out>;
if v55 == null goto label25;
v56 = v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream out>;
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder out(java.io.OutputStream)>(v56);
label25:
v57 = v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream err>;
if v57 == null goto label26;
v58 = v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream err>;
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder err(java.io.OutputStream)>(v58);
label26:
v59 = v0.<org.graalvm.polyglot.Context$Builder: java.io.InputStream in>;
if v59 == null goto label27;
v60 = v0.<org.graalvm.polyglot.Context$Builder: java.io.InputStream in>;
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder in(java.io.InputStream)>(v60);
label27:
v61 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.MessageTransport messageTransport>;
if v61 == null goto label28;
v62 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.MessageTransport messageTransport>;
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder serverTransport(org.graalvm.polyglot.io.MessageTransport)>(v62);
label28:
v63 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler>;
v64 = v63 instanceof java.util.logging.Handler;
if v64 == 0 goto label29;
v65 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler>;
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder logHandler(java.util.logging.Handler)>(v65);
goto label30;
label29:
v66 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler>;
v67 = v66 instanceof java.io.OutputStream;
if v67 == 0 goto label30;
v68 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler>;
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder logHandler(java.io.OutputStream)>(v68);
label30:
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder allowExperimentalOptions(boolean)>(v10);
virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine$Builder setBoundEngine(boolean)>(1);
v45 = virtualinvoke v50.<org.graalvm.polyglot.Engine$Builder: org.graalvm.polyglot.Engine build()>();
goto label35;
label31:
v69 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.MessageTransport messageTransport>;
if v69 == null goto label32;
v70 = new java.lang.IllegalStateException;
specialinvoke v70.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Cannot use MessageTransport in a context that shares an Engine.");
throw v70;
label32:
v71 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options>;
if v71 != null goto label33;
v72 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label34;
label33:
v72 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map options>;
label34:
v51 = v72;
v52 = v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream out>;
v53 = v0.<org.graalvm.polyglot.Context$Builder: java.io.OutputStream err>;
v54 = v0.<org.graalvm.polyglot.Context$Builder: java.io.InputStream in>;
label35:
v73 = v45.<org.graalvm.polyglot.Engine: org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractEngineDispatch dispatch>;
v74 = v45.<org.graalvm.polyglot.Engine: java.lang.Object receiver>;
v75 = v52;
v76 = v53;
v77 = v54;
v78 = v17;
v79 = v24;
v80 = v16;
v81 = v51;
v82 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map arguments>;
if v82 != null goto label36;
v83 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label37;
label36:
v83 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map arguments>;
label37:
v84 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.String[] permittedLanguages>;
v85 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.FileSystem customFileSystem>;
v86 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.Object customLogHandler>;
v87 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.io.ProcessHandler processHandler>;
v88 = v0.<org.graalvm.polyglot.Context$Builder: org.graalvm.polyglot.EnvironmentAccess environmentAccess>;
v89 = v0.<org.graalvm.polyglot.Context$Builder: java.util.Map environment>;
v90 = v0.<org.graalvm.polyglot.Context$Builder: java.time.ZoneId zone>;
v91 = v0.<org.graalvm.polyglot.Context$Builder: java.lang.ClassLoader hostClassLoader>;
v92 = v0.<org.graalvm.polyglot.Context$Builder: boolean allowValueSharing>;
v93 = v0.<org.graalvm.polyglot.Context$Builder: boolean useSystemExit>;
v94 = virtualinvoke v73.<org.graalvm.polyglot.impl.AbstractPolyglotImpl$AbstractEngineDispatch: org.graalvm.polyglot.Context createContext(java.lang.Object,java.io.OutputStream,java.io.OutputStream,java.io.InputStream,boolean,org.graalvm.polyglot.HostAccess,org.graalvm.polyglot.PolyglotAccess,boolean,boolean,boolean,boolean,boolean,boolean,java.util.function.Predicate,java.util.Map,java.util.Map,java.lang.String[],org.graalvm.polyglot.io.FileSystem,java.lang.Object,boolean,org.graalvm.polyglot.io.ProcessHandler,org.graalvm.polyglot.EnvironmentAccess,java.util.Map,java.time.ZoneId,java.lang.Object,java.lang.String,java.lang.ClassLoader,boolean,boolean)>(v74, v75, v76, v77, v30, v78, v79, v2, v4, v6, v8, v12, v10, v80, v81, v83, v84, v85, v86, v32, v87, v88, v89, v90, v38, v44, v91, v92, v93);
return v94;
}
private boolean orAllAccess(java.lang.Boolean)
{
java.lang.Boolean v1;
org.graalvm.polyglot.Context$Builder v0;
boolean v2;
v0 := @this: org.graalvm.polyglot.Context$Builder;
v1 := @parameter0: java.lang.Boolean;
if v1 == null goto label1;
v2 = virtualinvoke v1.<java.lang.Boolean: boolean booleanValue()>();
goto label2;
label1:
v2 = v0.<org.graalvm.polyglot.Context$Builder: boolean allowAllAccess>;
label2:
return v2;
}
}