public final class org.graalvm.polyglot.PolyglotAccess$Builder extends java.lang.Object
{
private org.graalvm.collections.EconomicMap evalAccess;
private org.graalvm.collections.EconomicSet bindingsAccess;
final org.graalvm.polyglot.PolyglotAccess this$0;
void <init>(org.graalvm.polyglot.PolyglotAccess)
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
org.graalvm.polyglot.PolyglotAccess v1;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: org.graalvm.polyglot.PolyglotAccess;
v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.polyglot.PolyglotAccess this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public transient org.graalvm.polyglot.PolyglotAccess$Builder allowEvalBetween(java.lang.String[])
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
java.lang.String[] v1;
java.util.List v10;
org.graalvm.collections.EconomicMap v2, v3, v7, v9;
int v4, v5;
java.lang.Object v8;
java.lang.String v6;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: java.lang.String[];
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
if v2 != null goto label1;
v3 = staticinvoke <org.graalvm.collections.EconomicMap: org.graalvm.collections.EconomicMap create()>();
v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess> = v3;
label1:
v4 = lengthof v1;
v5 = 0;
label2:
if v5 >= v4 goto label4;
v6 = v1[v5];
virtualinvoke v6.<java.lang.Object: java.lang.Class getClass()>();
v7 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
v8 = interfaceinvoke v7.<org.graalvm.collections.EconomicMap: java.lang.Object get(java.lang.Object)>(v6);
if v8 != null goto label3;
v8 = staticinvoke <org.graalvm.collections.EconomicSet: org.graalvm.collections.EconomicSet create()>();
v9 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
interfaceinvoke v9.<org.graalvm.collections.EconomicMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v8);
label3:
v10 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
interfaceinvoke v8.<org.graalvm.collections.EconomicSet: void addAll(java.lang.Iterable)>(v10);
v5 = v5 + 1;
goto label2;
label4:
return v0;
}
public transient org.graalvm.polyglot.PolyglotAccess$Builder denyEvalBetween(java.lang.String[])
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
java.lang.String[] v1;
java.util.List v8;
org.graalvm.collections.EconomicMap v2, v6;
int v3, v4;
java.lang.Object v7;
java.lang.String v5;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: java.lang.String[];
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
if v2 == null goto label3;
v3 = lengthof v1;
v4 = 0;
label1:
if v4 >= v3 goto label3;
v5 = v1[v4];
virtualinvoke v5.<java.lang.Object: java.lang.Class getClass()>();
v6 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
v7 = interfaceinvoke v6.<org.graalvm.collections.EconomicMap: java.lang.Object get(java.lang.Object)>(v5);
if v7 == null goto label2;
v8 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
interfaceinvoke v7.<org.graalvm.collections.EconomicSet: void removeAll(java.lang.Iterable)>(v8);
label2:
v4 = v4 + 1;
goto label1;
label3:
return v0;
}
public org.graalvm.polyglot.PolyglotAccess$Builder allowEval(java.lang.String, java.lang.String)
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
org.graalvm.collections.EconomicMap v3, v4, v5, v7;
java.lang.Object v6;
java.lang.String v1, v2;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
if v3 != null goto label1;
v4 = staticinvoke <org.graalvm.collections.EconomicMap: org.graalvm.collections.EconomicMap create()>();
v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess> = v4;
label1:
v5 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
v6 = interfaceinvoke v5.<org.graalvm.collections.EconomicMap: java.lang.Object get(java.lang.Object)>(v1);
if v6 != null goto label2;
v6 = staticinvoke <org.graalvm.collections.EconomicSet: org.graalvm.collections.EconomicSet create()>();
v7 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
interfaceinvoke v7.<org.graalvm.collections.EconomicMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v6);
label2:
interfaceinvoke v6.<org.graalvm.collections.EconomicSet: boolean add(java.lang.Object)>(v2);
return v0;
}
public org.graalvm.polyglot.PolyglotAccess$Builder denyEval(java.lang.String, java.lang.String)
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
org.graalvm.collections.EconomicMap v3, v4;
java.lang.Object v5;
java.lang.String v1, v2;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
virtualinvoke v2.<java.lang.Object: java.lang.Class getClass()>();
v3 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
if v3 == null goto label1;
v4 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
v5 = interfaceinvoke v4.<org.graalvm.collections.EconomicMap: java.lang.Object get(java.lang.Object)>(v1);
if v5 == null goto label1;
interfaceinvoke v5.<org.graalvm.collections.EconomicSet: void remove(java.lang.Object)>(v2);
label1:
return v0;
}
public org.graalvm.polyglot.PolyglotAccess$Builder allowBindingsAccess(java.lang.String)
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
java.lang.String v1;
org.graalvm.collections.EconomicSet v2, v3, v4;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicSet bindingsAccess>;
if v2 != null goto label1;
v3 = staticinvoke <org.graalvm.collections.EconomicSet: org.graalvm.collections.EconomicSet create()>();
v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicSet bindingsAccess> = v3;
label1:
v4 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicSet bindingsAccess>;
interfaceinvoke v4.<org.graalvm.collections.EconomicSet: boolean add(java.lang.Object)>(v1);
return v0;
}
public org.graalvm.polyglot.PolyglotAccess$Builder denyBindingsAccess(java.lang.String)
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
java.lang.String v1;
org.graalvm.collections.EconomicSet v2, v3;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 := @parameter0: java.lang.String;
virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v2 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicSet bindingsAccess>;
if v2 == null goto label1;
v3 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicSet bindingsAccess>;
interfaceinvoke v3.<org.graalvm.collections.EconomicSet: void remove(java.lang.Object)>(v1);
label1:
return v0;
}
public org.graalvm.polyglot.PolyglotAccess build()
{
org.graalvm.polyglot.PolyglotAccess$Builder v0;
org.graalvm.polyglot.PolyglotAccess v1;
org.graalvm.collections.EconomicMap v2;
org.graalvm.collections.EconomicSet v3;
v0 := @this: org.graalvm.polyglot.PolyglotAccess$Builder;
v1 = new org.graalvm.polyglot.PolyglotAccess;
v2 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicMap evalAccess>;
v3 = v0.<org.graalvm.polyglot.PolyglotAccess$Builder: org.graalvm.collections.EconomicSet bindingsAccess>;
specialinvoke v1.<org.graalvm.polyglot.PolyglotAccess: void <init>(boolean,org.graalvm.collections.EconomicMap,org.graalvm.collections.EconomicSet)>(0, v2, v3);
return v1;
}
}