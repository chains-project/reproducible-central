final class org.graalvm.polyglot.io.ByteArraySequence extends java.lang.Object implements org.graalvm.polyglot.io.ByteSequence
{
private final byte[] buffer;
private final int start;
private final int length;
private int hash;
static final boolean $assertionsDisabled;
void <init>(byte[], int, int)
{
byte[] v1;
java.lang.AssertionError v11, v7, v9;
int v2, v3, v5, v6;
org.graalvm.polyglot.io.ByteArraySequence v0;
boolean v10, v4, v8;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v4 = <org.graalvm.polyglot.io.ByteArraySequence: boolean $assertionsDisabled>;
if v4 != 0 goto label1;
v5 = lengthof v1;
v6 = v2 + v3;
if v5 >= v6 goto label1;
v7 = new java.lang.AssertionError;
specialinvoke v7.<java.lang.AssertionError: void <init>()>();
throw v7;
label1:
v8 = <org.graalvm.polyglot.io.ByteArraySequence: boolean $assertionsDisabled>;
if v8 != 0 goto label2;
if v2 >= 0 goto label2;
v9 = new java.lang.AssertionError;
specialinvoke v9.<java.lang.AssertionError: void <init>()>();
throw v9;
label2:
v10 = <org.graalvm.polyglot.io.ByteArraySequence: boolean $assertionsDisabled>;
if v10 != 0 goto label3;
if v3 >= 0 goto label3;
v11 = new java.lang.AssertionError;
specialinvoke v11.<java.lang.AssertionError: void <init>()>();
throw v11;
label3:
v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer> = v1;
v0.<org.graalvm.polyglot.io.ByteArraySequence: int start> = v2;
v0.<org.graalvm.polyglot.io.ByteArraySequence: int length> = v3;
return;
}
public int length()
{
int v1;
org.graalvm.polyglot.io.ByteArraySequence v0;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
return v1;
}
public byte byteAt(int)
{
byte[] v9;
java.lang.IndexOutOfBoundsException v7;
byte v10;
int v1, v2, v3, v4, v5, v6;
java.lang.String v8;
org.graalvm.polyglot.io.ByteArraySequence v0;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 := @parameter0: int;
v2 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v3 = v2 + v1;
v4 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v5 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
v6 = v4 + v5;
if v3 < v6 goto label1;
v7 = new java.lang.IndexOutOfBoundsException;
v8 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v1);
specialinvoke v7.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v8);
throw v7;
label1:
v9 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v10 = v9[v3];
return v10;
}
public byte[] toByteArray()
{
byte[] v1, v6;
int v2, v3, v4, v5;
org.graalvm.polyglot.io.ByteArraySequence v0;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v2 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v3 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v4 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
v5 = v3 + v4;
v6 = staticinvoke <java.util.Arrays: byte[] copyOfRange(byte[],int,int)>(v1, v2, v5);
return v6;
}
public boolean equals(java.lang.Object)
{
byte[] v17, v21, v29, v3, v4;
byte v20, v23, v32, v33;
boolean v2, v24, v9;
int v10, v11, v12, v13, v14, v15, v16, v18, v19, v22, v25, v26, v27, v28, v30, v31, v5, v6, v7, v8;
java.lang.Object v1;
org.graalvm.polyglot.io.ByteArraySequence v0;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label01;
return 1;
label01:
v2 = v1 instanceof org.graalvm.polyglot.io.ByteArraySequence;
if v2 == 0 goto label10;
v3 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v4 = v1.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
if v3 != v4 goto label04;
v5 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v6 = v1.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
if v5 != v6 goto label02;
v7 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
v8 = v1.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
if v7 != v8 goto label02;
v9 = 1;
goto label03;
label02:
v9 = 0;
label03:
return v9;
label04:
v10 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
v11 = v1.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
if v10 == v11 goto label05;
return 0;
label05:
v12 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int hash>;
v13 = v1.<org.graalvm.polyglot.io.ByteArraySequence: int hash>;
if v12 == 0 goto label06;
if v13 == 0 goto label06;
if v12 == v13 goto label06;
return 0;
label06:
v14 = v1.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v15 = 0;
label07:
v16 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
if v15 >= v16 goto label09;
v17 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v18 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v19 = v18 + v15;
v20 = v17[v19];
v21 = v1.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v22 = v14 + v15;
v23 = v21[v22];
if v20 == v23 goto label08;
return 0;
label08:
v15 = v15 + 1;
goto label07;
label09:
return 1;
label10:
v24 = v1 instanceof org.graalvm.polyglot.io.ByteSequence;
if v24 == 0 goto label15;
v25 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
v26 = interfaceinvoke v1.<org.graalvm.polyglot.io.ByteSequence: int length()>();
if v25 == v26 goto label11;
return 0;
label11:
v27 = 0;
label12:
v28 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
if v27 >= v28 goto label14;
v29 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v30 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v31 = v30 + v27;
v32 = v29[v31];
v33 = interfaceinvoke v1.<org.graalvm.polyglot.io.ByteSequence: byte byteAt(int)>(v27);
if v32 == v33 goto label13;
return 0;
label13:
v27 = v27 + 1;
goto label12;
label14:
return 1;
label15:
return 0;
}
public int hashCode()
{
byte[] v12, v17, v21, v30, v8;
byte v10, v14, v19, v23, v31;
short v11;
int v1, v13, v15, v16, v18, v2, v20, v22, v24, v25, v26, v27, v28, v29, v3, v4, v5, v6, v7, v9;
org.graalvm.polyglot.io.ByteArraySequence v0;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int hash>;
if v1 != 0 goto label4;
v2 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
if v2 <= 0 goto label4;
v3 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v4 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int length>;
v5 = v3 + v4;
v1 = 1;
v6 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
label1:
v7 = v6 + 3;
if v7 >= v5 goto label2;
v8 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v9 = v6 + 0;
v10 = v8[v9];
v11 = v10 & 255;
v12 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v13 = v6 + 1;
v14 = v12[v13];
v15 = (int) 65280;
v16 = v14 & v15;
v17 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v18 = v6 + 2;
v19 = v17[v18];
v20 = v19 & 16711680;
v21 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v22 = v6 + 3;
v23 = v21[v22];
v24 = v23 & -16777216;
v25 = 31 * v1;
v26 = v11 | v16;
v27 = v26 | v20;
v28 = v27 | v24;
v1 = v25 + v28;
v6 = v6 + 4;
goto label1;
label2:
if v6 >= v5 goto label3;
v29 = 31 * v1;
v30 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
v31 = v30[v6];
v1 = v29 + v31;
v6 = v6 + 1;
goto label2;
label3:
v0.<org.graalvm.polyglot.io.ByteArraySequence: int hash> = v1;
label4:
return v1;
}
public org.graalvm.polyglot.io.ByteSequence subSequence(int, int)
{
byte[] v15;
java.lang.IndexOutOfBoundsException v11, v4, v8;
int v1, v10, v12, v2, v3, v6, v7;
java.lang.String v13, v5, v9;
org.graalvm.polyglot.io.ByteArraySequence v0, v14;
v0 := @this: org.graalvm.polyglot.io.ByteArraySequence;
v1 := @parameter0: int;
v2 := @parameter1: int;
v3 = v2 - v1;
if v3 >= 0 goto label1;
v4 = new java.lang.IndexOutOfBoundsException;
v5 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v3);
specialinvoke v4.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v5);
throw v4;
label1:
v6 = v0.<org.graalvm.polyglot.io.ByteArraySequence: int start>;
v7 = v6 + v1;
if v7 >= 0 goto label2;
v8 = new java.lang.IndexOutOfBoundsException;
v9 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v1);
specialinvoke v8.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v9);
throw v8;
label2:
v10 = virtualinvoke v0.<org.graalvm.polyglot.io.ByteArraySequence: int length()>();
if v2 <= v10 goto label3;
v11 = new java.lang.IndexOutOfBoundsException;
v12 = v7 + v3;
v13 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v12);
specialinvoke v11.<java.lang.IndexOutOfBoundsException: void <init>(java.lang.String)>(v13);
throw v11;
label3:
v14 = new org.graalvm.polyglot.io.ByteArraySequence;
v15 = v0.<org.graalvm.polyglot.io.ByteArraySequence: byte[] buffer>;
specialinvoke v14.<org.graalvm.polyglot.io.ByteArraySequence: void <init>(byte[],int,int)>(v15, v7, v3);
return v14;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/graalvm/polyglot/io/ByteArraySequence;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.graalvm.polyglot.io.ByteArraySequence: boolean $assertionsDisabled> = v2;
return;
}
}