public interface  org.graalvm.word.Pointer extends java.lang.Object implements org.graalvm.word.UnsignedWord, org.graalvm.word.PointerBase
{
public abstract java.lang.Object toObject();
public abstract java.lang.Object toObjectNonNull();
public abstract byte readByte(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract char readChar(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract short readShort(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract int readInt(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract long readLong(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract float readFloat(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract double readDouble(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract org.graalvm.word.WordBase readWord(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract java.lang.Object readObject(org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract byte readByte(int, org.graalvm.word.LocationIdentity);
public abstract char readChar(int, org.graalvm.word.LocationIdentity);
public abstract short readShort(int, org.graalvm.word.LocationIdentity);
public abstract int readInt(int, org.graalvm.word.LocationIdentity);
public abstract long readLong(int, org.graalvm.word.LocationIdentity);
public abstract float readFloat(int, org.graalvm.word.LocationIdentity);
public abstract double readDouble(int, org.graalvm.word.LocationIdentity);
public abstract org.graalvm.word.WordBase readWord(int, org.graalvm.word.LocationIdentity);
public abstract java.lang.Object readObject(int, org.graalvm.word.LocationIdentity);
public abstract org.graalvm.word.WordBase readWordVolatile(int, org.graalvm.word.LocationIdentity);
public abstract void writeByte(org.graalvm.word.WordBase, byte, org.graalvm.word.LocationIdentity);
public abstract void writeChar(org.graalvm.word.WordBase, char, org.graalvm.word.LocationIdentity);
public abstract void writeShort(org.graalvm.word.WordBase, short, org.graalvm.word.LocationIdentity);
public abstract void writeInt(org.graalvm.word.WordBase, int, org.graalvm.word.LocationIdentity);
public abstract void writeLong(org.graalvm.word.WordBase, long, org.graalvm.word.LocationIdentity);
public abstract void writeFloat(org.graalvm.word.WordBase, float, org.graalvm.word.LocationIdentity);
public abstract void writeDouble(org.graalvm.word.WordBase, double, org.graalvm.word.LocationIdentity);
public abstract void writeWord(org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract void initializeLong(org.graalvm.word.WordBase, long, org.graalvm.word.LocationIdentity);
public abstract void writeObject(org.graalvm.word.WordBase, java.lang.Object, org.graalvm.word.LocationIdentity);
public abstract void writeByte(int, byte, org.graalvm.word.LocationIdentity);
public abstract void writeChar(int, char, org.graalvm.word.LocationIdentity);
public abstract void writeShort(int, short, org.graalvm.word.LocationIdentity);
public abstract void writeInt(int, int, org.graalvm.word.LocationIdentity);
public abstract void writeLong(int, long, org.graalvm.word.LocationIdentity);
public abstract void writeFloat(int, float, org.graalvm.word.LocationIdentity);
public abstract void writeDouble(int, double, org.graalvm.word.LocationIdentity);
public abstract void writeWord(int, org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract void initializeLong(int, long, org.graalvm.word.LocationIdentity);
public abstract void writeObject(int, java.lang.Object, org.graalvm.word.LocationIdentity);
public abstract byte readByte(org.graalvm.word.WordBase);
public abstract char readChar(org.graalvm.word.WordBase);
public abstract short readShort(org.graalvm.word.WordBase);
public abstract int readInt(org.graalvm.word.WordBase);
public abstract long readLong(org.graalvm.word.WordBase);
public abstract float readFloat(org.graalvm.word.WordBase);
public abstract double readDouble(org.graalvm.word.WordBase);
public abstract org.graalvm.word.WordBase readWord(org.graalvm.word.WordBase);
public abstract java.lang.Object readObject(org.graalvm.word.WordBase);
public abstract byte readByte(int);
public abstract char readChar(int);
public abstract short readShort(int);
public abstract int readInt(int);
public abstract long readLong(int);
public abstract float readFloat(int);
public abstract double readDouble(int);
public abstract org.graalvm.word.WordBase readWord(int);
public abstract java.lang.Object readObject(int);
public abstract void writeByte(org.graalvm.word.WordBase, byte);
public abstract void writeChar(org.graalvm.word.WordBase, char);
public abstract void writeShort(org.graalvm.word.WordBase, short);
public abstract void writeInt(org.graalvm.word.WordBase, int);
public abstract void writeLong(org.graalvm.word.WordBase, long);
public abstract void writeFloat(org.graalvm.word.WordBase, float);
public abstract void writeDouble(org.graalvm.word.WordBase, double);
public abstract void writeWord(org.graalvm.word.WordBase, org.graalvm.word.WordBase);
public abstract void writeObject(org.graalvm.word.WordBase, java.lang.Object);
public abstract int compareAndSwapInt(org.graalvm.word.WordBase, int, int, org.graalvm.word.LocationIdentity);
public abstract long compareAndSwapLong(org.graalvm.word.WordBase, long, long, org.graalvm.word.LocationIdentity);
public abstract org.graalvm.word.WordBase compareAndSwapWord(org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract java.lang.Object compareAndSwapObject(org.graalvm.word.WordBase, java.lang.Object, java.lang.Object, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapInt(org.graalvm.word.WordBase, int, int, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapLong(org.graalvm.word.WordBase, long, long, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapWord(org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapObject(org.graalvm.word.WordBase, java.lang.Object, java.lang.Object, org.graalvm.word.LocationIdentity);
public abstract void writeByte(int, byte);
public abstract void writeChar(int, char);
public abstract void writeShort(int, short);
public abstract void writeInt(int, int);
public abstract void writeLong(int, long);
public abstract void writeFloat(int, float);
public abstract void writeDouble(int, double);
public abstract void writeWord(int, org.graalvm.word.WordBase);
public abstract void writeObject(int, java.lang.Object);
public abstract void writeWordVolatile(int, org.graalvm.word.WordBase);
public abstract int compareAndSwapInt(int, int, int, org.graalvm.word.LocationIdentity);
public abstract long compareAndSwapLong(int, long, long, org.graalvm.word.LocationIdentity);
public abstract org.graalvm.word.WordBase compareAndSwapWord(int, org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract java.lang.Object compareAndSwapObject(int, java.lang.Object, java.lang.Object, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapInt(int, int, int, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapLong(int, long, long, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapWord(int, org.graalvm.word.WordBase, org.graalvm.word.WordBase, org.graalvm.word.LocationIdentity);
public abstract boolean logicCompareAndSwapObject(int, java.lang.Object, java.lang.Object, org.graalvm.word.LocationIdentity);
public abstract org.graalvm.word.Pointer add(org.graalvm.word.UnsignedWord);
public abstract org.graalvm.word.Pointer add(int);
public abstract org.graalvm.word.Pointer subtract(org.graalvm.word.UnsignedWord);
public abstract org.graalvm.word.Pointer subtract(int);
public abstract org.graalvm.word.Pointer and(org.graalvm.word.UnsignedWord);
public abstract org.graalvm.word.Pointer and(int);
public abstract org.graalvm.word.Pointer or(org.graalvm.word.UnsignedWord);
public abstract org.graalvm.word.Pointer or(int);
}