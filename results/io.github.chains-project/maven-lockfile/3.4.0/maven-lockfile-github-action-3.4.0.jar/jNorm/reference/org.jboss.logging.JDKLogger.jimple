final class org.jboss.logging.JDKLogger extends org.jboss.logging.Logger
{
private static final long serialVersionUID;
private final transient java.util.logging.Logger logger;
public void <init>(java.lang.String)
{
org.jboss.logging.JDKLogger v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 := @this: org.jboss.logging.JDKLogger;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logging.Logger: void <init>(java.lang.String)>(v1);
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger> = v2;
return;
}
protected void doLog(org.jboss.logging.Logger$Level, java.lang.String, java.lang.Object, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v16, v5;
java.lang.Object[] v4;
org.jboss.logging.JBossLogRecord v7;
java.util.logging.Level v8;
java.util.ResourceBundle v14;
java.lang.String v10, v12, v2, v9;
boolean v6;
java.util.logging.Logger v11, v13, v15;
org.jboss.logging.JDKLogger v0;
org.jboss.logging.Logger$Level v1;
java.lang.Object v3;
v0 := @this: org.jboss.logging.JDKLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.Object;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = virtualinvoke v0.<org.jboss.logging.JDKLogger: boolean isEnabled(org.jboss.logging.Logger$Level)>(v1);
if v6 == 0 goto label5;
label1:
v7 = new org.jboss.logging.JBossLogRecord;
v8 = staticinvoke <org.jboss.logging.JDKLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
v9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v3);
specialinvoke v7.<org.jboss.logging.JBossLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v8, v9, v2);
if v5 == null goto label2;
virtualinvoke v7.<org.jboss.logging.JBossLogRecord: void setThrown(java.lang.Throwable)>(v5);
label2:
v10 = virtualinvoke v0.<org.jboss.logging.JDKLogger: java.lang.String getName()>();
virtualinvoke v7.<org.jboss.logging.JBossLogRecord: void setLoggerName(java.lang.String)>(v10);
virtualinvoke v7.<org.jboss.logging.JBossLogRecord: void setParameters(java.lang.Object[])>(v4);
v11 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
v12 = virtualinvoke v11.<java.util.logging.Logger: java.lang.String getResourceBundleName()>();
virtualinvoke v7.<org.jboss.logging.JBossLogRecord: void setResourceBundleName(java.lang.String)>(v12);
v13 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
v14 = virtualinvoke v13.<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()>();
virtualinvoke v7.<org.jboss.logging.JBossLogRecord: void setResourceBundle(java.util.ResourceBundle)>(v14);
v15 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
virtualinvoke v15.<java.util.logging.Logger: void log(java.util.logging.LogRecord)>(v7);
label3:
goto label5;
label4:
v16 := @caughtexception;
label5:
return;
catch java.lang.Throwable from label1 to label3 with label4;
}
protected void doLogf(org.jboss.logging.Logger$Level, java.lang.String, java.lang.String, java.lang.Object[], java.lang.Throwable)
{
java.lang.Throwable v18, v5;
java.lang.Object[] v10, v4;
org.jboss.logging.JBossLogRecord v12;
java.util.logging.Level v13;
java.util.ResourceBundle v8;
java.lang.String v11, v14, v16, v2, v3;
boolean v6;
java.util.MissingResourceException v9;
java.util.logging.Logger v15, v17, v7;
org.jboss.logging.JDKLogger v0;
org.jboss.logging.Logger$Level v1;
v0 := @this: org.jboss.logging.JDKLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.lang.Object[];
v5 := @parameter4: java.lang.Throwable;
v6 = virtualinvoke v0.<org.jboss.logging.JDKLogger: boolean isEnabled(org.jboss.logging.Logger$Level)>(v1);
if v6 == 0 goto label11;
label01:
v7 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
v8 = virtualinvoke v7.<java.util.logging.Logger: java.util.ResourceBundle getResourceBundle()>();
if v8 == null goto label05;
label02:
v3 = virtualinvoke v8.<java.util.ResourceBundle: java.lang.String getString(java.lang.String)>(v3);
label03:
goto label05;
label04:
v9 := @caughtexception;
label05:
if v4 != null goto label06;
v10 = newarray (java.lang.Object)[0];
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v3, v10);
goto label07;
label06:
v11 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>(v3, v4);
label07:
v12 = new org.jboss.logging.JBossLogRecord;
v13 = staticinvoke <org.jboss.logging.JDKLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
specialinvoke v12.<org.jboss.logging.JBossLogRecord: void <init>(java.util.logging.Level,java.lang.String,java.lang.String)>(v13, v11, v2);
if v5 == null goto label08;
virtualinvoke v12.<org.jboss.logging.JBossLogRecord: void setThrown(java.lang.Throwable)>(v5);
label08:
v14 = virtualinvoke v0.<org.jboss.logging.JDKLogger: java.lang.String getName()>();
virtualinvoke v12.<org.jboss.logging.JBossLogRecord: void setLoggerName(java.lang.String)>(v14);
v15 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
v16 = virtualinvoke v15.<java.util.logging.Logger: java.lang.String getResourceBundleName()>();
virtualinvoke v12.<org.jboss.logging.JBossLogRecord: void setResourceBundleName(java.lang.String)>(v16);
virtualinvoke v12.<org.jboss.logging.JBossLogRecord: void setResourceBundle(java.util.ResourceBundle)>(null);
virtualinvoke v12.<org.jboss.logging.JBossLogRecord: void setParameters(java.lang.Object[])>(null);
v17 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
virtualinvoke v17.<java.util.logging.Logger: void log(java.util.logging.LogRecord)>(v12);
label09:
goto label11;
label10:
v18 := @caughtexception;
label11:
return;
catch java.util.MissingResourceException from label02 to label03 with label04;
catch java.lang.Throwable from label01 to label09 with label10;
}
private static java.util.logging.Level translate(org.jboss.logging.Logger$Level)
{
org.jboss.logging.Logger$Level v0, v1, v3;
java.util.logging.Level v5;
org.jboss.logging.JDKLevel v2, v4;
v0 := @parameter0: org.jboss.logging.Logger$Level;
v1 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level TRACE>;
if v0 != v1 goto label1;
v2 = <org.jboss.logging.JDKLevel: org.jboss.logging.JDKLevel TRACE>;
return v2;
label1:
v3 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level DEBUG>;
if v0 != v3 goto label2;
v4 = <org.jboss.logging.JDKLevel: org.jboss.logging.JDKLevel DEBUG>;
return v4;
label2:
v5 = staticinvoke <org.jboss.logging.JDKLogger: java.util.logging.Level infoOrHigher(org.jboss.logging.Logger$Level)>(v0);
return v5;
}
private static java.util.logging.Level infoOrHigher(org.jboss.logging.Logger$Level)
{
java.util.logging.Level v9;
org.jboss.logging.JDKLevel v2, v4, v6, v8;
org.jboss.logging.Logger$Level v0, v1, v3, v5, v7;
v0 := @parameter0: org.jboss.logging.Logger$Level;
v1 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level INFO>;
if v0 != v1 goto label1;
v2 = <org.jboss.logging.JDKLevel: org.jboss.logging.JDKLevel INFO>;
return v2;
label1:
v3 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level WARN>;
if v0 != v3 goto label2;
v4 = <org.jboss.logging.JDKLevel: org.jboss.logging.JDKLevel WARN>;
return v4;
label2:
v5 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level ERROR>;
if v0 != v5 goto label3;
v6 = <org.jboss.logging.JDKLevel: org.jboss.logging.JDKLevel ERROR>;
return v6;
label3:
v7 = <org.jboss.logging.Logger$Level: org.jboss.logging.Logger$Level FATAL>;
if v0 != v7 goto label4;
v8 = <org.jboss.logging.JDKLevel: org.jboss.logging.JDKLevel FATAL>;
return v8;
label4:
v9 = <org.jboss.logging.JDKLevel: java.util.logging.Level ALL>;
return v9;
}
public boolean isEnabled(org.jboss.logging.Logger$Level)
{
org.jboss.logging.JDKLogger v0;
org.jboss.logging.Logger$Level v1;
java.util.logging.Logger v2;
boolean v4;
java.util.logging.Level v3;
v0 := @this: org.jboss.logging.JDKLogger;
v1 := @parameter0: org.jboss.logging.Logger$Level;
v2 = v0.<org.jboss.logging.JDKLogger: java.util.logging.Logger logger>;
v3 = staticinvoke <org.jboss.logging.JDKLogger: java.util.logging.Level translate(org.jboss.logging.Logger$Level)>(v1);
v4 = virtualinvoke v2.<java.util.logging.Logger: boolean isLoggable(java.util.logging.Level)>(v3);
return v4;
}
}