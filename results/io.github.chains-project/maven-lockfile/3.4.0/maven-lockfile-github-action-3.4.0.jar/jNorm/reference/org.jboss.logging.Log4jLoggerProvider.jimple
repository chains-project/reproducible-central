public final class org.jboss.logging.Log4jLoggerProvider extends java.lang.Object implements org.jboss.logging.LoggerProvider
{
public void <init>()
{
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.jboss.logging.Logger getLogger(java.lang.String)
{
org.jboss.logging.Log4jLogger v2;
java.lang.String v1, v3, v5;
org.jboss.logging.Log4jLoggerProvider v0;
boolean v4;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = new org.jboss.logging.Log4jLogger;
v3 = "";
v4 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v1);
if v4 == 0 goto label1;
v5 = "ROOT";
goto label2;
label1:
v5 = v1;
label2:
specialinvoke v2.<org.jboss.logging.Log4jLogger: void <init>(java.lang.String)>(v5);
return v2;
}
public void clearMdc()
{
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
staticinvoke <org.apache.log4j.MDC: void clear()>();
return;
}
public java.lang.Object getMdc(java.lang.String)
{
java.lang.Object v2;
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <org.apache.log4j.MDC: java.lang.Object get(java.lang.String)>(v1);
return v2;
}
public java.util.Map getMdcMap()
{
org.jboss.logging.Log4jLoggerProvider v0;
java.util.Hashtable v1;
java.util.Map v2;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 = staticinvoke <org.apache.log4j.MDC: java.util.Hashtable getContext()>();
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label2;
label1:
v2 = v1;
label2:
return v2;
}
public java.lang.Object putMdc(java.lang.String, java.lang.Object)
{
java.lang.Throwable v4;
java.lang.Object v2, v3;
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
label1:
v3 = staticinvoke <org.apache.log4j.MDC: java.lang.Object get(java.lang.String)>(v1);
label2:
staticinvoke <org.apache.log4j.MDC: void put(java.lang.String,java.lang.Object)>(v1, v2);
return v3;
label3:
v4 := @caughtexception;
staticinvoke <org.apache.log4j.MDC: void put(java.lang.String,java.lang.Object)>(v1, v2);
throw v4;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void removeMdc(java.lang.String)
{
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 := @parameter0: java.lang.String;
staticinvoke <org.apache.log4j.MDC: void remove(java.lang.String)>(v1);
return;
}
public void clearNdc()
{
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
staticinvoke <org.apache.log4j.NDC: void remove()>();
return;
}
public java.lang.String getNdc()
{
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 = staticinvoke <org.apache.log4j.NDC: java.lang.String get()>();
return v1;
}
public int getNdcDepth()
{
int v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 = staticinvoke <org.apache.log4j.NDC: int getDepth()>();
return v1;
}
public java.lang.String peekNdc()
{
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 = staticinvoke <org.apache.log4j.NDC: java.lang.String peek()>();
return v1;
}
public java.lang.String popNdc()
{
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 = staticinvoke <org.apache.log4j.NDC: java.lang.String pop()>();
return v1;
}
public void pushNdc(java.lang.String)
{
java.lang.String v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 := @parameter0: java.lang.String;
staticinvoke <org.apache.log4j.NDC: void push(java.lang.String)>(v1);
return;
}
public void setNdcMaxDepth(int)
{
int v1;
org.jboss.logging.Log4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Log4jLoggerProvider;
v1 := @parameter0: int;
staticinvoke <org.apache.log4j.NDC: void setMaxDepth(int)>(v1);
return;
}
}