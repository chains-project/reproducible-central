public final class org.jboss.logging.Slf4jLoggerProvider extends org.jboss.logging.AbstractLoggerProvider implements org.jboss.logging.LoggerProvider
{
public void <init>()
{
org.jboss.logging.Slf4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
specialinvoke v0.<org.jboss.logging.AbstractLoggerProvider: void <init>()>();
return;
}
public org.jboss.logging.Logger getLogger(java.lang.String)
{
org.jboss.logging.Slf4jLocationAwareLogger v4;
org.slf4j.Logger v2;
org.jboss.logging.Slf4jLogger v5;
java.lang.String v1;
org.jboss.logging.Slf4jLoggerProvider v0;
boolean v3;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <org.slf4j.LoggerFactory: org.slf4j.Logger getLogger(java.lang.String)>(v1);
v3 = v2 instanceof org.slf4j.spi.LocationAwareLogger;
if v3 == 0 goto label1;
v4 = new org.jboss.logging.Slf4jLocationAwareLogger;
specialinvoke v4.<org.jboss.logging.Slf4jLocationAwareLogger: void <init>(java.lang.String,org.slf4j.spi.LocationAwareLogger)>(v1, v2);
return v4;
label1:
v5 = new org.jboss.logging.Slf4jLogger;
specialinvoke v5.<org.jboss.logging.Slf4jLogger: void <init>(java.lang.String,org.slf4j.Logger)>(v1, v2);
return v5;
}
public void clearMdc()
{
org.jboss.logging.Slf4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
staticinvoke <org.slf4j.MDC: void clear()>();
return;
}
public java.lang.Object putMdc(java.lang.String, java.lang.Object)
{
java.lang.Throwable v5;
java.lang.Object v2;
java.lang.String v1, v3, v4, v6;
org.jboss.logging.Slf4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Object;
label1:
v3 = staticinvoke <org.slf4j.MDC: java.lang.String get(java.lang.String)>(v1);
label2:
if v2 != null goto label3;
staticinvoke <org.slf4j.MDC: void remove(java.lang.String)>(v1);
goto label4;
label3:
v4 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
staticinvoke <org.slf4j.MDC: void put(java.lang.String,java.lang.String)>(v1, v4);
label4:
return v3;
label5:
v5 := @caughtexception;
if v2 != null goto label6;
staticinvoke <org.slf4j.MDC: void remove(java.lang.String)>(v1);
goto label7;
label6:
v6 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v2);
staticinvoke <org.slf4j.MDC: void put(java.lang.String,java.lang.String)>(v1, v6);
label7:
throw v5;
catch java.lang.Throwable from label1 to label2 with label5;
}
public java.lang.Object getMdc(java.lang.String)
{
java.lang.String v1, v2;
org.jboss.logging.Slf4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <org.slf4j.MDC: java.lang.String get(java.lang.String)>(v1);
return v2;
}
public void removeMdc(java.lang.String)
{
java.lang.String v1;
org.jboss.logging.Slf4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
v1 := @parameter0: java.lang.String;
staticinvoke <org.slf4j.MDC: void remove(java.lang.String)>(v1);
return;
}
public java.util.Map getMdcMap()
{
java.util.LinkedHashMap v3;
java.util.Map v1, v2;
org.jboss.logging.Slf4jLoggerProvider v0;
v0 := @this: org.jboss.logging.Slf4jLoggerProvider;
v1 = staticinvoke <org.slf4j.MDC: java.util.Map getCopyOfContextMap()>();
if v1 != null goto label1;
v2 = staticinvoke <java.util.Collections: java.util.Map emptyMap()>();
goto label2;
label1:
v3 = new java.util.LinkedHashMap;
v2 = v3;
specialinvoke v3.<java.util.LinkedHashMap: void <init>(java.util.Map)>(v1);
label2:
return v2;
}
}