public final enum class org.jboss.logging.annotations.Message$Format extends java.lang.Enum
{
public static final enum org.jboss.logging.annotations.Message$Format PRINTF;
public static final enum org.jboss.logging.annotations.Message$Format MESSAGE_FORMAT;
public static final enum org.jboss.logging.annotations.Message$Format NO_FORMAT;
private static final org.jboss.logging.annotations.Message$Format[] $VALUES;
public static org.jboss.logging.annotations.Message$Format[] values()
{
java.lang.Object v1;
org.jboss.logging.annotations.Message$Format[] v0;
v0 = <org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format[] $VALUES>;
v1 = virtualinvoke v0.<java.lang.Object: java.lang.Object clone()>();
return v1;
}
public static org.jboss.logging.annotations.Message$Format valueOf(java.lang.String)
{
java.lang.String v0;
java.lang.Enum v1;
v0 := @parameter0: java.lang.String;
v1 = staticinvoke <java.lang.Enum: java.lang.Enum valueOf(java.lang.Class,java.lang.String)>(class "Lorg/jboss/logging/annotations/Message$Format;", v0);
return v1;
}
private void <init>(java.lang.String, int)
{
int v2;
java.lang.String v1;
org.jboss.logging.annotations.Message$Format v0;
v0 := @this: org.jboss.logging.annotations.Message$Format;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Enum: void <init>(java.lang.String,int)>(v1, v2);
return;
}
private static org.jboss.logging.annotations.Message$Format[] $values()
{
org.jboss.logging.annotations.Message$Format v1, v2, v3;
org.jboss.logging.annotations.Message$Format[] v0;
v0 = newarray (org.jboss.logging.annotations.Message$Format)[3];
v1 = <org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format PRINTF>;
v0[0] = v1;
v2 = <org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format MESSAGE_FORMAT>;
v0[1] = v2;
v3 = <org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format NO_FORMAT>;
v0[2] = v3;
return v0;
}
static void <clinit>()
{
org.jboss.logging.annotations.Message$Format v0, v1, v2;
org.jboss.logging.annotations.Message$Format[] v3;
v0 = new org.jboss.logging.annotations.Message$Format;
specialinvoke v0.<org.jboss.logging.annotations.Message$Format: void <init>(java.lang.String,int)>("PRINTF", 0);
<org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format PRINTF> = v0;
v1 = new org.jboss.logging.annotations.Message$Format;
specialinvoke v1.<org.jboss.logging.annotations.Message$Format: void <init>(java.lang.String,int)>("MESSAGE_FORMAT", 1);
<org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format MESSAGE_FORMAT> = v1;
v2 = new org.jboss.logging.annotations.Message$Format;
specialinvoke v2.<org.jboss.logging.annotations.Message$Format: void <init>(java.lang.String,int)>("NO_FORMAT", 2);
<org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format NO_FORMAT> = v2;
v3 = staticinvoke <org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format[] $values()>();
<org.jboss.logging.annotations.Message$Format: org.jboss.logging.annotations.Message$Format[] $VALUES> = v3;
return;
}
}