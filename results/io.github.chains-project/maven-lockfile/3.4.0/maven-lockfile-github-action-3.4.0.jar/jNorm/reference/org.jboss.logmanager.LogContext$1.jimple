class org.jboss.logmanager.LogContext$1 extends java.lang.Object implements java.util.Enumeration
{
org.jboss.logmanager.LoggerNode next;
final java.util.ArrayDeque val$nodeStack;
final org.jboss.logmanager.LogContext this$0;
void <init>(org.jboss.logmanager.LogContext, java.util.ArrayDeque)
{
org.jboss.logmanager.LogContext v1;
org.jboss.logmanager.LogContext$1 v0;
java.util.ArrayDeque v2;
v0 := @this: org.jboss.logmanager.LogContext$1;
v1 := @parameter0: org.jboss.logmanager.LogContext;
v2 := @parameter1: java.util.ArrayDeque;
v0.<org.jboss.logmanager.LogContext$1: org.jboss.logmanager.LogContext this$0> = v1;
v0.<org.jboss.logmanager.LogContext$1: java.util.ArrayDeque val$nodeStack> = v2;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean hasMoreElements()
{
org.jboss.logmanager.LogContext$1 v0;
java.util.Iterator v11;
java.util.Collection v10;
org.jboss.logmanager.LoggerNode v1;
java.lang.Object v5, v8;
java.util.ArrayDeque v2, v4, v7, v9;
boolean v12, v3, v6;
v0 := @this: org.jboss.logmanager.LogContext$1;
v1 = v0.<org.jboss.logmanager.LogContext$1: org.jboss.logmanager.LoggerNode next>;
if v1 == null goto label1;
return 1;
label1:
v2 = v0.<org.jboss.logmanager.LogContext$1: java.util.ArrayDeque val$nodeStack>;
v3 = virtualinvoke v2.<java.util.ArrayDeque: boolean isEmpty()>();
if v3 != 0 goto label3;
v4 = v0.<org.jboss.logmanager.LogContext$1: java.util.ArrayDeque val$nodeStack>;
v5 = virtualinvoke v4.<java.util.ArrayDeque: java.lang.Object peekFirst()>();
v6 = interfaceinvoke v5.<java.util.Iterator: boolean hasNext()>();
if v6 != 0 goto label2;
v7 = v0.<org.jboss.logmanager.LogContext$1: java.util.ArrayDeque val$nodeStack>;
virtualinvoke v7.<java.util.ArrayDeque: java.lang.Object pollFirst()>();
goto label1;
label2:
v8 = interfaceinvoke v5.<java.util.Iterator: java.lang.Object next()>();
v9 = v0.<org.jboss.logmanager.LogContext$1: java.util.ArrayDeque val$nodeStack>;
v10 = virtualinvoke v8.<org.jboss.logmanager.LoggerNode: java.util.Collection getChildren()>();
v11 = interfaceinvoke v10.<java.util.Collection: java.util.Iterator iterator()>();
virtualinvoke v9.<java.util.ArrayDeque: void addLast(java.lang.Object)>(v11);
v12 = virtualinvoke v8.<org.jboss.logmanager.LoggerNode: boolean hasLogger()>();
if v12 == 0 goto label1;
v0.<org.jboss.logmanager.LogContext$1: org.jboss.logmanager.LoggerNode next> = v8;
return 1;
label3:
return 0;
}
public java.lang.String nextElement()
{
java.lang.Throwable v5;
org.jboss.logmanager.LogContext$1 v0;
org.jboss.logmanager.LoggerNode v3;
java.lang.String v4;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.jboss.logmanager.LogContext$1;
v1 = virtualinvoke v0.<org.jboss.logmanager.LogContext$1: boolean hasMoreElements()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.jboss.logmanager.LogContext$1: org.jboss.logmanager.LoggerNode next>;
v4 = virtualinvoke v3.<org.jboss.logmanager.LoggerNode: java.lang.String getFullName()>();
label2:
v0.<org.jboss.logmanager.LogContext$1: org.jboss.logmanager.LoggerNode next> = null;
return v4;
label3:
v5 := @caughtexception;
v0.<org.jboss.logmanager.LogContext$1: org.jboss.logmanager.LoggerNode next> = null;
throw v5;
catch java.lang.Throwable from label1 to label2 with label3;
}
}