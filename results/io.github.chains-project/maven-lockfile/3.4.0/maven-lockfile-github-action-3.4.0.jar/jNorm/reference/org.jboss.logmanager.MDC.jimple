public final class org.jboss.logmanager.MDC extends java.lang.Object
{
private static final org.jboss.logmanager.MDCProvider mdcProvider;
private void <init>()
{
org.jboss.logmanager.MDC v0;
v0 := @this: org.jboss.logmanager.MDC;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static org.jboss.logmanager.MDCProvider getMDCProvider()
{
java.io.PrintStream v8, v9;
java.lang.Throwable v7;
java.util.Iterator v3;
java.util.ServiceLoader v2;
org.jboss.logmanager.ThreadLocalMDC v5;
java.lang.Class v0;
java.lang.Object v6;
java.lang.ClassLoader v1;
boolean v4;
v0 = class "Lorg/jboss/logmanager/MDC;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v2 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lorg/jboss/logmanager/MDCProvider;", v1);
v3 = virtualinvoke v2.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 != 0 goto label3;
v5 = new org.jboss.logmanager.ThreadLocalMDC;
specialinvoke v5.<org.jboss.logmanager.ThreadLocalMDC: void <init>()>();
label2:
return v5;
label3:
v6 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
label4:
return v6;
label5:
v7 := @caughtexception;
v8 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v8.<java.io.PrintStream: void print(java.lang.String)>("Warning: failed to load MDC Provider: ");
v9 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v7.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(v9);
goto label1;
catch java.util.ServiceConfigurationError from label1 to label2 with label5;
catch java.lang.RuntimeException from label1 to label2 with label5;
catch java.util.ServiceConfigurationError from label3 to label4 with label5;
catch java.lang.RuntimeException from label3 to label4 with label5;
}
public static java.lang.String get(java.lang.String)
{
org.jboss.logmanager.MDCProvider v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v2 = interfaceinvoke v1.<org.jboss.logmanager.MDCProvider: java.lang.String get(java.lang.String)>(v0);
return v2;
}
public static java.lang.Object getObject(java.lang.String)
{
org.jboss.logmanager.MDCProvider v1;
java.lang.Object v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v2 = interfaceinvoke v1.<org.jboss.logmanager.MDCProvider: java.lang.Object getObject(java.lang.String)>(v0);
return v2;
}
public static java.lang.String put(java.lang.String, java.lang.String)
{
org.jboss.logmanager.MDCProvider v2;
java.lang.String v0, v1, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v3 = interfaceinvoke v2.<org.jboss.logmanager.MDCProvider: java.lang.String put(java.lang.String,java.lang.String)>(v0, v1);
return v3;
}
public static java.lang.Object putObject(java.lang.String, java.lang.Object)
{
org.jboss.logmanager.MDCProvider v2;
java.lang.Object v1, v3;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.Object;
v2 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v3 = interfaceinvoke v2.<org.jboss.logmanager.MDCProvider: java.lang.Object putObject(java.lang.String,java.lang.Object)>(v0, v1);
return v3;
}
public static java.lang.String remove(java.lang.String)
{
org.jboss.logmanager.MDCProvider v1;
java.lang.String v0, v2;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v2 = interfaceinvoke v1.<org.jboss.logmanager.MDCProvider: java.lang.String remove(java.lang.String)>(v0);
return v2;
}
public static java.lang.Object removeObject(java.lang.String)
{
org.jboss.logmanager.MDCProvider v1;
java.lang.Object v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v2 = interfaceinvoke v1.<org.jboss.logmanager.MDCProvider: java.lang.Object removeObject(java.lang.String)>(v0);
return v2;
}
public static java.util.Map copy()
{
org.jboss.logmanager.MDCProvider v0;
java.util.Map v1;
v0 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v1 = interfaceinvoke v0.<org.jboss.logmanager.MDCProvider: java.util.Map copy()>();
return v1;
}
public static java.util.Map copyObject()
{
org.jboss.logmanager.MDCProvider v0;
java.util.Map v1;
v0 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
v1 = interfaceinvoke v0.<org.jboss.logmanager.MDCProvider: java.util.Map copyObject()>();
return v1;
}
public static void clear()
{
org.jboss.logmanager.MDCProvider v0;
v0 = <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider>;
interfaceinvoke v0.<org.jboss.logmanager.MDCProvider: void clear()>();
return;
}
static void <clinit>()
{
org.jboss.logmanager.MDCProvider v0;
v0 = staticinvoke <org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider getMDCProvider()>();
<org.jboss.logmanager.MDC: org.jboss.logmanager.MDCProvider mdcProvider> = v0;
return;
}
}