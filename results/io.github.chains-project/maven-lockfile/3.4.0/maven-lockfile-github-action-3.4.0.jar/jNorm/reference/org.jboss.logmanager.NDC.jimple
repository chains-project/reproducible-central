public final class org.jboss.logmanager.NDC extends java.lang.Object
{
private static final org.jboss.logmanager.NDCProvider ndcProvider;
private void <init>()
{
org.jboss.logmanager.NDC v0;
v0 := @this: org.jboss.logmanager.NDC;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
static org.jboss.logmanager.NDCProvider getNDCProvider()
{
java.io.PrintStream v8, v9;
java.lang.Throwable v7;
java.util.Iterator v3;
java.util.ServiceLoader v2;
org.jboss.logmanager.ThreadLocalNDC v5;
java.lang.Class v0;
java.lang.Object v6;
java.lang.ClassLoader v1;
boolean v4;
v0 = class "Lorg/jboss/logmanager/NDC;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.ClassLoader getClassLoader()>();
v2 = staticinvoke <java.util.ServiceLoader: java.util.ServiceLoader load(java.lang.Class,java.lang.ClassLoader)>(class "Lorg/jboss/logmanager/NDCProvider;", v1);
v3 = virtualinvoke v2.<java.util.ServiceLoader: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 != 0 goto label3;
v5 = new org.jboss.logmanager.ThreadLocalNDC;
specialinvoke v5.<org.jboss.logmanager.ThreadLocalNDC: void <init>()>();
label2:
return v5;
label3:
v6 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
label4:
return v6;
label5:
v7 := @caughtexception;
v8 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v8.<java.io.PrintStream: void print(java.lang.String)>("Warning: failed to load NDC Provider: ");
v9 = <java.lang.System: java.io.PrintStream err>;
virtualinvoke v7.<java.lang.Throwable: void printStackTrace(java.io.PrintStream)>(v9);
goto label1;
catch java.util.ServiceConfigurationError from label1 to label2 with label5;
catch java.lang.RuntimeException from label1 to label2 with label5;
catch java.util.ServiceConfigurationError from label3 to label4 with label5;
catch java.lang.RuntimeException from label3 to label4 with label5;
}
public static int push(java.lang.String)
{
int v2;
java.lang.String v0;
org.jboss.logmanager.NDCProvider v1;
v0 := @parameter0: java.lang.String;
v1 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
v2 = interfaceinvoke v1.<org.jboss.logmanager.NDCProvider: int push(java.lang.String)>(v0);
return v2;
}
public static java.lang.String pop()
{
java.lang.String v1;
org.jboss.logmanager.NDCProvider v0;
v0 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
v1 = interfaceinvoke v0.<org.jboss.logmanager.NDCProvider: java.lang.String pop()>();
return v1;
}
public static void clear()
{
org.jboss.logmanager.NDCProvider v0;
v0 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
interfaceinvoke v0.<org.jboss.logmanager.NDCProvider: void clear()>();
return;
}
public static void trimTo(int)
{
int v0;
org.jboss.logmanager.NDCProvider v1;
v0 := @parameter0: int;
v1 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
interfaceinvoke v1.<org.jboss.logmanager.NDCProvider: void trimTo(int)>(v0);
return;
}
public static int getDepth()
{
int v1;
org.jboss.logmanager.NDCProvider v0;
v0 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
v1 = interfaceinvoke v0.<org.jboss.logmanager.NDCProvider: int getDepth()>();
return v1;
}
public static java.lang.String get()
{
java.lang.String v1;
org.jboss.logmanager.NDCProvider v0;
v0 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
v1 = interfaceinvoke v0.<org.jboss.logmanager.NDCProvider: java.lang.String get()>();
return v1;
}
public static java.lang.String get(int)
{
int v0;
java.lang.String v2;
org.jboss.logmanager.NDCProvider v1;
v0 := @parameter0: int;
v1 = <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider>;
v2 = interfaceinvoke v1.<org.jboss.logmanager.NDCProvider: java.lang.String get(int)>(v0);
return v2;
}
static void <clinit>()
{
org.jboss.logmanager.NDCProvider v0;
v0 = staticinvoke <org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider getNDCProvider()>();
<org.jboss.logmanager.NDC: org.jboss.logmanager.NDCProvider ndcProvider> = v0;
return;
}
}