public class org.jboss.logmanager.formatters.CompoundFormatStep extends java.lang.Object implements org.jboss.logmanager.formatters.FormatStep
{
private final org.jboss.logmanager.formatters.FormatStep[] steps;
protected void <init>(org.jboss.logmanager.formatters.FormatStep[])
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
org.jboss.logmanager.formatters.FormatStep[] v1;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 := @parameter0: org.jboss.logmanager.formatters.FormatStep[];
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps> = v1;
return;
}
public void render(java.util.logging.Formatter, java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord)
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
org.jboss.logmanager.formatters.FormatStep[] v4;
org.jboss.logmanager.ExtLogRecord v3;
java.util.logging.Formatter v1;
int v5, v6;
java.lang.StringBuilder v2;
org.jboss.logmanager.formatters.FormatStep v7;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: java.lang.StringBuilder;
v3 := @parameter2: org.jboss.logmanager.ExtLogRecord;
v4 = v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps>;
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label2;
v7 = v4[v6];
interfaceinvoke v7.<org.jboss.logmanager.formatters.FormatStep: void render(java.util.logging.Formatter,java.lang.StringBuilder,org.jboss.logmanager.ExtLogRecord)>(v1, v2, v3);
v6 = v6 + 1;
goto label1;
label2:
return;
}
public void render(java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord)
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
java.lang.StringBuilder v1;
org.jboss.logmanager.ExtLogRecord v2;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 := @parameter0: java.lang.StringBuilder;
v2 := @parameter1: org.jboss.logmanager.ExtLogRecord;
virtualinvoke v0.<org.jboss.logmanager.formatters.CompoundFormatStep: void render(java.util.logging.Formatter,java.lang.StringBuilder,org.jboss.logmanager.ExtLogRecord)>(null, v1, v2);
return;
}
public int estimateLength()
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
int v1, v3, v4, v6;
org.jboss.logmanager.formatters.FormatStep[] v2;
org.jboss.logmanager.formatters.FormatStep v5;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 = 0;
v2 = v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
v6 = interfaceinvoke v5.<org.jboss.logmanager.formatters.FormatStep: int estimateLength()>();
v1 = v1 + v6;
v4 = v4 + 1;
goto label1;
label2:
return v1;
}
public boolean isCallerInformationRequired()
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
int v2, v3;
org.jboss.logmanager.formatters.FormatStep[] v1;
org.jboss.logmanager.formatters.FormatStep v4;
boolean v5;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 = v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps>;
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = interfaceinvoke v4.<org.jboss.logmanager.formatters.FormatStep: boolean isCallerInformationRequired()>();
if v5 == 0 goto label2;
return 1;
label2:
v3 = v3 + 1;
goto label1;
label3:
return 0;
}
public org.jboss.logmanager.formatters.FormatStep$ItemType getItemType()
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
org.jboss.logmanager.formatters.FormatStep$ItemType v1;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 = <org.jboss.logmanager.formatters.FormatStep$ItemType: org.jboss.logmanager.formatters.FormatStep$ItemType COMPOUND>;
return v1;
}
public int childStepCount()
{
int v2;
org.jboss.logmanager.formatters.CompoundFormatStep v0;
org.jboss.logmanager.formatters.FormatStep[] v1;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 = v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps>;
v2 = lengthof v1;
return v2;
}
public org.jboss.logmanager.formatters.FormatStep getChildStep(int)
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
int v1;
org.jboss.logmanager.formatters.FormatStep[] v2;
org.jboss.logmanager.formatters.FormatStep v3;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 := @parameter0: int;
v2 = v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps>;
v3 = v2[v1];
return v3;
}
public org.jboss.logmanager.formatters.FormatStep[] childSteps()
{
org.jboss.logmanager.formatters.CompoundFormatStep v0;
org.jboss.logmanager.formatters.FormatStep[] v1;
java.lang.Object v2;
v0 := @this: org.jboss.logmanager.formatters.CompoundFormatStep;
v1 = v0.<org.jboss.logmanager.formatters.CompoundFormatStep: org.jboss.logmanager.formatters.FormatStep[] steps>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.Object clone()>();
return v2;
}
}