class org.jboss.logmanager.formatters.Formatters$17 extends org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep
{
final java.lang.String val$argument;
void <init>(boolean, int, boolean, int, java.lang.String)
{
int v2, v4;
java.lang.String v5;
org.jboss.logmanager.formatters.Formatters$17 v0;
boolean v1, v3;
v0 := @this: org.jboss.logmanager.formatters.Formatters$17;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
v5 := @parameter4: java.lang.String;
v0.<org.jboss.logmanager.formatters.Formatters$17: java.lang.String val$argument> = v5;
specialinvoke v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: void <init>(boolean,int,boolean,int)>(v1, v2, v3, v4);
return;
}
public org.jboss.logmanager.formatters.FormatStep$ItemType getItemType()
{
org.jboss.logmanager.formatters.Formatters$17 v0;
org.jboss.logmanager.formatters.FormatStep$ItemType v1;
v0 := @this: org.jboss.logmanager.formatters.Formatters$17;
v1 = <org.jboss.logmanager.formatters.FormatStep$ItemType: org.jboss.logmanager.formatters.FormatStep$ItemType EXCEPTION_TRACE>;
return v1;
}
public void renderRaw(java.util.logging.Formatter, java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord)
{
org.jboss.logmanager.formatters.Formatters$17$1 v4;
java.lang.StringBuilder v2;
org.jboss.logmanager.formatters.Formatters$17 v0;
org.jboss.logmanager.ExtLogRecord v3;
java.util.logging.Formatter v1;
v0 := @this: org.jboss.logmanager.formatters.Formatters$17;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: java.lang.StringBuilder;
v3 := @parameter2: org.jboss.logmanager.ExtLogRecord;
v4 = new org.jboss.logmanager.formatters.Formatters$17$1;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$17$1: void <init>(org.jboss.logmanager.formatters.Formatters$17,org.jboss.logmanager.ExtLogRecord,java.lang.StringBuilder)>(v0, v3, v2);
staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v4);
return;
}
}