abstract class org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep extends java.lang.Object implements org.jboss.logmanager.formatters.FormatStep
{
private final boolean leftJustify;
private final boolean truncateBeginning;
private final int minimumWidth;
private final int maximumWidth;
protected void <init>(boolean, int, boolean, int)
{
java.lang.IllegalArgumentException v5, v6;
int v2, v4, v7;
org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep v0;
boolean v1, v3;
v0 := @this: org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep;
v1 := @parameter0: boolean;
v2 := @parameter1: int;
v3 := @parameter2: boolean;
v4 := @parameter3: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
if v4 == 0 goto label1;
if v2 <= v4 goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Specified minimum width may not be greater than the specified maximum width");
throw v5;
label1:
if v4 < 0 goto label2;
if v2 >= 0 goto label3;
label2:
v6 = new java.lang.IllegalArgumentException;
specialinvoke v6.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Minimum and maximum widths must not be less than zero");
throw v6;
label3:
v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: boolean leftJustify> = v1;
v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: boolean truncateBeginning> = v3;
v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: int minimumWidth> = v2;
if v4 != 0 goto label4;
v7 = 2147483647;
goto label5;
label4:
v7 = v4;
label5:
v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: int maximumWidth> = v7;
return;
}
public void render(java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord)
{
java.lang.StringBuilder v1;
org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep v0;
org.jboss.logmanager.ExtLogRecord v2;
v0 := @this: org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep;
v1 := @parameter0: java.lang.StringBuilder;
v2 := @parameter1: org.jboss.logmanager.ExtLogRecord;
virtualinvoke v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: void render(java.util.logging.Formatter,java.lang.StringBuilder,org.jboss.logmanager.ExtLogRecord)>(null, v1, v2);
return;
}
public void render(java.util.logging.Formatter, java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord)
{
org.jboss.logmanager.ExtLogRecord v3;
java.util.logging.Formatter v1;
int v10, v12, v13, v14, v15, v17, v19, v20, v21, v4, v5, v7, v8, v9;
boolean v11, v18, v6;
java.lang.StringBuilder v16, v2;
org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep v0;
v0 := @this: org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: java.lang.StringBuilder;
v3 := @parameter2: org.jboss.logmanager.ExtLogRecord;
v4 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: int minimumWidth>;
v5 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: int maximumWidth>;
v6 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: boolean leftJustify>;
if v6 == 0 goto label4;
v7 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
virtualinvoke v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: void renderRaw(java.util.logging.Formatter,java.lang.StringBuilder,org.jboss.logmanager.ExtLogRecord)>(v1, v2, v3);
v8 = virtualinvoke v2.<java.lang.StringBuilder: int length()>();
v9 = v8 - v7;
v10 = v9 - v5;
if v10 <= 0 goto label2;
v11 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: boolean truncateBeginning>;
if v11 == 0 goto label1;
v12 = v7 + v10;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(v7, v12);
label1:
v13 = v8 - v10;
virtualinvoke v2.<java.lang.StringBuilder: void setLength(int)>(v13);
goto label9;
label2:
v14 = v4 - v9;
v15 = 0;
label3:
if v15 >= v14 goto label9;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v15 = v15 + 1;
goto label3;
label4:
v16 = new java.lang.StringBuilder;
specialinvoke v16.<java.lang.StringBuilder: void <init>()>();
virtualinvoke v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: void renderRaw(java.util.logging.Formatter,java.lang.StringBuilder,org.jboss.logmanager.ExtLogRecord)>(v1, v16, v3);
v17 = virtualinvoke v16.<java.lang.StringBuilder: int length()>();
if v17 <= v5 goto label6;
v18 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: boolean truncateBeginning>;
if v18 == 0 goto label5;
v19 = v17 - v5;
virtualinvoke v16.<java.lang.StringBuilder: java.lang.StringBuilder delete(int,int)>(0, v19);
label5:
virtualinvoke v16.<java.lang.StringBuilder: void setLength(int)>(v5);
goto label8;
label6:
if v17 >= v4 goto label8;
v20 = v4 - v17;
v21 = 0;
label7:
if v21 >= v20 goto label8;
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(32);
v21 = v21 + 1;
goto label7;
label8:
virtualinvoke v2.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.CharSequence)>(v16);
label9:
return;
}
public int estimateLength()
{
int v1, v2, v3, v4, v5;
org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep v0;
v0 := @this: org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep;
v1 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: int maximumWidth>;
v2 = v0.<org.jboss.logmanager.formatters.Formatters$JustifyingFormatStep: int minimumWidth>;
if v1 == 0 goto label1;
v3 = v2 * 3;
v4 = staticinvoke <java.lang.Math: int min(int,int)>(v1, v3);
return v4;
label1:
v5 = staticinvoke <java.lang.Math: int max(int,int)>(32, v2);
return v5;
}
public abstract void renderRaw(java.util.logging.Formatter, java.lang.StringBuilder, org.jboss.logmanager.ExtLogRecord);
}