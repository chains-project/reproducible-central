public final class org.jboss.logmanager.formatters.Formatters extends java.lang.Object
{
public static final java.lang.String THREAD_ID;
private static final boolean DEFAULT_TRUNCATE_BEGINNING;
private static final java.lang.String NEW_LINE;
private static final java.util.regex.Pattern PRECISION_INT_PATTERN;
private static final java.util.logging.Formatter NULL_FORMATTER;
private static final java.lang.String separatorString;
private void <init>()
{
org.jboss.logmanager.formatters.Formatters v0;
v0 := @this: org.jboss.logmanager.formatters.Formatters;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static java.util.logging.Formatter nullFormatter()
{
java.util.logging.Formatter v0;
v0 = <org.jboss.logmanager.formatters.Formatters: java.util.logging.Formatter NULL_FORMATTER>;
return v0;
}
public static org.jboss.logmanager.formatters.FormatStep textFormatStep(java.lang.String)
{
org.jboss.logmanager.formatters.Formatters$2 v1;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
v1 = new org.jboss.logmanager.formatters.Formatters$2;
specialinvoke v1.<org.jboss.logmanager.formatters.Formatters$2: void <init>(java.lang.String)>(v0);
return v1;
}
private static java.lang.String applySegments(int, java.lang.String)
{
int v0, v2, v3, v4, v5, v6, v7;
java.lang.String v1, v8;
v0 := @parameter0: int;
v1 := @parameter1: java.lang.String;
if v0 != 0 goto label1;
return v1;
label1:
v2 = virtualinvoke v1.<java.lang.String: int length()>();
v3 = v2 + 1;
v4 = 0;
label2:
if v4 >= v0 goto label4;
v5 = v3 - 1;
v3 = virtualinvoke v1.<java.lang.String: int lastIndexOf(int,int)>(46, v5);
v6 = (int) -1;
if v3 != v6 goto label3;
return v1;
label3:
v4 = v4 + 1;
goto label2;
label4:
v7 = v3 + 1;
v8 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int)>(v7);
return v8;
}
private static java.lang.String applySegments(java.lang.String, java.lang.String)
{
java.util.Deque v8;
java.lang.Integer v11, v13;
java.util.regex.Matcher v3;
java.util.Map v7;
int v10, v18, v19, v20, v21, v5;
java.lang.String v0, v1, v22, v23, v24, v25, v6;
boolean v12, v4;
java.lang.Object v14, v15, v16;
java.lang.StringBuilder v17, v9;
java.util.regex.Pattern v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
if v0 == null goto label01;
if v1 != null goto label02;
label01:
return v1;
label02:
v2 = <org.jboss.logmanager.formatters.Formatters: java.util.regex.Pattern PRECISION_INT_PATTERN>;
v3 = virtualinvoke v2.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v0);
v4 = virtualinvoke v3.<java.util.regex.Matcher: boolean matches()>();
if v4 == 0 goto label03;
v5 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
v6 = staticinvoke <org.jboss.logmanager.formatters.Formatters: java.lang.String applySegments(int,java.lang.String)>(v5, v1);
return v6;
label03:
v7 = staticinvoke <org.jboss.logmanager.formatters.Formatters: java.util.Map parsePatternSegments(java.lang.String)>(v0);
v8 = staticinvoke <org.jboss.logmanager.formatters.Formatters: java.util.Deque parseCategorySegments(java.lang.String)>(v1);
v9 = new java.lang.StringBuilder;
specialinvoke v9.<java.lang.StringBuilder: void <init>()>();
v10 = 0;
label04:
v10 = v10 + 1;
v11 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v10);
v12 = interfaceinvoke v7.<java.util.Map: boolean containsKey(java.lang.Object)>(v11);
if v12 == 0 goto label05;
v13 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v10);
v14 = interfaceinvoke v7.<java.util.Map: java.lang.Object get(java.lang.Object)>(v13);
label05:
v15 = interfaceinvoke v8.<java.util.Deque: java.lang.Object poll()>();
v16 = interfaceinvoke v8.<java.util.Deque: java.lang.Object peek()>();
if v16 != null goto label06;
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v15);
goto label11;
label06:
if v14 != null goto label07;
v17 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v15);
virtualinvoke v17.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
goto label04;
label07:
v18 = v14.<org.jboss.logmanager.formatters.Formatters$Segment: int len>;
if v18 <= 0 goto label09;
v19 = v14.<org.jboss.logmanager.formatters.Formatters$Segment: int len>;
v20 = virtualinvoke v15.<java.lang.String: int length()>();
if v19 <= v20 goto label08;
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v15);
goto label09;
label08:
v21 = v14.<org.jboss.logmanager.formatters.Formatters$Segment: int len>;
v22 = virtualinvoke v15.<java.lang.String: java.lang.String substring(int,int)>(0, v21);
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v22);
label09:
v23 = v14.<org.jboss.logmanager.formatters.Formatters$Segment: java.lang.String text>;
if v23 == null goto label10;
v24 = v14.<org.jboss.logmanager.formatters.Formatters$Segment: java.lang.String text>;
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(v24);
label10:
virtualinvoke v9.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(46);
goto label04;
label11:
v25 = virtualinvoke v9.<java.lang.StringBuilder: java.lang.String toString()>();
return v25;
}
public static org.jboss.logmanager.formatters.FormatStep loggerNameFormatStep(boolean, int, int, java.lang.String)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v4;
java.lang.String v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: java.lang.String;
v4 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep loggerNameFormatStep(boolean,int,boolean,int,java.lang.String)>(v0, v1, 0, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep loggerNameFormatStep(boolean, int, boolean, int, java.lang.String)
{
int v1, v3;
org.jboss.logmanager.formatters.Formatters$3 v5;
java.lang.String v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: java.lang.String;
v5 = new org.jboss.logmanager.formatters.Formatters$3;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$3: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, v2, v3, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep classNameFormatStep(boolean, int, int, java.lang.String)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v4;
java.lang.String v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: java.lang.String;
v4 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep classNameFormatStep(boolean,int,boolean,int,java.lang.String)>(v0, v1, 0, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep classNameFormatStep(boolean, int, boolean, int, java.lang.String)
{
int v1, v3;
org.jboss.logmanager.formatters.Formatters$4 v5;
java.lang.String v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: java.lang.String;
v5 = new org.jboss.logmanager.formatters.Formatters$4;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$4: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, v2, v3, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep moduleNameFormatStep(boolean, int, int, java.lang.String)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v4;
java.lang.String v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: java.lang.String;
v4 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep moduleNameFormatStep(boolean,int,boolean,int,java.lang.String)>(v0, v1, 0, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep moduleNameFormatStep(boolean, int, boolean, int, java.lang.String)
{
int v1, v3;
java.lang.String v4;
org.jboss.logmanager.formatters.Formatters$5 v5;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: java.lang.String;
v5 = new org.jboss.logmanager.formatters.Formatters$5;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$5: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, v2, v3, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep moduleVersionFormatStep(boolean, int, int, java.lang.String)
{
int v1, v2;
java.lang.String v3;
org.jboss.logmanager.formatters.Formatters$6 v4;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: java.lang.String;
v4 = new org.jboss.logmanager.formatters.Formatters$6;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$6: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, 0, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep dateFormatStep(java.util.TimeZone, java.lang.String, boolean, int, int)
{
java.util.TimeZone v0;
int v3, v4;
org.jboss.logmanager.formatters.FormatStep v5;
java.lang.String v1;
boolean v2;
v0 := @parameter0: java.util.TimeZone;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep dateFormatStep(java.util.TimeZone,java.lang.String,boolean,int,boolean,int)>(v0, v1, v2, v3, 0, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep dateFormatStep(java.util.TimeZone, java.lang.String, boolean, int, boolean, int)
{
java.util.TimeZone v0;
int v3, v5;
java.lang.String v1;
org.jboss.logmanager.formatters.Formatters$7 v6;
boolean v2, v4;
v0 := @parameter0: java.util.TimeZone;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: boolean;
v5 := @parameter5: int;
v6 = new org.jboss.logmanager.formatters.Formatters$7;
specialinvoke v6.<org.jboss.logmanager.formatters.Formatters$7: void <init>(boolean,int,boolean,int,java.lang.String,java.util.TimeZone)>(v2, v3, v4, v5, v1, v0);
return v6;
}
public static org.jboss.logmanager.formatters.FormatStep dateFormatStep(java.lang.String, boolean, int, int)
{
java.util.TimeZone v4;
int v2, v3;
org.jboss.logmanager.formatters.FormatStep v5;
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = staticinvoke <java.util.TimeZone: java.util.TimeZone getDefault()>();
v5 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep dateFormatStep(java.util.TimeZone,java.lang.String,boolean,int,int)>(v4, v0, v1, v2, v3);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep fileNameFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep fileNameFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep fileNameFormatStep(boolean, int, boolean, int)
{
int v1, v3;
org.jboss.logmanager.formatters.Formatters$8 v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$8;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$8: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep processNameFormatStep(boolean, int, boolean, int)
{
int v1, v3;
boolean v0, v2;
org.jboss.logmanager.formatters.Formatters$9 v4;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$9;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$9: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep processIdFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$10 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$10;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$10: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep hostnameFormatStep(boolean, int, boolean, int, boolean)
{
org.jboss.logmanager.formatters.Formatters$11 v5;
int v1, v3;
boolean v0, v2, v4;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: boolean;
v5 = new org.jboss.logmanager.formatters.Formatters$11;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$11: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, v2, v3, null);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep hostnameFormatStep(boolean, int, boolean, int, java.lang.String)
{
org.jboss.logmanager.formatters.Formatters$12 v5;
int v1, v3;
java.lang.String v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: java.lang.String;
v5 = new org.jboss.logmanager.formatters.Formatters$12;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$12: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, v2, v3, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep locationInformationFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep locationInformationFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep locationInformationFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$13 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$13;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$13: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep lineNumberFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep lineNumberFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep lineNumberFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$14 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$14;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$14: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep messageFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep messageFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep messageFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$15 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$15;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$15: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep simpleMessageFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep simpleMessageFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep simpleMessageFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$16 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$16;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$16: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep exceptionFormatStep(boolean, int, int, boolean)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v4;
boolean v0, v3;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep exceptionFormatStep(boolean,int,boolean,int,java.lang.String)>(v0, v1, 0, v2, null);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep exceptionFormatStep(boolean, int, boolean, int, java.lang.String)
{
int v1, v3;
java.lang.String v4;
org.jboss.logmanager.formatters.Formatters$17 v5;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: java.lang.String;
v5 = new org.jboss.logmanager.formatters.Formatters$17;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$17: void <init>(boolean,int,boolean,int,java.lang.String)>(v0, v1, v2, v3, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep resourceKeyFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep resourceKeyFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep resourceKeyFormatStep(boolean, int, boolean, int)
{
int v1, v3;
org.jboss.logmanager.formatters.Formatters$18 v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$18;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$18: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep methodNameFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep methodNameFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep methodNameFormatStep(boolean, int, boolean, int)
{
int v1, v3;
org.jboss.logmanager.formatters.Formatters$19 v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$19;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$19: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep lineSeparatorFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep lineSeparatorFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep lineSeparatorFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$21 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$21;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$21: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep levelFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep levelFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep levelFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$22 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$22;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$22: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep localizedLevelFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep localizedLevelFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep localizedLevelFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$23 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$23;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$23: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep relativeTimeFormatStep(long, boolean, int, int)
{
int v2, v3;
long v0;
org.jboss.logmanager.formatters.FormatStep v4;
boolean v1;
v0 := @parameter0: long;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep relativeTimeFormatStep(long,boolean,int,boolean,int)>(v0, v1, v2, 0, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep relativeTimeFormatStep(long, boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$24 v5;
int v2, v4;
long v0;
boolean v1, v3;
v0 := @parameter0: long;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: int;
v5 = new org.jboss.logmanager.formatters.Formatters$24;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$24: void <init>(boolean,int,boolean,int,long)>(v1, v2, v3, v4, v0);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep threadFormatStep(java.lang.String, boolean, int, boolean, int)
{
java.util.Locale v6;
int v2, v4;
org.jboss.logmanager.formatters.FormatStep v10, v9;
java.lang.String v0, v5, v7;
boolean v1, v3, v8;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: int;
if v0 == null goto label1;
v5 = "id";
v6 = <java.util.Locale: java.util.Locale ROOT>;
v7 = virtualinvoke v0.<java.lang.String: java.lang.String toLowerCase(java.util.Locale)>(v6);
v8 = virtualinvoke v5.<java.lang.String: boolean equals(java.lang.Object)>(v7);
if v8 == 0 goto label1;
v9 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep threadIdFormatStep(boolean,int,boolean,int)>(v1, v2, v3, v4);
return v9;
label1:
v10 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep threadNameFormatStep(boolean,int,boolean,int)>(v1, v2, v3, v4);
return v10;
}
public static org.jboss.logmanager.formatters.FormatStep threadIdFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$25 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$25;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$25: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep threadNameFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep threadNameFormatStep(boolean,int,boolean,int)>(v0, v1, 0, v2);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep threadNameFormatStep(boolean, int, boolean, int)
{
org.jboss.logmanager.formatters.Formatters$26 v4;
int v1, v3;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 = new org.jboss.logmanager.formatters.Formatters$26;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$26: void <init>(boolean,int,boolean,int)>(v0, v1, v2, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep ndcFormatStep(boolean, int, int)
{
int v1, v2;
org.jboss.logmanager.formatters.FormatStep v3;
boolean v0;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: int;
v3 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep ndcFormatStep(boolean,int,boolean,int,int)>(v0, v1, 0, v2, 0);
return v3;
}
public static org.jboss.logmanager.formatters.FormatStep ndcFormatStep(boolean, int, boolean, int, int)
{
org.jboss.logmanager.formatters.Formatters$27 v5;
int v1, v3, v4;
boolean v0, v2;
v0 := @parameter0: boolean;
v1 := @parameter1: int;
v2 := @parameter2: boolean;
v3 := @parameter3: int;
v4 := @parameter4: int;
v5 = new org.jboss.logmanager.formatters.Formatters$27;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$27: void <init>(boolean,int,boolean,int,int)>(v0, v1, v2, v3, v4);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep mdcFormatStep(java.lang.String, boolean, int, int)
{
int v2, v3;
org.jboss.logmanager.formatters.FormatStep v4;
java.lang.String v0;
boolean v1;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: int;
v4 = staticinvoke <org.jboss.logmanager.formatters.Formatters: org.jboss.logmanager.formatters.FormatStep mdcFormatStep(java.lang.String,boolean,int,boolean,int)>(v0, v1, v2, 0, v3);
return v4;
}
public static org.jboss.logmanager.formatters.FormatStep mdcFormatStep(java.lang.String, boolean, int, boolean, int)
{
int v2, v4;
java.lang.String v0;
org.jboss.logmanager.formatters.Formatters$28 v5;
boolean v1, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: int;
v5 = new org.jboss.logmanager.formatters.Formatters$28;
specialinvoke v5.<org.jboss.logmanager.formatters.Formatters$28: void <init>(boolean,int,boolean,int,java.lang.String)>(v1, v2, v3, v4, v0);
return v5;
}
public static org.jboss.logmanager.formatters.FormatStep formatColor(org.jboss.logmanager.formatters.ColorMap, java.lang.String)
{
org.jboss.logmanager.formatters.Formatters$29 v2;
java.lang.String v1;
org.jboss.logmanager.formatters.ColorMap v0;
v0 := @parameter0: org.jboss.logmanager.formatters.ColorMap;
v1 := @parameter1: java.lang.String;
v2 = new org.jboss.logmanager.formatters.Formatters$29;
specialinvoke v2.<org.jboss.logmanager.formatters.Formatters$29: void <init>(org.jboss.logmanager.formatters.ColorMap,java.lang.String)>(v0, v1);
return v2;
}
public static org.jboss.logmanager.formatters.FormatStep systemPropertyFormatStep(java.lang.String, boolean, int, boolean, int)
{
int v2, v4;
java.lang.String v0;
java.lang.IllegalArgumentException v5;
org.jboss.logmanager.formatters.Formatters$30 v6;
boolean v1, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: boolean;
v2 := @parameter2: int;
v3 := @parameter3: boolean;
v4 := @parameter4: int;
if v0 != null goto label1;
v5 = new java.lang.IllegalArgumentException;
specialinvoke v5.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("System property requires a key for the lookup");
throw v5;
label1:
v6 = new org.jboss.logmanager.formatters.Formatters$30;
specialinvoke v6.<org.jboss.logmanager.formatters.Formatters$30: void <init>(boolean,int,boolean,int,java.lang.String)>(v1, v2, v3, v4, v0);
return v6;
}
static java.util.Map parsePatternSegments(java.lang.String)
{
java.lang.Integer v15, v28;
java.util.Map v32;
java.lang.StringBuilder v19, v2, v20, v3, v4, v5;
java.util.HashMap v1;
int v11, v13, v14, v17, v21, v22, v23, v24, v26, v27, v30, v6, v8, v9;
java.lang.String v0, v12, v18, v25, v31;
org.jboss.logmanager.formatters.Formatters$Segment v16, v29;
char v10;
char[] v7;
v0 := @parameter0: java.lang.String;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = v2;
v4 = new java.lang.StringBuilder;
specialinvoke v4.<java.lang.StringBuilder: void <init>()>();
v5 = v4;
v6 = 0;
v7 = virtualinvoke v0.<java.lang.String: char[] toCharArray()>();
v8 = lengthof v7;
v9 = 0;
label01:
if v9 >= v8 goto label09;
v10 = v7[v9];
if v10 < 48 goto label02;
if v10 > 57 goto label02;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v10);
goto label08;
label02:
if v10 != 46 goto label07;
v6 = v6 + 1;
v11 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v11 <= 0 goto label03;
v12 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
v13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v12);
goto label04;
label03:
v13 = 0;
label04:
v14 = v13;
v15 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v6);
v16 = new org.jboss.logmanager.formatters.Formatters$Segment;
v17 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v17 <= 0 goto label05;
v18 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
goto label06;
label05:
v18 = null;
label06:
specialinvoke v16.<org.jboss.logmanager.formatters.Formatters$Segment: void <init>(int,java.lang.String)>(v14, v18);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v15, v16);
v19 = new java.lang.StringBuilder;
specialinvoke v19.<java.lang.StringBuilder: void <init>()>();
v5 = v19;
v20 = new java.lang.StringBuilder;
specialinvoke v20.<java.lang.StringBuilder: void <init>()>();
v3 = v20;
goto label08;
label07:
virtualinvoke v5.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v10);
label08:
v9 = v9 + 1;
goto label01;
label09:
v21 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v21 > 0 goto label10;
v22 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v22 <= 0 goto label15;
label10:
v23 = v6 + 1;
v24 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v24 <= 0 goto label11;
v25 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
v26 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v25);
goto label12;
label11:
v26 = 0;
label12:
v27 = v26;
v28 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v23);
v29 = new org.jboss.logmanager.formatters.Formatters$Segment;
v30 = virtualinvoke v5.<java.lang.StringBuilder: int length()>();
if v30 <= 0 goto label13;
v31 = virtualinvoke v5.<java.lang.StringBuilder: java.lang.String toString()>();
goto label14;
label13:
v31 = null;
label14:
specialinvoke v29.<org.jboss.logmanager.formatters.Formatters$Segment: void <init>(int,java.lang.String)>(v27, v31);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v28, v29);
label15:
v32 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
return v32;
}
static java.util.Deque parseCategorySegments(java.lang.String)
{
char v7;
int v11, v5, v6, v8;
char[] v4;
java.lang.StringBuilder v10, v2, v3;
java.lang.String v0, v12, v9;
java.util.ArrayDeque v1;
v0 := @parameter0: java.lang.String;
v1 = new java.util.ArrayDeque;
specialinvoke v1.<java.util.ArrayDeque: void <init>()>();
v2 = new java.lang.StringBuilder;
specialinvoke v2.<java.lang.StringBuilder: void <init>()>();
v3 = v2;
v4 = virtualinvoke v0.<java.lang.String: char[] toCharArray()>();
v5 = lengthof v4;
v6 = 0;
label1:
if v6 >= v5 goto label5;
v7 = v4[v6];
if v7 != 46 goto label3;
v8 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v8 <= 0 goto label2;
v9 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v1.<java.util.Deque: boolean add(java.lang.Object)>(v9);
v10 = new java.lang.StringBuilder;
specialinvoke v10.<java.lang.StringBuilder: void <init>()>();
v3 = v10;
goto label4;
label2:
interfaceinvoke v1.<java.util.Deque: boolean add(java.lang.Object)>("");
goto label4;
label3:
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(v7);
label4:
v6 = v6 + 1;
goto label1;
label5:
v11 = virtualinvoke v3.<java.lang.StringBuilder: int length()>();
if v11 <= 0 goto label6;
v12 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
interfaceinvoke v1.<java.util.Deque: boolean add(java.lang.Object)>(v12);
label6:
return v1;
}
static void <clinit>()
{
java.lang.Object[] v0;
org.jboss.logmanager.formatters.Formatters$20 v4;
org.jboss.logmanager.formatters.Formatters$1 v3;
java.lang.Object v5;
java.lang.String v1;
java.util.regex.Pattern v2;
v0 = newarray (java.lang.Object)[0];
v1 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("%n", v0);
<org.jboss.logmanager.formatters.Formatters: java.lang.String NEW_LINE> = v1;
v2 = staticinvoke <java.util.regex.Pattern: java.util.regex.Pattern compile(java.lang.String)>("\\d+");
<org.jboss.logmanager.formatters.Formatters: java.util.regex.Pattern PRECISION_INT_PATTERN> = v2;
v3 = new org.jboss.logmanager.formatters.Formatters$1;
specialinvoke v3.<org.jboss.logmanager.formatters.Formatters$1: void <init>()>();
<org.jboss.logmanager.formatters.Formatters: java.util.logging.Formatter NULL_FORMATTER> = v3;
v4 = new org.jboss.logmanager.formatters.Formatters$20;
specialinvoke v4.<org.jboss.logmanager.formatters.Formatters$20: void <init>()>();
v5 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v4);
<org.jboss.logmanager.formatters.Formatters: java.lang.String separatorString> = v5;
return;
}
}