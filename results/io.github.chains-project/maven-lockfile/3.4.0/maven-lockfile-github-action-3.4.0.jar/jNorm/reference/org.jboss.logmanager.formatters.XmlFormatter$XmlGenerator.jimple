class org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator extends java.lang.Object implements org.jboss.logmanager.formatters.StructuredFormatter$Generator
{
private final javax.xml.stream.XMLStreamWriter xmlWriter;
final org.jboss.logmanager.formatters.XmlFormatter this$0;
private void <init>(org.jboss.logmanager.formatters.XmlFormatter, javax.xml.stream.XMLStreamWriter)
{
javax.xml.stream.XMLStreamWriter v2;
org.jboss.logmanager.formatters.XmlFormatter v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: org.jboss.logmanager.formatters.XmlFormatter;
v2 := @parameter1: javax.xml.stream.XMLStreamWriter;
v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.XmlFormatter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter> = v2;
return;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator begin() throws java.lang.Exception
{
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
org.jboss.logmanager.formatters.XmlFormatter v1, v4, v6, v9;
org.jboss.logmanager.formatters.StructuredFormatter$Key v2;
javax.xml.stream.XMLStreamWriter v8;
java.lang.String v10, v3, v7;
boolean v5;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.XmlFormatter this$0>;
v2 = <org.jboss.logmanager.formatters.StructuredFormatter$Key: org.jboss.logmanager.formatters.StructuredFormatter$Key RECORD>;
v3 = virtualinvoke v1.<org.jboss.logmanager.formatters.XmlFormatter: java.lang.String getKey(org.jboss.logmanager.formatters.StructuredFormatter$Key)>(v2);
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeStart(java.lang.String)>(v3);
v4 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.XmlFormatter this$0>;
v5 = v4.<org.jboss.logmanager.formatters.XmlFormatter: boolean printNamespace>;
if v5 == 0 goto label1;
v6 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.XmlFormatter this$0>;
v7 = v6.<org.jboss.logmanager.formatters.XmlFormatter: java.lang.String namespaceUri>;
if v7 == null goto label1;
v8 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
v9 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.XmlFormatter this$0>;
v10 = v9.<org.jboss.logmanager.formatters.XmlFormatter: java.lang.String namespaceUri>;
interfaceinvoke v8.<javax.xml.stream.XMLStreamWriter: void writeDefaultNamespace(java.lang.String)>(v10);
label1:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, java.util.Map) throws java.lang.Exception
{
java.util.Iterator v4;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
java.util.Set v3;
java.util.Map v2;
java.lang.Object v6, v7, v8;
java.lang.String v1, v9;
boolean v5;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.util.Map;
if v2 != null goto label1;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEmpty(java.lang.String)>(v1);
goto label5;
label1:
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeStart(java.lang.String)>(v1);
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label2:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label4;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
if v8 != null goto label3;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEmpty(java.lang.String)>(v7);
goto label2;
label3:
v9 = staticinvoke <java.lang.String: java.lang.String valueOf(java.lang.Object)>(v8);
virtualinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String,java.lang.String)>(v7, v9);
goto label2;
label4:
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEnd()>();
label5:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator add(java.lang.String, java.lang.String) throws java.lang.Exception
{
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
if v2 != null goto label1;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEmpty(java.lang.String)>(v1);
goto label2;
label1:
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeStart(java.lang.String)>(v1);
v3 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>(v2);
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEnd()>();
label2:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator addMetaData(java.util.Map) throws java.lang.Exception
{
java.util.Iterator v3;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
java.util.Set v2;
java.util.Map v1;
java.lang.Object v5, v7, v9;
javax.xml.stream.XMLStreamWriter v6, v8;
boolean v4;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.util.Map;
v2 = interfaceinvoke v1.<java.util.Map: java.util.Set keySet()>();
v3 = interfaceinvoke v2.<java.util.Set: java.util.Iterator iterator()>();
label1:
v4 = interfaceinvoke v3.<java.util.Iterator: boolean hasNext()>();
if v4 == 0 goto label3;
v5 = interfaceinvoke v3.<java.util.Iterator: java.lang.Object next()>();
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeStart(java.lang.String)>("metaData");
v6 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
interfaceinvoke v6.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>("key", v5);
v7 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v5);
if v7 == null goto label2;
v8 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
v9 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v5);
interfaceinvoke v8.<javax.xml.stream.XMLStreamWriter: void writeCharacters(java.lang.String)>(v9);
label2:
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEnd()>();
goto label1;
label3:
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator startObject(java.lang.String) throws java.lang.Exception
{
java.lang.String v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeStart(java.lang.String)>(v1);
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator endObject() throws java.lang.Exception
{
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEnd()>();
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator addAttribute(java.lang.String, int) throws java.lang.Exception
{
org.jboss.logmanager.formatters.StructuredFormatter$Generator v4;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
int v2;
java.lang.String v1, v3;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: int;
v3 = staticinvoke <java.lang.Integer: java.lang.String toString(int)>(v2);
v4 = virtualinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: org.jboss.logmanager.formatters.StructuredFormatter$Generator addAttribute(java.lang.String,java.lang.String)>(v1, v3);
return v4;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator addAttribute(java.lang.String, java.lang.String) throws java.lang.Exception
{
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
javax.xml.stream.XMLStreamWriter v3;
java.lang.String v1, v2;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
interfaceinvoke v3.<javax.xml.stream.XMLStreamWriter: void writeAttribute(java.lang.String,java.lang.String)>(v1, v2);
return v0;
}
public org.jboss.logmanager.formatters.StructuredFormatter$Generator end() throws java.lang.Exception
{
javax.xml.stream.XMLStreamWriter v1, v2;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void writeEnd()>();
v1 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void safeFlush(javax.xml.stream.XMLStreamWriter)>(v1);
v2 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
specialinvoke v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: void safeClose(javax.xml.stream.XMLStreamWriter)>(v2);
return v0;
}
public boolean wrapArrays()
{
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
return 1;
}
private void writeEmpty(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeEmptyElement(java.lang.String)>(v1);
return;
}
private void writeStart(java.lang.String) throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v2;
java.lang.String v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
interfaceinvoke v2.<javax.xml.stream.XMLStreamWriter: void writeStartElement(java.lang.String)>(v1);
return;
}
private void writeEnd() throws javax.xml.stream.XMLStreamException
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 = v0.<org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator: javax.xml.stream.XMLStreamWriter xmlWriter>;
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void writeEndElement()>();
return;
}
private void safeFlush(javax.xml.stream.XMLStreamWriter)
{
java.lang.Throwable v2;
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: javax.xml.stream.XMLStreamWriter;
if v1 == null goto label4;
label1:
interfaceinvoke v1.<javax.xml.stream.XMLStreamWriter: void flush()>();
label2:
goto label4;
label3:
v2 := @caughtexception;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
private void safeClose(javax.xml.stream.XMLStreamWriter)
{
javax.xml.stream.XMLStreamWriter v1;
org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator v0;
v0 := @this: org.jboss.logmanager.formatters.XmlFormatter$XmlGenerator;
v1 := @parameter0: javax.xml.stream.XMLStreamWriter;
return;
}
}