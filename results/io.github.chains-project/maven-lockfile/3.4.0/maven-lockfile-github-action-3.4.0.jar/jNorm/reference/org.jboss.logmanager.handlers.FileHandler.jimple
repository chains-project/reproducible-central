public class org.jboss.logmanager.handlers.FileHandler extends org.jboss.logmanager.handlers.OutputStreamHandler
{
private java.io.File file;
private boolean append;
public void <init>()
{
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>()>();
return;
}
public void <init>(java.util.logging.Formatter)
{
java.util.logging.Formatter v1;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.util.logging.Formatter;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>(java.util.logging.Formatter)>(v1);
return;
}
public void <init>(java.util.logging.Formatter, java.io.File) throws java.io.FileNotFoundException
{
java.util.logging.Formatter v1;
java.io.File v2;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: java.io.File;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>(java.util.logging.Formatter)>(v1);
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFile(java.io.File)>(v2);
return;
}
public void <init>(java.util.logging.Formatter, java.io.File, boolean) throws java.io.FileNotFoundException
{
java.util.logging.Formatter v1;
java.io.File v2;
boolean v3;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.util.logging.Formatter;
v2 := @parameter1: java.io.File;
v3 := @parameter2: boolean;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>(java.util.logging.Formatter)>(v1);
v0.<org.jboss.logmanager.handlers.FileHandler: boolean append> = v3;
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFile(java.io.File)>(v2);
return;
}
public void <init>(java.io.File) throws java.io.FileNotFoundException
{
java.io.File v1;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.io.File;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>()>();
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFile(java.io.File)>(v1);
return;
}
public void <init>(java.io.File, boolean) throws java.io.FileNotFoundException
{
java.io.File v1;
boolean v2;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.io.File;
v2 := @parameter1: boolean;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>()>();
v0.<org.jboss.logmanager.handlers.FileHandler: boolean append> = v2;
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFile(java.io.File)>(v1);
return;
}
public void <init>(java.lang.String) throws java.io.FileNotFoundException
{
java.lang.String v1;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>()>();
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFileName(java.lang.String)>(v1);
return;
}
public void <init>(java.lang.String, boolean) throws java.io.FileNotFoundException
{
java.lang.String v1;
boolean v2;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: boolean;
specialinvoke v0.<org.jboss.logmanager.handlers.OutputStreamHandler: void <init>()>();
v0.<org.jboss.logmanager.handlers.FileHandler: boolean append> = v2;
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFileName(java.lang.String)>(v1);
return;
}
public void setAppend(boolean)
{
java.lang.Throwable v3;
java.lang.Object v2;
boolean v1;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: boolean;
v2 = v0.<org.jboss.logmanager.handlers.FileHandler: java.lang.Object outputLock>;
entermonitor v2;
label1:
v0.<org.jboss.logmanager.handlers.FileHandler: boolean append> = v1;
exitmonitor v2;
label2:
goto label4;
label3:
v3 := @caughtexception;
exitmonitor v2;
throw v3;
label4:
return;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setFile(java.io.File) throws java.io.FileNotFoundException
{
java.lang.Throwable v10, v8, v9;
java.io.FileOutputStream v5;
java.io.File v1, v3;
java.io.BufferedOutputStream v7;
org.jboss.logmanager.handlers.FileHandler v0;
java.lang.Object v2;
boolean v4, v6;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.io.File;
v2 = v0.<org.jboss.logmanager.handlers.FileHandler: java.lang.Object outputLock>;
entermonitor v2;
label01:
if v1 != null goto label03;
v0.<org.jboss.logmanager.handlers.FileHandler: java.io.File file> = null;
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setOutputStream(java.io.OutputStream)>(null);
exitmonitor v2;
label02:
return;
label03:
v3 = virtualinvoke v1.<java.io.File: java.io.File getParentFile()>();
if v3 == null goto label04;
virtualinvoke v3.<java.io.File: boolean mkdirs()>();
label04:
v4 = 0;
v5 = new java.io.FileOutputStream;
v6 = v0.<org.jboss.logmanager.handlers.FileHandler: boolean append>;
specialinvoke v5.<java.io.FileOutputStream: void <init>(java.io.File,boolean)>(v1, v6);
label05:
v7 = new java.io.BufferedOutputStream;
specialinvoke v7.<java.io.BufferedOutputStream: void <init>(java.io.OutputStream)>(v5);
label06:
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setOutputStream(java.io.OutputStream)>(v7);
v0.<org.jboss.logmanager.handlers.FileHandler: java.io.File file> = v1;
v4 = 1;
label07:
goto label11;
label08:
v8 := @caughtexception;
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void safeClose(java.io.Closeable)>(v7);
throw v8;
label09:
v9 := @caughtexception;
if v4 != 0 goto label10;
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void safeClose(java.io.Closeable)>(v5);
label10:
throw v9;
label11:
exitmonitor v2;
label12:
goto label14;
label13:
v10 := @caughtexception;
exitmonitor v2;
throw v10;
label14:
return;
catch java.lang.Throwable from label06 to label07 with label08;
catch java.lang.Throwable from label05 to label09 with label09;
catch java.lang.Throwable from label01 to label02 with label13;
catch java.lang.Throwable from label03 to label12 with label13;
}
public java.io.File getFile()
{
java.lang.Throwable v3;
java.lang.Object v1;
java.io.File v2;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 = v0.<org.jboss.logmanager.handlers.FileHandler: java.lang.Object outputLock>;
entermonitor v1;
label1:
v2 = v0.<org.jboss.logmanager.handlers.FileHandler: java.io.File file>;
exitmonitor v1;
label2:
return v2;
label3:
v3 := @caughtexception;
exitmonitor v1;
throw v3;
catch java.lang.Throwable from label1 to label2 with label3;
}
public void setFileName(java.lang.String) throws java.io.FileNotFoundException
{
java.lang.String v1;
java.io.File v2;
org.jboss.logmanager.handlers.FileHandler v0;
v0 := @this: org.jboss.logmanager.handlers.FileHandler;
v1 := @parameter0: java.lang.String;
if v1 != null goto label1;
v2 = null;
goto label2;
label1:
v2 = new java.io.File;
specialinvoke v2.<java.io.File: void <init>(java.lang.String)>(v1);
label2:
virtualinvoke v0.<org.jboss.logmanager.handlers.FileHandler: void setFile(java.io.File)>(v2);
return;
}
}