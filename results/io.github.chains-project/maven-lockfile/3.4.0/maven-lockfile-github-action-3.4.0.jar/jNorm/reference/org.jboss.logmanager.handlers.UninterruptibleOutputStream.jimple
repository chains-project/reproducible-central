public final class org.jboss.logmanager.handlers.UninterruptibleOutputStream extends java.io.OutputStream
{
private final java.io.OutputStream out;
public void <init>(java.io.OutputStream)
{
java.io.OutputStream v1;
org.jboss.logmanager.handlers.UninterruptibleOutputStream v0;
v0 := @this: org.jboss.logmanager.handlers.UninterruptibleOutputStream;
v1 := @parameter0: java.io.OutputStream;
specialinvoke v0.<java.io.OutputStream: void <init>()>();
v0.<org.jboss.logmanager.handlers.UninterruptibleOutputStream: java.io.OutputStream out> = v1;
return;
}
public void write(int) throws java.io.IOException
{
java.io.OutputStream v3;
java.lang.Throwable v9;
java.io.InterruptedIOException v5;
java.lang.Thread v10, v4, v7;
int v1, v6;
org.jboss.logmanager.handlers.UninterruptibleOutputStream v0;
boolean v2, v8;
v0 := @this: org.jboss.logmanager.handlers.UninterruptibleOutputStream;
v1 := @parameter0: int;
v2 = 0;
label1:
v3 = v0.<org.jboss.logmanager.handlers.UninterruptibleOutputStream: java.io.OutputStream out>;
virtualinvoke v3.<java.io.OutputStream: void write(int)>(v1);
label2:
if v2 == 0 goto label3;
v4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v4.<java.lang.Thread: void interrupt()>();
label3:
return;
label4:
v5 := @caughtexception;
v6 = v5.<java.io.InterruptedIOException: int bytesTransferred>;
if v6 != 1 goto label7;
label5:
if v2 == 0 goto label6;
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v7.<java.lang.Thread: void interrupt()>();
label6:
return;
label7:
v8 = staticinvoke <java.lang.Thread: boolean interrupted()>();
v2 = v2 | v8;
goto label1;
label8:
v9 := @caughtexception;
if v2 == 0 goto label9;
v10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v10.<java.lang.Thread: void interrupt()>();
label9:
throw v9;
catch java.io.InterruptedIOException from label1 to label2 with label4;
catch java.lang.Throwable from label1 to label2 with label8;
catch java.lang.Throwable from label4 to label5 with label8;
}
public void write(byte[], int, int) throws java.io.IOException
{
java.io.OutputStream v5;
java.lang.Throwable v11;
byte[] v1;
java.io.InterruptedIOException v7;
java.lang.Thread v10, v12, v6;
int v2, v3, v8;
org.jboss.logmanager.handlers.UninterruptibleOutputStream v0;
boolean v4, v9;
v0 := @this: org.jboss.logmanager.handlers.UninterruptibleOutputStream;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = 0;
label01:
if v3 <= 0 goto label07;
label02:
v5 = v0.<org.jboss.logmanager.handlers.UninterruptibleOutputStream: java.io.OutputStream out>;
virtualinvoke v5.<java.io.OutputStream: void write(byte[],int,int)>(v1, v2, v3);
label03:
if v4 == 0 goto label04;
v6 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v6.<java.lang.Thread: void interrupt()>();
label04:
return;
label05:
v7 := @caughtexception;
v8 = v7.<java.io.InterruptedIOException: int bytesTransferred>;
if v8 <= 0 goto label06;
v2 = v2 + v8;
v3 = v3 - v8;
label06:
v9 = staticinvoke <java.lang.Thread: boolean interrupted()>();
v4 = v4 | v9;
goto label01;
label07:
if v4 == 0 goto label10;
v10 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v10.<java.lang.Thread: void interrupt()>();
goto label10;
label08:
v11 := @caughtexception;
if v4 == 0 goto label09;
v12 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v12.<java.lang.Thread: void interrupt()>();
label09:
throw v11;
label10:
return;
catch java.io.InterruptedIOException from label02 to label03 with label05;
catch java.lang.Throwable from label01 to label03 with label08;
catch java.lang.Throwable from label05 to label07 with label08;
}
public void flush() throws java.io.IOException
{
java.io.OutputStream v2;
java.lang.Throwable v6;
java.io.InterruptedIOException v4;
java.lang.Thread v3, v7;
org.jboss.logmanager.handlers.UninterruptibleOutputStream v0;
boolean v1, v5;
v0 := @this: org.jboss.logmanager.handlers.UninterruptibleOutputStream;
v1 = 0;
label1:
v2 = v0.<org.jboss.logmanager.handlers.UninterruptibleOutputStream: java.io.OutputStream out>;
virtualinvoke v2.<java.io.OutputStream: void flush()>();
label2:
if v1 == 0 goto label3;
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v3.<java.lang.Thread: void interrupt()>();
label3:
return;
label4:
v4 := @caughtexception;
v5 = staticinvoke <java.lang.Thread: boolean interrupted()>();
v1 = v1 | v5;
goto label1;
label5:
v6 := @caughtexception;
if v1 == 0 goto label6;
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v7.<java.lang.Thread: void interrupt()>();
label6:
throw v6;
catch java.io.InterruptedIOException from label1 to label2 with label4;
catch java.lang.Throwable from label1 to label2 with label5;
}
public void close() throws java.io.IOException
{
java.io.OutputStream v2;
java.lang.Throwable v6;
java.io.InterruptedIOException v4;
java.lang.Thread v3, v7;
org.jboss.logmanager.handlers.UninterruptibleOutputStream v0;
boolean v1, v5;
v0 := @this: org.jboss.logmanager.handlers.UninterruptibleOutputStream;
v1 = 0;
label1:
v2 = v0.<org.jboss.logmanager.handlers.UninterruptibleOutputStream: java.io.OutputStream out>;
virtualinvoke v2.<java.io.OutputStream: void close()>();
label2:
if v1 == 0 goto label3;
v3 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v3.<java.lang.Thread: void interrupt()>();
label3:
return;
label4:
v4 := @caughtexception;
v5 = staticinvoke <java.lang.Thread: boolean interrupted()>();
v1 = v1 | v5;
goto label1;
label5:
v6 := @caughtexception;
if v1 == 0 goto label6;
v7 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v7.<java.lang.Thread: void interrupt()>();
label6:
throw v6;
catch java.io.InterruptedIOException from label1 to label2 with label4;
catch java.lang.Throwable from label1 to label2 with label5;
}
public java.lang.String toString()
{
java.io.OutputStream v1;
java.lang.String v2, v3;
org.jboss.logmanager.handlers.UninterruptibleOutputStream v0;
v0 := @this: org.jboss.logmanager.handlers.UninterruptibleOutputStream;
v1 = v0.<org.jboss.logmanager.handlers.UninterruptibleOutputStream: java.io.OutputStream out>;
v2 = virtualinvoke v1.<java.lang.Object: java.lang.String toString()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("uninterruptible \u0001");
return v3;
}
}