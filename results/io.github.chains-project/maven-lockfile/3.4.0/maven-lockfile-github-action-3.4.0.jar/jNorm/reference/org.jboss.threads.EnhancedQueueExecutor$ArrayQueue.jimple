final class org.jboss.threads.EnhancedQueueExecutor$ArrayQueue extends java.lang.Object implements org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue
{
final org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array;
int head;
int size;
static final boolean $assertionsDisabled;
void <init>(int)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v6;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
int v1, v2, v3, v4, v5;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = staticinvoke <java.lang.Math: int max(int,int)>(v1, 2);
v3 = v2 - 1;
v4 = staticinvoke <java.lang.Integer: int highestOneBit(int)>(v3);
v5 = v4 << 1;
v6 = newarray (org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)[v5];
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array> = v6;
return;
}
private void <init>(org.jboss.threads.EnhancedQueueExecutor$ArrayQueue, int)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v6;
java.lang.AssertionError v5;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0, v1;
int v2, v4, v7;
boolean v3;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = <org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: boolean $assertionsDisabled>;
if v3 != 0 goto label1;
v4 = staticinvoke <java.lang.Integer: int bitCount(int)>(v2);
if v4 == 1 goto label1;
v5 = new java.lang.AssertionError;
specialinvoke v5.<java.lang.AssertionError: void <init>()>();
throw v5;
label1:
v6 = virtualinvoke v1.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] toArray(int)>(v2);
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array> = v6;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head> = 0;
v7 = v1.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size> = v7;
return;
}
public org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] toArray()
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v2;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size()>();
v2 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] toArray(int)>(v1);
return v2;
}
public org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] toArray(int)
{
java.lang.Object[] v5;
int v1, v10, v11, v12, v14, v15, v2, v3, v7;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v13, v4, v6, v8, v9;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
v3 = v2 + v1;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v5 = staticinvoke <java.util.Arrays: java.lang.Object[] copyOfRange(java.lang.Object[],int,int)>(v4, v2, v3);
v6 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v7 = lengthof v6;
if v3 <= v7 goto label1;
v8 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v10 = lengthof v9;
v11 = v10 - v2;
v12 = v1 - v11;
v13 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v14 = lengthof v13;
v15 = v1 - v14;
staticinvoke <java.lang.System: void arraycopy(java.lang.Object,int,java.lang.Object,int,int)>(v8, 0, v5, v12, v15);
label1:
return v5;
}
public void clear()
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v1;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
staticinvoke <java.util.Arrays: void fill(java.lang.Object[],java.lang.Object)>(v1, null);
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size> = 0;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head> = 0;
return;
}
public boolean isEmpty()
{
int v1;
boolean v2;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public int size()
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
return v1;
}
public org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture first()
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v5;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v3;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
int v1, v4;
java.util.NoSuchElementException v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
v5 = v3[v4];
return v5;
}
public org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture pollFirst()
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v4, v6, v9;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v5;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
int v1, v10, v11, v12, v13, v3, v7, v8;
java.util.NoSuchElementException v2;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v5 = v4[v3];
v6 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v6[v3] = null;
v7 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
v8 = v7 - 1;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size> = v8;
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v10 = lengthof v9;
v11 = v10 - 1;
v12 = v3 + 1;
v13 = v12 & v11;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head> = v13;
return v5;
}
public boolean insertAndCheckForFirst(org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v1, v14;
int v10, v11, v12, v13, v15, v2, v4, v6, v7, v8, v9;
boolean v16;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v3;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
org.jboss.threads.EnhancedQueueExecutor$QueueFullException v5;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v4 = lengthof v3;
if v2 != v4 goto label1;
v5 = new org.jboss.threads.EnhancedQueueExecutor$QueueFullException;
specialinvoke v5.<org.jboss.threads.EnhancedQueueExecutor$QueueFullException: void <init>()>();
throw v5;
label1:
v6 = v4 - 1;
v7 = 0;
v8 = v2 - 1;
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
label2:
if v7 > v8 goto label5;
v10 = v7 + v8;
v11 = v10 >>> 1;
v12 = v9 + v11;
v13 = v12 & v6;
v14 = v3[v13];
v15 = virtualinvoke v14.<org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture: int compareTo(org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)>(v1);
if v15 >= 0 goto label3;
v7 = v11 + 1;
goto label2;
label3:
if v15 <= 0 goto label4;
v8 = v11 - 1;
goto label2;
label4:
return 0;
label5:
v16 = virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: boolean insertAt(int,org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)>(v7, v1);
return v16;
}
void moveForward(int, org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v15, v2;
int v1, v10, v11, v12, v13, v14, v16, v4, v5, v6, v7, v8, v9;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v3;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v2 := @parameter1: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
v5 = v4 - v1;
v6 = lengthof v3;
v7 = v6 - 1;
v8 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
v9 = v8 + v1;
v10 = v5 - 1;
label1:
if v10 < 0 goto label2;
v11 = v9 + v10;
v12 = v11 + 1;
v13 = v12 & v7;
v14 = v11 & v7;
v15 = v3[v14];
v3[v13] = v15;
v10 = v10 - 1;
goto label1;
label2:
v16 = v9 & v7;
v3[v16] = v2;
return;
}
void moveBackward(int, org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v17, v2;
int v1, v10, v11, v12, v13, v14, v15, v16, v18, v19, v20, v4, v5, v6, v7, v8, v9;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v3;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v2 := @parameter1: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
v5 = v4 - v1;
v6 = v5 + 1;
v7 = lengthof v3;
v8 = v7 - 1;
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
v10 = v9 + v1;
v11 = v10 - 1;
v12 = v6 - 1;
label1:
if v12 < 0 goto label2;
v13 = v11 - v12;
v14 = v13 - 1;
v15 = v14 & v8;
v16 = v13 & v8;
v17 = v3[v16];
v3[v15] = v17;
v12 = v12 - 1;
goto label1;
label2:
v18 = v11 & v8;
v3[v18] = v2;
v19 = v9 - 1;
v20 = v19 & v8;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head> = v20;
return;
}
boolean insertAt(int, org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v2;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
int v1, v3, v4, v5, v6;
boolean v7;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v2 := @parameter1: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size>;
v4 = v3 + 1;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size> = v4;
v5 = v3 + 1;
v6 = v5 >> 1;
if v1 < v6 goto label1;
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: void moveForward(int,org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)>(v1, v2);
goto label2;
label1:
virtualinvoke v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: void moveBackward(int,org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)>(v1, v2);
label2:
if v1 != 0 goto label3;
v7 = 1;
goto label4;
label3:
v7 = 0;
label4:
return v7;
}
public org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue grow()
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v1, v5;
org.jboss.threads.EnhancedQueueExecutor$TreeSetQueue v3;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0, v4;
int v2, v6, v7;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v2 = lengthof v1;
if v2 < 256 goto label1;
v3 = new org.jboss.threads.EnhancedQueueExecutor$TreeSetQueue;
specialinvoke v3.<org.jboss.threads.EnhancedQueueExecutor$TreeSetQueue: void <init>(org.jboss.threads.EnhancedQueueExecutor$ScheduledFutureQueue)>(v0);
return v3;
label1:
v4 = new org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v5 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v6 = lengthof v5;
v7 = v6 << 1;
specialinvoke v4.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: void <init>(org.jboss.threads.EnhancedQueueExecutor$ArrayQueue,int)>(v0, v7);
return v4;
}
int testPoint_arrayLength()
{
int v2;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v1;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v2 = lengthof v1;
return v2;
}
int testPoint_head()
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head>;
return v1;
}
void testPoint_setHead(int)
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int head> = v1;
return;
}
void testPoint_setSize(int)
{
int v1;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: int size> = v1;
return;
}
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture testPoint_getArrayItem(int)
{
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v2, v3;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v7;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
int v1, v4, v5, v6;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v2 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v4 = lengthof v3;
v5 = v4 - 1;
v6 = v1 & v5;
v7 = v2[v6];
return v7;
}
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture testPoint_setArrayItem(int, org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture)
{
java.lang.Throwable v14;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture v2, v8;
int v1, v11, v12, v13, v17, v18, v19, v5, v6, v7;
org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] v10, v15, v16, v3, v4, v9;
org.jboss.threads.EnhancedQueueExecutor$ArrayQueue v0;
v0 := @this: org.jboss.threads.EnhancedQueueExecutor$ArrayQueue;
v1 := @parameter0: int;
v2 := @parameter1: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture;
label1:
v3 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v4 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v5 = lengthof v4;
v6 = v5 - 1;
v7 = v1 & v6;
v8 = v3[v7];
label2:
v9 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v10 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v11 = lengthof v10;
v12 = v11 - 1;
v13 = v1 & v12;
v9[v13] = v2;
return v8;
label3:
v14 := @caughtexception;
v15 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v16 = v0.<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: org.jboss.threads.EnhancedQueueExecutor$AbstractScheduledFuture[] array>;
v17 = lengthof v16;
v18 = v17 - 1;
v19 = v1 & v18;
v15[v19] = v2;
throw v14;
catch java.lang.Throwable from label1 to label2 with label3;
}
static void <clinit>()
{
java.lang.Class v0;
boolean v1, v2;
v0 = class "Lorg/jboss/threads/EnhancedQueueExecutor;";
v1 = virtualinvoke v0.<java.lang.Class: boolean desiredAssertionStatus()>();
if v1 != 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
<org.jboss.threads.EnhancedQueueExecutor$ArrayQueue: boolean $assertionsDisabled> = v2;
return;
}
}