class org.jboss.threads.RejectingExecutor extends java.lang.Object implements java.util.concurrent.Executor
{
static final org.jboss.threads.RejectingExecutor INSTANCE;
private final java.lang.String message;
private void <init>()
{
org.jboss.threads.RejectingExecutor v0;
v0 := @this: org.jboss.threads.RejectingExecutor;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.threads.RejectingExecutor: java.lang.String message> = null;
return;
}
void <init>(java.lang.String)
{
org.jboss.threads.RejectingExecutor v0;
java.lang.String v1;
v0 := @this: org.jboss.threads.RejectingExecutor;
v1 := @parameter0: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.jboss.threads.RejectingExecutor: java.lang.String message> = v1;
return;
}
public void execute(java.lang.Runnable)
{
org.jboss.threads.RejectingExecutor v0;
java.util.concurrent.RejectedExecutionException v2;
java.lang.String v3;
java.lang.Runnable v1;
v0 := @this: org.jboss.threads.RejectingExecutor;
v1 := @parameter0: java.lang.Runnable;
v2 = new java.util.concurrent.RejectedExecutionException;
v3 = v0.<org.jboss.threads.RejectingExecutor: java.lang.String message>;
specialinvoke v2.<java.util.concurrent.RejectedExecutionException: void <init>(java.lang.String)>(v3);
throw v2;
}
public java.lang.String toString()
{
org.jboss.threads.RejectingExecutor v0;
v0 := @this: org.jboss.threads.RejectingExecutor;
return "Rejecting executor";
}
static void <clinit>()
{
org.jboss.threads.RejectingExecutor v0;
v0 = new org.jboss.threads.RejectingExecutor;
specialinvoke v0.<org.jboss.threads.RejectingExecutor: void <init>()>();
<org.jboss.threads.RejectingExecutor: org.jboss.threads.RejectingExecutor INSTANCE> = v0;
return;
}
}