public class org.kohsuke.github.GHBranchProtection extends org.kohsuke.github.GitHubInteractiveObject
{
private static final java.lang.String REQUIRE_SIGNATURES_URI;
private org.kohsuke.github.GHBranchProtection$EnforceAdmins enforceAdmins;
private org.kohsuke.github.GHBranchProtection$RequiredReviews requiredReviews;
private org.kohsuke.github.GHBranchProtection$RequiredStatusChecks requiredStatusChecks;
private org.kohsuke.github.GHBranchProtection$Restrictions restrictions;
private java.lang.String url;
public void <init>()
{
org.kohsuke.github.GHBranchProtection v0;
v0 := @this: org.kohsuke.github.GHBranchProtection;
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>()>();
return;
}
public void enabledSignedCommits() throws java.io.IOException
{
org.kohsuke.github.GHBranchProtection v0;
java.lang.String[] v5;
java.lang.String v3, v4;
org.kohsuke.github.GitHubRequest$Builder v2, v6;
org.kohsuke.github.Requester v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = specialinvoke v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.Requester requester()>();
v2 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v3 = v0.<org.kohsuke.github.GHBranchProtection: java.lang.String url>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/required_signatures");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHBranchProtection$RequiredSignatures;");
return;
}
public void disableSignedCommits() throws java.io.IOException
{
org.kohsuke.github.GHBranchProtection v0;
java.lang.String[] v5;
java.lang.String v3, v4;
org.kohsuke.github.GitHubRequest$Builder v2, v6;
org.kohsuke.github.Requester v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = specialinvoke v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.Requester requester()>();
v2 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v3 = v0.<org.kohsuke.github.GHBranchProtection: java.lang.String url>;
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v3) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/required_signatures");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.GHBranchProtection$EnforceAdmins getEnforceAdmins()
{
org.kohsuke.github.GHBranchProtection v0;
org.kohsuke.github.GHBranchProtection$EnforceAdmins v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.GHBranchProtection$EnforceAdmins enforceAdmins>;
return v1;
}
public org.kohsuke.github.GHBranchProtection$RequiredReviews getRequiredReviews()
{
org.kohsuke.github.GHBranchProtection v0;
org.kohsuke.github.GHBranchProtection$RequiredReviews v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.GHBranchProtection$RequiredReviews requiredReviews>;
return v1;
}
public boolean getRequiredSignatures() throws java.io.IOException
{
java.lang.String[] v4;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.GHBranchProtection v0;
java.lang.Object v6;
java.lang.String v2, v3;
org.kohsuke.github.Requester v1;
boolean v7;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = specialinvoke v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.Requester requester()>();
v2 = v0.<org.kohsuke.github.GHBranchProtection: java.lang.String url>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/required_signatures");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHBranchProtection$RequiredSignatures;");
v7 = v6.<org.kohsuke.github.GHBranchProtection$RequiredSignatures: boolean enabled>;
return v7;
}
public org.kohsuke.github.GHBranchProtection$RequiredStatusChecks getRequiredStatusChecks()
{
org.kohsuke.github.GHBranchProtection v0;
org.kohsuke.github.GHBranchProtection$RequiredStatusChecks v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.GHBranchProtection$RequiredStatusChecks requiredStatusChecks>;
return v1;
}
public org.kohsuke.github.GHBranchProtection$Restrictions getRestrictions()
{
org.kohsuke.github.GHBranchProtection v0;
org.kohsuke.github.GHBranchProtection$Restrictions v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.GHBranchProtection$Restrictions restrictions>;
return v1;
}
public java.lang.String getUrl()
{
org.kohsuke.github.GHBranchProtection v0;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = v0.<org.kohsuke.github.GHBranchProtection: java.lang.String url>;
return v1;
}
private org.kohsuke.github.Requester requester()
{
org.kohsuke.github.GHBranchProtection v0;
org.kohsuke.github.internal.Previews v3;
org.kohsuke.github.GitHubRequest$Builder v4;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHBranchProtection;
v1 = virtualinvoke v0.<org.kohsuke.github.GHBranchProtection: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews ZZZAX>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
return v4;
}
}