public class org.kohsuke.github.GHEventPayload$InstallationRepositories extends org.kohsuke.github.GHEventPayload
{
private java.lang.String repositorySelection;
private java.util.List repositoriesAdded;
private java.util.List repositoriesRemoved;
public void <init>()
{
org.kohsuke.github.GHEventPayload$InstallationRepositories v0;
v0 := @this: org.kohsuke.github.GHEventPayload$InstallationRepositories;
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void <init>()>();
return;
}
public java.lang.String getRepositorySelection()
{
java.lang.String v1;
org.kohsuke.github.GHEventPayload$InstallationRepositories v0;
v0 := @this: org.kohsuke.github.GHEventPayload$InstallationRepositories;
v1 = v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: java.lang.String repositorySelection>;
return v1;
}
public java.util.List getRepositoriesAdded()
{
java.util.List v1, v2;
org.kohsuke.github.GHEventPayload$InstallationRepositories v0;
v0 := @this: org.kohsuke.github.GHEventPayload$InstallationRepositories;
v1 = v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: java.util.List repositoriesAdded>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public java.util.List getRepositoriesRemoved()
{
java.util.List v1, v2;
org.kohsuke.github.GHEventPayload$InstallationRepositories v0;
v0 := @this: org.kohsuke.github.GHEventPayload$InstallationRepositories;
v1 = v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: java.util.List repositoriesRemoved>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
void lateBind()
{
java.lang.IllegalStateException v2;
java.util.Iterator v8;
java.io.IOException v11;
org.kohsuke.github.GHEventPayload$InstallationRepositories v0;
org.kohsuke.github.GHException v12;
java.util.List v6;
java.lang.Object v10;
java.lang.String v3, v4;
org.kohsuke.github.GHAppInstallation v1;
boolean v5, v7, v9;
v0 := @this: org.kohsuke.github.GHEventPayload$InstallationRepositories;
v1 = virtualinvoke v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: org.kohsuke.github.GHAppInstallation getInstallation()>();
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected installation_repositories payload, but got something else. Maybe we\'ve got another type of event?");
throw v2;
label1:
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void lateBind()>();
v3 = "added";
v4 = virtualinvoke v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: java.lang.String getAction()>();
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label2;
v6 = v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: java.util.List repositoriesAdded>;
goto label3;
label2:
v6 = v0.<org.kohsuke.github.GHEventPayload$InstallationRepositories: java.util.List repositoriesRemoved>;
label3:
if v6 == null goto label7;
v7 = interfaceinvoke v6.<java.util.List: boolean isEmpty()>();
if v7 != 0 goto label7;
label4:
v8 = interfaceinvoke v6.<java.util.List: java.util.Iterator iterator()>();
label5:
v9 = interfaceinvoke v8.<java.util.Iterator: boolean hasNext()>();
if v9 == 0 goto label7;
v10 = interfaceinvoke v8.<java.util.Iterator: java.lang.Object next()>();
virtualinvoke v10.<org.kohsuke.github.GHRepository: void populate()>();
goto label5;
label6:
v11 := @caughtexception;
v12 = new org.kohsuke.github.GHException;
specialinvoke v12.<org.kohsuke.github.GHException: void <init>(java.lang.String,java.lang.Throwable)>("Failed to refresh repositories", v11);
throw v12;
label7:
return;
catch java.io.IOException from label4 to label6 with label6;
}
}