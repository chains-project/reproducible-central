public class org.kohsuke.github.GHEventPayload$PullRequestReviewComment extends org.kohsuke.github.GHEventPayload
{
private org.kohsuke.github.GHPullRequestReviewComment comment;
private org.kohsuke.github.GHPullRequest pullRequest;
private org.kohsuke.github.GHEventPayload$CommentChanges changes;
public void <init>()
{
org.kohsuke.github.GHEventPayload$PullRequestReviewComment v0;
v0 := @this: org.kohsuke.github.GHEventPayload$PullRequestReviewComment;
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void <init>()>();
return;
}
public org.kohsuke.github.GHPullRequestReviewComment getComment()
{
org.kohsuke.github.GHEventPayload$PullRequestReviewComment v0;
org.kohsuke.github.GHPullRequestReviewComment v1;
v0 := @this: org.kohsuke.github.GHEventPayload$PullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHPullRequestReviewComment comment>;
return v1;
}
public org.kohsuke.github.GHEventPayload$CommentChanges getChanges()
{
org.kohsuke.github.GHEventPayload$PullRequestReviewComment v0;
org.kohsuke.github.GHEventPayload$CommentChanges v1;
v0 := @this: org.kohsuke.github.GHEventPayload$PullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHEventPayload$CommentChanges changes>;
return v1;
}
public org.kohsuke.github.GHPullRequest getPullRequest()
{
org.kohsuke.github.GHEventPayload$PullRequestReviewComment v0;
org.kohsuke.github.GHPullRequest v1;
v0 := @this: org.kohsuke.github.GHEventPayload$PullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHPullRequest pullRequest>;
return v1;
}
void lateBind()
{
org.kohsuke.github.GHEventPayload$PullRequestReviewComment v0;
org.kohsuke.github.GHPullRequestReviewComment v1, v3;
java.lang.IllegalStateException v2;
org.kohsuke.github.GHPullRequest v4, v6;
org.kohsuke.github.GHRepository v5;
v0 := @this: org.kohsuke.github.GHEventPayload$PullRequestReviewComment;
v1 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHPullRequestReviewComment comment>;
if v1 != null goto label1;
v2 = new java.lang.IllegalStateException;
specialinvoke v2.<java.lang.IllegalStateException: void <init>(java.lang.String)>("Expected pull_request_review_comment payload, but got something else. Maybe we\'ve got another type of event?");
throw v2;
label1:
specialinvoke v0.<org.kohsuke.github.GHEventPayload: void lateBind()>();
v3 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHPullRequestReviewComment comment>;
v4 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHPullRequest pullRequest>;
virtualinvoke v3.<org.kohsuke.github.GHPullRequestReviewComment: org.kohsuke.github.GHPullRequestReviewComment wrapUp(org.kohsuke.github.GHPullRequest)>(v4);
v5 = virtualinvoke v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHRepository getRepository()>();
if v5 == null goto label2;
v6 = v0.<org.kohsuke.github.GHEventPayload$PullRequestReviewComment: org.kohsuke.github.GHPullRequest pullRequest>;
virtualinvoke v6.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GHPullRequest wrapUp(org.kohsuke.github.GHRepository)>(v5);
label2:
return;
}
}