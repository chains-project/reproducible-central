public class org.kohsuke.github.GHGist extends org.kohsuke.github.GHObject
{
final org.kohsuke.github.GHUser owner;
private java.lang.String forks_url;
private java.lang.String commits_url;
private java.lang.String id;
private java.lang.String git_pull_url;
private java.lang.String git_push_url;
private java.lang.String html_url;
private boolean _public;
private java.lang.String description;
private int comments;
private java.lang.String comments_url;
private final java.util.Map files;
private void <init>(org.kohsuke.github.GHUser, java.util.Map)
{
java.util.Iterator v4;
java.util.Set v3;
org.kohsuke.github.GHGist v0;
org.kohsuke.github.GHUser v1, v11;
java.util.Map v2, v9;
java.lang.Object v6, v7, v8;
org.kohsuke.github.GitHub v10;
boolean v5;
v0 := @this: org.kohsuke.github.GHGist;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 := @parameter1: java.util.Map;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v7.<org.kohsuke.github.GHGistFile: java.lang.String fileName> = v8;
goto label1;
label2:
v9 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v2);
v0.<org.kohsuke.github.GHGist: java.util.Map files> = v9;
v10 = virtualinvoke v1.<org.kohsuke.github.GHUser: org.kohsuke.github.GitHub root()>();
v11 = virtualinvoke v10.<org.kohsuke.github.GitHub: org.kohsuke.github.GHUser getUser(org.kohsuke.github.GHUser)>(v1);
v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GHUser owner> = v11;
return;
}
public long getId()
{
long v2;
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: java.lang.String getGistId()>();
v2 = staticinvoke <java.lang.Long: long parseLong(java.lang.String)>(v1);
return v2;
}
public java.lang.String getGistId()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String id>;
return v1;
}
public org.kohsuke.github.GHUser getOwner() throws java.io.IOException
{
org.kohsuke.github.GHGist v0;
org.kohsuke.github.GHUser v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GHUser owner>;
return v1;
}
public java.lang.String getForksUrl()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String forks_url>;
return v1;
}
public java.lang.String getCommitsUrl()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String commits_url>;
return v1;
}
public java.lang.String getGitPullUrl()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String git_pull_url>;
return v1;
}
public java.lang.String getGitPushUrl()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String git_push_url>;
return v1;
}
public java.net.URL getHtmlUrl()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public boolean isPublic()
{
org.kohsuke.github.GHGist v0;
boolean v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: boolean _public>;
return v1;
}
public java.lang.String getDescription()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String description>;
return v1;
}
public int getCommentCount()
{
int v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: int comments>;
return v1;
}
public java.lang.String getCommentsUrl()
{
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String comments_url>;
return v1;
}
public org.kohsuke.github.GHGistFile getFile(java.lang.String)
{
org.kohsuke.github.GHGist v0;
java.util.Map v2;
java.lang.Object v3;
java.lang.String v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHGist: java.util.Map files>;
v3 = interfaceinvoke v2.<java.util.Map: java.lang.Object get(java.lang.Object)>(v1);
return v3;
}
public java.util.Map getFiles()
{
org.kohsuke.github.GHGist v0;
java.util.Map v1, v2;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.util.Map files>;
v2 = staticinvoke <java.util.Collections: java.util.Map unmodifiableMap(java.util.Map)>(v1);
return v2;
}
java.lang.String getApiTailUrl(java.lang.String)
{
java.lang.CharSequence[] v5;
org.kohsuke.github.GHGist v0;
java.lang.String v1, v2, v3, v6;
boolean v4;
v0 := @this: org.kohsuke.github.GHGist;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHGist: java.lang.String id>;
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/gists/\u0001");
v4 = staticinvoke <org.apache.commons.lang3.StringUtils: boolean isBlank(java.lang.CharSequence)>(v1);
if v4 != 0 goto label1;
v5 = newarray (java.lang.CharSequence)[0];
v6 = staticinvoke <org.apache.commons.lang3.StringUtils: java.lang.String prependIfMissing(java.lang.String,java.lang.CharSequence,java.lang.CharSequence[])>(v1, "/", v5);
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v3, v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001\u0001");
label1:
return v3;
}
public void star() throws java.io.IOException
{
org.kohsuke.github.GHGist v0;
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v4 = virtualinvoke v0.<org.kohsuke.github.GHGist: java.lang.String getApiTailUrl(java.lang.String)>("star");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
public void unstar() throws java.io.IOException
{
org.kohsuke.github.GHGist v0;
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = virtualinvoke v0.<org.kohsuke.github.GHGist: java.lang.String getApiTailUrl(java.lang.String)>("star");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
public boolean isStarred() throws java.io.IOException
{
java.lang.String[] v4;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.GHGist v0;
int v6, v7;
java.lang.String v3;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
boolean v8;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHGist: java.lang.String getApiTailUrl(java.lang.String)>("star");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: int fetchHttpStatusCode()>();
v7 = v6 / 100;
if v7 != 2 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
return v8;
}
public org.kohsuke.github.GHGist fork() throws java.io.IOException
{
java.lang.String[] v5;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.GHGist v0;
java.lang.Object v7;
java.lang.String v4;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v4 = virtualinvoke v0.<org.kohsuke.github.GHGist: java.lang.String getApiTailUrl(java.lang.String)>("forks");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHGist;");
return v7;
}
public org.kohsuke.github.PagedIterable listForks()
{
org.kohsuke.github.GHGist v0;
java.lang.String[] v4;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GHGist: java.lang.String getApiTailUrl(java.lang.String)>("forks");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHGist;", null);
return v6;
}
public void delete() throws java.io.IOException
{
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v3, v7;
org.kohsuke.github.GHGist v0;
java.lang.String v4, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHGist;
v1 = virtualinvoke v0.<org.kohsuke.github.GHGist: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = v0.<org.kohsuke.github.GHGist: java.lang.String id>;
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v4) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/gists/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
virtualinvoke v7.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.GHGistUpdater update() throws java.io.IOException
{
org.kohsuke.github.GHGistUpdater v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = new org.kohsuke.github.GHGistUpdater;
specialinvoke v1.<org.kohsuke.github.GHGistUpdater: void <init>(org.kohsuke.github.GHGist)>(v0);
return v1;
}
public boolean equals(java.lang.Object)
{
org.kohsuke.github.GHGist v0;
java.lang.Class v2, v3;
java.lang.Object v1;
java.lang.String v4, v5;
boolean v6;
v0 := @this: org.kohsuke.github.GHGist;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
if v1 == null goto label2;
v2 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v3 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
if v2 == v3 goto label3;
label2:
return 0;
label3:
v4 = v0.<org.kohsuke.github.GHGist: java.lang.String id>;
v5 = v1.<org.kohsuke.github.GHGist: java.lang.String id>;
v6 = virtualinvoke v4.<java.lang.String: boolean equals(java.lang.Object)>(v5);
return v6;
}
public int hashCode()
{
int v2;
java.lang.String v1;
org.kohsuke.github.GHGist v0;
v0 := @this: org.kohsuke.github.GHGist;
v1 = v0.<org.kohsuke.github.GHGist: java.lang.String id>;
v2 = virtualinvoke v1.<java.lang.String: int hashCode()>();
return v2;
}
}