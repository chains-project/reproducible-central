public class org.kohsuke.github.GHLicense extends org.kohsuke.github.GHObject
{
protected java.lang.String key;
protected java.lang.String name;
protected java.lang.Boolean featured;
protected java.lang.String html_url;
protected java.lang.String description;
protected java.lang.String category;
protected java.lang.String implementation;
protected java.lang.String body;
protected java.util.List required;
protected java.util.List permitted;
protected java.util.List forbidden;
public void <init>()
{
org.kohsuke.github.GHLicense v0;
java.util.ArrayList v1, v2, v3;
v0 := @this: org.kohsuke.github.GHLicense;
specialinvoke v0.<org.kohsuke.github.GHObject: void <init>()>();
v1 = new java.util.ArrayList;
specialinvoke v1.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHLicense: java.util.List required> = v1;
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHLicense: java.util.List permitted> = v2;
v3 = new java.util.ArrayList;
specialinvoke v3.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHLicense: java.util.List forbidden> = v3;
return;
}
public java.lang.String getKey()
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String key>;
return v1;
}
public java.lang.String getName()
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String name>;
return v1;
}
public java.lang.Boolean isFeatured() throws java.io.IOException
{
java.lang.Boolean v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.Boolean featured>;
return v1;
}
public java.net.URL getHtmlUrl() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
java.net.URL v2;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String html_url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public java.lang.String getDescription() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String description>;
return v1;
}
public java.lang.String getCategory() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String category>;
return v1;
}
public java.lang.String getImplementation() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String implementation>;
return v1;
}
public java.util.List getRequired() throws java.io.IOException
{
java.util.List v1, v2;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.util.List required>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public java.util.List getPermitted() throws java.io.IOException
{
java.util.List v1, v2;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.util.List permitted>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public java.util.List getForbidden() throws java.io.IOException
{
java.util.List v1, v2;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.util.List forbidden>;
v2 = staticinvoke <java.util.Collections: java.util.List unmodifiableList(java.util.List)>(v1);
return v2;
}
public java.lang.String getBody() throws java.io.IOException
{
java.lang.String v1;
org.kohsuke.github.GHLicense v0;
v0 := @this: org.kohsuke.github.GHLicense;
virtualinvoke v0.<org.kohsuke.github.GHLicense: void populate()>();
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String body>;
return v1;
}
protected synchronized void populate() throws java.io.IOException
{
java.net.URL v3;
org.kohsuke.github.GitHubRequest$Builder v7;
org.kohsuke.github.GHLicense v0;
java.lang.String v1, v6;
org.kohsuke.github.Requester v5;
org.kohsuke.github.GitHub v4;
boolean v2;
v0 := @this: org.kohsuke.github.GHLicense;
v1 = v0.<org.kohsuke.github.GHLicense: java.lang.String description>;
if v1 == null goto label1;
return;
label1:
v2 = virtualinvoke v0.<org.kohsuke.github.GHLicense: boolean isOffline()>();
if v2 == 0 goto label2;
return;
label2:
v3 = virtualinvoke v0.<org.kohsuke.github.GHLicense: java.net.URL getUrl()>();
if v3 == null goto label3;
v4 = virtualinvoke v0.<org.kohsuke.github.GHLicense: org.kohsuke.github.GitHub root()>();
v5 = virtualinvoke v4.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v6 = virtualinvoke v3.<java.net.URL: java.lang.String toString()>();
v7 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setRawUrlPath(java.lang.String)>(v6);
virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetchInto(java.lang.Object)>(v0);
label3:
return;
}
public boolean equals(java.lang.Object)
{
org.kohsuke.github.GHLicense v0;
java.net.URL v3, v4;
java.lang.Object v1;
boolean v2, v5;
v0 := @this: org.kohsuke.github.GHLicense;
v1 := @parameter0: java.lang.Object;
if v0 != v1 goto label1;
return 1;
label1:
v2 = v1 instanceof org.kohsuke.github.GHLicense;
if v2 != 0 goto label2;
return 0;
label2:
v3 = virtualinvoke v0.<org.kohsuke.github.GHLicense: java.net.URL getUrl()>();
v4 = virtualinvoke v1.<org.kohsuke.github.GHLicense: java.net.URL getUrl()>();
v5 = staticinvoke <java.util.Objects: boolean equals(java.lang.Object,java.lang.Object)>(v3, v4);
return v5;
}
public int hashCode()
{
int v2;
org.kohsuke.github.GHLicense v0;
java.net.URL v1;
v0 := @this: org.kohsuke.github.GHLicense;
v1 = virtualinvoke v0.<org.kohsuke.github.GHLicense: java.net.URL getUrl()>();
v2 = staticinvoke <java.util.Objects: int hashCode(java.lang.Object)>(v1);
return v2;
}
}