public class org.kohsuke.github.GHPullRequestReviewBuilder extends java.lang.Object
{
private final org.kohsuke.github.GHPullRequest pr;
private final org.kohsuke.github.Requester builder;
private final java.util.List comments;
void <init>(org.kohsuke.github.GHPullRequest)
{
org.kohsuke.github.GHPullRequest v1;
org.kohsuke.github.GHPullRequestReviewBuilder v0;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v3;
java.util.ArrayList v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewBuilder;
v1 := @parameter0: org.kohsuke.github.GHPullRequest;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.ArrayList;
specialinvoke v2.<java.util.ArrayList: void <init>()>();
v0.<org.kohsuke.github.GHPullRequestReviewBuilder: java.util.List comments> = v2;
v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.GHPullRequest pr> = v1;
v3 = virtualinvoke v1.<org.kohsuke.github.GHPullRequest: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.Requester builder> = v4;
return;
}
public org.kohsuke.github.GHPullRequestReviewBuilder commitId(java.lang.String)
{
org.kohsuke.github.GHPullRequestReviewBuilder v0;
java.lang.String v1;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.Requester builder>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("commit_id", v1);
return v0;
}
public org.kohsuke.github.GHPullRequestReviewBuilder body(java.lang.String)
{
org.kohsuke.github.GHPullRequestReviewBuilder v0;
java.lang.String v1;
org.kohsuke.github.Requester v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewBuilder;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.Requester builder>;
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("body", v1);
return v0;
}
public org.kohsuke.github.GHPullRequestReviewBuilder event(org.kohsuke.github.GHPullRequestReviewEvent)
{
org.kohsuke.github.GHPullRequestReviewBuilder v0;
java.lang.String v3;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GHPullRequestReviewEvent v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewBuilder;
v1 := @parameter0: org.kohsuke.github.GHPullRequestReviewEvent;
v2 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.Requester builder>;
v3 = virtualinvoke v1.<org.kohsuke.github.GHPullRequestReviewEvent: java.lang.String action()>();
virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("event", v3);
return v0;
}
public org.kohsuke.github.GHPullRequestReviewBuilder comment(java.lang.String, java.lang.String, int)
{
java.util.List v4;
org.kohsuke.github.GHPullRequestReviewBuilder v0;
int v3;
org.kohsuke.github.GHPullRequestReviewBuilder$DraftReviewComment v5;
java.lang.String v1, v2;
v0 := @this: org.kohsuke.github.GHPullRequestReviewBuilder;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: int;
v4 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: java.util.List comments>;
v5 = new org.kohsuke.github.GHPullRequestReviewBuilder$DraftReviewComment;
specialinvoke v5.<org.kohsuke.github.GHPullRequestReviewBuilder$DraftReviewComment: void <init>(java.lang.String,java.lang.String,int)>(v1, v2, v3);
interfaceinvoke v4.<java.util.List: boolean add(java.lang.Object)>(v5);
return v0;
}
public org.kohsuke.github.GHPullRequestReview create() throws java.io.IOException
{
org.kohsuke.github.GHPullRequest v11, v5;
org.kohsuke.github.GHPullRequestReview v12;
java.lang.String[] v8;
org.kohsuke.github.GitHubRequest$Builder v2, v4, v9;
java.util.List v3;
org.kohsuke.github.GHPullRequestReviewBuilder v0;
java.lang.Object v10;
java.lang.String v6, v7;
org.kohsuke.github.Requester v1;
v0 := @this: org.kohsuke.github.GHPullRequestReviewBuilder;
v1 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.Requester builder>;
v2 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v3 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: java.util.List comments>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("comments", v3);
v5 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.GHPullRequest pr>;
v6 = virtualinvoke v5.<org.kohsuke.github.GHPullRequest: java.lang.String getApiRoute()>();
v7 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v6) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001/reviews");
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHPullRequestReview;");
v11 = v0.<org.kohsuke.github.GHPullRequestReviewBuilder: org.kohsuke.github.GHPullRequest pr>;
v12 = virtualinvoke v10.<org.kohsuke.github.GHPullRequestReview: org.kohsuke.github.GHPullRequestReview wrapUp(org.kohsuke.github.GHPullRequest)>(v11);
return v12;
}
}