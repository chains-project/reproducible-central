public class org.kohsuke.github.GHRef extends org.kohsuke.github.GitHubInteractiveObject
{
private java.lang.String ref;
private java.lang.String url;
private org.kohsuke.github.GHRef$GHObject object;
public void <init>()
{
org.kohsuke.github.GHRef v0;
v0 := @this: org.kohsuke.github.GHRef;
specialinvoke v0.<org.kohsuke.github.GitHubInteractiveObject: void <init>()>();
return;
}
public java.lang.String getRef()
{
java.lang.String v1;
org.kohsuke.github.GHRef v0;
v0 := @this: org.kohsuke.github.GHRef;
v1 = v0.<org.kohsuke.github.GHRef: java.lang.String ref>;
return v1;
}
public java.net.URL getUrl()
{
java.lang.String v1;
java.net.URL v2;
org.kohsuke.github.GHRef v0;
v0 := @this: org.kohsuke.github.GHRef;
v1 = v0.<org.kohsuke.github.GHRef: java.lang.String url>;
v2 = staticinvoke <org.kohsuke.github.GitHubClient: java.net.URL parseURL(java.lang.String)>(v1);
return v2;
}
public org.kohsuke.github.GHRef$GHObject getObject()
{
org.kohsuke.github.GHRef$GHObject v1;
org.kohsuke.github.GHRef v0;
v0 := @this: org.kohsuke.github.GHRef;
v1 = v0.<org.kohsuke.github.GHRef: org.kohsuke.github.GHRef$GHObject object>;
return v1;
}
public void updateTo(java.lang.String) throws java.io.IOException
{
java.lang.Boolean v2;
java.lang.String v1;
org.kohsuke.github.GHRef v0;
v0 := @this: org.kohsuke.github.GHRef;
v1 := @parameter0: java.lang.String;
v2 = staticinvoke <java.lang.Boolean: java.lang.Boolean valueOf(boolean)>(0);
virtualinvoke v0.<org.kohsuke.github.GHRef: void updateTo(java.lang.String,java.lang.Boolean)>(v1, v2);
return;
}
public void updateTo(java.lang.String, java.lang.Boolean) throws java.io.IOException
{
java.lang.String[] v9;
org.kohsuke.github.GitHubRequest$Builder v10, v5, v6, v7;
java.lang.Boolean v2;
java.lang.String v1, v8;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GHRef v0;
org.kohsuke.github.GitHub v3;
v0 := @this: org.kohsuke.github.GHRef;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.Boolean;
v3 = virtualinvoke v0.<org.kohsuke.github.GHRef: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PATCH");
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("sha", v1);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.Object)>("force", v2);
v8 = v0.<org.kohsuke.github.GHRef: java.lang.String url>;
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v8, v9);
virtualinvoke v10.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHRef;");
return;
}
public void delete() throws java.io.IOException
{
java.lang.String[] v5;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GHRef v0;
org.kohsuke.github.GitHub v1;
v0 := @this: org.kohsuke.github.GHRef;
v1 = virtualinvoke v0.<org.kohsuke.github.GHRef: org.kohsuke.github.GitHub root()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = v0.<org.kohsuke.github.GHRef: java.lang.String url>;
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
static org.kohsuke.github.GHRef read(org.kohsuke.github.GHRepository, java.lang.String) throws java.io.IOException
{
java.lang.Throwable v12;
org.kohsuke.github.GHRepository v0;
java.lang.Object[] v17, v5;
java.lang.String[] v8;
org.kohsuke.github.GHFileNotFoundException v16;
org.kohsuke.github.GitHubRequest$Builder v9;
java.lang.String v1, v14, v18, v19, v6, v7;
org.kohsuke.github.GitHub v3;
boolean v13, v15, v2;
java.io.IOException v11;
java.lang.Object v10;
org.kohsuke.github.Requester v4;
v0 := @parameter0: org.kohsuke.github.GHRepository;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>("refs/");
if v2 == 0 goto label1;
v1 = virtualinvoke v1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("refs/", "");
label1:
v3 = virtualinvoke v0.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = newarray (java.lang.Object)[1];
v5[0] = v1;
v6 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("git/refs/%s", v5);
v7 = virtualinvoke v0.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v6);
v8 = newarray (java.lang.String)[0];
v9 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v7, v8);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHRef;");
label2:
goto label4;
label3:
v11 := @caughtexception;
v12 = virtualinvoke v11.<java.io.IOException: java.lang.Throwable getCause()>();
v13 = v12 instanceof com.fasterxml.jackson.databind.JsonMappingException;
if v13 != 0 goto label4;
throw v11;
label4:
if v10 == null goto label5;
v14 = virtualinvoke v10.<org.kohsuke.github.GHRef: java.lang.String getRef()>();
v15 = virtualinvoke v14.<java.lang.String: boolean endsWith(java.lang.String)>(v1);
if v15 != 0 goto label6;
label5:
v16 = new org.kohsuke.github.GHFileNotFoundException;
v17 = newarray (java.lang.Object)[1];
v17[0] = v1;
v18 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("git/refs/%s", v17);
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v18) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001 {\"message\":\"Not Found\",\"documentation_url\":\"https://developer.github.com/v3/git/refs/#get-a-reference\"}");
specialinvoke v16.<org.kohsuke.github.GHFileNotFoundException: void <init>(java.lang.String)>(v19);
throw v16;
label6:
return v10;
catch java.io.IOException from label1 to label2 with label3;
}
static org.kohsuke.github.PagedIterable readMatching(org.kohsuke.github.GHRepository, java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHRepository v0;
java.lang.Object[] v3;
java.lang.String[] v11;
org.kohsuke.github.GitHubRequest$Builder v12;
java.util.function.Consumer v13;
int v7, v8;
java.lang.String v1, v4, v5;
org.kohsuke.github.Requester v10;
org.kohsuke.github.PagedIterable v14;
org.kohsuke.github.GitHub v9;
boolean v2, v6;
v0 := @parameter0: org.kohsuke.github.GHRepository;
v1 := @parameter1: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: boolean startsWith(java.lang.String)>("refs/");
if v2 == 0 goto label1;
v1 = virtualinvoke v1.<java.lang.String: java.lang.String replaceFirst(java.lang.String,java.lang.String)>("refs/", "");
label1:
v3 = newarray (java.lang.Object)[1];
v3[0] = v1;
v4 = staticinvoke <java.lang.String: java.lang.String format(java.lang.String,java.lang.Object[])>("git/refs/%s", v3);
v5 = virtualinvoke v0.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>(v4);
v6 = virtualinvoke v1.<java.lang.String: boolean equals(java.lang.Object)>("");
if v6 == 0 goto label2;
v7 = virtualinvoke v5.<java.lang.String: int length()>();
v8 = v7 - 1;
v5 = virtualinvoke v5.<java.lang.String: java.lang.String substring(int,int)>(0, v8);
label2:
v9 = virtualinvoke v0.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v10 = virtualinvoke v9.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v11 = newarray (java.lang.String)[0];
v12 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v11);
v13 = staticinvoke <org.kohsuke.github.GHRef$lambda_readMatching_0__53: java.util.function.Consumer bootstrap$(org.kohsuke.github.GHRepository)>(v0);
v14 = virtualinvoke v12.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHRef;", v13);
return v14;
}
}