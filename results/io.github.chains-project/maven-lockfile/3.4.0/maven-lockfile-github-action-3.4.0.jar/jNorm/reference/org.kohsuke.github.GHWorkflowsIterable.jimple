class org.kohsuke.github.GHWorkflowsIterable extends org.kohsuke.github.PagedIterable
{
private final transient org.kohsuke.github.GHRepository owner;
private org.kohsuke.github.GHWorkflowsPage result;
public void <init>(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHWorkflowsIterable v0;
org.kohsuke.github.GHRepository v1;
v0 := @this: org.kohsuke.github.GHWorkflowsIterable;
v1 := @parameter0: org.kohsuke.github.GHRepository;
specialinvoke v0.<org.kohsuke.github.PagedIterable: void <init>()>();
v0.<org.kohsuke.github.GHWorkflowsIterable: org.kohsuke.github.GHRepository owner> = v1;
return;
}
public org.kohsuke.github.PagedIterator _iterator(int)
{
org.kohsuke.github.GHRepository v11, v2, v5;
org.kohsuke.github.GitHubPageIterator v14;
java.lang.String[] v7;
org.kohsuke.github.GitHubRequest$Builder v8;
int v1;
org.kohsuke.github.PagedIterator v10;
java.lang.String v6;
org.kohsuke.github.GitHub v12, v3;
org.kohsuke.github.GHWorkflowsIterable v0;
java.util.Iterator v15;
org.kohsuke.github.GitHubClient v13;
org.kohsuke.github.GitHubRequest v9;
org.kohsuke.github.Requester v4;
v0 := @this: org.kohsuke.github.GHWorkflowsIterable;
v1 := @parameter0: int;
v2 = v0.<org.kohsuke.github.GHWorkflowsIterable: org.kohsuke.github.GHRepository owner>;
v3 = virtualinvoke v2.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = v0.<org.kohsuke.github.GHWorkflowsIterable: org.kohsuke.github.GHRepository owner>;
v6 = virtualinvoke v5.<org.kohsuke.github.GHRepository: java.lang.String getApiTailUrl(java.lang.String)>("actions/workflows");
v7 = newarray (java.lang.String)[0];
v8 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v6, v7);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest build()>();
v10 = new org.kohsuke.github.PagedIterator;
v11 = v0.<org.kohsuke.github.GHWorkflowsIterable: org.kohsuke.github.GHRepository owner>;
v12 = virtualinvoke v11.<org.kohsuke.github.GHRepository: org.kohsuke.github.GitHub root()>();
v13 = virtualinvoke v12.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient getClient()>();
v14 = staticinvoke <org.kohsuke.github.GitHubPageIterator: org.kohsuke.github.GitHubPageIterator create(org.kohsuke.github.GitHubClient,java.lang.Class,org.kohsuke.github.GitHubRequest,int)>(v13, class "Lorg/kohsuke/github/GHWorkflowsPage;", v9, v1);
v15 = virtualinvoke v0.<org.kohsuke.github.GHWorkflowsIterable: java.util.Iterator adapt(java.util.Iterator)>(v14);
specialinvoke v10.<org.kohsuke.github.PagedIterator: void <init>(java.util.Iterator,java.util.function.Consumer)>(v15, null);
return v10;
}
protected java.util.Iterator adapt(java.util.Iterator)
{
org.kohsuke.github.GHWorkflowsIterable v0;
java.util.Iterator v1;
org.kohsuke.github.GHWorkflowsIterable$1 v2;
v0 := @this: org.kohsuke.github.GHWorkflowsIterable;
v1 := @parameter0: java.util.Iterator;
v2 = new org.kohsuke.github.GHWorkflowsIterable$1;
specialinvoke v2.<org.kohsuke.github.GHWorkflowsIterable$1: void <init>(org.kohsuke.github.GHWorkflowsIterable,java.util.Iterator)>(v0, v1);
return v2;
}
}