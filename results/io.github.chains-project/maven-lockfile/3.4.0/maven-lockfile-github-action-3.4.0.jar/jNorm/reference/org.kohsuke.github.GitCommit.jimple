public class org.kohsuke.github.GitCommit extends java.lang.Object
{
private org.kohsuke.github.GHRepository owner;
private java.lang.String sha;
private java.lang.String node_id;
private java.lang.String url;
private java.lang.String html_url;
private org.kohsuke.github.GitUser author;
private org.kohsuke.github.GitUser committer;
private java.lang.String message;
private org.kohsuke.github.GHVerification verification;
private org.kohsuke.github.GitCommit$Tree tree;
private java.util.List parents;
public void <init>()
{
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
void <init>(org.kohsuke.github.GitCommit)
{
org.kohsuke.github.GHRepository v2;
org.kohsuke.github.GitCommit v0, v1;
org.kohsuke.github.GitCommit$Tree v11;
org.kohsuke.github.GitUser v7, v8;
java.util.List v12;
org.kohsuke.github.GHVerification v10;
java.lang.String v3, v4, v5, v6, v9;
v0 := @this: org.kohsuke.github.GitCommit;
v1 := @parameter0: org.kohsuke.github.GitCommit;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHRepository getOwner()>();
v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHRepository owner> = v2;
v3 = virtualinvoke v1.<org.kohsuke.github.GitCommit: java.lang.String getSha()>();
v0.<org.kohsuke.github.GitCommit: java.lang.String sha> = v3;
v4 = virtualinvoke v1.<org.kohsuke.github.GitCommit: java.lang.String getNodeId()>();
v0.<org.kohsuke.github.GitCommit: java.lang.String node_id> = v4;
v5 = virtualinvoke v1.<org.kohsuke.github.GitCommit: java.lang.String getUrl()>();
v0.<org.kohsuke.github.GitCommit: java.lang.String url> = v5;
v6 = virtualinvoke v1.<org.kohsuke.github.GitCommit: java.lang.String getHtmlUrl()>();
v0.<org.kohsuke.github.GitCommit: java.lang.String html_url> = v6;
v7 = virtualinvoke v1.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser getAuthor()>();
v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser author> = v7;
v8 = virtualinvoke v1.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser getCommitter()>();
v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser committer> = v8;
v9 = virtualinvoke v1.<org.kohsuke.github.GitCommit: java.lang.String getMessage()>();
v0.<org.kohsuke.github.GitCommit: java.lang.String message> = v9;
v10 = virtualinvoke v1.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHVerification getVerification()>();
v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHVerification verification> = v10;
v11 = virtualinvoke v1.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit$Tree getTree()>();
v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit$Tree tree> = v11;
v12 = virtualinvoke v1.<org.kohsuke.github.GitCommit: java.util.List getParents()>();
v0.<org.kohsuke.github.GitCommit: java.util.List parents> = v12;
return;
}
public org.kohsuke.github.GHRepository getOwner()
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHRepository owner>;
return v1;
}
public java.lang.String getSHA1()
{
java.lang.String v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.lang.String sha>;
return v1;
}
public java.lang.String getSha()
{
java.lang.String v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.lang.String sha>;
return v1;
}
public java.lang.String getNodeId()
{
java.lang.String v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.lang.String node_id>;
return v1;
}
public java.lang.String getUrl()
{
java.lang.String v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.lang.String url>;
return v1;
}
public java.lang.String getHtmlUrl()
{
java.lang.String v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.lang.String html_url>;
return v1;
}
public org.kohsuke.github.GitUser getAuthor()
{
org.kohsuke.github.GitUser v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser author>;
return v1;
}
private java.lang.Object gitUserToGHAuthor(org.kohsuke.github.GitUser, java.lang.Class)
{
org.kohsuke.github.GitUser v1;
org.kohsuke.github.GHCommit$GHAuthor v3;
org.kohsuke.github.GitCommit v0;
java.lang.Class v2;
v0 := @this: org.kohsuke.github.GitCommit;
v1 := @parameter0: org.kohsuke.github.GitUser;
v2 := @parameter1: java.lang.Class;
v3 = new org.kohsuke.github.GHCommit$GHAuthor;
specialinvoke v3.<org.kohsuke.github.GHCommit$GHAuthor: void <init>(org.kohsuke.github.GitUser)>(v1);
return v3;
}
public java.util.Date getAuthoredDate()
{
org.kohsuke.github.GitUser v1;
org.kohsuke.github.GitCommit v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser author>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitUser: java.util.Date getDate()>();
return v2;
}
public org.kohsuke.github.GitUser getCommitter()
{
org.kohsuke.github.GitUser v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser committer>;
return v1;
}
public java.util.Date getCommitDate()
{
org.kohsuke.github.GitUser v1;
org.kohsuke.github.GitCommit v0;
java.util.Date v2;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitUser committer>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitUser: java.util.Date getDate()>();
return v2;
}
public java.lang.String getMessage()
{
java.lang.String v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.lang.String message>;
return v1;
}
public org.kohsuke.github.GHVerification getVerification()
{
org.kohsuke.github.GHVerification v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHVerification verification>;
return v1;
}
org.kohsuke.github.GitCommit$Tree getTree()
{
org.kohsuke.github.GitCommit v0;
org.kohsuke.github.GitCommit$Tree v1;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit$Tree tree>;
return v1;
}
public java.lang.String getTreeSHA1()
{
java.lang.String v2;
org.kohsuke.github.GitCommit v0;
org.kohsuke.github.GitCommit$Tree v1;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit$Tree tree>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitCommit$Tree: java.lang.String getSha()>();
return v2;
}
public java.lang.String getTreeUrl()
{
java.lang.String v2;
org.kohsuke.github.GitCommit v0;
org.kohsuke.github.GitCommit$Tree v1;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GitCommit$Tree tree>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitCommit$Tree: java.lang.String getUrl()>();
return v2;
}
java.util.List getParents()
{
java.util.List v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.util.List parents>;
return v1;
}
public java.util.List getParentSHA1s()
{
java.util.List v1, v2, v4;
org.kohsuke.github.GitCommit$1 v5;
org.kohsuke.github.GitCommit v0;
int v3;
v0 := @this: org.kohsuke.github.GitCommit;
v1 = v0.<org.kohsuke.github.GitCommit: java.util.List parents>;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GitCommit: java.util.List parents>;
v3 = interfaceinvoke v2.<java.util.List: int size()>();
if v3 != 0 goto label2;
label1:
v4 = staticinvoke <java.util.Collections: java.util.List emptyList()>();
return v4;
label2:
v5 = new org.kohsuke.github.GitCommit$1;
specialinvoke v5.<org.kohsuke.github.GitCommit$1: void <init>(org.kohsuke.github.GitCommit)>(v0);
return v5;
}
org.kohsuke.github.GitCommit wrapUp(org.kohsuke.github.GHRepository)
{
org.kohsuke.github.GHRepository v1;
org.kohsuke.github.GitCommit v0;
v0 := @this: org.kohsuke.github.GitCommit;
v1 := @parameter0: org.kohsuke.github.GHRepository;
v0.<org.kohsuke.github.GitCommit: org.kohsuke.github.GHRepository owner> = v1;
return v0;
}
}