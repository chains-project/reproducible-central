public class org.kohsuke.github.GitHub extends java.lang.Object
{
private final org.kohsuke.github.GitHubClient client;
private org.kohsuke.github.GHMyself myself;
private final java.util.concurrent.ConcurrentMap users;
private final java.util.concurrent.ConcurrentMap orgs;
private static final java.util.logging.Logger LOGGER;
void <init>(java.lang.String, org.kohsuke.github.connector.GitHubConnector, org.kohsuke.github.GitHubRateLimitHandler, org.kohsuke.github.GitHubAbuseLimitHandler, org.kohsuke.github.GitHubRateLimitChecker, org.kohsuke.github.authorization.AuthorizationProvider) throws java.io.IOException
{
org.kohsuke.github.GitHubRateLimitHandler v3;
org.kohsuke.github.GitHubRateLimitChecker v5;
org.kohsuke.github.GitHubAbuseLimitHandler v4;
java.lang.String v1, v10, v11, v12;
org.kohsuke.github.GitHub v0;
boolean v13, v18, v7, v8, v9;
org.kohsuke.github.GitHub$LoginLoadingUserAuthorizationProvider v14;
java.util.concurrent.ConcurrentHashMap v15, v16;
org.kohsuke.github.GitHubClient v17;
org.kohsuke.github.connector.GitHubConnector v2;
org.kohsuke.github.authorization.AuthorizationProvider v6;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: org.kohsuke.github.connector.GitHubConnector;
v3 := @parameter2: org.kohsuke.github.GitHubRateLimitHandler;
v4 := @parameter3: org.kohsuke.github.GitHubAbuseLimitHandler;
v5 := @parameter4: org.kohsuke.github.GitHubRateLimitChecker;
v6 := @parameter5: org.kohsuke.github.authorization.AuthorizationProvider;
specialinvoke v0.<java.lang.Object: void <init>()>();
v7 = v6 instanceof org.kohsuke.github.GitHub$DependentAuthorizationProvider;
if v7 == 0 goto label1;
virtualinvoke v6.<org.kohsuke.github.GitHub$DependentAuthorizationProvider: void bind(org.kohsuke.github.GitHub)>(v0);
goto label2;
label1:
v8 = v6 instanceof org.kohsuke.github.authorization.ImmutableAuthorizationProvider;
if v8 == 0 goto label2;
v9 = v6 instanceof org.kohsuke.github.authorization.UserAuthorizationProvider;
if v9 == 0 goto label2;
v10 = interfaceinvoke v6.<org.kohsuke.github.authorization.UserAuthorizationProvider: java.lang.String getLogin()>();
if v10 != null goto label2;
v11 = interfaceinvoke v6.<org.kohsuke.github.authorization.UserAuthorizationProvider: java.lang.String getEncodedAuthorization()>();
if v11 == null goto label2;
v12 = interfaceinvoke v6.<org.kohsuke.github.authorization.UserAuthorizationProvider: java.lang.String getEncodedAuthorization()>();
v13 = virtualinvoke v12.<java.lang.String: boolean startsWith(java.lang.String)>("token");
if v13 == 0 goto label2;
v14 = new org.kohsuke.github.GitHub$LoginLoadingUserAuthorizationProvider;
specialinvoke v14.<org.kohsuke.github.GitHub$LoginLoadingUserAuthorizationProvider: void <init>(org.kohsuke.github.authorization.AuthorizationProvider,org.kohsuke.github.GitHub)>(v6, v0);
v6 = v14;
label2:
v15 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v15.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users> = v15;
v16 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v16.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap orgs> = v16;
v17 = new org.kohsuke.github.GitHubClient;
specialinvoke v17.<org.kohsuke.github.GitHubClient: void <init>(java.lang.String,org.kohsuke.github.connector.GitHubConnector,org.kohsuke.github.GitHubRateLimitHandler,org.kohsuke.github.GitHubAbuseLimitHandler,org.kohsuke.github.GitHubRateLimitChecker,org.kohsuke.github.authorization.AuthorizationProvider)>(v1, v2, v3, v4, v5, v6);
v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client> = v17;
v18 = v6 instanceof org.kohsuke.github.GitHub$LoginLoadingUserAuthorizationProvider;
if v18 == 0 goto label3;
virtualinvoke v6.<org.kohsuke.github.GitHub$LoginLoadingUserAuthorizationProvider: java.lang.String getLogin()>();
label3:
return;
}
private void <init>(org.kohsuke.github.GitHubClient)
{
java.util.concurrent.ConcurrentHashMap v2, v3;
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: org.kohsuke.github.GitHubClient;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v2.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users> = v2;
v3 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v3.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap orgs> = v3;
v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client> = v1;
return;
}
public static org.kohsuke.github.GitHub connect() throws java.io.IOException
{
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GitHubBuilder v0;
v0 = staticinvoke <org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder fromCredentials()>();
v1 = virtualinvoke v0.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v1;
}
public static org.kohsuke.github.GitHub connectToEnterprise(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1;
org.kohsuke.github.GitHub v2;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = staticinvoke <org.kohsuke.github.GitHub: org.kohsuke.github.GitHub connectToEnterpriseWithOAuth(java.lang.String,java.lang.String,java.lang.String)>(v0, null, v1);
return v2;
}
public static org.kohsuke.github.GitHub connectToEnterpriseWithOAuth(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1, v2;
org.kohsuke.github.GitHub v6;
org.kohsuke.github.GitHubBuilder v3, v4, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v3.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withEndpoint(java.lang.String)>(v0);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withOAuthToken(java.lang.String,java.lang.String)>(v2, v1);
v6 = virtualinvoke v5.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v6;
}
public static org.kohsuke.github.GitHub connectToEnterprise(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1, v2;
org.kohsuke.github.GitHub v6;
org.kohsuke.github.GitHubBuilder v3, v4, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v3.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withEndpoint(java.lang.String)>(v0);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withPassword(java.lang.String,java.lang.String)>(v1, v2);
v6 = virtualinvoke v5.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v6;
}
public static org.kohsuke.github.GitHub connect(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1;
org.kohsuke.github.GitHub v4;
org.kohsuke.github.GitHubBuilder v2, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v2.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withOAuthToken(java.lang.String,java.lang.String)>(v1, v0);
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v4;
}
public static org.kohsuke.github.GitHub connect(java.lang.String, java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1, v2;
org.kohsuke.github.GitHub v6;
org.kohsuke.github.GitHubBuilder v3, v4, v5;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 := @parameter2: java.lang.String;
v3 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v3.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withOAuthToken(java.lang.String,java.lang.String)>(v1, v0);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withPassword(java.lang.String,java.lang.String)>(v0, v2);
v6 = virtualinvoke v5.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v6;
}
public static org.kohsuke.github.GitHub connectUsingPassword(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1;
org.kohsuke.github.GitHub v4;
org.kohsuke.github.GitHubBuilder v2, v3;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v2.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withPassword(java.lang.String,java.lang.String)>(v0, v1);
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v4;
}
public static org.kohsuke.github.GitHub connectUsingOAuth(java.lang.String) throws java.io.IOException
{
java.lang.String v0;
org.kohsuke.github.GitHub v3;
org.kohsuke.github.GitHubBuilder v1, v2;
v0 := @parameter0: java.lang.String;
v1 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v1.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withOAuthToken(java.lang.String)>(v0);
v3 = virtualinvoke v2.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v3;
}
public static org.kohsuke.github.GitHub connectUsingOAuth(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String v0, v1;
org.kohsuke.github.GitHub v5;
org.kohsuke.github.GitHubBuilder v2, v3, v4;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.lang.String;
v2 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v2.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v3 = virtualinvoke v2.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withEndpoint(java.lang.String)>(v0);
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withOAuthToken(java.lang.String)>(v1);
v5 = virtualinvoke v4.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v5;
}
public static org.kohsuke.github.GitHub connectAnonymously() throws java.io.IOException
{
org.kohsuke.github.GitHub v1;
org.kohsuke.github.GitHubBuilder v0;
v0 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v0.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v1 = virtualinvoke v0.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v1;
}
public static org.kohsuke.github.GitHub connectToEnterpriseAnonymously(java.lang.String) throws java.io.IOException
{
java.lang.String v0;
org.kohsuke.github.GitHub v3;
org.kohsuke.github.GitHubBuilder v1, v2;
v0 := @parameter0: java.lang.String;
v1 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v1.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withEndpoint(java.lang.String)>(v0);
v3 = virtualinvoke v2.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
return v3;
}
public static org.kohsuke.github.GitHub offline()
{
java.lang.IllegalStateException v6;
java.io.IOException v5;
org.kohsuke.github.connector.GitHubConnector v2;
org.kohsuke.github.GitHub v4;
org.kohsuke.github.GitHubBuilder v0, v1, v3;
label1:
v0 = new org.kohsuke.github.GitHubBuilder;
specialinvoke v0.<org.kohsuke.github.GitHubBuilder: void <init>()>();
v1 = virtualinvoke v0.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withEndpoint(java.lang.String)>("https://api.github.invalid");
v2 = <org.kohsuke.github.connector.GitHubConnector: org.kohsuke.github.connector.GitHubConnector OFFLINE>;
v3 = virtualinvoke v1.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHubBuilder withConnector(org.kohsuke.github.connector.GitHubConnector)>(v2);
v4 = virtualinvoke v3.<org.kohsuke.github.GitHubBuilder: org.kohsuke.github.GitHub build()>();
label2:
return v4;
label3:
v5 := @caughtexception;
v6 = new java.lang.IllegalStateException;
specialinvoke v6.<java.lang.IllegalStateException: void <init>(java.lang.String,java.lang.Throwable)>("The offline implementation constructor should not connect", v5);
throw v6;
catch java.io.IOException from label1 to label2 with label3;
}
public boolean isAnonymous()
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
boolean v2;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: boolean isAnonymous()>();
return v2;
}
public boolean isOffline()
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
boolean v2;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: boolean isOffline()>();
return v2;
}
public org.kohsuke.github.HttpConnector getConnector()
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.HttpConnector v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.HttpConnector getConnector()>();
return v2;
}
public void setConnector(org.kohsuke.github.HttpConnector)
{
org.kohsuke.github.HttpConnector v1;
org.kohsuke.github.GitHubClient v2;
org.kohsuke.github.connector.GitHubConnector v3;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: org.kohsuke.github.HttpConnector;
v2 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v3 = staticinvoke <org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: org.kohsuke.github.connector.GitHubConnector adapt(org.kohsuke.github.HttpConnector)>(v1);
virtualinvoke v2.<org.kohsuke.github.GitHubClient: void setConnector(org.kohsuke.github.connector.GitHubConnector)>(v3);
return;
}
public java.lang.String getApiUrl()
{
org.kohsuke.github.GitHubClient v1;
java.lang.String v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: java.lang.String getApiUrl()>();
return v2;
}
public org.kohsuke.github.GHRateLimit getRateLimit() throws java.io.IOException
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GHRateLimit v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GHRateLimit getRateLimit()>();
return v2;
}
public org.kohsuke.github.GHRateLimit lastRateLimit()
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GHRateLimit v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GHRateLimit lastRateLimit()>();
return v2;
}
public org.kohsuke.github.GHRateLimit rateLimit() throws java.io.IOException
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GHRateLimit v3;
org.kohsuke.github.RateLimitTarget v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = <org.kohsuke.github.RateLimitTarget: org.kohsuke.github.RateLimitTarget CORE>;
v3 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: org.kohsuke.github.GHRateLimit rateLimit(org.kohsuke.github.RateLimitTarget)>(v2);
return v3;
}
public org.kohsuke.github.GHMyself getMyself() throws java.io.IOException
{
org.kohsuke.github.GHMyself v2;
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
virtualinvoke v1.<org.kohsuke.github.GitHubClient: void requireCredential()>();
v2 = specialinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GHMyself setMyself()>();
return v2;
}
private org.kohsuke.github.GHMyself setMyself() throws java.io.IOException
{
java.lang.Throwable v7;
java.lang.String[] v3;
org.kohsuke.github.GitHubRequest$Builder v4;
org.kohsuke.github.GHMyself v1, v6;
java.lang.Object v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
entermonitor v0;
label1:
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GHMyself myself>;
if v1 != null goto label2;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = newarray (java.lang.String)[0];
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/user", v3);
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHMyself;");
v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GHMyself myself> = v5;
label2:
v6 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GHMyself myself>;
exitmonitor v0;
label3:
return v6;
label4:
v7 := @caughtexception;
exitmonitor v0;
throw v7;
catch java.lang.Throwable from label1 to label3 with label4;
}
public org.kohsuke.github.GHUser getUser(java.lang.String) throws java.io.IOException
{
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.util.concurrent.ConcurrentMap v2, v8;
java.lang.Object v3;
java.lang.String v1, v5, v9;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/users/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHUser;");
v8 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users>;
v9 = virtualinvoke v3.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
interfaceinvoke v8.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v9, v3);
label1:
return v3;
}
public void refreshCache()
{
org.kohsuke.github.GitHub v0;
java.util.concurrent.ConcurrentMap v1, v2;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users>;
interfaceinvoke v1.<java.util.concurrent.ConcurrentMap: void clear()>();
v2 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap orgs>;
interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: void clear()>();
return;
}
protected org.kohsuke.github.GHUser getUser(org.kohsuke.github.GHUser)
{
org.kohsuke.github.GHUser v1;
java.lang.Object v4;
java.lang.String v3, v6;
org.kohsuke.github.GitHub v0;
java.util.concurrent.ConcurrentMap v2, v5;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users>;
v3 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v4 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v3);
if v4 != null goto label1;
v5 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users>;
v6 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
interfaceinvoke v5.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v6, v1);
return v1;
label1:
return v4;
}
public org.kohsuke.github.GHOrganization getOrganization(java.lang.String) throws java.io.IOException
{
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v7;
java.util.concurrent.ConcurrentMap v2, v8;
java.lang.Object v3;
java.lang.String v1, v5;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap orgs>;
v3 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object get(java.lang.Object)>(v1);
if v3 != null goto label1;
v4 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/orgs/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHOrganization;");
v8 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap orgs>;
interfaceinvoke v8.<java.util.concurrent.ConcurrentMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v3);
label1:
return v3;
}
public org.kohsuke.github.PagedIterable listOrganizations()
{
org.kohsuke.github.PagedIterable v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.PagedIterable listOrganizations(java.lang.String)>(null);
return v1;
}
public org.kohsuke.github.PagedIterable listOrganizations(java.lang.String)
{
java.lang.String[] v4;
java.lang.String v1;
org.kohsuke.github.GitHubRequest$Builder v3, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("since", v1);
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/organizations", v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHOrganization;", null);
return v6;
}
public org.kohsuke.github.GHRepository getRepository(java.lang.String) throws java.io.IOException
{
org.kohsuke.github.GHRepository v7;
java.lang.String[] v2;
java.lang.IllegalArgumentException v4;
int v3;
java.lang.String v1, v5, v6;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v1.<java.lang.String: java.lang.String[] split(java.lang.String)>("/");
v3 = lengthof v2;
if v3 == 2 goto label1;
v4 = new java.lang.IllegalArgumentException;
specialinvoke v4.<java.lang.IllegalArgumentException: void <init>(java.lang.String)>("Repository name must be in format owner/repo");
throw v4;
label1:
v5 = v2[0];
v6 = v2[1];
v7 = staticinvoke <org.kohsuke.github.GHRepository: org.kohsuke.github.GHRepository read(org.kohsuke.github.GitHub,java.lang.String,java.lang.String)>(v0, v5, v6);
return v7;
}
public org.kohsuke.github.GHRepository getRepositoryById(java.lang.String) throws java.io.IOException
{
java.lang.Object v6;
java.lang.String[] v4;
java.lang.String v1, v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repositories/\u0001");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHRepository;");
return v6;
}
public org.kohsuke.github.GHRepository getRepositoryById(long) throws java.io.IOException
{
java.lang.Object v6;
java.lang.String[] v4;
long v1;
java.lang.String v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/repositories/\u0001");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHRepository;");
return v6;
}
public org.kohsuke.github.PagedIterable listLicenses() throws java.io.IOException
{
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/licenses", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHLicense;", null);
return v4;
}
public org.kohsuke.github.PagedIterable listUsers() throws java.io.IOException
{
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/users", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHUser;", null);
return v4;
}
public org.kohsuke.github.GHLicense getLicense(java.lang.String) throws java.io.IOException
{
java.lang.Object v6;
java.lang.String[] v4;
java.lang.String v1, v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/licenses/\u0001");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHLicense;");
return v6;
}
public org.kohsuke.github.PagedIterable listMarketplacePlans() throws java.io.IOException
{
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/marketplace_listing/plans", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHMarketplacePlan;", null);
return v4;
}
public java.util.List getMyInvitations() throws java.io.IOException
{
java.util.List v5;
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/user/repository_invitations", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHInvitation;", null);
v5 = virtualinvoke v4.<org.kohsuke.github.PagedIterable: java.util.List toList()>();
return v5;
}
public java.util.Map getMyOrganizations() throws java.io.IOException
{
java.lang.Object[] v5;
java.lang.String[] v2;
java.util.HashMap v6;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.GHOrganization v9;
int v7, v8;
java.lang.String v10;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/user/orgs", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHOrganization;", null);
v5 = virtualinvoke v4.<org.kohsuke.github.PagedIterable: java.lang.Object[] toArray()>();
v6 = new java.util.HashMap;
specialinvoke v6.<java.util.HashMap: void <init>()>();
v7 = lengthof v5;
v8 = 0;
label1:
if v8 >= v7 goto label2;
v9 = v5[v8];
v10 = virtualinvoke v9.<org.kohsuke.github.GHOrganization: java.lang.String getLogin()>();
interfaceinvoke v6.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v10, v9);
v8 = v8 + 1;
goto label1;
label2:
return v6;
}
public org.kohsuke.github.PagedIterable getMyMarketplacePurchases() throws java.io.IOException
{
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/user/marketplace_purchases", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHMarketplaceUserPurchase;", null);
return v4;
}
public java.util.Map getUserPublicOrganizations(org.kohsuke.github.GHUser) throws java.io.IOException
{
org.kohsuke.github.GHUser v1;
java.util.Map v3;
java.lang.String v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: org.kohsuke.github.GHUser;
v2 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v3 = virtualinvoke v0.<org.kohsuke.github.GitHub: java.util.Map getUserPublicOrganizations(java.lang.String)>(v2);
return v3;
}
public java.util.Map getUserPublicOrganizations(java.lang.String) throws java.io.IOException
{
java.lang.Object[] v7;
java.lang.String[] v4;
java.util.HashMap v8;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.GHOrganization v11;
int v10, v9;
java.lang.String v1, v12, v3;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/users/\u0001/orgs");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHOrganization;", null);
v7 = virtualinvoke v6.<org.kohsuke.github.PagedIterable: java.lang.Object[] toArray()>();
v8 = new java.util.HashMap;
specialinvoke v8.<java.util.HashMap: void <init>()>();
v9 = lengthof v7;
v10 = 0;
label1:
if v10 >= v9 goto label2;
v11 = v7[v10];
v12 = virtualinvoke v11.<org.kohsuke.github.GHOrganization: java.lang.String getLogin()>();
interfaceinvoke v8.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v11);
v10 = v10 + 1;
goto label1;
label2:
return v8;
}
public java.util.Map getMyTeams() throws java.io.IOException
{
java.lang.Object[] v7;
java.lang.String[] v3;
java.util.HashMap v1;
org.kohsuke.github.GitHubRequest$Builder v4;
java.util.HashSet v14;
java.util.function.Consumer v5;
org.kohsuke.github.GHOrganization v11;
int v8, v9;
org.kohsuke.github.GHTeam v10;
java.lang.Object v13;
java.lang.String v12;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new java.util.HashMap;
specialinvoke v1.<java.util.HashMap: void <init>()>();
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = newarray (java.lang.String)[0];
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/user/teams", v3);
v5 = staticinvoke <org.kohsuke.github.GitHub$lambda_getMyTeams_0__3311: java.util.function.Consumer bootstrap$(org.kohsuke.github.GitHub)>(v0);
v6 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHTeam;", v5);
v7 = virtualinvoke v6.<org.kohsuke.github.PagedIterable: java.lang.Object[] toArray()>();
v8 = lengthof v7;
v9 = 0;
label1:
if v9 >= v8 goto label3;
v10 = v7[v9];
v11 = virtualinvoke v10.<org.kohsuke.github.GHTeam: org.kohsuke.github.GHOrganization getOrganization()>();
v12 = virtualinvoke v11.<org.kohsuke.github.GHOrganization: java.lang.String getLogin()>();
v13 = interfaceinvoke v1.<java.util.Map: java.lang.Object get(java.lang.Object)>(v12);
if v13 != null goto label2;
v14 = new java.util.HashSet;
specialinvoke v14.<java.util.HashSet: void <init>()>();
v13 = v14;
label2:
interfaceinvoke v13.<java.util.Set: boolean add(java.lang.Object)>(v10);
interfaceinvoke v1.<java.util.Map: java.lang.Object put(java.lang.Object,java.lang.Object)>(v12, v13);
v9 = v9 + 1;
goto label1;
label3:
return v1;
}
public org.kohsuke.github.GHTeam getTeam(int) throws java.io.IOException
{
int v1;
java.lang.UnsupportedOperationException v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: int;
v2 = new java.lang.UnsupportedOperationException;
specialinvoke v2.<java.lang.UnsupportedOperationException: void <init>(java.lang.String)>("This method is not supported anymore. Please use GHOrganization#getTeam(long).");
throw v2;
}
public java.util.List getEvents() throws java.io.IOException
{
java.util.List v5;
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/events", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHEventInfo;", null);
v5 = virtualinvoke v4.<org.kohsuke.github.PagedIterable: java.util.List toList()>();
return v5;
}
public org.kohsuke.github.GHGist getGist(java.lang.String) throws java.io.IOException
{
java.lang.Object v6;
java.lang.String[] v4;
java.lang.String v1, v3;
org.kohsuke.github.GitHubRequest$Builder v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/gists/\u0001");
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v3, v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHGist;");
return v6;
}
public org.kohsuke.github.GHGistBuilder createGist()
{
org.kohsuke.github.GHGistBuilder v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHGistBuilder;
specialinvoke v1.<org.kohsuke.github.GHGistBuilder: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public org.kohsuke.github.GHEventPayload parseEventPayload(java.io.Reader, java.lang.Class) throws java.io.IOException
{
com.fasterxml.jackson.databind.ObjectReader v3, v4;
java.lang.Class v2;
java.lang.Object v5;
java.io.Reader v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.io.Reader;
v2 := @parameter1: java.lang.Class;
v3 = staticinvoke <org.kohsuke.github.GitHubClient: com.fasterxml.jackson.databind.ObjectReader getMappingObjectReader(org.kohsuke.github.GitHub)>(v0);
v4 = virtualinvoke v3.<com.fasterxml.jackson.databind.ObjectReader: com.fasterxml.jackson.databind.ObjectReader forType(java.lang.Class)>(v2);
v5 = virtualinvoke v4.<com.fasterxml.jackson.databind.ObjectReader: java.lang.Object readValue(java.io.Reader)>(v1);
virtualinvoke v5.<org.kohsuke.github.GHEventPayload: void lateBind()>();
return v5;
}
public org.kohsuke.github.GHRepository createRepository(java.lang.String, java.lang.String, java.lang.String, boolean) throws java.io.IOException
{
org.kohsuke.github.GHRepository v10;
org.kohsuke.github.GHCreateRepositoryBuilder v5;
java.lang.Object v6, v7, v9;
java.lang.String v1, v2, v3;
org.kohsuke.github.GitHub v0;
boolean v4, v8;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: boolean;
v5 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GHCreateRepositoryBuilder createRepository(java.lang.String)>(v1);
v6 = virtualinvoke v5.<org.kohsuke.github.GHCreateRepositoryBuilder: java.lang.Object description(java.lang.String)>(v2);
v7 = virtualinvoke v6.<org.kohsuke.github.GHCreateRepositoryBuilder: java.lang.Object homepage(java.lang.String)>(v3);
if v4 != 0 goto label1;
v8 = 1;
goto label2;
label1:
v8 = 0;
label2:
v9 = virtualinvoke v7.<org.kohsuke.github.GHCreateRepositoryBuilder: java.lang.Object private_(boolean)>(v8);
v10 = virtualinvoke v9.<org.kohsuke.github.GHCreateRepositoryBuilder: org.kohsuke.github.GHRepository create()>();
return v10;
}
public org.kohsuke.github.GHCreateRepositoryBuilder createRepository(java.lang.String)
{
java.lang.String v1;
org.kohsuke.github.GHCreateRepositoryBuilder v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = new org.kohsuke.github.GHCreateRepositoryBuilder;
specialinvoke v2.<org.kohsuke.github.GHCreateRepositoryBuilder: void <init>(java.lang.String,org.kohsuke.github.GitHub,java.lang.String)>(v1, v0, "/user/repos");
return v2;
}
public org.kohsuke.github.GHAuthorization createToken(java.util.Collection, java.lang.String, java.lang.String) throws java.io.IOException
{
java.util.Collection v1;
java.lang.String[] v9;
org.kohsuke.github.GitHubRequest$Builder v10, v5, v6, v7, v8;
java.lang.Object v11;
java.lang.String v2, v3;
org.kohsuke.github.Requester v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.util.Collection;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v5 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("scopes", v1);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note", v2);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note_url", v3);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/authorizations", v9);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHAuthorization;");
return v11;
}
public org.kohsuke.github.GHAuthorization createToken(java.util.Collection, java.lang.String, java.lang.String, java.util.function.Supplier) throws java.io.IOException
{
java.lang.String[] v13;
org.kohsuke.github.GitHubRequest$Builder v10, v11, v12, v14, v9;
org.kohsuke.github.GHAuthorization v5;
java.util.function.Supplier v4;
java.lang.String v2, v3;
org.kohsuke.github.GitHub v0;
java.util.Collection v1;
org.kohsuke.github.GHOTPRequiredException v6;
java.lang.Object v15, v7;
org.kohsuke.github.Requester v8;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.util.Collection;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.lang.String;
v4 := @parameter3: java.util.function.Supplier;
label1:
v5 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GHAuthorization createToken(java.util.Collection,java.lang.String,java.lang.String)>(v1, v2, v3);
label2:
return v5;
label3:
v6 := @caughtexception;
v7 = interfaceinvoke v4.<java.util.function.Supplier: java.lang.Object get()>();
v8 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("scopes", v1);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note", v2);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note_url", v3);
virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder setHeader(java.lang.String,java.lang.String)>("x-github-otp", v7);
v12 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v13 = newarray (java.lang.String)[0];
v14 = virtualinvoke v12.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/authorizations", v13);
v15 = virtualinvoke v14.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHAuthorization;");
return v15;
catch org.kohsuke.github.GHOTPRequiredException from label1 to label2 with label3;
}
public org.kohsuke.github.GHAuthorization createOrGetAuth(java.lang.String, java.lang.String, java.util.List, java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String[] v13;
org.kohsuke.github.GitHubRequest$Builder v10, v11, v14, v7, v8, v9;
java.lang.String v1, v12, v2, v4, v5;
org.kohsuke.github.GitHub v0;
java.util.List v3;
java.lang.Object v15;
org.kohsuke.github.Requester v6;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 := @parameter2: java.util.List;
v4 := @parameter3: java.lang.String;
v5 := @parameter4: java.lang.String;
v6 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("client_secret", v2);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.util.Collection)>("scopes", v3);
v9 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note", v4);
v10 = virtualinvoke v9.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("note_url", v5);
v11 = virtualinvoke v10.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("PUT");
v12 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/authorizations/clients/\u0001");
v13 = newarray (java.lang.String)[0];
v14 = virtualinvoke v11.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v12, v13);
v15 = virtualinvoke v14.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHAuthorization;");
return v15;
}
public void deleteAuth(long) throws java.io.IOException
{
java.lang.String[] v5;
long v1;
java.lang.String v4;
org.kohsuke.github.GitHubRequest$Builder v3, v6;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("DELETE");
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/authorizations/\u0001");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
virtualinvoke v6.<org.kohsuke.github.Requester: void send()>();
return;
}
public org.kohsuke.github.GHAuthorization checkAuth(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String[] v5;
org.kohsuke.github.GitHubRequest$Builder v6;
java.lang.Object v7;
java.lang.String v1, v2, v4;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/applications/\u0001/tokens/\u0001");
v5 = newarray (java.lang.String)[0];
v6 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v4, v5);
v7 = virtualinvoke v6.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHAuthorization;");
return v7;
}
public org.kohsuke.github.GHAuthorization resetAuth(java.lang.String, java.lang.String) throws java.io.IOException
{
java.lang.String[] v6;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
java.lang.Object v8;
java.lang.String v1, v2, v5;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 := @parameter1: java.lang.String;
v3 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v1, v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/applications/\u0001/tokens/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHAuthorization;");
return v8;
}
public org.kohsuke.github.PagedIterable listMyAuthorizations() throws java.io.IOException
{
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.PagedIterable v4;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/authorizations", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHAuthorization;", null);
return v4;
}
public org.kohsuke.github.GHApp getApp() throws java.io.IOException
{
org.kohsuke.github.internal.Previews v2;
java.lang.Object v6;
java.lang.String[] v4;
org.kohsuke.github.GitHubRequest$Builder v3, v5;
org.kohsuke.github.Requester v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews MACHINE_MAN>;
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v2);
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/app", v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHApp;");
return v6;
}
public org.kohsuke.github.GHAuthenticatedAppInstallation getInstallation() throws java.io.IOException
{
org.kohsuke.github.GHAuthenticatedAppInstallation v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHAuthenticatedAppInstallation;
specialinvoke v1.<org.kohsuke.github.GHAuthenticatedAppInstallation: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public boolean isCredentialValid()
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
boolean v2;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
v2 = virtualinvoke v1.<org.kohsuke.github.GitHubClient: boolean isCredentialValid()>();
return v2;
}
public org.kohsuke.github.GHMeta getMeta() throws java.io.IOException
{
java.lang.Object v4;
java.lang.String[] v2;
org.kohsuke.github.GitHubRequest$Builder v3;
org.kohsuke.github.Requester v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v2 = newarray (java.lang.String)[0];
v3 = virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/meta", v2);
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHMeta;");
return v4;
}
public org.kohsuke.github.GHProject getProject(long) throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v6;
long v1;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/projects/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProject;");
return v8;
}
public org.kohsuke.github.GHProjectColumn getProjectColumn(long) throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v6;
long v1;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
org.kohsuke.github.GHProjectColumn v9;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/projects/columns/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProjectColumn;");
v9 = virtualinvoke v8.<org.kohsuke.github.GHProjectColumn: org.kohsuke.github.GHProjectColumn lateBind(org.kohsuke.github.GitHub)>(v0);
return v9;
}
public org.kohsuke.github.GHProjectCard getProjectCard(long) throws java.io.IOException
{
org.kohsuke.github.internal.Previews v3;
java.lang.String[] v6;
long v1;
org.kohsuke.github.GitHubRequest$Builder v4, v7;
org.kohsuke.github.GHProjectCard v9;
java.lang.Object v8;
java.lang.String v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: long;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = <org.kohsuke.github.internal.Previews: org.kohsuke.github.internal.Previews INERTIA>;
v4 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withPreview(org.kohsuke.github.internal.Previews)>(v3);
v5 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (long)>(v1) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("/projects/columns/cards/\u0001");
v6 = newarray (java.lang.String)[0];
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>(v5, v6);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: java.lang.Object fetch(java.lang.Class)>(class "Lorg/kohsuke/github/GHProjectCard;");
v9 = virtualinvoke v8.<org.kohsuke.github.GHProjectCard: org.kohsuke.github.GHProjectCard lateBind(org.kohsuke.github.GitHub)>(v0);
return v9;
}
public void checkApiUrlValidity() throws java.io.IOException
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
virtualinvoke v1.<org.kohsuke.github.GitHubClient: void checkApiUrlValidity()>();
return;
}
public org.kohsuke.github.GHCommitSearchBuilder searchCommits()
{
org.kohsuke.github.GHCommitSearchBuilder v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHCommitSearchBuilder;
specialinvoke v1.<org.kohsuke.github.GHCommitSearchBuilder: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public org.kohsuke.github.GHIssueSearchBuilder searchIssues()
{
org.kohsuke.github.GHIssueSearchBuilder v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHIssueSearchBuilder;
specialinvoke v1.<org.kohsuke.github.GHIssueSearchBuilder: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public org.kohsuke.github.GHUserSearchBuilder searchUsers()
{
org.kohsuke.github.GHUserSearchBuilder v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHUserSearchBuilder;
specialinvoke v1.<org.kohsuke.github.GHUserSearchBuilder: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public org.kohsuke.github.GHRepositorySearchBuilder searchRepositories()
{
org.kohsuke.github.GHRepositorySearchBuilder v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHRepositorySearchBuilder;
specialinvoke v1.<org.kohsuke.github.GHRepositorySearchBuilder: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public org.kohsuke.github.GHContentSearchBuilder searchContent()
{
org.kohsuke.github.GHContentSearchBuilder v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHContentSearchBuilder;
specialinvoke v1.<org.kohsuke.github.GHContentSearchBuilder: void <init>(org.kohsuke.github.GitHub)>(v0);
return v1;
}
public org.kohsuke.github.GHNotificationStream listNotifications()
{
org.kohsuke.github.GHNotificationStream v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.GHNotificationStream;
specialinvoke v1.<org.kohsuke.github.GHNotificationStream: void <init>(org.kohsuke.github.GitHub,java.lang.String)>(v0, "/notifications");
return v1;
}
public org.kohsuke.github.PagedIterable listAllPublicRepositories()
{
org.kohsuke.github.PagedIterable v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.PagedIterable listAllPublicRepositories(java.lang.String)>(null);
return v1;
}
public org.kohsuke.github.PagedIterable listAllPublicRepositories(java.lang.String)
{
java.lang.String[] v4;
java.lang.String v1;
org.kohsuke.github.GitHubRequest$Builder v3, v5;
org.kohsuke.github.Requester v2;
org.kohsuke.github.PagedIterable v6;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v3 = virtualinvoke v2.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.lang.String,java.lang.String)>("since", v1);
v4 = newarray (java.lang.String)[0];
v5 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/repositories", v4);
v6 = virtualinvoke v5.<org.kohsuke.github.Requester: org.kohsuke.github.PagedIterable toIterable(java.lang.Class,java.util.function.Consumer)>(class "[Lorg/kohsuke/github/GHRepository;", null);
return v6;
}
public java.io.Reader renderMarkdown(java.lang.String) throws java.io.IOException
{
byte[] v6;
org.kohsuke.github.function.InputStreamFunction v11;
java.lang.String[] v9;
org.kohsuke.github.GitHubRequest$Builder v10, v4, v7, v8;
java.io.InputStreamReader v2;
java.io.ByteArrayInputStream v5;
java.lang.Object v12;
java.lang.String v1;
org.kohsuke.github.Requester v3;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: java.lang.String;
v2 = new java.io.InputStreamReader;
v3 = virtualinvoke v0.<org.kohsuke.github.GitHub: org.kohsuke.github.Requester createRequest()>();
v4 = virtualinvoke v3.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder method(java.lang.String)>("POST");
v5 = new java.io.ByteArrayInputStream;
v6 = virtualinvoke v1.<java.lang.String: byte[] getBytes(java.lang.String)>("UTF-8");
specialinvoke v5.<java.io.ByteArrayInputStream: void <init>(byte[])>(v6);
v7 = virtualinvoke v4.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder 'with'(java.io.InputStream)>(v5);
v8 = virtualinvoke v7.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder contentType(java.lang.String)>("text/plain;charset=UTF-8");
v9 = newarray (java.lang.String)[0];
v10 = virtualinvoke v8.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder withUrlPath(java.lang.String,java.lang.String[])>("/markdown/raw", v9);
v11 = staticinvoke <org.kohsuke.github.GitHub$copyInputStream__3312: org.kohsuke.github.function.InputStreamFunction bootstrap$()>();
v12 = virtualinvoke v10.<org.kohsuke.github.Requester: java.lang.Object fetchStream(org.kohsuke.github.function.InputStreamFunction)>(v11);
specialinvoke v2.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.lang.String)>(v12, "UTF-8");
return v2;
}
public static com.fasterxml.jackson.databind.ObjectWriter getMappingObjectWriter()
{
com.fasterxml.jackson.databind.ObjectWriter v0;
v0 = staticinvoke <org.kohsuke.github.GitHubClient: com.fasterxml.jackson.databind.ObjectWriter getMappingObjectWriter()>();
return v0;
}
public static com.fasterxml.jackson.databind.ObjectReader getMappingObjectReader()
{
com.fasterxml.jackson.databind.ObjectReader v1;
org.kohsuke.github.GitHub v0;
v0 = staticinvoke <org.kohsuke.github.GitHub: org.kohsuke.github.GitHub offline()>();
v1 = staticinvoke <org.kohsuke.github.GitHubClient: com.fasterxml.jackson.databind.ObjectReader getMappingObjectReader(org.kohsuke.github.GitHub)>(v0);
return v1;
}
org.kohsuke.github.GitHubClient getClient()
{
org.kohsuke.github.GitHubClient v1;
org.kohsuke.github.GitHub v0;
v0 := @this: org.kohsuke.github.GitHub;
v1 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
return v1;
}
org.kohsuke.github.Requester createRequest()
{
org.kohsuke.github.GitHubClient v2;
java.lang.Class v3, v5;
java.lang.String v6;
org.kohsuke.github.Requester v1;
org.kohsuke.github.GitHub v0;
boolean v4;
v0 := @this: org.kohsuke.github.GitHub;
v1 = new org.kohsuke.github.Requester;
v2 = v0.<org.kohsuke.github.GitHub: org.kohsuke.github.GitHubClient client>;
specialinvoke v1.<org.kohsuke.github.Requester: void <init>(org.kohsuke.github.GitHubClient)>(v2);
virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder injectMappingValue(java.lang.Object)>(v0);
v3 = virtualinvoke v0.<java.lang.Object: java.lang.Class getClass()>();
v4 = virtualinvoke v3.<java.lang.Object: boolean equals(java.lang.Object)>(class "Lorg/kohsuke/github/GitHub;");
if v4 != 0 goto label1;
v5 = class "Lorg/kohsuke/github/GitHub;";
v6 = virtualinvoke v5.<java.lang.Class: java.lang.String getName()>();
virtualinvoke v1.<org.kohsuke.github.Requester: org.kohsuke.github.GitHubRequest$Builder injectMappingValue(java.lang.String,java.lang.Object)>(v6, v0);
label1:
return v1;
}
org.kohsuke.github.GHUser intern(org.kohsuke.github.GHUser) throws java.io.IOException
{
org.kohsuke.github.GHUser v1;
java.lang.Object v4;
java.lang.String v3;
org.kohsuke.github.GitHub v0;
java.util.concurrent.ConcurrentMap v2;
v0 := @this: org.kohsuke.github.GitHub;
v1 := @parameter0: org.kohsuke.github.GHUser;
if v1 == null goto label1;
v2 = v0.<org.kohsuke.github.GitHub: java.util.concurrent.ConcurrentMap users>;
v3 = virtualinvoke v1.<org.kohsuke.github.GHUser: java.lang.String getLogin()>();
v4 = interfaceinvoke v2.<java.util.concurrent.ConcurrentMap: java.lang.Object putIfAbsent(java.lang.Object,java.lang.Object)>(v3, v1);
if v4 == null goto label1;
v1 = v4;
label1:
return v1;
}
static void <clinit>()
{
java.lang.Class v0;
java.lang.String v1;
java.util.logging.Logger v2;
v0 = class "Lorg/kohsuke/github/GitHub;";
v1 = virtualinvoke v0.<java.lang.Class: java.lang.String getName()>();
v2 = staticinvoke <java.util.logging.Logger: java.util.logging.Logger getLogger(java.lang.String)>(v1);
<org.kohsuke.github.GitHub: java.util.logging.Logger LOGGER> = v2;
return;
}
}