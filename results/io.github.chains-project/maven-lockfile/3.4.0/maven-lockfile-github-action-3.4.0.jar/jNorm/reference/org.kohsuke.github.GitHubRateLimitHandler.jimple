public abstract class org.kohsuke.github.GitHubRateLimitHandler extends org.kohsuke.github.GitHubConnectorResponseErrorHandler
{
public void <init>()
{
org.kohsuke.github.GitHubRateLimitHandler v0;
v0 := @this: org.kohsuke.github.GitHubRateLimitHandler;
specialinvoke v0.<org.kohsuke.github.GitHubConnectorResponseErrorHandler: void <init>()>();
return;
}
boolean isError(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException
{
org.kohsuke.github.GitHubRateLimitHandler v0;
int v2;
java.lang.String v3, v4;
org.kohsuke.github.connector.GitHubConnectorResponse v1;
boolean v5, v6;
v0 := @this: org.kohsuke.github.GitHubRateLimitHandler;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorResponse;
v2 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: int statusCode()>();
if v2 != 403 goto label1;
v3 = "0";
v4 = virtualinvoke v1.<org.kohsuke.github.connector.GitHubConnectorResponse: java.lang.String header(java.lang.String)>("X-RateLimit-Remaining");
v5 = virtualinvoke v3.<java.lang.String: boolean equals(java.lang.Object)>(v4);
if v5 == 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public abstract void onError(org.kohsuke.github.connector.GitHubConnectorResponse) throws java.io.IOException;
}