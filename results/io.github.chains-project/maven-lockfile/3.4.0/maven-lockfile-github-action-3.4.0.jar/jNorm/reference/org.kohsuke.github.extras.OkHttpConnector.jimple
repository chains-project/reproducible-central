public class org.kohsuke.github.extras.OkHttpConnector extends java.lang.Object implements org.kohsuke.github.HttpConnector
{
private static final java.lang.String HEADER_NAME;
private final com.squareup.okhttp.OkUrlFactory urlFactory;
private final java.lang.String maxAgeHeaderValue;
public void <init>(com.squareup.okhttp.OkUrlFactory)
{
org.kohsuke.github.extras.OkHttpConnector v0;
com.squareup.okhttp.OkUrlFactory v1;
v0 := @this: org.kohsuke.github.extras.OkHttpConnector;
v1 := @parameter0: com.squareup.okhttp.OkUrlFactory;
specialinvoke v0.<org.kohsuke.github.extras.OkHttpConnector: void <init>(com.squareup.okhttp.OkUrlFactory,int)>(v1, 0);
return;
}
void <init>(com.squareup.okhttp.OkUrlFactory, int)
{
com.squareup.okhttp.CacheControl v13;
com.squareup.okhttp.Cache v9;
javax.net.ssl.SSLSocketFactory v4;
java.util.concurrent.TimeUnit v11;
java.util.List v6;
com.squareup.okhttp.OkHttpClient v3, v5, v7, v8;
int v2;
org.kohsuke.github.extras.OkHttpConnector v0;
com.squareup.okhttp.OkUrlFactory v1;
java.lang.String v14;
com.squareup.okhttp.CacheControl$Builder v10, v12;
v0 := @this: org.kohsuke.github.extras.OkHttpConnector;
v1 := @parameter0: com.squareup.okhttp.OkUrlFactory;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = virtualinvoke v1.<com.squareup.okhttp.OkUrlFactory: com.squareup.okhttp.OkHttpClient client()>();
v4 = specialinvoke v0.<org.kohsuke.github.extras.OkHttpConnector: javax.net.ssl.SSLSocketFactory TlsSocketFactory()>();
virtualinvoke v3.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setSslSocketFactory(javax.net.ssl.SSLSocketFactory)>(v4);
v5 = virtualinvoke v1.<com.squareup.okhttp.OkUrlFactory: com.squareup.okhttp.OkHttpClient client()>();
v6 = specialinvoke v0.<org.kohsuke.github.extras.OkHttpConnector: java.util.List TlsConnectionSpecs()>();
virtualinvoke v5.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.OkHttpClient setConnectionSpecs(java.util.List)>(v6);
v0.<org.kohsuke.github.extras.OkHttpConnector: com.squareup.okhttp.OkUrlFactory urlFactory> = v1;
if v2 < 0 goto label1;
v7 = virtualinvoke v1.<com.squareup.okhttp.OkUrlFactory: com.squareup.okhttp.OkHttpClient client()>();
if v7 == null goto label1;
v8 = virtualinvoke v1.<com.squareup.okhttp.OkUrlFactory: com.squareup.okhttp.OkHttpClient client()>();
v9 = virtualinvoke v8.<com.squareup.okhttp.OkHttpClient: com.squareup.okhttp.Cache getCache()>();
if v9 == null goto label1;
v10 = new com.squareup.okhttp.CacheControl$Builder;
specialinvoke v10.<com.squareup.okhttp.CacheControl$Builder: void <init>()>();
v11 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
v12 = virtualinvoke v10.<com.squareup.okhttp.CacheControl$Builder: com.squareup.okhttp.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)>(v2, v11);
v13 = virtualinvoke v12.<com.squareup.okhttp.CacheControl$Builder: com.squareup.okhttp.CacheControl build()>();
v14 = virtualinvoke v13.<com.squareup.okhttp.CacheControl: java.lang.String toString()>();
v0.<org.kohsuke.github.extras.OkHttpConnector: java.lang.String maxAgeHeaderValue> = v14;
goto label2;
label1:
v0.<org.kohsuke.github.extras.OkHttpConnector: java.lang.String maxAgeHeaderValue> = null;
label2:
return;
}
public java.net.HttpURLConnection connect(java.net.URL) throws java.io.IOException
{
java.net.HttpURLConnection v3;
java.net.URL v1;
org.kohsuke.github.extras.OkHttpConnector v0;
com.squareup.okhttp.OkUrlFactory v2;
java.lang.String v4, v5;
v0 := @this: org.kohsuke.github.extras.OkHttpConnector;
v1 := @parameter0: java.net.URL;
v2 = v0.<org.kohsuke.github.extras.OkHttpConnector: com.squareup.okhttp.OkUrlFactory urlFactory>;
v3 = virtualinvoke v2.<com.squareup.okhttp.OkUrlFactory: java.net.HttpURLConnection open(java.net.URL)>(v1);
v4 = v0.<org.kohsuke.github.extras.OkHttpConnector: java.lang.String maxAgeHeaderValue>;
if v4 == null goto label1;
v5 = v0.<org.kohsuke.github.extras.OkHttpConnector: java.lang.String maxAgeHeaderValue>;
virtualinvoke v3.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>("Cache-Control", v5);
label1:
return v3;
}
private javax.net.ssl.SSLSocketFactory TlsSocketFactory()
{
javax.net.ssl.SSLContext v1;
java.lang.RuntimeException v3, v7;
java.security.KeyManagementException v6;
javax.net.ssl.SSLSocketFactory v5;
java.security.NoSuchAlgorithmException v2;
org.kohsuke.github.extras.OkHttpConnector v0;
java.lang.String v4, v8;
v0 := @this: org.kohsuke.github.extras.OkHttpConnector;
label1:
v1 = staticinvoke <javax.net.ssl.SSLContext: javax.net.ssl.SSLContext getInstance(java.lang.String)>("TLSv1.2");
label2:
goto label4;
label3:
v2 := @caughtexception;
v3 = new java.lang.RuntimeException;
v4 = virtualinvoke v2.<java.security.NoSuchAlgorithmException: java.lang.String getMessage()>();
specialinvoke v3.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v4, v2);
throw v3;
label4:
virtualinvoke v1.<javax.net.ssl.SSLContext: void init(javax.net.ssl.KeyManager[],javax.net.ssl.TrustManager[],java.security.SecureRandom)>(null, null, null);
v5 = virtualinvoke v1.<javax.net.ssl.SSLContext: javax.net.ssl.SSLSocketFactory getSocketFactory()>();
label5:
return v5;
label6:
v6 := @caughtexception;
v7 = new java.lang.RuntimeException;
v8 = virtualinvoke v6.<java.security.KeyManagementException: java.lang.String getMessage()>();
specialinvoke v7.<java.lang.RuntimeException: void <init>(java.lang.String,java.lang.Throwable)>(v8, v6);
throw v7;
catch java.security.NoSuchAlgorithmException from label1 to label2 with label3;
catch java.security.KeyManagementException from label4 to label5 with label6;
}
private java.util.List TlsConnectionSpecs()
{
java.util.List v4;
com.squareup.okhttp.ConnectionSpec v2, v3;
org.kohsuke.github.extras.OkHttpConnector v0;
com.squareup.okhttp.ConnectionSpec[] v1;
v0 := @this: org.kohsuke.github.extras.OkHttpConnector;
v1 = newarray (com.squareup.okhttp.ConnectionSpec)[2];
v2 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec MODERN_TLS>;
v1[0] = v2;
v3 = <com.squareup.okhttp.ConnectionSpec: com.squareup.okhttp.ConnectionSpec CLEARTEXT>;
v1[1] = v3;
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v4;
}
}