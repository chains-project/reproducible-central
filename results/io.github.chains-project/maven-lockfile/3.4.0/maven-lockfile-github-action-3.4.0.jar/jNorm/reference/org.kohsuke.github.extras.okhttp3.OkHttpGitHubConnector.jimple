public class org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector extends java.lang.Object implements org.kohsuke.github.connector.GitHubConnector
{
private static final java.lang.String HEADER_NAME;
private final java.lang.String maxAgeHeaderValue;
private final okhttp3.OkHttpClient client;
public void <init>(okhttp3.OkHttpClient)
{
okhttp3.OkHttpClient v1;
org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector;
v1 := @parameter0: okhttp3.OkHttpClient;
specialinvoke v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: void <init>(okhttp3.OkHttpClient,int)>(v1, 0);
return;
}
public void <init>(okhttp3.OkHttpClient, int)
{
okhttp3.Cache v8;
okhttp3.CacheControl$Builder v11, v9;
okhttp3.CacheControl v12;
org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector v0;
java.util.concurrent.TimeUnit v10;
java.util.List v4;
okhttp3.OkHttpClient v1, v5, v6, v7;
int v2;
java.lang.String v13;
okhttp3.OkHttpClient$Builder v3;
v0 := @this: org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector;
v1 := @parameter0: okhttp3.OkHttpClient;
v2 := @parameter1: int;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = virtualinvoke v1.<okhttp3.OkHttpClient: okhttp3.OkHttpClient$Builder newBuilder()>();
v4 = specialinvoke v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: java.util.List TlsConnectionSpecs()>();
virtualinvoke v3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient$Builder connectionSpecs(java.util.List)>(v4);
v5 = virtualinvoke v3.<okhttp3.OkHttpClient$Builder: okhttp3.OkHttpClient build()>();
v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: okhttp3.OkHttpClient client> = v5;
if v2 < 0 goto label1;
v6 = v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: okhttp3.OkHttpClient client>;
if v6 == null goto label1;
v7 = v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: okhttp3.OkHttpClient client>;
v8 = virtualinvoke v7.<okhttp3.OkHttpClient: okhttp3.Cache cache()>();
if v8 == null goto label1;
v9 = new okhttp3.CacheControl$Builder;
specialinvoke v9.<okhttp3.CacheControl$Builder: void <init>()>();
v10 = <java.util.concurrent.TimeUnit: java.util.concurrent.TimeUnit SECONDS>;
v11 = virtualinvoke v9.<okhttp3.CacheControl$Builder: okhttp3.CacheControl$Builder maxAge(int,java.util.concurrent.TimeUnit)>(v2, v10);
v12 = virtualinvoke v11.<okhttp3.CacheControl$Builder: okhttp3.CacheControl build()>();
v13 = virtualinvoke v12.<okhttp3.CacheControl: java.lang.String toString()>();
v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: java.lang.String maxAgeHeaderValue> = v13;
goto label2;
label1:
v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: java.lang.String maxAgeHeaderValue> = null;
label2:
return;
}
public org.kohsuke.github.connector.GitHubConnectorResponse send(org.kohsuke.github.connector.GitHubConnectorRequest) throws java.io.IOException
{
byte[] v19;
okhttp3.Request$Builder v2, v4;
org.kohsuke.github.connector.GitHubConnectorRequest v1;
java.net.URL v3;
okhttp3.RequestBody v16;
java.util.Map v8;
okhttp3.Response v24;
okhttp3.Call v23;
java.lang.String v15, v20, v5, v6, v7;
boolean v11, v17;
okhttp3.Request v21;
java.util.Iterator v10;
java.util.Set v9;
org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector v0;
okhttp3.OkHttpClient v22;
org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector$OkHttpGitHubConnectorResponse v25;
java.lang.Object v12, v13, v14;
java.io.InputStream v18;
v0 := @this: org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorRequest;
v2 = new okhttp3.Request$Builder;
specialinvoke v2.<okhttp3.Request$Builder: void <init>()>();
v3 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.net.URL url()>();
v4 = virtualinvoke v2.<okhttp3.Request$Builder: okhttp3.Request$Builder url(java.net.URL)>(v3);
v5 = v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: java.lang.String maxAgeHeaderValue>;
if v5 == null goto label1;
v6 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.lang.String header(java.lang.String)>("Cache-Control");
if v6 != null goto label1;
v7 = v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: java.lang.String maxAgeHeaderValue>;
virtualinvoke v4.<okhttp3.Request$Builder: okhttp3.Request$Builder header(java.lang.String,java.lang.String)>("Cache-Control", v7);
label1:
v8 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.util.Map allHeaders()>();
v9 = interfaceinvoke v8.<java.util.Map: java.util.Set entrySet()>();
v10 = interfaceinvoke v9.<java.util.Set: java.util.Iterator iterator()>();
label2:
v11 = interfaceinvoke v10.<java.util.Iterator: boolean hasNext()>();
if v11 == 0 goto label3;
v12 = interfaceinvoke v10.<java.util.Iterator: java.lang.Object next()>();
v13 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getValue()>();
if v13 == null goto label2;
v14 = interfaceinvoke v12.<java.util.Map$Entry: java.lang.Object getKey()>();
v15 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", v13);
virtualinvoke v4.<okhttp3.Request$Builder: okhttp3.Request$Builder addHeader(java.lang.String,java.lang.String)>(v14, v15);
goto label2;
label3:
v16 = null;
v17 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: boolean hasBody()>();
if v17 == 0 goto label4;
v18 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.io.InputStream body()>();
v19 = staticinvoke <org.apache.commons.io.IOUtils: byte[] toByteArray(java.io.InputStream)>(v18);
v16 = staticinvoke <okhttp3.RequestBody: okhttp3.RequestBody create(byte[])>(v19);
label4:
v20 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.lang.String method()>();
virtualinvoke v4.<okhttp3.Request$Builder: okhttp3.Request$Builder method(java.lang.String,okhttp3.RequestBody)>(v20, v16);
v21 = virtualinvoke v4.<okhttp3.Request$Builder: okhttp3.Request build()>();
v22 = v0.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector: okhttp3.OkHttpClient client>;
v23 = virtualinvoke v22.<okhttp3.OkHttpClient: okhttp3.Call newCall(okhttp3.Request)>(v21);
v24 = interfaceinvoke v23.<okhttp3.Call: okhttp3.Response execute()>();
v25 = new org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector$OkHttpGitHubConnectorResponse;
specialinvoke v25.<org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector$OkHttpGitHubConnectorResponse: void <init>(org.kohsuke.github.connector.GitHubConnectorRequest,okhttp3.Response)>(v1, v24);
return v25;
}
private java.util.List TlsConnectionSpecs()
{
java.util.List v4;
okhttp3.ConnectionSpec[] v1;
okhttp3.ConnectionSpec v2, v3;
org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector v0;
v0 := @this: org.kohsuke.github.extras.okhttp3.OkHttpGitHubConnector;
v1 = newarray (okhttp3.ConnectionSpec)[2];
v2 = <okhttp3.ConnectionSpec: okhttp3.ConnectionSpec MODERN_TLS>;
v1[0] = v2;
v3 = <okhttp3.ConnectionSpec: okhttp3.ConnectionSpec CLEARTEXT>;
v1[1] = v3;
v4 = staticinvoke <java.util.Arrays: java.util.List asList(java.lang.Object[])>(v1);
return v4;
}
}