public final class org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter extends java.lang.Object implements org.kohsuke.github.connector.GitHubConnector, org.kohsuke.github.HttpConnector
{
final org.kohsuke.github.HttpConnector httpConnector;
public void <init>(org.kohsuke.github.HttpConnector)
{
org.kohsuke.github.HttpConnector v1;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter v0;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter;
v1 := @parameter0: org.kohsuke.github.HttpConnector;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: org.kohsuke.github.HttpConnector httpConnector> = v1;
return;
}
public static org.kohsuke.github.connector.GitHubConnector adapt(org.kohsuke.github.HttpConnector)
{
org.kohsuke.github.HttpConnector v0, v1, v3;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter v5;
org.kohsuke.github.connector.GitHubConnector v2;
boolean v4;
v0 := @parameter0: org.kohsuke.github.HttpConnector;
v1 = <org.kohsuke.github.HttpConnector: org.kohsuke.github.HttpConnector DEFAULT>;
if v0 != v1 goto label1;
v2 = <org.kohsuke.github.connector.GitHubConnector: org.kohsuke.github.connector.GitHubConnector DEFAULT>;
goto label3;
label1:
v3 = <org.kohsuke.github.HttpConnector: org.kohsuke.github.HttpConnector OFFLINE>;
if v0 != v3 goto label2;
v2 = <org.kohsuke.github.connector.GitHubConnector: org.kohsuke.github.connector.GitHubConnector OFFLINE>;
goto label3;
label2:
v4 = v0 instanceof org.kohsuke.github.connector.GitHubConnector;
if v4 != 0 goto label3;
v5 = new org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter;
specialinvoke v5.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: void <init>(org.kohsuke.github.HttpConnector)>(v0);
v0 = v5;
label3:
return v0;
}
public java.net.HttpURLConnection connect(java.net.URL) throws java.io.IOException
{
java.net.HttpURLConnection v3;
org.kohsuke.github.HttpConnector v2;
java.net.URL v1;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter v0;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter;
v1 := @parameter0: java.net.URL;
v2 = v0.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: org.kohsuke.github.HttpConnector httpConnector>;
v3 = interfaceinvoke v2.<org.kohsuke.github.HttpConnector: java.net.HttpURLConnection connect(java.net.URL)>(v1);
return v3;
}
public org.kohsuke.github.connector.GitHubConnectorResponse send(org.kohsuke.github.connector.GitHubConnectorRequest) throws java.io.IOException
{
java.net.HttpURLConnection v2;
org.kohsuke.github.connector.GitHubConnectorRequest v1;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse v8;
java.io.IOException v3;
java.util.Map v7;
int v6;
java.lang.String v5;
org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter v0;
org.kohsuke.github.GHIOException v4;
v0 := @this: org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter;
v1 := @parameter0: org.kohsuke.github.connector.GitHubConnectorRequest;
label1:
v2 = staticinvoke <org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: java.net.HttpURLConnection setupConnection(org.kohsuke.github.HttpConnector,org.kohsuke.github.connector.GitHubConnectorRequest)>(v0, v1);
label2:
goto label4;
label3:
v3 := @caughtexception;
v4 = new org.kohsuke.github.GHIOException;
v5 = virtualinvoke v3.<java.io.IOException: java.lang.String getMessage()>();
specialinvoke v4.<org.kohsuke.github.GHIOException: void <init>(java.lang.String,java.lang.Throwable)>(v5, v3);
throw v4;
label4:
v6 = virtualinvoke v2.<java.net.HttpURLConnection: int getResponseCode()>();
v7 = virtualinvoke v2.<java.net.HttpURLConnection: java.util.Map getHeaderFields()>();
v8 = new org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse;
specialinvoke v8.<org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter$HttpURLConnectionGitHubConnectorResponse: void <init>(org.kohsuke.github.connector.GitHubConnectorRequest,int,java.util.Map,java.net.HttpURLConnection)>(v1, v6, v7, v2);
return v8;
catch java.io.IOException from label1 to label2 with label3;
}
private static java.net.HttpURLConnection setupConnection(org.kohsuke.github.HttpConnector, org.kohsuke.github.connector.GitHubConnectorRequest) throws java.io.IOException
{
java.net.HttpURLConnection v3;
org.kohsuke.github.HttpConnector v0;
org.kohsuke.github.connector.GitHubConnectorRequest v1;
java.net.URL v2;
java.lang.String v4;
v0 := @parameter0: org.kohsuke.github.HttpConnector;
v1 := @parameter1: org.kohsuke.github.connector.GitHubConnectorRequest;
v2 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.net.URL url()>();
v3 = interfaceinvoke v0.<org.kohsuke.github.HttpConnector: java.net.HttpURLConnection connect(java.net.URL)>(v2);
v4 = interfaceinvoke v1.<org.kohsuke.github.connector.GitHubConnectorRequest: java.lang.String method()>();
staticinvoke <org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: void setRequestMethod(java.lang.String,java.net.HttpURLConnection)>(v4, v3);
staticinvoke <org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: void buildRequest(org.kohsuke.github.connector.GitHubConnectorRequest,java.net.HttpURLConnection)>(v1, v3);
return v3;
}
private static void buildRequest(org.kohsuke.github.connector.GitHubConnectorRequest, java.net.HttpURLConnection) throws java.io.IOException
{
java.io.OutputStream v12;
java.net.HttpURLConnection v1;
java.util.Iterator v4;
org.kohsuke.github.connector.GitHubConnectorRequest v0;
java.util.Set v3;
java.util.Map v2;
java.lang.Object v6, v7, v8;
java.lang.String v9;
boolean v10, v5;
java.io.InputStream v11;
v0 := @parameter0: org.kohsuke.github.connector.GitHubConnectorRequest;
v1 := @parameter1: java.net.HttpURLConnection;
v2 = interfaceinvoke v0.<org.kohsuke.github.connector.GitHubConnectorRequest: java.util.Map allHeaders()>();
v3 = interfaceinvoke v2.<java.util.Map: java.util.Set entrySet()>();
v4 = interfaceinvoke v3.<java.util.Set: java.util.Iterator iterator()>();
label1:
v5 = interfaceinvoke v4.<java.util.Iterator: boolean hasNext()>();
if v5 == 0 goto label2;
v6 = interfaceinvoke v4.<java.util.Iterator: java.lang.Object next()>();
v7 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getValue()>();
if v7 == null goto label1;
v8 = interfaceinvoke v6.<java.util.Map$Entry: java.lang.Object getKey()>();
v9 = staticinvoke <java.lang.String: java.lang.String join(java.lang.CharSequence,java.lang.Iterable)>(", ", v7);
virtualinvoke v1.<java.net.HttpURLConnection: void setRequestProperty(java.lang.String,java.lang.String)>(v8, v9);
goto label1;
label2:
v10 = interfaceinvoke v0.<org.kohsuke.github.connector.GitHubConnectorRequest: boolean hasBody()>();
if v10 == 0 goto label3;
virtualinvoke v1.<java.net.HttpURLConnection: void setDoOutput(boolean)>(1);
v11 = interfaceinvoke v0.<org.kohsuke.github.connector.GitHubConnectorRequest: java.io.InputStream body()>();
v12 = virtualinvoke v1.<java.net.HttpURLConnection: java.io.OutputStream getOutputStream()>();
staticinvoke <org.apache.commons.io.IOUtils: long copyLarge(java.io.InputStream,java.io.OutputStream)>(v11, v12);
label3:
return;
}
private static void setRequestMethod(java.lang.String, java.net.HttpURLConnection) throws java.io.IOException
{
java.lang.Throwable v15, v7;
java.net.HttpURLConnection v1;
java.lang.IllegalStateException v18;
java.lang.NoSuchFieldException v12;
java.lang.String v0, v16, v19;
boolean v11, v17;
java.lang.IllegalAccessException v13;
java.io.IOException v14, v6;
java.lang.reflect.Field v4, v9;
java.lang.Exception v5;
java.net.ProtocolException v2;
java.lang.Class v3, v8;
java.lang.Object v10;
v0 := @parameter0: java.lang.String;
v1 := @parameter1: java.net.HttpURLConnection;
label01:
virtualinvoke v1.<java.net.HttpURLConnection: void setRequestMethod(java.lang.String)>(v0);
label02:
goto label11;
label03:
v2 := @caughtexception;
label04:
v3 = class "Ljava/net/HttpURLConnection;";
v4 = virtualinvoke v3.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("method");
virtualinvoke v4.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
virtualinvoke v4.<java.lang.reflect.Field: void set(java.lang.Object,java.lang.Object)>(v1, v0);
label05:
goto label07;
label06:
v5 := @caughtexception;
v6 = new java.io.IOException;
specialinvoke v6.<java.io.IOException: void <init>(java.lang.String)>("Failed to set the custom verb");
v7 = virtualinvoke v6.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(v5);
throw v7;
label07:
v8 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v9 = virtualinvoke v8.<java.lang.Class: java.lang.reflect.Field getDeclaredField(java.lang.String)>("delegate");
virtualinvoke v9.<java.lang.reflect.Field: void setAccessible(boolean)>(1);
v10 = virtualinvoke v9.<java.lang.reflect.Field: java.lang.Object get(java.lang.Object)>(v1);
v11 = v10 instanceof java.net.HttpURLConnection;
if v11 == 0 goto label11;
staticinvoke <org.kohsuke.github.internal.GitHubConnectorHttpConnectorAdapter: void setRequestMethod(java.lang.String,java.net.HttpURLConnection)>(v0, v10);
label08:
goto label11;
label09:
v12 := @caughtexception;
goto label11;
label10:
v13 := @caughtexception;
v14 = new java.io.IOException;
specialinvoke v14.<java.io.IOException: void <init>(java.lang.String)>("Failed to set the custom verb");
v15 = virtualinvoke v14.<java.io.IOException: java.lang.Throwable initCause(java.lang.Throwable)>(v13);
throw v15;
label11:
v16 = virtualinvoke v1.<java.net.HttpURLConnection: java.lang.String getRequestMethod()>();
v17 = virtualinvoke v16.<java.lang.String: boolean equals(java.lang.Object)>(v0);
if v17 != 0 goto label12;
v18 = new java.lang.IllegalStateException;
v19 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v0) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Failed to set the request method to \u0001");
specialinvoke v18.<java.lang.IllegalStateException: void <init>(java.lang.String)>(v19);
throw v18;
label12:
return;
catch java.net.ProtocolException from label01 to label02 with label03;
catch java.lang.Exception from label04 to label05 with label06;
catch java.lang.NoSuchFieldException from label07 to label08 with label09;
catch java.lang.IllegalAccessException from label07 to label08 with label10;
}
}