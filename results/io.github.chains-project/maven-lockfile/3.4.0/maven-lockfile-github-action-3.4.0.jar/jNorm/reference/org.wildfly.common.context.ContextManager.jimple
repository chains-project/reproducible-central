public final class org.wildfly.common.context.ContextManager extends java.lang.Object implements java.util.function.Supplier
{
private final java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef;
private final java.util.concurrent.ConcurrentHashMap perClassLoaderDefault;
private final java.lang.Class type;
private final java.lang.String name;
private final java.lang.ThreadLocal stateRef;
private final org.wildfly.common.context.ContextPermission getPermission;
public void <init>(java.lang.Class)
{
java.lang.Class v1;
org.wildfly.common.context.ContextManager v0;
java.lang.String v2;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.lang.Class;
v2 = virtualinvoke v1.<java.lang.Class: java.lang.String getName()>();
specialinvoke v0.<org.wildfly.common.context.ContextManager: void <init>(java.lang.Class,java.lang.String)>(v1, v2);
return;
}
public void <init>(java.lang.Class, java.lang.String)
{
java.lang.ThreadLocal v6;
java.util.concurrent.ConcurrentHashMap v4;
java.util.concurrent.atomic.AtomicReference v3;
java.util.function.Supplier v5;
org.wildfly.common.context.ContextPermission v7;
java.lang.Class v1;
org.wildfly.common.context.ContextManager v0;
java.lang.String v2;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.lang.Class;
v2 := @parameter1: java.lang.String;
specialinvoke v0.<java.lang.Object: void <init>()>();
v3 = new java.util.concurrent.atomic.AtomicReference;
specialinvoke v3.<java.util.concurrent.atomic.AtomicReference: void <init>()>();
v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef> = v3;
v4 = new java.util.concurrent.ConcurrentHashMap;
specialinvoke v4.<java.util.concurrent.ConcurrentHashMap: void <init>()>();
v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault> = v4;
v5 = staticinvoke <org.wildfly.common.context.ContextManager$init__3237: java.util.function.Supplier bootstrap$()>();
v6 = staticinvoke <java.lang.ThreadLocal: java.lang.ThreadLocal withInitial(java.util.function.Supplier)>(v5);
v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef> = v6;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("type", v1);
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("name", v2);
staticinvoke <org.wildfly.common.Assert: java.lang.String checkNotEmptyParam(java.lang.String,java.lang.String)>("name", v2);
v0.<org.wildfly.common.context.ContextManager: java.lang.Class type> = v1;
v0.<org.wildfly.common.context.ContextManager: java.lang.String name> = v2;
v7 = new org.wildfly.common.context.ContextPermission;
specialinvoke v7.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v2, "get");
v0.<org.wildfly.common.context.ContextManager: org.wildfly.common.context.ContextPermission getPermission> = v7;
return;
}
public org.wildfly.common.context.Contextual getGlobalDefault()
{
org.wildfly.common.context.ContextPermission v2;
java.lang.Object v5, v6;
org.wildfly.common.context.ContextManager v0;
java.lang.String v3;
java.util.concurrent.atomic.AtomicReference v4;
java.lang.SecurityManager v1;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v1 == null goto label1;
v2 = new org.wildfly.common.context.ContextPermission;
v3 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v2.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v3, "getGlobalDefault");
virtualinvoke v1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v2);
label1:
v4 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef>;
v5 = virtualinvoke v4.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
if v5 == null goto label2;
v6 = interfaceinvoke v5.<java.util.function.Supplier: java.lang.Object get()>();
label2:
return v6;
}
public void setGlobalDefaultSupplier(java.util.function.Supplier)
{
org.wildfly.common.context.ContextPermission v3;
org.wildfly.common.context.ContextManager v0;
java.lang.String v4;
java.util.concurrent.atomic.AtomicReference v5;
java.util.function.Supplier v1;
java.lang.SecurityManager v2;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.wildfly.common.context.ContextPermission;
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v3.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v4, "setGlobalDefaultSupplier");
virtualinvoke v2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v3);
label1:
v5 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef>;
virtualinvoke v5.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v1);
return;
}
public boolean setGlobalDefaultSupplierIfNotSet(java.util.function.Supplier)
{
java.util.concurrent.atomic.AtomicReference v5;
java.util.function.Supplier v1;
java.lang.SecurityManager v2;
org.wildfly.common.context.ContextPermission v3;
java.lang.Object v6, v7;
org.wildfly.common.context.ContextManager v0;
java.lang.String v4;
boolean v8, v9;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.wildfly.common.context.ContextPermission;
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v3.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v4, "setGlobalDefaultSupplier");
virtualinvoke v2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v3);
label1:
v5 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef>;
v6 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
if v6 != null goto label2;
v7 = interfaceinvoke v1.<java.util.function.Supplier: java.lang.Object get()>();
v8 = virtualinvoke v5.<java.util.concurrent.atomic.AtomicReference: boolean compareAndSet(java.lang.Object,java.lang.Object)>(null, v7);
if v8 == 0 goto label2;
v9 = 1;
goto label3;
label2:
v9 = 0;
label3:
return v9;
}
public void setGlobalDefault(org.wildfly.common.context.Contextual)
{
org.wildfly.common.context.ContextPermission v3;
org.wildfly.common.context.Contextual v1;
org.wildfly.common.context.ContextManager v0;
java.lang.String v4;
java.util.concurrent.atomic.AtomicReference v5;
java.util.function.Supplier v6;
java.lang.SecurityManager v2;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: org.wildfly.common.context.Contextual;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.wildfly.common.context.ContextPermission;
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v3.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v4, "getGlobalDefault");
virtualinvoke v2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v3);
label1:
v5 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef>;
if v1 != null goto label2;
v6 = null;
goto label3;
label2:
v6 = staticinvoke <org.wildfly.common.context.ContextManager$lambda_setGlobalDefault_0__3238: java.util.function.Supplier bootstrap$(org.wildfly.common.context.Contextual)>(v1);
label3:
virtualinvoke v5.<java.util.concurrent.atomic.AtomicReference: void set(java.lang.Object)>(v6);
return;
}
public org.wildfly.common.context.Contextual getClassLoaderDefault(java.lang.ClassLoader)
{
java.util.concurrent.ConcurrentHashMap v5;
java.lang.SecurityManager v2;
org.wildfly.common.context.ContextPermission v3;
java.lang.Object v6, v7;
org.wildfly.common.context.ContextManager v0;
java.lang.ClassLoader v1;
java.lang.String v4;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.lang.ClassLoader;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.wildfly.common.context.ContextPermission;
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v3.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v4, "getClassLoaderDefault");
virtualinvoke v2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v3);
label1:
if v1 != null goto label2;
return null;
label2:
v5 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault>;
v6 = virtualinvoke v5.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(v1);
if v6 == null goto label3;
v7 = interfaceinvoke v6.<java.util.function.Supplier: java.lang.Object get()>();
label3:
return v7;
}
public void setClassLoaderDefaultSupplier(java.lang.ClassLoader, java.util.function.Supplier)
{
java.util.concurrent.ConcurrentHashMap v6, v7;
java.util.function.Supplier v2;
java.lang.SecurityManager v3;
org.wildfly.common.context.ContextPermission v4;
org.wildfly.common.context.ContextManager v0;
java.lang.ClassLoader v1;
java.lang.String v5;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.lang.ClassLoader;
v2 := @parameter1: java.util.function.Supplier;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("classLoader", v1);
v3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v3 == null goto label1;
v4 = new org.wildfly.common.context.ContextPermission;
v5 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v4.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v5, "setClassLoaderDefaultSupplier");
virtualinvoke v3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v4);
label1:
if v2 != null goto label2;
v6 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault>;
virtualinvoke v6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(v1);
goto label3;
label2:
v7 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault>;
virtualinvoke v7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v2);
label3:
return;
}
public void setClassLoaderDefault(java.lang.ClassLoader, org.wildfly.common.context.Contextual)
{
org.wildfly.common.context.Contextual v2;
java.util.concurrent.ConcurrentHashMap v6, v7;
java.util.function.Supplier v8;
java.lang.SecurityManager v3;
org.wildfly.common.context.ContextPermission v4;
org.wildfly.common.context.ContextManager v0;
java.lang.ClassLoader v1;
java.lang.String v5;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.lang.ClassLoader;
v2 := @parameter1: org.wildfly.common.context.Contextual;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("classLoader", v1);
v3 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v3 == null goto label1;
v4 = new org.wildfly.common.context.ContextPermission;
v5 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v4.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v5, "setClassLoaderDefault");
virtualinvoke v3.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v4);
label1:
if v2 != null goto label2;
v6 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault>;
virtualinvoke v6.<java.util.concurrent.ConcurrentHashMap: java.lang.Object remove(java.lang.Object)>(v1);
goto label3;
label2:
v7 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault>;
v8 = staticinvoke <org.wildfly.common.context.ContextManager$lambda_setClassLoaderDefault_1__3239: java.util.function.Supplier bootstrap$(org.wildfly.common.context.Contextual)>(v2);
virtualinvoke v7.<java.util.concurrent.ConcurrentHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v8);
label3:
return;
}
public org.wildfly.common.context.Contextual getThreadDefault()
{
java.lang.ThreadLocal v4;
java.util.function.Supplier v6;
java.lang.SecurityManager v1;
org.wildfly.common.context.ContextPermission v2;
java.lang.Object v5, v7;
org.wildfly.common.context.ContextManager v0;
java.lang.String v3;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v1 == null goto label1;
v2 = new org.wildfly.common.context.ContextPermission;
v3 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v2.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v3, "getThreadDefault");
virtualinvoke v1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v2);
label1:
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef>;
v5 = virtualinvoke v4.<java.lang.ThreadLocal: java.lang.Object get()>();
v6 = v5.<org.wildfly.common.context.ContextManager$State: java.util.function.Supplier defaultSupplier>;
if v6 == null goto label2;
v7 = interfaceinvoke v6.<java.util.function.Supplier: java.lang.Object get()>();
label2:
return v7;
}
public void setThreadDefaultSupplier(java.util.function.Supplier)
{
org.wildfly.common.context.ContextPermission v3;
java.lang.ThreadLocal v5;
java.lang.Object v6;
org.wildfly.common.context.ContextManager v0;
java.lang.String v4;
java.util.function.Supplier v1;
java.lang.SecurityManager v2;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: java.util.function.Supplier;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.wildfly.common.context.ContextPermission;
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v3.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v4, "setThreadDefaultSupplier");
virtualinvoke v2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v3);
label1:
v5 = v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef>;
v6 = virtualinvoke v5.<java.lang.ThreadLocal: java.lang.Object get()>();
v6.<org.wildfly.common.context.ContextManager$State: java.util.function.Supplier defaultSupplier> = v1;
return;
}
public void setThreadDefault(org.wildfly.common.context.Contextual)
{
java.lang.ThreadLocal v5;
org.wildfly.common.context.Contextual v1;
java.util.function.Supplier v7;
java.lang.SecurityManager v2;
org.wildfly.common.context.ContextPermission v3;
java.lang.Object v6;
org.wildfly.common.context.ContextManager v0;
java.lang.String v4;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: org.wildfly.common.context.Contextual;
v2 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v2 == null goto label1;
v3 = new org.wildfly.common.context.ContextPermission;
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v3.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v4, "setThreadDefault");
virtualinvoke v2.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v3);
label1:
v5 = v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef>;
v6 = virtualinvoke v5.<java.lang.ThreadLocal: java.lang.Object get()>();
if v1 != null goto label2;
v7 = null;
goto label3;
label2:
v7 = staticinvoke <org.wildfly.common.context.ContextManager$lambda_setThreadDefault_2__3240: java.util.function.Supplier bootstrap$(org.wildfly.common.context.Contextual)>(v1);
label3:
v6.<org.wildfly.common.context.ContextManager$State: java.util.function.Supplier defaultSupplier> = v7;
return;
}
public org.wildfly.common.context.Contextual get()
{
org.wildfly.common.context.ContextPermission v2;
org.wildfly.common.context.Contextual v3;
org.wildfly.common.context.ContextManager v0;
java.lang.SecurityManager v1;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v1 == null goto label1;
v2 = v0.<org.wildfly.common.context.ContextManager: org.wildfly.common.context.ContextPermission getPermission>;
virtualinvoke v1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v2);
label1:
v3 = specialinvoke v0.<org.wildfly.common.context.ContextManager: org.wildfly.common.context.Contextual getPrivileged()>();
return v3;
}
public java.util.function.Supplier getPrivilegedSupplier()
{
org.wildfly.common.context.ContextPermission v2;
org.wildfly.common.context.ContextManager v0;
java.lang.String v3;
java.util.function.Supplier v4;
java.lang.SecurityManager v1;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v1 == null goto label1;
v2 = new org.wildfly.common.context.ContextPermission;
v3 = v0.<org.wildfly.common.context.ContextManager: java.lang.String name>;
specialinvoke v2.<org.wildfly.common.context.ContextPermission: void <init>(java.lang.String,java.lang.String)>(v3, "getPrivilegedSupplier");
virtualinvoke v1.<java.lang.SecurityManager: void checkPermission(java.security.Permission)>(v2);
label1:
v4 = staticinvoke <org.wildfly.common.context.ContextManager$getPrivileged__3241: java.util.function.Supplier bootstrap$(org.wildfly.common.context.ContextManager)>(v0);
return v4;
}
public org.wildfly.common.context.Contextual getPrivileged()
{
java.util.concurrent.atomic.AtomicReference v13;
java.util.function.Supplier v11;
java.lang.Thread v4;
java.lang.ThreadLocal v1;
java.util.concurrent.ConcurrentHashMap v8;
java.security.PrivilegedAction v6;
java.lang.SecurityManager v5;
java.lang.Object v10, v12, v14, v15, v2, v3, v7, v9;
org.wildfly.common.context.ContextManager v0;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 = v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef>;
v2 = virtualinvoke v1.<java.lang.ThreadLocal: java.lang.Object get()>();
v3 = v2.<org.wildfly.common.context.ContextManager$State: java.lang.Object current>;
if v3 == null goto label1;
return v3;
label1:
v4 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
v5 = staticinvoke <java.lang.System: java.lang.SecurityManager getSecurityManager()>();
if v5 == null goto label2;
virtualinvoke v4.<java.lang.Object: java.lang.Class getClass()>();
v6 = staticinvoke <org.wildfly.common.context.ContextManager$getContextClassLoader__3242: java.security.PrivilegedAction bootstrap$(java.lang.Thread)>(v4);
v7 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v6);
goto label3;
label2:
v7 = virtualinvoke v4.<java.lang.Thread: java.lang.ClassLoader getContextClassLoader()>();
label3:
if v7 == null goto label4;
v8 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.ConcurrentHashMap perClassLoaderDefault>;
v9 = virtualinvoke v8.<java.util.concurrent.ConcurrentHashMap: java.lang.Object get(java.lang.Object)>(v7);
if v9 == null goto label4;
v10 = interfaceinvoke v9.<java.util.function.Supplier: java.lang.Object get()>();
if v10 == null goto label4;
return v10;
label4:
v11 = v2.<org.wildfly.common.context.ContextManager$State: java.util.function.Supplier defaultSupplier>;
if v11 == null goto label5;
v12 = interfaceinvoke v11.<java.util.function.Supplier: java.lang.Object get()>();
if v12 == null goto label5;
return v12;
label5:
v13 = v0.<org.wildfly.common.context.ContextManager: java.util.concurrent.atomic.AtomicReference globalDefaultSupplierRef>;
v14 = virtualinvoke v13.<java.util.concurrent.atomic.AtomicReference: java.lang.Object get()>();
if v14 == null goto label6;
v15 = interfaceinvoke v14.<java.util.function.Supplier: java.lang.Object get()>();
goto label7;
label6:
v15 = null;
label7:
return v15;
}
org.wildfly.common.context.Contextual getAndSetCurrent(org.wildfly.common.context.Contextual)
{
java.lang.Throwable v7;
java.lang.ThreadLocal v4;
org.wildfly.common.context.Contextual v1;
java.lang.Class v2;
java.lang.Object v3, v5, v6;
org.wildfly.common.context.ContextManager v0;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: org.wildfly.common.context.Contextual;
v2 = v0.<org.wildfly.common.context.ContextManager: java.lang.Class type>;
v3 = virtualinvoke v2.<java.lang.Class: java.lang.Object cast(java.lang.Object)>(v1);
v4 = v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef>;
v5 = virtualinvoke v4.<java.lang.ThreadLocal: java.lang.Object get()>();
label1:
v6 = v5.<org.wildfly.common.context.ContextManager$State: java.lang.Object current>;
label2:
v5.<org.wildfly.common.context.ContextManager$State: java.lang.Object current> = v3;
return v6;
label3:
v7 := @caughtexception;
v5.<org.wildfly.common.context.ContextManager$State: java.lang.Object current> = v3;
throw v7;
catch java.lang.Throwable from label1 to label2 with label3;
}
void restoreCurrent(org.wildfly.common.context.Contextual)
{
java.lang.ThreadLocal v2;
org.wildfly.common.context.Contextual v1;
java.lang.Object v3;
org.wildfly.common.context.ContextManager v0;
v0 := @this: org.wildfly.common.context.ContextManager;
v1 := @parameter0: org.wildfly.common.context.Contextual;
v2 = v0.<org.wildfly.common.context.ContextManager: java.lang.ThreadLocal stateRef>;
v3 = virtualinvoke v2.<java.lang.ThreadLocal: java.lang.Object get()>();
v3.<org.wildfly.common.context.ContextManager$State: java.lang.Object current> = v1;
return;
}
}