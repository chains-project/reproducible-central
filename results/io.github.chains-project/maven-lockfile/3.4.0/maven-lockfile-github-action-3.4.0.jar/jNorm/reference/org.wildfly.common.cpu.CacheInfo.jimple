public final class org.wildfly.common.cpu.CacheInfo extends java.lang.Object
{
private static final org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels;
public void <init>()
{
org.wildfly.common.cpu.CacheInfo v0;
v0 := @this: org.wildfly.common.cpu.CacheInfo;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public static int getLevelEntryCount()
{
int v1;
org.wildfly.common.cpu.CacheLevelInfo[] v0;
v0 = <org.wildfly.common.cpu.CacheInfo: org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels>;
v1 = lengthof v0;
return v1;
}
public static org.wildfly.common.cpu.CacheLevelInfo getCacheLevelInfo(int)
{
int v0;
org.wildfly.common.cpu.CacheLevelInfo[] v1;
org.wildfly.common.cpu.CacheLevelInfo v2;
v0 := @parameter0: int;
v1 = <org.wildfly.common.cpu.CacheInfo: org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels>;
v2 = v1[v0];
return v2;
}
public static int getSmallestDataCacheLineSize()
{
org.wildfly.common.cpu.CacheLevelInfo v4;
org.wildfly.common.cpu.CacheType v5;
int v0, v2, v3, v7, v8;
org.wildfly.common.cpu.CacheLevelInfo[] v1;
boolean v6;
v0 = 2147483647;
v1 = <org.wildfly.common.cpu.CacheInfo: org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels>;
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<org.wildfly.common.cpu.CacheLevelInfo: org.wildfly.common.cpu.CacheType getCacheType()>();
v6 = virtualinvoke v5.<org.wildfly.common.cpu.CacheType: boolean isData()>();
if v6 == 0 goto label2;
v7 = virtualinvoke v4.<org.wildfly.common.cpu.CacheLevelInfo: int getCacheLineSize()>();
if v7 == 0 goto label2;
if v7 >= v0 goto label2;
v0 = v7;
label2:
v3 = v3 + 1;
goto label1;
label3:
if v0 != 2147483647 goto label4;
v8 = 0;
goto label5;
label4:
v8 = v0;
label5:
return v8;
}
public static int getSmallestInstructionCacheLineSize()
{
org.wildfly.common.cpu.CacheLevelInfo v4;
org.wildfly.common.cpu.CacheType v5;
int v0, v2, v3, v7, v8;
org.wildfly.common.cpu.CacheLevelInfo[] v1;
boolean v6;
v0 = 2147483647;
v1 = <org.wildfly.common.cpu.CacheInfo: org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels>;
v2 = lengthof v1;
v3 = 0;
label1:
if v3 >= v2 goto label3;
v4 = v1[v3];
v5 = virtualinvoke v4.<org.wildfly.common.cpu.CacheLevelInfo: org.wildfly.common.cpu.CacheType getCacheType()>();
v6 = virtualinvoke v5.<org.wildfly.common.cpu.CacheType: boolean isInstruction()>();
if v6 == 0 goto label2;
v7 = virtualinvoke v4.<org.wildfly.common.cpu.CacheLevelInfo: int getCacheLineSize()>();
if v7 == 0 goto label2;
if v7 >= v0 goto label2;
v0 = v7;
label2:
v3 = v3 + 1;
goto label1;
label3:
if v0 != 2147483647 goto label4;
v8 = 0;
goto label5;
label4:
v8 = v0;
label5:
return v8;
}
static int parseIntFile(java.io.File)
{
int v2;
java.lang.String v1;
java.io.File v0;
v0 := @parameter0: java.io.File;
v1 = staticinvoke <org.wildfly.common.cpu.CacheInfo: java.lang.String parseStringFile(java.io.File)>(v0);
v2 = staticinvoke <org.wildfly.common.cpu.CacheInfo: int safeParseInt(java.lang.String)>(v1);
return v2;
}
static int safeParseInt(java.lang.String)
{
int v1;
java.lang.Throwable v2;
java.lang.String v0;
v0 := @parameter0: java.lang.String;
label1:
v1 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v0);
label2:
return v1;
label3:
v2 := @caughtexception;
return 0;
catch java.lang.Throwable from label1 to label2 with label3;
}
static int parseIntKBFile(java.io.File)
{
java.lang.Throwable v21;
int v11, v12, v14, v15, v17, v18, v19, v20, v3, v4, v6, v8, v9;
java.lang.String v1, v10, v16, v5;
boolean v13, v2, v7;
java.io.File v0;
v0 := @parameter0: java.io.File;
label1:
v1 = staticinvoke <org.wildfly.common.cpu.CacheInfo: java.lang.String parseStringFile(java.io.File)>(v0);
v2 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>("K");
if v2 == 0 goto label3;
v3 = virtualinvoke v1.<java.lang.String: int length()>();
v4 = v3 - 1;
v5 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v4);
v6 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v5);
label2:
return v6;
label3:
v7 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>("M");
if v7 == 0 goto label5;
v8 = virtualinvoke v1.<java.lang.String: int length()>();
v9 = v8 - 1;
v10 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v9);
v11 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v10);
v12 = v11 * 1024;
label4:
return v12;
label5:
v13 = virtualinvoke v1.<java.lang.String: boolean endsWith(java.lang.String)>("G");
if v13 == 0 goto label7;
v14 = virtualinvoke v1.<java.lang.String: int length()>();
v15 = v14 - 1;
v16 = virtualinvoke v1.<java.lang.String: java.lang.String substring(int,int)>(0, v15);
v17 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v16);
v18 = v17 * 1024;
v19 = v18 * 1024;
label6:
return v19;
label7:
v20 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v1);
label8:
return v20;
label9:
v21 := @caughtexception;
return 0;
catch java.lang.Throwable from label1 to label2 with label9;
catch java.lang.Throwable from label3 to label4 with label9;
catch java.lang.Throwable from label5 to label6 with label9;
catch java.lang.Throwable from label7 to label8 with label9;
}
static java.lang.String parseStringFile(java.io.File)
{
java.lang.Throwable v3, v4;
java.io.FileInputStream v1;
java.lang.String v2;
java.io.File v0;
v0 := @parameter0: java.io.File;
label1:
v1 = new java.io.FileInputStream;
specialinvoke v1.<java.io.FileInputStream: void <init>(java.io.File)>(v0);
label2:
v2 = staticinvoke <org.wildfly.common.cpu.CacheInfo: java.lang.String parseStringStream(java.io.InputStream)>(v1);
label3:
virtualinvoke v1.<java.io.FileInputStream: void close()>();
label4:
return v2;
label5:
v3 := @caughtexception;
throw v3;
label6:
v4 := @caughtexception;
return "";
catch java.lang.Throwable from label2 to label3 with label5;
catch java.lang.Throwable from label1 to label4 with label6;
}
static java.lang.String parseStringStream(java.io.InputStream)
{
java.lang.Throwable v10, v9;
java.io.InputStreamReader v1;
java.nio.charset.Charset v2;
int v5, v6;
char[] v4;
java.lang.StringBuilder v3;
java.lang.String v7, v8;
java.io.InputStream v0;
v0 := @parameter0: java.io.InputStream;
label1:
v1 = new java.io.InputStreamReader;
v2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
specialinvoke v1.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.Charset)>(v0, v2);
label2:
v3 = new java.lang.StringBuilder;
specialinvoke v3.<java.lang.StringBuilder: void <init>()>();
v4 = newarray (char)[64];
label3:
v5 = virtualinvoke v1.<java.io.Reader: int read(char[])>(v4);
v6 = (int) -1;
if v5 == v6 goto label4;
virtualinvoke v3.<java.lang.StringBuilder: java.lang.StringBuilder append(char[],int,int)>(v4, 0, v5);
goto label3;
label4:
v7 = virtualinvoke v3.<java.lang.StringBuilder: java.lang.String toString()>();
v8 = virtualinvoke v7.<java.lang.String: java.lang.String trim()>();
label5:
virtualinvoke v1.<java.io.Reader: void close()>();
label6:
return v8;
label7:
v9 := @caughtexception;
throw v9;
label8:
v10 := @caughtexception;
return "";
catch java.lang.Throwable from label2 to label5 with label7;
catch java.lang.Throwable from label1 to label6 with label8;
}
static transient java.lang.String parseProcessOutput(java.lang.String[])
{
java.lang.Throwable v12, v17, v19, v22, v9;
java.lang.String[] v0;
org.wildfly.common.cpu.CacheInfo$StreamConsumer v6;
java.lang.Thread v11, v14, v16, v18, v21, v5;
java.lang.ProcessBuilder v1;
java.lang.String v8;
java.io.OutputStream v3;
java.lang.Process v2;
java.io.IOException v23;
java.lang.InterruptedException v10, v13, v15, v20;
java.io.InputStream v4, v7;
v0 := @parameter0: java.lang.String[];
v1 = new java.lang.ProcessBuilder;
specialinvoke v1.<java.lang.ProcessBuilder: void <init>(java.lang.String[])>(v0);
label01:
v2 = virtualinvoke v1.<java.lang.ProcessBuilder: java.lang.Process start()>();
v3 = virtualinvoke v2.<java.lang.Process: java.io.OutputStream getOutputStream()>();
virtualinvoke v3.<java.io.OutputStream: void close()>();
v4 = virtualinvoke v2.<java.lang.Process: java.io.InputStream getErrorStream()>();
v5 = new java.lang.Thread;
v6 = new org.wildfly.common.cpu.CacheInfo$StreamConsumer;
specialinvoke v6.<org.wildfly.common.cpu.CacheInfo$StreamConsumer: void <init>(java.io.InputStream)>(v4);
specialinvoke v5.<java.lang.Thread: void <init>(java.lang.ThreadGroup,java.lang.Runnable,java.lang.String,long)>(null, v6, "Process thread", 32768L);
virtualinvoke v5.<java.lang.Thread: void start()>();
v7 = virtualinvoke v2.<java.lang.Process: java.io.InputStream getInputStream()>();
label02:
v8 = staticinvoke <org.wildfly.common.cpu.CacheInfo: java.lang.String parseStringStream(java.io.InputStream)>(v7);
label03:
if v7 == null goto label05;
virtualinvoke v7.<java.io.InputStream: void close()>();
goto label05;
label04:
v9 := @caughtexception;
throw v9;
label05:
virtualinvoke v2.<java.lang.Process: int waitFor()>();
label06:
virtualinvoke v5.<java.lang.Thread: void join()>();
label07:
goto label22;
label08:
v10 := @caughtexception;
v11 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v11.<java.lang.Thread: void interrupt()>();
goto label22;
label09:
v12 := @caughtexception;
throw v12;
label10:
v13 := @caughtexception;
label11:
virtualinvoke v5.<java.lang.Thread: void join()>();
label12:
v14 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v14.<java.lang.Thread: void interrupt()>();
goto label15;
label13:
v15 := @caughtexception;
v16 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v16.<java.lang.Thread: void interrupt()>();
goto label15;
label14:
v17 := @caughtexception;
v18 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v18.<java.lang.Thread: void interrupt()>();
throw v17;
label15:
return null;
label16:
v19 := @caughtexception;
label17:
virtualinvoke v5.<java.lang.Thread: void join()>();
label18:
goto label21;
label19:
v20 := @caughtexception;
v21 = staticinvoke <java.lang.Thread: java.lang.Thread currentThread()>();
virtualinvoke v21.<java.lang.Thread: void interrupt()>();
goto label21;
label20:
v22 := @caughtexception;
throw v22;
label21:
throw v19;
label22:
return v8;
label23:
v23 := @caughtexception;
return "";
catch java.lang.Throwable from label02 to label03 with label04;
catch java.lang.InterruptedException from label06 to label07 with label08;
catch java.lang.Throwable from label06 to label07 with label09;
catch java.lang.InterruptedException from label05 to label06 with label10;
catch java.lang.InterruptedException from label11 to label12 with label13;
catch java.lang.Throwable from label11 to label12 with label14;
catch java.lang.Throwable from label05 to label06 with label16;
catch java.lang.InterruptedException from label17 to label18 with label19;
catch java.lang.Throwable from label17 to label18 with label20;
catch java.io.IOException from label01 to label15 with label23;
catch java.io.IOException from label16 to label22 with label23;
}
public static void main(java.lang.String[])
{
java.io.PrintStream v1, v6;
java.lang.Object[] v7;
java.lang.String[] v0;
java.lang.Integer v12, v14, v9;
org.wildfly.common.cpu.CacheLevelInfo v5;
org.wildfly.common.cpu.CacheType v10;
int v11, v13, v3, v4, v8;
org.wildfly.common.cpu.CacheLevelInfo[] v2;
v0 := @parameter0: java.lang.String[];
v1 = <java.lang.System: java.io.PrintStream out>;
virtualinvoke v1.<java.io.PrintStream: void println(java.lang.String)>("Detected cache info:");
v2 = <org.wildfly.common.cpu.CacheInfo: org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels>;
v3 = lengthof v2;
v4 = 0;
label1:
if v4 >= v3 goto label2;
v5 = v2[v4];
v6 = <java.lang.System: java.io.PrintStream out>;
v7 = newarray (java.lang.Object)[4];
v8 = virtualinvoke v5.<org.wildfly.common.cpu.CacheLevelInfo: int getCacheLevel()>();
v9 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v8);
v7[0] = v9;
v10 = virtualinvoke v5.<org.wildfly.common.cpu.CacheLevelInfo: org.wildfly.common.cpu.CacheType getCacheType()>();
v7[1] = v10;
v11 = virtualinvoke v5.<org.wildfly.common.cpu.CacheLevelInfo: int getCacheLevelSizeKB()>();
v12 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v11);
v7[2] = v12;
v13 = virtualinvoke v5.<org.wildfly.common.cpu.CacheLevelInfo: int getCacheLineSize()>();
v14 = staticinvoke <java.lang.Integer: java.lang.Integer valueOf(int)>(v13);
v7[3] = v14;
virtualinvoke v6.<java.io.PrintStream: java.io.PrintStream printf(java.lang.String,java.lang.Object[])>("Level %d cache: type %s, size %d KiB, cache line is %d bytes%n", v7);
v4 = v4 + 1;
goto label1;
label2:
return;
}
static void <clinit>()
{
java.lang.Object v1;
java.security.PrivilegedAction v0;
v0 = staticinvoke <org.wildfly.common.cpu.CacheInfo$lambda_static_0__3244: java.security.PrivilegedAction bootstrap$()>();
v1 = staticinvoke <java.security.AccessController: java.lang.Object doPrivileged(java.security.PrivilegedAction)>(v0);
<org.wildfly.common.cpu.CacheInfo: org.wildfly.common.cpu.CacheLevelInfo[] cacheLevels> = v1;
return;
}
}