public interface  org.wildfly.common.function.ExceptionSupplier extends java.lang.Object
{
public abstract java.lang.Object get() throws java.lang.Exception;
public org.wildfly.common.function.ExceptionRunnable andThen(org.wildfly.common.function.ExceptionConsumer)
{
org.wildfly.common.function.ExceptionConsumer v1;
org.wildfly.common.function.ExceptionRunnable v2;
org.wildfly.common.function.ExceptionSupplier v0;
v0 := @this: org.wildfly.common.function.ExceptionSupplier;
v1 := @parameter0: org.wildfly.common.function.ExceptionConsumer;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionSupplier$lambda_andThen_0__3293: org.wildfly.common.function.ExceptionRunnable bootstrap$(org.wildfly.common.function.ExceptionSupplier,org.wildfly.common.function.ExceptionConsumer)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionSupplier andThen(org.wildfly.common.function.ExceptionFunction)
{
org.wildfly.common.function.ExceptionFunction v1;
org.wildfly.common.function.ExceptionSupplier v0, v2;
v0 := @this: org.wildfly.common.function.ExceptionSupplier;
v1 := @parameter0: org.wildfly.common.function.ExceptionFunction;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionSupplier$lambda_andThen_1__3294: org.wildfly.common.function.ExceptionSupplier bootstrap$(org.wildfly.common.function.ExceptionSupplier,org.wildfly.common.function.ExceptionFunction)>(v0, v1);
return v2;
}
}