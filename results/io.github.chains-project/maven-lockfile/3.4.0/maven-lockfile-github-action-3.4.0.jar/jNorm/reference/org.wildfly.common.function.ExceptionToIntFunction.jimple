public interface  org.wildfly.common.function.ExceptionToIntFunction extends java.lang.Object
{
public abstract int apply(java.lang.Object) throws java.lang.Exception;
public org.wildfly.common.function.ExceptionFunction andThen(org.wildfly.common.function.ExceptionIntFunction)
{
org.wildfly.common.function.ExceptionFunction v2;
org.wildfly.common.function.ExceptionIntFunction v1;
org.wildfly.common.function.ExceptionToIntFunction v0;
v0 := @this: org.wildfly.common.function.ExceptionToIntFunction;
v1 := @parameter0: org.wildfly.common.function.ExceptionIntFunction;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionToIntFunction$lambda_andThen_0__3295: org.wildfly.common.function.ExceptionFunction bootstrap$(org.wildfly.common.function.ExceptionToIntFunction,org.wildfly.common.function.ExceptionIntFunction)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionFunction andThen(org.wildfly.common.function.ExceptionLongFunction)
{
org.wildfly.common.function.ExceptionFunction v2;
org.wildfly.common.function.ExceptionLongFunction v1;
org.wildfly.common.function.ExceptionToIntFunction v0;
v0 := @this: org.wildfly.common.function.ExceptionToIntFunction;
v1 := @parameter0: org.wildfly.common.function.ExceptionLongFunction;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("after", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionToIntFunction$lambda_andThen_1__3296: org.wildfly.common.function.ExceptionFunction bootstrap$(org.wildfly.common.function.ExceptionToIntFunction,org.wildfly.common.function.ExceptionLongFunction)>(v0, v1);
return v2;
}
public org.wildfly.common.function.ExceptionToIntFunction compose(org.wildfly.common.function.ExceptionFunction)
{
org.wildfly.common.function.ExceptionFunction v1;
org.wildfly.common.function.ExceptionToIntFunction v0, v2;
v0 := @this: org.wildfly.common.function.ExceptionToIntFunction;
v1 := @parameter0: org.wildfly.common.function.ExceptionFunction;
staticinvoke <org.wildfly.common.Assert: java.lang.Object checkNotNullParam(java.lang.String,java.lang.Object)>("before", v1);
v2 = staticinvoke <org.wildfly.common.function.ExceptionToIntFunction$lambda_compose_2__3297: org.wildfly.common.function.ExceptionToIntFunction bootstrap$(org.wildfly.common.function.ExceptionToIntFunction,org.wildfly.common.function.ExceptionFunction)>(v0, v1);
return v2;
}
}