abstract class org.wildfly.common.iteration.Base64DecodingByteIterator extends org.wildfly.common.iteration.ByteIterator
{
private final org.wildfly.common.iteration.CodePointIterator iter;
private final boolean requirePadding;
private int state;
private int o0;
private int o1;
private int o2;
private int offset;
void <init>(org.wildfly.common.iteration.CodePointIterator, boolean)
{
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
org.wildfly.common.iteration.CodePointIterator v1;
boolean v2;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 := @parameter0: org.wildfly.common.iteration.CodePointIterator;
v2 := @parameter1: boolean;
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 0;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter> = v1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean requirePadding> = v2;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.CodePointIterator v15, v2, v20, v25, v27, v31, v36, v4, v41, v8;
boolean v10, v21, v22, v28, v3, v37, v38, v45, v9;
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
org.wildfly.common.codec.DecodeException v12, v14, v18, v24, v30, v34, v40, v7;
org.wildfly.common._private.CommonMessages v11, v13, v17, v23, v29, v33, v39, v6;
int v1, v16, v19, v26, v32, v35, v42, v43, v44, v5;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
if v1 != 0 goto label14;
v2 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v3 = virtualinvoke v2.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v3 != 0 goto label01;
return 0;
label01:
v4 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.CodePointIterator: int next()>();
if v5 != 61 goto label02;
v6 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v7 = interfaceinvoke v6.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException unexpectedPadding()>();
throw v7;
label02:
v8 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v9 = virtualinvoke v8.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v9 != 0 goto label04;
v10 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean requirePadding>;
if v10 == 0 goto label03;
v11 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v12 = interfaceinvoke v11.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException expectedPadding()>();
throw v12;
label03:
v13 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v14 = interfaceinvoke v13.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException incompleteDecode()>();
throw v14;
label04:
v15 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v16 = virtualinvoke v15.<org.wildfly.common.iteration.CodePointIterator: int next()>();
if v16 != 61 goto label05;
v17 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v18 = interfaceinvoke v17.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException unexpectedPadding()>();
throw v18;
label05:
v19 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc0(int,int)>(v5, v16);
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0> = v19;
v20 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v21 = virtualinvoke v20.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v21 != 0 goto label07;
v22 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean requirePadding>;
if v22 == 0 goto label06;
v23 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v24 = interfaceinvoke v23.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException expectedPadding()>();
throw v24;
label06:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 9;
return 1;
label07:
v25 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v26 = virtualinvoke v25.<org.wildfly.common.iteration.CodePointIterator: int next()>();
if v26 != 61 goto label10;
v27 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v28 = virtualinvoke v27.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v28 != 0 goto label08;
v29 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v30 = interfaceinvoke v29.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException expectedTwoPaddingCharacters()>();
throw v30;
label08:
v31 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v32 = virtualinvoke v31.<org.wildfly.common.iteration.CodePointIterator: int next()>();
if v32 == 61 goto label09;
v33 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v34 = interfaceinvoke v33.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException expectedTwoPaddingCharacters()>();
throw v34;
label09:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 6;
return 1;
label10:
v35 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc1(int,int)>(v16, v26);
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1> = v35;
v36 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v37 = virtualinvoke v36.<org.wildfly.common.iteration.CodePointIterator: boolean hasNext()>();
if v37 != 0 goto label12;
v38 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean requirePadding>;
if v38 == 0 goto label11;
v39 = <org.wildfly.common._private.CommonMessages: org.wildfly.common._private.CommonMessages msg>;
v40 = interfaceinvoke v39.<org.wildfly.common._private.CommonMessages: org.wildfly.common.codec.DecodeException expectedPadding()>();
throw v40;
label11:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 7;
return 1;
label12:
v41 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v42 = virtualinvoke v41.<org.wildfly.common.iteration.CodePointIterator: int next()>();
if v42 != 61 goto label13;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 4;
return 1;
label13:
v43 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc2(int,int)>(v26, v42);
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o2> = v43;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 1;
return 1;
label14:
v44 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
if v44 >= 10 goto label15;
v45 = 1;
goto label16;
label15:
v45 = 0;
label16:
return v45;
}
public boolean hasPrevious()
{
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
int v1, v2;
boolean v3;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
if v1 != 0 goto label1;
v2 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
if v2 <= 0 goto label2;
label1:
v3 = 1;
goto label3;
label2:
v3 = 0;
label3:
return v3;
}
abstract int calc0(int, int);
abstract int calc1(int, int);
abstract int calc2(int, int);
public int next()
{
boolean v1;
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
int v10, v11, v12, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v4, v5, v6, v7, v8, v9;
java.util.NoSuchElementException v2, v31;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean hasNext()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
tableswitch(v3)
{
case 1: goto label02;
case 2: goto label03;
case 3: goto label04;
case 4: goto label05;
case 5: goto label06;
case 6: goto label07;
case 7: goto label08;
case 8: goto label09;
case 9: goto label10;
default: goto label11;
};
label02:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 2;
v4 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v5 = v4 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v5;
v6 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v6;
label03:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 3;
v7 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v8 = v7 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v8;
v9 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v9;
label04:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 0;
v10 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v11 = v10 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v11;
v12 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o2>;
return v12;
label05:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 5;
v13 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v14 = v13 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v14;
v15 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v15;
label06:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 11;
v16 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v17 = v16 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v17;
v18 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v18;
label07:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 10;
v19 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v20 = v19 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v20;
v21 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v21;
label08:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 8;
v22 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v23 = v22 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v23;
v24 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v24;
label09:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 13;
v25 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v26 = v25 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v26;
v27 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v27;
label10:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 12;
v28 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v29 = v28 + 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v29;
v30 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v30;
label11:
v31 = new java.util.NoSuchElementException;
specialinvoke v31.<java.util.NoSuchElementException: void <init>()>();
throw v31;
}
public int peekNext() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
int v3, v4, v5, v6;
java.util.NoSuchElementException v2, v7;
boolean v1;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
tableswitch(v3)
{
case 1: goto label2;
case 2: goto label3;
case 3: goto label4;
case 4: goto label2;
case 5: goto label3;
case 6: goto label2;
case 7: goto label2;
case 8: goto label3;
case 9: goto label2;
default: goto label5;
};
label2:
v4 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v4;
label3:
v5 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v5;
label4:
v6 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o2>;
return v6;
label5:
v7 = new java.util.NoSuchElementException;
specialinvoke v7.<java.util.NoSuchElementException: void <init>()>();
throw v7;
}
public int previous()
{
org.wildfly.common.iteration.CodePointIterator v10, v12, v4, v5, v6, v8;
boolean v1;
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
int v11, v13, v14, v15, v16, v17, v18, v19, v20, v21, v22, v23, v24, v25, v26, v27, v28, v29, v3, v30, v31, v32, v33, v34, v35, v36, v37, v38, v39, v40, v41, v42, v7, v9;
java.util.NoSuchElementException v2, v43;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
tableswitch(v3)
{
case 0: goto label04;
case 1: goto label04;
case 2: goto label05;
case 3: goto label06;
case 4: goto label03;
case 5: goto label07;
case 6: goto label02;
case 7: goto label04;
case 8: goto label08;
case 9: goto label04;
case 10: goto label09;
case 11: goto label10;
case 12: goto label11;
case 13: goto label12;
default: goto label13;
};
label02:
v4 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v4.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
label03:
v5 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v5.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
label04:
v6 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v7 = virtualinvoke v6.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v8 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v9 = virtualinvoke v8.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v10 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v11 = virtualinvoke v10.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v12 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v13 = virtualinvoke v12.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v14 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc0(int,int)>(v13, v11);
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0> = v14;
v15 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc1(int,int)>(v11, v9);
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1> = v15;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 3;
v16 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v17 = v16 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v17;
v18 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc2(int,int)>(v9, v7);
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o2> = v18;
return v18;
label05:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 1;
v19 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v20 = v19 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v20;
v21 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v21;
label06:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 2;
v22 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v23 = v22 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v23;
v24 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v24;
label07:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 4;
v25 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v26 = v25 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v26;
v27 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v27;
label08:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 7;
v28 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v29 = v28 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v29;
v30 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v30;
label09:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 6;
v31 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v32 = v31 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v32;
v33 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v33;
label10:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 5;
v34 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v35 = v34 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v35;
v36 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v36;
label11:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 9;
v37 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v38 = v37 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v38;
v39 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v39;
label12:
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state> = 8;
v40 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
v41 = v40 - 1;
v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset> = v41;
v42 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v42;
label13:
v43 = new java.util.NoSuchElementException;
specialinvoke v43.<java.util.NoSuchElementException: void <init>()>();
throw v43;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.CodePointIterator v10, v12, v14, v15, v4, v5, v6, v8;
int v11, v13, v16, v17, v18, v19, v20, v21, v22, v23, v24, v3, v7, v9;
java.util.NoSuchElementException v2, v25;
boolean v1;
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: boolean hasPrevious()>();
if v1 != 0 goto label01;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label01:
v3 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
tableswitch(v3)
{
case 0: goto label04;
case 1: goto label04;
case 2: goto label07;
case 3: goto label08;
case 4: goto label03;
case 5: goto label09;
case 6: goto label02;
case 7: goto label04;
case 8: goto label10;
case 9: goto label04;
case 10: goto label11;
case 11: goto label12;
case 12: goto label13;
case 13: goto label14;
default: goto label15;
};
label02:
v4 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v4.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
label03:
v5 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v5.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
label04:
v6 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v7 = virtualinvoke v6.<org.wildfly.common.iteration.CodePointIterator: int previous()>();
v8 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
v9 = virtualinvoke v8.<org.wildfly.common.iteration.CodePointIterator: int peekPrevious()>();
v10 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v10.<org.wildfly.common.iteration.CodePointIterator: int next()>();
v11 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
if v11 != 4 goto label05;
v12 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v12.<org.wildfly.common.iteration.CodePointIterator: int next()>();
goto label06;
label05:
v13 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int state>;
if v13 != 6 goto label06;
v14 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v14.<org.wildfly.common.iteration.CodePointIterator: int next()>();
v15 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: org.wildfly.common.iteration.CodePointIterator iter>;
virtualinvoke v15.<org.wildfly.common.iteration.CodePointIterator: int next()>();
label06:
v16 = virtualinvoke v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int calc2(int,int)>(v9, v7);
return v16;
label07:
v17 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v17;
label08:
v18 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v18;
label09:
v19 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v19;
label10:
v20 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v20;
label11:
v21 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v21;
label12:
v22 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v22;
label13:
v23 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o0>;
return v23;
label14:
v24 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int o1>;
return v24;
label15:
v25 = new java.util.NoSuchElementException;
specialinvoke v25.<java.util.NoSuchElementException: void <init>()>();
throw v25;
}
public long getIndex()
{
int v1;
org.wildfly.common.iteration.Base64DecodingByteIterator v0;
v0 := @this: org.wildfly.common.iteration.Base64DecodingByteIterator;
v1 = v0.<org.wildfly.common.iteration.Base64DecodingByteIterator: int offset>;
return v1;
}
}