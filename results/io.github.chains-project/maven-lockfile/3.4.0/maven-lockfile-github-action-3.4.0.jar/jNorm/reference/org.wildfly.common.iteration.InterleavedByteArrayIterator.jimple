final class org.wildfly.common.iteration.InterleavedByteArrayIterator extends org.wildfly.common.iteration.ByteIterator
{
private final int len;
private final byte[] bytes;
private final int offs;
private final int[] interleave;
private int idx;
void <init>(int, byte[], int, int[])
{
byte[] v2;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
int[] v4;
int v1, v3;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 := @parameter0: int;
v2 := @parameter1: byte[];
v3 := @parameter2: int;
v4 := @parameter3: int[];
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int len> = v1;
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: byte[] bytes> = v2;
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int offs> = v3;
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int[] interleave> = v4;
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx> = 0;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
int v1, v2;
boolean v3;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
v2 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int len>;
if v1 >= v2 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public boolean hasPrevious()
{
int v1;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
boolean v2;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
if v1 <= 0 goto label1;
v2 = 1;
goto label2;
label1:
v2 = 0;
label2:
return v2;
}
public int next()
{
byte[] v3;
short v11;
byte v10;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
int[] v5;
int v4, v6, v7, v8, v9;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int[] interleave>;
v6 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
v7 = v6 + 1;
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx> = v7;
v8 = v5[v6];
v9 = v4 + v8;
v10 = v3[v9];
v11 = v10 & 255;
return v11;
}
public int previous()
{
byte[] v3;
short v11;
byte v10;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
int[] v5;
int v4, v6, v7, v8, v9;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int[] interleave>;
v6 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
v7 = v6 - 1;
v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx> = v7;
v8 = v5[v7];
v9 = v4 + v8;
v10 = v3[v9];
v11 = v10 & 255;
return v11;
}
public int peekNext() throws java.util.NoSuchElementException
{
byte[] v3;
short v10;
byte v9;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
int[] v5;
int v4, v6, v7, v8;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: boolean hasNext()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int[] interleave>;
v6 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
v7 = v5[v6];
v8 = v4 + v7;
v9 = v3[v8];
v10 = v9 & 255;
return v10;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
byte[] v3;
short v11;
byte v10;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
int[] v5;
int v4, v6, v7, v8, v9;
java.util.NoSuchElementException v2;
boolean v1;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = virtualinvoke v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: boolean hasPrevious()>();
if v1 != 0 goto label1;
v2 = new java.util.NoSuchElementException;
specialinvoke v2.<java.util.NoSuchElementException: void <init>()>();
throw v2;
label1:
v3 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: byte[] bytes>;
v4 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int offs>;
v5 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int[] interleave>;
v6 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
v7 = v6 - 1;
v8 = v5[v7];
v9 = v4 + v8;
v10 = v3[v9];
v11 = v10 & 255;
return v11;
}
public long getIndex()
{
int v1;
org.wildfly.common.iteration.InterleavedByteArrayIterator v0;
v0 := @this: org.wildfly.common.iteration.InterleavedByteArrayIterator;
v1 = v0.<org.wildfly.common.iteration.InterleavedByteArrayIterator: int idx>;
return v1;
}
}