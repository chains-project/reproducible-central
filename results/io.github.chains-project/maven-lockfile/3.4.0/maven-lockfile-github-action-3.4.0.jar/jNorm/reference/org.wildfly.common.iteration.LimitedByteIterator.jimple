final class org.wildfly.common.iteration.LimitedByteIterator extends org.wildfly.common.iteration.ByteIterator
{
private final org.wildfly.common.iteration.ByteIterator iter;
private final long size;
long offset;
void <init>(org.wildfly.common.iteration.ByteIterator, long)
{
long v2;
org.wildfly.common.iteration.LimitedByteIterator v0;
org.wildfly.common.iteration.ByteIterator v1;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 := @parameter0: org.wildfly.common.iteration.ByteIterator;
v2 := @parameter1: long;
specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: void <init>()>();
v0.<org.wildfly.common.iteration.LimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter> = v1;
v0.<org.wildfly.common.iteration.LimitedByteIterator: long size> = v2;
v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset> = 0L;
return;
}
public boolean hasNext()
{
org.wildfly.common.iteration.ByteIterator v4;
byte v3;
long v1, v2;
org.wildfly.common.iteration.LimitedByteIterator v0;
boolean v5, v6;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v2 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long size>;
v3 = v1 cmp v2;
if v3 >= 0 goto label1;
v4 = v0.<org.wildfly.common.iteration.LimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.ByteIterator: boolean hasNext()>();
if v5 == 0 goto label1;
v6 = 1;
goto label2;
label1:
v6 = 0;
label2:
return v6;
}
public boolean hasPrevious()
{
byte v2;
long v1;
org.wildfly.common.iteration.LimitedByteIterator v0;
boolean v3;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v2 = v1 cmp 0L;
if v2 <= 0 goto label1;
v3 = 1;
goto label2;
label1:
v3 = 0;
label2:
return v3;
}
public int next()
{
org.wildfly.common.iteration.ByteIterator v7;
long v1, v2, v5, v6;
org.wildfly.common.iteration.LimitedByteIterator v0;
byte v3;
int v8;
java.util.NoSuchElementException v4;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v2 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long size>;
v3 = v1 cmp v2;
if v3 != 0 goto label1;
v4 = new java.util.NoSuchElementException;
specialinvoke v4.<java.util.NoSuchElementException: void <init>()>();
throw v4;
label1:
v5 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v6 = v5 + 1L;
v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset> = v6;
v7 = v0.<org.wildfly.common.iteration.LimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v8 = virtualinvoke v7.<org.wildfly.common.iteration.ByteIterator: int next()>();
return v8;
}
public int peekNext() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v5;
byte v3;
int v6;
long v1, v2;
org.wildfly.common.iteration.LimitedByteIterator v0;
java.util.NoSuchElementException v4;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v2 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long size>;
v3 = v1 cmp v2;
if v3 != 0 goto label1;
v4 = new java.util.NoSuchElementException;
specialinvoke v4.<java.util.NoSuchElementException: void <init>()>();
throw v4;
label1:
v5 = v0.<org.wildfly.common.iteration.LimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v6 = virtualinvoke v5.<org.wildfly.common.iteration.ByteIterator: int peekNext()>();
return v6;
}
public int previous()
{
org.wildfly.common.iteration.ByteIterator v6;
long v1, v4, v5;
org.wildfly.common.iteration.LimitedByteIterator v0;
byte v2;
int v7;
java.util.NoSuchElementException v3;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v2 = v1 cmp 0L;
if v2 != 0 goto label1;
v3 = new java.util.NoSuchElementException;
specialinvoke v3.<java.util.NoSuchElementException: void <init>()>();
throw v3;
label1:
v4 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v5 = v4 - 1L;
v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset> = v5;
v6 = v0.<org.wildfly.common.iteration.LimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v7 = virtualinvoke v6.<org.wildfly.common.iteration.ByteIterator: int previous()>();
return v7;
}
public int peekPrevious() throws java.util.NoSuchElementException
{
org.wildfly.common.iteration.ByteIterator v4;
byte v2;
int v5;
long v1;
org.wildfly.common.iteration.LimitedByteIterator v0;
java.util.NoSuchElementException v3;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v2 = v1 cmp 0L;
if v2 != 0 goto label1;
v3 = new java.util.NoSuchElementException;
specialinvoke v3.<java.util.NoSuchElementException: void <init>()>();
throw v3;
label1:
v4 = v0.<org.wildfly.common.iteration.LimitedByteIterator: org.wildfly.common.iteration.ByteIterator iter>;
v5 = virtualinvoke v4.<org.wildfly.common.iteration.ByteIterator: int peekPrevious()>();
return v5;
}
public int drain(byte[], int, int)
{
byte[] v1;
long v4, v5, v6, v7;
org.wildfly.common.iteration.LimitedByteIterator v0;
int v2, v3, v8;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 := @parameter0: byte[];
v2 := @parameter1: int;
v3 := @parameter2: int;
v4 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long size>;
v5 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
v6 = v4 - v5;
v7 = staticinvoke <java.lang.Math: long min(long,long)>(v3, v6);
v8 = specialinvoke v0.<org.wildfly.common.iteration.ByteIterator: int drain(byte[],int,int)>(v1, v2, v7);
return v8;
}
public long getIndex()
{
long v1;
org.wildfly.common.iteration.LimitedByteIterator v0;
v0 := @this: org.wildfly.common.iteration.LimitedByteIterator;
v1 = v0.<org.wildfly.common.iteration.LimitedByteIterator: long offset>;
return v1;
}
}