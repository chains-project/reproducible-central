class org.yaml.snakeyaml.Yaml$1 extends java.lang.Object implements java.util.Iterator
{
final org.yaml.snakeyaml.Yaml this$0;
void <init>(org.yaml.snakeyaml.Yaml)
{
org.yaml.snakeyaml.Yaml$1 v0;
org.yaml.snakeyaml.Yaml v1;
v0 := @this: org.yaml.snakeyaml.Yaml$1;
v1 := @parameter0: org.yaml.snakeyaml.Yaml;
v0.<org.yaml.snakeyaml.Yaml$1: org.yaml.snakeyaml.Yaml this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public boolean hasNext()
{
org.yaml.snakeyaml.constructor.BaseConstructor v2;
org.yaml.snakeyaml.Yaml$1 v0;
boolean v3;
org.yaml.snakeyaml.Yaml v1;
v0 := @this: org.yaml.snakeyaml.Yaml$1;
v1 = v0.<org.yaml.snakeyaml.Yaml$1: org.yaml.snakeyaml.Yaml this$0>;
v2 = v1.<org.yaml.snakeyaml.Yaml: org.yaml.snakeyaml.constructor.BaseConstructor constructor>;
v3 = virtualinvoke v2.<org.yaml.snakeyaml.constructor.BaseConstructor: boolean checkData()>();
return v3;
}
public java.lang.Object next()
{
org.yaml.snakeyaml.constructor.BaseConstructor v2;
java.lang.Object v3;
org.yaml.snakeyaml.Yaml$1 v0;
org.yaml.snakeyaml.Yaml v1;
v0 := @this: org.yaml.snakeyaml.Yaml$1;
v1 = v0.<org.yaml.snakeyaml.Yaml$1: org.yaml.snakeyaml.Yaml this$0>;
v2 = v1.<org.yaml.snakeyaml.Yaml: org.yaml.snakeyaml.constructor.BaseConstructor constructor>;
v3 = virtualinvoke v2.<org.yaml.snakeyaml.constructor.BaseConstructor: java.lang.Object getData()>();
return v3;
}
public void remove()
{
java.lang.UnsupportedOperationException v1;
org.yaml.snakeyaml.Yaml$1 v0;
v0 := @this: org.yaml.snakeyaml.Yaml$1;
v1 = new java.lang.UnsupportedOperationException;
specialinvoke v1.<java.lang.UnsupportedOperationException: void <init>()>();
throw v1;
}
}