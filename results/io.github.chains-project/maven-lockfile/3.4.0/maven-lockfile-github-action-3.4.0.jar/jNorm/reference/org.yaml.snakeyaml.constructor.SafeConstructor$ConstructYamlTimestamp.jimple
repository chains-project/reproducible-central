public class org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp extends org.yaml.snakeyaml.constructor.AbstractConstruct
{
private java.util.Calendar calendar;
public void <init>()
{
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp v0;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp;
specialinvoke v0.<org.yaml.snakeyaml.constructor.AbstractConstruct: void <init>()>();
return;
}
public java.util.Calendar getCalendar()
{
java.util.Calendar v1;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp v0;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp;
v1 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
return v1;
}
public java.lang.Object construct(org.yaml.snakeyaml.nodes.Node)
{
java.util.Date v20, v59;
org.yaml.snakeyaml.nodes.Node v1;
java.util.regex.Matcher v22, v4;
org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp v0;
boolean v23, v5;
java.util.TimeZone v43, v9;
java.util.regex.Pattern v21, v3;
org.yaml.snakeyaml.error.YAMLException v24;
long v35, v38;
java.util.Calendar v10, v11, v12, v14, v17, v19, v44, v45, v47, v50, v52, v54, v56, v57, v58;
int v13, v15, v16, v18, v46, v48, v49, v51, v53, v55, v60;
java.lang.String v2, v25, v26, v27, v28, v29, v30, v31, v32, v39, v40, v41, v42, v6, v7, v8;
double v33, v34, v36, v37;
v0 := @this: org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp;
v1 := @parameter0: org.yaml.snakeyaml.nodes.Node;
v2 = virtualinvoke v1.<org.yaml.snakeyaml.nodes.ScalarNode: java.lang.String getValue()>();
v3 = <org.yaml.snakeyaml.constructor.SafeConstructor: java.util.regex.Pattern YMD_REGEXP>;
v4 = virtualinvoke v3.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v2);
v5 = virtualinvoke v4.<java.util.regex.Matcher: boolean matches()>();
if v5 == 0 goto label1;
v6 = virtualinvoke v4.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v7 = virtualinvoke v4.<java.util.regex.Matcher: java.lang.String group(int)>(2);
v8 = virtualinvoke v4.<java.util.regex.Matcher: java.lang.String group(int)>(3);
v9 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
v10 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(v9);
v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar> = v10;
v11 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
virtualinvoke v11.<java.util.Calendar: void clear()>();
v12 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v13 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v6);
virtualinvoke v12.<java.util.Calendar: void set(int,int)>(1, v13);
v14 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v15 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v7);
v16 = v15 - 1;
virtualinvoke v14.<java.util.Calendar: void set(int,int)>(2, v16);
v17 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v18 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v8);
virtualinvoke v17.<java.util.Calendar: void set(int,int)>(5, v18);
v19 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v20 = virtualinvoke v19.<java.util.Calendar: java.util.Date getTime()>();
return v20;
label1:
v21 = <org.yaml.snakeyaml.constructor.SafeConstructor: java.util.regex.Pattern TIMESTAMP_REGEXP>;
v22 = virtualinvoke v21.<java.util.regex.Pattern: java.util.regex.Matcher matcher(java.lang.CharSequence)>(v2);
v23 = virtualinvoke v22.<java.util.regex.Matcher: boolean matches()>();
if v23 != 0 goto label2;
v24 = new org.yaml.snakeyaml.error.YAMLException;
v25 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v2) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected timestamp: \u0001");
specialinvoke v24.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>(v25);
throw v24;
label2:
v26 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(1);
v27 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(2);
v28 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(3);
v29 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(4);
v30 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(5);
v31 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(6);
v32 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(7);
if v32 == null goto label3;
v31 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v31, v32) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("\u0001.\u0001");
label3:
v33 = staticinvoke <java.lang.Double: double parseDouble(java.lang.String)>(v31);
v34 = staticinvoke <java.lang.Math: double floor(double)>(v33);
v35 = staticinvoke <java.lang.Math: long round(double)>(v34);
v36 = v33 - v60;
v37 = v36 * 1000.0;
v38 = staticinvoke <java.lang.Math: long round(double)>(v37);
v39 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(8);
v40 = virtualinvoke v22.<java.util.regex.Matcher: java.lang.String group(int)>(9);
if v39 == null goto label6;
if v40 == null goto label4;
v41 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String)>(v40) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>(":\u0001");
goto label5;
label4:
v41 = "00";
label5:
v42 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (java.lang.String,java.lang.String)>(v39, v41) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("GMT\u0001\u0001");
v43 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>(v42);
goto label7;
label6:
v43 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
label7:
v44 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(v43);
v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar> = v44;
v45 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v46 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v26);
virtualinvoke v45.<java.util.Calendar: void set(int,int)>(1, v46);
v47 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v48 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v27);
v49 = v48 - 1;
virtualinvoke v47.<java.util.Calendar: void set(int,int)>(2, v49);
v50 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v51 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v28);
virtualinvoke v50.<java.util.Calendar: void set(int,int)>(5, v51);
v52 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v53 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v29);
virtualinvoke v52.<java.util.Calendar: void set(int,int)>(11, v53);
v54 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v55 = staticinvoke <java.lang.Integer: int parseInt(java.lang.String)>(v30);
virtualinvoke v54.<java.util.Calendar: void set(int,int)>(12, v55);
v56 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
virtualinvoke v56.<java.util.Calendar: void set(int,int)>(13, v35);
v57 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
virtualinvoke v57.<java.util.Calendar: void set(int,int)>(14, v38);
v58 = v0.<org.yaml.snakeyaml.constructor.SafeConstructor$ConstructYamlTimestamp: java.util.Calendar calendar>;
v59 = virtualinvoke v58.<java.util.Calendar: java.util.Date getTime()>();
return v59;
}
}