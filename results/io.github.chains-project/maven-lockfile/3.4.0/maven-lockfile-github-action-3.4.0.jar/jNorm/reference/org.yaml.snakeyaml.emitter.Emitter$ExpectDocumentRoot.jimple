class org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot extends java.lang.Object implements org.yaml.snakeyaml.emitter.EmitterState
{
final org.yaml.snakeyaml.emitter.Emitter this$0;
private void <init>(org.yaml.snakeyaml.emitter.Emitter)
{
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot v0;
org.yaml.snakeyaml.emitter.Emitter v1;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot;
v1 := @parameter0: org.yaml.snakeyaml.emitter.Emitter;
v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public void expect() throws java.io.IOException
{
org.yaml.snakeyaml.events.Event v12, v5, v6;
org.yaml.snakeyaml.comments.CommentEventsCollector v3, v8;
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot v0;
boolean v13, v9;
org.yaml.snakeyaml.util.ArrayStack v17;
org.yaml.snakeyaml.emitter.Emitter v1, v10, v11, v15, v16, v19, v2, v20, v4, v7;
org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd v14, v18;
v0 := @this: org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot;
v1 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
v2 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
v3 = v2.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v4 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
v5 = v4.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v6 = virtualinvoke v3.<org.yaml.snakeyaml.comments.CommentEventsCollector: org.yaml.snakeyaml.events.Event collectEventsAndPoll(org.yaml.snakeyaml.events.Event)>(v5);
v1.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event> = v6;
v7 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
v8 = v7.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.comments.CommentEventsCollector blockCommentsCollector>;
v9 = virtualinvoke v8.<org.yaml.snakeyaml.comments.CommentEventsCollector: boolean isEmpty()>();
if v9 != 0 goto label1;
v10 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v10.<org.yaml.snakeyaml.emitter.Emitter: void writeBlockComment()>();
v11 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
v12 = v11.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.events.Event event>;
v13 = v12 instanceof org.yaml.snakeyaml.events.DocumentEndEvent;
if v13 == 0 goto label1;
v14 = new org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd;
v15 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v14.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v15);
virtualinvoke v14.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd: void expect()>();
return;
label1:
v16 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
v17 = v16.<org.yaml.snakeyaml.emitter.Emitter: org.yaml.snakeyaml.util.ArrayStack states>;
v18 = new org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd;
v19 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v18.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentEnd: void <init>(org.yaml.snakeyaml.emitter.Emitter)>(v19);
virtualinvoke v17.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v18);
v20 = v0.<org.yaml.snakeyaml.emitter.Emitter$ExpectDocumentRoot: org.yaml.snakeyaml.emitter.Emitter this$0>;
specialinvoke v20.<org.yaml.snakeyaml.emitter.Emitter: void expectNode(boolean,boolean,boolean)>(1, 0, 0);
return;
}
}