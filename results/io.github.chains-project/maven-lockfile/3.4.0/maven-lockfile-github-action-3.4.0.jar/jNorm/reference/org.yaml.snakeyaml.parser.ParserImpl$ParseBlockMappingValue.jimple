class org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v14, v16, v17, v20, v27, v30, v31, v33, v35, v36, v39, v44, v47, v48, v50, v52, v53, v56, v6, v9;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey v29, v34, v46, v51;
org.yaml.snakeyaml.events.Event v19, v32, v38, v49, v58;
boolean v13, v26, v43, v5;
org.yaml.snakeyaml.parser.Production v18;
org.yaml.snakeyaml.error.Mark v37, v57;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment v15;
org.yaml.snakeyaml.tokens.Token v55, v8;
org.yaml.snakeyaml.tokens.Token$ID v12, v23, v24, v25, v4, v42;
org.yaml.snakeyaml.util.ArrayStack v28, v45;
org.yaml.snakeyaml.scanner.Scanner v10, v2, v21, v40, v54, v7;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue v0;
org.yaml.snakeyaml.tokens.Token$ID[] v11, v22, v3, v41;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label3;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v8 = interfaceinvoke v7.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v10 = v9.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v11 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v12 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v11[0] = v12;
v13 = interfaceinvoke v10.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v11);
if v13 == 0 goto label1;
v14 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v15 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment;
v16 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v15.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v16);
v14.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v15;
v17 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v18 = v17.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state>;
v19 = interfaceinvoke v18.<org.yaml.snakeyaml.parser.Production: org.yaml.snakeyaml.events.Event produce()>();
return v19;
label1:
v20 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v21 = v20.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v22 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[3];
v23 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v22[0] = v23;
v24 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v22[1] = v24;
v25 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd>;
v22[2] = v25;
v26 = interfaceinvoke v21.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v22);
if v26 != 0 goto label2;
v27 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v28 = v27.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v29 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v30 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v29.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v30);
virtualinvoke v28.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v29);
v31 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v32 = specialinvoke v31.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseBlockNodeOrIndentlessSequence()>();
return v32;
label2:
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v34 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v35 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v34.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v35);
v33.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v34;
v36 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v37 = virtualinvoke v8.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v38 = specialinvoke v36.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v37);
return v38;
label3:
v39 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v40 = v39.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v41 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v42 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Scalar>;
v41[0] = v42;
v43 = interfaceinvoke v40.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v41);
if v43 == 0 goto label4;
v44 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v45 = v44.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v46 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v47 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v46.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v47);
virtualinvoke v45.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v46);
v48 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v49 = specialinvoke v48.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseBlockNodeOrIndentlessSequence()>();
return v49;
label4:
v50 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v51 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v52 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v51.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v52);
v50.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v51;
v53 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v54 = v53.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v55 = interfaceinvoke v54.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v56 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValue: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v57 = virtualinvoke v55.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v58 = specialinvoke v56.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v57);
return v58;
}
}