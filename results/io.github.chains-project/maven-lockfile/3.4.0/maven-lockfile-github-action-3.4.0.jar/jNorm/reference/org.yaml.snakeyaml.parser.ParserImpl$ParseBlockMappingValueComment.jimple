class org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
java.util.List tokens;
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment v0;
java.util.LinkedList v2;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v2 = new java.util.LinkedList;
specialinvoke v2.<java.util.LinkedList: void <init>()>();
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: java.util.List tokens> = v2;
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v11, v20, v24, v27, v28, v30, v32, v34, v35, v7;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey v26;
org.yaml.snakeyaml.events.Event v10, v29, v39;
boolean v17, v19, v5;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueCommentList v31;
java.util.List v18, v21, v33, v6;
org.yaml.snakeyaml.error.Mark v38;
org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment v0;
org.yaml.snakeyaml.tokens.Token v37, v9;
org.yaml.snakeyaml.tokens.Token$ID v14, v15, v16, v4;
org.yaml.snakeyaml.events.CommentEvent v23;
org.yaml.snakeyaml.util.ArrayStack v25;
org.yaml.snakeyaml.scanner.Scanner v12, v2, v36, v8;
org.yaml.snakeyaml.tokens.Token$ID[] v13, v3;
java.lang.Object v22;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: java.util.List tokens>;
v7 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v8 = v7.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v9 = interfaceinvoke v8.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
interfaceinvoke v6.<java.util.List: boolean add(java.lang.Object)>(v9);
v10 = virtualinvoke v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.events.Event produce()>();
return v10;
label1:
v11 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v12 = v11.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v13 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[3];
v14 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v13[0] = v14;
v15 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v13[1] = v15;
v16 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEnd>;
v13[2] = v16;
v17 = interfaceinvoke v12.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v13);
if v17 != 0 goto label3;
v18 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: java.util.List tokens>;
v19 = interfaceinvoke v18.<java.util.List: boolean isEmpty()>();
if v19 != 0 goto label2;
v20 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v21 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: java.util.List tokens>;
v22 = interfaceinvoke v21.<java.util.List: java.lang.Object remove(int)>(0);
v23 = specialinvoke v20.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v22);
return v23;
label2:
v24 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v25 = v24.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v26 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey;
v27 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v26.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v27);
virtualinvoke v25.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v26);
v28 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v29 = specialinvoke v28.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseBlockNodeOrIndentlessSequence()>();
return v29;
label3:
v30 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v31 = new org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueCommentList;
v32 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: java.util.List tokens>;
specialinvoke v31.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueCommentList: void <init>(org.yaml.snakeyaml.parser.ParserImpl,java.util.List)>(v32, v33);
v30.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v31;
v34 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v35 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseBlockMappingValueComment: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v36 = v35.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v37 = interfaceinvoke v36.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v38 = virtualinvoke v37.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v39 = specialinvoke v34.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v38);
return v39;
}
}