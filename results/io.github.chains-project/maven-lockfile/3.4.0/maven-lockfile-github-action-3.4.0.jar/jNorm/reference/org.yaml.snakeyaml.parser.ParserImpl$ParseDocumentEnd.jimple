class org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v12, v16, v18, v7;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart v17;
boolean v11, v6;
org.yaml.snakeyaml.tokens.Token v14, v3;
org.yaml.snakeyaml.tokens.Token$ID v10;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd v0;
org.yaml.snakeyaml.scanner.Scanner v13, v2, v8;
org.yaml.snakeyaml.error.Mark v4, v5;
org.yaml.snakeyaml.events.DocumentEndEvent v15;
org.yaml.snakeyaml.tokens.Token$ID[] v9;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v4 = virtualinvoke v3.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v5 = v4;
v6 = 0;
v7 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v8 = v7.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v9 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v10 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentEnd>;
v9[0] = v10;
v11 = interfaceinvoke v8.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v9);
if v11 == 0 goto label1;
v12 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v13 = v12.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v14 = interfaceinvoke v13.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v5 = virtualinvoke v14.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v6 = 1;
label1:
v15 = new org.yaml.snakeyaml.events.DocumentEndEvent;
specialinvoke v15.<org.yaml.snakeyaml.events.DocumentEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean)>(v4, v5, v6);
v16 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v17 = new org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart;
v18 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v17.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v18);
v16.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v17;
return v15;
}
}