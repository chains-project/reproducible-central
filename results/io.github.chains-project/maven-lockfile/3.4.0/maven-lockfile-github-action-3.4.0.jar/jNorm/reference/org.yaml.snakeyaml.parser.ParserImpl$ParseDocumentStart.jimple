class org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v13, v17, v19, v24, v26, v31, v37, v42, v46, v53, v56, v57, v59, v6, v60, v66, v70, v73, v77, v8, v80;
java.util.Map v52;
org.yaml.snakeyaml.DumperOptions$Version v51;
org.yaml.snakeyaml.error.Mark v16, v45, v49, v64, v65;
org.yaml.snakeyaml.error.YAMLException v69, v76;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart v0;
java.lang.String v41, v72, v79;
org.yaml.snakeyaml.tokens.Token v15, v39, v44, v48, v62;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentContent v58;
org.yaml.snakeyaml.tokens.Token$ID[] v10, v21, v28, v3, v33;
org.yaml.snakeyaml.parser.VersionTagsTuple v18;
org.yaml.snakeyaml.events.DocumentStartEvent v50;
boolean v12, v23, v30, v35, v5, v68, v75;
org.yaml.snakeyaml.parser.ParserException v36;
org.yaml.snakeyaml.events.StreamEndEvent v63;
org.yaml.snakeyaml.tokens.Token$ID v11, v22, v29, v34, v4, v40;
org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd v55;
org.yaml.snakeyaml.util.ArrayStack v54, v67, v71, v74, v78;
org.yaml.snakeyaml.scanner.Scanner v14, v2, v20, v25, v27, v32, v38, v43, v47, v61, v7, v9;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart;
label1:
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentEnd>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label2;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
interfaceinvoke v7.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
goto label1;
label2:
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v9 = v8.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v10 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v11 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamEnd>;
v10[0] = v11;
v12 = interfaceinvoke v9.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v10);
if v12 != 0 goto label6;
v13 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v14 = v13.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v15 = interfaceinvoke v14.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v16 = virtualinvoke v15.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v17 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v18 = specialinvoke v17.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.VersionTagsTuple processDirectives()>();
label3:
v19 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v20 = v19.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v21 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v22 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v21[0] = v22;
v23 = interfaceinvoke v20.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v21);
if v23 == 0 goto label4;
v24 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v25 = v24.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
interfaceinvoke v25.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
goto label3;
label4:
v26 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v27 = v26.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v28 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v29 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID StreamEnd>;
v28[0] = v29;
v30 = interfaceinvoke v27.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v28);
if v30 != 0 goto label6;
v31 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v32 = v31.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v33 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v34 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID DocumentStart>;
v33[0] = v34;
v35 = interfaceinvoke v32.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v33);
if v35 != 0 goto label5;
v36 = new org.yaml.snakeyaml.parser.ParserException;
v37 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v38 = v37.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v39 = interfaceinvoke v38.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v40 = virtualinvoke v39.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.tokens.Token$ID getTokenId()>();
v41 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.tokens.Token$ID)>(v40) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected \'<document start>\', but found \'\u0001\'");
v42 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v43 = v42.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v44 = interfaceinvoke v43.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v45 = virtualinvoke v44.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v36.<org.yaml.snakeyaml.parser.ParserException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>(null, null, v41, v45);
throw v36;
label5:
v46 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v47 = v46.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v48 = interfaceinvoke v47.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v49 = virtualinvoke v48.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v50 = new org.yaml.snakeyaml.events.DocumentStartEvent;
v51 = virtualinvoke v18.<org.yaml.snakeyaml.parser.VersionTagsTuple: org.yaml.snakeyaml.DumperOptions$Version getVersion()>();
v52 = virtualinvoke v18.<org.yaml.snakeyaml.parser.VersionTagsTuple: java.util.Map getTags()>();
specialinvoke v50.<org.yaml.snakeyaml.events.DocumentStartEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark,boolean,org.yaml.snakeyaml.DumperOptions$Version,java.util.Map)>(v16, v49, 1, v51, v52);
v53 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v54 = v53.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v55 = new org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd;
v56 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v55.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentEnd: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v56);
virtualinvoke v54.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v55);
v57 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v58 = new org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentContent;
v59 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v58.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentContent: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v59);
v57.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v58;
return v50;
label6:
v60 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v61 = v60.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v62 = interfaceinvoke v61.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v63 = new org.yaml.snakeyaml.events.StreamEndEvent;
v64 = virtualinvoke v62.<org.yaml.snakeyaml.tokens.StreamEndToken: org.yaml.snakeyaml.error.Mark getStartMark()>();
v65 = virtualinvoke v62.<org.yaml.snakeyaml.tokens.StreamEndToken: org.yaml.snakeyaml.error.Mark getEndMark()>();
specialinvoke v63.<org.yaml.snakeyaml.events.StreamEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v64, v65);
v66 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v67 = v66.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v68 = virtualinvoke v67.<org.yaml.snakeyaml.util.ArrayStack: boolean isEmpty()>();
if v68 != 0 goto label7;
v69 = new org.yaml.snakeyaml.error.YAMLException;
v70 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v71 = v70.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v72 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.util.ArrayStack)>(v71) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected end of stream. States left: \u0001");
specialinvoke v69.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>(v72);
throw v69;
label7:
v73 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v74 = v73.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
v75 = virtualinvoke v74.<org.yaml.snakeyaml.util.ArrayStack: boolean isEmpty()>();
if v75 != 0 goto label8;
v76 = new org.yaml.snakeyaml.error.YAMLException;
v77 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v78 = v77.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
v79 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.util.ArrayStack)>(v78) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("Unexpected end of stream. Marks left: \u0001");
specialinvoke v76.<org.yaml.snakeyaml.error.YAMLException: void <init>(java.lang.String)>(v79);
throw v76;
label8:
v80 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseDocumentStart: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v80.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = null;
return v63;
}
}