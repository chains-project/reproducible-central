class org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
private final boolean first;
final org.yaml.snakeyaml.parser.ParserImpl this$0;
public void <init>(org.yaml.snakeyaml.parser.ParserImpl, boolean)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey v0;
boolean v2;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v2 := @parameter1: boolean;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: boolean first> = v2;
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v10, v102, v103, v106, v108, v11, v15, v21, v26, v28, v33, v35, v36, v37, v41, v45, v51, v56, v59, v6, v66, v69, v70, v72, v74, v75, v78, v8, v83, v86, v87, v89, v95, v97;
org.yaml.snakeyaml.events.Event v71, v77, v88;
org.yaml.snakeyaml.error.Mark v50, v76, v93, v94;
java.lang.String v49;
org.yaml.snakeyaml.tokens.Token v13, v39, v43, v58, v91;
org.yaml.snakeyaml.events.CommentEvent v14, v40;
org.yaml.snakeyaml.tokens.Token$ID[] v17, v23, v3, v30, v53, v61, v80, v99;
org.yaml.snakeyaml.events.MappingEndEvent v92;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue v68, v73;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue v85;
boolean v101, v19, v20, v25, v32, v5, v55, v65, v82, v9;
org.yaml.snakeyaml.parser.ParserException v44;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowEndComment v107;
org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey v0, v34, v7;
org.yaml.snakeyaml.tokens.Token$ID v100, v18, v24, v31, v4, v48, v54, v62, v63, v64, v81;
org.yaml.snakeyaml.util.ArrayStack v104, v46, v67, v84, v96;
org.yaml.snakeyaml.scanner.Scanner v12, v16, v2, v22, v27, v29, v38, v42, v52, v57, v60, v79, v90, v98;
java.lang.Object v105, v47;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: boolean first>;
specialinvoke v7.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v8, v9);
v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v7;
v10 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v11 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v12 = v11.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v13 = interfaceinvoke v12.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v14 = specialinvoke v10.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v13);
return v14;
label1:
v15 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v16 = v15.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v17 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v18 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd>;
v17[0] = v18;
v19 = interfaceinvoke v16.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v17);
if v19 != 0 goto label6;
v20 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: boolean first>;
if v20 != 0 goto label3;
v21 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v22 = v21.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v23 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v24 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowEntry>;
v23[0] = v24;
v25 = interfaceinvoke v22.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v23);
if v25 == 0 goto label2;
v26 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v27 = v26.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
interfaceinvoke v27.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v28 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v29 = v28.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v30 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v31 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v30[0] = v31;
v32 = interfaceinvoke v29.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v30);
if v32 == 0 goto label3;
v33 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v34 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey;
v35 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v34.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl,boolean)>(v35, 1);
v33.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v34;
v36 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v37 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v38 = v37.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v39 = interfaceinvoke v38.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v40 = specialinvoke v36.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v39);
return v40;
label2:
v41 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v42 = v41.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v43 = interfaceinvoke v42.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v44 = new org.yaml.snakeyaml.parser.ParserException;
v45 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v46 = v45.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
v47 = virtualinvoke v46.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v48 = virtualinvoke v43.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.tokens.Token$ID getTokenId()>();
v49 = dynamicinvoke "makeConcatWithConstants" <java.lang.String (org.yaml.snakeyaml.tokens.Token$ID)>(v48) <java.lang.invoke.StringConcatFactory: java.lang.invoke.CallSite makeConcatWithConstants(java.lang.invoke.MethodHandles$Lookup,java.lang.String,java.lang.invoke.MethodType,java.lang.String,java.lang.Object[])>("expected \',\' or \'}\', but got \u0001");
v50 = virtualinvoke v43.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
specialinvoke v44.<org.yaml.snakeyaml.parser.ParserException: void <init>(java.lang.String,org.yaml.snakeyaml.error.Mark,java.lang.String,org.yaml.snakeyaml.error.Mark)>("while parsing a flow mapping", v47, v49, v50);
throw v44;
label3:
v51 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v52 = v51.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v53 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v54 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Key>;
v53[0] = v54;
v55 = interfaceinvoke v52.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v53);
if v55 == 0 goto label5;
v56 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v57 = v56.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v58 = interfaceinvoke v57.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v59 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v60 = v59.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v61 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[3];
v62 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Value>;
v61[0] = v62;
v63 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowEntry>;
v61[1] = v63;
v64 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd>;
v61[2] = v64;
v65 = interfaceinvoke v60.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v61);
if v65 != 0 goto label4;
v66 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v67 = v66.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v68 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue;
v69 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v68.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v69);
virtualinvoke v67.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v68);
v70 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v71 = specialinvoke v70.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseFlowNode()>();
return v71;
label4:
v72 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v73 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue;
v74 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v73.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v74);
v72.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v73;
v75 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v76 = virtualinvoke v58.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
v77 = specialinvoke v75.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event processEmptyScalar(org.yaml.snakeyaml.error.Mark)>(v76);
return v77;
label5:
v78 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v79 = v78.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v80 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v81 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID FlowMappingEnd>;
v80[0] = v81;
v82 = interfaceinvoke v79.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v80);
if v82 != 0 goto label6;
v83 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v84 = v83.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v85 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue;
v86 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v85.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingEmptyValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v86);
virtualinvoke v84.<org.yaml.snakeyaml.util.ArrayStack: void push(java.lang.Object)>(v85);
v87 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v88 = specialinvoke v87.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.Event parseFlowNode()>();
return v88;
label6:
v89 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v90 = v89.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v91 = interfaceinvoke v90.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v92 = new org.yaml.snakeyaml.events.MappingEndEvent;
v93 = virtualinvoke v91.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v94 = virtualinvoke v91.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
specialinvoke v92.<org.yaml.snakeyaml.events.MappingEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v93, v94);
v95 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v96 = v95.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack marks>;
virtualinvoke v96.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v97 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v98 = v97.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v99 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v100 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v99[0] = v100;
v101 = interfaceinvoke v98.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v99);
if v101 != 0 goto label7;
v102 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v103 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v104 = v103.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v105 = virtualinvoke v104.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v102.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v105;
goto label8;
label7:
v106 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v107 = new org.yaml.snakeyaml.parser.ParserImpl$ParseFlowEndComment;
v108 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowMappingKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v107.<org.yaml.snakeyaml.parser.ParserImpl$ParseFlowEndComment: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v108);
v106.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v107;
label8:
return v92;
}
}