class org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey extends java.lang.Object implements org.yaml.snakeyaml.parser.Production
{
final org.yaml.snakeyaml.parser.ParserImpl this$0;
private void <init>(org.yaml.snakeyaml.parser.ParserImpl)
{
org.yaml.snakeyaml.parser.ParserImpl v1;
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey v0;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey;
v1 := @parameter0: org.yaml.snakeyaml.parser.ParserImpl;
v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.events.Event produce()
{
org.yaml.snakeyaml.parser.ParserImpl v1, v10, v14, v19, v23, v25, v31, v32, v6, v8, v9;
org.yaml.snakeyaml.events.Event v24;
org.yaml.snakeyaml.events.SequenceEndEvent v28;
boolean v18, v5;
org.yaml.snakeyaml.error.Mark v29, v30;
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey v0, v7;
org.yaml.snakeyaml.tokens.Token v12, v21, v27;
org.yaml.snakeyaml.tokens.Token$ID v17, v4;
org.yaml.snakeyaml.events.CommentEvent v13;
org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue v22;
org.yaml.snakeyaml.util.ArrayStack v33;
org.yaml.snakeyaml.scanner.Scanner v11, v15, v2, v20, v26;
org.yaml.snakeyaml.tokens.Token$ID[] v16, v3;
java.lang.Object v34;
v0 := @this: org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey;
v1 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v2 = v1.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v3 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v4 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID Comment>;
v3[0] = v4;
v5 = interfaceinvoke v2.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v3);
if v5 == 0 goto label1;
v6 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v7 = new org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey;
v8 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v7.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: void <init>(org.yaml.snakeyaml.parser.ParserImpl)>(v8);
v6.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v7;
v9 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v10 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v11 = v10.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v12 = interfaceinvoke v11.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v13 = specialinvoke v9.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.events.CommentEvent produceCommentEvent(org.yaml.snakeyaml.tokens.CommentToken)>(v12);
return v13;
label1:
v14 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v15 = v14.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v16 = newarray (org.yaml.snakeyaml.tokens.Token$ID)[1];
v17 = <org.yaml.snakeyaml.tokens.Token$ID: org.yaml.snakeyaml.tokens.Token$ID BlockEntry>;
v16[0] = v17;
v18 = interfaceinvoke v15.<org.yaml.snakeyaml.scanner.Scanner: boolean checkToken(org.yaml.snakeyaml.tokens.Token$ID[])>(v16);
if v18 == 0 goto label2;
v19 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v20 = v19.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v21 = interfaceinvoke v20.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token getToken()>();
v22 = new org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue;
v23 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
specialinvoke v22.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: void <init>(org.yaml.snakeyaml.parser.ParserImpl,org.yaml.snakeyaml.tokens.BlockEntryToken)>(v23, v21);
v24 = virtualinvoke v22.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryValue: org.yaml.snakeyaml.events.Event produce()>();
return v24;
label2:
v25 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v26 = v25.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.scanner.Scanner scanner>;
v27 = interfaceinvoke v26.<org.yaml.snakeyaml.scanner.Scanner: org.yaml.snakeyaml.tokens.Token peekToken()>();
v28 = new org.yaml.snakeyaml.events.SequenceEndEvent;
v29 = virtualinvoke v27.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getStartMark()>();
v30 = virtualinvoke v27.<org.yaml.snakeyaml.tokens.Token: org.yaml.snakeyaml.error.Mark getEndMark()>();
specialinvoke v28.<org.yaml.snakeyaml.events.SequenceEndEvent: void <init>(org.yaml.snakeyaml.error.Mark,org.yaml.snakeyaml.error.Mark)>(v29, v30);
v31 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v32 = v0.<org.yaml.snakeyaml.parser.ParserImpl$ParseIndentlessSequenceEntryKey: org.yaml.snakeyaml.parser.ParserImpl this$0>;
v33 = v32.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.util.ArrayStack states>;
v34 = virtualinvoke v33.<org.yaml.snakeyaml.util.ArrayStack: java.lang.Object pop()>();
v31.<org.yaml.snakeyaml.parser.ParserImpl: org.yaml.snakeyaml.parser.Production state> = v34;
return v28;
}
}