public class org.yaml.snakeyaml.reader.UnicodeReader extends java.io.Reader
{
private static final java.nio.charset.Charset UTF8;
private static final java.nio.charset.Charset UTF16BE;
private static final java.nio.charset.Charset UTF16LE;
java.io.PushbackInputStream internalIn;
java.io.InputStreamReader internalIn2;
private static final int BOM_SIZE;
public void <init>(java.io.InputStream)
{
org.yaml.snakeyaml.reader.UnicodeReader v0;
java.io.InputStream v1;
java.io.PushbackInputStream v2;
v0 := @this: org.yaml.snakeyaml.reader.UnicodeReader;
v1 := @parameter0: java.io.InputStream;
specialinvoke v0.<java.io.Reader: void <init>()>();
v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.InputStreamReader internalIn2> = null;
v2 = new java.io.PushbackInputStream;
specialinvoke v2.<java.io.PushbackInputStream: void <init>(java.io.InputStream,int)>(v1, 3);
v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.PushbackInputStream internalIn> = v2;
return;
}
public java.lang.String getEncoding()
{
org.yaml.snakeyaml.reader.UnicodeReader v0;
java.lang.String v2;
java.io.InputStreamReader v1;
v0 := @this: org.yaml.snakeyaml.reader.UnicodeReader;
v1 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.InputStreamReader internalIn2>;
v2 = virtualinvoke v1.<java.io.InputStreamReader: java.lang.String getEncoding()>();
return v2;
}
protected void init() throws java.io.IOException
{
org.yaml.snakeyaml.reader.UnicodeReader v0;
byte[] v2;
java.io.PushbackInputStream v22, v28, v3;
byte v10, v14, v16, v18, v20, v6, v8;
java.nio.charset.Charset v12;
java.nio.charset.CodingErrorAction v25;
int v11, v13, v15, v17, v19, v21, v23, v4, v5, v7, v9;
java.nio.charset.CharsetDecoder v24, v26;
java.io.InputStreamReader v1, v27;
v0 := @this: org.yaml.snakeyaml.reader.UnicodeReader;
v1 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.InputStreamReader internalIn2>;
if v1 == null goto label1;
return;
label1:
v2 = newarray (byte)[3];
v3 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.PushbackInputStream internalIn>;
v4 = lengthof v2;
v5 = virtualinvoke v3.<java.io.PushbackInputStream: int read(byte[],int,int)>(v2, 0, v4);
v6 = v2[0];
v7 = (int) -17;
if v6 != v7 goto label2;
v8 = v2[1];
v9 = (int) -69;
if v8 != v9 goto label2;
v10 = v2[2];
v11 = (int) -65;
if v10 != v11 goto label2;
v12 = <org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF8>;
v13 = v5 - 3;
goto label5;
label2:
v14 = v2[0];
v15 = (int) -2;
if v14 != v15 goto label3;
v16 = v2[1];
v17 = (int) -1;
if v16 != v17 goto label3;
v12 = <org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF16BE>;
v13 = v5 - 2;
goto label5;
label3:
v18 = v2[0];
v19 = (int) -1;
if v18 != v19 goto label4;
v20 = v2[1];
v21 = (int) -2;
if v20 != v21 goto label4;
v12 = <org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF16LE>;
v13 = v5 - 2;
goto label5;
label4:
v12 = <org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF8>;
v13 = v5;
label5:
if v13 <= 0 goto label6;
v22 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.PushbackInputStream internalIn>;
v23 = v5 - v13;
virtualinvoke v22.<java.io.PushbackInputStream: void unread(byte[],int,int)>(v2, v23, v13);
label6:
v24 = virtualinvoke v12.<java.nio.charset.Charset: java.nio.charset.CharsetDecoder newDecoder()>();
v25 = <java.nio.charset.CodingErrorAction: java.nio.charset.CodingErrorAction REPORT>;
v26 = virtualinvoke v24.<java.nio.charset.CharsetDecoder: java.nio.charset.CharsetDecoder onUnmappableCharacter(java.nio.charset.CodingErrorAction)>(v25);
v27 = new java.io.InputStreamReader;
v28 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.PushbackInputStream internalIn>;
specialinvoke v27.<java.io.InputStreamReader: void <init>(java.io.InputStream,java.nio.charset.CharsetDecoder)>(v28, v26);
v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.InputStreamReader internalIn2> = v27;
return;
}
public void close() throws java.io.IOException
{
org.yaml.snakeyaml.reader.UnicodeReader v0;
java.io.InputStreamReader v1;
v0 := @this: org.yaml.snakeyaml.reader.UnicodeReader;
virtualinvoke v0.<org.yaml.snakeyaml.reader.UnicodeReader: void init()>();
v1 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.InputStreamReader internalIn2>;
virtualinvoke v1.<java.io.InputStreamReader: void close()>();
return;
}
public int read(char[], int, int) throws java.io.IOException
{
org.yaml.snakeyaml.reader.UnicodeReader v0;
int v2, v3, v5;
char[] v1;
java.io.InputStreamReader v4;
v0 := @this: org.yaml.snakeyaml.reader.UnicodeReader;
v1 := @parameter0: char[];
v2 := @parameter1: int;
v3 := @parameter2: int;
virtualinvoke v0.<org.yaml.snakeyaml.reader.UnicodeReader: void init()>();
v4 = v0.<org.yaml.snakeyaml.reader.UnicodeReader: java.io.InputStreamReader internalIn2>;
v5 = virtualinvoke v4.<java.io.InputStreamReader: int read(char[],int,int)>(v1, v2, v3);
return v5;
}
static void <clinit>()
{
java.nio.charset.Charset v0, v1, v2;
v0 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_8>;
<org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF8> = v0;
v1 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16BE>;
<org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF16BE> = v1;
v2 = <java.nio.charset.StandardCharsets: java.nio.charset.Charset UTF_16LE>;
<org.yaml.snakeyaml.reader.UnicodeReader: java.nio.charset.Charset UTF16LE> = v2;
return;
}
}