class org.yaml.snakeyaml.representer.BaseRepresenter$1 extends java.util.IdentityHashMap
{
private static final long serialVersionUID;
final org.yaml.snakeyaml.representer.BaseRepresenter this$0;
void <init>(org.yaml.snakeyaml.representer.BaseRepresenter)
{
org.yaml.snakeyaml.representer.BaseRepresenter v1;
org.yaml.snakeyaml.representer.BaseRepresenter$1 v0;
v0 := @this: org.yaml.snakeyaml.representer.BaseRepresenter$1;
v1 := @parameter0: org.yaml.snakeyaml.representer.BaseRepresenter;
v0.<org.yaml.snakeyaml.representer.BaseRepresenter$1: org.yaml.snakeyaml.representer.BaseRepresenter this$0> = v1;
specialinvoke v0.<java.util.IdentityHashMap: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node put(java.lang.Object, org.yaml.snakeyaml.nodes.Node)
{
org.yaml.snakeyaml.nodes.Node v2;
org.yaml.snakeyaml.nodes.AnchorNode v3;
java.lang.Object v1, v4;
org.yaml.snakeyaml.representer.BaseRepresenter$1 v0;
v0 := @this: org.yaml.snakeyaml.representer.BaseRepresenter$1;
v1 := @parameter0: java.lang.Object;
v2 := @parameter1: org.yaml.snakeyaml.nodes.Node;
v3 = new org.yaml.snakeyaml.nodes.AnchorNode;
specialinvoke v3.<org.yaml.snakeyaml.nodes.AnchorNode: void <init>(org.yaml.snakeyaml.nodes.Node)>(v2);
v4 = specialinvoke v0.<java.util.IdentityHashMap: java.lang.Object put(java.lang.Object,java.lang.Object)>(v1, v3);
return v4;
}
}