public class org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate extends java.lang.Object implements org.yaml.snakeyaml.representer.Represent
{
final org.yaml.snakeyaml.representer.SafeRepresenter this$0;
protected void <init>(org.yaml.snakeyaml.representer.SafeRepresenter)
{
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate v0;
org.yaml.snakeyaml.representer.SafeRepresenter v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate;
v1 := @parameter0: org.yaml.snakeyaml.representer.SafeRepresenter;
v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate: org.yaml.snakeyaml.representer.SafeRepresenter this$0> = v1;
specialinvoke v0.<java.lang.Object: void <init>()>();
return;
}
public org.yaml.snakeyaml.nodes.Node representData(java.lang.Object)
{
java.util.Date v19;
org.yaml.snakeyaml.nodes.Node v34;
boolean v2;
org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate v0;
java.util.TimeZone v18, v4, v5;
org.yaml.snakeyaml.representer.SafeRepresenter v27, v28, v3, v6;
java.lang.StringBuilder v15;
org.yaml.snakeyaml.DumperOptions$ScalarStyle v33;
long v20;
int v10, v11, v12, v13, v14, v17, v21, v22, v23, v24, v25, v26, v7, v8, v9;
java.lang.String v16, v32;
org.yaml.snakeyaml.nodes.Tag v30, v31;
java.lang.Class v29;
java.lang.Object v1;
v0 := @this: org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate;
v1 := @parameter0: java.lang.Object;
v2 = v1 instanceof java.util.Calendar;
if v2 != 0 goto label03;
v3 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v4 = virtualinvoke v3.<org.yaml.snakeyaml.representer.SafeRepresenter: java.util.TimeZone getTimeZone()>();
if v4 != null goto label01;
v5 = staticinvoke <java.util.TimeZone: java.util.TimeZone getTimeZone(java.lang.String)>("UTC");
goto label02;
label01:
v6 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v5 = v6.<org.yaml.snakeyaml.representer.SafeRepresenter: java.util.TimeZone timeZone>;
label02:
v1 = staticinvoke <java.util.Calendar: java.util.Calendar getInstance(java.util.TimeZone)>(v5);
virtualinvoke v1.<java.util.Calendar: void setTime(java.util.Date)>(v1);
label03:
v7 = virtualinvoke v1.<java.util.Calendar: int get(int)>(1);
v8 = virtualinvoke v1.<java.util.Calendar: int get(int)>(2);
v9 = v8 + 1;
v10 = virtualinvoke v1.<java.util.Calendar: int get(int)>(5);
v11 = virtualinvoke v1.<java.util.Calendar: int get(int)>(11);
v12 = virtualinvoke v1.<java.util.Calendar: int get(int)>(12);
v13 = virtualinvoke v1.<java.util.Calendar: int get(int)>(13);
v14 = virtualinvoke v1.<java.util.Calendar: int get(int)>(14);
v15 = new java.lang.StringBuilder;
v16 = staticinvoke <java.lang.String: java.lang.String valueOf(int)>(v7);
specialinvoke v15.<java.lang.StringBuilder: void <init>(java.lang.String)>(v16);
label04:
v17 = virtualinvoke v15.<java.lang.StringBuilder: int length()>();
if v17 >= 4 goto label05;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder insert(int,java.lang.String)>(0, "0");
goto label04;
label05:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
if v9 >= 10 goto label06;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
label06:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v9);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("-");
if v10 >= 10 goto label07;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
label07:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v10);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("T");
if v11 >= 10 goto label08;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
label08:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v11);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
if v12 >= 10 goto label09;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
label09:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v12);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(":");
if v13 >= 10 goto label10;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>("0");
label10:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v13);
if v14 <= 0 goto label14;
if v14 >= 10 goto label11;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".00");
goto label13;
label11:
if v14 >= 100 goto label12;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".0");
goto label13;
label12:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(java.lang.String)>(".");
label13:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v14);
label14:
v18 = virtualinvoke v1.<java.util.Calendar: java.util.TimeZone getTimeZone()>();
v19 = virtualinvoke v1.<java.util.Calendar: java.util.Date getTime()>();
v20 = virtualinvoke v19.<java.util.Date: long getTime()>();
v21 = virtualinvoke v18.<java.util.TimeZone: int getOffset(long)>(v20);
if v21 != 0 goto label15;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(90);
goto label20;
label15:
if v21 >= 0 goto label16;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(45);
v22 = (int) -1;
v21 = v21 * v22;
goto label17;
label16:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(43);
label17:
v23 = (int) 60000;
v24 = v21 / v23;
v25 = v24 / 60;
v26 = v24 % 60;
if v25 >= 10 goto label18;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
label18:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v25);
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(58);
if v26 >= 10 goto label19;
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(char)>(48);
label19:
virtualinvoke v15.<java.lang.StringBuilder: java.lang.StringBuilder append(int)>(v26);
label20:
v27 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v28 = v0.<org.yaml.snakeyaml.representer.SafeRepresenter$RepresentDate: org.yaml.snakeyaml.representer.SafeRepresenter this$0>;
v29 = virtualinvoke v1.<java.lang.Object: java.lang.Class getClass()>();
v30 = <org.yaml.snakeyaml.nodes.Tag: org.yaml.snakeyaml.nodes.Tag TIMESTAMP>;
v31 = virtualinvoke v28.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Tag getTag(java.lang.Class,org.yaml.snakeyaml.nodes.Tag)>(v29, v30);
v32 = virtualinvoke v15.<java.lang.StringBuilder: java.lang.String toString()>();
v33 = <org.yaml.snakeyaml.DumperOptions$ScalarStyle: org.yaml.snakeyaml.DumperOptions$ScalarStyle PLAIN>;
v34 = virtualinvoke v27.<org.yaml.snakeyaml.representer.SafeRepresenter: org.yaml.snakeyaml.nodes.Node representScalar(org.yaml.snakeyaml.nodes.Tag,java.lang.String,org.yaml.snakeyaml.DumperOptions$ScalarStyle)>(v31, v32, v33);
return v34;
}
}